/*
Identity Security Cloud V3 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v3

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the GetOAuthClientResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOAuthClientResponse{}

// GetOAuthClientResponse struct for GetOAuthClientResponse
type GetOAuthClientResponse struct {
	// ID of the OAuth client
	Id string `json:"id"`
	// The name of the business the API Client should belong to
	BusinessName NullableString `json:"businessName"`
	// The homepage URL associated with the owner of the API Client
	HomepageUrl NullableString `json:"homepageUrl"`
	// A human-readable name for the API Client
	Name string `json:"name"`
	// A description of the API Client
	Description NullableString `json:"description"`
	// The number of seconds an access token generated for this API Client is valid for
	AccessTokenValiditySeconds int32 `json:"accessTokenValiditySeconds"`
	// The number of seconds a refresh token generated for this API Client is valid for
	RefreshTokenValiditySeconds int32 `json:"refreshTokenValiditySeconds"`
	// A list of the approved redirect URIs used with the authorization_code flow
	RedirectUris []string `json:"redirectUris"`
	// A list of OAuth 2.0 grant types this API Client can be used with
	GrantTypes []GrantType `json:"grantTypes"`
	AccessType AccessType `json:"accessType"`
	Type ClientType `json:"type"`
	// An indicator of whether the API Client can be used for requests internal to IDN
	Internal bool `json:"internal"`
	// An indicator of whether the API Client is enabled for use
	Enabled bool `json:"enabled"`
	// An indicator of whether the API Client supports strong authentication
	StrongAuthSupported bool `json:"strongAuthSupported"`
	// An indicator of whether the API Client supports the serialization of SAML claims when used with the authorization_code flow
	ClaimsSupported bool `json:"claimsSupported"`
	// The date and time, down to the millisecond, when the API Client was created
	Created time.Time `json:"created"`
	// The date and time, down to the millisecond, when the API Client was last updated
	Modified time.Time `json:"modified"`
	Secret NullableString `json:"secret,omitempty"`
	Metadata NullableString `json:"metadata,omitempty"`
	// The date and time, down to the millisecond, when this API Client was last used to generate an access token. This timestamp does not get updated on every API Client usage, but only once a day. This property can be useful for identifying which API Clients are no longer actively used and can be removed.
	LastUsed NullableTime `json:"lastUsed,omitempty"`
	// Scopes of the API Client.
	Scope []string `json:"scope"`
	AdditionalProperties map[string]interface{}
}

type _GetOAuthClientResponse GetOAuthClientResponse

// NewGetOAuthClientResponse instantiates a new GetOAuthClientResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOAuthClientResponse(id string, businessName NullableString, homepageUrl NullableString, name string, description NullableString, accessTokenValiditySeconds int32, refreshTokenValiditySeconds int32, redirectUris []string, grantTypes []GrantType, accessType AccessType, type_ ClientType, internal bool, enabled bool, strongAuthSupported bool, claimsSupported bool, created time.Time, modified time.Time, scope []string) *GetOAuthClientResponse {
	this := GetOAuthClientResponse{}
	this.Id = id
	this.BusinessName = businessName
	this.HomepageUrl = homepageUrl
	this.Name = name
	this.Description = description
	this.AccessTokenValiditySeconds = accessTokenValiditySeconds
	this.RefreshTokenValiditySeconds = refreshTokenValiditySeconds
	this.RedirectUris = redirectUris
	this.GrantTypes = grantTypes
	this.AccessType = accessType
	this.Type = type_
	this.Internal = internal
	this.Enabled = enabled
	this.StrongAuthSupported = strongAuthSupported
	this.ClaimsSupported = claimsSupported
	this.Created = created
	this.Modified = modified
	this.Scope = scope
	return &this
}

// NewGetOAuthClientResponseWithDefaults instantiates a new GetOAuthClientResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOAuthClientResponseWithDefaults() *GetOAuthClientResponse {
	this := GetOAuthClientResponse{}
	return &this
}

// GetId returns the Id field value
func (o *GetOAuthClientResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetOAuthClientResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetOAuthClientResponse) SetId(v string) {
	o.Id = v
}

// GetBusinessName returns the BusinessName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GetOAuthClientResponse) GetBusinessName() string {
	if o == nil || o.BusinessName.Get() == nil {
		var ret string
		return ret
	}

	return *o.BusinessName.Get()
}

// GetBusinessNameOk returns a tuple with the BusinessName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOAuthClientResponse) GetBusinessNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BusinessName.Get(), o.BusinessName.IsSet()
}

// SetBusinessName sets field value
func (o *GetOAuthClientResponse) SetBusinessName(v string) {
	o.BusinessName.Set(&v)
}

// GetHomepageUrl returns the HomepageUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GetOAuthClientResponse) GetHomepageUrl() string {
	if o == nil || o.HomepageUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.HomepageUrl.Get()
}

// GetHomepageUrlOk returns a tuple with the HomepageUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOAuthClientResponse) GetHomepageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HomepageUrl.Get(), o.HomepageUrl.IsSet()
}

// SetHomepageUrl sets field value
func (o *GetOAuthClientResponse) SetHomepageUrl(v string) {
	o.HomepageUrl.Set(&v)
}

// GetName returns the Name field value
func (o *GetOAuthClientResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GetOAuthClientResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GetOAuthClientResponse) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GetOAuthClientResponse) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOAuthClientResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *GetOAuthClientResponse) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetAccessTokenValiditySeconds returns the AccessTokenValiditySeconds field value
func (o *GetOAuthClientResponse) GetAccessTokenValiditySeconds() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccessTokenValiditySeconds
}

// GetAccessTokenValiditySecondsOk returns a tuple with the AccessTokenValiditySeconds field value
// and a boolean to check if the value has been set.
func (o *GetOAuthClientResponse) GetAccessTokenValiditySecondsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessTokenValiditySeconds, true
}

// SetAccessTokenValiditySeconds sets field value
func (o *GetOAuthClientResponse) SetAccessTokenValiditySeconds(v int32) {
	o.AccessTokenValiditySeconds = v
}

// GetRefreshTokenValiditySeconds returns the RefreshTokenValiditySeconds field value
func (o *GetOAuthClientResponse) GetRefreshTokenValiditySeconds() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RefreshTokenValiditySeconds
}

// GetRefreshTokenValiditySecondsOk returns a tuple with the RefreshTokenValiditySeconds field value
// and a boolean to check if the value has been set.
func (o *GetOAuthClientResponse) GetRefreshTokenValiditySecondsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefreshTokenValiditySeconds, true
}

// SetRefreshTokenValiditySeconds sets field value
func (o *GetOAuthClientResponse) SetRefreshTokenValiditySeconds(v int32) {
	o.RefreshTokenValiditySeconds = v
}

// GetRedirectUris returns the RedirectUris field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *GetOAuthClientResponse) GetRedirectUris() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RedirectUris
}

// GetRedirectUrisOk returns a tuple with the RedirectUris field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOAuthClientResponse) GetRedirectUrisOk() ([]string, bool) {
	if o == nil || IsNil(o.RedirectUris) {
		return nil, false
	}
	return o.RedirectUris, true
}

// SetRedirectUris sets field value
func (o *GetOAuthClientResponse) SetRedirectUris(v []string) {
	o.RedirectUris = v
}

// GetGrantTypes returns the GrantTypes field value
func (o *GetOAuthClientResponse) GetGrantTypes() []GrantType {
	if o == nil {
		var ret []GrantType
		return ret
	}

	return o.GrantTypes
}

// GetGrantTypesOk returns a tuple with the GrantTypes field value
// and a boolean to check if the value has been set.
func (o *GetOAuthClientResponse) GetGrantTypesOk() ([]GrantType, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrantTypes, true
}

// SetGrantTypes sets field value
func (o *GetOAuthClientResponse) SetGrantTypes(v []GrantType) {
	o.GrantTypes = v
}

// GetAccessType returns the AccessType field value
func (o *GetOAuthClientResponse) GetAccessType() AccessType {
	if o == nil {
		var ret AccessType
		return ret
	}

	return o.AccessType
}

// GetAccessTypeOk returns a tuple with the AccessType field value
// and a boolean to check if the value has been set.
func (o *GetOAuthClientResponse) GetAccessTypeOk() (*AccessType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessType, true
}

// SetAccessType sets field value
func (o *GetOAuthClientResponse) SetAccessType(v AccessType) {
	o.AccessType = v
}

// GetType returns the Type field value
func (o *GetOAuthClientResponse) GetType() ClientType {
	if o == nil {
		var ret ClientType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GetOAuthClientResponse) GetTypeOk() (*ClientType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GetOAuthClientResponse) SetType(v ClientType) {
	o.Type = v
}

// GetInternal returns the Internal field value
func (o *GetOAuthClientResponse) GetInternal() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Internal
}

// GetInternalOk returns a tuple with the Internal field value
// and a boolean to check if the value has been set.
func (o *GetOAuthClientResponse) GetInternalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Internal, true
}

// SetInternal sets field value
func (o *GetOAuthClientResponse) SetInternal(v bool) {
	o.Internal = v
}

// GetEnabled returns the Enabled field value
func (o *GetOAuthClientResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *GetOAuthClientResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *GetOAuthClientResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetStrongAuthSupported returns the StrongAuthSupported field value
func (o *GetOAuthClientResponse) GetStrongAuthSupported() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.StrongAuthSupported
}

// GetStrongAuthSupportedOk returns a tuple with the StrongAuthSupported field value
// and a boolean to check if the value has been set.
func (o *GetOAuthClientResponse) GetStrongAuthSupportedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StrongAuthSupported, true
}

// SetStrongAuthSupported sets field value
func (o *GetOAuthClientResponse) SetStrongAuthSupported(v bool) {
	o.StrongAuthSupported = v
}

// GetClaimsSupported returns the ClaimsSupported field value
func (o *GetOAuthClientResponse) GetClaimsSupported() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ClaimsSupported
}

// GetClaimsSupportedOk returns a tuple with the ClaimsSupported field value
// and a boolean to check if the value has been set.
func (o *GetOAuthClientResponse) GetClaimsSupportedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClaimsSupported, true
}

// SetClaimsSupported sets field value
func (o *GetOAuthClientResponse) SetClaimsSupported(v bool) {
	o.ClaimsSupported = v
}

// GetCreated returns the Created field value
func (o *GetOAuthClientResponse) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *GetOAuthClientResponse) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *GetOAuthClientResponse) SetCreated(v time.Time) {
	o.Created = v
}

// GetModified returns the Modified field value
func (o *GetOAuthClientResponse) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *GetOAuthClientResponse) GetModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *GetOAuthClientResponse) SetModified(v time.Time) {
	o.Modified = v
}

// GetSecret returns the Secret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOAuthClientResponse) GetSecret() string {
	if o == nil || IsNil(o.Secret.Get()) {
		var ret string
		return ret
	}
	return *o.Secret.Get()
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOAuthClientResponse) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Secret.Get(), o.Secret.IsSet()
}

// HasSecret returns a boolean if a field has been set.
func (o *GetOAuthClientResponse) HasSecret() bool {
	if o != nil && o.Secret.IsSet() {
		return true
	}

	return false
}

// SetSecret gets a reference to the given NullableString and assigns it to the Secret field.
func (o *GetOAuthClientResponse) SetSecret(v string) {
	o.Secret.Set(&v)
}
// SetSecretNil sets the value for Secret to be an explicit nil
func (o *GetOAuthClientResponse) SetSecretNil() {
	o.Secret.Set(nil)
}

// UnsetSecret ensures that no value is present for Secret, not even an explicit nil
func (o *GetOAuthClientResponse) UnsetSecret() {
	o.Secret.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOAuthClientResponse) GetMetadata() string {
	if o == nil || IsNil(o.Metadata.Get()) {
		var ret string
		return ret
	}
	return *o.Metadata.Get()
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOAuthClientResponse) GetMetadataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Metadata.Get(), o.Metadata.IsSet()
}

// HasMetadata returns a boolean if a field has been set.
func (o *GetOAuthClientResponse) HasMetadata() bool {
	if o != nil && o.Metadata.IsSet() {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given NullableString and assigns it to the Metadata field.
func (o *GetOAuthClientResponse) SetMetadata(v string) {
	o.Metadata.Set(&v)
}
// SetMetadataNil sets the value for Metadata to be an explicit nil
func (o *GetOAuthClientResponse) SetMetadataNil() {
	o.Metadata.Set(nil)
}

// UnsetMetadata ensures that no value is present for Metadata, not even an explicit nil
func (o *GetOAuthClientResponse) UnsetMetadata() {
	o.Metadata.Unset()
}

// GetLastUsed returns the LastUsed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOAuthClientResponse) GetLastUsed() time.Time {
	if o == nil || IsNil(o.LastUsed.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastUsed.Get()
}

// GetLastUsedOk returns a tuple with the LastUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOAuthClientResponse) GetLastUsedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUsed.Get(), o.LastUsed.IsSet()
}

// HasLastUsed returns a boolean if a field has been set.
func (o *GetOAuthClientResponse) HasLastUsed() bool {
	if o != nil && o.LastUsed.IsSet() {
		return true
	}

	return false
}

// SetLastUsed gets a reference to the given NullableTime and assigns it to the LastUsed field.
func (o *GetOAuthClientResponse) SetLastUsed(v time.Time) {
	o.LastUsed.Set(&v)
}
// SetLastUsedNil sets the value for LastUsed to be an explicit nil
func (o *GetOAuthClientResponse) SetLastUsedNil() {
	o.LastUsed.Set(nil)
}

// UnsetLastUsed ensures that no value is present for LastUsed, not even an explicit nil
func (o *GetOAuthClientResponse) UnsetLastUsed() {
	o.LastUsed.Unset()
}

// GetScope returns the Scope field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *GetOAuthClientResponse) GetScope() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOAuthClientResponse) GetScopeOk() ([]string, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// SetScope sets field value
func (o *GetOAuthClientResponse) SetScope(v []string) {
	o.Scope = v
}

func (o GetOAuthClientResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOAuthClientResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["businessName"] = o.BusinessName.Get()
	toSerialize["homepageUrl"] = o.HomepageUrl.Get()
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description.Get()
	toSerialize["accessTokenValiditySeconds"] = o.AccessTokenValiditySeconds
	toSerialize["refreshTokenValiditySeconds"] = o.RefreshTokenValiditySeconds
	if o.RedirectUris != nil {
		toSerialize["redirectUris"] = o.RedirectUris
	}
	toSerialize["grantTypes"] = o.GrantTypes
	toSerialize["accessType"] = o.AccessType
	toSerialize["type"] = o.Type
	toSerialize["internal"] = o.Internal
	toSerialize["enabled"] = o.Enabled
	toSerialize["strongAuthSupported"] = o.StrongAuthSupported
	toSerialize["claimsSupported"] = o.ClaimsSupported
	toSerialize["created"] = o.Created
	toSerialize["modified"] = o.Modified
	if o.Secret.IsSet() {
		toSerialize["secret"] = o.Secret.Get()
	}
	if o.Metadata.IsSet() {
		toSerialize["metadata"] = o.Metadata.Get()
	}
	if o.LastUsed.IsSet() {
		toSerialize["lastUsed"] = o.LastUsed.Get()
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetOAuthClientResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"businessName",
		"homepageUrl",
		"name",
		"description",
		"accessTokenValiditySeconds",
		"refreshTokenValiditySeconds",
		"redirectUris",
		"grantTypes",
		"accessType",
		"type",
		"internal",
		"enabled",
		"strongAuthSupported",
		"claimsSupported",
		"created",
		"modified",
		"scope",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetOAuthClientResponse := _GetOAuthClientResponse{}

	err = json.Unmarshal(data, &varGetOAuthClientResponse)

	if err != nil {
		return err
	}

	*o = GetOAuthClientResponse(varGetOAuthClientResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "businessName")
		delete(additionalProperties, "homepageUrl")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "accessTokenValiditySeconds")
		delete(additionalProperties, "refreshTokenValiditySeconds")
		delete(additionalProperties, "redirectUris")
		delete(additionalProperties, "grantTypes")
		delete(additionalProperties, "accessType")
		delete(additionalProperties, "type")
		delete(additionalProperties, "internal")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "strongAuthSupported")
		delete(additionalProperties, "claimsSupported")
		delete(additionalProperties, "created")
		delete(additionalProperties, "modified")
		delete(additionalProperties, "secret")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "lastUsed")
		delete(additionalProperties, "scope")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetOAuthClientResponse struct {
	value *GetOAuthClientResponse
	isSet bool
}

func (v NullableGetOAuthClientResponse) Get() *GetOAuthClientResponse {
	return v.value
}

func (v *NullableGetOAuthClientResponse) Set(val *GetOAuthClientResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOAuthClientResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOAuthClientResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOAuthClientResponse(val *GetOAuthClientResponse) *NullableGetOAuthClientResponse {
	return &NullableGetOAuthClientResponse{value: val, isSet: true}
}

func (v NullableGetOAuthClientResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOAuthClientResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


