/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v3

import (
	"encoding/json"
)

// checks if the AccessProfileBulkDeleteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessProfileBulkDeleteRequest{}

// AccessProfileBulkDeleteRequest struct for AccessProfileBulkDeleteRequest
type AccessProfileBulkDeleteRequest struct {
	// List of IDs of Access Profiles to be deleted.
	AccessProfileIds []string `json:"accessProfileIds,omitempty"`
	// If **true**, silently skip over any of the specified Access Profiles if they cannot be deleted because they are in use. If **false**, no deletions will be attempted if any of the Access Profiles are in use.
	BestEffortOnly *bool `json:"bestEffortOnly,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccessProfileBulkDeleteRequest AccessProfileBulkDeleteRequest

// NewAccessProfileBulkDeleteRequest instantiates a new AccessProfileBulkDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessProfileBulkDeleteRequest() *AccessProfileBulkDeleteRequest {
	this := AccessProfileBulkDeleteRequest{}
	return &this
}

// NewAccessProfileBulkDeleteRequestWithDefaults instantiates a new AccessProfileBulkDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessProfileBulkDeleteRequestWithDefaults() *AccessProfileBulkDeleteRequest {
	this := AccessProfileBulkDeleteRequest{}
	return &this
}

// GetAccessProfileIds returns the AccessProfileIds field value if set, zero value otherwise.
func (o *AccessProfileBulkDeleteRequest) GetAccessProfileIds() []string {
	if o == nil || isNil(o.AccessProfileIds) {
		var ret []string
		return ret
	}
	return o.AccessProfileIds
}

// GetAccessProfileIdsOk returns a tuple with the AccessProfileIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfileBulkDeleteRequest) GetAccessProfileIdsOk() ([]string, bool) {
	if o == nil || isNil(o.AccessProfileIds) {
		return nil, false
	}
	return o.AccessProfileIds, true
}

// HasAccessProfileIds returns a boolean if a field has been set.
func (o *AccessProfileBulkDeleteRequest) HasAccessProfileIds() bool {
	if o != nil && !isNil(o.AccessProfileIds) {
		return true
	}

	return false
}

// SetAccessProfileIds gets a reference to the given []string and assigns it to the AccessProfileIds field.
func (o *AccessProfileBulkDeleteRequest) SetAccessProfileIds(v []string) {
	o.AccessProfileIds = v
}

// GetBestEffortOnly returns the BestEffortOnly field value if set, zero value otherwise.
func (o *AccessProfileBulkDeleteRequest) GetBestEffortOnly() bool {
	if o == nil || isNil(o.BestEffortOnly) {
		var ret bool
		return ret
	}
	return *o.BestEffortOnly
}

// GetBestEffortOnlyOk returns a tuple with the BestEffortOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfileBulkDeleteRequest) GetBestEffortOnlyOk() (*bool, bool) {
	if o == nil || isNil(o.BestEffortOnly) {
		return nil, false
	}
	return o.BestEffortOnly, true
}

// HasBestEffortOnly returns a boolean if a field has been set.
func (o *AccessProfileBulkDeleteRequest) HasBestEffortOnly() bool {
	if o != nil && !isNil(o.BestEffortOnly) {
		return true
	}

	return false
}

// SetBestEffortOnly gets a reference to the given bool and assigns it to the BestEffortOnly field.
func (o *AccessProfileBulkDeleteRequest) SetBestEffortOnly(v bool) {
	o.BestEffortOnly = &v
}

func (o AccessProfileBulkDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessProfileBulkDeleteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccessProfileIds) {
		toSerialize["accessProfileIds"] = o.AccessProfileIds
	}
	if !isNil(o.BestEffortOnly) {
		toSerialize["bestEffortOnly"] = o.BestEffortOnly
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccessProfileBulkDeleteRequest) UnmarshalJSON(bytes []byte) (err error) {
	varAccessProfileBulkDeleteRequest := _AccessProfileBulkDeleteRequest{}

	if err = json.Unmarshal(bytes, &varAccessProfileBulkDeleteRequest); err == nil {
	*o = AccessProfileBulkDeleteRequest(varAccessProfileBulkDeleteRequest)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accessProfileIds")
		delete(additionalProperties, "bestEffortOnly")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccessProfileBulkDeleteRequest struct {
	value *AccessProfileBulkDeleteRequest
	isSet bool
}

func (v NullableAccessProfileBulkDeleteRequest) Get() *AccessProfileBulkDeleteRequest {
	return v.value
}

func (v *NullableAccessProfileBulkDeleteRequest) Set(val *AccessProfileBulkDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessProfileBulkDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessProfileBulkDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessProfileBulkDeleteRequest(val *AccessProfileBulkDeleteRequest) *NullableAccessProfileBulkDeleteRequest {
	return &NullableAccessProfileBulkDeleteRequest{value: val, isSet: true}
}

func (v NullableAccessProfileBulkDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessProfileBulkDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


