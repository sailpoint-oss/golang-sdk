/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v3

import (
	"encoding/json"
	"os"
)

// checks if the PutPasswordDictionaryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutPasswordDictionaryRequest{}

// PutPasswordDictionaryRequest struct for PutPasswordDictionaryRequest
type PutPasswordDictionaryRequest struct {
	File **os.File `json:"file,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PutPasswordDictionaryRequest PutPasswordDictionaryRequest

// NewPutPasswordDictionaryRequest instantiates a new PutPasswordDictionaryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutPasswordDictionaryRequest() *PutPasswordDictionaryRequest {
	this := PutPasswordDictionaryRequest{}
	return &this
}

// NewPutPasswordDictionaryRequestWithDefaults instantiates a new PutPasswordDictionaryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutPasswordDictionaryRequestWithDefaults() *PutPasswordDictionaryRequest {
	this := PutPasswordDictionaryRequest{}
	return &this
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *PutPasswordDictionaryRequest) GetFile() *os.File {
	if o == nil || isNil(o.File) {
		var ret *os.File
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutPasswordDictionaryRequest) GetFileOk() (**os.File, bool) {
	if o == nil || isNil(o.File) {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *PutPasswordDictionaryRequest) HasFile() bool {
	if o != nil && !isNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given *os.File and assigns it to the File field.
func (o *PutPasswordDictionaryRequest) SetFile(v *os.File) {
	o.File = &v
}

func (o PutPasswordDictionaryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutPasswordDictionaryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.File) {
		toSerialize["file"] = o.File
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PutPasswordDictionaryRequest) UnmarshalJSON(bytes []byte) (err error) {
	varPutPasswordDictionaryRequest := _PutPasswordDictionaryRequest{}

	if err = json.Unmarshal(bytes, &varPutPasswordDictionaryRequest); err == nil {
	*o = PutPasswordDictionaryRequest(varPutPasswordDictionaryRequest)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "file")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePutPasswordDictionaryRequest struct {
	value *PutPasswordDictionaryRequest
	isSet bool
}

func (v NullablePutPasswordDictionaryRequest) Get() *PutPasswordDictionaryRequest {
	return v.value
}

func (v *NullablePutPasswordDictionaryRequest) Set(val *PutPasswordDictionaryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutPasswordDictionaryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutPasswordDictionaryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutPasswordDictionaryRequest(val *PutPasswordDictionaryRequest) *NullablePutPasswordDictionaryRequest {
	return &NullablePutPasswordDictionaryRequest{value: val, isSet: true}
}

func (v NullablePutPasswordDictionaryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutPasswordDictionaryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


