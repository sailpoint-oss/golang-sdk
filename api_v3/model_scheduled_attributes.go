/*
Identity Security Cloud V3 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v3

import (
	"encoding/json"
	"fmt"
)

// checks if the ScheduledAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduledAttributes{}

// ScheduledAttributes Attributes related to a scheduled trigger
type ScheduledAttributes struct {
	// A valid CRON expression
	CronString string `json:"cronString"`
	AdditionalProperties map[string]interface{}
}

type _ScheduledAttributes ScheduledAttributes

// NewScheduledAttributes instantiates a new ScheduledAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledAttributes(cronString string) *ScheduledAttributes {
	this := ScheduledAttributes{}
	this.CronString = cronString
	return &this
}

// NewScheduledAttributesWithDefaults instantiates a new ScheduledAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledAttributesWithDefaults() *ScheduledAttributes {
	this := ScheduledAttributes{}
	return &this
}

// GetCronString returns the CronString field value
func (o *ScheduledAttributes) GetCronString() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CronString
}

// GetCronStringOk returns a tuple with the CronString field value
// and a boolean to check if the value has been set.
func (o *ScheduledAttributes) GetCronStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CronString, true
}

// SetCronString sets field value
func (o *ScheduledAttributes) SetCronString(v string) {
	o.CronString = v
}

func (o ScheduledAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduledAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cronString"] = o.CronString

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ScheduledAttributes) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cronString",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varScheduledAttributes := _ScheduledAttributes{}

	if err = json.Unmarshal(bytes, &varScheduledAttributes); err == nil {
			*o = ScheduledAttributes(varScheduledAttributes)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "cronString")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableScheduledAttributes struct {
	value *ScheduledAttributes
	isSet bool
}

func (v NullableScheduledAttributes) Get() *ScheduledAttributes {
	return v.value
}

func (v *NullableScheduledAttributes) Set(val *ScheduledAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledAttributes(val *ScheduledAttributes) *NullableScheduledAttributes {
	return &NullableScheduledAttributes{value: val, isSet: true}
}

func (v NullableScheduledAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


