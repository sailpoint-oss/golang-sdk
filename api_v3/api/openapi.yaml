openapi: 3.0.1
info:
  contact:
    name: Developer Relations
    url: https://developer.sailpoint.com/discuss/api-help
  description: "Use these APIs to interact with the Identity Security Cloud platform\
    \ to achieve repeatable, automated processes with greater scalability. We encourage\
    \ you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss\
    \ to connect with other developers using our APIs."
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://developer.sailpoint.com/discuss/tos
  title: Identity Security Cloud V3 API
  version: 3.0.0
servers:
- description: This is the production API server.
  url: "https://{tenant}.api.identitynow.com/v3"
  variables:
    tenant:
      default: sailpoint
      description: "This is the name of your tenant, typically your company's name."
- description: This is the V3 API server.
  url: "https://{apiUrl}/v3"
  variables:
    apiUrl:
      default: sailpoint.api.identitynow.com
      description: This is the api url of your tenant
security:
- userAuth:
  - sp:scopes:all
tags:
- description: "Use this API to implement and customize access profile functionality.\
    \ \nWith this functionality in place, administrators can create access profiles\
    \ and configure them for use throughout Identity Security Cloud, enabling users\
    \ to get the access they need quickly and securely.\n\nAccess profiles group entitlements,\
    \ which represent access rights on sources. \n\nFor example, an Active Directory\
    \ source in Identity Security Cloud can have multiple entitlements: the first,\
    \ 'Employees,' may represent the access all employees have at the organization,\
    \ and a second, 'Developers,' may represent the access all developers have at\
    \ the organization.\n\nAn administrator can then create a broader set of access\
    \ in the form of an access profile, 'AD Developers' grouping the 'Employees' entitlement\
    \ with the 'Developers' entitlement.\n\nWhen users only need Active Directory\
    \ employee access, they can request access to the 'Employees' entitlement.\n\n\
    When users need both Active Directory employee and developer access, they can\
    \ request access to the 'AD Developers' access profile.\n\nIdentity Security Cloud\
    \ uses access profiles in many features, including the following:\n\n- Provisioning:\
    \ When you use the Provisioning Service, lifecycle states and roles both grant\
    \ access to users in the form of access profiles.\n\n- Certifications: You can\
    \ approve or revoke access profiles in certification campaigns, just like entitlements.\
    \ \n\n- Access Requests: You can assign access profiles to applications, and when\
    \ a user requests access to the app associated with an access profile and someone\
    \ approves the request, access is granted to both the application and its associated\
    \ access profile.\n\n- Roles: You can group one or more access profiles into a\
    \ role to quickly assign access items based on an identity's role. \n\nIn Identity\
    \ Security Cloud, administrators can use the Access drop-down menu and select\
    \ Access Profiles to view, configure, and delete existing access profiles, as\
    \ well as create new ones. \nAdministrators can enable and disable an access profile,\
    \ and they can also make the following configurations: \n\n- Manage Entitlements:\
    \ Manage the profile's access by adding and removing entitlements. \n\n- Access\
    \ Requests: Configure access profiles to be requestable and establish an approval\
    \ process for any requests that the access profile be granted or revoked. \nDo\
    \ not configure an access profile to be requestable without first establishing\
    \ a secure access request approval process for the access profile.\n\n- Multiple\
    \ Account Options: Define the logic Identity Security Cloud uses to provision\
    \ access to an identity with multiple accounts on the source. \n\nRefer to [Managing\
    \ Access Profiles](https://documentation.sailpoint.com/saas/help/access/access-profiles.html)\
    \ for more information about access profiles.\n"
  name: Access Profiles
- description: "Use this API to implement and customize access request approval functionality.\
    \ \nWith this functionality in place, administrators can delegate qualified users\
    \ to review users' requests for access or managers' requests to revoke team members'\
    \ access to applications, entitlements, or roles.      \nThis enables more qualified\
    \ users to review access requests and the others to spend their time on other\
    \ tasks.  \n\nIn Identity Security Cloud, users can request access to applications,\
    \ entitlements, and roles, and managers can request that team members' access\
    \ be revoked.   \nFor applications and entitlements, administrators can set access\
    \ profiles to require approval from the access profile owner, the application\
    \ owner, the source owner, the requesting user's manager, or a governance group\
    \ for access to be granted or revoked.   \nFor roles, administrators can also\
    \ set roles to allow access requests and require approval from the role owner,\
    \ the requesting user's manager, or a governance group for access to be granted\
    \ or revoked.   \nIf the administrator designates a governance group as the required\
    \ approver, any governance group member can approve the requests.\n   \nWhen a\
    \ user submits an access request, Identity Security Cloud sends the first required\
    \ approver in the queue an email notification, based on the access request configuration's\
    \ approval and reminder escalation configuration.\n\nIn Approvals in Identity\
    \ Security Cloud, required approvers can view pending access requests under the\
    \ Requested tab and approve or deny them, or the approvers can reassign the requests\
    \ to different reviewers for approval.   \nIf the required approver approves the\
    \ request and is the only reviewer required, Identity Security Cloud grants or\
    \ revokes access, based on the request.   \nIf multiple reviewers are required,\
    \ Identity Security Cloud sends the request to the next reviewer in the queue,\
    \ based on the access request configuration's approval reminder and escalation\
    \ configuration.   \nThe required approver can then view any completed access\
    \ requests under the Reviewed tab.   \n\nRefer to [Access Requests](https://documentation.sailpoint.com/saas/help/requests/index.html)\
    \ for more information about access request approvals.\n"
  name: Access Request Approvals
- description: "Use this API to implement and customize access request functionality.\
    \ \nWith this functionality in place, users can request access to applications,\
    \ entitlements, or roles, and managers can request that team members' access be\
    \ revoked.\nThis allows users to get access to the tools they need quickly and\
    \ securely, and it allows managers to take away access to those tools. \n\nIdentity\
    \ Security Cloud's Access Request service allows end users to request access that\
    \ requires approval before it can be granted to users and enables qualified users\
    \ to review those requests and approve or deny them.\n\nIn the Request Center\
    \ in Identity Security Cloud, users can view available applications, roles, and\
    \ entitlements and request access to them. \nIf the requested tools requires approval,\
    \ the requests appear as 'Pending' under the My Requests tab until the required\
    \ approver approves, rejects, or cancels them. \n\nUsers can use My Requests to\
    \ track and/or cancel the requests.\n\nIn My Team on the Identity Security Cloud\
    \ Home, managers can submit requests to revoke their team members' access. \n\
    They can use the My Requests tab under Request Center to track and/or cancel the\
    \ requests.\n\nRefer to [Requesting Access](https://documentation.sailpoint.com/saas/user-help/requests/requesting_access.html)\
    \ for more information about access requests.\n"
  name: Access Requests
- description: "Use this API to implement account activity tracking functionality.\n\
    With this functionality in place, users can track source account activity in Identity\
    \ Security Cloud, which greatly improves traceability in the system. \n\nAn account\
    \ activity refers to a log of each action performed on a source account. This\
    \ is useful for auditing the changes performed on an account throughout its life.\
    \ \nIn Identity Security Cloud's Search, users can search for account activities\
    \ and select the activity's row to get an overview of the activity's account action\
    \ and view its progress, its involved sources, and its most basic metadata, such\
    \ as the identity requesting the option and the recipient. \n\nAccount activity\
    \ includes most actions Identity Security Cloud completes on source accounts.\
    \ Users can search in Identity Security Cloud for the following account action\
    \ types: \n\n- Access Request: These include any access requests the source account\
    \ is involved in. \n\n- Account Attribute Updates: These include updates to a\
    \ single attribute on an account on a source. \n\n- Account State Update: These\
    \ include locking or unlocking actions on an account on a source. \n\n- Certification:\
    \ These include actions removing an entitlement from an account on a source as\
    \ a result of the entitlement's revocation during a certification.\n\n- Cloud\
    \ Automated `Lifecyclestate`: These include automated lifecycle state changes\
    \ that result in a source account's correlated identity being assigned to a different\
    \ lifecycle state. \nIdentity Security Cloud replaces the `Lifecyclestate` variable\
    \ with the name of the lifecycle state it has moved the account's identity to.\
    \ \n\n- Identity Attribute Update: These include updates to a source account's\
    \ correlated identity attributes as the result of a provisioning action. \nWhen\
    \ you update an identity attribute that also updates an identity's lifecycle state,\
    \ the cloud automated `Lifecyclestate` event also displays.\nAccount Activity\
    \ does not include attribute updates that occur as a result of aggregation.\n\n\
    - Identity Refresh: These include correlated identity refreshes that occur for\
    \ an account on a source whenever the account's correlated identity profile gets\
    \ a new role or updates. \nThese also include refreshes that occur whenever Identity\
    \ Security Cloud assigns an application to the account's correlated identity based\
    \ on the application's being assigned to All Users From Source or Specific Users\
    \ From Source. \n\n- Lifecycle State Refresh: These include the actions that took\
    \ place when a lifecycle state changed. This event only occurs after a cloud automated\
    \ `Lifecyclestate` change or a lifecycle state change. \n\n- Lifecycle State Change:\
    \ These include the account activities that result from an identity's manual assignment\
    \ to a null lifecycle state.\n\n- Password Change: These include password changes\
    \ on sources.\n\nRefer to [Account Activity](https://documentation.sailpoint.com/saas/help/search/index.html#account-activity)\
    \ for more information about account activities.\n"
  name: Account Activities
- description: |
    Use this API to implement account usage insight functionality.
    With this functionality in place, administrators can gather information and insights about how their tenants' source accounts are being used.
    This allows organizations to get the information they need to start optimizing and securing source account usage.
  name: Account Usages
- description: "Use this API to implement and customize account functionality.\nWith\
    \ this functionality in place, administrators can manage users' access across\
    \ sources in Identity Security Cloud. \n\nIn Identity Security Cloud, an account\
    \ refers to a user's account on a supported source.\nThis typically includes a\
    \ unique identifier for the user, a unique password, a set of permissions associated\
    \ with the source and a set of attributes. Identity Security Cloud loads accounts\
    \ through the creation of sources in Identity Security Cloud.\n\nAdministrators\
    \ can correlate users' identities with the users' accounts on the different sources\
    \ they use. \nThis allows Identity Security Cloud to govern the access of identities\
    \ and all their correlated accounts securely and cohesively. \n\nTo view the accounts\
    \ on a source and their correlated identities, administrators can use the Connections\
    \ drop-down menu, select Sources, select the relevant source, and select its Account\
    \ tab. \n\nTo view and edit source account statuses for an identity in Identity\
    \ Security Cloud, administrators can use the Identities drop-down menu, select\
    \ Identity List, select the relevant identity, and select its Accounts tab. \n\
    Administrators can toggle an account's Actions to aggregate the account, enable/disable\
    \ it, unlock it, or remove it from the identity. \n\nAccounts can have the following\
    \ statuses: \n\n- Enabled: The account is enabled. The user can access it.\n\n\
    - Disabled: The account is disabled, and the user cannot access it, but the identity\
    \ is not disabled in Identity Security Cloud. This can occur when an administrator\
    \ disables the account or when the user's lifecycle state changes. \n\n- Locked:\
    \ The account is locked. This may occur when someone has entered an incorrect\
    \ password for the account too many times.\n\n- Pending: The account is currently\
    \ updating. This status typically lasts seconds. \n\nAdministrators can select\
    \ the source account to view its attributes, entitlements, and the last time the\
    \ account's password was changed.\n\nRefer to [Managing User Accounts](https://documentation.sailpoint.com/saas/help/common/users/user_access.html#managing-user-accounts)\
    \ for more information about accounts.\n"
  name: Accounts
- description: "Use this API to implement application discovery functionality. \n\
    With this functionality in place, you can discover applications within your Okta\
    \ connector and receive connector recommendations by manually uploading application\
    \ names.\n"
  name: Application Discovery
- description: "Use this API to implement user authentication system functionality.\
    \ \nWith this functionality in place, users can get a user's authentication system\
    \ details, including their capabilities, and modify those capabilities. \nThe\
    \ user's capabilities refer to their access to different systems, or authorization,\
    \ within the tenant, like access to certifications (CERT_ADMIN) or reports (REPORT_ADMIN).\
    \ \nThese capabilities also determine a user's access to the different APIs. \n\
    This API provides users with a way to determine a user's access and make quick\
    \ and easy changes to that access.\n"
  name: Auth Users
- description: "Use this API to implement and customize branding functionality. \n\
    With this functionality in place, administrators can get and manage existing branding\
    \ items, and they can also create new branding items and configure them for use\
    \ throughout Identity Security Cloud. \nThe Branding APIs provide administrators\
    \ with a way to customize branding items. \nThis customization includes details\
    \ like their colors, logos, and other information. \nRefer to [Certifications](https://documentation.sailpoint.com/saas/user-help/certifications.html)\
    \ for more information about certifications.\n"
  name: Branding
- description: |
    Use this API to implement the certification campaign filter functionality. These filters can be used to create a certification campaign that includes a subset of your entitlements or users to certify.

    For example, if for a certification campaign an organization wants to certify only specific users or entitlements, then those can be included/excluded on the basis of campaign filters.

    For more information about creating a campaign filter, refer to [Creating a Campaign Filter](https://documentation.sailpoint.com/saas/help/certs/campaign_filters.html#creating-a-campaign-filter)

    You can create campaign filters using any of the following criteria types:

    - Access Profile : This criteria type includes or excludes access profiles from a campaign.

    - Account Attribute : This criteria type includes or excludes certification items that match a specified value in an account attribute.

    - Entitlement : This criteria type includes or excludes entitlements from a campaign.

    - Identity : This criteria type includes or excludes specific identities from your campaign.

    - Identity Attribute : This criteria type includes or excludes identities based on whether they have an identity attribute that matches criteria you've chosen.

    - Role : This criteria type includes or excludes roles, as opposed to identities.

    - Source : This criteria type includes or excludes entitlements from a source you select.

    For more information about these criteria types, refer to [Types of Campaign Filters](https://documentation.sailpoint.com/saas/help/certs/campaign_filters.html#types-of-campaign-filters)

    Once the campaign filter is created, it can be linked while creating the campaign. The generated campaign will have the items to review as per the campaign filter.

    For example, An inclusion campaign filter is created with a source of Source 1, an operation of Equals, and an entitlement of Entitlement 1. When this filter is selected, only users who have Entitlement 1 are included in the campaign, and only Entitlement 1 is shown in the certification.
  name: Certification Campaign Filters
- description: "Use this API to implement certification campaign functionality.\n\
    With this functionality in place, administrators can create, customize, and manage\
    \ certification campaigns for their organizations' use. \nCertification campaigns\
    \ provide Identity Security Cloud users with an interactive review process they\
    \ can use to identify and verify access to systems. \nCampaigns help organizations\
    \ reduce risk of inappropriate access and satisfy audit requirements. \n\nA certification\
    \ refers to Identity Security Cloud's mechanism for reviewing a user's access\
    \ to entitlements (sets of permissions) and approving or removing that access.\
    \ \nThese certifications serve as a way of showing that a user's access has been\
    \ reviewed and approved. \nMultiple certifications by different reviewers are\
    \ often required to approve a user's access. \nA set of multiple certifications\
    \ is called a certification campaign. \n\nFor example, an organization may use\
    \ a Manager Certification campaign as a way of showing that a user's access has\
    \ been reviewed and approved by multiple managers. \nOnce this campaign has been\
    \ completed, Identity Security Cloud would provision all the access the user needs,\
    \ nothing more. \n\nIdentity Security Cloud provides two simple campaign types\
    \ users can create without using search queries, Manager and Source Owner campaigns:\n\
    \nYou can create these types of campaigns without using any search queries in\
    \ Identity Security Cloud: \n\n- ManagerCampaign: Identity Security Cloud provides\
    \ this campaign type as a way to ensure that an identity's access is certified\
    \ by their managers. \nYou only need to provide a name and description to create\
    \ one. \n\n- Source Owner Campaign: Identity Security Cloud provides this campaign\
    \ type as a way to ensure that an identity's access to a source is certified by\
    \ its source owners. \nYou only need to provide a name and description to create\
    \ one. \nYou can specify the sources whose owners you want involved or just run\
    \ it across all sources. \n\nFor more information about these campaign types,\
    \ refer to [Starting a Manager or Source Owner Campaign](https://documentation.sailpoint.com/saas/help/certs/starting_campaign.html).\n\
    \nOne useful way to create certification campaigns in Identity Security Cloud\
    \ is to use a specific search and then run a campaign on the results returned\
    \ by that search. \nThis allows you to be much more specific about whom you are\
    \ certifying in your campaigns and what access you are certifying in your campaigns.\
    \ \nFor example, you can search for all identities who are managed by \"Amanda.Ross\"\
    \ and also have the access to the \"Accounting\" role and then run a certification\
    \ campaign based on that search to ensure that the returned identities are appropriately\
    \ certified. \n\nYou can use Identity Security Cloud search queries to create\
    \ these types of campaigns: \n\n- Identities: Use this campaign type to review\
    \ and revoke access items for specific identities. \nYou can either build a search\
    \ query and create a campaign certifying all identities returned by that query,\
    \ or you can search for individual identities and add those identities to the\
    \ certification campaign. \n\n- Access Items: Use this campaign type to review\
    \ and revoke a set of roles, access profiles, or entitlements from the identities\
    \ that have them. \nYou can either build a search query and create a campaign\
    \ certifying all access items returned by that query, or you can search for individual\
    \ access items and add those items to the certification campaign. \n\n- Role Composition:\
    \ Use this campaign type to review a role's composition, including its title,\
    \ description, and membership criteria. \nYou can either build a search query\
    \ and create a campaign certifying all roles returned by that query, or you can\
    \ search for individual roles and add those roles to the certification campaign.\
    \ \n\n- Uncorrelated Accounts: Use this campaign type to certify source accounts\
    \ that aren't linked to an authoritative identity in Identity Security Cloud.\
    \ \nYou can use this campaign type to view all the uncorrelated accounts for a\
    \ source and certify them. \n\nFor more information about search-based campaigns,\
    \ refer to [Starting a Campaign from Search](https://documentation.sailpoint.com/saas/help/certs/starting_search_campaign.html).\n\
    \nOnce you have generated your campaign, it becomes available for preview. \n\
    An administrator can review the campaign and make changes, or if it's ready and\
    \ accurate, activate it. \n\nOnce the campaign is active, organization administrators\
    \ or certification administrators can designate other Identity Security Cloud\
    \ users as certification reviewers. \nThose reviewers can view any of the certifications\
    \ they either need to review (active) or have already reviewed (completed).\n\n\
    When a certification campaign is in progress, certification reviewers see the\
    \ listed active certifications whose involved identities they can review. \nReviewers\
    \ can then make decisions to grant or revoke access, as well as reassign the certification\
    \ to another reviewer. If the reviewer chooses this option, they must provide\
    \ a reason for reassignment in the form of a comment.\n\nOnce a reviewer has made\
    \ decisions on all the certification's involved access items, he or she must \"\
    Sign Off\" to complete the review process.\nDoing so converts the certification\
    \ into read-only status, preventing any further changes to the review decisions\
    \ and deleting the work item (task) from the reviewer's list of work items. \n\
    \nOnce all the reviewers have signed off, the certification campaign either completes\
    \ or, if any reviewers decided to revoke access for any of the involved identities,\
    \ it moves into a remediation phase. \nIn the remediation phase, identities' entitlements\
    \ are altered to remove any entitlements marked for revocation.\nIn this situation,\
    \ the certification campaign completes once all the remediation requests are completed.\
    \ \n\nThe end of a certification campaign is determined by its deadline, its completion\
    \ status, or by an administrator's decision. \n\nFor more information about certifications\
    \ and certification campaigns, refer to [Certifications](https://documentation.sailpoint.com/saas/user-help/certifications.html).\n"
  name: Certification Campaigns
- description: "Use this API to implement certification summary functionality. \n\
    With this functionality in place, administrators and designated certification\
    \ reviewers can review summaries of identity certification campaigns and draw\
    \ conclusions about the campaigns' scope, security, and effectiveness. \nImplementing\
    \ certification summary functionality improves organizations' ability to review\
    \ their [certifications](https://documentation.sailpoint.com/saas/user-help/certifications.html)\
    \ and helps them satisfy audit and regulatory requirements by enabling them to\
    \ trace access changes and the decisions made in their review processes. \n\n\
    A certification refers to Identity Security Cloud's mechanism for reviewing a\
    \ user's access to entitlements (sets of permissions) and approving or removing\
    \ that access. \nThese certifications serve as a way of showing that a user's\
    \ access has been reviewed and approved. \nMultiple certifications by different\
    \ reviewers are often required to approve a user's access. \nA set of multiple\
    \ certifications is called a certification campaign. \n\nFor example, an organization\
    \ may use a Manager Certification as a way of showing that a user's access has\
    \ been reviewed and approved by their manager, or if the certification is part\
    \ of a campaign, that the user's access has been reviewed and approved by multiple\
    \ managers. \nOnce this certification has been completed, Identity Security Cloud\
    \  would provision all the access the user needs, nothing more. \n\nCertification\
    \ summaries provide information about identity certification campaigns such as\
    \ the identities involved, the number of decisions made, and the access changed.\
    \ \nFor example, an administrator or designated certification reviewer can examine\
    \ the Manager Certification campaign to get an overview of how many entitlement\
    \ decisions are made in that campaign as opposed to role decisions, which identities\
    \ would be affected by changes to the campaign, and how those identities' access\
    \ would be affected.\n"
  name: Certification Summaries
- description: "Use this API to implement certification functionality. \nWith this\
    \ functionality in place, administrators and designated certification reviewers\
    \ can review users' access certifications and decide whether to approve access,\
    \ revoke it, or reassign the review to another reviewer. \nImplementing certifications\
    \ improves organizations' data security by reducing inappropriate access through\
    \ a distributed review process and helping them satisfy audit and regulatory requirements.\
    \ \n\nA certification refers to Identity Security Cloud's mechanism for reviewing\
    \ a user's access to entitlements (sets of permissions) and approving or removing\
    \ that access. \nThese serve as a way of showing that a user's access has been\
    \ reviewed and approved. \nMultiple certifications by different reviewers are\
    \ often required to approve a user's access. \nA set of multiple certifications\
    \ is called a certification campaign.\n\nFor example, an organization may use\
    \ a Manager Certification as a way of showing that a user's access has been reviewed\
    \ and approved by their manager, or if the certification is part of a campaign,\
    \ that the user's access has been reviewed and approved by multiple managers.\
    \ \nOnce this certification has been completed, Identity Security Cloud  would\
    \ provision all the access the user needs, nothing more. \n\nOrganization administrators\
    \ or certification administrators can designate other Identity Security Cloud\
    \ users as certification reviewers. \nThose reviewers can select the 'Certifications'\
    \ tab to view any of the certifications they either need to review or have already\
    \ reviewed under the 'Active' and 'Completed' tabs, respectively. \n\nWhen a certification\
    \ campaign is in progress, certification reviewers will see certifications listed\
    \ under 'Active,' where they can review the involved identities. \nUnder the 'Decision'\
    \ column on the right, next to each access item, reviewers can select the checkmark\
    \ to approve access, select the 'X' to revoke access, or they can toggle the 'More\
    \ Options' menu to reassign the certification to another reviewer and provide\
    \ a reason for reassignment in the form of a comment. \n\nOnce a reviewer has\
    \ made decisions on all the certification's involved access items, he or she must\
    \ select 'Sign Off' to complete the review process.\nDoing so converts the certification\
    \ into read-only status, preventing any further changes to the review decisions\
    \ and deleting the work item (task) from the reviewer's list of work items. \n\
    \nOnce all the reviewers have signed off, the certification campaign either completes\
    \ or, if any reviewers decided to revoke access for any of the involved identities,\
    \ it moves into a remediation phase. In the remediation phase, identities' entitlements\
    \ are altered to remove any entitlements marked for revocation.\nIn this situation,\
    \ the certification campaign completes once all the remediation requests are completed.\n"
  name: Certifications
- description: |
    Upload configurations and manage object mappings between tenants.

    Configuration files can be managed and deployed using Configuration Hub by uploading a JSON file which contains configuration data.

    The function of object mapping allows objects with varying names and IDs to be compared. While objects are compared, a user can replace a value in the source tenant with a new value. Object mapping also helps in locating referenced objects to the source object during the drafting process.

    Refer to [Uploading a Configuration File](https://documentation.sailpoint.com/saas/help/confighub/config_hub.html#uploading-a-configuration-file) for more information about uploading Configuration Files

    Refer to [Mapping Objects](https://documentation.sailpoint.com/saas/help/confighub/config_hub.html#mapping-objects) for more information about object mappings.
  name: Configuration Hub
- description: |
    Use this API to implement connector functionality.
    With this functionality in place, administrators can view available connectors.

    Connectors are the bridges Identity Security Cloud uses to communicate with and aggregate data from sources.
    For example, if it is necessary to set up a connection between Identity Security Cloud and the Active Directory source, a connector can bridge the two and enable Identity Security Cloud to synchronize data between the systems.
    This ensures account entitlements and states are correct throughout the organization.

    In Identity Security Cloud, administrators can use the Connections drop-down menu and select Sources to view the available source connectors.

    Refer to [Identity Security Cloud Connectors](https://documentation.sailpoint.com/connectors/identitynow/landingpages/help/landingpages/identitynow_connectivity_landing.html) for more information about the connectors available in Identity Security Cloud.

    Refer to [SaaS Connectivity](https://developer.sailpoint.com/docs/connectivity/saas-connectivity/) for more information about the SaaS custom connectors that do not need VAs (virtual appliances) to communicate with their sources.

    Refer to [Managing Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html) for more information about using connectors in Identity Security Cloud.
  name: Connectors
- description: |
    Use this API to implement and customize global tenant security settings.
    With this functionality in place, administrators can manage the global security settings that a tenant/org has.
    This API can be used to configure the networks and Geographies allowed to access Identity Security Cloud URLs.
  name: Global Tenant Security Settings
- description: "Use this API to implement identity profile functionality. \nWith this\
    \ functionality in place, administrators can view identity profiles and their\
    \ configurations. \n\nIdentity profiles represent the configurations that can\
    \ be applied to identities as a way of granting them a set of security and access,\
    \ as well as defining the mappings between their identity attributes and their\
    \ source attributes.  \n\nIn Identity Security Cloud, administrators can use the\
    \ Identities drop-down menu and select Identity Profiles to view the list of identity\
    \ profiles. \nThis list shows some details about each identity profile, along\
    \ with its status. \nThey can select an identity profile to view its settings,\
    \ its mappings between identity attributes and correlating source account attributes,\
    \ and its provisioning settings. \n\nRefer to [Creating Identity Profiles](https://documentation.sailpoint.com/saas/help/setup/identity_profiles.html)\
    \ for more information about identity profiles.\n"
  name: Identity Profiles
- description: "Use this API to implement and customize lifecycle state functionality.\n\
    With this functionality in place, administrators can create and configure custom\
    \ lifecycle states for use across their organizations, which is key to controlling\
    \ which users have access, when they have access, and the access they have.\n\n\
    A lifecycle state describes a user's status in a company. For example, two lifecycle\
    \ states come by default with Identity Security Cloud: 'Active' and 'Inactive.'\
    \ \nWhen an active employee takes an extended leave of absence from a company,\
    \ his or her lifecycle state may change to 'Inactive,' for security purposes.\
    \ \nThe inactive employee would lose access to all the applications, sources,\
    \ and sensitive data during the leave of absence, but when the employee returns\
    \ and becomes active again, all that access would be restored. \nThis saves administrators\
    \ the time that would otherwise be spent provisioning the employee's access to\
    \ each individual tool, reviewing the employee's certification history, etc. \n\
    \nAdministrators can create a variety of custom lifecycle states. Refer to [Planning\
    \ New Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#planning-new-lifecycle-states)\
    \ for some custom lifecycle state ideas.\n\nAdministrators must define the criteria\
    \ for being in each lifecycle state, and they must define how Identity Security\
    \ Cloud manages users' access to apps and sources for each lifecycle state.\n\n\
    In Identity Security Cloud, administrators can manage lifecycle states by going\
    \ to Admin > Identities > Identity Profile, selecting the identity profile whose\
    \ lifecycle states they want to manage, selecting the 'Provisioning' tab, and\
    \ using the left panel to either select the lifecycle state they want to modify\
    \ or create a new lifecycle state. \n\nIn the 'Provisioning' tab, administrators\
    \ can make the following access changes to an identity profile's lifecycle state:\
    \ \n\n- Enable/disable the lifecycle state for the identity profile.\n\n- Enable/disable\
    \ source accounts for the identity profile's lifecycle state.\n\n- Add existing\
    \ access profiles to grant to the identity profiles in that lifecycle state.\n\
    \n- Create a new access profile to grant to the identity profile in that lifecycle\
    \ state.\n\nAccess profiles granted in a previous lifecycle state are automatically\
    \ revoked when the identity moves to a new lifecycle state. \nTo maintain access\
    \ across multiple lifecycle states, administrators must grant the access profiles\
    \ in each lifecycle state. \nFor example, if an administrator wants users with\
    \ the 'HR Employee' identity profile to maintain their building access in both\
    \ the 'Active' and 'Leave of Absence' lifecycle states, the administrator must\
    \ grant the access profile for that building access to both lifecycle states.\n\
    \nDuring scheduled refreshes, Identity Security Cloud evaluates lifecycle states\
    \ to determine whether their assigned identities have the access defined in the\
    \ lifecycle states' access profiles. \nIf the identities are missing access, Identity\
    \ Security Cloud provisions that access. \n\nAdministrators can also use the 'Provisioning'\
    \ tab to configure email notifications for Identity Security Cloud to send whenever\
    \ an identity with that identity profile has a lifecycle state change. \nRefer\
    \ to [Configuring Lifecycle State Notifications](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#configuring-lifecycle-state-notifications)\
    \ for more information on how to do so.\n\nAn identity's lifecycle state can have\
    \ four different statuses: the lifecycle state's status can be 'Active,' it can\
    \ be 'Not Set,' it can be 'Not Valid,' or it 'Does Not Match Technical Name Case.'\
    \ \nRefer to [Moving Identities into Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#moving-identities-into-lifecycle-states)\
    \ for more information about these different lifecycle state statuses. \n\nRefer\
    \ to [Setting Up Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html)\
    \ for more information about lifecycle states.\n"
  name: Lifecycle States
- description: "Use this API to implement managed client functionality. \nWith this\
    \ functionality in place, administrators can modify and delete existing managed\
    \ clients, create new ones, and view and make changes to their log configurations.\
    \ \n"
  name: Managed Clients
- description: "Use this API to implement managed cluster functionality. \nWith this\
    \ functionality in place, administrators can modify and delete existing managed\
    \ clients, get their statuses, and create new ones. \n"
  name: Managed Clusters
- description: Configure and test multifactor authentication (MFA) methods
  name: MFA Configuration
- description: This API used for multifactor authentication functionality belong to
    gov-multi-auth service. This controller allow you to verify authentication by
    specified method
  name: MFA Controller
- description: "Use this API to implement non-employee lifecycle management functionality.\
    \ \nWith this functionality in place, administrators can create non-employee records\
    \ and configure them for use in their organizations. \nThis allows organizations\
    \ to provide secure access to non-employees and control that access. \n\nThe 'non-employee'\
    \ term refers to any consultant, contractor, intern, or other user in an organization\
    \ who is not a full-time permanent employee. \nOrganizations can track non-employees'\
    \ access and activity in Identity Security Cloud by creating and maintaining non-employee\
    \ sources. \nOrganizations can have a maximum of 50 non-employee sources. \n\n\
    By using SailPoint's Non-Employee Lifecycle Management functionality, you agree\
    \ to the following:\n\n- SailPoint is not responsible for storing sensitive data.\
    \ \nYou may only add account attributes to non-employee identities that are necessary\
    \ for business operations and are consistent with your contractual limitations\
    \ on data that may be sent or stored in Identity Security Cloud.\n\n- You are\
    \ responsible for regularly downloading your list of non-employee accounts for\
    \ all the sources you create and storing this list of accounts in a managed location\
    \ to maintain an authoritative system of record and backup data for these accounts.\n\
    \nTo manage non-employees in Identity Security Cloud, administrators must create\
    \ a non-employee source and add accounts to the source. \n\nTo create a non-employee\
    \ source in Identity Security Cloud, administrators must use the Admin panel to\
    \ go to Connections > Sources.\nThey must then specify 'Non-Employee' in the 'Source\
    \ Type' field. \nRefer to [Creating a Non-Employee Source](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html#creating-a-non-employee-source)\
    \ for more details about how to create non-employee sources.\n\nTo add accounts\
    \ to a non-employee source in Identity Security Cloud, administrators can select\
    \ the non-employee source and add the accounts. \nThey can also use the 'Manage\
    \ Non-Employees' widget on their user dashboards to reach the list of sources\
    \ and then select the non-employee source they want to add the accounts to. \n\
    \nAdministrators can either add accounts individually or in bulk. Each non-employee\
    \ source can have a maximum of 20,000 accounts. \nTo add accounts in bulk, they\
    \ must select the 'Bulk Upload' option and upload a CSV file. \nRefer to [Adding\
    \ Accounts](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html#adding-accounts)\
    \ for more details about how to add accounts to non-employee sources.\n\nOnce\
    \ administrators have created the non-employee source and added accounts to it,\
    \ they can create identity profiles to generate identities for the non-employee\
    \ accounts and manage the non-employee identities the same way they would any\
    \ other identities. \n\nRefer to [Managing Non-Employee Sources and Accounts](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html)\
    \ for more information about non-employee lifecycle management.\n"
  name: Non-Employee Lifecycle Management
- description: "Use this API to implement OAuth client functionality.   \nWith this\
    \ functionality in place, users with the appropriate security scopes can create\
    \ and configure OAuth clients to use as a way to obtain authorization to use the\
    \ Identity Security Cloud REST API.\nRefer to [Authentication](https://developer.sailpoint.com/docs/api/authentication/)\
    \ for more information about OAuth and how it works with the Identity Security\
    \ Cloud REST API.\n"
  name: OAuth Clients
- description: "Use this API to implement organization password configuration functionality.\
    \ \nWith this functionality in place, organization administrators can create organization-specific\
    \ password configurations. \n\nThese configurations include details like custom\
    \ password instructions, as well as digit token length and duration. \n\nRefer\
    \ to [Configuring User Authentication for Password Resets](https://documentation.sailpoint.com/saas/help/pwd/pwd_reset.html)\
    \ for more information about organization password configuration functionality.\n"
  name: Password Configuration
- description: "Use this API to implement password dictionary functionality.  \nWith\
    \ this functionality in place, administrators can create password dictionaries\
    \ to prevent users from using certain words or characters in their passwords.\
    \ \n\nA password dictionary is a list of words or characters that users are prevented\
    \ from including in their passwords. \nThis can help protect users from themselves\
    \ and force them to create passwords that are not easy to break. \n\nA password\
    \ dictionary must meet the following requirements to for the API to handle them\
    \ correctly: \n\n- It must be in .txt format.\n\n- All characters must be UTF-8\
    \ characters. \n\n- Each line must contain a single word or character with no\
    \ spaces or whitespace characters.\n\n- It must contain at least one line other\
    \ than the locale string.\n\n- Each line must not exceed 128 characters.\n\n-\
    \ The file must not exceed 2500 lines. \n\nAdministrators should also consider\
    \ the following when they create their dictionaries: \n\n- Lines starting with\
    \ a # represent comments.\n\n- All words in the password dictionary are case-insensitive.\
    \ \nFor example, adding the word \"password\" to the dictionary also disallows\
    \ the following: PASSWORD, Password, and PassWord.\n\n- The dictionary uses substring\
    \ matching. \nFor example, adding the word \"spring\" to the dictionary also disallows\
    \ the following: Spring124, 345SprinG, and 8spring.\nUsers can then select 'Change\
    \ Password' to update their passwords. \n\nAdministrators must do the following\
    \ to create a password dictionary: \n\n- Create the text file that will contain\
    \ the prohibited password values.\n\n- If the dictionary is not in English, they\
    \ must add a locale string to the top line: locale:`languageCode`_`countryCode`\n\
    \nThe languageCode value refers to the language's 2-letter ISO 639-1 code.\nThe\
    \ countryCode value refers to the country's 2-letter ISO 3166-1 code.\n\nRefer\
    \ to this list https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html\
    \ to see all the available ISO 639-1 language codes and ISO 3166-1 country codes.\n\
    \n- Upload the .txt file to Identity Security Cloud with [Update Password Dictionary](https://developer.sailpoint.com/docs/api/v3/put-password-dictionary).\
    \ Uploading a new file always overwrites the previous dictionary file.\n\nAdministrators\
    \ can then specify which password policies check new passwords against the password\
    \ dictionary by doing the following: In the Admin panel, they can use the Password\
    \ Mgmt dropdown menu to select Policies, select the policy, and select the 'Prevent\
    \ use of words in this site's password dictionary' checkbox beside it.\n\nRefer\
    \ to [Configuring Advanced Password Management Options](https://documentation.sailpoint.com/saas/help/pwd/adv_config.html)\
    \ for more information about password dictionaries.\n"
  name: Password Dictionary
- description: "Use this API to implement password management functionality.  \nWith\
    \ this functionality in place, users can manage their identity passwords for all\
    \ their applications.\n\nIn Identity Security Cloud, users can select their names\
    \ in the upper right corner of the page and use the drop-down menu to select Password\
    \ Manager. \nPassword Manager lists the user's identity's applications, possibly\
    \ grouped to share passwords. \nUsers can then select 'Change Password' to update\
    \ their passwords. \n\nGrouping passwords allows users to update their passwords\
    \ more broadly, rather than requiring them to update each password individually.\
    \ \nPassword Manager may list the applications and sources in the following groups:\n\
    \n- Password Group: This refers to a group of applications that share a password.\
    \ \nFor example, a user can use the same password for Google Drive, Google Mail,\
    \ and YouTube. \nUpdating the password for the password group updates the password\
    \ for all its included applications.\n\n- Multi-Application Source: This refers\
    \ to a source with multiple applications that share a password. \nFor example,\
    \ a user can have a source, G Suite, that includes the Google Calendar, Google\
    \ Drive, and Google Mail applications. \nUpdating the password for the multi-application\
    \ source updates the password for all its included applications. \n\n- Applications:\
    \ These are applications that do not share passwords with other applications.\n\
    \nAn organization may require some authentication for users to update their passwords.\
    \ \nUsers may be required to answer security questions or use a third-party authenticator\
    \ before they can confirm their updates. \n\nRefer to [Managing Passwords](https://documentation.sailpoint.com/saas/user-help/accounts/passwords.html)\
    \ for more information about password management.\n"
  name: Password Management
- description: |
    Use these APIs to implement password policies functionality.
    These APIs allow you to define the policy parameters for choosing passwords.

    IdentityNow comes with a default policy that you can modify to define the password requirements your users must meet to log in to IdentityNow, such as requiring a minimum password length, including special characters, and disallowing certain patterns.
    If you have licensed Password Management, you can create additional password policies beyond the default one to manage passwords for supported sources in your org.

    In the Identity Security Cloud Admin panel, administrators can use the Password Mgmt dropdown menu to select Sync Groups.
    Refer to [Managing Password Policies](https://documentation.sailpoint.com/saas/help/pwd/pwd_policies/pwd_policies.html) for more information about password policies.
  name: Password Policies
- description: "Use this API to implement password sync group functionality. \nWith\
    \ this functionality in place, administrators can group sources into password\
    \ sync groups so that all their applications share the same password. \nThis allows\
    \ users to update the password for all the applications in a sync group if they\
    \ want, rather than updating each password individually. \n\nA password sync group\
    \ is a group of applications that shares a password. \nAdministrators create these\
    \ groups by grouping the applications' sources. \nFor example, an administrator\
    \ can group the ActiveDirectory, GitHub, and G Suite sources together so that\
    \ all those sources' applications can also be grouped to share a password. \n\
    A user can then update his or her password for ActiveDirectory, GitHub, Gmail,\
    \ Google Drive, and Google Calendar all at once, rather then updating each one\
    \ individually.\n\nThe following are required for administrators to create a password\
    \ sync group in Identity Security Cloud: \n\n- At least two direct connect sources\
    \ connected to Identity Security Cloud and configured for Password Management.\n\
    \n- Each authentication source in a sync group must have at least one application.\
    \ Refer to [Adding and Resetting Application Passwords](https://documentation.sailpoint.com/saas/help/pwd/adv_config.html#adding-and-resetting-application-passwords)\
    \ for more information about adding applications to sources.\n\n- At least one\
    \ password policy. Refer to [Managing Password Policies](https://documentation.sailpoint.com/saas/help/pwd/policies.html)\
    \ for more information about password policies. \n\nIn the Admin panel in Identity\
    \ Security Cloud, administrators can use the Password Mgmt dropdown menu to select\
    \ Sync Groups. \nTo create a sync group, administrators must provide a name, choose\
    \ a password policy to be enforced across the sources in the sync group, and select\
    \ the sources to include in the sync group. \n\nAdministrators can also delete\
    \ sync groups in Identity Security Cloud, but they should know the following before\
    \ they do: \n\n- Passwords related to the associated sources will become independent,\
    \ so changing one will not change the others anymore. \n\n- Passwords for the\
    \ sources' connected applications will also become independent. \n\n- Password\
    \ policies assigned to the sync group are then assigned directly to the associated\
    \ sources. \nTo change the password policy for a source, administrators must edit\
    \ it directly. \n\nOnce the password sync group has been created, users can update\
    \ the password for the group in Password Manager.\n\nRefer to [Managing Password\
    \ Sync Groups](https://documentation.sailpoint.com/saas/help/pwd/sync_grps.html)\
    \ for more information about password sync groups.\n"
  name: Password Sync Groups
- description: "Use this API to implement personal access token (PAT) functionality.\
    \ \nWith this functionality in place, users can use PATs as an alternative to\
    \ passwords for authentication in Identity Security Cloud. \n\nPATs embed user\
    \ information into the client ID and secret. \nThis replaces the API clients'\
    \ need to store and provide a username and password to establish a connection,\
    \ improving Identity Security Cloud organizations' integration security. \n\n\
    In Identity Security Cloud, users can do the following to create and manage their\
    \ PATs: Select the dropdown menu under their names, select Preferences, and then\
    \ select Personal Access Tokens. \nThey must then provide a description about\
    \ the token's purpose. \nThey can then select 'Create Token' at the bottom of\
    \ the page to generate and view the Secret and Client ID. \n\nRefer to [Managing\
    \ Personal Access Tokens](https://documentation.sailpoint.com/saas/help/common/generate_tokens.html)\
    \ for more information about PATs.\n"
  name: Personal Access Tokens
- description: "Use this API in conjunction with [Public Identites Config](https://developer.sailpoint.com/docs/api/v3/public-identities-config/)\
    \ to enable non-administrators to view identities' publicly visible attributes.\
    \ \nWith this functionality in place, non-administrators can view identity attributes\
    \ other than the default attributes (email, lifecycle state, and manager), depending\
    \ on which identity attributes their organization administrators have made public.\
    \ \nThis can be helpful for access approvers, certification reviewers, managers\
    \ viewing their direct reports' access, and source owners viewing their tasks.\n"
  name: Public Identities
- description: "Use this API to implement public identity configuration functionality.\
    \ \nWith this functionality in place, administrators can make up to 5 identity\
    \ attributes publicly visible so other non-administrator users can see the relevant\
    \ information they need to make decisions. \nThis can be helpful for approvers\
    \ making approvals, certification reviewers, managers viewing their direct reports'\
    \ access, and source owners viewing their tasks.\n\nBy default, non-administrators\
    \ can select an identity and view the following attributes: email, lifecycle state,\
    \ and manager. \nHowever, it may be helpful for a non-administrator reviewer to\
    \ see other identity attributes like department, region, title, etc.\nAdministrators\
    \ can use this API to make those necessary identity attributes public to non-administrators.\
    \ \n\nFor example, a non-administrator deciding whether to approve another identity's\
    \ request for access to the Workday application, whose access may be restricted\
    \ to members of the HR department, would want to know whether the identity is\
    \ a member of the HR department. \nIf an administrator has used [Update Public\
    \ Identity Config](https://developer.sailpoint.com/docs/api/v3/update-public-identity-config/)\
    \ to make the \"department\" attribute public, the approver can see the department\
    \ and make a decision without requesting any more information.\n"
  name: Public Identities Config
- description: "Use this API to implement reports lifecycle managing and monitoring.\n\
    With this functionality in place, users can run reports, view their results, and\
    \ cancel reports in progress. \nThis can be potentially helpful for auditing purposes.\
    \ \n"
  name: Reports Data Extraction
- description: "Use this API to implement requestable object functionality. \nWith\
    \ this functionality in place, administrators can determine which access items\
    \ can be requested with the [Access Request APIs](https://developer.sailpoint.com/docs/api/v3/access-requests/),\
    \ along with their statuses. \nThis can be helpful for administrators who are\
    \ implementing and customizing access request functionality as a way of checking\
    \ which items are requestable as they are created, assigned, and made available.\n"
  name: Requestable Objects
- description: "Use this API to implement and customize role functionality.\nWith\
    \ this functionality in place, administrators can create roles and configure them\
    \ for use throughout Identity Security Cloud. \nIdentity Security Cloud can use\
    \ established criteria to automatically assign the roles to qualified users. This\
    \ enables users to get all the access they need quickly and securely and administrators\
    \ to spend their time on other tasks.\n\nEntitlements represent the most granular\
    \ level of access in Identity Security Cloud. \nAccess profiles represent the\
    \ next level and often group entitlements. \nRoles represent the broadest level\
    \ of access and often group access profiles. \n\nFor example, an Active Directory\
    \ source in Identity Security Cloud can have multiple entitlements: the first,\
    \ 'Employees,' may represent the access all employees have at the organization,\
    \ and a second, 'Developers,' may represent the access all developers have at\
    \ the organization.\n\nAn administrator can then create a broader set of access\
    \ in the form of an access profile, 'AD Developers' grouping the 'Employees' entitlement\
    \ with the 'Developers' entitlement.\n\nAn administrator can then create an even\
    \ broader set of access in the form of a role grouping the 'AD Developers' access\
    \ profile with another profile, 'GitHub Developers,' grouping entitlements for\
    \ the GitHub source.\n\nWhen users only need Active Directory employee access,\
    \ they can request access to the 'Employees' entitlement.\n\nWhen users need both\
    \ Active Directory employee and developer access, they can request access to the\
    \ 'AD Developers' access profile.\n\nWhen users need both the 'AD Developers'\
    \ access profile and the 'GitHub Developers' access profile, they can request\
    \ access to the role grouping both. \n\nRoles often represent positions within\
    \ organizations. \nFor example, an organization's accountant can access all the\
    \ tools the organization's accountants need with the 'Accountant' role. \nIf the\
    \ accountant switches to engineering, a qualified member of the organization can\
    \ quickly revoke the accountant's 'Accountant' access and grant access to the\
    \ 'Engineer' role instead, granting access to all the tools the organization's\
    \ engineers need.\n\nIn Identity Security Cloud, adminstrators can use the Access\
    \ drop-down menu and select Roles to view, configure, and delete existing roles,\
    \ as well as create new ones. \nAdministrators can enable and disable the role,\
    \ and they can also make the following configurations: \n\n- Manage Access: Manage\
    \ the role's access by adding or removing access profiles.\n\n- Define Assignment:\
    \ Define the criteria Identity Security Cloud uses to assign the role to identities.\
    \ \nUse the first option, 'Standard Criteria,' to provide specific criteria for\
    \ assignment like specific account attributes, entitlements, or identity attributes.\
    \ \nUse the second, 'Identity List,' to specify the identities for assignment.\n\
    \n- Access Requests: Configure roles to be requestable and establish an approval\
    \ process for any requests that the role be granted or revoked. \nDo not configure\
    \ a role to be requestable without establishing a secure access request approval\
    \ process for that role first. \n\nRefer to [Working with Roles](https://documentation.sailpoint.com/saas/help/access/roles.html)\
    \ for more information about roles.\n"
  name: Roles
- description: "Use this API to implement saved search functionality. \nWith saved\
    \ search functionality in place, users can save search queries and then view those\
    \ saved searches, as well as rerun them. \n\nSearch queries in Identity Security\
    \ Cloud can grow very long and specific, which can make reconstructing them difficult\
    \ or tedious, so it can be especially helpful to save search queries. \nIt also\
    \ opens the possibility to configure Identity Security Cloud to run the saved\
    \ queries on a schedule, which is essential to detecting user information and\
    \ access changes throughout an organization's tenant and across all its sources.\
    \ \nRefer to [Scheduled Search](https://developer.sailpoint.com/docs/api/v3/scheduled-search/)\
    \ for more information about running saved searches on a schedule. \n\nIn Identity\
    \ Security Cloud, users can save searches under a name, and then they can access\
    \ that saved search and run it again when they want. \n\nRefer to [Managing Saved\
    \ Searches](https://documentation.sailpoint.com/saas/help/search/saved-searches.html)\
    \ for more information about saving searches and using them.\n"
  name: Saved Search
- description: "Use this API to implement scheduled search functionality. \nWith scheduled\
    \ search functionality in place, users can run saved search queries on their tenants\
    \ on a schedule, and Identity Security Cloud emails them the search results. \n\
    Users can also share these search results with other users by email by adding\
    \ those users as subscribers, or those users can subscribe themselves. \n\nOne\
    \ of the greatest benefits of saving searches is the ability to run those searches\
    \ on a schedule. \nThis is essential for organizations to constantly detect any\
    \ changes to user information or access throughout their tenants and across all\
    \ their sources. \nFor example, the manager Amanda Ross can schedule a saved search\
    \ \"manager.name:amanda.ross AND attributes.location:austin\" on a schedule to\
    \ regularly stay aware of changes with the Austin employees reporting to her.\n\
    Identity Security Cloud emails her the search results when the search runs, so\
    \ she can work on other tasks instead of actively running this search.\n\nIn Identity\
    \ Security Cloud, scheduling a search involves a subscription. \nUsers can create\
    \ a subscription for a saved search and schedule it to run daily, weekly, or monthly\
    \ (you can only use one schedule option at a time). \nThe user can add other identities\
    \ as subscribers so when the scheduled search runs, the subscribers and the user\
    \ all receive emails. \n\nBy default, subscriptions exclude detailed results from\
    \ the emails, for security purposes. \nIncluding detailed results about user access\
    \ in an email may expose sensitive information.\nHowever, the subscription creator\
    \ can choose to include the information in the emails.  \n\nBy default, Identity\
    \ Security Cloud sends emails to the subscribers even when the searches do not\
    \ return new results. \nHowever, the subscription creator can choose to suppress\
    \ these empty emails. \n\nUsers can also subscribe to saved searches that already\
    \ have existing subscriptions so they receive emails when the searches run. \n\
    A saved search can have up to 10 subscriptions configured at a time. \n\nThe subscription\
    \ creator can enable, disable, or delete the subscription. \n\nRefer to [Subscribing\
    \ to Saved Searches](https://documentation.sailpoint.com/saas/help/search/saved-searches.html#subscribing-to-saved-searches)\
    \ for more information about scheduling searches and subscribing to them.\n"
  name: Scheduled Search
- description: "Use this API to implement search functionality. \nWith search functionality\
    \ in place, users can search their tenants for nearly any information from throughout\
    \ their organizations. \n\nIdentity Security Cloud enables organizations to store\
    \ user data from across all their connected sources and manage the users' access,\
    \ so the ability to query and filter that data is essential.  \nIts search goes\
    \ through all those sources and finds the results quickly and specifically. \n\
    \nThe search query is flexible - it can be very broad or very narrow. \nThe search\
    \ only returns results for searchable objects it is filtering for. \nThe following\
    \ objects are searchable: identities, roles, access profiles, entitlements, events,\
    \ and account activities. \nBy default, no filter is applied, so a search for\
    \ \"Ad\" returns both the identity \"Adam.Archer\" as well as the role \"Administrator.\"\
    \n\nUsers can further narrow their results by using Identity Security Cloud's\
    \ specific syntax and punctuation to structure their queries. \nFor example, the\
    \ query \"attributes.location:austin AND NOT manager.name:amanda.ross\" returns\
    \ all results associated with the Austin location, but it excludes those associated\
    \ with the manager Amanda Ross.\nRefer to [Building a Search Query](https://documentation.sailpoint.com/saas/help/search/building-query.html)\
    \ for more information about how to construct specific search queries. \n\nRefer\
    \ to [Using Search](https://documentation.sailpoint.com/saas/help/search/index.html)\
    \ for more information about Identity Security Cloud's search and its different\
    \ possibilities. \n\nThe search feature uses Elasticsearch as a datastore and\
    \ query engine. \nThe power of Elasticsearch makes this feature suitable for ad-hoc\
    \ reporting.\nHowever, data from the operational databases (ex. identities, roles,\
    \ events, etc) has to be ingested into Elasticsearch. \nThis ingestion process\
    \ introduces a latency from when the operational data is created to when it is\
    \ available in search. \nDepending on the system load, this can take a few seconds\
    \ to a few minutes. \nPlease keep this latency in mind when you use search.\n"
  name: Search
- description: "Use this API to implement search attribute configuration functionality,\
    \ along with [Search](https://developer.sailpoint.com/docs/api/v3/search).\nWith\
    \ this functionality in place, administrators can create custom search attributes\
    \ that and run extended searches based on those attributes to further narrow down\
    \ their searches and get the information and insights they want. \n\nIdentity\
    \ Security Cloud (ISC) enables organizations to store user data from across all\
    \ their connected sources and manage the users' access, so the ability to query\
    \ and filter that data is essential.  \nIts search goes through all those sources\
    \ and finds the results quickly and specifically. \n\nThe search query is flexible\
    \ - it can be very broad or very narrow. \nThe search only returns results for\
    \ searchable objects it is filtering for. \nThe following objects are searchable:\
    \ identities, roles, access profiles, entitlements, events, and account activities.\
    \ \nBy default, no filter is applied, so a search for \"Ad\" returns both the\
    \ identity \"Adam.Archer\" as well as the role \"Administrator.\"\n\nUsers can\
    \ further narrow their results by using ISC's specific syntax and punctuation\
    \ to structure their queries. \nFor example, the query \"attributes.location:austin\
    \ AND NOT manager.name:amanda.ross\" returns all results associated with the Austin\
    \ location, but it excludes those associated with the manager Amanda Ross.\nRefer\
    \ to [Building a Search Query](https://documentation.sailpoint.com/saas/help/search/building-query.html)\
    \ for more information about how to construct specific search queries. \n\nRefer\
    \ to [Using Search](https://documentation.sailpoint.com/saas/help/search/index.html)\
    \ for more information about ISC's search and its different possibilities. \n\n\
    With Search Attribute Configuration, administrators can create, manage, and run\
    \ searches based on the attributes they want to search. \n"
  name: Search Attribute Configuration
- description: "Use this API to implement and customize access request segment functionality.\
    \ \nWith this functionality in place, administrators can create and manage access\
    \ request segments. \nSegments provide organizations with a way to make the access\
    \ their users have even more granular - this can simply the access request process\
    \ for the organization's users and improves security by reducing the risk of overprovisoning\
    \ access. \n\nSegments represent sets of identities, all grouped by specified\
    \ identity attributes, who are only able to see and access the access items associated\
    \ with their segments.\nFor example, administrators could group all their organization's\
    \ London office employees into one segment, \"London Office Employees,\" by their\
    \ shared location. \nThe administrators could then define the access items the\
    \ London employees would need, and the identities in the \"London Office Employees\"\
    \ would then only be able to see and access those items.\n\nIn Identity Security\
    \ Cloud, administrators can use the 'Access' drop-down menu and select 'Segments'\
    \ to reach the 'Access Requests Segments' page. \nThis page lists all the existing\
    \ access request segments, along with their statuses, enabled or disabled. \n\
    Administrators can use this page to create, edit, enable, disable, and delete\
    \ segments. \nTo create a segment, an administrator must provide a name, define\
    \ the identities grouped in the segment, and define the items the identities in\
    \ the segment can access.\nThese items can be access profiles, roles, or entitlements.\
    \ \n\nWhen administrators use the API to create and manage segments, they use\
    \ a JSON expression in the `visibilityCriteria` object to define the segment's\
    \ identities and access items. \n\nRefer to [Managing Access Request Segments](https://documentation.sailpoint.com/saas/help/requests/segments.html)\
    \ for more information about segments in Identity Security Cloud.\n"
  name: Segments
- description: "Use this API to build an integration between Identity Security Cloud\
    \ and a service desk ITSM (IT service management) solution. \nOnce an administrator\
    \ builds this integration between Identity Security Cloud and a service desk,\
    \ users can use Identity Security Cloud to raise and track tickets that are synchronized\
    \ between Identity Security Cloud and the service desk. \n\nIn Identity Security\
    \ Cloud, administrators can create a service desk integration (sometimes also\
    \ called an SDIM, or Service Desk Integration Module) by going to Admin > Connections\
    \ > Service Desk and selecting 'Create.'\n\nTo create a Generic Service Desk integration,\
    \ for example, administrators must provide the required information on the General\
    \ Settings page, the Connectivity and Authentication information, Ticket Creation\
    \ information, Status Mapping information, and Requester Source information on\
    \ the Configure page. \nRefer to [Integrating SailPoint with Generic Service Desk](https://documentation.sailpoint.com/connectors/generic_sd/help/integrating_generic_service_desk/intro.html)\
    \ for more information about the process of setting up a Generic Service Desk\
    \ in Identity Security Cloud.\n\nAdministrators can create various service desk\
    \ integrations, all with their own nuances. \nThe following service desk integrations\
    \ are available: \n\n- [Atlassian Cloud Jira Service Management](https://documentation.sailpoint.com/connectors/atlassian/jira_cloud/help/integrating_jira_cloud_sd/introduction.html)\n\
    \n- [Atlassian Server Jira Service Management](https://documentation.sailpoint.com/connectors/atlassian/jira_server/help/integrating_jira_server_sd/introduction.html)\n\
    \n- [BMC Helix ITSM Service Desk](https://documentation.sailpoint.com/connectors/bmc/helix_ITSM_sd/help/integrating_bmc_helix_itsm_sd/intro.html)\n\
    \n- [BMC Helix Remedyforce Service Desk](https://documentation.sailpoint.com/connectors/bmc/helix_remedyforce_sd/help/integrating_bmc_helix_remedyforce_sd/intro.html)\n\
    \n- [Generic Service Desk](https://documentation.sailpoint.com/connectors/generic_sd/help/integrating_generic_service_desk/intro.html)\n\
    \n- [ServiceNow Service Desk](https://documentation.sailpoint.com/connectors/servicenow/sdim/help/integrating_servicenow_sdim/intro.html)\n\
    \n- [Zendesk Service Desk](https://documentation.sailpoint.com/connectors/zendesk/help/integrating_zendesk_sd/introduction.html)\n"
  name: Service Desk Integration
- description: "Use this API to implement and manage \"separation of duties\" (SOD)\
    \ policies. \nWith SOD policy functionality in place, administrators can organize\
    \ the access in their tenants to prevent individuals from gaining conflicting\
    \ or excessive access. \n\n\"Separation of duties\" refers to the concept that\
    \ people shouldn't have conflicting sets of access - all their access should be\
    \ configured in a way that protects your organization's assets and data.  \nFor\
    \ example, people who record monetary transactions shouldn't be able to issue\
    \ payment for those transactions.\nAny changes to major system configurations\
    \ should be approved by someone other than the person requesting the change. \n\
    \nOrganizations can use \"separation of duties\" (SOD) policies to enforce and\
    \ track their internal security rules throughout their tenants.\nThese SOD policies\
    \ limit each user's involvement in important processes and protects the organization\
    \ from individuals gaining excessive access. \n\nTo create SOD policies in Identity\
    \ Security Cloud, administrators use 'Search' and then access 'Policies'.\nTo\
    \ create a policy, they must configure two lists of access items. Each access\
    \ item can only be added to one of the two lists.\nThey can search for the entitlements\
    \ they want to add to these access lists.\n\n>Note: You can have a maximum of\
    \ 500 policies of any type (including general policies) in your organization.\
    \ In each access-based SOD policy, you can have a maximum of 50 entitlements in\
    \ each access list.  \n\nOnce a SOD policy is in place, if an identity has access\
    \ items on both lists, a SOD violation will trigger. \nThese violations are included\
    \ in SOD violation reports that other users will see in emails at regular intervals\
    \ if they're subscribed to the SOD policy.\nThe other users can then better help\
    \ to enforce these SOD policies. \n\nTo create a subscription to a SOD policy\
    \ in Identity Security Cloud, administrators use 'Search' and then access 'Layers'.\n\
    They can create a subscription to the policy and schedule it to run at a regular\
    \ interval. \n\nRefer to [Managing Policies](https://documentation.sailpoint.com/saas/help/sod/manage-policies.html)\
    \ for more information about SOD policies. \n\nRefer to [Subscribe to a SOD Policy](https://documentation.sailpoint.com/saas/help/sod/policy-violations.html#subscribe-to-an-sod-policy)\
    \ for more information about SOD policy subscriptions.\n"
  name: SOD Policies
- description: "Use this API to check for current \"separation of duties\" (SOD) policy\
    \ violations as well as potential future SOD policy violations. \nWith SOD violation\
    \ functionality in place, administrators can get information about current SOD\
    \ policy violations and predict whether an access change will trigger new violations,\
    \ which helps to prevent them from occurring at all. \n\n\"Separation of duties\"\
    \ refers to the concept that people shouldn't have conflicting sets of access\
    \ - all their access should be configured in a way that protects your organization's\
    \ assets and data.  \nFor example, people who record monetary transactions shouldn't\
    \ be able to issue payment for those transactions.\nAny changes to major system\
    \ configurations should be approved by someone other than the person requesting\
    \ the change. \n\nOrganizations can use \"separation of duties\" (SOD) policies\
    \ to enforce and track their internal security rules throughout their tenants.\n\
    These SOD policies limit each user's involvement in important processes and protects\
    \ the organization from individuals gaining excessive access. \n\nOnce a SOD policy\
    \ is in place, if an identity has conflicting access items, a SOD violation will\
    \ trigger. \nThese violations are included in SOD violation reports that other\
    \ users will see in emails at regular intervals if they're subscribed to the SOD\
    \ policy.\nThe other users can then better help to enforce these SOD policies.\n\
    \nAdministrators can use the SOD violations APIs to check a set of identities\
    \ for any current SOD violations, and they can use them to check whether adding\
    \ an access item would potentially trigger a SOD violation. \nThis second option\
    \ is a good way to prevent SOD violations from triggering at all. \n\nRefer to\
    \ [Handling Policy Violations](https://documentation.sailpoint.com/saas/help/sod/policy-violations.html)\
    \ for more information about SOD policy violations. \n"
  name: SOD Violations
- description: |
    Use this API to implement source usage insight functionality.
    With this functionality in place, administrators can gather information and insights about how their tenants' sources are being used.
    This allows organizations to get the information they need to start optimizing and securing source usage.
  name: Source Usages
- description: "Use this API to implement and customize source functionality. \nWith\
    \ source functionality in place, organizations can use Identity Security Cloud\
    \ to connect their various sources and user data sets and manage access across\
    \ all those different sources in a secure, scalable way. \n\n[Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html)\
    \ refer to the Identity Security Cloud representations for external applications,\
    \ databases, and directory management systems that maintain their own sets of\
    \ users, like Dropbox, GitHub, and Workday, for example.\nOrganizations may use\
    \ hundreds, if not thousands, of different source systems, and any one employee\
    \ within an organization likely has a different user record on each source, often\
    \ with different permissions on many of those records. \nConnecting these sources\
    \ to Identity Security Cloud makes it possible to manage user access across them\
    \ all.\nThen, if a new hire starts at an organization, Identity Security Cloud\
    \ can grant the new hire access to all the sources they need.\nIf an employee\
    \ moves to a new department and needs access to new sources but no longer needs\
    \ access to others, Identity Security Cloud can grant the necessary access and\
    \ revoke the unnecessary access for all the employee's various sources. \nIf an\
    \ employee leaves the company, Identity Security Cloud can revoke access to all\
    \ the employee's various source accounts immediately. \nThese are just a few examples\
    \ of the many ways that source functionality makes identity governance easier,\
    \ more efficient, and more secure. \n\nIn Identity Security Cloud, administrators\
    \ can create configure, manage, and edit sources, and they can designate other\
    \ users as source admins to be able to do so.\nThey can also designate users as\
    \ source sub-admins, who can perform the same source actions but only on sources\
    \ associated with their governance groups.\nAdmins go to Connections > Sources\
    \ to see a list of the existing source representations in their organizations.\
    \ \nThey can create new sources or select existing ones. \n\nTo create a new source,\
    \ the following must be specified: Source Name, Description, Source Owner, and\
    \ Connection Type.\nRefer to [Configuring a Source](https://documentation.sailpoint.com/saas/help/accounts/loading_data.html#configuring-a-source)\
    \ for more information about the source configuration process. \n\nIdentity Security\
    \ Cloud connects with its sources either by a direct communication with the source\
    \ server (connection information specific to the source must be provided) or a\
    \ flat file feed, a CSV file containing all the relevant information about the\
    \ accounts to be loaded in.\nDifferent sources use different connectors to share\
    \ data with Identity Security Cloud, and each connector's setup process is specific\
    \ to that connector. \nSailPoint has built a number of connectors to come out\
    \ of the box and connect to the most common sources, and SailPoint actively maintains\
    \ these connectors.\nRefer to [Identity Security Cloud Connectors](https://documentation.sailpoint.com/connectors/identitynow/landingpages/help/landingpages/identitynow_connectivity_landing.html)\
    \ for more information about these SailPoint supported connectors. \nRefer to\
    \ the following links for more information about two useful connectors: \n\n-\
    \ [JDBC Connector](https://documentation.sailpoint.com/connectors/jdbc/help/integrating_jdbc/introduction.html):\
    \ This customizable connector an directly connect to databases that support JDBC\
    \ (Java Database Connectivity).\n\n- [Web Services Connector](https://documentation.sailpoint.com/connectors/webservices/help/integrating_webservices/introduction.html):\
    \ This connector can directly connect to databases that support Web Services.\
    \ \n\nRefer to [SaaS Connectivity](https://developer.sailpoint.com/docs/connectivity/saas-connectivity/)\
    \ for more information about SailPoint's new connectivity framework that makes\
    \ it easy to build and manage custom connectors to SaaS sources. \n\nWhen admins\
    \ select existing sources, they can view the following information about the source:\n\
    \n- Associated connections (any associated identity profiles, apps, or references\
    \ to the source in a transform).\n\n- Associated user accounts. These accounts\
    \ are linked to their identities - this provides a more complete picture of each\
    \ user's access across sources.\n\n- Associated entitlements (sets of access rights\
    \ on sources).\n\n- Associated access profiles (groupings of entitlements). \n\
    \nThe user account data and the entitlements update with each data aggregation\
    \ from the source. \nOrganizations generally run scheduled, automated data aggregations\
    \ to ensure that their data is always in sync between their sources and their\
    \ Identity Security Cloud tenants so an access change on a source is detected\
    \ quickly in Identity Security Cloud.\nAdmins can view a history of these aggregations,\
    \ and they can also run manual imports. \nRefer to [Loading Account Data](https://documentation.sailpoint.com/saas/help/accounts/loading_data.html)\
    \ for more information about manual and scheduled aggregations. \n\nAdmins can\
    \ also make changes to determine which user account data Identity Security Cloud\
    \ collects from the source and how it correlates that account data with identity\
    \ data. \nTo define which account attributes the source shares with Identity Security\
    \ Cloud, admins can edit the account schema on the source.\nRefer to [Managing\
    \ Source Account Schemas](https://documentation.sailpoint.com/saas/help/accounts/schema.html)\
    \ for more information about source account schemas and how to edit them. \nTo\
    \ define the mapping between the source account attributes and their correlating\
    \ identity attributes, admins can edit the correlation configuration on the source.\
    \ \nRefer to [Assigning Source Accounts to Identities](https://documentation.sailpoint.com/saas/help/accounts/correlation.html)\
    \ for more information about this correlation process between source accounts\
    \ and identities.\n\nAdmins can also delete sources, but they must first ensure\
    \ that the sources no longer have any active connections: the source must not\
    \ be associated with any identity profile or any app, and it must not be referenced\
    \ by any transform.\nRefer to [Deleting Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html#deleting-sources)\
    \ for more information about deleting sources. \n\nWell organized, mapped out\
    \ connections between sources and Identity Security Cloud are essential to achieving\
    \ comprehensive identity access governance across all the source systems organizations\
    \ need. \nRefer to [Managing Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html)\
    \ for more information about all the different things admins can do with sources\
    \ once they are connected.\n"
  name: Sources
- description: "Use this API to implement object tagging functionality. \nWith object\
    \ tagging functionality in place, any user in an organization can use tags as\
    \ a way to group objects together and find them more quickly when the user searches\
    \ Identity Security Cloud. \n\nIn Identity Security Cloud, users can search their\
    \ tenants for information and add tags objects they find.\nTagging an object provides\
    \ users with a way of grouping objects together and makes it easier to find these\
    \ objects in the future. \n\nFor example, if a user is searching for an entitlement\
    \ that grants a risky level of access to Active Directory, it's possible that\
    \ the user may have to search through hundreds of entitlements to find the correct\
    \ one. \nOnce the user finds that entitlement, the user can add a tag to the entitlement,\
    \ \"AD_RISKY\" to make it easier to find the entitlement again.\nThe user can\
    \ add the same tag to multiple objects the user wants to group together for an\
    \ easy future search, and the user can also do so in bulk.\nWhen the user wants\
    \ to find that tagged entitlement again, the user can search for \"tags:AD_RISKY\"\
    \ to find all objects with that tag. \n\nWith the API, you can tag even more different\
    \ object types than you can in Identity Security Cloud (access profiles, entitlements,\
    \ identities, and roles). \nYou can use the API to tag all these objects:\n\n\
    - Access profiles \n\n- Applications \n\n- Certification campaigns\n\n- Entitlements\n\
    \n- Identities \n\n- Roles \n\n- SOD (separation of duties) policies\n\n- Sources\
    \ \n\nYou can also use the API to directly find, create, and manage tagged objects\
    \ without using search queries. \n\nThere are limits to tags: \n\n- You can have\
    \ up to 500 different tags in your tenant.\n\n- You can apply up to 30 tags to\
    \ one object. \n\n- You can have up to 10,000 tag associations, pairings of 1\
    \ tag to 1 object, in your tenant. \n\nBecause of these limits, it is recommended\
    \ that you work with your governance experts and security teams to establish a\
    \ list of tags that are most expressive of governance objects and access managed\
    \ by Identity Security Cloud. \n\nThese are the types of information often expressed\
    \ in tags: \n\n- Affected departments\n\n- Compliance and regulatory categories\
    \ \n\n- Remediation urgency levels \n\n- Risk levels \n\nRefer to [Tagging Items\
    \ in Search](https://documentation.sailpoint.com/saas/help/search/index.html?h=tags#tagging-items-in-search)\
    \ for more information about tagging objects in Identity Security Cloud. \n"
  name: Tagged Objects
- description: "The purpose of this API is to expose functionality for the manipulation\
    \ of Transform objects.\nTransforms are a form of configurable objects which define\
    \ an easy way to manipulate attribute data without having\nto write code. \n\n\
    Refer to [Transforms](https://developer.sailpoint.com/docs/extensibility/transforms/)\
    \ for more information about transforms.\n"
  name: Transforms
- description: "Use this API to implement work item functionality. \nWith this functionality\
    \ in place, users can manage their work items (tasks). \n\nWork items refer to\
    \ the tasks users see in Identity Security Cloud's Task Manager. \nThey can see\
    \ the pending work items they need to complete, as well as the work items they\
    \ have already completed. \nTask Manager lists the work items along with the involved\
    \ sources, identities, accounts, and the timestamp when the work item was created.\
    \ \nFor example, a user may see a pending 'Create an Account' work item for the\
    \ identity Fred.Astaire in GitHub for Fred's GitHub account, fred-astaire-sp.\
    \ \nOnce the user completes the work item, the work item will be listed with his\
    \ or her other completed work items. \n\nTo complete work items, users can use\
    \ their dashboards and select the 'My Tasks' widget. \nThe widget will list any\
    \ work items they need to complete, and they can select the work item from the\
    \ list to review its details. \nWhen they complete the work item, they can select\
    \ 'Mark Complete' to add it to their list of completed work items. \n\nRefer to\
    \ [Task Manager](https://documentation.sailpoint.com/saas/user-help/task_manager.html)\
    \ for more information about work items, including the different types of work\
    \ items users may need to complete.\n"
  name: Work Items
- description: |
    Workflows allow administrators to create custom automation scripts directly within Identity Security Cloud.  These automation scripts respond to [event triggers](https://developer.sailpoint.com/docs/extensibility/event-triggers/#how-to-get-started-with-event-triggers) and perform a series of actions to perform tasks that are either too cumbersome or not available in the Identity Security Cloud UI.  Workflows can be configured via a graphical user interface within Identity Security Cloud, or by creating and uploading a JSON formatted script to the Workflow service.  The Workflows API collection provides the necessary functionality to create, manage, and test your workflows via REST.
  name: Workflows
paths:
  /access-profiles:
    get:
      description: "Get a list of access profiles. \n>**Note:** When you filter for\
        \ access profiles that have the '+' symbol in their names, the response is\
        \ blank. "
      operationId: listAccessProfiles
      parameters:
      - description: |-
          Filters the returned list according to what is visible to the indicated ROLE_SUBADMIN or SOURCE_SUBADMIN identity. The value of the parameter is either an identity ID or the special value **me**, which is shorthand for the calling identity's ID.

          If you specify an identity that isn't a subadmin, the API returns a 400 Bad Request error.
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: query
        name: for-subadmin
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: "Filter results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\
          \nFiltering is supported for the following fields and operators:\n\n**id**:\
          \ *eq, in*\n\n**name**: *eq, sw*\n\n**created**: *gt, ge, le*\n\n**modified**:\
          \ *gt, lt, ge, le*\n\n**owner.id**: *eq, in*\n\n**requestable**: *eq*\n\n\
          **source.id**: *eq, in*\n\nSupported composite operators are *and, or*\n\
          \nFiltering is not supported for access profiles and entitlements that have\
          \ the '+' symbol in their names. "
        example: name eq "SailPoint Support"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, created, modified**
        example: "name,-modified"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: |-
          Filters access profiles to only those assigned to the segment(s) with the specified IDs.
          If segmentation is currently unavailable, specifying this parameter results in an error.
        example: "0b5c9f25-83c6-4762-9073-e38f7bb2ae26,2e8d8180-24bc-4d21-91c6-7affdb473b0d"
        in: query
        name: for-segment-ids
        required: false
        schema:
          format: comma-separated
          type: string
      - description: "Indicates whether the response list should contain unsegmented\
          \ access profiles. If `for-segment-ids` is absent or empty, specifying *include-unsegmented*\
          \ as `false` results in an error."
        example: false
        in: query
        name: include-unsegmented
        required: false
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessProfile'
                type: array
          description: List of access profiles.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-profile:read
      - applicationAuth:
        - idn:access-profile:read
      summary: List access profiles
      tags:
      - Access Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    post:
      description: |-
        Create an access profile.
        A user with `ROLE_SUBADMIN` or `SOURCE_SUBADMIN` authority must be associated with the access profile's source.
        The maximum supported length for the description field is 2000 characters. Longer descriptions will be preserved for existing access profiles.  However, any new access profiles as well as any updates to existing descriptions are limited to 2000 characters.
        >**Note:** To use this endpoint, you need all the listed scopes.
      operationId: createAccessProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessProfile'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: Access profile created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-profile:manage
        - idn:entitlement:read
        - idn:identity:read
        - idn:sources:read
      - applicationAuth:
        - idn:access-profile:manage
        - idn:entitlement:read
        - idn:identity:read
        - idn:sources:read
      summary: Create access profile
      tags:
      - Access Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /access-profiles/{id}:
    delete:
      description: |-
        This API deletes an existing Access Profile.

        The Access Profile must not be in use, for example, Access Profile can not be deleted if they belong to an Application, Life Cycle State or a Role. If it is, a 400 error is returned.

        A user with SOURCE_SUBADMIN must be able to administer the Source associated with the Access Profile.
      operationId: deleteAccessProfile
      parameters:
      - description: ID of the Access Profile to delete
        in: path
        name: id
        required: true
        schema:
          example: 2c91808a7813090a017814121919ecca
          type: string
        x-sailpoint-resource-operation-id: listAccessProfiles
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              examples:
                "400.2.1.0 Object in use by another":
                  description: Returned when an access profile cannot be deleted as
                    it's being used
                  value:
                    detailCode: 400.2.1.0 Object in use by another
                    trackingId: c9c1033c55b84ebc9e93e926dcf8b8b3
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The "testAccessProfile" access profile can't be deleted
                        because it's in use.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Returned when an access profile cannot be deleted as it's being
            used.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-profile:manage
      - applicationAuth:
        - idn:access-profile:manage
      summary: Delete the specified access profile
      tags:
      - Access Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    get:
      description: This API returns an Access Profile by its ID.
      operationId: getAccessProfile
      parameters:
      - description: ID of the Access Profile
        example: 2c9180837ca6693d017ca8d097500149
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listAccessProfiles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: An AccessProfile
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-profile:read
      - applicationAuth:
        - idn:access-profile:read
      summary: Get an access profile
      tags:
      - Access Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    patch:
      description: |-
        This API updates an existing Access Profile. The following fields are patchable:

        **name**

        **description**

        **enabled**

        **owner**

        **requestable**

        **accessRequestConfig**

        **revokeRequestConfig**

        **segments**

        **entitlements**

        **provisioningCriteria**

        **source** (must be updated with entitlements belonging to new source in the same API call)

        If you need to change the `source` of the access profile, you can do so only if you update the `entitlements` in the same API call.  The new entitlements can only come from the target source that you want to change to.  Look for the example "Replace Source" in the examples dropdown.

        A user with SOURCE_SUBADMIN may only use this API to patch Access Profiles which are associated with Sources they are able to administer.
        >  The maximum supported length for the description field is 2000 characters. Longer descriptions will be preserved for existing access profiles, however, any new access profiles as well as any updates to existing descriptions will be limited to 2000 characters.

        > You can only add or replace **entitlements** that exist on the source that the access profile is attached to. You can use the **list entitlements** endpoint with the **filters** query parameter to get a list of available entitlements on the access profile's source.
      operationId: patchAccessProfile
      parameters:
      - description: ID of the Access Profile to patch
        in: path
        name: id
        required: true
        schema:
          example: 2c91808a7813090a017814121919ecca
          type: string
        x-sailpoint-resource-operation-id: listAccessProfiles
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Add Entitlements:
                description: Add one or more entitlements to the end of the list
                value:
                - op: add
                  path: /entitlements
                  value:
                  - id: 2c9180857725c14301772a93bb77242d
                    type: ENTITLEMENT
                    name: AD User Group
              Insert Entitlement:
                description: Add an entitlement at the beginning of the entitlement
                  list
                value:
                - op: add
                  path: /entitlements/0
                  value:
                    id: 2c9180857725c14301772a93bb77242d
                    type: ENTITLEMENT
                    name: AD User Group
              Replace Entitlements:
                description: Replace all entitlements with a new list of entitlements
                value:
                - op: replace
                  path: /entitlements
                  value:
                  - id: 2c9180857725c14301772a93bb77242d
                    type: ENTITLEMENT
                    name: AD User Group
              Remove Entitlement:
                description: Remove the first entitlement in the list
                value:
                - op: remove
                  path: /entitlements/0
              Replace Source:
                description: Change the source and the entitlements of the access
                  profile
                value:
                - op: replace
                  path: /source
                  value:
                    id: 2c9180887671ff8c01767b4671fb7d5e
                    type: SOURCE
                    name: Employees
                - op: replace
                  path: /entitlements
                  value:
                  - id: 2c9180877677453d01767b4b08f63386
                    type: ENTITLEMENT
                    name: DevRel
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: Responds with the Access Profile as updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-profile:manage
      - applicationAuth:
        - idn:access-profile:manage
      summary: Patch a specified access profile
      tags:
      - Access Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /access-profiles/bulk-delete:
    post:
      description: "This endpoint initiates a bulk deletion of one or more access\
        \ profiles.\nWhen the request is successful, the endpoint returns the bulk\
        \ delete's task result ID.  To follow the task, you can use [Get Task Status\
        \ by ID](https://developer.sailpoint.com/docs/api/beta/get-task-status), which\
        \ will return the task result's status and information. \nThis endpoint can\
        \ only bulk delete up to a limit of 50 access profiles per request. \nBy default,\
        \ if any of the indicated access profiles are in use, no deletions will be\
        \ performed and the **inUse** field of the response indicates the usages that\
        \ must be removed first. If the request field **bestEffortOnly** is **true**,\
        \ however, usages are reported in the **inUse** response field but all other\
        \ indicated access profiles will be deleted.\nA SOURCE_SUBADMIN user can only\
        \ use this endpoint to delete access profiles associated with sources they're\
        \ able to administer."
      operationId: deleteAccessProfilesInBulk
      requestBody:
        content:
          application/json:
            example:
              bestEffortOnly: true
              accessProfileIds:
              - 2c91808876438bb2017668b91919ecca
              - 2c91808876438ba801766e129f151816
            schema:
              $ref: '#/components/schemas/AccessProfileBulkDeleteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                pending: []
                inUse:
                - accessProfileId: 2c91808876438ba801766e129f151816
                  usages:
                  - type: Role
                    id: 2c9180887643764201766e9f6e121518
              schema:
                $ref: '#/components/schemas/AccessProfileBulkDeleteResponse'
          description: "Returned only if **bestEffortOnly** is **false**, and one\
            \ or more Access Profiles are in use."
        "202":
          content:
            application/json:
              example:
                taskId: 2c91808a7813090a01781412a1119a20
                pending:
                - 2c91808a7813090a017813fe1919ecca
                inUse:
                - accessProfileId: 2c91808876438ba801766e129f151816
                  usages:
                  - type: Role
                    id: 2c9180887643764201766e9f6e121518
              schema:
                $ref: '#/components/schemas/AccessProfileBulkDeleteResponse'
          description: Returned if at least one deletion will be performed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-profile:manage
      - applicationAuth:
        - idn:access-profile:manage
      summary: Delete access profile(s)
      tags:
      - Access Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /access-profiles/{id}/entitlements:
    get:
      description: "Use this API to get a list of an access profile's entitlements.\
        \ \nA SOURCE_SUBADMIN user must have access to the source associated with\
        \ the specified access profile.\n>**Note:** When you filter for access profiles\
        \ that have the '+' symbol in their names, the response is blank. "
      operationId: getAccessProfileEntitlements
      parameters:
      - description: ID of the access profile containing the entitlements.
        in: path
        name: id
        required: true
        schema:
          example: 2c91808a7813090a017814121919ecca
          type: string
        x-sailpoint-resource-operation-id: listAccessProfiles
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: "Filter results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\
          \nFiltering is supported for the following fields and operators:\n\n**id**:\
          \ *eq, in*\n\n**name**: *eq, sw*\n\n**attribute**: *eq, sw*\n\n**value**:\
          \ *eq, sw*\n\n**created**: *gt, lt, ge, le*\n\n**modified**: *gt, lt, ge,\
          \ le*\n\n**owner.id**: *eq, in*\n\n**source.id**: *eq, in*\n\nFiltering\
          \ is not supported for access profiles and entitlements that have the '+'\
          \ symbol in their names. "
        example: attribute eq "memberOf"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, attribute, value, created, modified**
        example: "name,-modified"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Entitlement'
                type: array
          description: List of entitlements.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-profile:read
      - applicationAuth:
        - idn:access-profile:read
      summary: List access profile's entitlements
      tags:
      - Access Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /access-requests:
    post:
      description: "Use this API to submit an access request in Identity Security\
        \ Cloud (ISC), where it follows any ISC approval processes.\n\n:::info\nThe\
        \ ability to request access using this API is constrained by the Access Request\
        \ Segments defined in the API token’s user context.\n:::\n\nAccess requests\
        \ are processed asynchronously by ISC. A successful response from this endpoint\
        \ means that the request\nhas been submitted to ISC and is queued for processing.\
        \ Because this endpoint is asynchronous, it doesn't return an error\nif you\
        \ submit duplicate access requests in quick succession or submit an access\
        \ request for access that is already in progress, approved, or rejected.\n\
        \nIt's best practice to check for any existing access requests that reference\
        \ the same access items before submitting a new access request. This can\n\
        be accomplished by using the [List Access Request Status](https://developer.sailpoint.com/idn/api/v3/list-access-request-status)\
        \ or the [Pending Access Request Approvals](https://developer.sailpoint.com/idn/api/v3/list-pending-approvals)\
        \ APIs. You can also\nuse the [Search API](https://developer.sailpoint.com/idn/api/v3/search)\
        \ to check the existing access items an identity has before submitting\nan\
        \ access request to ensure that you aren't requesting access that is already\
        \ granted. If you use this API to request access that an identity already\
        \ has, \nwithout changing the account details or end date information from\
        \ the existing assignment, \nthe API will cancel the request as a duplicate.\n\
        \nThere are two types of access request:\n\n__GRANT_ACCESS__\n* Can be requested\
        \ for multiple identities in a single request.\n* Supports self request and\
        \ request on behalf of other users. Refer to the [Get Access Request Configuration](https://developer.sailpoint.com/idn/api/v3/get-access-request-config)\
        \ endpoint for request configuration options.  \n* Allows any authenticated\
        \ token (except API) to call this endpoint to request to grant access to themselves.\
        \ Depending on the configuration, a user can request access for others.\n\
        * Roles, access profiles and entitlements can be requested.\n* You can specify\
        \ a `removeDate` to set or alter a sunset date-time on an assignment. The\
        \ removeDate must be a future date-time, in the UTC timezone. Additionally,\
        \ if the user already has the access assigned with a sunset date, you can\
        \ also submit a request without a `removeDate` to request removal of the sunset\
        \ date and time.\n* If a `removeDate` is specified, then the requested role,\
        \ access profile, or entitlement will be removed on that date and time.\n\
        * While requesting entitlements, maximum of 25 entitlements and 10 recipients\
        \ are allowed in a request.\n* Now supports an alternate field 'requestedForWithRequestedItems'\
        \ for users to specify account selections while requesting items where they\
        \ have more than one account on the source.\n \n__REVOKE_ACCESS__\n* Can only\
        \ be requested for a single identity at a time.\n* You cannot use an access\
        \ request to revoke access from an identity if that access has been granted\
        \ by role membership or by birthright provisioning. \n* Does not support self\
        \ request. Only manager can request to revoke access for their directly managed\
        \ employees.\n* If a `removeDate` is specified, then the requested role, access\
        \ profile, or entitlement will be removed on that date and time.\n* Roles,\
        \ access profiles, and entitlements can be requested for revocation.\n* Revoke\
        \ requests for entitlements are limited to 1 entitlement per access request\
        \ currently.\n* You can specify a `removeDate` to add or alter a sunset date\
        \ and time on an assignment. The `removeDate` must be a future date-time,\
        \ in the UTC timezone. If the user already has the access assigned with a\
        \ sunset date and time, the removeDate must be a date-time earlier than the\
        \ existing sunset date and time. \n* Allows a manager to request to revoke\
        \ access for direct employees. A user with ORG_ADMIN authority can also request\
        \ to revoke access from anyone.\n* Now supports REVOKE_ACCESS requests for\
        \ identities with multiple accounts on a single source, with the help of 'assignmentId'\
        \ and 'nativeIdentity' fields. These fields should be used within the 'requestedItems'\
        \ section for the revoke requests. \n* Usage of 'requestedForWithRequestedItems'\
        \ field is not supported for revoke requests.\n"
      operationId: createAccessRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestResponse'
          description: Access Request Response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-request:manage
      summary: Submit access request
      tags:
      - Access Requests
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - USER
  /access-requests/cancel:
    post:
      description: |-
        This API endpoint cancels a pending access request. An access request can be cancelled only if it has not passed the approval step.
        In addition to users with ORG_ADMIN, any user who originally submitted the access request may cancel it.
      operationId: cancelAccessRequest
      requestBody:
        content:
          application/json:
            example:
              accountActivityId: 2c91808568c529c60168cca6f90c1313
              comment: I requested this role by mistake.
            schema:
              $ref: '#/components/schemas/CancelAccessRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-request:cancel
      summary: Cancel access request
      tags:
      - Access Requests
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /access-request-config:
    get:
      description: This endpoint returns the current access-request configuration.
      operationId: getAccessRequestConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestConfig'
          description: Access Request Configuration Details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-request-config:read
      summary: Get access request configuration
      tags:
      - Access Requests
    put:
      description: This endpoint replaces the current access-request configuration.
      operationId: setAccessRequestConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequestConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestConfig'
          description: Access Request Configuration Details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-request-config:update
      summary: Update access request configuration
      tags:
      - Access Requests
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /access-request-status:
    get:
      description: |-
        Use this API to return a list of access request statuses based on the specified query parameters.
        If an access request was made for access that an identity already has, the API ignores the access request.  These ignored requests do not display in the list of access request statuses.
        Any user with any user level can get the status of their own access requests. A user with ORG_ADMIN is required to call this API to get a list of statuses for other users.
      operationId: listAccessRequestStatus
      parameters:
      - description: Filter the results by the identity the requests were made for.
          *me* indicates the current user. Mutually exclusive with *regarding-identity*.
        example: 2c9180877b2b6ea4017b2c545f971429
        in: query
        name: requested-for
        required: false
        schema:
          type: string
      - description: Filter the results by the identity who made the requests. *me*
          indicates the current user. Mutually exclusive with *regarding-identity*.
        example: 2c9180877b2b6ea4017b2c545f971429
        in: query
        name: requested-by
        required: false
        schema:
          type: string
      - description: Filter the results by the specified identity who is either the
          requester or target of the requests. *me* indicates the current user. Mutually
          exclusive with *requested-for* and *requested-by*.
        example: 2c9180877b2b6ea4017b2c545f971429
        in: query
        name: regarding-identity
        required: false
        schema:
          type: string
      - description: Filter the results by the specified identity who is the owner
          of the Identity Request Work Item. *me* indicates the current user.
        example: 2c9180877b2b6ea4017b2c545f971429
        in: query
        name: assigned-to
        required: false
        schema:
          type: string
      - description: "If this is true, the *X-Total-Count* response header populates\
          \ with the number of results that would be returned if limit and offset\
          \ were ignored."
        example: false
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: Max number of results to return.
        example: 100
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: Offset into the full result set. Usually specified with *limit*
          to paginate through the results. Defaults to 0 if not specified.
        example: 10
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **accessRequestId**: *eq, in, ge, gt, le, lt, ne, sw*

          **accountActivityItemId**: *eq, in, ge, gt, le, lt, ne, isnull, sw*

          **created**: *eq, in, ge, gt, le, lt, ne, isnull, sw*
        example: accountActivityItemId eq "2c918086771c86df0177401efcdf54c0"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, modified, accountActivityItemId, name**
        example: created
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: Filter the results by the state of the request. The only valid
          value is *EXECUTING*.
        example: request-state=EXECUTING
        in: query
        name: request-state
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RequestedItemStatus'
                type: array
          description: List of requested item statuses.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-request-status:read
      summary: Access request status
      tags:
      - Access Requests
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /access-request-approvals/pending:
    get:
      description: This endpoint returns a list of pending approvals. See "owner-id"
        query parameter below for authorization info.
      operationId: listPendingApprovals
      parameters:
      - description: |-
          If present, the value returns only pending approvals for the specified identity.
             * ORG_ADMIN users can call this with any identity ID value.
             * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.
             * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value.
        example: 2c91808568c529c60168cca6f90c1313
        in: query
        name: owner-id
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **requestedFor.id**: *eq, in*

          **modified**: *gt, lt, ge, le, eq, in*

          **accessRequestId**: *eq, in*

          **created**: *gt, lt, ge, le, eq, in*
        example: id eq "2c91808568c529c60168cca6f90c1313"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, modified**
        example: modified
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PendingApproval'
                type: array
          description: List of Pending Approvals.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-request-approvals:read
      summary: Pending access request approvals list
      tags:
      - Access Request Approvals
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /access-request-approvals/completed:
    get:
      description: This endpoint returns list of completed approvals. See *owner-id*
        query parameter below for authorization info.
      operationId: listCompletedApprovals
      parameters:
      - description: |-
          If present, the value returns only completed approvals for the specified identity.
             * ORG_ADMIN users can call this with any identity ID value.
             * ORG_ADMIN users can also fetch all the approvals in the org, when
          owner-id is not used.
             * Non-ORG_ADMIN users can only specify *me* or pass their own
          identity ID value.
        example: 2c91808568c529c60168cca6f90c1313
        in: query
        name: owner-id
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*

          **requestedFor.id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*

          **modified**: *gt, lt, ge, le, eq, in, ne, sw*
        example: id eq "2c91808568c529c60168cca6f90c1313"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, modified**
        example: modified
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CompletedApproval'
                type: array
          description: List of Completed Approvals.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-request-approvals:read
      summary: Completed access request approvals list
      tags:
      - Access Request Approvals
  /access-request-approvals/{approvalId}/approve:
    post:
      description: Use this endpoint to approve an access request approval. Only the
        owner of the approval and ORG_ADMIN users are allowed to perform this action.
      operationId: approveAccessRequest
      parameters:
      - description: Approval ID.
        example: 2c91808b7294bea301729568c68c002e
        in: path
        name: approvalId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listPendingApprovals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        description: Reviewer's comment.
        required: false
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-request-approvals:read
      summary: Approve access request approval
      tags:
      - Access Request Approvals
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - APPROVAL_OWNER
  /access-request-approvals/{approvalId}/reject:
    post:
      description: Use this API to reject an access request approval. Only the owner
        of the approval and admin users are allowed to perform this action.
      operationId: rejectAccessRequest
      parameters:
      - description: Approval ID.
        example: 2c91808b7294bea301729568c68c002e
        in: path
        name: approvalId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listPendingApprovals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        description: Reviewer's comment.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Reject access request approval
      tags:
      - Access Request Approvals
  /access-request-approvals/{approvalId}/forward:
    post:
      description: Use this API to forward an access request approval to a new owner.
        Only the owner of the approval and ORG_ADMIN users are allowed to perform
        this action. Only the owner of the approval and ORG_ADMIN users are allowed
        to perform this action.
      operationId: forwardAccessRequest
      parameters:
      - description: Approval ID.
        example: 2c91808b7294bea301729568c68c002e
        in: path
        name: approvalId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listPendingApprovals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardApprovalDto'
        description: Information about the forwarded approval.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Forward access request approval
      tags:
      - Access Request Approvals
  /access-request-approvals/approval-summary:
    get:
      description: "Use this API to return the number of pending, approved and rejected\
        \ access requests approvals. See the \"owner-id\" query parameter for authorization\
        \ information. info."
      operationId: getAccessRequestApprovalSummary
      parameters:
      - description: |-
          The ID of the owner or approver identity of the approvals. If present, the value returns approval summary for the specified identity.
             * ORG_ADMIN users can call this with any identity ID value.
             * ORG_ADMIN user can also fetch all the approvals in the org, when
          owner-id is not used.
             * Non ORG_ADMIN users can only specify *me* or pass their own
          identity ID value.
        example: 2c91808568c529c60168cca6f90c1313
        in: query
        name: owner-id
        required: false
        schema:
          type: string
      - description: This is the date and time the results will be shown from. It
          must be in a valid ISO-8601 format.
        example: from-date=2020-03-19T19:59:11Z
        in: query
        name: from-date
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalSummary'
          description: "Number of pending, approved, rejected access request approvals."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the query parameter is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:access-request-approvals-summary:read
      summary: Get access requests approvals number
      tags:
      - Access Request Approvals
  /accounts:
    get:
      description: 'List accounts. '
      operationId: listAccounts
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: This value determines whether the API provides `SLIM` or increased
          level of detail (`FULL`) for each account in the returned list. `FULL` is
          the default behavior.
        example: FULL
        in: query
        name: detailLevel
        required: false
        schema:
          enum:
          - SLIM
          - FULL
          type: string
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in, sw*

          **identityId**: *eq, in, sw*

          **name**: *eq, in, sw*

          **nativeIdentity**: *eq, in, sw*

          **hasEntitlements**: *eq*

          **sourceId**: *eq, in, sw*

          **uncorrelated**: *eq*

          **entitlements**: *eq*

          **origin**: *eq, in*

          **manuallyCorrelated**: *eq*

          **identity.name**: *eq, in, sw*

          **identity.correlated**: *eq*

          **identity.identityState**: *eq, in*

          **source.displayableName**: *eq, in*

          **source.authoritative**: *eq*

          **source.connectionType**: *eq, in*

          **recommendation.method**: *eq, in, isnull*

          **created**: *eq, ge, gt, le, lt*

          **modified**: *eq, ge, gt, le, lt*
        example: identityId eq "2c9180858082150f0180893dbaf44201"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, name, created, modified, sourceId, identityId, nativeIdentity, uuid, manuallyCorrelated, entitlements, origin, identity.name, identity.identityState, identity.correlated, source.displayableName, source.authoritative, source.connectionType**
        example: "id,name"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: List of account objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts:read
      summary: Accounts list
      tags:
      - Accounts
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
      - HELPDESK
    post:
      description: "Submit an account creation task - the API then returns the task\
        \ ID.  \n\nYou must include the `sourceId` where the account will be created\
        \ in the `attributes` object.\n\nThis endpoint creates an account on the source\
        \ record in your ISC tenant.\nThis is useful for Flat File (`DelimitedFile`)\
        \ type sources because it allows you to aggregate new accounts without needing\
        \ to import a new CSV file every time. \n\nHowever, if you use this endpoint\
        \ to create an account for a Direct Connection type source, you must ensure\
        \ that the account also exists on the target source. \nThe endpoint doesn't\
        \ actually provision the account on the target source, which means that if\
        \ the account doesn't also exist on the target source, an aggregation between\
        \ the source and your tenant will remove it from your tenant. \n\nBy providing\
        \ the account ID of an existing account in the request body, this API will\
        \ function as a PATCH operation and update the account.\n"
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAttributesCreate'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts:manage
      summary: Create account
      tags:
      - Accounts
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /accounts/{id}:
    delete:
      description: "Use this API to delete an account. \nThis endpoint submits an\
        \ account delete task and returns the task ID. \nThis endpoint only deletes\
        \ the account from IdentityNow, not the source itself, which can result in\
        \ the account's returning with the next aggregation between the source and\
        \ IdentityNow.  To avoid this scenario, it is recommended that you [disable\
        \ accounts](https://developer.sailpoint.com/idn/api/v3/disable-account) rather\
        \ than delete them. This will also allow you to reenable the accounts in the\
        \ future. \n>**NOTE: You can only delete accounts from sources of the \"DelimitedFile\"\
        \ type.**"
      operationId: deleteAccount
      parameters:
      - description: Account ID.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listAccounts
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts:manage
      summary: Delete account
      tags:
      - Accounts
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    get:
      description: 'Use this API to return the details for a single account by its
        ID.  '
      operationId: getAccount
      parameters:
      - description: Account ID.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listAccounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts:read
      summary: Account details
      tags:
      - Accounts
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
      - HELPDESK
    patch:
      description: "Use this API to update account details. \n\nThis API supports\
        \ updating an account's correlation by modifying the `identityId` and `manuallyCorrelated`\
        \ fields. \nTo reassign an account from one identity to another, replace the\
        \ current `identityId` with a new value. \nIf the account you're assigning\
        \ was provisioned by Identity Security Cloud (ISC), it's possible for ISC\
        \ to create a new account \nfor the previous identity as soon as the account\
        \ is moved. If the account you're assigning is authoritative, \nthis causes\
        \ the previous identity to become uncorrelated and can even result in its\
        \ deletion.\nAll accounts that are reassigned will be set to `manuallyCorrelated:\
        \ true` unless you specify otherwise.\n\n>**Note:** The `attributes` field\
        \ can only be modified for flat file accounts. \n"
      operationId: updateAccount
      parameters:
      - description: Account ID.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listAccounts
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Uncorrelate account:
                description: Remove account from Identity
                value:
                - op: remove
                  path: /identityId
              Reassign account:
                description: Move account from one Identity to another Identity
                value:
                - op: replace
                  path: /identityId
                  value: 2c9180857725c14301772a93bb77242d
              Add account attribute:
                description: Add flat file account's attribute
                value:
                - op: add
                  path: /attributes/familyName
                  value: Smith
              Replace account attribute:
                description: Replace flat file account's attribute
                value:
                - op: replace
                  path: /attributes/familyName
                  value: Smith
              Remove account attribute:
                description: Remove flat file account's attribute
                value:
                - op: remove
                  path: /attributes/familyName
            schema:
              items:
                type: object
              type: array
        description: "A list of account update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902)\
          \ standard."
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts:manage
      summary: Update account
      tags:
      - Accounts
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    put:
      description: "Use this API to update an account with a PUT request. \n\nThis\
        \ endpoint submits an account update task and returns the task ID. \n\n>**Note:\
        \ You can only use this PUT endpoint to update accounts from flat file sources.**\n"
      operationId: putAccount
      parameters:
      - description: Account ID.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAttributes'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts:manage
      summary: Update account
      tags:
      - Accounts
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /accounts/{id}/entitlements:
    get:
      description: 'This API returns entitlements of the account.      '
      operationId: getAccountEntitlements
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listAccounts
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Entitlement'
                type: array
          description: An array of account entitlements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts:read
      summary: Account entitlements
      tags:
      - Accounts
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
      - HELPDESK
  /accounts/{id}/reload:
    post:
      description: 'This API asynchronously reloads the account directly from the
        connector and performs a one-time aggregation process.      '
      operationId: submitReloadAccount
      parameters:
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listAccounts
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts-state:manage
      summary: Reload account
      tags:
      - Accounts
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
      - HELPDESK
  /accounts/{id}/enable:
    post:
      description: 'This API submits a task to enable account and returns the task
        ID.      '
      operationId: enableAccount
      parameters:
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountToggleRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts-state:manage
      summary: Enable account
      tags:
      - Accounts
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
      - HELPDESK
  /accounts/{id}/disable:
    post:
      description: 'This API submits a task to disable the account and returns the
        task ID.      '
      operationId: disableAccount
      parameters:
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountToggleRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts-state:manage
      summary: Disable account
      tags:
      - Accounts
      x-sailpont-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
      - HELPDESK
  /accounts/{id}/unlock:
    post:
      description: "This API submits a task to unlock an account and returns the task\
        \ ID.  \nTo use this endpoint to unlock an account that has the `forceProvisioning`\
        \ option set to true, the `idn:accounts-provisioning:manage` scope is required. "
      operationId: unlockAccount
      parameters:
      - description: The account ID.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUnlockRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts-state:manage
        - idn:accounts-provisioning:manage
      summary: Unlock account
      tags:
      - Accounts
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
      - HELPDESK
  /accounts/search-attribute-config:
    get:
      description: Get a list of attribute/application attributes currently configured
        in Identity Security Cloud (ISC).
      operationId: getSearchAttributeConfig
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchAttributeConfig'
                type: array
          description: List of attribute configurations in IdentityNow.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:account-config:read
      summary: List extended search attributes
      tags:
      - Search Attribute Configuration
      x-sailpoint-userLevels:
      - ORG_ADMIN
    post:
      description: |-
        Create and configure extended search attributes. This API accepts an attribute name, an attribute display name and a list of name/value pair associates of application IDs to attribute names. It will then validate the inputs and configure/create the attribute promotion configuration in the Link ObjectConfig.
        >**Note: Give searchable attributes unique names.  Do not give them the same names used for account attributes or source attributes.  Also, do not give them the same names present in account schema for a current or future source, regardless of whether that source is included in the searchable attributes' `applicationAttributes`.**
      operationId: createSearchAttributeConfig
      requestBody:
        content:
          application/json:
            example:
              name: newMailAttribute
              displayName: New Mail Attribute
              applicationAttributes:
                "2c9180866166b5b0016167c32ef31a66": mail
                "2c9180866166b5b0016167c32ef31a67": mail
            schema:
              $ref: '#/components/schemas/SearchAttributeConfig'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:account-config:create
      summary: Create extended search attributes
      tags:
      - Search Attribute Configuration
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /accounts/search-attribute-config/{name}:
    delete:
      description: Delete an extended attribute configuration by name.
      operationId: deleteSearchAttributeConfig
      parameters:
      - description: Name of the extended search attribute configuration to delete.
        in: path
        name: name
        required: true
        schema:
          example: newMailAttribute
          type: string
        x-sailpoint-resource-operation-id: getSearchAttributeConfig
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:account-config:delete
      summary: Delete extended search attribute
      tags:
      - Search Attribute Configuration
      x-sailpoint-userLevels:
      - ORG_ADMIN
    get:
      description: Get an extended attribute configuration by name.
      operationId: getSingleSearchAttributeConfig
      parameters:
      - description: Name of the extended search attribute configuration to retrieve.
        in: path
        name: name
        required: true
        schema:
          example: newMailAttribute
          type: string
        x-sailpoint-resource-operation-id: getSearchAttributeConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchAttributeConfig'
                type: array
          description: Specific attribute configuration in ISC.
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:account-config:read
      summary: Get extended search attribute
      tags:
      - Search Attribute Configuration
      x-sailpoint-userLevels:
      - ORG_ADMIN
    patch:
      description: "Update an existing search attribute configuration. \nYou can patch\
        \ these fields:\n* name  * displayName * applicationAttributes"
      operationId: patchSearchAttributeConfig
      parameters:
      - description: Name of the search attribute configuration to patch.
        in: path
        name: name
        required: true
        schema:
          example: promotedMailAttribute
          type: string
        x-sailpoint-resource-operation-id: getSearchAttributeConfig
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /name
              value: newAttributeName
            - op: replace
              path: /displayName
              value: new attribute display name
            - op: add
              path: /applicationAttributes
              value:
                "2c91808b79fd2422017a0b35d30f3968": employeeNumber
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAttributeConfig'
          description: The updated search attribute configuration.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:account-config:create
      summary: Update extended search attribute
      tags:
      - Search Attribute Configuration
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /account-activities:
    get:
      description: This gets a collection of account activities that satisfy the given
        query parameters.
      operationId: listAccountActivities
      parameters:
      - description: The identity that the activity was requested for. *me* indicates
          the current user. Mutually exclusive with *regarding-identity*.
        example: 2c91808568c529c60168cca6f90c1313
        in: query
        name: requested-for
        required: false
        schema:
          type: string
      - description: The identity that requested the activity. *me* indicates the
          current user. Mutually exclusive with *regarding-identity*.
        example: 2c91808568c529c60168cca6f90c1313
        in: query
        name: requested-by
        required: false
        schema:
          type: string
      - description: The specified identity will be either the requester or target
          of the account activity. *me* indicates the current user. Mutually exclusive
          with *requested-for* and *requested-by*.
        example: 2c91808568c529c60168cca6f90c1313
        in: query
        name: regarding-identity
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **type**: *eq, in, ge, le, lt, ne, isnull, sw*

          **created**: *gt, lt, ge, le, eq, in, ne, isnull, sw*

          **modified**: *gt, lt, ge, le, eq, in, ne, isnull, sw*
        example: type eq "Identity Refresh"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **type, created, modified**
        example: created
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccountActivity'
                type: array
          description: List of account activities
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List account activities
      tags:
      - Account Activities
  /account-activities/{id}:
    get:
      description: This gets a single account activity by its id.
      operationId: getAccountActivity
      parameters:
      - description: The account activity id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listAccountActivities
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountActivity'
          description: An account activity object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get an account activity
      tags:
      - Account Activities
  /auth-org/network-config:
    get:
      description: This API returns the details of an org's network auth configuration.
      operationId: getAuthOrgNetworkConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConfiguration'
          description: Network configuration for the tenant's auth org.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:auth-org:read
      summary: Get security network configuration.
      tags:
      - Global Tenant Security Settings
    patch:
      description: |-
        This API updates an existing network configuration for an org using PATCH
         Requires security scope of:  'sp:auth-org:manage'
      operationId: patchAuthOrgNetworkConfig
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /whitelisted
              value: "false,"
            - op: add
              path: /geolocation
              value:
              - AF
              - HN
              - ES
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |-
          A list of auth org network configuration update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.
          Ensures that the patched Network Config conforms to certain logical guidelines, which are:
            1. Each string element in the range array must be a valid ip address or
          ip subnet mask.
            2. Each string element in the geolocation array must be 2 characters,
          and they can only be uppercase letters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConfiguration'
          description: Updated Auth Org network configuration.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:auth-org:manage
      summary: Update security network configuration.
      tags:
      - Global Tenant Security Settings
    post:
      description: "This API returns the details of an org's network auth configuration.\
        \ Requires security scope of: 'sp:auth-org:manage'"
      operationId: createAuthOrgNetworkConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkConfiguration'
        description: |-
          Network configuration creation request body.   The following constraints ensure the request body conforms to certain logical guidelines, which are:
            1. Each string element in the range array must be a valid ip address or
          ip subnet mask.
            2. Each string element in the geolocation array must be 2 characters,
          and they can only be uppercase letters.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConfiguration'
          description: Network configuration for the tenant.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:auth-org:manage
      summary: Create security network configuration.
      tags:
      - Global Tenant Security Settings
  /auth-org/lockout-config:
    get:
      description: This API returns the details of an org's lockout auth configuration.
      operationId: getAuthOrgLockoutConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockoutConfiguration'
          description: Lockout configuration for the tenant's auth org.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:auth-org:read
      summary: Get auth org lockout configuration.
      tags:
      - Global Tenant Security Settings
    patch:
      description: |
        This API updates an existing lockout configuration for an org using PATCH
      operationId: patchAuthOrgLockoutConfig
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /maximumAttempts
              value: "7,"
            - op: add
              path: /lockoutDuration
              value: 35
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |-
          A list of auth org lockout configuration update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.
          Ensures that the patched Lockout Config conforms to certain logical guidelines, which are:
            `1. maximumAttempts >= 1 && maximumAttempts <= 15
            2. lockoutDuration >= 5 && lockoutDuration <= 60
            3. lockoutWindow >= 5 && lockoutDuration <= 60`
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockoutConfiguration'
          description: Updated Auth Org lockout configuration.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:auth-org:manage
      summary: Update auth org lockout configuration
      tags:
      - Global Tenant Security Settings
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - HELPDESK
  /auth-org/service-provider-config:
    get:
      description: This API returns the details of an org's service provider auth
        configuration.
      operationId: getAuthOrgServiceProviderConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProviderConfiguration'
          description: Service provider configuration for the tenant.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Get service provider configuration.
      tags:
      - Global Tenant Security Settings
    patch:
      description: This API updates an existing service provider configuration for
        an org using PATCH.
      operationId: patchAuthOrgServiceProviderConfig
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /enabled
              value: "true,"
            - op: add
              path: /federationProtocolDetails/0/jitConfiguration
              value:
                enabled: true
                sourceId: 2c9180857377ed2901739c12a2da5ac8
                sourceAttributeMappings:
                  firstName: okta.firstName
                  lastName: okta.lastName
                  email: okta.email
                  employeeNumber: okta.employeeNumber
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |-
          A list of auth org service provider configuration update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.
          Note: /federationProtocolDetails/0 is IdpDetails /federationProtocolDetails/1 is SpDetails
          Ensures that the patched ServiceProviderConfig conforms to certain logical guidelines, which are:
            1. Do not add or remove any elements in the federation protocol details
          in the service provider configuration.
            2. Do not modify, add, or delete the service provider details element in
          the federation protocol details.
            3. If this is the first time the patched ServiceProviderConfig enables
          Remote IDP sign-in, it must also include IDPDetails.
            4. If the patch enables Remote IDP sign in, the entityID in the
          IDPDetails cannot be null. IDPDetails must include an entityID.
            5. Any JIT configuration update must be valid.

          Just in time configuration update must be valid when enabled. This includes:
            - A Source ID
            - Source attribute mappings
            - Source attribute maps have all the required key values (firstName,
          lastName, email)
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProviderConfiguration'
          description: Auth Org Service Provider configuration updated.
        "400":
          content:
            application/json:
              examples:
                "400.1 Bad Request Content":
                  description: Response for bad request content
                  value:
                    detailCode: 400.1 Bad Request Content
                    trackingId: e7eab60924f64aa284175b9fa3309599
                    messages:
                    - locale: en
                      localeOrigin: REQUEST
                      text: firstName is required; accountName is required;
                "400.1.3 Illegal value":
                  description: Response for Illegal value
                  value:
                    detailCode: 400.1.3 Illegal value
                    trackingId: e7eab60924f64aa284175b9fa3309599
                    messages:
                    - locale: en
                      localeOrigin: REQUEST
                      text: JIT source id is invalid.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Update service provider configuration
      tags:
      - Global Tenant Security Settings
  /auth-org/session-config:
    get:
      description: This API returns the details of an org's session auth configuration.
      operationId: getAuthOrgSessionConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionConfiguration'
          description: Session configuration for the tenant's auth org.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:auth-org:read
      summary: Get auth org session configuration.
      tags:
      - Global Tenant Security Settings
    patch:
      description: This API updates an existing session configuration for an org using
        PATCH.
      operationId: patchAuthOrgSessionConfig
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /rememberMe
              value: "true,"
            - op: add
              path: /maxSessionTime
              value: 480
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of auth org session configuration update operations according to
          the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          Ensures that the patched Session Config conforms to certain logical
          guidelines, which are:
            `1. maxSessionTime >= 1 && maxSessionTime <= 10080 (1 week)
            2. maxIdleTime >= 1 && maxIdleTime <= 1440 (1 day)
            3. maxSessionTime must have a greater duration than maxIdleTime.`
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionConfiguration'
          description: Updated Auth Org session configuration.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:auth-org:manage
      summary: Update auth org session configuration
      tags:
      - Global Tenant Security Settings
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - HELPDESK
  /auth-users/{id}:
    get:
      description: Return the specified user's authentication system details.
      operationId: getAuthUser
      parameters:
      - description: Identity ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentities
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUser'
          description: The specified user's authentication system details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:auth-user:read
      summary: Auth user details
      tags:
      - Auth Users
    patch:
      description: "Use a PATCH request to update an existing user in the authentication\
        \ system.\nUse this endpoint to modify these fields: \n  * `capabilities`\n\
        \nA '400.1.1 Illegal update attempt' detail code indicates that you attempted\
        \ to PATCH a field that is not allowed."
      operationId: patchAuthUser
      parameters:
      - description: Identity ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentities
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /capabilities
              value:
              - ORG_ADMIN
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of auth user update operations according to the [JSON\
          \ Patch](https://tools.ietf.org/html/rfc6902) standard."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUser'
          description: Auth user updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:auth-user:update
      summary: Auth user update
      tags:
      - Auth Users
  /brandings:
    get:
      description: This API endpoint returns a list of branding items.
      operationId: getBrandingList
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BrandingItem'
                type: array
          description: A list of branding items.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:branding:read
      - applicationAuth:
        - idn:branding:read
      summary: List of branding items
      tags:
      - Branding
      x-sailpoint-userLevels:
      - ORG_ADMIN
    post:
      description: This API endpoint creates a branding item.
      operationId: createBrandingItem
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrandingItemCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandingItem'
          description: Branding item created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:branding:manage
      - applicationAuth:
        - idn:branding:manage
      summary: Create a branding item
      tags:
      - Branding
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /brandings/{name}:
    delete:
      description: 'This API endpoint delete information for an existing branding
        item by name.    '
      operationId: deleteBranding
      parameters:
      - description: The name of the branding item to be deleted
        example: default
        in: path
        name: name
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getBrandingList
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:branding:manage
      - applicationAuth:
        - idn:branding:manage
      summary: Delete a branding item
      tags:
      - Branding
      x-sailpoint-userLevels:
      - ORG_ADMIN
    get:
      description: 'This API endpoint retrieves information for an existing branding
        item by name.    '
      operationId: getBranding
      parameters:
      - description: The name of the branding item to be retrieved
        example: default
        in: path
        name: name
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getBrandingList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandingItem'
          description: A branding item object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:branding:read
      - applicationAuth:
        - idn:branding:read
      summary: Get a branding item
      tags:
      - Branding
      x-sailpoint-userLevels:
      - ORG_ADMIN
    put:
      description: This API endpoint updates information for an existing branding
        item.
      operationId: setBrandingItem
      parameters:
      - description: The name of the branding item to be retrieved
        example: default
        in: path
        name: name
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getBrandingList
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrandingItemCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandingItem'
          description: Branding item updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:branding:manage
      - applicationAuth:
        - idn:branding:manage
      summary: Update a branding item
      tags:
      - Branding
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /campaigns:
    get:
      description: |
        Use this API to get a list of campaigns. This API can provide increased level of detail for each campaign for the correct provided query.
      operationId: getActiveCampaigns
      parameters:
      - description: "Determines whether slim, or increased level of detail is provided\
          \ for each campaign in the returned list. Slim is the default behavior."
        example: FULL
        in: query
        name: detail
        required: false
        schema:
          enum:
          - SLIM
          - FULL
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, sw*

          **status**: *eq, in*
        example: name eq "Manager Campaign"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, created**
        example: name
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Slim Campaign:
                  $ref: '#/components/examples/SlimCampaigns'
                Full Campaign:
                  $ref: '#/components/examples/FullCampaigns'
              schema:
                items:
                  $ref: '#/components/schemas/getActiveCampaigns_200_response_inner'
                type: array
          description: A list of campaign objects. By default list of SLIM campaigns
            is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign:read
        - idn:campaign:manage
        - idn:campaign-report:read
        - idn:campaign-report:manage
      summary: List campaigns
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
      - REPORT_ADMIN
    post:
      description: "Use this API to create a certification campaign with the information\
        \ provided in the request body.    \n"
      operationId: createCampaign
      requestBody:
        content:
          application/json:
            examples:
              Manager:
                $ref: '#/components/examples/CreateCampaignManager'
              Search:
                $ref: '#/components/examples/CreateCampaignSearch'
              Source Owner:
                $ref: '#/components/examples/CreateCampaignSourceOwner'
              Role Composition:
                $ref: '#/components/examples/CreateCampaignRoleComposition'
              Machine Account:
                $ref: '#/components/examples/CreateCampaignMachineAccount'
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Manager:
                  $ref: '#/components/examples/FullCampaignManager'
                Search:
                  $ref: '#/components/examples/FullCampaignSearch'
                Source Owner:
                  $ref: '#/components/examples/FullCampaignSourceOwner'
                Role Composition:
                  $ref: '#/components/examples/FullCampaignRoleComposition'
                Machine Account Owner:
                  $ref: '#/components/examples/FullCampaignMachineAccount'
              schema:
                $ref: '#/components/schemas/Campaign'
          description: "This response indicates that the requested campaign was successfully\
            \ created, and the API returns its representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign:manage
      summary: Create a campaign
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /campaigns/{id}:
    get:
      description: |
        Use this API to get information for an existing certification campaign by the campaign's ID.
      operationId: getCampaign
      parameters:
      - description: ID of the campaign to be retrieved.
        example: 2c91808571bcfcf80171c23e4b4221fc
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getActiveCampaigns
      - description: "Determines whether slim, or increased level of detail is provided\
          \ for each campaign in the returned list. Slim is the default behavior."
        example: FULL
        in: query
        name: detail
        required: false
        schema:
          enum:
          - SLIM
          - FULL
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Manager:
                  $ref: '#/components/examples/SlimCampaignManager'
                Search:
                  $ref: '#/components/examples/SlimCampaignSearch'
                Source Owner:
                  $ref: '#/components/examples/SlimCampaignSourceOwner'
                RoleComposition:
                  $ref: '#/components/examples/SlimCampaignRoleComposition'
              schema:
                $ref: '#/components/schemas/getCampaign_200_response'
          description: Requested campaign object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign:read
        - idn:campaign:manage
      summary: Get campaign
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
    patch:
      description: |
        Use this API to update individual fields on a certification campaign, using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.
      operationId: updateCampaign
      parameters:
      - description: ID of the campaign template being modified.
        example: 2c91808571bcfcf80171c23e4b4221fc
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getActiveCampaigns
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /name
              value: This field has been updated!
            - op: copy
              from: /name
              path: /description
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of campaign update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.
          The fields that can be patched differ based on the status of the campaign.

          When the campaign is in the *STAGED* status, you can patch these fields:
          * name
          * description
          * recommendationsEnabled
          * deadline
          * emailNotificationEnabled
          * autoRevokeAllowed

          When the campaign is in the *ACTIVE* status, you can patch these fields:
          * deadline
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Manager:
                  $ref: '#/components/examples/SlimCampaignManager'
                Search:
                  $ref: '#/components/examples/SlimCampaignSearch'
                Source Owner:
                  $ref: '#/components/examples/SlimCampaignSourceOwner'
                RoleComposition:
                  $ref: '#/components/examples/SlimCampaignRoleComposition'
              schema:
                $ref: '#/components/schemas/SlimCampaign'
          description: "This response indicates that the PATCH operation succeeded,\
            \ and the API returns the campaign's new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign:read
        - idn:campaign:manage
      summary: Update a campaign
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /campaigns/{id}/reassign:
    post:
      description: "This API reassigns the specified certifications from one identity\
        \ to another.    \n"
      operationId: move
      parameters:
      - description: The certification campaign ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getActiveCampaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminReviewReassign'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: 2c918086719eec070171a7e3355a360a
                type: ADMIN_REASSIGN
                targetType: CAMPAIGN
                targetId: 2c918086719eec070171a7e3355a834c
                status: QUEUED
                errors: []
                created: 2020-09-24T18:10:47.693Z
              schema:
                $ref: '#/components/schemas/CertificationTask'
          description: The reassign task that has been submitted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign:manage
      summary: Reassign certifications
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /campaigns/{id}/activate:
    post:
      description: |
        Use this API to submit a job to activate the certified campaign with the specified ID. The campaign must be staged.
      operationId: startCampaign
      parameters:
      - description: Campaign ID.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getActiveCampaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateCampaignOptions'
        description: "Optional. If no timezone is specified, the standard UTC timezone\
          \ is used (i.e. UTC+00:00). Although this can take any timezone, the intended\
          \ value is the caller's timezone. The activation time calculated from the\
          \ given timezone may cause the campaign deadline time to be modified, but\
          \ it will remain within the original date. The timezone must be in a valid\
          \ ISO 8601 format."
        required: false
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign:manage
      summary: Activate a campaign
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /campaigns/{id}/complete:
    post:
      description: |
        :::caution

        This endpoint will run successfully for any campaigns that are **past due**.

        This endpoint will return a content error if the campaign is **not past due**.

        :::

        Use this API to complete a certification campaign. This functionality is provided to admins so that they
        can complete a certification even if all items have not been completed.
      operationId: completeCampaign
      parameters:
      - description: Campaign ID.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getActiveCampaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignCompleteOptions'
        description: "Optional. Default behavior is for the campaign to auto-approve\
          \ upon completion, unless autoCompleteAction=REVOKE"
        required: false
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign:manage
      summary: Complete a campaign
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /campaigns/delete:
    post:
      description: |
        Use this API to delete certification campaigns whose IDs are specified in the provided list of campaign IDs.
      operationId: deleteCampaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignsDeleteRequest'
        description: IDs of the campaigns to delete.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign:manage
      summary: Delete campaigns
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /campaigns/{id}/run-remediation-scan:
    post:
      description: |
        Use this API to run a remediation scan task for a certification campaign.
      operationId: startCampaignRemediationScan
      parameters:
      - description: ID of the campaign the remediation scan is being run for.
        in: path
        name: id
        required: true
        schema:
          example: 2c91808571bcfcf80171c23e4b4221fc
          type: string
        x-sailpoint-resource-operation-id: getActiveCampaigns
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-report:manage
      summary: Run campaign remediation scan
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
      - REPORT_ADMIN
  /campaigns/{id}/reports:
    get:
      description: |
        Use this API to fetch all reports for a certification campaign by campaign ID.
      operationId: getCampaignReports
      parameters:
      - description: ID of the campaign whose reports are being fetched.
        in: path
        name: id
        required: true
        schema:
          example: 2c91808571bcfcf80171c23e4b4221fc
          type: string
        x-sailpoint-resource-operation-id: getActiveCampaigns
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CampaignReport'
                type: array
          description: Array of campaign report objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-report:read
        - idn:campaign-report:manage
      summary: Get campaign reports
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
      - REPORT_ADMIN
  /campaigns/{id}/run-report/{type}:
    post:
      description: |
        Use this API to run a report for a certification campaign.
      operationId: startCampaignReport
      parameters:
      - description: ID of the campaign the report is being run for.
        in: path
        name: id
        required: true
        schema:
          example: 2c91808571bcfcf80171c23e4b4221fc
          type: string
        x-sailpoint-resource-operation-id: getActiveCampaigns
      - description: Type of the report to run.
        in: path
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/ReportType'
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-report:manage
      summary: Run campaign report
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
      - REPORT_ADMIN
  /campaigns/reports-configuration:
    get:
      description: "Use this API to fetch the configuration for certification campaign\
        \ reports. The configuration includes only one element - identity attributes\
        \ defined as custom report columns. \n"
      operationId: getCampaignReportsConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignReportsConfig'
          description: Campaign report configuration.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign:read
        - idn:campaign:manage
      summary: Get campaign reports configuration
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
    put:
      description: "Use this API to overwrite the configuration for campaign reports.\
        \ \n"
      operationId: setCampaignReportsConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignReportsConfig'
        description: Campaign report configuration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignReportsConfig'
          description: The persisted campaign report configuration.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign:manage
      summary: Set campaign reports configuration
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /campaign-filters:
    get:
      description: Use this API to list all campaign filters. You can reduce scope
        with standard V3 query parameters.
      operationId: listCampaignFilters
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: "Start/Offset into the full result set. Usually specified with\
          \ *limit* to paginate through the results. See [V3 API Standard Collection\
          \ Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters)\
          \ for more information."
        example: 0
        in: query
        name: start
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: "If this is true, the API includes system filters in the count\
          \ and results. Otherwise it excludes them. If no value is provided, the\
          \ default is true. "
        example: true
        in: query
        name: includeSystemFilters
        required: false
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              example:
                items:
                - id: 5b8a2ba86393dd174495c4436dd76b25
                  name: IdentityAttribute Inclusion Campaign Filter
                  description: IdentityAttribute Inclusion Campaign Filter
                  owner: SailPoint Support
                  mode: INCLUSION
                  criteriaList:
                  - type: IDENTITY_ATTRIBUTE
                    property: displayName
                    value: '#'
                    operation: CONTAINS
                    negateResult: false
                    shortCircuit: false
                    recordChildMatches: false
                    id: null
                    suppressMatchedItems: false
                    children: null
                  isSystemFilter: false
                - id: e9f9a1397b842fd5a65842087040d3ac
                  name: Exclusion Campaign Filter
                  description: Campaign filter for Exclusion update
                  owner: SailPoint Support
                  mode: EXCLUSION
                  criteriaList:
                  - type: IDENTITY_ATTRIBUTE
                    property: displayName
                    value: '#@'
                    operation: CONTAINS
                    negateResult: false
                    shortCircuit: false
                    recordChildMatches: false
                    id: null
                    suppressMatchedItems: false
                    children: null
                  isSystemFilter: false
                count: 2
              schema:
                $ref: '#/components/schemas/listCampaignFilters_200_response'
          description: List of campaign filter objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-filter-list:read
      summary: List campaign filters
      tags:
      - Certification Campaign Filters
    post:
      description: Use this API to create a campaign filter based on filter details
        and criteria.
      operationId: createCampaignFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignFilterDetails'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignFilterDetails'
          description: Created successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-filter:create
      summary: Create campaign filter
      tags:
      - Certification Campaign Filters
  /campaign-filters/{id}:
    get:
      description: Retrieves information for an existing campaign filter using the
        filter's ID.
      operationId: getCampaignFilterById
      parameters:
      - description: The ID of the campaign filter to be retrieved.
        in: path
        name: id
        required: true
        schema:
          example: e9f9a1397b842fd5a65842087040d3ac
          type: string
        x-sailpoint-resource-operation-id: listCampaignFilters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignFilterDetails'
          description: A campaign filter object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-filter:read
      summary: Get campaign filter by id
      tags:
      - Certification Campaign Filters
    post:
      description: Updates an existing campaign filter using the filter's ID.
      operationId: updateCampaignFilter
      parameters:
      - description: The ID of the campaign filter being modified.
        in: path
        name: filterId
        required: true
        schema:
          example: e9f9a1397b842fd5a65842087040d3ac
          type: string
        x-sailpoint-resource-operation-id: listCampaignFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignFilterDetails'
        description: A campaign filter details with updated field values.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignFilterDetails'
          description: Created successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-filter:update
      summary: Updates a campaign filter
      tags:
      - Certification Campaign Filters
  /campaign-filters/delete:
    post:
      description: Deletes campaign filters whose Ids are specified in the provided
        list of campaign filter Ids. Authorized callers must be an ORG_ADMIN or a
        CERT_ADMIN.
      operationId: deleteCampaignFilters
      requestBody:
        content:
          application/json:
            schema:
              example:
              - 0fbe863c063c4c88a35fd7f17e8a3df5
              - 2efb374d392c4d88a34sv7b11e8a4eq6
              items:
                type: string
              type: array
        description: A json list of IDs of campaign filters to delete.
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-filter:delete
      summary: Deletes campaign filters
      tags:
      - Certification Campaign Filters
  /campaign-templates:
    get:
      description: "Use this API to get a list of all campaign templates. Scope can\
        \ be reduced through standard V3 query params.\n\nThe API returns all campaign\
        \ templates matching the query parameters. \n"
      operationId: getCampaignTemplates
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, created, modified**
        example: name
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **name**: *eq, ge, gt, in, le, lt, ne, sw*

          **id**: *eq, ge, gt, in, le, lt, ne, sw*
        example: name eq "manager template"
        in: query
        name: filters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: ../schemas/campaign/examples/CampaignTemplates.yaml
              schema:
                items:
                  $ref: '#/components/schemas/CampaignTemplate'
                type: array
          description: List of campaign template objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-template:read
        - idn:campaign-template:manage
      summary: List campaign templates
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
    post:
      description: |
        Use this API to create a certification campaign template based on campaign.
      operationId: createCampaignTemplate
      requestBody:
        content:
          application/json:
            examples:
              Manager:
                $ref: '#/components/examples/CreateCampaignTemplateManager'
              Search:
                $ref: '#/components/examples/CreateCampaignTemplateSearch'
              Source Owner:
                $ref: '#/components/examples/CreateCampaignTemplateSourceOwner'
              RoleComposition:
                $ref: '#/components/examples/CreateCampaignTemplateRoleComposition'
            schema:
              $ref: '#/components/schemas/CampaignTemplate'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Manager:
                  $ref: '#/components/examples/CampaignTemplateManager'
                Search:
                  $ref: '#/components/examples/CampaignTemplateSearch'
                Source Owner:
                  $ref: '#/components/examples/CampaignTemplateSourceOwner'
                RoleComposition:
                  $ref: '#/components/examples/CampaignTemplateRoleComposition'
              schema:
                $ref: '#/components/schemas/CampaignTemplate'
          description: Created successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-template:manage
      summary: Create a campaign template
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /campaign-templates/{id}:
    delete:
      description: |
        Use this API to delete a certification campaign template by ID.
      operationId: deleteCampaignTemplate
      parameters:
      - description: ID of the campaign template being deleted.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getCampaignTemplates
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-template:manage
      summary: Delete a campaign template
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
    get:
      description: |
        Use this API to fetch a certification campaign template by ID.
      operationId: getCampaignTemplate
      parameters:
      - description: Requested campaign template's ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getCampaignTemplates
      responses:
        "200":
          content:
            application/json:
              examples:
                Manager:
                  $ref: '#/components/examples/CampaignTemplateManager'
                Search:
                  $ref: '#/components/examples/CampaignTemplateSearch'
                Source Owner:
                  $ref: '#/components/examples/CampaignTemplateSourceOwner'
                RoleComposition:
                  $ref: '#/components/examples/CampaignTemplateRoleComposition'
              schema:
                $ref: '#/components/schemas/CampaignTemplate'
          description: Data for the campaign matching the given ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-template:read
        - idn:campaign-template:manage
      summary: Get a campaign template
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
    patch:
      description: |
        Use this API to update individual fields on a certification campaign template, using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.
      operationId: patchCampaignTemplate
      parameters:
      - description: ID of the campaign template being modified.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getCampaignTemplates
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /description
              value: Updated description!
            - op: replace
              path: /campaign/filter/id
              value: ff80818155fe8c080155fe8d925b0316
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of campaign update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields are patchable:
          * name
          * description
          * deadlineDuration
          * campaign (all fields that are allowed during create)
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Manager:
                  $ref: '#/components/examples/CampaignTemplateManager'
                Search:
                  $ref: '#/components/examples/CampaignTemplateSearch'
                Source Owner:
                  $ref: '#/components/examples/CampaignTemplateSourceOwner'
                RoleComposition:
                  $ref: '#/components/examples/CampaignTemplateRoleComposition'
              schema:
                $ref: '#/components/schemas/CampaignTemplate'
          description: "This response indicates that the PATCH operation succeeded,\
            \ and the API returns the template's new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-template:manage
      summary: Update a campaign template
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /campaign-templates/{id}/schedule:
    delete:
      description: |
        Use this API to delete the schedule for a certification campaign template. The API returns a 404 if there is no schedule set.
      operationId: deleteCampaignTemplateSchedule
      parameters:
      - description: ID of the campaign template whose schedule is being deleted.
        example: 04bedce387bd47b2ae1f86eb0bb36dee
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getCampaignTemplates
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Delete campaign template schedule
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
    get:
      description: |
        Use this API to get the schedule for a certification campaign template. The API returns a 404 if there is no schedule set.
      operationId: getCampaignTemplateSchedule
      parameters:
      - description: ID of the campaign template whose schedule is being fetched.
        example: 04bedce387bd47b2ae1f86eb0bb36dee
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getCampaignTemplates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: "Current schedule for the campaign template. See the [Set Campaign\
            \ Template Schedule endpoint documentation](https://developer.sailpoint.com/docs/api/v3/set-campaign-template-schedule)\
            \ for more examples."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Get campaign template schedule
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
    put:
      description: |
        Use this API to set the schedule for a certification campaign template. If a schedule already exists, the API overwrites it with the new one.
      operationId: setCampaignTemplateSchedule
      parameters:
      - description: ID of the campaign template being scheduled.
        example: 04bedce387bd47b2ae1f86eb0bb36dee
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getCampaignTemplates
      requestBody:
        content:
          application/json:
            examples:
              Monthly:
                description: "Runs on the 15th and last day of the month, at 5PM."
                value:
                  type: MONTHLY
                  hours:
                    type: LIST
                    values:
                    - "17"
                  days:
                    type: LIST
                    values:
                    - "15"
              Once a year:
                description: Runs every January 1st at midnight.
                value:
                  type: ANNUALLY
                  hours:
                    type: LIST
                    values:
                    - "0"
                  days:
                    type: LIST
                    values:
                    - --01-01
              Quarterly:
                description: Runs once a quarter (every 3 months) on the first of
                  the month at 1AM.
                value:
                  type: ANNUALLY
                  hours:
                    type: LIST
                    values:
                    - "1"
                  days:
                    type: LIST
                    values:
                    - "1"
                  months:
                    type: LIST
                    values:
                    - "1"
                    interval: 3
              Yearly on Specific Days:
                description: "Runs on March 12 and December 5 at 1AM, every year."
                value:
                  type: ANNUALLY
                  hours:
                    type: LIST
                    values:
                    - "1"
                  days:
                    type: LIST
                    values:
                    - --03-12
                    - --12-05
              On a Specific Date:
                description: "Runs at 1AM on February 18th, 2020"
                value:
                  type: CALENDAR
                  hours:
                    type: LIST
                    values:
                    - "1"
                  days:
                    type: LIST
                    values:
                    - 2020-02-18
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Set campaign template schedule
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /campaign-templates/{id}/generate:
    post:
      description: |
        Use this API to generate a new certification campaign from a campaign template.

        The campaign object contained in the template has special formatting applied to its name and description
        fields that determine the generated campaign's name/description. Placeholders in those fields are
        formatted with the current date and time upon generation.

        Placeholders consist of a percent sign followed by a letter indicating what should be inserted. For
        example, "%Y" inserts the current year, and a campaign template named "Campaign for %y" generates a
        campaign called "Campaign for 2020" (assuming the year at generation time is 2020).

        Valid placeholders are the date/time conversion suffix characters supported by [java.util.Formatter](https://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html).
      operationId: startGenerateCampaignTemplate
      parameters:
      - description: ID of the campaign template to use for generation.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getCampaignTemplates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignReference'
          description: "This response indicates that a campaign was successfully generated\
            \ from this template, and the API returns a reference to the new campaign."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign-template:manage
      summary: Generate a campaign from template
      tags:
      - Certification Campaigns
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /certifications:
    get:
      description: "Use this API to get a list of identity campaign certifications\
        \ for the specified query parameters. Any authenticated token can call this\
        \ API, but only certifications you are authorized to review will be returned.\
        \ This API does not support requests for certifications assigned to governance\
        \ groups."
      operationId: listIdentityCertifications
      parameters:
      - description: Reviewer's identity. *me* indicates the current user.
        example: me
        in: query
        name: reviewer-identity
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **campaign.id**: *eq, in*

          **phase**: *eq*

          **completed**: *eq*
        example: id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, due, signed**
        example: "name,due"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityCertificationDto'
                type: array
          description: List of identity campaign certifications.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List identity campaign certifications
      tags:
      - Certifications
  /certifications/{id}:
    get:
      description: This API returns a single identity campaign certification by its
        ID. Reviewers for this certification can also call this API. This API does
        not support requests for certifications assigned to Governance Groups.
      operationId: getIdentityCertification
      parameters:
      - description: The certification id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityCertifications
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCertificationDto'
          description: An identity campaign certification object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Identity certification by id
      tags:
      - Certifications
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /certifications/{id}/access-review-items:
    get:
      description: This API returns a list of access review items for an identity
        campaign certification. Reviewers for this certification can also call this
        API. This API does not support requests for certifications assigned to Governance
        Groups.
      operationId: listIdentityAccessReviewItems
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityCertifications
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **type**: *eq*

          **access.type**: *eq*

          **completed**: *eq, ne*

          **identitySummary.id**: *eq, in*

          **identitySummary.name**: *eq, sw*

          **access.id**: *eq, in*

          **access.name**: *eq, sw*

          **entitlement.sourceName**: *eq, sw*

          **accessProfile.sourceName**: *eq, sw*
        example: id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **identitySummary.name, access.name, access.type, entitlement.sourceName, accessProfile.sourceName**
        example: "access.name,-accessProfile.sourceName"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: |-
          Filter results to view access review items that pertain to any of the specified comma-separated entitlement IDs.

          An error will occur if this param is used with **access-profiles** or **roles** as only one of these query params can be used at a time.
        example: identityEntitlement
        in: query
        name: entitlements
        required: false
        schema:
          type: string
      - description: |-
          Filter results to view access review items that pertain to any of the specified comma-separated access-profle IDs.

          An error will occur if this param is used with **entitlements** or **roles** as only one of these query params can be used at a time.
        example: accessProfile1
        in: query
        name: access-profiles
        required: false
        schema:
          type: string
      - description: |-
          Filter results to view access review items that pertain to any of the specified comma-separated role IDs.

          An error will occur if this param is used with **entitlements** or **access-profiles** as only one of these query params can be used at a time.
        example: userRole
        in: query
        name: roles
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessReviewItem'
                type: array
          description: A list of access review items
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: List of access review items
      tags:
      - Certifications
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /certifications/{id}/decide:
    post:
      description: The API makes a decision to approve or revoke one or more identity
        campaign certification items. Reviewers for this certification can also call
        this API. This API does not support requests for certifications assigned to
        Governance Groups.
      operationId: makeIdentityDecision
      parameters:
      - description: The ID of the identity campaign certification on which to make
          decisions
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityCertifications
      requestBody:
        content:
          application/json:
            example:
            - id: ef38f94347e94562b5bb8424a56396b5
              decision: APPROVE
              bulk: true
              comments: This user still needs access to this source.
            - id: ef38f94347e94562b5bb8424a56397d8
              decision: APPROVE
              bulk: true
              comments: This user still needs access to this source too.
            schema:
              items:
                $ref: '#/components/schemas/ReviewDecision'
              maxItems: 250
              minItems: 1
              type: array
        description: A non-empty array of decisions to be made.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCertificationDto'
          description: An identity campaign certification object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Decide on a certification item
      tags:
      - Certifications
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /certifications/{id}/reassign:
    post:
      description: This API reassigns up to 50 identities or items in an identity
        campaign certification to another reviewer. A token with ORG_ADMIN or CERT_ADMIN
        authority is required to call this API. Reviewers for this certification can
        also call this API. This API does not support requests for certifications
        assigned to Governance Groups.
      operationId: reassignIdentityCertifications
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityCertifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewReassign'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCertificationDto'
          description: An identity campaign certification details after completing
            the reassignment.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Reassign identities or items
      tags:
      - Certifications
  /certifications/{id}/sign-off:
    post:
      description: This API finalizes all decisions made on an identity campaign certification
        and initiates any remediations required. Reviewers for this certification
        can also call this API. This API does not support requests for certifications
        assigned to Governance Groups.
      operationId: signOffIdentityCertification
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityCertifications
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCertificationDto'
          description: An identity campaign certification object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Finalize identity certification decisions
      tags:
      - Certifications
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /certifications/{id}/decision-summary:
    get:
      description: This API returns a summary of the decisions made on an identity
        campaign certification. The decisions are summarized by type. Reviewers for
        this certification can also call this API.
      operationId: getIdentityDecisionSummary
      parameters:
      - description: The certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityCertifications
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **identitySummary.id**: *eq, in*
        example: identitySummary.id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCertDecisionSummary'
          description: Summary of the decisions made
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Summary of certification decisions
      tags:
      - Certification Summaries
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /certifications/{id}/identity-summaries:
    get:
      description: This API returns a list of the identity summaries for a specific
        identity campaign certification. Reviewers for this certification can also
        call this API.
      operationId: getIdentitySummaries
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityCertifications
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **completed**: *eq, ne*

          **name**: *eq, sw*
        example: id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name**
        example: name
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 2c91808772a504f50172a9540e501ba7
                name: Aaron Grey
                identityId: 2c9180857182306001719937379633e4
                completed: false
              - id: 2c91808772a504f50172a9540e501ba8
                name: Aglae Wilson
                identityId: 2c9180857182306001719937377a33de
                completed: true
              schema:
                items:
                  $ref: '#/components/schemas/CertificationIdentitySummary'
                type: array
          description: List of identity summaries
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Identity summaries for campaign certification
      tags:
      - Certification Summaries
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /certifications/{id}/access-summaries/{type}:
    get:
      description: This API returns a list of access summaries for the specified identity
        campaign certification and type. Reviewers for this certification can also
        call this API.
      operationId: getIdentityAccessSummaries
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityCertifications
      - description: The type of access review item to retrieve summaries for
        example: ACCESS_PROFILE
        in: path
        name: type
        required: true
        schema:
          enum:
          - ROLE
          - ACCESS_PROFILE
          - ENTITLEMENT
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **completed**: *eq, ne*

          **access.id**: *eq, in*

          **access.name**: *eq, sw*

          **entitlement.sourceName**: *eq, sw*

          **accessProfile.sourceName**: *eq, sw*
        example: access.id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **access.name**
        example: access.name
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - access:
                  type: ENTITLEMENT
                  id: 2c9180857182305e01719937429e2bad
                  name: CN=Engineering
                entitlement:
                  id: 2c9180857182305e01719937429e2bad
                  name: CN=Engineering
                  description: Access to the engineering database
                  privileged: false
                  owner:
                    email: brandon.gray@acme-solar.com
                    type: IDENTITY
                    id: 2c9180867160846801719932c5153fb7
                    name: Brandon Gray
                  attributeName: memberOf
                  attributeValue: CN=Engineering
                  sourceName: ODS-AD-Source
                  hasPermissions: true
                  revocable: true
                  containsDataAccess: true
                  dataAccess:
                    policies:
                    - value: GDPR-1
                    - value: GDPR-2
                    categories:
                    - value: email-7
                      matchCount: 74
                    - value: email-9
                      matchCount: 30
                    impactScore:
                      value: Medium
              schema:
                items:
                  $ref: '#/components/schemas/AccessSummary'
                type: array
          description: List of access summaries
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:certification:read
      summary: Access summaries
      tags:
      - Certification Summaries
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /certifications/{id}/identity-summaries/{identitySummaryId}:
    get:
      description: This API returns the summary for an identity on a specified identity
        campaign certification. Reviewers for this certification can also call this
        API.
      operationId: getIdentitySummary
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityCertifications
      - description: The identity summary ID
        example: 2c91808772a504f50172a9540e501ba8
        in: path
        name: identitySummaryId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getIdentitySummaries
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificationIdentitySummary'
          description: An identity summary
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Summary for identity
      tags:
      - Certification Summaries
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /certifications/{certificationId}/access-review-items/{itemId}/permissions:
    get:
      description: This API returns the permissions associated with an entitlement
        certification item based on the certification item's ID. Reviewers for this
        certification can also call this API.
      operationId: getIdentityCertificationItemPermissions
      parameters:
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **target**: *eq, sw*

          **rights**: *ca*

          Supported composite operators: *and, or*

          All field values (second filter operands) are case-insensitive for this API.

          Only a single *and* or *or* composite filter operator may be used. It must also be used between a target filter and a rights filter, not between 2 filters for the same field.

          For example, the following is valid: `?filters=rights+ca+(%22CREATE%22)+and+target+eq+%22SYS.OBJAUTH2%22`

          The following is invalid: 1?filters=rights+ca+(%22CREATE%22)+and+rights+ca+(%SELECT%22)1
        example: target eq "SYS.OBJAUTH2"
        in: query
        name: filters
        schema:
          type: string
      - description: The certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: certificationId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityCertifications
      - description: The certification item ID
        example: 2c91808671bcbab40171bd945d961227
        in: path
        name: itemId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityAccessReviewItems
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PermissionDto'
                type: array
          description: A list of permissions associated with the given itemId
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:certification:read
      summary: Permissions for entitlement certification item
      tags:
      - Certifications
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /certifications/{id}/reviewers:
    get:
      description: This API returns a list of reviewers for the certification. Reviewers
        for this certification can also call this API.
      operationId: listCertificationReviewers
      parameters:
      - description: The certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityCertifications
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, sw*

          **email**: *eq, sw*
        example: name eq "Bob"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, email**
        example: name
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
                type: array
          description: A list of reviewers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:certification:read
      summary: List of reviewers for certification
      tags:
      - Certifications
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /certifications/{id}/reassign-async:
    post:
      description: "This API initiates a task to reassign up to 500 identities or\
        \ items in an identity campaign certification to another\nreviewer. The `certification-tasks`\
        \ API can be used to get an updated status on the task and determine when\
        \ the\nreassignment is complete. \n\nReviewers for this certification can\
        \ also call this API.\n"
      operationId: submitReassignCertsAsync
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityCertifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewReassign'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificationTask'
          description: A certification task object for the reassignment which can
            be queried for status.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:campaign:manage
      summary: Reassign certifications asynchronously
      tags:
      - Certifications
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /certification-tasks/{id}:
    get:
      description: This API returns the certification task for the specified ID. Reviewers
        for the specified certification can also call this API.
      operationId: getCertificationTask
      parameters:
      - description: The task ID
        example: 63b32151-26c0-42f4-9299-8898dc1c9daa
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getPendingCertificationTasks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificationTask'
          description: A certification task
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:certification:read
      summary: Certification task by id
      tags:
      - Certifications
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
  /certification-tasks:
    get:
      description: "This API returns a list of pending (`QUEUED` or `IN_PROGRESS`)\
        \ certification tasks. Any authenticated token can call this API, but only\
        \ certification tasks you are authorized to review will be returned."
      operationId: getPendingCertificationTasks
      parameters:
      - description: The ID of reviewer identity. *me* indicates the current user.
        in: query
        name: reviewer-identity
        required: false
        schema:
          example: Ada.1de82e55078344
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **targetId**: *eq, in*

          **type**: *eq, in*
        in: query
        name: filters
        schema:
          example: type eq "ADMIN_REASSIGN"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CertificationTask'
                type: array
          description: A list of pending certification tasks
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:certification:read
      summary: List of pending certification tasks
      tags:
      - Certifications
  /configuration-hub/object-mappings/{sourceOrg}:
    get:
      description: |-
        This gets a list of existing object mappings between current org and source org.
        Source org should be "default" when getting object mappings that are not associated to any particular org.
        The request will need the following security scope:
        - sp:config-object-mapping:read
      operationId: getObjectMappings
      parameters:
      - description: The name of the source org.
        example: source-org
        in: path
        name: sourceOrg
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - objectMappingId: 3d6e0144-963f-4bd6-8d8d-d77b4e507ce4
                objectType: GOVERNANCE_GROUP
                jsonPath: $.description
                sourceValue: Sample Governance Group
                targetValue: Sample Governance Group - Updated
                enabled: true
                created: 2024-03-19T23:18:53.732Z
                modified: 2024-03-19T23:18:53.732Z
              - objectMappingId: e1d5cb80-65e2-4f92-ae2e-9588f61cc4cd
                objectType: IDENTITY
                jsonPath: $.name
                sourceValue: SailPoint Support
                targetValue: john.doe
                enabled: false
                created: 2024-03-19T23:18:06.238Z
                modified: 2024-03-19T23:18:06.238Z
              schema:
                items:
                  $ref: '#/components/schemas/ObjectMappingResponse'
                type: array
          description: List of existing object mappings between current org and source
            org.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:config-object-mapping:read
        - sp:config-object-mapping:manage
      summary: Gets list of object mappings
      tags:
      - Configuration Hub
    post:
      description: |-
        This creates an object mapping between current org and source org.
        Source org should be "default" when creating an object mapping that is not to be associated to any particular org.
        The request will need the following security scope:
        - sp:config-object-mapping:manage
      operationId: createObjectMapping
      parameters:
      - description: The name of the source org.
        example: source-org
        in: path
        name: sourceOrg
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              objectType: GOVERNANCE_GROUP
              jsonPath: $.description
              sourceValue: Sample Governance Group
              targetValue: Sample Governance Group - Updated
              enabled: true
            schema:
              $ref: '#/components/schemas/ObjectMappingRequest'
        description: The object mapping request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                objectMappingId: 3d6e0144-963f-4bd6-8d8d-d77b4e507ce4
                objectType: GOVERNANCE_GROUP
                jsonPath: $.description
                sourceValue: Sample Governance Group
                targetValue: Sample Governance Group - Updated
                enabled: true
                created: 2024-03-19T23:18:53.732Z
                modified: 2024-03-19T23:18:53.732Z
              schema:
                $ref: '#/components/schemas/ObjectMappingResponse'
          description: The created object mapping between current org and source org.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:config-object-mapping:manage
      summary: Creates an object mapping
      tags:
      - Configuration Hub
  /configuration-hub/object-mappings/{sourceOrg}/{objectMappingId}:
    delete:
      description: |-
        This deletes an existing object mapping.
        Source org should be "default" when deleting an object mapping that is not associated to any particular org.
        The request will need the following security scope:
        - sp:config-object-mapping:manage
      operationId: deleteObjectMapping
      parameters:
      - description: The name of the source org.
        example: source-org
        in: path
        name: sourceOrg
        required: true
        schema:
          type: string
      - description: The id of the object mapping to be deleted.
        example: 3d6e0144-963f-4bd6-8d8d-d77b4e507ce4
        in: path
        name: objectMappingId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:config-object-mapping:manage
      summary: Deletes an object mapping
      tags:
      - Configuration Hub
  /configuration-hub/object-mappings/{sourceOrg}/bulk-create:
    post:
      description: |-
        This creates a set of object mappings (Max 25) between current org and source org.
        Source org should be "default" when creating object mappings that are not to be associated to any particular org.
        The request will need the following security scope:
        - sp:config-object-mapping:manage
      operationId: createObjectMappings
      parameters:
      - description: The name of the source org.
        example: source-org
        in: path
        name: sourceOrg
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              newObjectsMappings:
              - objectType: SOURCE
                jsonPath: $.name
                sourceValue: Original SOURCE Name
                targetValue: New SOURCE Name
                enabled: true
              - objectType: IDENTITY
                jsonPath: $.name
                sourceValue: Original IDENTITY Name
                targetValue: 'New IDENTITY Name '
                enabled: true
            schema:
              $ref: '#/components/schemas/ObjectMappingBulkCreateRequest'
        description: The bulk create object mapping request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                addedObjects:
                - objectMappingId: 603b1a61-d03d-4ed1-864f-a508fbd1995d
                  objectType: SOURCE
                  jsonPath: $.name
                  sourceValue: Original SOURCE Name
                  targetValue: New SOURCE Name
                  enabled: true
                  created: 2024-03-25T15:50:41.314Z
                  modified: 2024-03-25T15:50:41.299Z
                - objectMappingId: 00bece34-f50d-4227-8878-76f620b5a971
                  objectType: IDENTITY
                  jsonPath: $.name
                  sourceValue: Original IDENTITY Name
                  targetValue: 'New IDENTITY Name '
                  enabled: true
                  created: 2024-03-25T15:50:41.316Z
                  modified: 2024-03-25T15:50:41.316Z
              schema:
                $ref: '#/components/schemas/ObjectMappingBulkCreateResponse'
          description: The created object mapping between current org and source org.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:config-object-mapping:manage
      summary: Bulk creates object mappings
      tags:
      - Configuration Hub
  /configuration-hub/object-mappings/{sourceOrg}/bulk-patch:
    post:
      description: |-
        This updates a set of object mappings, only enabled and targetValue fields can be updated.
        Source org should be "default" when updating object mappings that are not associated to any particular org.
        The request will need the following security scope:
        - sp:config-object-mapping:manage
      operationId: updateObjectMappings
      parameters:
      - description: The name of the source org.
        example: source-org
        in: path
        name: sourceOrg
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              patches:
                "603b1a61-d03d-4ed1-864f-a508fbd1995d":
                - op: replace
                  path: /enabled
                  value: true
                "00bece34-f50d-4227-8878-76f620b5a971":
                - op: replace
                  path: /targetValue
                  value: New Target Value
            schema:
              $ref: '#/components/schemas/ObjectMappingBulkPatchRequest'
        description: The object mapping request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                patchedObjects:
                - objectMappingId: 603b1a61-d03d-4ed1-864f-a508fbd1995d
                  objectType: SOURCE
                  jsonPath: $.name
                  sourceValue: Original SOURCE Name
                  targetValue: New SOURCE Name
                  enabled: true
                  created: 2024-03-25T15:50:41.314Z
                  modified: 2024-03-25T15:50:41.299Z
                - objectMappingId: 00bece34-f50d-4227-8878-76f620b5a971
                  objectType: IDENTITY
                  jsonPath: $.name
                  sourceValue: Original IDENTITY Name
                  targetValue: 'New IDENTITY Name '
                  enabled: true
                  created: 2024-03-25T15:50:41.316Z
                  modified: 2024-03-25T15:50:41.316Z
              schema:
                $ref: '#/components/schemas/ObjectMappingBulkPatchResponse'
          description: The updated object mappings.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:config-object-mapping:manage
      summary: Bulk updates object mappings
      tags:
      - Configuration Hub
  /configuration-hub/backups/uploads:
    get:
      description: This API gets a list of existing uploaded configurations for the
        current tenant.
      operationId: listUploadedConfigurations
      parameters:
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **status**: *eq*
        example: status eq "COMPLETE"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - jobId: 281d421c-0643-4004-9fe5-29a95d2f73df
                status: COMPLETE
                type: BACKUP
                tenant: someTenant
                requesterName: support
                fileExists: true
                created: 2024-03-07T21:11:00.375Z
                modified: 2024-03-07T21:11:25.046Z
                completed: 2024-03-07T21:11:00.66Z
                name: test1
                userCanDelete: false
                isPartial: false
                backupType: UPLOADED
                hydrationStatus: HYDRATED
                totalObjectCount: 64
              schema:
                items:
                  $ref: '#/components/schemas/BackupResponse'
                type: array
          description: List of existing uploaded configurations.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:config-backup:read
        - sp:config-backup:manage
      summary: List uploaded configurations
      tags:
      - Configuration Hub
    post:
      description: |-
        This API uploads a JSON configuration file into a tenant.

        Configuration files can be managed and deployed via Configuration Hub by uploading a json file which contains configuration data. The JSON file should be the same as the one used by our import endpoints. The object types supported by upload configuration file functionality are the same as the ones supported by our regular backup functionality.

        Refer to [SaaS Configuration](https://developer.sailpoint.com/idn/docs/saas-configuration/#supported-objects) for more information about supported objects.
      operationId: createUploadedConfiguration
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createUploadedConfiguration_request'
        description: |
          The body will consist of "data" which should contain the json file and name wish should be the name you want to assign to the uploaded file"

          __Example__

              data: "uploaded.json",
              name: "A_NEW_UPLOADED_BACKUP"

          __Sample Upload File__

              {
                "version": 1,
                "tenant": "a-sample-tenant",
                "objects":
                [
                  {
                    "version": 1,
                    "self":
                      {
                        "id": "0a59c7196d2917f8aa6d29686e6600fb",
                        "type": "SOURCE",
                        "name": "Extended Form"
                      },
                    "object":
                      {
                        "id": "0a59c7196d2917f8aa6d29686e6600fb",
                        "name": "Extended Form",
                        "type": "DelimitedFile",
                        "connectorClass": "sailpoint.connector.DelimitedFileConnector",
                        "connectorScriptName": "delimited-file-angularsc",
                        "description": "Migrated app - Extended Form (original ID: 0a59c7196d2917f8aa6d29686e6600fb)",
                        "deleteThreshold": 10,
                        "provisionAsCsv": false,
                        "owner":
                          {
                            "type": "IDENTITY",
                            "id": "0a59c7196d2917f8816d29685fed00c3",
                            "name": "slpt.services"
                          },
                        "connectorAttributes":
                          {
                            "beforemoveAccount": "Do Nothing",
                            "beforemoverAccount": "Do Nothing",
                            "busApp": "false",
                            "file": "Empty",
                            "filetransport": "local",
                            "filterEmptyRecords": "true",
                            "group.filetransport": "local",
                            "group.filterEmptyRecords": "true",
                            "group.partitionMode": "auto",
                            "hasHeader": "true",
                            "indexColumn": "ID",
                            "isCaseInsensitiveMerge": "false",
                            "isSortedByIndexColumn": "false",
                            "loaProcess": "Do Nothing",
                            "ltdProcess": "Do Nothing",
                            "mergeRows": "false",
                            "moverProcess": "Do Nothing",
                            "moverRevocation": "Do Nothing",
                            "nativeChangeDetectionAttributeScope": "entitlements",
                            "nativeChangeDetectionEnabled": "false",
                            "nativeChangeProcess": "Do Nothing",
                            "parseType": "delimited",
                            "partitionMode": "auto",
                            "policyType": "Do Nothing",
                            "rehireProcess": "Do Nothing",
                            "reverseleaverProcess": "Do Nothing",
                            "rtwloaProcess": "Do Nothing",
                            "rtwltdProcess": "Do Nothing",
                            "stopIfLineHasWrongColumnLength": "false",
                            "templateApplication": "DelimitedFile Template",
                            "terminationProcess": "Do Nothing"
                          },
                        "schemas":
                          [],
                        "provisioningPolicies":
                          [],
                        "features":
                          [
                            "DIRECT_PERMISSIONS",
                            "NO_RANDOM_ACCESS",
                            "DISCOVER_SCHEMA"
                          ]
                      }
                  }
                ]
            }
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupResponse'
          description: Upload job accepted and queued for processing.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:config-backup:manage
      summary: Upload a configuration
      tags:
      - Configuration Hub
  /configuration-hub/backups/uploads/{id}:
    delete:
      description: |-
        This API deletes an uploaded configuration based on Id.

        On success, this endpoint will return an empty response.

        The uploaded configuration id can be obtained from the response after a successful upload, or the list uploaded configurations endpoint.
      operationId: deleteUploadedConfiguration
      parameters:
      - description: The id of the uploaded configuration.
        example: 3d0fe04b-57df-4a46-a83b-8f04b0f9d10b
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:config-backup:manage
      summary: Delete an uploaded configuration
      tags:
      - Configuration Hub
    get:
      description: This API gets an existing uploaded configuration for the current
        tenant.
      operationId: getUploadedConfiguration
      parameters:
      - description: The id of the uploaded configuration.
        example: 3d0fe04b-57df-4a46-a83b-8f04b0f9d10b
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                jobId: 2ea830f3-2b14-4772-8a20-3d006742e419
                status: COMPLETE
                type: BACKUP
                tenant: someTenant
                requesterName: support
                fileExists: true
                created: 2024-02-20T22:08:31.064Z
                modified: 2024-02-20T22:13:15.662Z
                completed: 2024-02-20T22:08:31.689Z
                name: something new
                userCanDelete: false
                isPartial: false
                backupType: UPLOADED
                hydrationStatus: HYDRATED
                totalObjectCount: 2
              schema:
                $ref: '#/components/schemas/BackupResponse'
          description: Gets an uploaded configuration details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:config-backup:read
        - sp:config-backup:manage
      summary: Get an uploaded configuration
      tags:
      - Configuration Hub
  /connectors/{scriptName}:
    delete:
      description: Delete a custom connector that using its script name.
      operationId: deleteCustomConnector
      parameters:
      - description: The scriptName value of the connector. ScriptName is the unique
          id generated at connector creation.
        explode: false
        in: path
        name: scriptName
        required: true
        schema:
          example: aScriptName
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getConnectorList
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:connector-config:manage
      summary: Delete connector by script name
      tags:
      - Connectors
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    get:
      description: 'Fetches a connector that using its script name.    '
      operationId: getConnector
      parameters:
      - description: The scriptName value of the connector. ScriptName is the unique
          id generated at connector creation.
        explode: false
        in: path
        name: scriptName
        required: true
        schema:
          example: aScriptName
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getConnectorList
      - description: "The locale to apply to the config. If no viable locale is given,\
          \ it will default to \"en\""
        in: query
        name: locale
        required: false
        schema:
          enum:
          - de
          - "false"
          - fi
          - sv
          - ru
          - pt
          - ko
          - zh-TW
          - en
          - it
          - fr
          - zh-CN
          - hu
          - es
          - cs
          - ja
          - pl
          - da
          - nl
          example: de
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDetail'
          description: A Connector Dto object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:connector-config:read
        - idn:connector-config:manage
      summary: Get connector by script name
      tags:
      - Connectors
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    patch:
      description: |
        This API updates a custom connector by script name using [JSON Patch](https://tools.ietf.org/html/rfc6902) syntax.

        The following fields are patchable:


        * connectorMetadata

        * applicationXml

        * correlationConfigXml

        * sourceConfigXml
      operationId: updateConnector
      parameters:
      - description: The scriptName value of the connector. ScriptName is the unique
          id generated at connector creation.
        explode: false
        in: path
        name: scriptName
        required: true
        schema:
          example: aScriptName
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getConnectorList
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of connector detail update operations
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDetail'
          description: A updated Connector Dto object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:connector-config:manage
      summary: Update connector by script name
      tags:
      - Connectors
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /connectors:
    get:
      description: Fetches list of connectors that have 'RELEASED' status using filtering
        and pagination.
      operationId: getConnectorList
      parameters:
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **name**: *sw, co*

          **type**: *sw, co, eq*

          **directConnect**: *eq*

          **category**: *eq*

          **features**: *ca*

          **labels**: *ca*
        example: directConnect eq "true"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: "The locale to apply to the config. If no viable locale is given,\
          \ it will default to \"en\""
        in: query
        name: locale
        required: false
        schema:
          enum:
          - de
          - "false"
          - fi
          - sv
          - ru
          - pt
          - ko
          - zh-TW
          - en
          - it
          - fr
          - zh-CN
          - hu
          - es
          - cs
          - ja
          - pl
          - da
          - nl
          example: de
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/V3ConnectorDto'
                type: array
          description: A Connector Dto object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:connector-config:read
        - idn:connector-config:manage
      summary: Get connector list
      tags:
      - Connectors
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    post:
      description: 'Create custom connector.    '
      operationId: createCustomConnector
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V3CreateConnectorDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V3ConnectorDto'
          description: A Connector Dto object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:connector-config:manage
      summary: Create custom connector
      tags:
      - Connectors
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /connectors/{scriptName}/source-config:
    get:
      description: 'Fetches a connector''s source config using its script name.    '
      operationId: getConnectorSourceConfig
      parameters:
      - description: The scriptName value of the connector. ScriptName is the unique
          id generated at connector creation.
        explode: false
        in: path
        name: scriptName
        required: true
        schema:
          example: aScriptName
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getConnectorList
      responses:
        "200":
          content:
            application/xml:
              schema:
                type: string
          description: The connector's source template
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:connector-config:read
        - idn:connector-config:manage
      summary: Get connector source configuration
      tags:
      - Connectors
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    put:
      description: 'Update a connector''s source config using its script name.    '
      operationId: putConnectorSourceConfig
      parameters:
      - description: The scriptName value of the connector. ScriptName is the unique
          id generated at connector creation.
        explode: false
        in: path
        name: scriptName
        required: true
        schema:
          example: aScriptName
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getConnectorList
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/putConnectorSourceConfig_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDetail'
          description: The connector's update detail
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:connector-config:manage
      summary: Update connector source configuration
      tags:
      - Connectors
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /connectors/{scriptName}/translations/{locale}:
    get:
      description: 'Fetches a connector''s translations using its script name.    '
      operationId: getConnectorTranslations
      parameters:
      - description: The scriptName value of the connector. Scriptname is the unique
          id generated at connector creation.
        explode: false
        in: path
        name: scriptName
        required: true
        schema:
          example: aScriptName
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getConnectorList
      - description: "The locale to apply to the config. If no viable locale is given,\
          \ it will default to \"en\""
        in: path
        name: locale
        required: true
        schema:
          enum:
          - de
          - "false"
          - fi
          - sv
          - ru
          - pt
          - ko
          - zh-TW
          - en
          - it
          - fr
          - zh-CN
          - hu
          - es
          - cs
          - ja
          - pl
          - da
          - nl
          example: de
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: The connector's translations
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:connector-config:read
        - idn:connector-config:manage
      summary: Get connector translations
      tags:
      - Connectors
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    put:
      description: 'Update a connector''s translations using its script name.    '
      operationId: putConnectorTranslations
      parameters:
      - description: The scriptName value of the connector. Scriptname is the unique
          id generated at connector creation.
        explode: false
        in: path
        name: scriptName
        required: true
        schema:
          example: aScriptName
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getConnectorList
      - description: "The locale to apply to the config. If no viable locale is given,\
          \ it will default to \"en\""
        in: path
        name: locale
        required: true
        schema:
          enum:
          - de
          - "false"
          - fi
          - sv
          - ru
          - pt
          - ko
          - zh-TW
          - en
          - it
          - fr
          - zh-CN
          - hu
          - es
          - cs
          - ja
          - pl
          - da
          - nl
          example: de
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDetail'
          description: The connector's update detail
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:connector-config:manage
      summary: Update connector translations
      tags:
      - Connectors
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /connectors/{scriptName}/source-template:
    get:
      description: 'Fetches a connector''s source template using its script name.    '
      operationId: getConnectorSourceTemplate
      parameters:
      - description: The scriptName value of the connector. ScriptName is the unique
          id generated at connector creation.
        explode: false
        in: path
        name: scriptName
        required: true
        schema:
          example: aScriptName
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getConnectorList
      responses:
        "200":
          content:
            application/xml:
              schema:
                type: string
          description: The connector's source template
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:connector-config:read
        - idn:connector-config:manage
      summary: Get connector source template
      tags:
      - Connectors
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    put:
      description: 'Update a connector''s source template using its script name.    '
      operationId: putConnectorSourceTemplate
      parameters:
      - description: The scriptName value of the connector. ScriptName is the unique
          id generated at connector creation.
        explode: false
        in: path
        name: scriptName
        required: true
        schema:
          example: aScriptName
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getConnectorList
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/putConnectorSourceTemplate_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDetail'
          description: The connector's update detail
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:connector-config:manage
      summary: Update connector source template
      tags:
      - Connectors
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /identities/{identity-id}/set-lifecycle-state:
    post:
      description: Use this API to set/update an identity's lifecycle state to the
        one provided and update the corresponding identity profile.
      operationId: setLifecycleState
      parameters:
      - description: ID of the identity to update.
        example: 2c9180857893f1290178944561990364
        in: path
        name: identity-id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setLifecycleState_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setLifecycleState_200_response'
          description: The request was successfully accepted into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-lifecycle-state:manage
      summary: Set lifecycle state
      tags:
      - Lifecycle States
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /identity-profiles/{identity-profile-id}/lifecycle-states:
    get:
      description: 'Use this endpoint to list all lifecycle states by their associated
        identity profiles. '
      operationId: getLifecycleStates
      parameters:
      - description: Identity profile ID.
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: identity-profile-id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityProfiles
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, modified**
        example: "created,modified"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LifecycleState'
                type: array
          description: List of LifecycleState objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile-lifecycle-state:read
      - applicationAuth:
        - idn:identity-profile-lifecycle-state:read
      summary: Lists lifecyclestates
      tags:
      - Lifecycle States
      x-sailpoint-userLevels:
      - ORG_ADMIN
    post:
      description: Use this endpoint to create a lifecycle state.
      operationId: createLifecycleState
      parameters:
      - description: Identity profile ID.
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: identity-profile-id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityProfiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LifecycleState'
        description: Lifecycle state to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleState'
          description: Created LifecycleState object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile-lifecycle-state:manage
      - applicationAuth:
        - idn:identity-profile-lifecycle-state:manage
      summary: Create lifecycle state
      tags:
      - Lifecycle States
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /identity-profiles/{identity-profile-id}/lifecycle-states/{lifecycle-state-id}:
    delete:
      description: 'Use this endpoint to delete the lifecycle state by its ID. '
      operationId: deleteLifecycleState
      parameters:
      - description: Identity profile ID.
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: identity-profile-id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityProfiles
      - description: Lifecycle state ID.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: lifecycle-state-id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getLifecycleStates
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecyclestateDeleted'
          description: The request was successfully accepted into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile-lifecycle-state:manage
      - applicationAuth:
        - idn:identity-profile-lifecycle-state:manage
      summary: Delete lifecycle state
      tags:
      - Lifecycle States
      x-sailpoint-userLevels:
      - ORG_ADMIN
    get:
      description: 'Use this endpoint to get a lifecycle state by its ID and its associated
        identity profile ID. '
      operationId: getLifecycleState
      parameters:
      - description: Identity profile ID.
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: identity-profile-id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityProfiles
      - description: Lifecycle state ID.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: lifecycle-state-id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getLifecycleStates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleState'
          description: The requested LifecycleState was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile-lifecycle-state:read
      summary: Get lifecycle state
      tags:
      - Lifecycle States
      x-sailpoint-userLevels:
      - ORG_ADMIN
    patch:
      description: "Use this endpoint to update individual lifecycle state fields,\
        \ using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard."
      operationId: updateLifecycleStates
      parameters:
      - description: Identity profile ID.
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: identity-profile-id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentityProfiles
      - description: Lifecycle state ID.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: lifecycle-state-id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getLifecycleStates
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /description
              value: Updated description!
            - op: replace
              path: /accessProfileIds
              value:
              - 2c918087742bab150174407a80f3125e
              - 2c918087742bab150174407a80f3124f
            - op: replace
              path: /accountActions
              value:
              - action: ENABLE
                sourceIds:
                - 2c9180846a2f82fb016a481c1b1560c5
                - 2c9180846a2f82fb016a481c1b1560cc
              - action: DISABLE
                sourceIds:
                - 2c91808869a0c9980169a207258513fb
            - op: replace
              path: /emailNotificationOption
              value:
                notifyManagers: true
                notifyAllAdmins: false
                notifySpecificUsers: false
                emailAddressList: []
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of lifecycle state update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields can be updated:
          * enabled
          * description
          * accountActions
          * accessProfileIds
          * emailNotificationOption
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleState'
          description: The LifecycleState was successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile-lifecycle-state:manage
      - applicationAuth:
        - idn:identity-profile-lifecycle-state:manage
      summary: Update lifecycle state
      tags:
      - Lifecycle States
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /identity-profiles:
    get:
      description: "Get a list of identity profiles, based on the specified query\
        \ parameters."
      operationId: listIdentityProfiles
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, ne, ge, gt, in, le, sw*

          **name**: *eq, ne, ge, gt, in, le, sw*

          **priority**: *eq, ne*
        example: id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, name, priority, created, modified, owner.id, owner.name**
        example: "id,name"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProfile'
                type: array
          description: List of identity profiles.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile:read
      - applicationAuth:
        - idn:identity-profile:read
      summary: List identity profiles
      tags:
      - Identity Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
    post:
      description: 'Creates an identity profile.    '
      operationId: createIdentityProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProfile'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProfile'
          description: Created identity profile.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile:manage
      summary: Create identity profile
      tags:
      - Identity Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /identity-profiles/bulk-delete:
    post:
      description: |-
        This deletes multiple Identity Profiles via a list of supplied IDs.

        On success, this endpoint will return a reference to the bulk delete task result.

        The following rights are required to access this endpoint: idn:identity-profile:delete
      operationId: deleteIdentityProfiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProfileBulkDelete'
        description: Identity Profile bulk delete request body.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResultSimplified'
          description: Accepted - Returns a TaskResult object referencing the bulk
            delete job created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile:delete
      summary: Delete identity profiles
      tags:
      - Identity Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /identity-profiles/export:
    get:
      description: This exports existing identity profiles in the format specified
        by the sp-config service.
      operationId: exportIdentityProfiles
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, ne*

          **name**: *eq, ne*

          **priority**: *eq, ne*
        example: id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, name, priority**
        example: "id,name"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProfileExportedObject'
                type: array
          description: List of export objects with identity profiles.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile:read
      summary: Export identity profiles
      tags:
      - Identity Profiles
  /identity-profiles/import:
    post:
      description: This imports previously exported identity profiles.
      operationId: importIdentityProfiles
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdentityProfileExportedObject'
              type: array
        description: Previously exported Identity Profiles.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectImportResult'
          description: The result of importing Identity Profiles.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile:manage
      summary: Import identity profiles
      tags:
      - Identity Profiles
  /identity-profiles/identity-preview:
    post:
      description: |-
        Use this API to generate a non-persisted preview of the identity object after applying `IdentityAttributeConfig` sent in request body.
        This API only allows `accountAttribute`, `reference` and `rule` transform types in the `IdentityAttributeConfig` sent in the request body.
      operationId: showIdentityPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityPreviewRequest'
        description: Identity Preview request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityPreviewResponse'
          description: A preview of the identity attributes after applying identity
            attributes config sent in request body.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile:manage
      summary: Generate identity profile preview
      tags:
      - Identity Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /identity-profiles/{identity-profile-id}:
    delete:
      description: |-
        Delete an identity profile by ID.
        On success, this endpoint will return a reference to the bulk delete task result.
      operationId: deleteIdentityProfile
      parameters:
      - description: Identity profile ID.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: identity-profile-id
        required: true
        schema:
          format: uuid
          type: string
        x-sailpoint-resource-operation-id: listIdentityProfiles
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResultSimplified'
          description: Accepted - Returns a TaskResult object referencing the bulk
            delete job created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile:delete
      summary: Delete identity profile
      tags:
      - Identity Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
    get:
      description: Get a single identity profile by ID.
      operationId: getIdentityProfile
      parameters:
      - description: Identity profile ID.
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: identity-profile-id
        required: true
        schema:
          format: uuid
          type: string
        x-sailpoint-resource-operation-id: listIdentityProfiles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProfile'
          description: Identity profile object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile:read
      - applicationAuth:
        - idn:identity-profile:read
      summary: Get identity profile
      tags:
      - Identity Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
    patch:
      description: "Update a specified identity profile with this PATCH request.\n\
        \  \nYou cannot update these fields:\n* id\n* created\n* modified\n* identityCount\n\
        * identityRefreshRequired\n* Authoritative Source and Identity Attribute Configuration\
        \ cannot be modified at the same time."
      operationId: updateIdentityProfile
      parameters:
      - description: Identity profile ID.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: identity-profile-id
        required: true
        schema:
          format: uuid
          type: string
        x-sailpoint-resource-operation-id: listIdentityProfiles
      requestBody:
        content:
          application/json-patch+json:
            examples:
              add-attribute-transform:
                summary: Add an attribute transform
                value:
                - op: add
                  path: /identityAttributeConfig/attributeTransforms/0
                  value:
                    identityAttributeName: location
                    transformDefinition:
                      type: accountAttribute
                      attributes:
                        sourceName: Employees
                        attributeName: location
                        sourceId: 2c91808878b7d63b0178c66ffcdc4ce4
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "List of identity profile update operations according to the\
          \ [JSON Patch](https://tools.ietf.org/html/rfc6902) standard."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProfile'
          description: Updated identity profile.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile:manage
      summary: Update identity profile
      tags:
      - Identity Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /identity-profiles/{identity-profile-id}/default-identity-attribute-config:
    get:
      description: This returns the default identity attribute config.
      operationId: getDefaultIdentityAttributeConfig
      parameters:
      - description: The Identity Profile ID.
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: identity-profile-id
        required: true
        schema:
          format: uuid
          type: string
        x-sailpoint-resource-operation-id: listIdentityProfiles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAttributeConfig'
          description: An Identity Attribute Config object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile:manage
      summary: Get default identity attribute config
      tags:
      - Identity Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /identity-profiles/{identity-profile-id}/process-identities:
    post:
      description: "Process identities under the profile\nThis operation should not\
        \ be used to schedule your own identity processing or to perform system wide\
        \ identity refreshes. The system will use a combination of [event-based processing](https://documentation.sailpoint.com/saas/help/setup/identity_processing.html?h=process#event-based-processing)\
        \ and [scheduled processing](https://documentation.sailpoint.com/saas/help/setup/identity_processing.html?h=process#scheduled-processing)\
        \ that runs every day at 8:00 AM and 8:00 PM in the tenant's timezone to keep\
        \ your identities synchronized. \nThis should only be run on identity profiles\
        \ that have the `identityRefreshRequired` attribute set to `true`. If `identityRefreshRequired`\
        \ is false, then there is no benefit to running this operation. Typically,\
        \ this operation is performed when a change is made to the identity profile\
        \ or its related lifecycle states that requires a refresh.\nThis operation\
        \ will perform the following activities on all identities under the identity\
        \ profile.\n1. Updates identity attribute according to the identity profile\
        \ mappings. 2. Determines the identity's correct manager through manager correlation.\
        \ 3. Updates the identity's access according to their assigned lifecycle state.\
        \ 4. Updates the identity's access based on role assignment criteria."
      externalDocs:
        description: Learn more about manually processing identities here
        url: https://documentation.sailpoint.com/saas/help/setup/identity_processing.html
      operationId: syncIdentityProfile
      parameters:
      - description: The Identity Profile ID to be processed
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: identity-profile-id
        required: true
        schema:
          format: uuid
          type: string
        x-sailpoint-resource-operation-id: listIdentityProfiles
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:identity-profile:refresh
      summary: Process identities under profile
      tags:
      - Identity Profiles
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /managed-clients:
    get:
      description: List managed clients.
      operationId: getManagedClients
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq*

          **name**: *eq*

          **clientId**: *eq*

          **clusterId**: *eq*
        example: name eq "client name"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ManagedClient'
                type: array
          description: "Response with a list of managed clients, based on the specified\
            \ query parameters."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:remote-client:read
        - idn:remote-client:manage
      summary: Get managed clients
      tags:
      - Managed Clients
      x-sailpoint-userLevels:
      - ORG_ADMIN
    post:
      description: |-
        Create a new managed client.
        The API returns a result that includes the managed client ID.
      operationId: createManagedClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedClientRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClient'
          description: Created managed client.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:remote-client:manage
      summary: Create managed client
      tags:
      - Managed Clients
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /managed-clients/{id}:
    delete:
      description: Delete an existing managed client.
      operationId: deleteManagedClient
      parameters:
      - description: Managed client ID.
        example: 4440278c-0ce2-41ee-a0a9-f5cfd5e8d3b7
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getManagedClients
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:remote-client:manage
      summary: Delete managed client
      tags:
      - Managed Clients
      x-sailpoint-userLevels:
      - ORG_ADMIN
    get:
      description: 'Get managed client by ID. '
      operationId: getManagedClient
      parameters:
      - description: Managed client ID.
        example: 4440278c-0ce2-41ee-a0a9-f5cfd5e8d3b7
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getManagedClients
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClient'
          description: Managed client response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:remote-client:read
        - idn:remote-client:manage
        - idn:managed-client-status:read
        - idn:managed-client-status:manage
      summary: Get managed client
      tags:
      - Managed Clients
      x-sailpoint-userLevels:
      - ORG_ADMIN
    patch:
      description: Update an existing managed client.
      operationId: updateManagedClient
      parameters:
      - description: Managed client ID.
        example: 4440278c-0ce2-41ee-a0a9-f5cfd5e8d3b7
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getManagedClients
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: JSONPatch payload used to update the object.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClient'
          description: Updated managed client.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:remote-client:manage
      summary: Update managed client
      tags:
      - Managed Clients
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /managed-clients/{id}/status:
    get:
      description: "Get a managed client's status, using its ID."
      operationId: getManagedClientStatus
      parameters:
      - description: Managed client ID to get status for.
        in: path
        name: id
        required: true
        schema:
          example: aClientId
          type: string
        x-sailpoint-resource-operation-id: getManagedClients
      - description: Managed client type to get status for.
        in: query
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/ManagedClientType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClientStatus'
          description: "Response with the managed client status, with the given ID\
            \ and type."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:managed-client-status:read
      summary: Get managed client status
      tags:
      - Managed Clients
  /managed-clusters:
    get:
      description: "List current organization's managed clusters, based on request\
        \ context."
      operationId: getManagedClusters
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **operational**: *eq*
        example: operational eq "operation"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ManagedCluster'
                type: array
          description: Response with a list of managed clusters.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:remote-client:read
        - idn:remote-client:manage
      summary: Get managed clusters
      tags:
      - Managed Clusters
      x-sailpoint-userLevels:
      - ORG_ADMIN
    post:
      description: |-
        Create a new Managed Cluster.
        The API returns a result that includes the managed cluster ID.
      operationId: createManagedCluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedClusterRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCluster'
          description: Created managed cluster.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:remote-client:manage
      summary: Create create managed cluster
      tags:
      - Managed Clusters
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /managed-clusters/{id}:
    delete:
      description: Delete an existing managed cluster.
      operationId: deleteManagedCluster
      parameters:
      - description: Managed cluster ID.
        example: 2c9180897de347a2017de8859e8c5039
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getManagedClusters
      - description: Flag to determine the need to delete a cluster with clients.
        example: false
        in: query
        name: removeClients
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:remote-client:manage
      summary: Delete managed cluster
      tags:
      - Managed Clusters
      x-sailpoint-userLevels:
      - ORG_ADMIN
    get:
      description: Get a managed cluster by ID.
      operationId: getManagedCluster
      parameters:
      - description: Managed cluster ID.
        example: 2c9180897de347a2017de8859e8c5039
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getManagedClusters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCluster'
          description: Response with managed cluster for the given ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:remote-client:read
        - idn:remote-client:manage
      summary: Get managed cluster
      tags:
      - Managed Clusters
      x-sailpoint-userLevels:
      - ORG_ADMIN
    patch:
      description: Update an existing managed cluster.
      operationId: updateManagedCluster
      parameters:
      - description: Managed cluster ID.
        example: 2c9180897de347a2017de8859e8c5039
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getManagedClusters
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: JSONPatch payload used to update the object.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCluster'
          description: Updated managed cluster.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:remote-client:manage
      summary: Update managed cluster
      tags:
      - Managed Clusters
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /managed-clusters/{id}/log-config:
    get:
      description: Get a managed cluster's log configuration.
      operationId: getClientLogConfiguration
      parameters:
      - description: ID of managed cluster to get log configuration for.
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        x-sailpoint-resource-operation-id: getManagedClusters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLogConfiguration'
          description: Log configuration of managed cluster for given cluster ID.
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:remote-client:read
        - idn:remote-client:manage
      summary: Get managed cluster log configuration
      tags:
      - Managed Clusters
      x-sailpoint-userLevels:
      - ORG_ADMIN
    put:
      description: "Update a managed cluster's log configuration. You may only specify\
        \ one of `durationMinutes` or `expiration`, up to 1440 minutes (24 hours)\
        \ in the future. If neither is specified, the default value for `durationMinutes`\
        \ is 240."
      operationId: putClientLogConfiguration
      parameters:
      - description: ID of the managed cluster to update the log configuration for.
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        x-sailpoint-resource-operation-id: getManagedClusters
      requestBody:
        content:
          application/json:
            examples:
              Duration Minutes:
                $ref: '#/components/examples/client-log-configuration-duration-minutes'
              Expiration:
                $ref: '#/components/examples/client-log-configuration-expiration'
            schema:
              $ref: '#/components/schemas/putClientLogConfiguration_request'
        description: Client log configuration for the given managed cluster.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLogConfiguration'
          description: Response with updated client log configuration for the given
            managed cluster.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:remote-client:manage
      summary: Update managed cluster log configuration
      tags:
      - Managed Clusters
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /mfa/okta-verify/config:
    get:
      description: This API returns the configuration of an Okta MFA method.
      operationId: getMFAOktaConfig
      responses:
        "200":
          content:
            application/json:
              example:
                mfaMethod: okta-verify
                enabled: true
                host: www.example.com
                accessKey: d******Y
                identityAttribute: email
              schema:
                $ref: '#/components/schemas/MfaOktaConfig'
          description: The configuration of an Okta MFA method.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa-configuration:read
        - idn:mfa-configuration:manage
      summary: Configuration of okta mfa method
      tags:
      - MFA Configuration
      x-sailpoint-userLevels:
      - ORG_ADMIN
    put:
      description: This API sets the configuration of an Okta MFA method.
      operationId: setMFAOktaConfig
      requestBody:
        content:
          application/json:
            example:
              mfaMethod: okta-verify
              enabled: true
              host: www.example.com
              accessKey: dk778Y3QlA5UqocYpdU3rEkzrK2D497y
              identityAttribute: email
            schema:
              $ref: '#/components/schemas/MfaOktaConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                mfaMethod: okta-verify
                enabled: true
                host: www.example.com
                accessKey: d******Y
                identityAttribute: email
              schema:
                $ref: '#/components/schemas/MfaOktaConfig'
          description: MFA configuration of an Okta MFA method.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa-configuration:manage
      summary: Set okta mfa configuration
      tags:
      - MFA Configuration
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /mfa/duo-web/config:
    get:
      description: This API returns the configuration of an Duo MFA method.
      operationId: getMFADuoConfig
      responses:
        "200":
          content:
            application/json:
              example:
                mfaMethod: duo-web
                enabled: true
                host: www.example.com
                accessKey: d******Y
                identityAttribute: email
                configProperties:
                  skey: 6******B
                  ikey: Q123WE45R6TY7890ZXCV
              schema:
                $ref: '#/components/schemas/MfaDuoConfig'
          description: The configuration of an Duo MFA method.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa-configuration:read
        - idn:mfa-configuration:manage
      summary: Configuration of duo mfa method
      tags:
      - MFA Configuration
      x-sailpoint-userLevels:
      - ORG_ADMIN
    put:
      description: This API sets the configuration of an Duo MFA method.
      operationId: setMFADuoConfig
      requestBody:
        content:
          application/json:
            example:
              mfaMethod: duo-web
              enabled: true
              host: www.example.com
              accessKey: qw123Y3QlA5UqocYpdU3rEkzrK2D497y
              identityAttribute: email
              configProperties:
                skey: 12q3WERlcUHWJmiMqyCXI3uOF7EaDJTbdeOp6E2B
                ikey: Q123WE45R6TY7890ZXCV
            schema:
              $ref: '#/components/schemas/MfaDuoConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                mfaMethod: duo-web
                enabled: true
                host: www.example.com
                accessKey: q******y
                identityAttribute: email
                configProperties:
                  skey: 1******B
                  ikey: Q123WE45R6TY7890ZXCV
              schema:
                $ref: '#/components/schemas/MfaDuoConfig'
          description: MFA configuration of an Duo MFA method.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa-configuration:manage
      summary: Set duo mfa configuration
      tags:
      - MFA Configuration
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /mfa/kba/config:
    get:
      description: This API returns the KBA configuration for MFA.
      operationId: getMFAKbaConfig
      parameters:
      - description: "Indicator whether the question text should be returned in all\
          \ configured languages\n   * If true, the question text is returned in all\
          \ languages that it is configured in.\n   * If false, the question text\
          \ is returned in the user locale if available, else for the default locale.\
          \ \n   * If not passed, it behaves the same way as passing this parameter\
          \ as false"
        example: allLanguages=true
        in: query
        name: allLanguages
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 143cfd3b-c23f-426b-ae5f-d3db06fa5919
                text: MFA new question -1 ?
                hasAnswer: false
                numAnswers: 0
              - id: "173421"
                text: What is your alphanumeric PIN?
                hasAnswer: false
                numAnswers: 3
              schema:
                items:
                  $ref: '#/components/schemas/KbaQuestion'
                type: array
          description: The configuration for KBA MFA method.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa-kba:read
      summary: Configuration of kba mfa method
      tags:
      - MFA Configuration
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - USER
  /mfa/kba/config/answers:
    post:
      description: 'This API sets answers to challenge questions.  Any configured
        questions omitted from the request are removed from user KBA configuration.    '
      operationId: setMFAKBAConfig
      requestBody:
        content:
          application/json:
            example:
            - id: "173423"
              answer: 822cd15d6c15aa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a0859a2fea34
            - id: c54fee53-2d63-4fc5-9259-3e93b9994135
              answer: 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08
            schema:
              items:
                $ref: '#/components/schemas/KbaAnswerRequestItem'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 143cfd3b-c23f-426b-ae5f-d3db06fa5919
                question: "[{\"text\":\"Nouvelle question MFA -1 ?\",\"locale\":\"\
                  fr\"},{\"text\":\"MFA new question -1 ?\",\"locale\":\"\"}]"
                hasAnswer: false
              - id: "173421"
                question: "[{\"text\":\"What is your alphanumeric PIN?\",\"locale\"\
                  :\"\"}]"
                hasAnswer: true
              - id: c54fee53-2d63-4fc5-9259-3e93b9994135
                question: "[{\"text\":\"Nouvelle question MFA - 2 ?\",\"locale\":\"\
                  fr\"},{\"text\":\"MFA new question - 2 ?\",\"locale\":\"\"}]"
                hasAnswer: true
              schema:
                items:
                  $ref: '#/components/schemas/KbaAnswerResponseItem'
                type: array
          description: The new KBA configuration for the user.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa-kba:authenticate
      summary: Set mfa kba configuration
      tags:
      - MFA Configuration
      x-sailpoint-userLevels:
      - USER
  /mfa/{method}/test:
    get:
      description: This API validates that the configuration is valid and will properly
        authenticate with the MFA provider identified by the method path parameter.
      operationId: testMFAConfig
      parameters:
      - description: The name of the MFA method. The currently supported method names
          are 'okta-verify' and 'duo-web'.
        in: path
        name: method
        required: true
        schema:
          enum:
          - okta-verify
          - duo-web
          example: okta-verify
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                state: SUCCESS
                error: null
              schema:
                $ref: '#/components/schemas/MfaConfigTestResponse'
          description: The result of configuration test for the MFA provider.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa-configuration:read
        - idn:mfa-configuration:manage
      summary: Mfa method's test configuration
      tags:
      - MFA Configuration
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /mfa/{method}/delete:
    delete:
      description: This API removes the configuration for the specified MFA method.
      operationId: deleteMFAConfig
      parameters:
      - description: The name of the MFA method. The currently supported method names
          are 'okta-verify' and 'duo-web'.
        in: path
        name: method
        required: true
        schema:
          enum:
          - okta-verify
          - duo-web
          example: okta-verify
          nullable: false
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                mfaMethod: okta-verify
                enabled: true
                host: www.example.com
                accessKey: d******Y
                identityAttribute: email
              schema:
                $ref: '#/components/schemas/MfaOktaConfig'
          description: MFA configuration of an MFA method.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa-configuration:manage
      summary: Delete mfa method configuration
      tags:
      - MFA Configuration
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /mfa/okta-verify/verify:
    post:
      description: "This API Authenticates the user via Okta-Verify MFA method. Request\
        \ requires a header called 'slpt-forwarding', and it must contain a remote\
        \ IP Address of caller."
      operationId: sendOktaVerifyRequest
      requestBody:
        content:
          application/json:
            example:
              userId: example@mail.com
            schema:
              $ref: '#/components/schemas/OktaVerificationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                requestId: 089899f13a8f4da7824996191587bab9
                status: SUCCESS
                error: ""
              schema:
                $ref: '#/components/schemas/VerificationResponse'
          description: The status of verification request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa:verify
      summary: Verifying authentication via okta method
      tags:
      - MFA Controller
  /mfa/duo-web/verify:
    post:
      description: This API Authenticates the user via Duo-Web MFA method.
      operationId: sendDuoVerifyRequest
      requestBody:
        content:
          application/json:
            example:
              userId: 2c9180947f0ef465017f215cbcfd004b
              signedResponse: AUTH|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjUzMDg5|f1f5f8ced5b340f3d303b05d0efa0e43b6a8f970:APP|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjU2NjE5|cb44cf44353f5127edcae31b1da0355f87357db2
            schema:
              $ref: '#/components/schemas/DuoVerificationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                requestId: 089899f13a8f4da7824996191587bab9
                status: SUCCESS
                error: ""
              schema:
                $ref: '#/components/schemas/VerificationResponse'
          description: The status of verification request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa:verify
      summary: Verifying authentication via duo method
      tags:
      - MFA Controller
  /mfa/{method}/poll:
    post:
      description: This API poll the VerificationPollRequest for the specified MFA
        method.
      operationId: pingVerificationStatus
      parameters:
      - description: "The name of the MFA method. The currently supported method names\
          \ are 'okta-verify', 'duo-web', 'kba','token', 'rsa'"
        in: path
        name: method
        required: true
        schema:
          enum:
          - okta-verify
          - duo-web
          - kba
          - token
          - rsa
          example: okta-verify
          nullable: false
          type: string
      requestBody:
        content:
          application/json:
            example:
              requestId: 089899f13a8f4da7824996191587bab9
            schema:
              $ref: '#/components/schemas/VerificationPollRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                requestId: 089899f13a8f4da7824996191587bab9
                status: PENDING
                error: ""
              schema:
                $ref: '#/components/schemas/VerificationResponse'
          description: MFA VerificationPollRequest status an MFA method.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa:poll
      summary: Polling mfa method by verificationpollrequest
      tags:
      - MFA Controller
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /mfa/kba/authenticate:
    post:
      description: This API Authenticate user in KBA MFA method.
      operationId: sendKbaAnswers
      requestBody:
        content:
          application/json:
            example:
            - id: "173423"
              answer: 822cd15d6c15aa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a0859a2fea34
            - id: c54fee53-2d63-4fc5-9259-3e93b9994135
              answer: 9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08
            schema:
              items:
                $ref: '#/components/schemas/KbaAnswerRequestItem'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                kbaAuthResponseItem:
                - questionId: 089899f13a8f4da7824996191587bab9
                  IsVerified: false
                - questionId: 089899f13a8f4da7824996191587bda8
                  IsVerified: true
                status: PENDING
              schema:
                $ref: '#/components/schemas/KbaAuthResponse'
          description: KBA authenticated status.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa-kba:authenticate
      summary: Authenticate kba provided mfa method
      tags:
      - MFA Controller
  /mfa/token/authenticate:
    post:
      description: This API Authenticate user in Token MFA method.
      operationId: sendTokenAuthRequest
      requestBody:
        content:
          application/json:
            example:
              token: "12345"
              userAlias: will.albin
              deliveryType: EMAIL_WORK
            schema:
              $ref: '#/components/schemas/TokenAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                status: PENDING
              schema:
                $ref: '#/components/schemas/TokenAuthResponse'
          description: Token authenticated status.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa:verify
      summary: Authenticate token provided mfa method
      tags:
      - MFA Controller
  /mfa/token/send:
    post:
      description: This API send token request.
      operationId: createSendToken
      requestBody:
        content:
          application/json:
            example:
              userAlias: will.albin
              deliveryType: EMAIL_WORK
            schema:
              $ref: '#/components/schemas/SendTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                requestId: 089899f13a8f4da7824996191587bab9
                status: SUCCESS
                errorMessage: ""
              schema:
                $ref: '#/components/schemas/SendTokenResponse'
          description: Token send status.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:mfa:send
      summary: Create and send user token
      tags:
      - MFA Controller
  /non-employee-records:
    get:
      description: |-
        This gets a list of non-employee records. There are two contextual uses for this endpoint:
          1. The user has the role context of `idn:nesr:read`, in which case they can get a list of all of the non-employees.
          2. The user is an account manager, in which case they can get a list of the non-employees that they manage.
      operationId: listNonEmployeeRecords
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified**
        example: "accountName,sourceId"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **sourceId**: *eq*
        example: sourceId eq "2c91808568c529c60168cca6f90c1313"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeRecord'
                type: array
          description: Non-Employee record objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: List non-employee records
      tags:
      - Non-Employee Lifecycle Management
    post:
      description: |-
        This request will create a non-employee record.
        Requires role context of `idn:nesr:create`
      operationId: createNonEmployeeRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeRequestBody'
        description: Non-Employee record creation request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRecord'
          description: Created non-employee record.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create non-employee record
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-records/{id}:
    delete:
      description: |-
        This request will delete a non-employee record.
        Requires role context of `idn:nesr:delete`
      operationId: deleteNonEmployeeRecord
      parameters:
      - description: Non-Employee record id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeRecords
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete non-employee record
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: |-
        This gets a non-employee record.
        Requires role context of `idn:nesr:read`
      operationId: getNonEmployeeRecord
      parameters:
      - description: Non-Employee record id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeRecords
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRecord'
          description: Non-Employee record object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get a non-employee record
      tags:
      - Non-Employee Lifecycle Management
    patch:
      description: |-
        This request will patch a non-employee record. There are two contextual uses for this endpoint:
          1. The user has the role context of `idn:nesr:update`, in which case they
        update all available fields.
          2. The user is owner of the source, in this case they can only update the
        end date.
      operationId: patchNonEmployeeRecord
      parameters:
      - description: Non-employee record id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeRecords
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /endDate
              value: 2019-08-23T18:40:35.772Z
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of non-employee update operations according to the [JSON\
          \ Patch](https://tools.ietf.org/html/rfc6902) standard. Attributes are restricted\
          \ by user type. Owner of source can update end date. Organization admins\
          \ can update all available fields."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRecord'
          description: A patched non-employee record.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Patch non-employee record
      tags:
      - Non-Employee Lifecycle Management
    put:
      description: |-
        This request will update a non-employee record. There are two contextual uses for this endpoint:
          1. The user has the role context of `idn:nesr:update`, in which case they
        update all available fields.
          2. The user is owner of the source, in this case they can only update the
        end date.
      operationId: updateNonEmployeeRecord
      parameters:
      - description: Non-employee record id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeRecords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeRequestBody'
        description: Non-employee record creation request body. Attributes are restricted
          by user type. Owner of source can update end date. Organization admins can
          update all available fields.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRecord'
          description: An updated non-employee record.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Update non-employee record
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-records/bulk-delete:
    post:
      description: This request will delete multiple non-employee records based on
        the non-employee ids provided. Requires role context of `idn:nesr:delete`
      operationId: deleteNonEmployeeRecordsInBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteNonEmployeeRecordsInBulk_request'
        description: Non-Employee bulk delete request body.
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete multiple non-employee records
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-requests:
    get:
      description: |-
        This gets a list of non-employee requests. There are two contextual uses for the `requested-for` path parameter:
          1. The user has the role context of `idn:nesr:read`, in which case he or
        she may request a list non-employee requests assigned to a particular account manager by passing in that manager's id.
          2. The current user is an account manager, in which case "me" should be
        provided as the `requested-for` value. This will provide the user with a list of the non-employee requests in the source(s) he or she manages.
      operationId: listNonEmployeeRequests
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: The identity for whom the request was made. *me* indicates the
          current user.
        example: e136567de87e4d029e60b3c3c55db56d
        in: query
        name: requested-for
        required: true
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, approvalStatus, firstName, lastName, email, phone, accountName, startDate, endDate**
        example: "created,approvalStatus"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: "Filter results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\
          \nFiltering is supported for the following fields and operators:\n\n**sourceId**:\
          \ *eq* "
        example: sourceId eq "2c91808568c529c60168cca6f90c1313"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeRequest'
                type: array
          description: List of non-employee request objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: List non-employee requests
      tags:
      - Non-Employee Lifecycle Management
    post:
      description: This request will create a non-employee request and notify the
        approver. Requires role context of `idn:nesr:create` or the user must own
        the source.
      operationId: createNonEmployeeRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeRequestBody'
        description: Non-Employee creation request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRequest'
          description: Non-Employee request creation object
        "400":
          content:
            application/json:
              examples:
                "400.1 Bad Request Content":
                  description: Response for bad request content
                  value:
                    detailCode: 400.1 Bad Request Content
                    trackingId: e7eab60924f64aa284175b9fa3309599
                    messages:
                    - locale: en
                      localeOrigin: REQUEST
                      text: firstName is required; accountName is required;
                "400.1.409 Reference conflict":
                  description: Response for reference conflict
                  value:
                    detailCode: 400.1.409 Reference conflict
                    trackingId: e7eab60924f64aa284175b9fa3309599
                    messages:
                    - locale: en
                      localeOrigin: REQUEST
                      text: Unable to create Non-Employee because the accountName
                        "existed" is already being used.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Create non-employee request
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-requests/{id}:
    delete:
      description: "This request will delete a non-employee request. \nRequires role\
        \ context of `idn:nesr:delete`"
      operationId: deleteNonEmployeeRequest
      parameters:
      - description: Non-Employee request id in the UUID format
        example: ac110005-7156-1150-8171-5b292e3e0084
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeRequests
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete non-employee request
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: |-
        This gets a non-employee request.
        There are two contextual uses for this endpoint:
          1. The user has the role context of `idn:nesr:read`, in this case the user
        can get the non-employee request for any user.
          2. The user must be the owner of the non-employee request.
      operationId: getNonEmployeeRequest
      parameters:
      - description: Non-Employee request id (UUID)
        example: ac110005-7156-1150-8171-5b292e3e0084
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeRequests
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRequest'
          description: Non-Employee request object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Get a non-employee request
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-requests/summary/{requested-for}:
    get:
      description: |-
        This request will retrieve a summary of non-employee requests. There are two contextual uses for the `requested-for` path parameter:
          1. The user has the role context of `idn:nesr:read`, in which case he or
        she may request a summary of all non-employee approval requests assigned to a particular account manager by passing in that manager's id.
          2. The current user is an account manager, in which case "me" should be
        provided as the `requested-for` value. This will provide the user with a summary of the non-employee requests in the source(s) he or she manages.
      operationId: getNonEmployeeRequestSummary
      parameters:
      - description: The identity (UUID) of the non-employee account manager for whom
          the summary is being retrieved. Use "me" instead to indicate the current
          user.
        example: 2c91808280430dfb0180431a59440460
        in: path
        name: requested-for
        required: true
        schema:
          format: uuid (if user is Org Admin)
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeRecords
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRequestSummary'
          description: Non-Employee request summary object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Get summary of non-employee requests
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources:
    get:
      description: "Get a list of non-employee sources. There are two contextual uses\
        \ for the `requested-for` path parameter: \n  1. If the user has the role\
        \ context of `idn:nesr:read`, he or she may request a list sources assigned\
        \ to a particular account manager by passing in that manager's `id`.\n  2.\
        \ If the current user is an account manager, the user should provide 'me'\
        \ as the `requested-for` value. Doing so provide the user with a list of the\
        \ sources he or she owns."
      operationId: listNonEmployeeSources
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: Identity the request was made for. Use 'me' to indicate the current
          user.
        example: me
        in: query
        name: requested-for
        required: false
        schema:
          type: string
      - description: Flag that determines whether the API will return a non-employee
          count associated with the source.
        example: true
        in: query
        name: non-employee-count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, created, sourceId**
        example: "name,created"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeSourceWithNECount'
                type: array
          description: List of non-employee sources objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:nelm:read
      summary: List non-employee sources
      tags:
      - Non-Employee Lifecycle Management
      x-sailpoint-userLevels:
      - ORG_ADMIN
    post:
      description: 'Create a non-employee source. '
      operationId: createNonEmployeeSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeSourceRequestBody'
        description: Non-Employee source creation request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSourceWithCloudExternalId'
          description: Created non-employee source.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:nelm:manage
      summary: Create non-employee source
      tags:
      - Non-Employee Lifecycle Management
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /non-employee-sources/{sourceId}:
    delete:
      description: This request will delete a non-employee source. Requires role context
        of `idn:nesr:delete`.
      operationId: deleteNonEmployeeSource
      parameters:
      - description: Source Id
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeSources
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete non-employee source
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: "This gets a non-employee source. There are two contextual uses\
        \ for the requested-for path parameter: \n  1. The user has the role context\
        \ of `idn:nesr:read`, in which case he or\nshe may request any source.\n \
        \ 2. The current user is an account manager, in which case the user can only\n\
        request sources that they own."
      operationId: getNonEmployeeSource
      parameters:
      - description: Source Id
        example: 2c91808b7c28b350017c2a2ec5790aa1
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeSources
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSource'
          description: Non-Employee source object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Get a non-employee source
      tags:
      - Non-Employee Lifecycle Management
    patch:
      description: "patch a non-employee source. (partial update) <br/> Patchable\
        \ field: **name, description, approvers, accountManagers** Requires role context\
        \ of `idn:nesr:update`."
      operationId: patchNonEmployeeSource
      parameters:
      - description: Source Id
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeSources
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /name
              value:
                new name: null
            - op: replace
              path: /approvers
              value:
              - 2c91809f703bb37a017040a2fe8748c7
              - 48b1f463c9e8427db5a5071bd81914b8
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of non-employee source update operations according to\
          \ the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSource'
          description: A patched non-employee source object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Patch a non-employee source
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{id}/non-employees/download:
    get:
      description: This requests a CSV download for all non-employees from a provided
        source. Requires role context of `idn:nesr:read`
      operationId: exportNonEmployeeRecords
      parameters:
      - description: Source Id (UUID)
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeSources
      responses:
        "200":
          content:
            text/csv:
              example: |
                accountName,firstName,lastName,phone,email,manager,startDate,endDate
                Jon.Smith, Jon, Smith, 555-555-5555, jon@jon.doe.nope.com, Jim Smith, 2020-04-05T08:00:00-10:00,2020-08-07T19:00:00-10:00
                William.Chaffin, William, Chaffin, 555-555-5555, william@chaffins.nope.com, Bertram Chaffin, 2020-04-05T08:00:00-10:00,2020-08-07T19:00:00-10:00
          description: Exported CSV
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Exports non-employee records to csv
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{id}/non-employee-bulk-upload:
    post:
      description: "This post will import, or update, Non-Employee records found in\
        \ the CSV. Requires role context of `idn:nesr:create`"
      operationId: importNonEmployeeRecordsInBulk
      parameters:
      - description: Source Id (UUID)
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeSources
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/importNonEmployeeRecordsInBulk_request'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeBulkUploadJob'
          description: The CSV was accepted to be bulk inserted now or at a later
            time.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: |
            Client Error - Returned if the request body is invalid.
            The response body will contain the list of specific errors with one on each line.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:nelm:manage
      summary: "Imports, or updates, non-employee records"
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{id}/non-employee-bulk-upload/status:
    get:
      description: |
        The nonEmployeeBulkUploadStatus API returns the status of the newest bulk upload job for the specified source.
        Requires role context of `idn:nesr:read`
      operationId: getNonEmployeeBulkUploadStatus
      parameters:
      - description: Source ID (UUID)
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeSources
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeBulkUploadStatus'
          description: "Status of the newest bulk-upload job, if any."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Obtain the status of bulk upload on the source
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{id}/schema-attributes-template/download:
    get:
      description: This requests a download for the Source Schema Template for a provided
        source. Requires role context of `idn:nesr:read`
      operationId: exportNonEmployeeSourceSchemaTemplate
      parameters:
      - description: Source Id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeSources
      responses:
        "200":
          content:
            text/csv:
              example: |
                accountName,firstName,lastName,phone,email,manager,startDate,endDate
          description: Exported Source Schema Template
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Exports source schema template
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals:
    get:
      description: |-
        This gets a list of non-employee approval requests.
        There are two contextual uses for this endpoint:
          1. The user has the role context of `idn:nesr:read`, in which case they
        can list the approvals for any approver.
          2. The user owns the requested approval.
      operationId: listNonEmployeeApprovals
      parameters:
      - description: The identity for whom the request was made. *me* indicates the
          current user.
        example: 2c91808280430dfb0180431a59440460
        in: query
        name: requested-for
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **approvalStatus**: *eq*
        example: approvalStatus eq "Pending"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, modified**
        example: created
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeApprovalItem'
                type: array
          description: List of approval items.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Get list of non-employee approval requests
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals/{id}:
    get:
      description: |-
        Gets a non-employee approval item detail. There are two contextual uses for this endpoint:
          1. The user has the role context of `idn:nesr:read`, in which case they
        can get any approval.
          2. The user owns the requested approval.
      operationId: getNonEmployeeApproval
      parameters:
      - description: Non-Employee approval item id (UUID)
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeApprovals
      - description: The object nonEmployeeRequest will not be included detail when
          set to false. *Default value is true*
        example: true
        in: query
        name: include-detail
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeApprovalItemDetail'
          description: Non-Employee approval item object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Get a non-employee approval item detail
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals/{id}/approve:
    post:
      description: Approves a non-employee approval request and notifies the next
        approver. The current user must be the requested approver.
      operationId: approveNonEmployeeRequest
      parameters:
      - description: Non-Employee approval item id (UUID)
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeApprovals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeApprovalDecision'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeApprovalItem'
          description: Non-Employee approval item object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Approve a non-employee request
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals/{id}/reject:
    post:
      description: This endpoint will reject an approval item request and notify user.
        The current user must be the requested approver.
      operationId: rejectNonEmployeeRequest
      parameters:
      - description: Non-Employee approval item id (UUID)
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeApprovals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeRejectApprovalDecision'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeApprovalItem'
          description: Non-Employee approval item object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Reject a non-employee request
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals/summary/{requested-for}:
    get:
      description: |-
        This request will retrieve a summary of non-employee approval requests. There are two contextual uses for the `requested-for` path parameter:
          1. The user has the role context of `idn:nesr:read`, in which case he or
        she may request a summary of all non-employee approval requests assigned to a particular approver by passing in that approver's id.
          2. The current user is an approver, in which case "me" should be provided
        as the `requested-for` value. This will provide the approver with a summary of the approval items assigned to him or her.
      operationId: getNonEmployeeApprovalSummary
      parameters:
      - description: The identity (UUID) of the approver for whom for whom the summary
          is being retrieved. Use "me" instead to indicate the current user.
        example: 2c91808280430dfb0180431a59440460
        in: path
        name: requested-for
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listIdentities
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeApprovalSummary'
          description: summary of non-employee approval requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Get summary of non-employee approval requests
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{sourceId}/schema-attributes:
    delete:
      description: This end-point deletes all custom schema attributes for a non-employee
        source. Requires role context of `idn:nesr:delete`
      operationId: deleteNonEmployeeSourceSchemaAttributes
      parameters:
      - description: The Source id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeSources
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete all custom schema attributes for non-employee source
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: |-
        This API gets the list of schema attributes for the specified Non-Employee SourceId. There are 8 mandatory attributes added to each new Non-Employee Source automatically. Additionaly, user can add up to 10 custom attributes. This interface returns all the mandatory attributes followed by any custom attributes. At most, a total of 18 attributes will be returned.
        Requires role context of `idn:nesr:read` or the user must be an account manager of the source.
      operationId: getNonEmployeeSourceSchemaAttributes
      parameters:
      - description: The Source id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeSources
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
                maxItems: 18
                type: array
          description: A list of Schema Attributes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: List schema attributes non-employee source
      tags:
      - Non-Employee Lifecycle Management
    post:
      description: |-
        This API creates a new schema attribute for Non-Employee Source. The schema technical name must be unique in the source. Attempts to create a schema attribute with an existing name will result in a "400.1.409 Reference conflict" response. At most, 10 custom attributes can be created per schema. Attempts to create more than 10 will result in a "400.1.4 Limit violation" response.
        Requires role context of `idn:nesr:create`
      operationId: createNonEmployeeSourceSchemaAttributes
      parameters:
      - description: The Source id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeSources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeSchemaAttributeBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
          description: Schema Attribute created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create a new schema attribute for non-employee source
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{sourceId}/schema-attributes/{attributeId}:
    delete:
      description: |
        This end-point deletes a specific schema attribute for a non-employee source.
        Requires role context of `idn:nesr:delete`
      operationId: deleteNonEmployeeSchemaAttribute
      parameters:
      - description: The Schema Attribute Id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: attributeId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getNonEmployeeSourceSchemaAttributes
      - description: The Source id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeSources
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete a schema attribute for non-employee source
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: This API gets a schema attribute by Id for the specified Non-Employee
        SourceId. Requires role context of `idn:nesr:read` or the user must be an
        account manager of the source.
      operationId: getNonEmployeeSchemaAttribute
      parameters:
      - description: The Schema Attribute Id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: attributeId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getNonEmployeeSourceSchemaAttributes
      - description: The Source id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeSources
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
          description: The Schema Attribute
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Get schema attribute non-employee source
      tags:
      - Non-Employee Lifecycle Management
    patch:
      description: |
        This end-point patches a specific schema attribute for a non-employee SourceId.
        Requires role context of `idn:nesr:update`
      operationId: patchNonEmployeeSchemaAttribute
      parameters:
      - description: The Schema Attribute Id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: attributeId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getNonEmployeeSourceSchemaAttributes
      - description: The Source id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listNonEmployeeSources
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /label
              value:
                new attribute label: null
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of schema attribute update operations according to the\
          \ [JSON Patch](https://tools.ietf.org/html/rfc6902) standard. The following\
          \ properties are allowed for update ':' 'label', 'helpText', 'placeholder',\
          \ 'required'."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
          description: The Schema Attribute was successfully patched.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Patch a schema attribute for non-employee source
      tags:
      - Non-Employee Lifecycle Management
  /oauth-clients:
    get:
      description: This gets a list of OAuth clients.
      operationId: listOauthClients
      parameters:
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **lastUsed**: *le, isnull*
        example: lastUsed le 2023-02-05T10:59:27.214Z
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetOAuthClientResponse'
                type: array
          description: List of OAuth clients.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:oauth-client:manage
      summary: List oauth clients
      tags:
      - OAuth Clients
    post:
      description: This creates an OAuth client.
      operationId: createOauthClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOAuthClientRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOAuthClientResponse'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:oauth-client:manage
      summary: Create oauth client
      tags:
      - OAuth Clients
  /oauth-clients/{id}:
    delete:
      description: This deletes an OAuth client.
      operationId: deleteOauthClient
      parameters:
      - description: The OAuth client id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listOauthClients
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:oauth-client:manage
      summary: Delete oauth client
      tags:
      - OAuth Clients
    get:
      description: This gets details of an OAuth client.
      operationId: getOauthClient
      parameters:
      - description: The OAuth client id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listOauthClients
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOAuthClientResponse'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:oauth-client:manage
        - sp:oauth-client:read
      summary: Get oauth client
      tags:
      - OAuth Clients
    patch:
      description: This performs a targeted update to the field(s) of an OAuth client.
      operationId: patchOauthClient
      parameters:
      - description: The OAuth client id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listOauthClients
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /strongAuthSupported
              value: true
            - op: replace
              path: /businessName
              value: acme-solar
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of OAuth client update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields are patchable:
          * tenant
          * businessName
          * homepageUrl
          * name
          * description
          * accessTokenValiditySeconds
          * refreshTokenValiditySeconds
          * redirectUris
          * grantTypes
          * accessType
          * enabled
          * strongAuthSupported
          * claimsSupported
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOAuthClientResponse'
          description: "Indicates the PATCH operation succeeded, and returns the OAuth\
            \ client's new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:oauth-client:manage
      summary: Patch oauth client
      tags:
      - OAuth Clients
  /password-sync-groups:
    get:
      description: This API returns a list of password sync groups.
      operationId: getPasswordSyncGroups
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PasswordSyncGroup'
                type: array
          description: A list of password sync groups.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-sync-group-management:read
      summary: Get password sync group list
      tags:
      - Password Sync Groups
      x-sailpoint-userLevels:
      - ORG_ADMIN
    post:
      description: This API creates a password sync group based on the specifications
        provided.
      operationId: createPasswordSyncGroup
      requestBody:
        content:
          application/json:
            example:
              name: Password Sync Group 2
              passwordPolicyId: 2c91808d744ba0ce01746f93b6204501
              sourceIds:
              - 2c918084660f45d6016617daa9210584
              - 2c918084660f45d6016617daa9210500
            schema:
              $ref: '#/components/schemas/PasswordSyncGroup'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
                name: Password Sync Group 2
                passwordPolicyId: 2c91808d744ba0ce01746f93b6204501
                sourceIds:
                - 2c918084660f45d6016617daa9210584
                - 2c918084660f45d6016617daa9210500
              schema:
                $ref: '#/components/schemas/PasswordSyncGroup'
          description: Reference to the password sync group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-sync-group-management:write
      summary: Create password sync group
      tags:
      - Password Sync Groups
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /password-sync-groups/{id}:
    delete:
      description: This API deletes the specified password sync group.
      operationId: deletePasswordSyncGroup
      parameters:
      - description: The ID of password sync group to delete.
        example: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getPasswordSyncGroups
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-sync-group-management:write
      summary: Delete password sync group by id
      tags:
      - Password Sync Groups
      x-sailpoint-userLevels:
      - ORG_ADMIN
    get:
      description: This API returns the sync group for the specified ID.
      operationId: getPasswordSyncGroup
      parameters:
      - description: The ID of password sync group to retrieve.
        example: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getPasswordSyncGroups
      responses:
        "200":
          content:
            application/json:
              example:
                id: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
                name: Password Sync Group 1
                passwordPolicyId: 2c91808d744ba0ce01746f93b6204501
                sourceIds:
                - 2c918084660f45d6016617daa9210584
                - 2c918084660f45d6016617daa9210500
              schema:
                $ref: '#/components/schemas/PasswordSyncGroup'
          description: Reference to the password sync group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-sync-group-management:read
      summary: Get password sync group by id
      tags:
      - Password Sync Groups
      x-sailpoint-userLevels:
      - ORG_ADMIN
    put:
      description: This API updates the specified password sync group.
      operationId: updatePasswordSyncGroup
      parameters:
      - description: The ID of password sync group to update.
        example: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getPasswordSyncGroups
      requestBody:
        content:
          application/json:
            example:
              id: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
              name: Password Sync Group 2
              passwordPolicyId: 2c91808d744ba0ce01746f93b6204501
              sourceIds:
              - 2c918084660f45d6016617daa9210584
              - 2c918084660f45d6016617daa9210500
            schema:
              $ref: '#/components/schemas/PasswordSyncGroup'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
                name: Password Sync Group 2
                passwordPolicyId: 2c91808d744ba0ce01746f93b6204501
                sourceIds:
                - 2c918084660f45d6016617daa9210584
                - 2c918084660f45d6016617daa9210500
              schema:
                $ref: '#/components/schemas/PasswordSyncGroup'
          description: Reference to the password sync group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-sync-group-management:write
      summary: Update password sync group by id
      tags:
      - Password Sync Groups
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /password-policies/{id}:
    delete:
      description: This API deletes the specified password policy.
      operationId: deletePasswordPolicy
      parameters:
      - description: The ID of password policy to delete.
        example: ff808081838d9e9d01838da6a03e0002
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listPasswordPolicies
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-policy:write
      summary: Delete password policy by id
      tags:
      - Password Policies
      x-sailpoint-userLevels:
      - ORG_ADMIN
    get:
      description: This API returns the password policy for the specified ID.
      operationId: getPasswordPolicyById
      parameters:
      - description: The ID of password policy to retrieve.
        example: ff808081838d9e9d01838da6a03e0005
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listPasswordPolicies
      responses:
        "200":
          content:
            application/json:
              example:
                description: Default Password Policy
                id: 2c91808e7d976f3b017d9f5ceae440c8
                name: Example PP
                dateCreated: 1639056206564
                lastUpdated: 1662385430753
                firstExpirationReminder: 90
                accountIdMinWordLength: 3
                accountNameMinWordLength: 3
                maxLength: 0
                maxRepeatedChars: 4
                minAlpha: 1
                minCharacterTypes: -1
                minLength: 8
                minLower: 0
                minNumeric: 1
                minSpecial: 0
                minUpper: 0
                passwordExpiration: 90
                defaultPolicy: true
                enablePasswdExpiration: false
                requireStrongAuthn: false
                requireStrongAuthOffNetwork: false
                requireStrongAuthUntrustedGeographies: false
                useAccountAttributes: false
                useDictionary: false
                useIdentityAttributes: false
                validateAgainstAccountId: true
                validateAgainstAccountName: true
                sourceIds:
                - 2c91808382ffee0b01830de154f14034
                - 2c91808582ffee0c01830de36511405f
              schema:
                $ref: '#/components/schemas/PasswordPolicyV3Dto'
          description: Reference to the password policy.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-policy:read
      summary: Get password policy by id
      tags:
      - Password Policies
      x-sailpoint-userLevels:
      - ORG_ADMIN
    put:
      description: This API updates the specified password policy.
      operationId: setPasswordPolicy
      parameters:
      - description: The ID of password policy to update.
        example: ff808081838d9e9d01838da6a03e0007
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listPasswordPolicies
      requestBody:
        content:
          application/json:
            example:
              description: Password Policy after update.
              id: 2c91808e7d976f3b017d9f5ceae440c8
              name: Improved Password Policy
              dateCreated: 1639056206564
              lastUpdated: 1662385430753
              firstExpirationReminder: 90
              accountIdMinWordLength: 3
              accountNameMinWordLength: 3
              maxLength: 0
              maxRepeatedChars: 4
              minAlpha: 1
              minCharacterTypes: -1
              minLength: 8
              minLower: 0
              minNumeric: 1
              minSpecial: 0
              minUpper: 0
              passwordExpiration: 90
              defaultPolicy: false
              enablePasswdExpiration: false
              requireStrongAuthn: false
              requireStrongAuthOffNetwork: false
              requireStrongAuthUntrustedGeographies: false
              useAccountAttributes: false
              useDictionary: false
              useIdentityAttributes: false
              validateAgainstAccountId: true
              validateAgainstAccountName: true
              sourceIds:
              - 2c91808382ffee0b01830de154f14034
              - 2c91808582ffee0c01830de36511405f
            schema:
              $ref: '#/components/schemas/PasswordPolicyV3Dto'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                description: Password Policy after update.
                id: 2c91808e7d976f3b017d9f5ceae440c8
                name: Improved Password Policy
                dateCreated: 1639056206564
                lastUpdated: 1662385430753
                firstExpirationReminder: 90
                accountIdMinWordLength: 3
                accountNameMinWordLength: 3
                maxLength: 0
                maxRepeatedChars: 4
                minAlpha: 1
                minCharacterTypes: -1
                minLength: 8
                minLower: 0
                minNumeric: 1
                minSpecial: 0
                minUpper: 0
                passwordExpiration: 90
                defaultPolicy: false
                enablePasswdExpiration: false
                requireStrongAuthn: false
                requireStrongAuthOffNetwork: false
                requireStrongAuthUntrustedGeographies: false
                useAccountAttributes: false
                useDictionary: false
                useIdentityAttributes: false
                validateAgainstAccountId: true
                validateAgainstAccountName: true
                sourceIds:
                - 2c91808382ffee0b01830de154f14034
                - 2c91808582ffee0c01830de36511405f
              schema:
                $ref: '#/components/schemas/PasswordPolicyV3Dto'
          description: Reference to the password policy.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-policy:write
      summary: Update password policy by id
      tags:
      - Password Policies
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /password-policies:
    get:
      description: |-
        This gets list of all Password Policies.
        Requires role of ORG_ADMIN
      operationId: listPasswordPolicies
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              example:
              - description: Example Password Policy
                id: 2c91808e7d976f3b017d9f5ceae440c8
                name: Example PP
                dateCreated: 1639056206564
                lastUpdated: 1662385430753
                firstExpirationReminder: 90
                accountIdMinWordLength: 3
                accountNameMinWordLength: 3
                maxLength: 0
                maxRepeatedChars: 4
                minAlpha: 1
                minCharacterTypes: -1
                minLength: 8
                minLower: 0
                minNumeric: 1
                minSpecial: 0
                minUpper: 0
                passwordExpiration: 90
                defaultPolicy: false
                enablePasswdExpiration: false
                requireStrongAuthn: false
                requireStrongAuthOffNetwork: false
                requireStrongAuthUntrustedGeographies: false
                useAccountAttributes: false
                useDictionary: false
                useIdentityAttributes: false
                validateAgainstAccountId: true
                validateAgainstAccountName: true
                sourceIds:
                - 2c91808382ffee0b01830de154f14034
                - 2c91808582ffee0c01830de36511405f
              - description: null
                id: 2c91808780b8b8430180ff7a093f3bf2
                name: Password Policy 1 test
                dateCreated: 1653553629503
                lastUpdated: null
                firstExpirationReminder: null
                accountIdMinWordLength: -1
                accountNameMinWordLength: -1
                maxLength: 0
                maxRepeatedChars: -1
                minAlpha: 1
                minCharacterTypes: -1
                minLength: 8
                minLower: 0
                minNumeric: 1
                minSpecial: 0
                minUpper: 0
                passwordExpiration: 90
                defaultPolicy: false
                enablePasswdExpiration: false
                requireStrongAuthn: false
                requireStrongAuthOffNetwork: false
                requireStrongAuthUntrustedGeographies: false
                useAccountAttributes: false
                useDictionary: false
                useIdentityAttributes: true
                validateAgainstAccountId: false
                validateAgainstAccountName: false
                sourceIds: []
              schema:
                items:
                  $ref: '#/components/schemas/PasswordPolicyV3Dto'
                type: array
          description: List of all Password Policies.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-policy:read
      summary: List password policies
      tags:
      - Password Policies
    post:
      description: This API creates the specified password policy.
      operationId: createPasswordPolicy
      requestBody:
        content:
          application/json:
            example:
              description: New Password Policy with high requirements to password
                complexity.
              id: null
              name: High security Password Policy
              dateCreated: 1639056206564
              lastUpdated: 1662385430753
              firstExpirationReminder: 90
              accountIdMinWordLength: 3
              accountNameMinWordLength: 3
              maxLength: 0
              maxRepeatedChars: 4
              minAlpha: 1
              minCharacterTypes: -1
              minLength: 8
              minLower: 0
              minNumeric: 1
              minSpecial: 0
              minUpper: 0
              passwordExpiration: 90
              defaultPolicy: false
              enablePasswdExpiration: false
              requireStrongAuthn: false
              requireStrongAuthOffNetwork: false
              requireStrongAuthUntrustedGeographies: false
              useAccountAttributes: false
              useDictionary: false
              useIdentityAttributes: false
              validateAgainstAccountId: true
              validateAgainstAccountName: true
              sourceIds:
              - 2c91808382ffee0b01830de154f14034
              - 2c91808582ffee0c01830de36511405f
            schema:
              $ref: '#/components/schemas/PasswordPolicyV3Dto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordPolicyV3Dto'
          description: Reference to the password policy.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-policy:write
      summary: Create password policy
      tags:
      - Password Policies
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /personal-access-tokens:
    get:
      description: "This gets a collection of personal access tokens associated with\
        \ the optional `owner-id`.  query parameter. If the `owner-id` query parameter\
        \ is omitted, all personal access tokens  for a tenant will be retrieved,\
        \ but the caller must have the 'idn:all-personal-access-tokens:read' right."
      operationId: listPersonalAccessTokens
      parameters:
      - description: "The identity ID of the owner whose personal access tokens should\
          \ be listed.  If \"me\", the caller should have the following right: 'idn:my-personal-access-tokens:read'\n\
          If an actual owner ID or if the `owner-id` parameter is omitted in the request,\
          \  the caller should have the following right: 'idn:all-personal-access-tokens:read'.\
          \ \nIf the caller has the following right, then managed personal access\
          \ tokens associated with `owner-id`  will be retrieved: 'idn:managed-personal-access-tokens:read'"
        in: query
        name: owner-id
        required: false
        schema:
          example: 2c9180867b50d088017b554662fb281e
          type: string
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **lastUsed**: *le, isnull*
        example: lastUsed le 2023-02-05T10:59:27.214Z
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetPersonalAccessTokenResponse'
                type: array
          description: List of personal access tokens.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:my-personal-access-tokens:read
        - sp:my-personal-access-tokens:manage
        - sp:all-personal-access-tokens:read
        - sp:all-personal-access-tokens:manage
      summary: List personal access tokens
      tags:
      - Personal Access Tokens
    post:
      description: This creates a personal access token.
      operationId: createPersonalAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonalAccessTokenRequest'
        description: Name and scope of personal access token.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePersonalAccessTokenResponse'
          description: Created. Note - this is the only time Personal Access Tokens'
            secret attribute will be displayed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:my-personal-access-tokens:manage
        - sp:all-personal-access-tokens:manage
      summary: Create personal access token
      tags:
      - Personal Access Tokens
  /personal-access-tokens/{id}:
    delete:
      description: This deletes a personal access token.
      operationId: deletePersonalAccessToken
      parameters:
      - description: The personal access token id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listPersonalAccessTokens
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:my-personal-access-tokens:manage
        - sp:all-personal-access-tokens:manage
      summary: Delete personal access token
      tags:
      - Personal Access Tokens
    patch:
      description: |-
        This performs a targeted update to the field(s) of a Personal Access Token.
        Changing scopes for a Personal Access Token does not impact existing bearer tokens. You will need to create a new bearer token to have the new scopes. Please note that it can take up to 20 minutes for scope changes to be seen on new bearer tokens.
      operationId: patchPersonalAccessToken
      parameters:
      - description: The Personal Access Token id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listPersonalAccessTokens
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /name
              value: New name
            - op: replace
              path: /scope
              value:
              - sp:scopes:all
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of OAuth client update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields are patchable:
          * name
          * scope
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonalAccessTokenResponse'
          description: "Indicates the PATCH operation succeeded, and returns the PAT's\
            \ new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:my-personal-access-tokens:manage
      summary: Patch personal access token
      tags:
      - Personal Access Tokens
  /public-identities:
    get:
      description: Get a list of public identities.  Set `add-core-filters` to `true`
        to exclude incomplete identities and uncorrelated accounts.
      operationId: getPublicIdentities
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **alias**: *eq, sw*

          **email**: *eq, sw*

          **firstname**: *eq, sw*

          **lastname**: *eq, sw*
        example: firstname eq "John"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          If *true*, only get identities which satisfy ALL the following criteria in addition to any criteria specified by *filters*:
            - Should be either correlated or protected.
            - Should not be "spadmin" or "cloudadmin".
            - uid should not be null.
            - lastname should not be null.
            - email should not be null.
        example: false
        in: query
        name: add-core-filters
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name**
        example: name
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 2c9180857182305e0171993735622948
                name: Alison Ferguso
                alias: alison.ferguso
                email: alison.ferguso@acme-solar.com
                status: Active
                manager:
                  type: IDENTITY
                  id: 2c9180a46faadee4016fb4e018c20639
                  name: Thomas Edison
                attributes:
                - key: phone
                  name: Phone
                  value: "5125551234"
                - key: country
                  name: Country
                  value: US
              - id: 2c9180a46faadee4016fb4e018c20639
                name: Thomas Edison
                alias: thomas.edison
                email: thomas.edison@acme-solar.com
                status: Active
                manager:
                  type: IDENTITY
                  id: 2c918086676d3e0601677611dbde220f
                  name: Mister Manager
                attributes:
                - key: phone
                  name: Phone
                  value: "5125554321"
                - key: country
                  name: Country
                  value: US
              schema:
                items:
                  $ref: '#/components/schemas/PublicIdentity'
                type: array
          description: A list of public identity objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:scopes:default
      summary: Get list of public identities
      tags:
      - Public Identities
      x-sailpoint-userLevels:
      - USER
  /public-identities-config:
    get:
      description: Returns the publicly visible attributes of an identity available
        to request approvers for Access Requests and Certification Campaigns.
      operationId: getPublicIdentityConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIdentityConfig'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Get the public identities configuration
      tags:
      - Public Identities Config
      x-sailpoint-userLevels:
      - ORG_ADMIN
    put:
      description: Updates the publicly visible attributes of an identity available
        to request approvers for Access Requests and Certification Campaigns.
      operationId: updatePublicIdentityConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicIdentityConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIdentityConfig'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      summary: Update the public identities configuration
      tags:
      - Public Identities Config
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /requestable-objects:
    get:
      description: |-
        Get a list of acccess items that can be requested through the [Access Request endpoints](https://developer.sailpoint.com/docs/api/v3/access-requests). Access items are marked with `AVAILABLE`, `PENDING` or `ASSIGNED` with respect to the identity provided using `identity-id` query parameter.
        Any authenticated token can call this endpoint to see their requestable access items.
      operationId: listRequestableObjects
      parameters:
      - description: |-
          If present, the value returns only requestable objects for the specified identity.
           * Admin users can call this with any identity ID value.
           * Non-admin users can only specify *me* or pass their own identity ID value.
           * If absent, returns a list of all requestable objects for the tenant. Only admin users can make such a call. In this case, the available, pending, assigned accesses will not be annotated in the result.
        example: e7eab60924f64aa284175b9fa3309599
        in: query
        name: identity-id
        required: false
        schema:
          type: string
      - description: "Filters the results to the specified type/types, where each\
          \ type is one of `ROLE` or `ACCESS_PROFILE`. If absent, all types are returned.\
          \ SailPoint may add support for additional types in the future without notice."
        example: "ACCESS_PROFILE,ROLE"
        explode: false
        in: query
        name: types
        required: false
        schema:
          items:
            description: Currently supported requestable object types.
            enum:
            - ACCESS_PROFILE
            - ROLE
            type: string
          type: array
      - description: "Allows searching requestable access items with a partial match\
          \ on the name or description. If `term` is provided, then the API will ignore\
          \ the `filter` query parameter."
        example: Finance Role
        in: query
        name: term
        required: false
        schema:
          type: string
      - description: "Filters the result to the specified status/statuses, where each\
          \ status is one of `AVAILABLE`, `ASSIGNED`, or `PENDING`. Specifying this\
          \ parameter without also specifying an `identity-id` parameter results in\
          \ an error.  SailPoint may add additional statuses in the future without\
          \ notice."
        example:
        - ASSIGNED
        - PENDING
        explode: false
        in: query
        name: statuses
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RequestableObjectRequestStatus'
          type: array
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, in, sw*
        example: name sw "bob"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name**
        example: name
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RequestableObject'
                type: array
          description: List of requestable objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:requestable-objects:read
      summary: Requestable objects list
      tags:
      - Requestable Objects
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /roles:
    get:
      description: This API returns a list of Roles.
      operationId: listRoles
      parameters:
      - description: "If provided, filters the returned list according to what is\
          \ visible to the indicated ROLE_SUBADMIN Identity. The value of the parameter\
          \ is either an Identity ID, or the special value **me**, which is shorthand\
          \ for the calling Identity's ID. A 400 Bad Request error is returned if\
          \ the **for-subadmin** parameter is specified for an Identity that is not\
          \ a subadmin."
        example: 5168015d32f890ca15812c9180835d2e
        in: query
        name: for-subadmin
        required: false
        schema:
          type: string
      - description: |-
          Note that for this API the maximum value for limit is 50.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 50
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 50
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, sw*

          **created**: *gt, ge, le*

          **modified**: *lt, ge, le*

          **owner.id**: *eq, in*

          **requestable**: *eq*

          **dimensional**: *eq*
        example: requestable eq false
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, created, modified**
        example: "name,-modified"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: |-
          If present and not empty, additionally filters Roles to those which are assigned to the Segment(s) with the specified IDs.

          If segmentation is currently unavailable, specifying this parameter results in an error.
        example: "0b5c9f25-83c6-4762-9073-e38f7bb2ae26,2e8d8180-24bc-4d21-91c6-7affdb473b0d"
        in: query
        name: for-segment-ids
        required: false
        schema:
          format: comma-separated
          type: string
      - description: "Whether or not the response list should contain unsegmented\
          \ Roles. If *for-segment-ids* is absent or empty, specifying *include-unsegmented*\
          \ as false results in an error."
        example: false
        in: query
        name: include-unsegmented
        required: false
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: List of Roles
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:role-unchecked:read
        - idn:role-unchecked:manage
        - idn:role-checked:manage
        - idn:role-checked:read
      summary: List roles
      tags:
      - Roles
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
    post:
      description: "This API creates a role.\nIn addition, a ROLE_SUBADMIN may not\
        \ create a role including an access profile if that access profile is associated\
        \ with a source the ROLE_SUBADMIN is not associated with themselves. \n\n\
        The maximum supported length for the description field is 2000 characters.\
        \ Longer descriptions will be preserved for existing roles. However, any new\
        \ roles as well as any updates to existing descriptions will be limited to\
        \ 2000 characters."
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Role created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:role-unchecked:manage
        - idn:role-checked:manage
      summary: Create a role
      tags:
      - Roles
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
  /roles/{id}:
    delete:
      description: |-
        Delete a role by ID.

        A user with ROLE_SUBADMIN authority may only call this API if all access profiles included in the role are associated to sources with management workgroups the ROLE_SUBADMIN is a member of.
      operationId: deleteRole
      parameters:
      - description: Role ID.
        example: 2c91808a7813090a017814121e121518
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listRoles
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:role-unchecked:manage
        - idn:role-checked:manage
      summary: Delete role
      tags:
      - Roles
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
    get:
      description: |-
        Get a role by ID.
        A user with ROLE_SUBADMIN authority may only call this API if all access profiles included in the role are associated to sources with management workgroups of the ROLE_SUBADMIN is a member of.
      operationId: getRole
      parameters:
      - description: Role ID.
        example: 2c91808a7813090a017814121e121518
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: List of all roles
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:role-unchecked:read
        - idn:role-unchecked:manage
        - idn:role-checked:manage
        - idn:role-checked:read
      summary: Get role
      tags:
      - Roles
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
    patch:
      description: "Update an existing role, using the [JSON Patch](https://tools.ietf.org/html/rfc6902)\
        \ syntax.\nThe following fields are patchable:\n* name\n* description\n* enabled\n\
        * owner\n* accessProfiles\n* entitlements\n* membership\n* requestable\n*\
        \ accessRequestConfig\n* revokeRequestConfig\n* segments\n* accessModelMetadata\n\
        \nA user with ROLE_SUBADMIN authority may only call this API if all access\
        \ profiles included in the role are associated to sources with management\
        \ workgroups of the ROLE_SUBADMIN is a member of.\n\nThe maximum supported\
        \ length for the description field is 2000 characters. ISC preserves longer\
        \ descriptions for existing roles. However, any new roles as well as any updates\
        \ to existing descriptions are limited to 2000 characters.\n\nWhen you use\
        \ this API to modify a role's membership identities, you can only modify up\
        \ to a limit of 500 membership identities at a time. "
      operationId: patchRole
      parameters:
      - description: Role ID to patch
        in: path
        name: id
        required: true
        schema:
          example: 2c91808a7813090a017814121e121518
          type: string
        x-sailpoint-resource-operation-id: listRoles
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Make a Role Requestable and Enable it in One Call:
                description: This example shows how multiple fields may be updated
                  with a single patch call.
                value:
                - op: replace
                  path: /requestable
                  value: true
                - op: replace
                  path: /enabled
                  value: true
              Assign a Role to a Segment:
                description: This example illustrates the use of patch to assign a
                  role to a segment by adding the segment's ID to the role's segments
                  array.
                value:
                - op: add
                  path: /segments/-
                  value: f7b1b8a3-5fed-4fd4-ad29-82014e137e19
              Set the Membership Selection Criteria to a List of Identities:
                description: "This example shows how to define a role's membershp\
                  \ by providing a list of identities, referenced by their IDs."
                value:
                - op: replace
                  path: /membership
                  value:
                    type: IDENTITY_LIST
                    identities:
                    - id: 2c91808973fe906c0174262092014ed9
                    - id: 2c918086262092014ed94fb8a47612f3
              Set the Membership Selection Criteria to a Standard Expression:
                description: "This example shows how to define a role's membership,\
                  \ using `STANDARD` criteria. In this case, ISC will grant the role\
                  \ to all identities that have the *Engineering* attribute from the\
                  \ indicated source."
                value:
                - op: replace
                  path: /membership
                  value:
                    type: STANDARD
                    criteria:
                      operation: OR
                      children:
                      - operation: EQUALS
                        key:
                          type: ENTITLEMENT
                          property: attribute.memberOf
                          sourceId: 2c9180887701fb2014213e122092014e
                        stringValue: Engineering
              Add a New Clause as the Child of an Existing Standard Expression:
                description: This example shows how to add a child clause to an existing
                  `STANDARD` criteria expression.
                value:
                - op: add
                  path: /membership/criteria/children/-
                  value:
                    operation: ENDS_WITH
                    key:
                      type: IDENTITY
                      property: attribute.email
                    stringValue: '@identitynow.com'
              Assign a Access Model Metadata to a Role:
                description: This example shows how to assign existing metadata to
                  a role.
                value:
                - op: add
                  path: /accessModelMetadata/attributes/0
                  value:
                    key: iscFederalClassifications
                    values:
                    - value: secret
              Add an Access Profile to a Role:
                description: This example shows how to add an access profile to a
                  role.
                value:
                - op: add
                  path: /accessProfiles/-
                  value:
                    id: 1de104e1f9024b1289b3a31e22d28cd1
                    type: ACCESS_PROFILE
              Add an Entitlement to a Role:
                description: This example shows how to add an entitlement to a role.
                value:
                - op: add
                  path: /entitlements/-
                  value:
                    id: 0fb2f8051e48421b8f1f8a64aee3b205
                    type: ENTITLEMENT
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Response with the updated role.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:role-unchecked:manage
        - idn:role-checked:manage
      summary: Patch role
      tags:
      - Roles
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
  /roles/bulk-delete:
    post:
      description: "This endpoint initiates a bulk deletion of one or more roles.\n\
        When the request is successful, the endpoint returns the bulk delete's task\
        \ result ID.  To follow the task, you can use [Get Task Status by ID](https://developer.sailpoint.com/docs/api/beta/get-task-status),\
        \ which will return the task result's status and information. \nThis endpoint\
        \ can only bulk delete up to a limit of 50 roles per request. \nA user with\
        \ ROLE_SUBADMIN authority can only call this endpoint if all roles included\
        \ in the request are associated with sources with management workgroups the\
        \ ROLE_SUBADMIN is a member of."
      operationId: deleteBulkRoles
      requestBody:
        content:
          application/json:
            example:
              roleIds:
              - 2c91808876438bb2017668b91919ecca
              - 2c91808876438ba801766e129f151816
            schema:
              $ref: '#/components/schemas/RoleBulkDeleteRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                type: TASK_RESULT
                id: 464ae7bf791e49fdb74606a2e4a89635
                name: null
              schema:
                $ref: '#/components/schemas/TaskResultDto'
          description: Returns an object with the id of the task performing the delete
            operation.
        "400":
          content:
            application/json:
              examples:
                "400.1 Bad Request Content":
                  description: Response for bad request content
                  value:
                    detailCode: 400.1 Bad Request Content
                    trackingId: 1ea1adcb84da4dcb890145e05745774e
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The request was syntactically correct but its content
                        is semantically invalid.
                "400.1 Role ids limit violation":
                  description: Role ids limit violation response
                  value:
                    detailCode: 400.1 Bad Request Content
                    trackingId: 77aa89ac6f0e422dbc588866abc22be9
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: roleIds count exceeded max limit of 50 for bulk-delete.
                "400.1.404 Referenced object not found":
                  description: Referenced object not found response
                  value:
                    detailCode: 400.1.404 Referenced object not found
                    trackingId: 77aa89ac6f0e422dbc588866abc22be9
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: "Referenced roleIds [\"2c91808876438bb2017668b91919ecca\"\
                        ] was not found."
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:role-unchecked:manage
        - idn:role-checked:manage
      summary: Delete role(s)
      tags:
      - Roles
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
  /roles/{id}/assigned-identities:
    get:
      operationId: getRoleAssignedIdentities
      parameters:
      - description: ID of the Role for which the assigned Identities are to be listed
        example: 2c91808a7813090a017814121e121518
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listRoles
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **aliasName**: *eq, sw*

          **email**: *eq, sw*

          **name**: *eq, sw, co*
        example: name sw Joe
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, name, aliasName, email**
        example: "aliasName,name"
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleIdentity'
                type: array
          description: List of Identities assigned the Role
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:role-unchecked:read
        - idn:role-unchecked:manage
        - idn:role-checked:manage
        - idn:role-checked:read
      summary: List identities assigned a role
      tags:
      - Roles
  /saved-searches:
    get:
      description: |
        Returns a list of saved searches.
      operationId: listSavedSearches
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **owner.id**: *eq*
        example: owner.id eq "7a724640-0c17-4ce9-a8c3-4a89738459c8"
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SavedSearch'
                type: array
          description: The list of requested saved searches.
          headers:
            X-Total-Count:
              description: The total result count (returned only if the *count* parameter
                is specified as *true*).
              example: 5
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:saved-search:read
      summary: A list of saved searches
      tags:
      - Saved Search
    post:
      description: |
        Creates a new saved search.
      operationId: createSavedSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSavedSearch_request'
        description: The saved search to persist.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearch'
          description: The persisted saved search.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:saved-search:create
      summary: Create a saved search
      tags:
      - Saved Search
  /saved-searches/{id}:
    delete:
      description: |
        Deletes the specified saved search.
      operationId: deleteSavedSearch
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSavedSearches
      responses:
        "204":
          description: No Content - Indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete document by id
      tags:
      - Saved Search
    get:
      description: |
        Returns the specified saved search.
      operationId: getSavedSearch
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSavedSearches
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearch'
          description: The requested saved search.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Return saved search by id
      tags:
      - Saved Search
    put:
      description: "Updates an existing saved search. \n\n>**NOTE: You cannot update\
        \ the `owner` of the saved search.**\n"
      operationId: putSavedSearch
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSavedSearches
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedSearch'
        description: The saved search to persist.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearch'
          description: The persisted saved search.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: |
        Updates an existing saved search
      tags:
      - Saved Search
  /saved-searches/{id}/execute:
    post:
      description: |
        Executes the specified saved search.
      operationId: executeSavedSearch
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id:
        - listAccessProfiles
        - listAccountActivities
        - listEntitlements
        - listRoles
        - listIdentities
      requestBody:
        content:
          application/json:
            examples:
              scheduled:
                $ref: '#/components/examples/execute-scheduled'
              test:
                $ref: '#/components/examples/execute-test'
            schema:
              $ref: '#/components/schemas/SearchArguments'
        description: |
          When saved search execution is triggered by a scheduled search, *scheduleId* will specify the ID of the triggering scheduled search.

          If *scheduleId* is not specified (when execution is triggered by a UI test), the *owner* and *recipients* arguments must be provided.
        required: true
      responses:
        "202":
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Execute a saved search by id
      tags:
      - Saved Search
  /scheduled-searches:
    get:
      description: |
        Returns a list of scheduled searches.
      operationId: listScheduledSearch
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **owner.id**: *eq*

          **savedSearchId**: *eq*
        example: savedSearchId eq "6cc0945d-9eeb-4948-9033-72d066e1153e"
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduledSearch'
                type: array
          description: The list of requested scheduled searches.
          headers:
            X-Total-Count:
              description: The total result count (returned only if the *count* parameter
                is specified as *true*).
              example: 5
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List scheduled searches
      tags:
      - Scheduled Search
    post:
      description: |
        Creates a new scheduled search.
      operationId: createScheduledSearch
      requestBody:
        content:
          application/json:
            examples:
              Daily Search:
                description: A search that executes each day at a 9 AM
                value:
                  savedSearchId: 9c620e13-cd33-4804-a13d-403bd7bcdbad
                  schedule:
                    type: DAILY
                    hours:
                      type: LIST
                      values:
                      - "9"
                  recipients:
                  - type: IDENTITY
                    id: 2c9180867624cbd7017642d8c8c81f67
              Weekly Search:
                description: A search that executes each week on select days and times
                value:
                  savedSearchId: 9c620e13-cd33-4804-a13d-403bd7bcdbad
                  schedule:
                    type: WEEKLY
                    days:
                      type: LIST
                      values:
                      - MON
                      - TUE
                      - WED
                      - THU
                      - FRI
                      - SAT
                      - SUN
                    hours:
                      type: LIST
                      values:
                      - "9"
                  recipients:
                  - type: IDENTITY
                    id: 2c9180867624cbd7017642d8c8c81f67
              Monthly Search:
                description: A search that executes each month on select days and
                  times
                value:
                  savedSearchId: 9c620e13-cd33-4804-a13d-403bd7bcdbad
                  schedule:
                    type: MONTHLY
                    days:
                      type: LIST
                      values:
                      - "1"
                      - "7"
                      - "14"
                      - L
                    hours:
                      type: LIST
                      values:
                      - "9"
                  recipients:
                  - type: IDENTITY
                    id: 2c9180867624cbd7017642d8c8c81f67
              Annual Search:
                description: "A search that executes each year on the defined months,\
                  \ days, and times."
                value:
                  savedSearchId: 9c620e13-cd33-4804-a13d-403bd7bcdbad
                  schedule:
                    type: ANNUALLY
                    months:
                      type: LIST
                      values:
                      - "1"
                      interval: 3
                    days:
                      type: LIST
                      values:
                      - "1"
                      - "7"
                      - "14"
                      - L
                    hours:
                      type: LIST
                      values:
                      - "9"
                  recipients:
                  - type: IDENTITY
                    id: 2c9180867624cbd7017642d8c8c81f67
              Calendar Search:
                description: A search that executes on specific calendar days
                value:
                  savedSearchId: 9c620e13-cd33-4804-a13d-403bd7bcdbad
                  schedule:
                    type: CALENDAR
                    days:
                      type: LIST
                      values:
                      - 2023-01-22
                      - 2023-02-22
                    hours:
                      type: LIST
                      values:
                      - "9"
                  recipients:
                  - type: IDENTITY
                    id: 2c9180867624cbd7017642d8c8c81f67
            schema:
              $ref: '#/components/schemas/createScheduledSearch_request'
        description: The scheduled search to persist.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledSearch'
          description: The persisted scheduled search.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create a new scheduled search
      tags:
      - Scheduled Search
  /scheduled-searches/{id}:
    delete:
      description: |
        Deletes the specified scheduled search.
      operationId: deleteScheduledSearch
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listScheduledSearch
      responses:
        "204":
          description: No Content - Indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete a scheduled search
      tags:
      - Scheduled Search
    get:
      description: Returns the specified scheduled search.
      operationId: getScheduledSearch
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listScheduledSearch
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledSearch'
          description: The requested scheduled search.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get a scheduled search
      tags:
      - Scheduled Search
    put:
      description: |
        Updates an existing scheduled search.
      operationId: updateScheduledSearch
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listScheduledSearch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledSearch'
        description: The scheduled search to persist.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledSearch'
          description: The persisted scheduled search.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update an existing scheduled search
      tags:
      - Scheduled Search
  /scheduled-searches/{id}/unsubscribe:
    post:
      description: |
        Unsubscribes a recipient from the specified scheduled search.
      operationId: unsubscribeScheduledSearch
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id:
        - listAccessProfiles
        - listAccountActivities
        - listEntitlements
        - listRoles
        - listIdentities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypedReference'
        description: |
          The recipient to be removed from the scheduled search.
        required: true
      responses:
        "204":
          description: No Content - Indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Unsubscribe a recipient from scheduled search
      tags:
      - Scheduled Search
  /search:
    post:
      description: "Perform a search with the provided query and return a matching\
        \ result collection. To page past 10,000 records, you can use `searchAfter`\
        \ paging.  Refer to [Paginating Search Queries](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-search-queries)\
        \ for more information about how to implement `searchAfter` paging. "
      externalDocs:
        description: Learn more about search.
        url: https://documentation.sailpoint.com/saas/help/search/index.html
      operationId: searchPost
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 10000
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            examples:
              accessProfiles:
                $ref: '#/components/examples/query-accessprofiles'
              accountActivities:
                $ref: '#/components/examples/query-accountactivities'
              entitlements:
                $ref: '#/components/examples/query-entitlements'
              events:
                $ref: '#/components/examples/query-events'
              identities:
                $ref: '#/components/examples/query-identities'
              roles:
                $ref: '#/components/examples/query-roles'
              query-fields:
                $ref: '#/components/examples/query-fields'
              query-timeZone:
                $ref: '#/components/examples/query-timeZone'
              query-innerHit:
                $ref: '#/components/examples/query-innerHit'
              typeAheadQuery:
                $ref: '#/components/examples/typeAheadQuery'
              typeAheadQuery-nestedType:
                $ref: '#/components/examples/typeAheadQuery-nestedType'
              filter-exists:
                $ref: '#/components/examples/filter-exists'
              filter-range:
                $ref: '#/components/examples/filter-range'
              filter-terms:
                $ref: '#/components/examples/filter-terms'
            schema:
              $ref: '#/components/schemas/Search'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                accessProfiles:
                  $ref: '#/components/examples/accessProfiles'
                accountActivities:
                  $ref: '#/components/examples/accountActivities'
                entitlements:
                  $ref: '#/components/examples/entitlements'
                events:
                  $ref: '#/components/examples/events'
                identities:
                  $ref: '#/components/examples/identities'
                roles:
                  $ref: '#/components/examples/roles'
                query-fields:
                  $ref: '#/components/examples/queryFields'
                query-timeZone:
                  $ref: '#/components/examples/queryTimeZone'
                query-innerHit:
                  $ref: '#/components/examples/queryInnerHit'
                typeAheadQuery:
                  $ref: '#/components/examples/typeAheadQuery'
                typeAheadQuery-nestedType:
                  $ref: '#/components/examples/typeAheadQueryNestedType'
                filter-exists:
                  $ref: '#/components/examples/filterExists'
                filter-range:
                  $ref: '#/components/examples/filterRange'
                filter-terms:
                  $ref: '#/components/examples/filterTerms'
              schema:
                items:
                  $ref: '#/components/schemas/SearchDocuments'
                type: array
          description: List of matching documents.
          headers:
            X-Total-Count:
              description: The total result count (returned only if the *count* parameter
                is specified as *true*).
              example: 30
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:search:read
      - applicationAuth:
        - sp:search:read
      summary: Perform search
      tags:
      - Search
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
      - REPORT_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
      - HELPDESK
  /search/count:
    post:
      description: Performs a search with a provided query and returns the count of
        results in the X-Total-Count header.
      operationId: searchCount
      requestBody:
        content:
          application/json:
            examples:
              query-timeZone:
                $ref: '#/components/examples/query-timeZone'
            schema:
              $ref: '#/components/schemas/Search'
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
          headers:
            X-Total-Count:
              description: The total result count.
              example: 5
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:search:read
      summary: Count documents satisfying a query
      tags:
      - Search
  /search/aggregate:
    post:
      description: "Performs a search query aggregation and returns the aggregation\
        \ result. By default, you can page a maximum of 10,000 search result records.\
        \  To page past 10,000 records, you can use searchAfter paging.  Refer to\
        \ [Paginating Search Queries](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-search-queries)\
        \ for more information about how to implement searchAfter paging. "
      operationId: searchAggregate
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            examples:
              metricAggregation:
                $ref: '#/components/examples/metricAggregation'
              metricAggregation-dsl:
                $ref: '#/components/examples/metricAggregation-dsl'
              bucketAggregation:
                $ref: '#/components/examples/bucketAggregation'
              bucketAggregation-dsl:
                $ref: '#/components/examples/bucketAggregation-dsl'
              nestedAggregation-bucketAggregation:
                $ref: '#/components/examples/nestedAggregation-bucketAggregation'
              nestedAggregation-bucketAggregation-dsl:
                $ref: '#/components/examples/nestedAggregation-bucketAggregation-dsl'
              nestedAggregation-filterAggregation-bucketAggregation:
                $ref: '#/components/examples/nestedAggregation-filterAggregation-bucketAggregation'
              nestedAggregation-filterAggregation-bucketAggregation-dsl:
                $ref: '#/components/examples/nestedAggregation-filterAggregation-bucketAggregation-dsl'
              bucketAggregation-subAggregation:
                $ref: '#/components/examples/bucketAggregation-subAggregation'
              bucketAggregation-subAggregation-dsl:
                $ref: '#/components/examples/bucketAggregation-subAggregation-dsl'
            schema:
              $ref: '#/components/schemas/Search'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregationResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/AggregationResult-csv'
          description: Aggregation results.
          headers:
            X-Total-Count:
              description: The total result count (returned only if the *count* parameter
                is specified as *true*).
              example: 5
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:search:read
      summary: Perform a search query aggregation
      tags:
      - Search
  /search/{index}/{id}:
    get:
      description: "Fetches a single document from the specified index, using the\
        \ specified document ID."
      operationId: searchGet
      parameters:
      - description: |
          The index from which to fetch the specified document.

          The currently supported index names are: *accessprofiles*, *accountactivities*, *entitlements*, *events*, *identities*, and *roles*.
        example: identities
        in: path
        name: index
        required: true
        schema:
          enum:
          - accessprofiles
          - accountactivities
          - entitlements
          - events
          - identities
          - roles
          type: string
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id:
        - listAccessProfiles
        - listAccountActivities
        - listEntitlements
        - listRoles
        - listIdentities
      responses:
        "200":
          content:
            application/json:
              examples:
                accessProfile:
                  $ref: '#/components/examples/accessProfile'
                accountActivity:
                  $ref: '#/components/examples/accountActivity'
                entitlement:
                  $ref: '#/components/examples/entitlement'
                event:
                  $ref: '#/components/examples/event'
                identity:
                  $ref: '#/components/examples/identity'
                role:
                  $ref: '#/components/examples/role'
              schema:
                $ref: '#/components/schemas/SearchDocument'
          description: The requested document.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:search:read
      - applicationAuth:
        - sp:search:read
      summary: Get a document by id
      tags:
      - Search
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
      - REPORT_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
      - HELPDESK
  /segments:
    get:
      description: 'This API returns a list of all segments. '
      operationId: listSegments
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Segment'
                type: array
          description: List of all segments
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:segment:read
        - idn:segment:manage
      - applicationAuth:
        - idn:segment:read
        - idn:segment:manage
      summary: List segments
      tags:
      - Segments
      x-sailpoint-userLevels:
      - ORG_ADMIN
    post:
      description: "This API creates a segment. \n>**Note:** Segment definitions may\
        \ take time to propagate to all identities."
      operationId: createSegment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Segment'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: Segment created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:segment:manage
      - applicationAuth:
        - idn:segment:manage
      summary: Create segment
      tags:
      - Segments
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /segments/{id}:
    delete:
      description: "This API deletes the segment specified by the given ID.\n>**Note:**\
        \ that segment deletion may take some time to become effective.    "
      operationId: deleteSegment
      parameters:
      - description: The segment ID to delete.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSegments
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:segment:manage
      - applicationAuth:
        - idn:segment:manage
      summary: Delete segment by id
      tags:
      - Segments
      x-sailpoint-userLevels:
      - ORG_ADMIN
    get:
      description: This API returns the segment specified by the given ID.
      operationId: getSegment
      parameters:
      - description: The segment ID to retrieve.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSegments
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: Segment
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:segment:read
        - idn:segment:manage
      - applicationAuth:
        - idn:segment:read
        - idn:segment:manage
      summary: Get segment by id
      tags:
      - Segments
      x-sailpoint-userLevels:
      - ORG_ADMIN
    patch:
      description: |-
        Use this API to update segment fields by using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.
        >**Note:** Changes to a segment may take some time to propagate to all identities.
      operationId: patchSegment
      parameters:
      - description: The segment ID to modify.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSegments
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Set Visibility Criteria:
                description: Set the visibility criteria
                value:
                - op: replace
                  path: /visibilityCriteria
                  value:
                    expression:
                      operator: AND
                      children:
                      - operator: EQUALS
                        attribute: location
                        value:
                          type: STRING
                          value: Philadelphia
                      - operator: EQUALS
                        attribute: department
                        value:
                          type: STRING
                          value: HR
            schema:
              items:
                type: object
              type: array
        description: |
          A list of segment update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields are patchable:
          * name
          * description
          * owner
          * visibilityCriteria
          * active
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: "Indicates the PATCH operation succeeded, and returns the segment's\
            \ new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:segment:manage
      - applicationAuth:
        - idn:segment:manage
      summary: Update segment
      tags:
      - Segments
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /service-desk-integrations:
    get:
      description: Get a list of Service Desk integration objects.
      operationId: getServiceDeskIntegrations
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name**
        example: name
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq*

          **type**: *eq, in*

          **cluster**: *eq, in*
        example: name eq "John Doe"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          format: comma-separated
          type: string
        style: form
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceDeskIntegrationDto'
                type: array
          description: List of ServiceDeskIntegrationDto
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:service-desk-integration:read
        - idn:service-desk-integration:manage
      summary: List existing service desk integrations
      tags:
      - Service Desk Integration
      x-sailpoint-userLevels:
      - ORG_ADMIN
    post:
      description: Create a new Service Desk integration.
      operationId: createServiceDeskIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDeskIntegrationDto'
        description: The specifics of a new integration to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationDto'
          description: Details of the created integration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:service-desk-integration:manage
      summary: Create new service desk integration
      tags:
      - Service Desk Integration
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /service-desk-integrations/{id}:
    delete:
      description: Delete an existing Service Desk integration by ID.
      operationId: deleteServiceDeskIntegration
      parameters:
      - description: ID of Service Desk integration to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getServiceDeskIntegrations
      responses:
        "204":
          description: Service Desk integration with the given ID successfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:service-desk-integration:manage
      summary: Delete a service desk integration
      tags:
      - Service Desk Integration
      x-sailpoint-userLevels:
      - ORG_ADMIN
    get:
      description: Get an existing Service Desk integration by ID.
      operationId: getServiceDeskIntegration
      parameters:
      - description: ID of the Service Desk integration to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getServiceDeskIntegrations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationDto'
          description: ServiceDeskIntegrationDto with the given ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:service-desk-integration:read
        - idn:service-desk-integration:manage
      summary: Get a service desk integration
      tags:
      - Service Desk Integration
      x-sailpoint-userLevels:
      - ORG_ADMIN
    patch:
      description: Update an existing Service Desk integration by ID with a PATCH
        request.
      operationId: patchServiceDeskIntegration
      parameters:
      - description: ID of the Service Desk integration to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getServiceDeskIntegrations
      requestBody:
        content:
          application/json-patch+json:
            schema:
              example:
              - op: replace
                path: /ownerRef
                value:
                  id: 2c9180867d05b227017d09921a205b4d
                  type: IDENTITY
                  name: Angelo Medici
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of SDIM update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          Only `replace` operations are accepted by this endpoint.

          A 403 Forbidden Error indicates that a PATCH operation was attempted that is not allowed.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationDto'
          description: ServiceDeskIntegrationDto as updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:service-desk-integration:manage
      summary: Patch a service desk integration
      tags:
      - Service Desk Integration
      x-sailpoint-userLevels:
      - ORG_ADMIN
    put:
      description: Update an existing Service Desk integration by ID.
      operationId: putServiceDeskIntegration
      parameters:
      - description: ID of the Service Desk integration to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getServiceDeskIntegrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDeskIntegrationDto'
        description: The specifics of the integration to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationDto'
          description: ServiceDeskIntegrationDto as updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:service-desk-integration:manage
      summary: Update a service desk integration
      tags:
      - Service Desk Integration
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /service-desk-integrations/types:
    get:
      description: This API endpoint returns the current list of supported Service
        Desk integration types.
      operationId: getServiceDeskIntegrationTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceDeskIntegrationTemplateType'
                type: array
          description: Responds with an array of the currently supported Service Desk
            integration types.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:service-desk-integration:read
        - idn:service-desk-integration:manage
      summary: List service desk integration types
      tags:
      - Service Desk Integration
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /service-desk-integrations/templates/{scriptName}:
    get:
      description: This API endpoint returns an existing Service Desk integration
        template by scriptName.
      operationId: getServiceDeskIntegrationTemplate
      parameters:
      - description: The scriptName value of the Service Desk integration template
          to get
        explode: false
        in: path
        name: scriptName
        required: true
        schema:
          example: aScriptName
          type: string
        style: simple
        x-sailpoint-resource-operation-id: getServiceDeskIntegrations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationTemplateDto'
          description: Responds with the ServiceDeskIntegrationTemplateDto with the
            specified scriptName.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:service-desk-integration:read
        - idn:service-desk-integration:manage
      summary: Service desk integration template by scriptname
      tags:
      - Service Desk Integration
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /service-desk-integrations/status-check-configuration:
    get:
      description: Get the time check configuration of queued SDIM tickets.
      operationId: getStatusCheckDetails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueuedCheckConfigDetails'
          description: QueuedCheckConfigDetails containing the configured values
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:service-desk-integration:read
        - idn:service-desk-integration:manage
      summary: Get the time check configuration
      tags:
      - Service Desk Integration
      x-sailpoint-userLevels:
      - ORG_ADMIN
    put:
      description: Update the time check configuration of queued SDIM tickets.
      operationId: updateStatusCheckDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueuedCheckConfigDetails'
        description: The modified time check configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueuedCheckConfigDetails'
          description: QueuedCheckConfigDetails as updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:service-desk-integration:manage
      summary: Update the time check configuration
      tags:
      - Service Desk Integration
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /query-password-info:
    post:
      description: "This API is used to query password related information. \n"
      operationId: queryPasswordInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordInfoQueryDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordInfo'
          description: Reference to the password info.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - applicationAuth: []
      summary: Query password info
      tags:
      - Password Management
  /set-password:
    post:
      description: "This API is used to set a password for an identity. \n\nAn identity\
        \ can change their own password (as well as any of their accounts' passwords)\
        \ if they use a token generated by their ISC user, such as a [personal access\
        \ token](https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens)\
        \ or [\"authorization_code\" derived OAuth token](https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow).\n\
        \n>**Note: If you want to set an identity's source account password, you must\
        \ enable `PASSWORD` as one of the source's features. You can use the [PATCH\
        \ Source endpoint](https://developer.sailpoint.com/docs/api/v3/update-source)\
        \ to add the `PASSWORD` feature.**\n\nTo generate the encryptedPassword (RSA\
        \ encrypted using publicKey) for the request body, run the following command:\n\
        \n```bash\necho -n \"myPassword\" | openssl pkeyutl -encrypt -inkey public_key.pem\
        \ -pubin | base64\n```\n\nIn this example, myPassword is the plain text password\
        \ being set and encrypted, and public_key.pem is the path to the public key\
        \ file. You can retrieve the required publicKey, along with other information\
        \ like identityId, sourceId, publicKeyId, accounts, and policies, using the\
        \ Query Password Info endpoint.\n\nTo successfully run this command, you must\
        \ have OpenSSL installed on your machine. If OpenSSL is unavailable, consider\
        \ using the Virtual Appliance (VA), which has OpenSSL pre-installed and configured.\n\
        \nIf you are using a Windows machine, refer to this [guide](https://tecadmin.net/install-openssl-on-windows/)\
        \ for instructions on installing OpenSSL.\n\nYou can then use [Get Password\
        \ Change Request Status](https://developer.sailpoint.com/idn/api/v3/get-password-change-status)\
        \ to check the password change request status. To do so, you must provide\
        \ the `requestId` from your earlier request to set the password. \n"
      operationId: setPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChangeResponse'
          description: Reference to the password change.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - applicationAuth: []
      summary: Set identity's password
      tags:
      - Password Management
  /password-change-status/{id}:
    get:
      description: This API returns the status of a password change request.
      operationId: getPasswordChangeStatus
      parameters:
      - description: Password change request ID
        example: 089899f13a8f4da7824996191587bab9
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: setPassword
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordStatus'
          description: Status of the password change request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth: []
      - applicationAuth: []
      summary: Get password change request status
      tags:
      - Password Management
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /password-dictionary:
    get:
      description: |-
        This gets password dictionary for the organization.
        The password dictionary file can contain lines that are:
        1. comment lines - the first character is '#', can be 128 Unicode codepoints in length, and are ignored during processing
        2. empty lines
        3. locale line - the first line that starts with "locale=" is considered to be locale line, the rest are treated as normal content lines
        4. line containing the password dictionary word - it must start with non-whitespace character and only non-whitespace characters are allowed;
                maximum length of the line is 128 Unicode codepoints


        Password dictionary file may not contain more than 2,500 lines (not counting whitespace lines, comment lines and locale line).
          Password dict file must contain UTF-8 characters only.

        # Sample password text file

        ```

        # Password dictionary small test file

        locale=en_US

        # Password dictionary prohibited words

        qwerty
        abcd
        aaaaa
        password
        qazxsws

        ```
      operationId: getPasswordDictionary
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: A password dictionary response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-dictionary-management:read
      summary: Get password dictionary
      tags:
      - Password Dictionary
      x-sailpoint-userLevels:
      - ORG_ADMIN
    put:
      description: |-
        This updates password dictionary for the organization.
        The password dictionary file can contain lines that are:
        1. comment lines - the first character is '#', can be 128 Unicode codepoints in length, and are ignored during processing
        2. empty lines
        3. locale line - the first line that starts with "locale=" is considered to be locale line, the rest are treated as normal content lines
        4. line containing the password dictionary word - it must start with non-whitespace character and only non-whitespace characters are allowed;
                maximum length of the line is 128 Unicode codepoints


        Password dictionary file may not contain more than 2,500 lines (not counting whitespace lines, comment lines and locale line).
          Password dict file must contain UTF-8 characters only.

        # Sample password text file

        ```

        # Password dictionary small test file

        locale=en_US

        # Password dictionary prohibited words

        qwerty
        abcd
        aaaaa
        password
        qazxsws

        ```
      operationId: putPasswordDictionary
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/putPasswordDictionary_request'
        description: The password dictionary file to be uploaded.
        required: true
      responses:
        "200":
          description: Successfully updated.
        "201":
          description: Created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-dictionary:manage
      summary: Update password dictionary
      tags:
      - Password Dictionary
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /password-org-config:
    get:
      description: "This API returns the password org config . Requires ORG_ADMIN,\
        \ API role or authorization scope of 'idn:password-org-config:read'"
      operationId: getPasswordOrgConfig
      responses:
        "200":
          content:
            application/json:
              example:
                customInstructionsEnabled: true
                digitTokenDurationMinutes: 9
                digitTokenEnabled: false
                digitTokenLength: 6
              schema:
                $ref: '#/components/schemas/PasswordOrgConfig'
          description: Reference to the password org config.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-org-config:read
      summary: Get password org config
      tags:
      - Password Configuration
    post:
      description: |-
        This API creates the password org config. Unspecified fields will use default value.
        To be able to use the custom password instructions, you must set the `customInstructionsEnabled` field to "true".
        Requires ORG_ADMIN, API role or authorization scope of 'idn:password-org-config:write'
      operationId: createPasswordOrgConfig
      requestBody:
        content:
          application/json:
            example:
              customInstructionsEnabled: true
              digitTokenEnabled: true
              digitTokenDurationMinutes: 12
              digitTokenLength: 9
            schema:
              $ref: '#/components/schemas/PasswordOrgConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                customInstructionsEnabled: true
                digitTokenDurationMinutes: 9
                digitTokenEnabled: true
                digitTokenLength: 12
              schema:
                $ref: '#/components/schemas/PasswordOrgConfig'
          description: Reference to the password org config.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-org-config:write
      summary: Create password org config
      tags:
      - Password Configuration
    put:
      description: "This API updates the password org config for specified fields.\
        \ Other fields will keep original value.\nYou must set the `customInstructionsEnabled`\
        \ field to \"true\" to be able to use custom password instructions. \nRequires\
        \ ORG_ADMIN, API role or authorization scope of 'idn:password-org-config:write'"
      operationId: putPasswordOrgConfig
      requestBody:
        content:
          application/json:
            example:
              digitTokenEnabled: true
              digitTokenDurationMinutes: 12
            schema:
              $ref: '#/components/schemas/PasswordOrgConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                customInstructionsEnabled: true
                digitTokenDurationMinutes: 12
                digitTokenEnabled: true
                digitTokenLength: 6
              schema:
                $ref: '#/components/schemas/PasswordOrgConfig'
          description: Reference to the password org config.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:password-org-config:write
      summary: Update password org config
      tags:
      - Password Configuration
  /reports/{taskResultId}/result:
    get:
      description: Get the report results for a report that was run or is running.
        Returns empty report result in case there are no active task definitions with
        used in payload task definition name.
      operationId: getReportResult
      parameters:
      - description: Unique identifier of the task result which handled report
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: taskResultId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: startReport
      - description: state of task result to apply ordering when results are fetching
          from the DB
        example: true
        in: query
        name: completed
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                identityDetailsReport:
                  $ref: '#/components/examples/identities-details-report-results'
              schema:
                $ref: '#/components/schemas/ReportResults'
          description: Details about report that was run or is running.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:report-result:read
      summary: Get report result
      tags:
      - Reports Data Extraction
  /reports/run:
    post:
      description: "Use this API to run a report according to report input details.\
        \ If non-concurrent task is already running then it returns, otherwise new\
        \ task creates and returns."
      operationId: startReport
      requestBody:
        content:
          application/json:
            examples:
              Account Export Report:
                $ref: '#/components/examples/account-export-report-details'
              Identities Details Report:
                $ref: '#/components/examples/identities-details-report-details'
              Identities Report:
                $ref: '#/components/examples/identities-report-details'
              Identity Profile Identity Error Report:
                $ref: '#/components/examples/identity-profile-identity-error-report-details'
              Orphan Identities Report:
                $ref: '#/components/examples/orphan-identities-report-details'
              Search Export Report:
                $ref: '#/components/examples/search-export-report-details'
              Uncorrelated Accounts Report:
                $ref: '#/components/examples/uncorrelated-accounts-report-details'
            schema:
              $ref: '#/components/schemas/ReportDetails'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                identityDetailsReport:
                  $ref: '#/components/examples/identities-details-report-task-result'
                searchExportReport:
                  $ref: '#/components/examples/search-export-report-task-result'
              schema:
                $ref: '#/components/schemas/TaskResultDetails'
          description: Details about running report task.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:report:manage
      - applicationAuth:
        - sp:report:manage
      summary: Run report
      tags:
      - Reports Data Extraction
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
      - REPORT_ADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /reports/{id}/cancel:
    post:
      description: Cancels a running report.
      operationId: cancelReport
      parameters:
      - description: ID of the running Report to cancel
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: a1ed223247144cc29d23c632624b4767
          type: string
        style: simple
        x-sailpoint-resource-operation-id: startReport
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:report:delete
      summary: Cancel report
      tags:
      - Reports Data Extraction
  /reports/{taskResultId}:
    get:
      description: Gets a report in file format.
      operationId: getReport
      parameters:
      - description: Unique identifier of the task result which handled report
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: taskResultId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: startReport
      - description: Output format of the requested report file
        example: csv
        in: query
        name: fileFormat
        required: true
        schema:
          enum:
          - csv
          - pdf
          type: string
      - description: "preferred Report file name, by default will be used report name\
          \ from task result."
        example: Identities Details Report
        in: query
        name: name
        required: false
        schema:
          type: string
      - description: Enables auditing for current report download. Will create an
          audit event and sent it to the REPORT cloud-audit kafka topic.  Event will
          be created if there is any result present by requested taskResultId.
        example: true
        in: query
        name: auditable
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/csv:
              schema:
                format: binary
                type: string
            application/pdf:
              schema:
                format: binary
                type: string
          description: Report file in selected format. CSV by default.
          headers:
            Content-disposition:
              description: The requested report's filename
              example: attachment;filename=\"fileName"
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: <h1>File Not Found - 404 Error</h1> The requested file
                        was not found.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:report:read
      summary: Get report file
      tags:
      - Reports Data Extraction
  /sod-policies:
    get:
      description: |-
        This gets list of all SOD policies.
        Requires role of ORG_ADMIN
      operationId: listSodPolicies
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, in*

          **state**: *eq, in*
        example: id eq "bc693f07e7b645539626c25954c58554"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, name, created, modified, description**
        example: "id,name"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                name: Conflicting-Policy-Name
                created: 2020-01-01T00:00:00.000000Z
                modified: 2020-01-01T00:00:00.000000Z
                description: This policy ensures compliance of xyz
                ownerRef:
                  type: IDENTITY
                  id: 2c91808568c529c60168cca6f90c1313
                  name: Owner Name
                externalPolicyReference: XYZ policy
                policyQuery: '@access(id:2c9180866166b5b0016167c32ef31a66 OR id:2c9180866166b5b0016167c32ef31a67)
                  AND @access(id:2c9180866166b5b0016167c32ef31a68 OR id:2c9180866166b5b0016167c32ef31a69)'
                compensatingControls: Have a manager review the transaction decisions
                  for their "out of compliance" employee
                correctionAdvice: "Based on the role of the employee, managers should\
                  \ remove access that is not required for their job function."
                state: ENFORCED
                tags:
                - string
                creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                violationOwnerAssignmentConfig:
                  assignmentRule: MANAGER
                  ownerRef:
                    type: IDENTITY
                    id: 2c91808568c529c60168cca6f90c1313
                    name: Violation Owner Name
                scheduled: true
                type: CONFLICTING_ACCESS_BASED
                conflictingAccessCriteria:
                  leftCriteria:
                    name: money-in
                    criteriaList:
                    - type: ENTITLEMENT
                      id: 2c9180866166b5b0016167c32ef31a66
                    - type: ENTITLEMENT
                      id: 2c9180866166b5b0016167c32ef31a67
                  rightCriteria:
                    name: money-out
                    criteriaList:
                    - type: ENTITLEMENT
                      id: 2c9180866166b5b0016167c32ef31a68
                    - type: ENTITLEMENT
                      id: 2c9180866166b5b0016167c32ef31a69
              - description: Description
                ownerRef:
                  type: IDENTITY
                  id: 2c918087682f9a86016839c05e8f1aff
                  name: Owner Name
                externalPolicyReference: New policy
                policyQuery: policy query implementation
                compensatingControls: Compensating controls
                correctionAdvice: Correction advice
                tags: []
                state: ENFORCED
                scheduled: false
                creatorId: 2c918087682f9a86016839c05e8f1aff
                modifierId: null
                violationOwnerAssignmentConfig: null
                type: GENERAL
                conflictingAccessCriteria: null
                id: 52c11db4-733e-4c31-949a-766c95ec95f1
                name: General-Policy-Name
                created: 2020-05-12T19:47:38Z
                modified: 2020-05-12T19:47:38Z
              schema:
                items:
                  $ref: '#/components/schemas/SodPolicyRead'
                type: array
          description: List of all SOD policies.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-policy:read
      summary: List sod policies
      tags:
      - SOD Policies
    post:
      description: |-
        This creates both General and Conflicting Access Based policy, with a limit of 50 entitlements for each (left & right) criteria for Conflicting Access Based SOD policy.
        Requires role of ORG_ADMIN.
      operationId: createSodPolicy
      requestBody:
        content:
          application/json:
            examples:
              Conflicting Access Based Policy:
                value:
                  name: Conflicting-Policy-Name
                  description: This policy ensures compliance of xyz
                  ownerRef:
                    type: IDENTITY
                    id: 2c91808568c529c60168cca6f90c1313
                    name: Owner Name
                  externalPolicyReference: XYZ policy
                  compensatingControls: Have a manager review the transaction decisions
                    for their "out of compliance" employee
                  correctionAdvice: "Based on the role of the employee, managers should\
                    \ remove access that is not required for their job function."
                  state: ENFORCED
                  tags:
                  - string
                  creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                  modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                  violationOwnerAssignmentConfig:
                    assignmentRule: MANAGER
                    ownerRef:
                      type: IDENTITY
                      id: 2c91808568c529c60168cca6f90c1313
                      name: Violation Owner Name
                  scheduled: true
                  type: CONFLICTING_ACCESS_BASED
                  conflictingAccessCriteria:
                    leftCriteria:
                      name: money-in
                      criteriaList:
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a66
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a67
                    rightCriteria:
                      name: money-out
                      criteriaList:
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a68
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a69
              General Policy:
                value:
                  description: Description
                  ownerRef:
                    type: IDENTITY
                    id: 2c918087682f9a86016839c05e8f1aff
                    name: Owner Name
                  externalPolicyReference: New policy
                  policyQuery: policy query implementation
                  compensatingControls: Compensating controls
                  correctionAdvice: Correction advice
                  tags: []
                  state: ENFORCED
                  scheduled: false
                  creatorId: 2c918087682f9a86016839c05e8f1aff
                  modifierId: null
                  violationOwnerAssignmentConfig: null
                  name: General-Policy-Name
            schema:
              $ref: '#/components/schemas/SodPolicyRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Conflicting Access Based Policy:
                  value:
                    id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    name: Conflicting-Policy-Name
                    created: 2020-01-01T00:00:00.000000Z
                    modified: 2020-01-01T00:00:00.000000Z
                    description: This policy ensures compliance of xyz
                    ownerRef:
                      type: IDENTITY
                      id: 2c91808568c529c60168cca6f90c1313
                      name: Owner Name
                    externalPolicyReference: XYZ policy
                    policyQuery: '@access(id:2c9180866166b5b0016167c32ef31a66 OR id:2c9180866166b5b0016167c32ef31a67)
                      AND @access(id:2c9180866166b5b0016167c32ef31a68 OR id:2c9180866166b5b0016167c32ef31a69)'
                    compensatingControls: Have a manager review the transaction decisions
                      for their "out of compliance" employee
                    correctionAdvice: "Based on the role of the employee, managers\
                      \ should remove access that is not required for their job function."
                    state: ENFORCED
                    tags:
                    - string
                    creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    violationOwnerAssignmentConfig:
                      assignmentRule: MANAGER
                      ownerRef:
                        type: IDENTITY
                        id: 2c91808568c529c60168cca6f90c1313
                        name: Violation Owner Name
                    scheduled: true
                    type: CONFLICTING_ACCESS_BASED
                    conflictingAccessCriteria:
                      leftCriteria:
                        name: money-in
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a66
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a67
                      rightCriteria:
                        name: money-out
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a68
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a69
                General Policy:
                  value:
                    description: Description
                    ownerRef:
                      type: IDENTITY
                      id: 2c918087682f9a86016839c05e8f1aff
                      name: Owner Name
                    externalPolicyReference: New policy
                    policyQuery: policy query implementation
                    compensatingControls: Compensating controls
                    correctionAdvice: Correction advice
                    tags: []
                    state: ENFORCED
                    scheduled: false
                    creatorId: 2c918087682f9a86016839c05e8f1aff
                    modifierId: null
                    violationOwnerAssignmentConfig: null
                    type: GENERAL
                    conflictingAccessCriteria: null
                    id: 52c11db4-733e-4c31-949a-766c95ec95f1
                    name: General-Policy-Name
                    created: 2020-05-12T19:47:38Z
                    modified: 2020-05-12T19:47:38Z
              schema:
                $ref: '#/components/schemas/SodPolicyRead'
          description: SOD policy created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-policy:write
      summary: Create sod policy
      tags:
      - SOD Policies
  /sod-policies/{id}:
    delete:
      description: |-
        This deletes a specified SOD policy.
        Requires role of ORG_ADMIN.
      operationId: deleteSodPolicy
      parameters:
      - description: The ID of the SOD Policy to delete.
        example: ef38f943-47e9-4562-b5bb-8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSodPolicies
      - description: Indicates whether this is a soft delete (logical true) or a hard
          delete.  Soft delete marks the policy as deleted and just save it with this
          status. It could be fully deleted or recovered further.  Hard delete vise
          versa permanently delete SOD request during this call.
        example: true
        in: query
        name: logical
        required: false
        schema:
          default: true
          type: boolean
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-policy:write
      summary: Delete sod policy by id
      tags:
      - SOD Policies
    get:
      description: |-
        This gets specified SOD policy.
        Requires role of ORG_ADMIN.
      operationId: getSodPolicy
      parameters:
      - description: The ID of the SOD Policy to retrieve.
        example: ef38f943-47e9-4562-b5bb-8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSodPolicies
      responses:
        "200":
          content:
            application/json:
              examples:
                Conflicting Access Based Policy:
                  value:
                    id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    name: Conflicting-Policy-Name
                    created: 2020-01-01T00:00:00.000000Z
                    modified: 2020-01-01T00:00:00.000000Z
                    description: This policy ensures compliance of xyz
                    ownerRef:
                      type: IDENTITY
                      id: 2c91808568c529c60168cca6f90c1313
                      name: Owner Name
                    externalPolicyReference: XYZ policy
                    policyQuery: '@access(id:2c9180866166b5b0016167c32ef31a66 OR id:2c9180866166b5b0016167c32ef31a67)
                      AND @access(id:2c9180866166b5b0016167c32ef31a68 OR id:2c9180866166b5b0016167c32ef31a69)'
                    compensatingControls: Have a manager review the transaction decisions
                      for their "out of compliance" employee
                    correctionAdvice: "Based on the role of the employee, managers\
                      \ should remove access that is not required for their job function."
                    state: ENFORCED
                    tags:
                    - string
                    creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    violationOwnerAssignmentConfig:
                      assignmentRule: MANAGER
                      ownerRef:
                        type: IDENTITY
                        id: 2c91808568c529c60168cca6f90c1313
                        name: Violation Owner Name
                    scheduled: true
                    type: CONFLICTING_ACCESS_BASED
                    conflictingAccessCriteria:
                      leftCriteria:
                        name: money-in
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a66
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a67
                      rightCriteria:
                        name: money-out
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a68
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a69
                General Policy:
                  value:
                    description: Description
                    ownerRef:
                      type: IDENTITY
                      id: 2c918087682f9a86016839c05e8f1aff
                      name: Owner Name
                    externalPolicyReference: New policy
                    policyQuery: policy query implementation
                    compensatingControls: Compensating controls
                    correctionAdvice: Correction advice
                    tags: []
                    state: ENFORCED
                    scheduled: false
                    creatorId: 2c918087682f9a86016839c05e8f1aff
                    modifierId: null
                    violationOwnerAssignmentConfig: null
                    type: GENERAL
                    conflictingAccessCriteria: null
                    id: 52c11db4-733e-4c31-949a-766c95ec95f1
                    name: General-Policy-Name
                    created: 2020-05-12T19:47:38Z
                    modified: 2020-05-12T19:47:38Z
              schema:
                $ref: '#/components/schemas/SodPolicyRead'
          description: SOD policy ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-policy:read
      summary: Get sod policy by id
      tags:
      - SOD Policies
    patch:
      description: "Allows updating SOD Policy fields other than [\"id\",\"created\"\
        ,\"creatorId\",\"policyQuery\",\"type\"] using the [JSON Patch](https://tools.ietf.org/html/rfc6902)\
        \ standard.\nRequires role of ORG_ADMIN.\nThis endpoint can only patch CONFLICTING_ACCESS_BASED\
        \ type policies. Do not use this endpoint to patch general policies - doing\
        \ so will build an API exception. "
      operationId: patchSodPolicy
      parameters:
      - description: The ID of the SOD policy being modified.
        example: 2c918083-5d19-1a86-015d-28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSodPolicies
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Conflicting Access Based Policy:
                value:
                - op: replace
                  path: /description
                  value: Modified description
                - op: replace
                  path: /conflictingAccessCriteria/leftCriteria/name
                  value: money-in-modified
                - op: replace
                  path: /conflictingAccessCriteria/rightCriteria
                  value:
                    name: money-out-modified
                    criteriaList:
                    - type: ENTITLEMENT
                      id: 2c918087682f9a86016839c0509c1ab2
              General Policy:
                value:
                - op: replace
                  path: /description
                  value: Modified description
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of SOD Policy update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields are patchable:
          * name
          * description
          * ownerRef
          * externalPolicyReference
          * compensatingControls
          * correctionAdvice
          * state
          * tags
          * violationOwnerAssignmentConfig
          * scheduled
          * conflictingAccessCriteria
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Conflicting Access Based Policy:
                  value:
                    id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    name: Conflicting-Policy-Name
                    created: 2020-01-01T00:00:00.000000Z
                    modified: 2020-01-01T00:00:00.000000Z
                    description: Modified description
                    ownerRef:
                      type: IDENTITY
                      id: 2c91808568c529c60168cca6f90c1313
                      name: Owner Name
                    externalPolicyReference: XYZ policy
                    policyQuery: '@access(id:2c9180866166b5b0016167c32ef31a66 OR id:2c9180866166b5b0016167c32ef31a67)
                      AND @access(id:2c918087682f9a86016839c0509c1ab2)'
                    compensatingControls: Have a manager review the transaction decisions
                      for their "out of compliance" employee
                    correctionAdvice: "Based on the role of the employee, managers\
                      \ should remove access that is not required for their job function."
                    state: ENFORCED
                    tags:
                    - string
                    creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    violationOwnerAssignmentConfig:
                      assignmentRule: MANAGER
                      ownerRef:
                        type: IDENTITY
                        id: 2c91808568c529c60168cca6f90c1313
                        name: Violation Owner Name
                    scheduled: true
                    type: CONFLICTING_ACCESS_BASED
                    conflictingAccessCriteria:
                      leftCriteria:
                        name: money-in-modified
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a66
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a67
                      rightCriteria:
                        name: money-out-modified
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c918087682f9a86016839c0509c1ab2
                General Policy:
                  value:
                    description: Modified description
                    ownerRef:
                      type: IDENTITY
                      id: 2c918087682f9a86016839c05e8f1aff
                      name: Owner Name
                    externalPolicyReference: New policy
                    policyQuery: policy query implementation
                    compensatingControls: Compensating controls
                    correctionAdvice: Correction advice
                    tags: []
                    state: ENFORCED
                    scheduled: false
                    creatorId: 2c918087682f9a86016839c05e8f1aff
                    modifierId: null
                    violationOwnerAssignmentConfig: null
                    type: GENERAL
                    conflictingAccessCriteria: null
                    id: 52c11db4-733e-4c31-949a-766c95ec95f1
                    name: General-Policy-Name
                    created: 2020-05-12T19:47:38Z
                    modified: 2020-05-12T19:47:38Z
              schema:
                $ref: '#/components/schemas/SodPolicyRead'
          description: "Indicates the PATCH operation succeeded, and returns the SOD\
            \ policy's new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-policy:write
      summary: Patch sod policy by id
      tags:
      - SOD Policies
    put:
      description: |-
        This updates a specified SOD policy.
        Requires role of ORG_ADMIN.
      operationId: putSodPolicy
      parameters:
      - description: The ID of the SOD policy to update.
        example: ef38f943-47e9-4562-b5bb-8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSodPolicies
      requestBody:
        content:
          application/json:
            examples:
              Conflicting Access Based Policy:
                value:
                  name: Conflicting-Policy-Name
                  description: Modified Description
                  externalPolicyReference: XYZ policy
                  compensatingControls: Have a manager review the transaction decisions
                    for their "out of compliance" employee
                  correctionAdvice: "Based on the role of the employee, managers should\
                    \ remove access that is not required for their job function."
                  state: ENFORCED
                  tags:
                  - string
                  violationOwnerAssignmentConfig:
                    assignmentRule: MANAGER
                    ownerRef:
                      type: IDENTITY
                      id: 2c91808568c529c60168cca6f90c1313
                      name: Violation Owner Name
                  scheduled: true
                  type: CONFLICTING_ACCESS_BASED
                  conflictingAccessCriteria:
                    leftCriteria:
                      name: money-in
                      criteriaList:
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a66
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a67
                    rightCriteria:
                      name: money-out
                      criteriaList:
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a68
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a69
              General Policy:
                value:
                  description: Modified Description
                  ownerRef:
                    type: IDENTITY
                    id: 2c918087682f9a86016839c05e8f1aff
                    name: Owner Name
                  externalPolicyReference: New policy
                  policyQuery: policy query implementation
                  compensatingControls: Compensating controls
                  correctionAdvice: Correction advice
                  tags: []
                  state: ENFORCED
                  scheduled: false
                  creatorId: 2c918087682f9a86016839c05e8f1aff
                  modifierId: null
                  violationOwnerAssignmentConfig: null
                  type: GENERAL
                  conflictingAccessCriteria: null
                  id: 52c11db4-733e-4c31-949a-766c95ec95f1
                  name: General-Policy-Name
                  created: 2020-05-12T19:47:38Z
                  modified: 2020-05-12T19:47:38Z
            schema:
              $ref: '#/components/schemas/SodPolicyRead'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Conflicting Access Based Policy:
                  value:
                    id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    name: Conflicting-Policy-Name
                    created: 2020-01-01T00:00:00.000000Z
                    modified: 2020-01-01T00:00:00.000000Z
                    description: Modified description
                    ownerRef:
                      type: IDENTITY
                      id: 2c91808568c529c60168cca6f90c1313
                      name: Owner Name
                    externalPolicyReference: XYZ policy
                    policyQuery: '@access(id:2c9180866166b5b0016167c32ef31a66 OR id:2c9180866166b5b0016167c32ef31a67)
                      AND @access(id:2c9180866166b5b0016167c32ef31a68 OR id:2c9180866166b5b0016167c32ef31a69)'
                    compensatingControls: Have a manager review the transaction decisions
                      for their "out of compliance" employee
                    correctionAdvice: "Based on the role of the employee, managers\
                      \ should remove access that is not required for their job function."
                    state: ENFORCED
                    tags:
                    - string
                    creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    violationOwnerAssignmentConfig:
                      assignmentRule: MANAGER
                      ownerRef:
                        type: IDENTITY
                        id: 2c91808568c529c60168cca6f90c1313
                        name: Violation Owner Name
                    scheduled: true
                    type: CONFLICTING_ACCESS_BASED
                    conflictingAccessCriteria:
                      leftCriteria:
                        name: money-in
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a66
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a67
                      rightCriteria:
                        name: money-out
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a68
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a69
                General Policy:
                  value:
                    description: Modified Description
                    ownerRef:
                      type: IDENTITY
                      id: 2c918087682f9a86016839c05e8f1aff
                      name: Owner Name
                    externalPolicyReference: New policy
                    policyQuery: policy query implementation
                    compensatingControls: Compensating controls
                    correctionAdvice: Correction advice
                    tags: []
                    state: ENFORCED
                    scheduled: false
                    creatorId: 2c918087682f9a86016839c05e8f1aff
                    modifierId: null
                    violationOwnerAssignmentConfig: null
                    type: GENERAL
                    conflictingAccessCriteria: null
                    id: 52c11db4-733e-4c31-949a-766c95ec95f1
                    name: General-Policy-Name
                    created: 2020-05-12T19:47:38Z
                    modified: 2020-05-12T19:47:38Z
              schema:
                $ref: '#/components/schemas/SodPolicyRead'
          description: SOD Policy by ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-policy:write
      summary: Update sod policy by id
      tags:
      - SOD Policies
  /sod-policies/{id}/evaluate:
    post:
      description: Runs the scheduled report for the policy retrieved by passed policy
        ID.  The report schedule is fetched from the policy retrieved by ID.
      operationId: startEvaluateSodPolicy
      parameters:
      - description: The SOD policy ID to run.
        example: ef38f943-47e9-4562-b5bb-8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSodPolicies
      responses:
        "200":
          content:
            application/json:
              example:
                status: PENDING
                type: REPORT_RESULT
                id: 37b3b32a-f394-46f8-acad-b5223969fa68
                name: Multi Query Report
              schema:
                $ref: '#/components/schemas/ReportResultReference'
          description: Reference to the violation report run task.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-violation:write
      summary: Evaluate one policy by id
      tags:
      - SOD Policies
  /sod-policies/{id}/schedule:
    delete:
      description: This deletes schedule for a specified SOD policy by ID.
      operationId: deleteSodPolicySchedule
      parameters:
      - description: The ID of the SOD policy the schedule must be deleted for.
        example: ef38f943-47e9-4562-b5bb-8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSodPolicies
      responses:
        "204":
          description: No content response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-policy:write
      summary: Delete sod policy schedule
      tags:
      - SOD Policies
    get:
      description: This endpoint gets a specified SOD policy's schedule.
      operationId: getSodPolicySchedule
      parameters:
      - description: The ID of the SOD policy schedule to retrieve.
        example: ef38f943-47e9-4562-b5bb-8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSodPolicies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SodPolicySchedule'
          description: SOD policy schedule.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-policy:read
      summary: Get sod policy schedule
      tags:
      - SOD Policies
    put:
      description: This updates schedule for a specified SOD policy.
      operationId: putPolicySchedule
      parameters:
      - description: The ID of the SOD policy to update its schedule.
        example: ef38f943-47e9-4562-b5bb-8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSodPolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SodPolicySchedule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SodPolicySchedule'
          description: Created or updated SOD policy schedule.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-policy:write
      summary: Update sod policy schedule
      tags:
      - SOD Policies
  /sod-policies/{id}/violation-report/run:
    post:
      description: "This invokes processing of violation report for given SOD policy.\
        \ If the policy reports more than 5000 violations, the report returns with\
        \ violation limit exceeded message."
      operationId: startSodPolicy
      parameters:
      - description: The SOD policy ID to run.
        example: ef38f943-47e9-4562-b5bb-8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSodPolicies
      responses:
        "200":
          content:
            application/json:
              example:
                status: PENDING
                type: REPORT_RESULT
                id: 2e8d8180-24bc-4d21-91c6-7affdb473b0d
                name: policy-xyz
              schema:
                $ref: '#/components/schemas/ReportResultReference'
          description: Reference to the violation report run task.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-violation:write
      summary: Runs sod policy violation report
      tags:
      - SOD Policies
  /sod-policies/{id}/violation-report:
    get:
      description: This gets the status for a violation report run task that has already
        been invoked.
      operationId: getSodViolationReportStatus
      parameters:
      - description: The ID of the violation report to retrieve status for.
        example: ef38f943-47e9-4562-b5bb-8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: startSodPolicy
      responses:
        "200":
          content:
            application/json:
              example:
                status: SUCCESS
                type: REPORT_RESULT
                id: 2e8d8180-24bc-4d21-91c6-7affdb473b0d
                name: policy-xyz
              schema:
                $ref: '#/components/schemas/ReportResultReference'
          description: Status of the violation report run task.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-violation:read
      summary: Get sod violation report status
      tags:
      - SOD Policies
  /sod-policies/sod-violation-report-status/{reportResultId}:
    get:
      description: This gets the status for a violation report run task that has already
        been invoked.
      operationId: getSodViolationReportRunStatus
      parameters:
      - description: The ID of the report reference to retrieve.
        example: 2e8d8180-24bc-4d21-91c6-7affdb473b0d
        in: path
        name: reportResultId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getSodAllReportRunStatus
      responses:
        "200":
          content:
            application/json:
              example:
                status: SUCCESS
                type: REPORT_RESULT
                id: 2e8d8180-24bc-4d21-91c6-7affdb473b0d
                name: policy-xyz
              schema:
                $ref: '#/components/schemas/ReportResultReference'
          description: Status of the violation report run task.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-violation:read
      summary: Get violation report run status
      tags:
      - SOD Policies
  /sod-violations/predict:
    post:
      description: This API is used to check if granting some additional accesses
        would cause the subject to be in violation of any SOD policies. Returns the
        violations that would be caused.
      operationId: startPredictSodViolations
      requestBody:
        content:
          application/json:
            example:
              identityId: 2c91808568c529c60168cca6f90c1313
              accessRefs:
              - type: ENTITLEMENT
                id: 2c918087682f9a86016839c050861ab1
                name: "CN=Information Access,OU=test,OU=test-service,DC=TestAD,DC=local"
              - type: ENTITLEMENT
                id: 2c918087682f9a86016839c0509c1ab2
                name: "CN=Information Technology,OU=test,OU=test-service,DC=TestAD,DC=local"
            schema:
              $ref: '#/components/schemas/IdentityWithNewAccess'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViolationPrediction'
          description: Violation Contexts
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-violation:read
      - applicationAuth:
        - idn:sod-violation:read
      summary: Predict sod violations for identity.
      tags:
      - SOD Violations
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /sod-violations/check:
    post:
      description: This API initiates a SOD policy verification asynchronously.
      operationId: startViolationCheck
      requestBody:
        content:
          application/json:
            example:
              identityId: 2c91808568c529c60168cca6f90c1313
              accessRefs:
              - type: ENTITLEMENT
                id: 2c918087682f9a86016839c050861ab1
                name: "CN=Information Access,OU=test,OU=test-service,DC=TestAD,DC=local"
              - type: ENTITLEMENT
                id: 2c918087682f9a86016839c0509c1ab2
                name: "CN=Information Technology,OU=test,OU=test-service,DC=TestAD,DC=local"
              clientMetadata:
                additionalProp1: string
                additionalProp2: string
                additionalProp3: string
            schema:
              $ref: '#/components/schemas/IdentityWithNewAccess_1'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SodViolationCheck'
          description: Request ID with a timestamp.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-violation:read
      summary: Check sod violations
      tags:
      - SOD Violations
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /sod-violation-report/run:
    post:
      description: "Runs multi-policy report for the org. If a policy reports more\
        \ than 5000 violations, the report mentions that the violation limit was exceeded\
        \ for that policy. If the request is empty, the report runs for all policies.\
        \ Otherwise, the report runs for only the filtered policy list provided."
      operationId: startSodAllPoliciesForOrg
      requestBody:
        content:
          application/json:
            example:
              filteredPolicyList:
              - b868cd40-ffa4-4337-9c07-1a51846cfa94
              - 63a07a7b-39a4-48aa-956d-50c827deba2a
            schema:
              $ref: '#/components/schemas/MultiPolicyRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                status: PENDING
                type: REPORT_RESULT
                id: 37b3b32a-f394-46f8-acad-b5223969fa68
                name: Multi Query Report
              schema:
                $ref: '#/components/schemas/ReportResultReference'
          description: Reference to the violation report run task.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-violation:write
      summary: Runs all policies for org
      tags:
      - SOD Policies
  /sod-violation-report:
    get:
      description: This endpoint gets the status for a violation report for all policy
        run.
      operationId: getSodAllReportRunStatus
      responses:
        "200":
          content:
            application/json:
              example:
                status: SUCCESS
                type: REPORT_RESULT
                id: 37b3b32a-f394-46f8-acad-b5223969fa68
                name: Multi Query Report
              schema:
                $ref: '#/components/schemas/ReportResultReference'
          description: Status of the violation report run task for all policy run.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-violation:read
      summary: Get multi-report run task status
      tags:
      - SOD Policies
  /sod-violation-report/{reportResultId}/download:
    get:
      description: This allows to download a violation report for a given report reference.
      operationId: getDefaultViolationReport
      parameters:
      - description: The ID of the report reference to download.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: reportResultId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: startSodPolicy
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: Returns the PolicyReport.zip that contains the violation report
            file.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-violation:read
      summary: Download violation report
      tags:
      - SOD Policies
  /sod-violation-report/{reportResultId}/download/{fileName}:
    get:
      description: This allows to download a specified named violation report for
        a given report reference.
      operationId: getCustomViolationReport
      parameters:
      - description: The ID of the report reference to download.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: reportResultId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: startSodPolicy
      - description: Custom Name for the  file.
        example: custom-name
        in: path
        name: fileName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: Returns the zip file with given custom name that contains the
            violation report file.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sod-violation:read
      summary: Download custom violation report
      tags:
      - SOD Policies
  /sources:
    get:
      description: This end-point lists all the sources in IdentityNow.
      operationId: listSources
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*

          **name**: *co, eq, in, sw, ge, gt, ne, isnull*

          **type**: *eq, in, ge, gt, ne, isnull, sw*

          **owner.id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*

          **features**: *ca, co*

          **created**: *eq, ge, gt, in, le, lt, ne, isnull, sw*

          **modified**: *eq, ge, gt, in, le, lt, ne, isnull, sw*

          **managementWorkgroup.id**: *eq, ge, gt, in, le, lt, ne, isnull, sw*

          **description**: *eq, sw*

          **authoritative**: *eq, ne, isnull*

          **healthy**: *isnull*

          **status**: *eq, in, ge, gt, le, lt, ne, isnull, sw*

          **connectionType**: *eq, ge, gt, in, le, lt, ne, isnull, sw*

          **connectorName**: *eq, ge, gt, in, ne, isnull, sw*

          **category**: *co, eq, ge, gt, in, le, lt, ne, sw*
        example: name eq "Employees"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status, id, description, owner.id, accountCorrelationConfig.id, accountCorrelationConfig.name, managerCorrelationRule.type, managerCorrelationRule.id, managerCorrelationRule.name, authoritative, managementWorkgroup.id, connectorName, connectionType**
        example: name
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      - description: |-
          Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user.
          Subadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned.
        example: name
        in: query
        name: for-subadmin
        schema:
          type: string
      - description: Include the IdentityNow source in the response.
        example: true
        in: query
        name: includeIDNSource
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Source'
                type: array
          description: List of Source objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sources:read
        - idn:sources:manage
      - applicationAuth:
        - idn:sources:read
        - idn:sources:manage
      summary: Lists all sources in identitynow.
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
      - ROLE_SUBADMIN
    post:
      description: This creates a specific source with a full source JSON representation.
        Any passwords are submitted as plain-text and encrypted upon receipt in IdentityNow.
      operationId: createSource
      parameters:
      - description: "If this parameter is `true`, it configures the source as a Delimited\
          \ File (CSV) source. Setting this to `true` will automatically set the `type`\
          \ of the source to `DelimitedFile`.  You must use this query parameter to\
          \ create a Delimited File source as you would in the UI.  If you don't set\
          \ this query parameter and you attempt to set the `type` attribute directly,\
          \ the request won't correctly generate the source.  "
        example: false
        in: query
        name: provisionAsCsv
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: "Created Source object. Any passwords will only show the the\
            \ encrypted cipher-text, as they are not decrypt-able in IdentityNow cloud-based\
            \ services, per IdentityNow security design."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sources:manage
      summary: Creates a source in identitynow.
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /sources/{id}:
    delete:
      description: |-
        Use this API to delete a specific source in Identity Security Cloud (ISC).
        The API removes all the accounts on the source first, and then it deletes the source. You can retrieve the actual task execution status with this method: GET `/task-status/{id}`
      operationId: deleteSource
      parameters:
      - description: Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      responses:
        "202":
          content:
            application/json:
              examples:
                deleteSource:
                  summary: Response returned when a source is being deleted.
                  value:
                    type: TASK_RESULT
                    id: 2c91808779ecf55b0179f720942f181a
                    name: null
              schema:
                $ref: '#/components/schemas/deleteSource_202_response'
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sources:manage
      summary: Delete source by id
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    get:
      description: Use this API to get a source by a specified ID in Identity Security
        Cloud (ISC).
      operationId: getSource
      parameters:
      - description: Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: Source object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sources:read
      summary: Get source by id
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    patch:
      description: |
        Use this API to partially update a source in Identity Security Cloud (ISC), using a list of patch operations according to the
        [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

        These fields are immutable, so they cannot be changed:

        * id
        * type
        * authoritative
        * created
        * modified
        * connector
        * connectorClass
        * passwordPolicies

        Attempts to modify these fields will result in a 400 error.
      operationId: updateSource
      parameters:
      - description: Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Edit the source description:
                description: This example shows how to edit a source description.
                value:
                - op: replace
                  path: /description
                  value: new description
              Edit the source cluster:
                description: This example shows how to edit a source cluster by ID.
                value:
                - op: replace
                  path: /cluster/id
                  value: 2c918087813a902001813f3f85736b45
              Edit source features:
                description: This example illustrates how you can update source supported
                  features.
                value:
                - op: replace
                  path: /features
                  value:
                  - PASSWORD
                  - PROVISIONING
                  - ENABLE
                  - AUTHENTICATE
              Change a source description and cluster in one call:
                description: This example shows how multiple fields may be updated
                  with a single PATCH call.
                value:
                - op: replace
                  path: /description
                  value: new description
                - op: replace
                  path: /cluster/id
                  value: 2c918087813a902001813f3f85736b45
              Add a filter string to the connector:
                description: "This example shows how you can add a filter to incoming\
                  \ accounts during the account aggregation process. In the example,\
                  \ any account that does not have an \"m\" or \"d\" in the ID will\
                  \ be aggregated."
                value:
                - op: add
                  path: /connectorAttributes/filterString
                  value: '!( id.contains( "m" ) ) || !( id.contains( "d" ) )'
              Update connector attribute for specific operation type:
                description: This example shows how you can update the 3rd object
                  in the connection parameter's `operationType`. This changes it from
                  a standard group aggregation to a group aggregation on the "test"
                  entitlement type.
                value:
                - op: replace
                  path: /connectorAttributes/connectionParameters/2/operationType
                  value: Group Aggregation-test
              Enable notifications for new account provisioning on a source:
                description: This example shows how you can configure and enable email
                  notifications that will send when new accounts are provisioned on
                  a source.
                value:
                - op: replace
                  path: /connectorAttributes/accountCreateNotification
                  value:
                    notifyList:
                    - Distribution.list@demo.com
                    notifyAccountOwner: true
                    enabled: true
                    notifyAccountOwnerAltEmail: false
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of account update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902)\
          \ standard. Any password changes are submitted as plain-text and encrypted\
          \ upon receipt in Identity Security Cloud (ISC)."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: "Updated Source object. Any passwords will only show the the\
            \ encrypted cipher-text so that they aren't decryptable in Identity Security\
            \ Cloud (ISC) cloud-based services, per ISC security design."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sources:manage
      summary: Update source (partial)
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    put:
      description: |
        Use this API to update a source in Identity Security Cloud (ISC), using a full object representation. This means that when you use this API, it completely replaces the existing source configuration.

        These fields are immutable, so they cannot be changed:

        * id
        * type
        * authoritative
        * connector
        * connectorClass
        * passwordPolicies

        Attempts to modify these fields will result in a 400 error.
      operationId: putSource
      parameters:
      - description: Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: "Updated Source object. Any passwords will only show the the\
            \ encrypted cipher-text so that they aren't decryptable in Identity Security\
            \ Cloud (ISC) cloud-based services, per ISC security design."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sources:manage
      summary: Update source (full)
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /sources/{sourceId}/provisioning-policies:
    get:
      description: This end-point lists all the ProvisioningPolicies in IdentityNow.
      operationId: listProvisioningPolicies
      parameters:
      - description: The Source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProvisioningPolicyDto'
                type: array
          description: List of ProvisioningPolicyDto objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:provisioning-policy:read
        - idn:provisioning-policy:manage
      - applicationAuth:
        - idn:provisioning-policy:read
        - idn:provisioning-policy:manage
      summary: Lists provisioningpolicies
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
    post:
      description: |-
        This API generates a create policy/template based on field value transforms. This API is intended for use when setting up JDBC Provisioning type sources, but it will also work on other source types.
        Transforms can be used in the provisioning policy to create a new attribute that you only need during provisioning.
        Refer to [Transforms in Provisioning Policies](https://developer.sailpoint.com/idn/docs/transforms/guides/transforms-in-provisioning-policies) for more information.
      operationId: createProvisioningPolicy
      parameters:
      - description: The Source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      requestBody:
        content:
          application/json:
            examples:
              Create Account Provisioning Policy:
                value:
                  name: Account
                  description: Account Provisioning Policy
                  usageType: CREATE
                  fields:
                  - name: displayName
                    transform:
                      type: identityAttribute
                      attributes:
                        name: displayName
                    attributes: {}
                    isRequired: false
                    type: string
                    isMultiValued: false
                  - name: distinguishedName
                    transform:
                      type: usernameGenerator
                      attributes:
                        sourceCheck: true
                        patterns:
                        - "CN=$fi $ln,OU=zzUsers,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
                        - "CN=$fti $ln,OU=zzUsers,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
                        - "CN=$fn $ln,OU=zzUsers,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
                        - "CN=$fn$ln${uniqueCounter},OU=zzUsers,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
                        fn:
                          type: identityAttribute
                          attributes:
                            name: firstname
                        ln:
                          type: identityAttribute
                          attributes:
                            name: lastname
                        fi:
                          type: substring
                          attributes:
                            input:
                              type: identityAttribute
                              attributes:
                                name: firstname
                            begin: 0.0
                            end: 1.0
                        fti:
                          type: substring
                          attributes:
                            input:
                              type: identityAttribute
                              attributes:
                                name: firstname
                            begin: 0.0
                            end: 2.0
                    attributes:
                      cloudMaxUniqueChecks: "5"
                      cloudMaxSize: "100"
                      cloudRequired: "true"
                    isRequired: false
                    type: ""
                    isMultiValued: false
                  - name: description
                    transform:
                      type: static
                      attributes:
                        value: ""
                    attributes: {}
                    isRequired: false
                    type: string
                    isMultiValued: false
            schema:
              $ref: '#/components/schemas/ProvisioningPolicyDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
          description: Created ProvisioningPolicyDto object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:provisioning-policy:manage
      summary: Create provisioning policy
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /sources/{sourceId}/provisioning-policies/{usageType}:
    delete:
      description: Deletes the provisioning policy with the specified usage on an
        application.
      operationId: deleteProvisioningPolicy
      parameters:
      - description: The Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      - description: "The type of provisioning policy usage. \nIn IdentityNow, a source\
          \ can support various provisioning operations. For example, when a joiner\
          \ is added to a source, this may trigger both CREATE and UPDATE provisioning\
          \ operations.  Each usage type is considered a provisioning policy.  A source\
          \ can have any number of these provisioning policies defined. \nThese are\
          \ the common usage types: \nCREATE - This usage type relates to 'Create\
          \ Account Profile', the provisioning template for the account to be created.\
          \ For example, this would be used for a joiner on a source.  \nUPDATE -\
          \ This usage type relates to 'Update Account Profile', the provisioning\
          \ template for the 'Update' connector operations. For example, this would\
          \ be used for an attribute sync on a source.\nENABLE - This usage type relates\
          \ to 'Enable Account Profile', the provisioning template for the account\
          \ to be enabled. For example, this could be used for a joiner on a source\
          \ once the joiner's account is created. \nDISABLE - This usage type relates\
          \ to 'Disable Account Profile', the provisioning template for the account\
          \ to be disabled. For example, this could be used when a leaver is removed\
          \ temporarily from a source. \nYou can use these four usage types for all\
          \ your provisioning policy needs. "
        example: CREATE
        in: path
        name: usageType
        required: true
        schema:
          $ref: '#/components/schemas/UsageType'
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:provisioning-policy:manage
      - applicationAuth:
        - idn:provisioning-policy:manage
      summary: Delete provisioning policy by usagetype
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
    get:
      description: This end-point retrieves the ProvisioningPolicy with the specified
        usage on the specified Source in IdentityNow.
      operationId: getProvisioningPolicy
      parameters:
      - description: The Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      - description: "The type of provisioning policy usage. \nIn IdentityNow, a source\
          \ can support various provisioning operations. For example, when a joiner\
          \ is added to a source, this may trigger both CREATE and UPDATE provisioning\
          \ operations.  Each usage type is considered a provisioning policy.  A source\
          \ can have any number of these provisioning policies defined. \nThese are\
          \ the common usage types: \nCREATE - This usage type relates to 'Create\
          \ Account Profile', the provisioning template for the account to be created.\
          \ For example, this would be used for a joiner on a source.  \nUPDATE -\
          \ This usage type relates to 'Update Account Profile', the provisioning\
          \ template for the 'Update' connector operations. For example, this would\
          \ be used for an attribute sync on a source.\nENABLE - This usage type relates\
          \ to 'Enable Account Profile', the provisioning template for the account\
          \ to be enabled. For example, this could be used for a joiner on a source\
          \ once the joiner's account is created. \nDISABLE - This usage type relates\
          \ to 'Disable Account Profile', the provisioning template for the account\
          \ to be disabled. For example, this could be used when a leaver is removed\
          \ temporarily from a source. \nYou can use these four usage types for all\
          \ your provisioning policy needs. "
        example: CREATE
        in: path
        name: usageType
        required: true
        schema:
          $ref: '#/components/schemas/UsageType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
          description: The requested ProvisioningPolicyDto was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:provisioning-policy:read
        - idn:provisioning-policy-source:read
        - idn:provisioning-policy:manage
        - idn:provisioning-policy-source-admin-operations:manage
      - applicationAuth:
        - idn:provisioning-policy:read
        - idn:provisioning-policy-source:read
        - idn:provisioning-policy:manage
        - idn:provisioning-policy-source-admin-operations:manage
      summary: Get provisioning policy by usagetype
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    patch:
      description: |-
        This API selectively updates an existing Provisioning Policy using a JSONPatch payload.
        Transforms can be used in the provisioning policy to create a new attribute that you only need during provisioning.
        Refer to [Transforms in Provisioning Policies](https://developer.sailpoint.com/idn/docs/transforms/guides/transforms-in-provisioning-policies) for more information.
      operationId: updateProvisioningPolicy
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      - description: "The type of provisioning policy usage. \nIn IdentityNow, a source\
          \ can support various provisioning operations. For example, when a joiner\
          \ is added to a source, this may trigger both CREATE and UPDATE provisioning\
          \ operations.  Each usage type is considered a provisioning policy.  A source\
          \ can have any number of these provisioning policies defined. \nThese are\
          \ the common usage types: \nCREATE - This usage type relates to 'Create\
          \ Account Profile', the provisioning template for the account to be created.\
          \ For example, this would be used for a joiner on a source.  \nUPDATE -\
          \ This usage type relates to 'Update Account Profile', the provisioning\
          \ template for the 'Update' connector operations. For example, this would\
          \ be used for an attribute sync on a source.\nENABLE - This usage type relates\
          \ to 'Enable Account Profile', the provisioning template for the account\
          \ to be enabled. For example, this could be used for a joiner on a source\
          \ once the joiner's account is created. \nDISABLE - This usage type relates\
          \ to 'Disable Account Profile', the provisioning template for the account\
          \ to be disabled. For example, this could be used when a leaver is removed\
          \ temporarily from a source. \nYou can use these four usage types for all\
          \ your provisioning policy needs. "
        example: CREATE
        in: path
        name: usageType
        required: true
        schema:
          $ref: '#/components/schemas/UsageType'
      requestBody:
        content:
          application/json-patch+json:
            examples:
              add-field:
                summary: Add a field to the beginning of the list
                value:
                - op: add
                  path: /fields/0
                  value:
                    name: email
                    transform:
                      type: identityAttribute
                      attributes:
                        name: email
                    attributes: {}
                    isRequired: false
                    type: string
                    isMultiValued: false
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: The JSONPatch payload used to update the schema.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
          description: The ProvisioningPolicyDto was successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:provisioning-policy:update
      - applicationAuth:
        - idn:provisioning-policy:update
      summary: Partial update of provisioning policy
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    put:
      description: |-
        This end-point updates the provisioning policy with the specified usage on the specified source in IdentityNow.
        Transforms can be used in the provisioning policy to create a new attribute that you only need during provisioning.
        Refer to [Transforms in Provisioning Policies](https://developer.sailpoint.com/idn/docs/transforms/guides/transforms-in-provisioning-policies) for more information.
      operationId: putProvisioningPolicy
      parameters:
      - description: The Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      - description: "The type of provisioning policy usage. \nIn IdentityNow, a source\
          \ can support various provisioning operations. For example, when a joiner\
          \ is added to a source, this may trigger both CREATE and UPDATE provisioning\
          \ operations.  Each usage type is considered a provisioning policy.  A source\
          \ can have any number of these provisioning policies defined. \nThese are\
          \ the common usage types: \nCREATE - This usage type relates to 'Create\
          \ Account Profile', the provisioning template for the account to be created.\
          \ For example, this would be used for a joiner on a source.  \nUPDATE -\
          \ This usage type relates to 'Update Account Profile', the provisioning\
          \ template for the 'Update' connector operations. For example, this would\
          \ be used for an attribute sync on a source.\nENABLE - This usage type relates\
          \ to 'Enable Account Profile', the provisioning template for the account\
          \ to be enabled. For example, this could be used for a joiner on a source\
          \ once the joiner's account is created. \nDISABLE - This usage type relates\
          \ to 'Disable Account Profile', the provisioning template for the account\
          \ to be disabled. For example, this could be used when a leaver is removed\
          \ temporarily from a source. \nYou can use these four usage types for all\
          \ your provisioning policy needs. "
        example: CREATE
        in: path
        name: usageType
        required: true
        schema:
          $ref: '#/components/schemas/UsageType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningPolicyDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
          description: The ProvisioningPolicyDto was successfully replaced.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:provisioning-policy:manage
        - idn:provisioning-policy-source-admin-operations:manage
      - applicationAuth:
        - idn:provisioning-policy:manage
        - idn:provisioning-policy-source-admin-operations:manage
      summary: Update provisioning policy by usagetype
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /sources/{sourceId}/provisioning-policies/bulk-update:
    post:
      description: This end-point updates a list of provisioning policies on the specified
        source in IdentityNow.
      operationId: updateProvisioningPoliciesInBulk
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProvisioningPolicyDto'
                type: array
          description: A list of the ProvisioningPolicyDto was successfully replaced.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:provisioning-policy:manage
      - applicationAuth:
        - idn:provisioning-policy:manage
      summary: Bulk update provisioning policies
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /sources/{sourceId}/schemas:
    get:
      description: Use this API to list the schemas that exist on the specified source
        in Identity Security Cloud (ISC).
      operationId: getSourceSchemas
      parameters:
      - description: Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      - description: "If set to 'group', then the account schema is filtered and only\
          \ group schemas are returned. Only a value of 'group' is recognized presently.\
          \ \nNote: The API will check whether include-types is group or not, if not,\
          \ it will list schemas based on include-names, if include-names is not provided,\
          \ it will list all schemas."
        example: group
        in: query
        name: include-types
        required: false
        schema:
          enum:
          - group
          - user
          type: string
      - description: A comma-separated list of schema names to filter result.
        example: account
        in: query
        name: include-names
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Schema'
                type: array
          description: The schemas were successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:source-schema:read
      summary: List schemas on source
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
    post:
      description: |
        Use this API to create a new schema on the specified source in Identity Security Cloud (ISC).
      operationId: createSourceSchema
      parameters:
      - description: Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schema'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: The schema was successfully created on the specified source.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:source-schema:create
      summary: Create schema on source
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
  /sources/{sourceId}/schemas/{schemaId}:
    delete:
      operationId: deleteSourceSchema
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      - description: The Schema id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getSourceSchemas
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete source schema by id
      tags:
      - Sources
    get:
      description: |
        Get the Source Schema by ID in IdentityNow.
      operationId: getSourceSchema
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      - description: The Schema id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getSourceSchemas
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: The requested Schema was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get source schema by id
      tags:
      - Sources
    patch:
      description: "Use this API to selectively update an existing Schema using a\
        \ JSONPatch payload. \n\nThe following schema fields are immutable and cannot\
        \ be updated:\n\n- id\n- name\n- created\n- modified\n\n\nTo switch an account\
        \ attribute to a group entitlement, you need to have the following in place:\n\
        \n- `isEntitlement: true`\n- Must define a schema for the group and [add it\
        \ to the source](https://developer.sailpoint.com/idn/api/v3/create-source-schema)\
        \ before updating the `isGroup` flag.  For example, here is the `group` account\
        \ attribute referencing a schema that defines the group:\n```json\n{\n   \
        \ \"name\": \"groups\",\n    \"type\": \"STRING\",\n    \"schema\": {\n  \
        \      \"type\": \"CONNECTOR_SCHEMA\",\n        \"id\": \"2c9180887671ff8c01767b4671fc7d60\"\
        ,\n        \"name\": \"group\"\n    },\n    \"description\": \"The groups,\
        \ roles etc. that reference account group objects\",\n    \"isMulti\": true,\n\
        \    \"isEntitlement\": true,\n    \"isGroup\": true\n}\n```\n"
      operationId: updateSourceSchema
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      - description: The Schema id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getSourceSchemas
      requestBody:
        content:
          application/json-patch+json:
            examples:
              add-attribute:
                summary: Add an attribute to the end of the list
                value:
                - op: add
                  path: /attributes/-
                  value:
                    name: location
                    type: STRING
                    schema: null
                    description: Employee location
                    isMulti: false
                    isEntitlement: false
                    isGroup: false
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: The JSONPatch payload used to update the schema.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: The Schema was successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update source schema (partial)
      tags:
      - Sources
    put:
      description: |
        This API will completely replace an existing Schema with the submitted payload. Some fields of the Schema cannot be updated. These fields are listed below.

        * id
        * name
        * created
        * modified

        Any attempt to modify these fields will result in an error response with a status code of 400.

        > `id` must remain in the request body, but it cannot be changed.  If `id` is omitted from the request body, the result will be a 400 error.
      operationId: putSourceSchema
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      - description: The Schema id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: schemaId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: getSourceSchemas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: The Schema was successfully replaced.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update source schema (full)
      tags:
      - Sources
  /sources/{sourceId}/source-health:
    get:
      description: This endpoint fetches source health by source's id
      operationId: getSourceHealth
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceHealthDto'
          description: Fetched source health successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sources:read
      summary: Fetches source health by id
      tags:
      - Sources
  /sources/{id}/schemas/accounts:
    get:
      description: |-
        This API downloads the CSV schema that defines the account attributes on a source.
        >**NOTE: This API is designated only for Delimited File sources.**
      operationId: getAccountsSchema
      parameters:
      - description: The Source id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      responses:
        "200":
          content:
            text/csv:
              example: "id,name,givenName,familyName,e-mail,location,manager,groups,startDate,endDate"
          description: Successfully downloaded the file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:source-schema:read
      summary: Downloads source accounts schema template
      tags:
      - Sources
    post:
      description: "This API uploads a source schema template file to configure a\
        \ source's account attributes.\n\nTo retrieve the file to modify and upload,\
        \ log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources**\
        \ -> **`{SourceName}`** -> **Import Data** -> **Account Schema** -> **Options**\
        \ -> **Download Schema**\n\n>**NOTE: This API is designated only for Delimited\
        \ File sources.**"
      operationId: importAccountsSchema
      parameters:
      - description: The Source id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/putPasswordDictionary_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: Successfully uploaded the file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:source-schema:manage
      summary: Uploads source accounts schema template
      tags:
      - Sources
  /sources/{id}/schemas/entitlements:
    get:
      description: |-
        This API downloads the CSV schema that defines the entitlement attributes on a source.

        >**NOTE: This API is designated only for Delimited File sources.**
      operationId: getEntitlementsSchema
      parameters:
      - description: The Source id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      - description: Name of entitlement schema
        example: ?schemaName=group
        in: query
        name: schemaName
        schema:
          type: string
      responses:
        "200":
          content:
            text/csv:
              example: "id,name,displayName,created,description,modified,entitlements,groups,permissions"
          description: Successfully downloaded the file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:source-schema:read
      summary: Downloads source entitlements schema template
      tags:
      - Sources
    post:
      description: "This API uploads a source schema template file to configure a\
        \ source's entitlement attributes.\n\nTo retrieve the file to modify and upload,\
        \ log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources**\
        \ -> **`{SourceName}`** -> **Import Data** -> **Import Entitlements** -> **Download**\n\
        \n>**NOTE: This API is designated only for Delimited File sources.**"
      operationId: importEntitlementsSchema
      parameters:
      - description: The Source id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      - description: Name of entitlement schema
        example: ?schemaName=group
        in: query
        name: schemaName
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/putPasswordDictionary_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: Successfully uploaded the file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:source-schema:manage
      summary: Uploads source entitlements schema template
      tags:
      - Sources
  /sources/{sourceId}/upload-connector-file:
    post:
      description: This uploads a supplemental source connector file (like jdbc driver
        jars) to a source's S3 bucket. This also sends ETS and Audit events.
      operationId: importConnectorFile
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/putPasswordDictionary_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: Uploaded the file successfully and sent all post-upload events
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sources-admin:manage
      summary: Upload connector file to source
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /sources/{sourceId}/connections:
    get:
      description: "Use this API to get all dependent Profiles, Attributes, Applications\
        \ and Custom Transforms for a source by a specified ID in Identity Security\
        \ Cloud (ISC)."
      operationId: getSourceConnections
      parameters:
      - description: Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceConnectionsDto'
          description: Source Connections object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:sources:read
      summary: Get source connections by id
      tags:
      - Sources
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /tagged-objects:
    get:
      description: |-
        This API returns a list of all tagged objects.

        Any authenticated token may be used to call this API.
      operationId: listTaggedObjects
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **objectRef.id**: *eq, in*

          **objectRef.type**: *eq, in*

          **tagName**: *eq, in*
        example: tagName eq "BU_FINANCE"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaggedObject'
                type: array
          description: List of all tagged objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:tag:read
        - idn:tag:manage
      summary: List tagged objects
      tags:
      - Tagged Objects
    post:
      description: |-
        This adds a tag to an object.

        Any authenticated token may be used to call this API.
      operationId: setTagToObject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaggedObject'
        required: true
      responses:
        "201":
          description: Created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:tag:manage
      summary: Add tag to object
      tags:
      - Tagged Objects
  /tagged-objects/{type}:
    get:
      description: |-
        This API returns a list of all tagged objects by type.

        Any authenticated token may be used to call this API.
      operationId: listTaggedObjectsByType
      parameters:
      - description: The type of tagged object to retrieve.
        example: ROLE
        in: path
        name: type
        required: true
        schema:
          enum:
          - ACCESS_PROFILE
          - APPLICATION
          - CAMPAIGN
          - ENTITLEMENT
          - IDENTITY
          - ROLE
          - SOD_POLICY
          - SOURCE
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **objectRef.id**: *eq*

          **objectRef.type**: *eq*
        example: objectRef.id eq "2c91808568c529c60168cca6f90c1313"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaggedObject'
                type: array
          description: List of all tagged objects for specified type.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:tag:read
        - idn:tag:manage
      summary: List tagged objects by type
      tags:
      - Tagged Objects
  /tagged-objects/{type}/{id}:
    delete:
      description: Delete all tags from a tagged object.
      operationId: deleteTaggedObject
      parameters:
      - description: The type of object to delete tags from.
        example: ROLE
        in: path
        name: type
        required: true
        schema:
          enum:
          - ACCESS_PROFILE
          - APPLICATION
          - CAMPAIGN
          - ENTITLEMENT
          - IDENTITY
          - ROLE
          - SOD_POLICY
          - SOURCE
          type: string
      - description: The ID of the object to delete tags from.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listTaggedObjects
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:tag:manage
      summary: Delete object tags
      tags:
      - Tagged Objects
    get:
      description: This gets a tagged object for the specified type.
      operationId: getTaggedObject
      parameters:
      - description: The type of tagged object to retrieve.
        example: ROLE
        in: path
        name: type
        required: true
        schema:
          enum:
          - ACCESS_PROFILE
          - APPLICATION
          - CAMPAIGN
          - ENTITLEMENT
          - IDENTITY
          - ROLE
          - SOD_POLICY
          - SOURCE
          type: string
      - description: The ID of the object reference to retrieve.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listTaggedObjects
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaggedObject'
          description: Tagged object by type and ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:tag:read
        - idn:tag:manage
      summary: Get tagged object
      tags:
      - Tagged Objects
    put:
      description: This updates a tagged object for the specified type.
      operationId: putTaggedObject
      parameters:
      - description: The type of tagged object to update.
        example: ROLE
        in: path
        name: type
        required: true
        schema:
          enum:
          - ACCESS_PROFILE
          - APPLICATION
          - CAMPAIGN
          - ENTITLEMENT
          - IDENTITY
          - ROLE
          - SOD_POLICY
          - SOURCE
          type: string
      - description: The ID of the object reference to update.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listTaggedObjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaggedObject'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaggedObject'
          description: Tagged object by type and ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:tag:manage
      summary: Update tagged object
      tags:
      - Tagged Objects
  /tagged-objects/bulk-add:
    post:
      description: This API adds tags to multiple objects.
      operationId: setTagsToManyObjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkAddTaggedObject'
        description: "Supported object types are ACCESS_PROFILE, APPLICATION, CAMPAIGN,\
          \ ENTITLEMENT, IDENTITY, ROLE, SOD_POLICY, SOURCE."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BulkTaggedObjectResponse'
                type: array
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:tag:manage
      - applicationAuth:
        - idn:tag:manage
      summary: Tag multiple objects
      tags:
      - Tagged Objects
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
      - REPORT_ADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /tagged-objects/bulk-remove:
    post:
      description: This API removes tags from multiple objects.
      operationId: deleteTagsToManyObject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRemoveTaggedObject'
        description: "Supported object types are ACCESS_PROFILE, APPLICATION, CAMPAIGN,\
          \ ENTITLEMENT, IDENTITY, ROLE, SOD_POLICY, SOURCE."
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:tag:manage
      - applicationAuth:
        - idn:tag:manage
      summary: Remove tags from multiple objects
      tags:
      - Tagged Objects
      x-sailpoint-userLevels:
      - ORG_ADMIN
      - CERT_ADMIN
      - REPORT_ADMIN
      - ROLE_ADMIN
      - ROLE_SUBADMIN
      - SOURCE_ADMIN
      - SOURCE_SUBADMIN
  /transforms:
    get:
      description: Gets a list of all saved transform objects.
      operationId: listTransforms
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: Name of the transform to retrieve from the list.
        in: query
        name: name
        required: false
        schema:
          example: ExampleTransformName123
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **internal**: *eq*

          **name**: *eq, sw*
        example: name eq "Uppercase"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 2cd78adghjkja34jh2b1hkjhasuecd
                name: Timestamp To Date
                type: dateFormat
                attributes:
                  inputFormat: "MMM-dd-yyyy, HH:mm:ss.SSS"
                  outputFormat: yyyy/dd/MM
                internal: false
              - id: 2lkas8dhj4bkuakja77giih7l4ashh
                name: PrefixSubstring
                type: substring
                attributes:
                  begin: 0
                  end: 3
                internal: true
              schema:
                items:
                  $ref: '#/components/schemas/TransformRead'
                type: array
          description: A list of transforms matching the given criteria.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:transform:read
        - idn:transform:manage
      summary: List transforms
      tags:
      - Transforms
      x-sailpoint-userLevels:
      - ORG_ADMIN
    post:
      description: "Creates a new transform object immediately. By default, the internal\
        \ flag is set to false to indicate that this is a custom transform. Only SailPoint\
        \ employees have the ability to create a transform with internal set to true.\
        \ Newly created Transforms can be used in the Identity Profile mappings within\
        \ the UI."
      operationId: createTransform
      requestBody:
        content:
          application/json:
            example:
              name: Timestamp To Date
              type: dateFormat
              attributes:
                inputFormat: "MMM dd yyyy, HH:mm:ss.SSS"
                outputFormat: yyyy/dd/MM
            schema:
              $ref: '#/components/schemas/Transform'
        description: The transform to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformRead'
          description: Indicates the transform was successfully created and returns
            its representation.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:transform:manage
      summary: Create transform
      tags:
      - Transforms
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /transforms/{id}:
    delete:
      description: "Deletes the transform specified by the given ID. Attempting to\
        \ delete a transform that is used in one or more Identity Profile mappings\
        \ will result in an error. If this occurs, you must first remove the transform\
        \ from all mappings before deleting the transform."
      operationId: deleteTransform
      parameters:
      - description: ID of the transform to delete
        example: 2cd78adghjkja34jh2b1hkjhasuecd
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-sailpoint-resource-operation-id: listTransforms
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:transform:manage
      summary: Delete a transform
      tags:
      - Transforms
      x-sailpoint-userLevels:
      - ORG_ADMIN
    get:
      description: This API returns the transform specified by the given ID.
      operationId: getTransform
      parameters:
      - description: ID of the transform to retrieve
        example: 2cd78adghjkja34jh2b1hkjhasuecd
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-sailpoint-resource-operation-id: listTransforms
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformRead'
          description: Transform with the given ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:transform:read
        - idn:transform:manage
      summary: Transform by id
      tags:
      - Transforms
      x-sailpoint-userLevels:
      - ORG_ADMIN
    put:
      description: Replaces the transform specified by the given ID with the transform
        provided in the request body. Only the "attributes" field is mutable. Attempting
        to change other properties (ex. "name" and "type") will result in an error.
      operationId: updateTransform
      parameters:
      - description: ID of the transform to update
        example: 2cd78adghjkja34jh2b1hkjhasuecd
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
        x-sailpoint-resource-operation-id: listTransforms
      requestBody:
        content:
          application/json:
            example:
              name: Timestamp To Date
              type: dateFormat
              attributes:
                inputFormat: "MMM-dd-yyyy, HH:mm:ss.SSS"
                outputFormat: yyyy/dd/MM
            schema:
              $ref: '#/components/schemas/Transform'
        description: "The updated transform object. Must include \"name\", \"type\"\
          , and \"attributes\" fields, but \"name\" and \"type\" must not be modified."
      responses:
        "200":
          content:
            application/json:
              example:
                id: 2cd78adghjkja34jh2b1hkjhasuecd
                name: Timestamp To Date
                type: dateFormat
                attributes:
                  inputFormat: "MMM-dd-yyyy, HH:mm:ss.SSS"
                  outputFormat: yyyy/dd/MM
                internal: false
              schema:
                $ref: '#/components/schemas/TransformRead'
          description: Indicates the transform was successfully updated and returns
            its new representation.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:transform:manage
      summary: Update a transform
      tags:
      - Transforms
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /work-items:
    get:
      description: "This gets a collection of work items belonging to either the specified\
        \ user(admin required), or the current user."
      operationId: listWorkItems
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: ID of the work item owner.
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkItems'
                type: array
          description: List of work items
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List work items
      tags:
      - Work Items
  /work-items/completed:
    get:
      description: "This gets a collection of completed work items belonging to either\
        \ the specified user(admin required), or the current user."
      operationId: getCompletedWorkItems
      parameters:
      - description: "The id of the owner of the work item list being requested. \
          \ Either an admin, or the owning/current user must make this request."
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkItems'
                type: array
          description: List of completed work items.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Completed work items
      tags:
      - Work Items
  /work-items/count:
    get:
      description: "This gets a count of work items belonging to either the specified\
        \ user(admin required), or the current user."
      operationId: getCountWorkItems
      parameters:
      - description: ID of the work item owner.
        example: ef38f94347e94562b5bb8424a56397d8
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemsCount'
          description: List of work items
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Count work items
      tags:
      - Work Items
  /work-items/completed/count:
    get:
      description: "This gets a count of completed work items belonging to either\
        \ the specified user(admin required), or the current user."
      operationId: getCountCompletedWorkItems
      parameters:
      - description: ID of the work item owner.
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemsCount'
          description: List of work items
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Count completed work items
      tags:
      - Work Items
  /work-items/summary:
    get:
      description: "This gets a summary of work items belonging to either the specified\
        \ user(admin required), or the current user."
      operationId: getWorkItemsSummary
      parameters:
      - description: ID of the work item owner.
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemsSummary'
          description: List of work items
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Work items summary
      tags:
      - Work Items
  /work-items/{id}:
    get:
      description: "This gets the details of a Work Item belonging to either the specified\
        \ user(admin required), or the current user."
      operationId: getWorkItem
      parameters:
      - description: ID of the work item.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listWorkItems
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: The work item with the given ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get a work item
      tags:
      - Work Items
    post:
      description: "This API completes a work item. Either an admin, or the owning/current\
        \ user must make this request."
      operationId: completeWorkItem
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listWorkItems
      requestBody:
        content:
          application/json:
            schema:
              nullable: true
              type: string
        description: Body is the request payload to create form definition request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A WorkItems object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Complete a work item
      tags:
      - Work Items
  /work-items/{id}/forward:
    post:
      description: "This API forwards a work item to a new owner. Either an admin,\
        \ or the owning/current user must make this request. Accessible to work-item\
        \ Owner, ORG_ADMIN, REPORT_ADMIN, ROLE_ADMIN, ROLE_SUBADMIN, SOURCE_ADMIN,\
        \ SOURCE_SUBADMIN."
      operationId: sendWorkItemForward
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listWorkItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkItemForward'
        required: true
      responses:
        "200":
          description: "Success, but no data is returned."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:work-item:update
      summary: Forward a work item
      tags:
      - Work Items
  /work-items/{id}/approve/{approvalItemId}:
    post:
      description: "This API approves an Approval Item. Either an admin, or the owning/current\
        \ user must make this request."
      operationId: approveApprovalItem
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listWorkItems
      - description: The ID of the approval item.
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: path
        name: approvalItemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Approve an approval item
      tags:
      - Work Items
  /work-items/{id}/reject/{approvalItemId}:
    post:
      description: "This API rejects an Approval Item. Either an admin, or the owning/current\
        \ user must make this request."
      operationId: rejectApprovalItem
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listWorkItems
      - description: The ID of the approval item.
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: path
        name: approvalItemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Reject an approval item
      tags:
      - Work Items
  /work-items/bulk-approve/{id}:
    post:
      description: "This API bulk approves Approval Items. Either an admin, or the\
        \ owning/current user must make this request."
      operationId: approveApprovalItemsInBulk
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listWorkItems
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Bulk approve approval items
      tags:
      - Work Items
  /work-items/bulk-reject/{id}:
    post:
      description: "This API bulk rejects Approval Items. Either an admin, or the\
        \ owning/current user must make this request."
      operationId: rejectApprovalItemsInBulk
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listWorkItems
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Bulk reject approval items
      tags:
      - Work Items
  /work-items/{id}/submit-account-selection:
    post:
      description: "This API submits account selections. Either an admin, or the owning/current\
        \ user must make this request."
      operationId: submitAccountSelection
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listWorkItems
      requestBody:
        content:
          application/json:
            example:
              fieldName: fieldValue
            schema:
              additionalProperties: true
              type: object
        description: "Account Selection Data map, keyed on fieldName"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Submit account selections
      tags:
      - Work Items
  /workflows:
    get:
      description: List all workflows in the tenant.
      operationId: listWorkflows
      parameters:
      - description: Trigger ID
        in: query
        name: triggerId
        required: false
        schema:
          example: idn:identity-created
          type: string
      - description: Connector Instance ID
        in: query
        name: connectorInstanceId
        required: false
        schema:
          example: 28541fec-bb81-4ad4-88ef-0f7d213adcad
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Workflow'
                type: array
          description: List of workflows
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:read
      summary: List workflows
      tags:
      - Workflows
      x-sailpoint-userLevels:
      - ORG_ADMIN
    post:
      description: Create a new workflow with the desired trigger and steps specified
        in the request body.
      operationId: createWorkflow
      requestBody:
        content:
          application/json:
            examples:
              Event Trigger:
                description: Workflow initiated by an event trigger
                value:
                  name: Send Email
                  owner:
                    type: IDENTITY
                    id: 2c91808568c529c60168cca6f90c1313
                    name: William Wilson
                  description: Send an email to the identity who's attributes changed.
                  definition:
                    start: Send Email Test
                    steps:
                      Send Email:
                        actionId: sp:send-email
                        attributes:
                          body: This is a test
                          from: sailpoint@sailpoint.com
                          recipientId.$: $.identity.id
                          subject: test
                        nextStep: success
                        selectResult: null
                        type: action
                      success:
                        type: success
                  enabled: false
                  trigger:
                    type: EVENT
                    attributes:
                      id: idn:identity-attributes-changed
                      filter: "$.changes[?(@.attribute == 'manager')]"
              Scheduled Trigger:
                description: Workflow initiated by a scheduled trigger
                value:
                  name: Send Email
                  owner:
                    type: IDENTITY
                    id: 2c91808568c529c60168cca6f90c1313
                    name: William Wilson
                  description: Send an email to the identity who's attributes changed.
                  definition:
                    start: Send Email Test
                    steps:
                      Send Email:
                        actionId: sp:send-email
                        attributes:
                          body: This is a test
                          from: sailpoint@sailpoint.com
                          recipientId.$: $.identity.id
                          subject: test
                        nextStep: success
                        selectResult: null
                        type: action
                      success:
                        type: success
                  enabled: false
                  trigger:
                    type: SCHEDULED
                    attributes:
                      cronString: 0 * */3 */5 *
              External Trigger:
                description: Workflow initiated by an external trigger
                value:
                  name: Send Email
                  owner:
                    type: IDENTITY
                    id: 2c91808568c529c60168cca6f90c1313
                    name: William Wilson
                  description: Send an email to the identity whose attributes changed.
                  definition:
                    start: Send Email Test
                    steps:
                      Send Email:
                        actionId: sp:send-email
                        attributes:
                          body: This is a test
                          from: sailpoint@sailpoint.com
                          recipientId.$: $.identity.id
                          subject: test
                        nextStep: success
                        selectResult: null
                        type: action
                      success:
                        type: success
                  enabled: false
                  trigger:
                    type: EXTERNAL
                    attributes:
                      name: search-and-notify
                      description: Run a search and notify the results
            schema:
              $ref: '#/components/schemas/createWorkflow_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: The Workflow object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:manage
      summary: Create workflow
      tags:
      - Workflows
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /workflows/{id}:
    delete:
      description: Delete a workflow.  **Enabled workflows cannot be deleted**.  They
        must first be disabled.
      operationId: deleteWorkflow
      parameters:
      - description: Id of the Workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
        x-sailpoint-resource-operation-id: listWorkflows
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:manage
      summary: Delete workflow by id
      tags:
      - Workflows
      x-sailpoint-userLevels:
      - ORG_ADMIN
    get:
      description: Get a single workflow by id.
      operationId: getWorkflow
      parameters:
      - description: Id of the workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
        x-sailpoint-resource-operation-id: listWorkflows
      - description: disable workflow metrics
        example: false
        in: query
        name: workflowMetrics
        required: false
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: The workflow object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:read
      summary: Get workflow by id
      tags:
      - Workflows
      x-sailpoint-userLevels:
      - ORG_ADMIN
    patch:
      description: "Partially update an existing Workflow using [JSON Patch](https://tools.ietf.org/html/rfc6902)\
        \ syntax."
      operationId: patchWorkflow
      parameters:
      - description: Id of the Workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
        x-sailpoint-resource-operation-id: listWorkflows
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Update all patchable fields:
                description: Demonstrate how to update each patchable field in one
                  PATCH request.
                value:
                - op: replace
                  path: /name
                  value: Send Email
                - op: replace
                  path: /owner
                  value:
                    type: IDENTITY
                    id: 2c91808568c529c60168cca6f90c1313
                    name: William Wilson
                - op: replace
                  path: /description
                  value: Send an email to the identity who's attributes changed.
                - op: replace
                  path: /enabled
                  value: false
                - op: replace
                  path: /definition
                  value:
                    start: Send Email Test
                    steps:
                      Send Email:
                        actionId: sp:send-email
                        attributes:
                          body: This is a test
                          from: sailpoint@sailpoint.com
                          recipientId.$: $.identity.id
                          subject: test
                        nextStep: success
                        selectResult: null
                        type: action
                      success:
                        type: success
                - op: replace
                  path: /trigger
                  value:
                    type: EVENT
                    attributes:
                      id: idn:identity-attributes-changed
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: The Workflow object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:manage
      summary: Patch workflow
      tags:
      - Workflows
      x-sailpoint-userLevels:
      - ORG_ADMIN
    put:
      description: Perform a full update of a workflow.  The updated workflow object
        is returned in the response.
      operationId: putWorkflow
      parameters:
      - description: Id of the Workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
        x-sailpoint-resource-operation-id: listWorkflows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: The Workflow object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:manage
      summary: Update workflow
      tags:
      - Workflows
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /workflows/{id}/test:
    post:
      description: |
        :::info

        Workflow must be disabled in order to use this endpoint.

        :::

        Test a workflow with the provided input data.  The input data should resemble the input that the trigger will send the workflow.  See the [event trigger documentation](https://developer.sailpoint.com/idn/docs/event-triggers/available) for an example input for the trigger that initiates this workflow.

        This endpoint will return an execution ID, which can be used to lookup more information about the execution using the `Get a Workflow Execution` endpoint.

        **This will cause a live run of the workflow, which could result in unintended modifications to your IDN tenant.**
      operationId: testWorkflow
      parameters:
      - description: Id of the workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
        x-sailpoint-resource-operation-id: listWorkflows
      requestBody:
        content:
          application/json:
            examples:
              Identity Attributes Changed:
                description: Identity Attributes Changed Trigger Input
                value:
                  input:
                    identity:
                      id: ee769173319b41d19ccec6cea52f237b
                      name: john.doe
                      type: IDENTITY
                    changes:
                    - attribute: department
                      oldValue: sales
                      newValue: marketing
                    - attribute: manager
                      oldValue:
                        id: ee769173319b41d19ccec6c235423237b
                        name: nice.guy
                        type: IDENTITY
                      newValue:
                        id: ee769173319b41d19ccec6c235423236c
                        name: mean.guy
                        type: IDENTITY
                    - attribute: email
                      oldValue: john.doe@hotmail.com
                      newValue: john.doe@gmail.com
            schema:
              $ref: '#/components/schemas/testWorkflow_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/testWorkflow_200_response'
          description: The Workflow object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow-execute:external
      summary: Test workflow by id
      tags:
      - Workflows
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /workflows/{id}/executions:
    get:
      description: |-
        Use this API to list a specified workflow's executions. Workflow executions are available for up to 90 days before being archived. By default, you can get a maximum of 250 executions. To get executions past the first 250 records, you can do the following:
        1. Use the [Get Workflows](https://developer.sailpoint.com/idn/api/beta/list-workflows) endpoint to get your workflows.
        2. Get your workflow ID from the response.
        3. You can then do either of the following:

          - Filter to find relevant workflow executions.
          For example, you can filter for failed workflow executions: `GET /workflows/:workflowID/executions?filters=status eq "Failed"`

          - Paginate through results with the `offset` parameter.
          For example, you can page through 50 executions per page and use that as a way to get to the records past the first 250.
          Refer to [Paginating Results](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results) for more information about the query parameters you can use to achieve pagination.
      operationId: getWorkflowExecutions
      parameters:
      - description: Workflow ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **start_time**: *eq, lt, le, gt, ge*

          **status**: *eq*
        example: status eq "Failed"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowExecution'
                type: array
          description: List of workflow executions for the specified workflow.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:read
      summary: List workflow executions
      tags:
      - Workflows
  /workflow-executions/{id}:
    get:
      description: "Get a single workflow execution. Workflow executions are available\
        \ for up to 90 days before being archived. If you attempt to access a workflow\
        \ execution that has been archived, you will receive a \"404 Not Found\" response."
      operationId: getWorkflowExecution
      parameters:
      - description: Workflow execution ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
        x-sailpoint-resource-operation-id: listWorkflows
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: ../../schemas/workflows/WorkflowExecution.yaml
                type: object
          description: Workflow execution.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:read
      summary: Get workflow execution
      tags:
      - Workflows
      x-sailpoint-userLevels:
      - ORG_ADMIN
  /workflow-executions/{id}/history:
    get:
      description: "Get a detailed history of a single workflow execution.  Workflow\
        \ executions are available for up to 90 days before being archived.  If you\
        \ attempt to access a workflow execution that has been archived, you will\
        \ receive a 404 Not Found."
      operationId: getWorkflowExecutionHistory
      parameters:
      - description: Id of the workflow execution
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowExecutionEvent'
                type: array
          description: List of workflow execution events for the given workflow execution
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:read
      summary: Get workflow execution history
      tags:
      - Workflows
  /workflow-executions/{id}/cancel:
    post:
      description: Use this API to cancel a running workflow execution.
      operationId: cancelWorkflowExecution
      parameters:
      - description: The workflow execution ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow-execute:external
      summary: Cancel workflow execution by id
      tags:
      - Workflows
  /workflow-library:
    get:
      description: "This lists all triggers, actions, and operators in the library"
      externalDocs:
        description: Additional documentation for workflows
        url: https://documentation.sailpoint.com/saas/help/workflows/workflow-steps.html
      operationId: listCompleteWorkflowLibrary
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listCompleteWorkflowLibrary_200_response_inner'
                type: array
          description: List of workflow steps
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:read
      summary: List complete workflow library
      tags:
      - Workflows
  /workflow-library/actions:
    get:
      description: This lists the workflow actions available to you.
      externalDocs:
        description: Additional documentation for each action
        url: https://documentation.sailpoint.com/saas/help/workflows/workflow-steps.html#actions
      operationId: listWorkflowLibraryActions
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq*
        example: id eq "sp:create-campaign"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowLibraryAction'
                type: array
          description: List of workflow actions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:read
      summary: List workflow library actions
      tags:
      - Workflows
  /workflow-library/triggers:
    get:
      description: This lists the workflow triggers available to you
      externalDocs:
        description: Additional documentation for each trigger
        url: https://documentation.sailpoint.com/saas/help/workflows/workflow-steps.html#triggers
      operationId: listWorkflowLibraryTriggers
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq*
        example: id eq "idn:identity-attributes-changed"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowLibraryTrigger'
                type: array
          description: List of workflow triggers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:read
      summary: List workflow library triggers
      tags:
      - Workflows
  /workflow-library/operators:
    get:
      description: This lists the workflow operators available to you
      operationId: listWorkflowLibraryOperators
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowLibraryOperator'
                type: array
          description: List of workflow operators
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:read
      summary: List workflow library operators
      tags:
      - Workflows
  /workflows/{id}/external/oauth-clients:
    post:
      description: "Create OAuth client ID, client secret, and callback URL for use\
        \ in an external trigger.  External triggers will need this information to\
        \ generate an access token to authenticate to the callback URL and submit\
        \ a trigger payload that will initiate the workflow."
      operationId: createWorkflowExternalTrigger
      parameters:
      - description: Id of the workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowOAuthClient'
          description: The OAuth Client object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow:manage
      summary: Generate external trigger oauth client
      tags:
      - Workflows
  /workflows/execute/external/{id}:
    post:
      description: This endpoint allows a service outside of IdentityNow to initiate
        a workflow that uses the "External Trigger" step.  The external service will
        invoke this endpoint with the input data it wants to send to the workflow
        in the body.
      operationId: createExternalExecuteWorkflow
      parameters:
      - description: Id of the workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createExternalExecuteWorkflow_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createExternalExecuteWorkflow_200_response'
          description: The Workflow object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow-execute:external
      summary: Execute workflow via external trigger
      tags:
      - Workflows
  /workflows/execute/external/{id}/test:
    post:
      description: "Validate a workflow with an \"External Trigger\" can receive input.\
        \  The response includes the input that the workflow received, which can be\
        \ used to validate that the input is intact when it reaches the workflow."
      operationId: testExternalExecuteWorkflow
      parameters:
      - description: Id of the workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/testExternalExecuteWorkflow_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/testExternalExecuteWorkflow_200_response'
          description: Responds with the test input
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - sp:workflow-execute:external
      summary: Test workflow via external trigger
      tags:
      - Workflows
  /source-usages/{sourceId}/status:
    get:
      description: This API returns the status of the source usage insights setup
        by IDN source ID.
      operationId: getStatusBySourceId
      parameters:
      - description: ID of IDN source
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceUsageStatus'
          description: Status of the source usage insights setup by IDN source ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts:read
      summary: Finds status of source usage
      tags:
      - Source Usages
  /source-usages/{sourceId}/summaries:
    get:
      description: This API returns a summary of source usage insights for past 12
        months.
      operationId: getUsagesBySourceId
      parameters:
      - description: ID of IDN source
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listSources
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **date**
        example: -date
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SourceUsage'
                type: array
          description: Summary of source usage insights for past 12 months.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts:read
      summary: Returns source usage insights
      tags:
      - Source Usages
  /account-usages/{accountId}/summaries:
    get:
      description: This API returns a summary of account usage insights for past 12
        months.
      operationId: getUsagesByAccountId
      parameters:
      - description: ID of IDN account
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: accountId
        required: true
        schema:
          type: string
        x-sailpoint-resource-operation-id: listAccounts
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **date**
        example: -date
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccountUsage'
                type: array
          description: Summary of account usage insights for past 12 months.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:accounts:read
      summary: Returns account usage insights
      tags:
      - Account Usages
  /manual-discover-applications-template:
    get:
      description: |
        Download an example CSV file with two columns `application_name` and `description`.  The CSV file contains a single row with the values 'Example Application' and 'Example Description'.

        The downloaded template is specifically designed for use with the `/manual-discover-applications` endpoint.
      operationId: getManualDiscoverApplicationsCsvTemplate
      responses:
        "200":
          content:
            text/csv:
              example: |
                application_name,description
                Example Application,Example Description
              schema:
                $ref: '#/components/schemas/ManualDiscoverApplicationsTemplate'
          description: A CSV file download was successful.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:application-discovery:read
      summary: Download csv template for discovery
      tags:
      - Application Discovery
  /manual-discover-applications:
    post:
      description: "Uploading a CSV file with application data for manual correlation\
        \ to specific ISC connectors. \nIf a suitable ISC connector is unavailable,\
        \ the system will recommend generic connectors instead."
      operationId: sendManualDiscoverApplicationsCsvTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ManualDiscoverApplications'
      responses:
        "200":
          description: The CSV has been successfully processed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:application-discovery:write
      summary: Upload csv to discover applications
      tags:
      - Application Discovery
  /discovered-applications:
    get:
      description: |
        Get a list of applications that have been identified within the environment. This includes details such as application names, discovery dates, potential correlated saas_vendors and related suggested connectors.
      operationId: getDiscoveredApplications
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: "Determines whether slim, or increased level of detail is provided\
          \ for each discovered application in the returned list. SLIM is the default\
          \ behavior."
        example: FULL
        in: query
        name: detail
        schema:
          enum:
          - SLIM
          - FULL
          type: string
      - description: "Filter results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)\n\
          \  \n  \nFiltering is supported for the following fields and operators:\n\
          \n**name**: *eq, sw, co*\n\n**description**: *eq, sw, co*\n\n**createdAtStart**:\
          \ *eq, le, ge*\n\n**createdAtEnd**: *eq, le, ge*\n\n**discoveredAtStart**:\
          \ *eq, le, ge*\n\n**discoveredAtEnd**: *eq, le, ge*\n\n**discoverySource**:\
          \ *eq, in*\n"
        example: "name eq \"Okta\" and description co \"Okta\" and discoverySource\
          \ in (\"csv\", \"Okta Saas\")"
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, description, discoveredAt, discoverySource**
        example: name
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Slim Discovered Application:
                  $ref: '#/components/examples/SlimDiscoveredApplications'
                Discovered Application:
                  $ref: '#/components/examples/FullDiscoveredApplications'
              schema:
                items:
                  $ref: '#/components/schemas/getDiscoveredApplications_200_response_inner'
                type: array
          description: "List of discovered applications. By default, the API returns\
            \ a list of SLIM discovered applications."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:application-discovery:read
      summary: Get discovered applications for tenant
      tags:
      - Application Discovery
  /vendor-connector-mappings:
    delete:
      description: |
        Soft delete a mapping between a SaaS vendor and an ISC connector, removing the established correlation.
      operationId: deleteVendorConnectorMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorConnectorMapping'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteVendorConnectorMapping_200_response'
          description: Successfully deleted the specified vendor connector mapping.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:application-discovery:write
      summary: Delete vendor connector mapping
      tags:
      - Vendor Connector Mappings
    get:
      description: |
        Get a list of mappings between SaaS vendors and ISC connectors, detailing the connections established for correlation.
      operationId: getVendorConnectorMappings
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                - id: 78733556-9ea3-4f59-bf69-e5cd92b011b4
                  vendor: Example Vendor
                  connector: Example Connector
                  createdAt: 2024-03-13T12:56:19.391294Z
                  createdBy: admin
                  updatedAt:
                    Time: 2024-03-14T12:56:19.391294Z
                    Valid: true
                  updatedBy:
                    String: user-67891
                    Valid: true
                  deletedAt:
                    Time: 0001-01-01T00:00:00Z
                    Valid: false
                  deletedBy:
                    String: ""
                    Valid: false
                - id: 78733556-9ea3-4f59-bf69-e5cd92b011b5
                  vendor: Another Corporation
                  connector: Another Connector
                  createdAt: 2024-04-13T11:46:19.391294Z
                  createdBy: admin
                  updatedAt:
                    Time: 0001-01-01T00:00:00Z
                    Valid: false
                  updatedBy:
                    String: ""
                    Valid: false
                  deletedAt:
                    Time: 0001-01-01T00:00:00Z
                    Valid: false
                  deletedBy:
                    String: ""
                    Valid: false
                items:
                  $ref: '#/components/schemas/VendorConnectorMapping'
                type: array
          description: Successfully retrieved list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getVendorConnectorMappings_405_response'
          description: "Method Not Allowed - indicates that the server knows the request\
            \ method, but the target resource doesn't support this method."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:application-discovery:read
      summary: List vendor connector mappings
      tags:
      - Vendor Connector Mappings
    post:
      description: |
        Create a new mapping between a SaaS vendor and an ISC connector to establish correlation paths.
      operationId: createVendorConnectorMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorConnectorMapping'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorConnectorMapping'
          description: Successfully created a new vendor connector mapping.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getVendorConnectorMappings_405_response'
          description: "Method Not Allowed - indicates that the server knows the request\
            \ method, but the target resource doesn't support this method."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - userAuth:
        - idn:application-discovery:write
      summary: Create vendor connector mapping
      tags:
      - Vendor Connector Mappings
components:
  examples:
    SlimCampaigns:
      description: List of Slim Campaigns that would result from not specifying *detail*
        or specifying SLIM
      value:
      - id: 2c918086719eec070171a7e3355a360a
        name: Manager Review
        description: A review of everyone's access by their manager.
        deadline: 2020-12-25T06:00:00.123Z
        type: MANAGER
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-08-02T19:00:27.731Z
        totalCertifications: 10
        completedCertifications: 3
        alerts:
        - level: ERROR
          localizations:
          - locale: en
            localeOrigin: DEFAULT
            text: Composite criterion must have children non-composite criterion must
              not.
      - id: 7e1a731e3fb845cfbe58112ba4673ee4
        name: Search Campaign
        description: Search Campaign Info
        deadline: 2022-07-26T15:42:44Z
        type: SEARCH
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-07-25T15:42:18.276Z
        totalCertifications: 5
        completedCertifications: 3
        alerts: null
      - id: 2c918086719eec070171a7e3355a412b
        name: AD Source Review
        description: A review of our AD source.
        deadline: 2020-12-25T06:00:00.123Z
        type: SOURCE_OWNER
        status: STAGED
        emailNotificationEnabled: true
        autoRevokeAllowed: false
        recommendationsEnabled: false
        correlatedStatus: CORRELATED
        created: 2022-07-27T17:04:19.027Z
        totalCertifications: 7
        completedCertifications: 3
        alerts:
        - level: WARN
          localizations:
          - locale: en
            localeOrigin: DEFAULT
            text: Composite criterion is in wrong format.
      - id: 3b2e2e5821e84127b6d693d41c40623b
        name: Role Composition Campaign
        description: A review done by a role owner.
        deadline: 2020-12-25T06:00:00.468Z
        type: ROLE_COMPOSITION
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-08-02T20:29:51.065Z
        totalCertifications: 1
        completedCertifications: 1
        alerts: null
    FullCampaigns:
      description: List of Campaigns that would result from specifying *detail* as
        FULL
      value:
      - id: 078696a575e045c68d6722ccdb9f101d
        name: Role Composition Campaign
        description: A review done by a role owner.
        deadline: 2020-12-25T06:00:00.468Z
        type: ROLE_COMPOSITION
        status: ERROR
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        modified: 2022-08-02T20:29:51.331Z
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Role Composition Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        searchCampaignInfo: null
        roleCompositionCampaignInfo:
          remediatorRef:
            type: IDENTITY
            id: 7ec252acbd4245548bc25df22348cb75
            name: SailPoint Support
          reviewerId: null
          reviewer: null
          roleIds:
          - b15d609fc5c8434b865fe552315fda8f
          query: null
          description: null
        sourcesWithOrphanEntitlements: null
        mandatoryCommentRequirement: NO_DECISIONS
      - id: 1be8fc1103914bf0a4e14e316b6a7b7c
        name: Manager Review
        description: A review of everyone's access by their manager.
        deadline: 2020-12-25T06:00:00.468Z
        type: MANAGER
        status: STAGED
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        modified: 2022-08-02T19:00:34.391Z
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Manager Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        searchCampaignInfo: null
        roleCompositionCampaignInfo: null
        sourcesWithOrphanEntitlements: []
        mandatoryCommentRequirement: NO_DECISIONS
      - id: 7e1a731e3fb845cfbe58112ba4673ee4
        name: Search Campaign
        description: Search Campaign for Identities
        deadline: 2022-07-26T15:42:44Z
        type: SEARCH
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        modified: 2022-07-25T15:42:53.718Z
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Search Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        searchCampaignInfo:
          type: IDENTITY
          description: Example of Search Campaign
          reviewer:
            type: IDENTITY
            id: 7ec252acbd4245548bc25df22348cb75
            name: null
          query: user
          identityIds: null
          accessConstraints: []
        roleCompositionCampaignInfo: null
        sourcesWithOrphanEntitlements: []
        mandatoryCommentRequirement: NO_DECISIONS
      - id: ad3cf3dd50394b1bad646de4bc51b999
        name: Source Owner Campaign
        description: Example for Source Owner Campaign
        deadline: 2022-08-10T17:09:02Z
        type: SOURCE_OWNER
        status: ACTIVE
        emailNotificationEnabled: true
        autoRevokeAllowed: false
        recommendationsEnabled: false
        modified: 2022-07-27T17:09:13.925Z
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Source Owner Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo:
          sourceIds:
          - 2c91808781fd5aea01821200dc88318e
        searchCampaignInfo: null
        roleCompositionCampaignInfo: null
        sourcesWithOrphanEntitlements: []
        correlatedStatus: CORRELATED
        mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignManager:
      value:
        name: Manager Review
        description: A review of everyone's access by their manager.
        deadline: 2020-12-25T06:00:00.468Z
        type: MANAGER
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        filter:
          type: CAMPAIGN_FILTER
          id: 0c46fb26c6b20967a55517ee90d15b93
        mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignSearch:
      value:
        name: Search Campaign
        description: Search Campaign
        deadline: 2020-12-25T06:00:00.468Z
        type: SEARCH
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        filter:
          type: CAMPAIGN_FILTER
          id: 0c46fb26c6b20967a55517ee90d15b93
        searchCampaignInfo:
          type: ACCESS
          query: user
        mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignSourceOwner:
      value:
        name: Source Owner
        description: Source Owner Info
        deadline: 2020-12-25T06:00:00.468Z
        type: SOURCE_OWNER
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        filter:
          type: CAMPAIGN_FILTER
          id: 0c46fb26c6b20967a55517ee90d15b93
        sourceOwnerCampaignInfo:
          sourceIds:
          - 612b31b1a0f04aaf83123bdb80e70db6
        correlatedStatus: CORRELATED
        mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignRoleComposition:
      value:
        name: Role Composition Campaign
        description: A review done by a role owner.
        deadline: 2020-12-25T06:00:00.468Z
        type: ROLE_COMPOSITION
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        filter:
          type: CAMPAIGN_FILTER
          id: 0c46fb26c6b20967a55517ee90d15b93
        roleCompositionCampaignInfo:
          remediatorRef:
            type: IDENTITY
            id: 7ec252acbd4245548bc25df22348cb75
            name: SailPoint Support
          roleIds:
          - b15d609fc5c8434b865fe552315fda8f
        mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignMachineAccount:
      value:
        name: Machine Account Owner Campaign
        description: A review done by a Machine Account's owner.
        deadline: 2024-12-25T06:00:00.468Z
        type: MACHINE_ACCOUNT
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        filter:
          type: CAMPAIGN_FILTER
          id: 0c46fb26c6b20967a55517ee90d15b93
        machineAccountCampaignInfo:
          sourceIds:
          - d988f117b7624a16ab0b64c439d5dbb8
          reviewerType: ACCOUNT_OWNER
    FullCampaignManager:
      value:
        id: 5594f43b76804a6980ece5fdccf74be7
        name: Manager Review
        description: A review of everyone's access by their manager.
        deadline: 2020-12-25T06:00:00.468Z
        type: MANAGER
        status: PENDING
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-08-02T20:21:18.421Z
        modified: null
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Manager Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        searchCampaignInfo: null
        roleCompositionCampaignInfo: null
        machineAccountCampaignInfo: null
        alerts: null
        totalCertifications: 0
        completedCertifications: 0
        sourcesWithOrphanEntitlements: null
        mandatoryCommentRequirement: NO_DECISIONS
    FullCampaignSearch:
      value:
        id: ec041831cb2147778b594feb9d8db44a
        name: Search Campaign
        description: Search Campaign
        deadline: 2020-12-25T06:00:00.468Z
        type: SEARCH
        status: PENDING
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-08-03T13:54:34.344Z
        modified: null
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Search Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        searchCampaignInfo:
          type: ACCESS
          description: user
          reviewer:
            type: IDENTITY
            id: 7ec252acbd4245548bc25df22348cb75
            name: null
          query: user
          identityIds: null
          accessConstraints: []
        roleCompositionCampaignInfo: null
        machineAccountCampaignInfo: null
        alerts: null
        totalCertifications: 0
        completedCertifications: 0
        sourcesWithOrphanEntitlements: null
        mandatoryCommentRequirement: NO_DECISIONS
    FullCampaignSourceOwner:
      value:
        id: fd7b76ba4ea042de8a9414aa12fc977a
        name: Source Owner
        description: Source Owner Info
        deadline: 2020-12-25T06:00:00.468Z
        type: SOURCE_OWNER
        status: PENDING
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-08-03T13:34:19.541Z
        modified: null
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Source Owner Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        sourceIds:
        - 612b31b1a0f04aaf83123bdb80e70db6
        searchCampaignInfo: null
        roleCompositionCampaignInfo: null
        machineAccountCampaignInfo: null
        alerts: null
        totalCertifications: 0
        completedCertifications: 0
        sourcesWithOrphanEntitlements: null
        correlatedStatus: CORRELATED
        mandatoryCommentRequirement: NO_DECISIONS
    FullCampaignRoleComposition:
      value:
        id: 3b2e2e5821e84127b6d693d41c40623b
        name: Role Composition Campaign
        description: A review done by a role owner.
        deadline: 2020-12-25T06:00:00.468Z
        type: ROLE_COMPOSITION
        status: PENDING
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-08-02T20:30:46.083Z
        modified: null
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Role Composition Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        searchCampaignInfo: null
        roleCompositionCampaignInfo:
          remediatorRef:
            type: IDENTITY
            id: 7ec252acbd4245548bc25df22348cb75
            name: SailPoint Support
          reviewerId: null
          reviewer: null
          roleIds:
          - b15d609fc5c8434b865fe552315fda8f
          query: null
          description: null
        alerts: null
        totalCertifications: 0
        completedCertifications: 0
        sourcesWithOrphanEntitlements: null
        machineAccountCampaignInfo: null
        mandatoryCommentRequirement: NO_DECISIONS
    FullCampaignMachineAccount:
      value:
        id: 3e9ff3d6555e4721b74695d5b578e847
        name: Machine Account Owner Campaign
        description: A review done by a machine account's owner.
        deadline: 2024-05-07T19:43:38.186Z
        type: MACHINE_ACCOUNT
        status: PENDING
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2024-04-23T19:43:38.355Z
        modified: 2024-04-23T19:43:38.355Z
        filter: null
        sunsetCommentsRequired: true
        mandatoryCommentRequirement: NO_DECISIONS
        sourceOwnerCampaignInfo: null
        searchCampaignInfo: null
        roleCompositionCampaignInfo: null
        totalCertifications: 0
        completedCertifications: 0
        alerts: null
        correlatedStatus: CORRELATED
        sourcesWithOrphanEntitlements: []
        machineAccountCampaignInfo:
          sourceIds:
          - d988f117b7624a16ab0b64c439d5dbb8
          reviewerType: ACCOUNT_OWNER
    SlimCampaignManager:
      value:
        id: 2c918086719eec070171a7e3355a360a
        name: Manager Review
        description: A review of everyone's access by their manager.
        deadline: 2020-12-25T06:00:00.123Z
        type: MANAGER
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
    SlimCampaignSearch:
      value:
        id: 7e1a731e3fb845cfbe58112ba4673ee4
        name: Search Campaign
        description: Search Campaign Info
        deadline: 2022-07-26T15:42:44Z
        type: SEARCH
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
    SlimCampaignSourceOwner:
      value:
        id: 2c918086719eec070171a7e3355a412b
        name: AD Source Review
        description: A review of our AD source.
        deadline: 2020-12-25T06:00:00.123Z
        type: SOURCE_OWNER
        status: STAGED
        emailNotificationEnabled: true
        autoRevokeAllowed: false
        recommendationsEnabled: false
        correlatedStatus: CORRELATED
    SlimCampaignRoleComposition:
      value:
        id: 3b2e2e5821e84127b6d693d41c40623b
        name: Role Composition Campaign
        description: A review done by a role owner.
        deadline: 2020-12-25T06:00:00.468Z
        type: ROLE_COMPOSITION
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
    CreateCampaignTemplateManager:
      description: "This creates a template that can be used to generate manager campaigns.\
        \ The campaigns will have a due date that is two weeks after their creation\
        \ date, and will be named \"{current date} Manager Review\" (e.g. \"2020-03-16\
        \ Manager Review\")."
      value:
        name: Manager Review
        description: A review of everyone's access by their manager.
        deadlineDuration: P2W
        campaign:
          name: Manager Review
          description: Review everyone's access.
          type: MANAGER
          filter:
            type: CAMPAIGN_FILTER
            id: e0adaae69852e8fe8b8a3d48e5ce757c
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignTemplateSearch:
      description: This creates a template that can be used to generate search access
        campaigns. The campaigns will cover the "reporter" access item for across
        all identities.
      value:
        name: Reporting Access Review
        description: A review of everyone's access to the reporting system.
        deadlineDuration: P2W
        campaign:
          name: Search Review
          description: Review everyone's access to the reporting system.
          type: SEARCH
          filter:
            type: CAMPAIGN_FILTER
            id: e0adaae69852e8fe8b8a3d48e5ce757c
          searchCampaignInfo:
            type: ACCESS
            query: "@access(name: (\"reporter\"))"
            description: Identities with reporting abilities
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignTemplateSourceOwner:
      description: "This creates a template that can be used to generate source owner\
        \ campaigns. The campaigns will have a due date that is one month after their\
        \ creation date, and will review one source."
      value:
        name: AD Source Review
        description: A review of our AD source.
        deadlineDuration: P1M
        campaign:
          name: Source Review
          description: Review everyone's access.
          type: SOURCE_OWNER
          filter:
            type: CAMPAIGN_FILTER
            id: e0adaae69852e8fe8b8a3d48e5ce757c
          sourceOwnerCampaignInfo:
            sourceIds:
            - 2c918084707deba501709d45ce4e5569
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          correlatedStatus: CORRELATED
          mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignTemplateRoleComposition:
      description: "This creates a template that can be used to generate role composition\
        \ campaigns. The campaigns will have a due date that is two weeks after their\
        \ creation date, and will be named \"{current date} Role Composition Review\"\
        \ (e.g. \"2020-03-16 Role Composition Review\")."
      value:
        name: Role Composition Review
        description: "A review of every role's access items, by the specified reviewer."
        deadlineDuration: P2W
        campaign:
          name: Role Composition Review
          description: Review all our roles.
          type: ROLE_COMPOSITION
          roleCompositionCampaignInfo:
            remediatorRef:
              type: IDENTITY
              id: 2c9180876ab2c053016ab6f65dfd5aaa
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          mandatoryCommentRequirement: NO_DECISIONS
    CampaignTemplateManager:
      value:
        id: e7dbec99d49349c8951bd84f58a05120
        name: Manager Review
        created: 2022-08-02T19:16:42.632Z
        modified: null
        description: A review of everyone's access by their manager.
        deadlineDuration: P14D
        ownerRef:
          email: support@testmail.identitysoon.com
          type: IDENTITY
          id: 7ec252acbd4245548bc25df22348cb75
          name: SailPoint Support
        scheduled: false
        campaign:
          created: null
          modified: null
          filter:
            type: CAMPAIGN_FILTER
            id: e0adaae69852e8fe8b8a3d48e5ce757c
            name: Test Manager Filter
          sunsetCommentsRequired: true
          sourceOwnerCampaignInfo: null
          searchCampaignInfo: null
          roleCompositionCampaignInfo: null
          alerts: null
          totalCertifications: null
          completedCertifications: null
          sourcesWithOrphanEntitlements: null
          id: null
          name: Manager Review
          description: Review everyone's access.
          deadline: null
          type: MANAGER
          status: null
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          correlatedStatus: CORRELATED
          mandatoryCommentRequirement: NO_DECISIONS
    CampaignTemplateSearch:
      value:
        id: b7e6459eed5247ac8b98a5fed81fe27f
        name: Reporting Access Review
        created: 2022-07-28T19:19:40.035Z
        modified: null
        description: A review of everyone's access to the reporting system.
        deadlineDuration: P14D
        ownerRef:
          email: support@testmail.identitysoon.com
          type: IDENTITY
          id: 7ec252acbd4245548bc25df22348cb75
          name: SailPoint Support
        scheduled: false
        campaign:
          created: null
          modified: null
          filter:
            type: CAMPAIGN_FILTER
            id: e0adaae69852e8fe8b8a3d48e5ce757c
            name: Test Search Filter
          sunsetCommentsRequired: true
          sourceOwnerCampaignInfo: null
          searchCampaignInfo:
            type: ACCESS
            description: Identities with reporting abilities
            reviewerId: null
            reviewer: null
            query: "@access(name: (\"reporter\"))"
            identityIds: null
            accessConstraints: []
          roleCompositionCampaignInfo: null
          alerts: null
          totalCertifications: null
          completedCertifications: null
          sourcesWithOrphanEntitlements: null
          id: null
          name: Search Campaign Review
          description: Review everyone's access to the reporting system.
          deadline: null
          type: SEARCH
          status: null
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          correlatedStatus: CORRELATED
          mandatoryCommentRequirement: NO_DECISIONS
    CampaignTemplateSourceOwner:
      value:
        id: b9f41bc69e7a4291b9de0630396d030d
        name: AD Source Review
        created: 2022-08-02T13:40:36.857Z
        modified: null
        description: A review of our AD source.
        deadlineDuration: P1M
        ownerRef:
          email: support@testmail.identitysoon.com
          type: IDENTITY
          id: 7ec252acbd4245548bc25df22348cb75
          name: SailPoint Support
        scheduled: false
        campaign:
          created: null
          modified: null
          filter:
            type: CAMPAIGN_FILTER
            id: e0adaae69852e8fe8b8a3d48e5ce757c
            name: Test Source Owner Filter
          sunsetCommentsRequired: true
          sourceOwnerCampaignInfo:
            sourceIds:
            - 2c918084707deba501709d45ce4e5569
          searchCampaignInfo: null
          roleCompositionCampaignInfo: null
          alerts: null
          totalCertifications: null
          completedCertifications: null
          sourcesWithOrphanEntitlements: null
          id: null
          name: AD Source Review
          description: Review everyone's access.
          deadline: null
          type: SOURCE_OWNER
          status: null
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          correlatedStatus: CORRELATED
          mandatoryCommentRequirement: NO_DECISIONS
    CampaignTemplateRoleComposition:
      value:
        id: b9f41bc69e7a4291b9de0630396d030d
        name: Campaign With Admin Role
        created: 2022-08-02T13:40:36.857Z
        modified: null
        description: Campaign With Admin Role
        deadlineDuration: null
        ownerRef:
          email: support@testmail.identitysoon.com
          type: IDENTITY
          id: 7ec252acbd4245548bc25df22348cb75
          name: SailPoint Support
        scheduled: false
        campaign:
          created: null
          modified: null
          filter: null
          sunsetCommentsRequired: true
          sourceOwnerCampaignInfo: null
          searchCampaignInfo: null
          roleCompositionCampaignInfo:
            remediatorRef:
              type: IDENTITY
              id: 7ec252acbd4245548bc25df22348cb75
              name: SailPoint Support
            reviewerId: null
            reviewer: null
            roleIds:
            - b15d609fc5c8434b865fe552315fda8f
            query: null
            description: null
          alerts: null
          totalCertifications: null
          completedCertifications: null
          sourcesWithOrphanEntitlements: null
          id: null
          name: Campaign With Admin Role
          description: Campaign With Admin Role
          deadline: null
          type: ROLE_COMPOSITION
          status: null
          emailNotificationEnabled: false
          autoRevokeAllowed: false
          recommendationsEnabled: false
          correlatedStatus: CORRELATED
          mandatoryCommentRequirement: NO_DECISIONS
    client-log-configuration-duration-minutes:
      summary: Duration minutes
      value:
        clientId: 3a38a51992e8445ab51a549c0a70ee66
        durationMinutes: 120
        rootLevel: INFO
        logLevels:
          sailpoint.connector.ADLDAPConnector: TRACE
          sailpoint.connector.JDBCConnector: DEBUG
    client-log-configuration-expiration:
      summary: Expiration
      value:
        clientId: 3a38a51992e8445ab51a549c0a70ee66
        expiration: 2024-11-06T01:31:08.013164Z
        rootLevel: INFO
        logLevels:
          sailpoint.connector.ADLDAPConnector: TRACE
          sailpoint.connector.JDBCConnector: DEBUG
    execute-scheduled:
      summary: Triggered by scheduled search
      value:
        scheduleId: 7a724640-0c17-4ce9-a8c3-4a89738459c8
    execute-test:
      summary: Triggered by ui test
      value:
        owner:
          type: IDENTITY
          id: 2c91808568c529c60168cca6f90c1313
        recipients:
        - type: IDENTITY
          id: 2c91808568c529c60168cca6f90c1313
    query-accessprofiles:
      summary: Query for access profiles
      value:
        indices:
        - accessprofiles
        query:
          query: requestable:true
    query-accountactivities:
      summary: Query for acccount activities
      value:
        indices:
        - accountactivities
        query:
          query: sources:"Active Directory"
    query-entitlements:
      summary: Query for entitlements
      value:
        indices:
        - entitlements
        query:
          query: source.name:Finance
    query-events:
      summary: Query for events
      value:
        indices:
        - events
        query:
          query: type:PROVISIONING
    query-identities:
      summary: Query for identities
      value:
        indices:
        - identities
        query:
          query: attributes.cloudLifecycleState:active
    query-roles:
      summary: Query for roles
      value:
        indices:
        - roles
        query:
          query: enabled:true
    query-fields:
      summary: Query with fields
      value:
        indices:
        - identities
        query:
          query: '"John Doe"'
          fields:
          - name
    query-timeZone:
      summary: Query with timezone
      value:
        indices:
        - identities
        query:
          query: "created: [2022-05-19T19:26:03.351Z TO now]"
          timeZone: America/Los_Angeles
    query-innerHit:
      summary: Query with innerhit
      value:
        indices:
        - identities
        query:
          query: '"John Doe"'
          innerHit:
            type: access
            query: source.name:"Active Directory"
    typeAheadQuery:
      summary: Typeahead query
      value:
        indices:
        - identities
        queryType: TYPEAHEAD
        typeAheadQuery:
          field: name
          query: Jo
          maxExpansions: 50
          size: 100
          sort: desc
          sortByValue: false
    typeAheadQuery-nestedType:
      summary: Typeahead query with nestedtype
      value:
        indices:
        - identities
        queryType: TYPEAHEAD
        typeAheadQuery:
          field: source.name
          nestedType: access
          query: Work
          maxExpansions: 50
          size: 100
          sort: desc
          sortByValue: false
    filter-exists:
      summary: Filter with exists
      value:
        indices:
        - identities
        query:
          query: attributes.city:Austin
        filters:
          attributes.personalEmail:
            type: EXISTS
            exclude: true
    filter-range:
      summary: Filter with range
      value:
        indices:
        - identities
        query:
          query: attributes.city:London
          timeZone: Europe/London
        filters:
          accessCount:
            type: RANGE
            range:
              lower:
                value: "3"
          created:
            type: RANGE
            range:
              lower:
                value: 2023-12-01
                inclusive: true
              upper:
                value: 2025-01-01
    filter-terms:
      summary: Filter with terms
      value:
        indices:
        - identities
        query:
          query: attributes.city:London
        filters:
          source.name:
            type: TERMS
            terms:
            - HR Employees
            - Corporate Active Directory
            exclude: true
          isManager:
            type: TERMS
            terms:
            - "true"
    accessProfiles:
      summary: A collection of access profiles
      value:
      - id: 13b856dd9a264206954b63ecbb57a853
        name: Cloud Eng
        description: Cloud Eng
        source:
          id: 5c71ff71195b4794a0b87e7cf36fb017
          name: Active Directory
        entitlements:
        - hasPermissions: false
          attribute: memberOf
          value: "CN=Cloud Engineering,DC=sailpoint,DC=com"
          schema: group
          privileged: false
          id: 7372eaddd75749bd89a2e76a363eb891
          name: Cloud Engineering
          description: Cloud Engineering
        entitlementCount: 1
        segments: []
        segmentCount: 0
        apps: []
        created: 2024-09-16T17:41:25Z
        modified: 2024-09-16T19:30:54Z
        synced: 2025-02-12T06:32:40.156Z
        enabled: true
        requestable: true
        requestCommentsRequired: false
        owner:
          id: ff8081815757d36a015757d42e56031e
          name: SailPoint Support
          type: IDENTITY
          email: cloud-support@sailpoint.com
        tags:
        - TAG_1
        - TAG_2
        _type: accessprofile
        type: accessprofile
        pod: pod01-useast1
        org: org-name
        _version: v2
    accountActivities:
      summary: A collection of account activities
      value:
      - id: 6f76c3add1db4ba8bbe0d42aaceb7a07
        _type: accountactivity
        type: accountactivity
        requester:
          name: Amos.Cunningham
          id: ef1e2a36099447cb9448c68e1804dd9f
          type: Identity
        sources: Active Directory
        created: 2025-01-02T21:45:59.795Z
        accountRequests:
        - result:
            status: committed
          accountId: "CN=Amos Cunningham,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          op: Modify
          provisioningTarget:
            name: Active Directory
            id: 5c71ff71195b4794a0b87e7cf36fb017
            type: ADLDAPConnector
          source:
            name: Active Directory
            id: 5c71ff71195b4794a0b87e7cf36fb017
            type: ADLDAPConnector
          attributeRequests:
          - op: Add
            name: memberOf
            value: "CN=HelpDesk,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        stage: Completed
        originalRequests:
        - result:
            status: Manual Task Created
          accountId: "CN=Amos Cunningham,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          op: Modify
          accountUuid: "{17413e85-1c08-4bb0-b658-9afdaad11d0a}"
          source:
            name: Active Directory
            id: 5c71ff71195b4794a0b87e7cf36fb017
            type: ADLDAPConnector
          attributeRequests:
          - op: Add
            name: memberOf
            value: "CN=HelpDesk,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        expansionItems: []
        approvals:
        - owner:
            name: tina.smith
            id: 322c6bce405a495a8e841a014b7d8410
            type: Identity
          result: Finished
          attributeRequest:
            op: Add
            name: memberOf
            value:
            - "CN=HelpDesk,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          accountUuid: "{17413e85-1c08-4bb0-b658-9afdaad11d0a}"
          modified: 2025-01-02T21:47:16.903Z
          source:
            name: Active Directory
            id: 5c71ff71195b4794a0b87e7cf36fb017
            type: ADLDAPConnector
        recipient:
          name: Amos.Cunningham
          id: ef1e2a36099447cb9448c68e1804dd9f
          type: Identity
        action: Access Request
        modified: 2025-01-02T21:47:16.903Z
        trackingNumber: 051d09b0bb5b453d91f658ba7f1e3171
        status: Complete
        pod: pod01-useast1
        org: org-name
        synced: 2025-01-02T21:47:16.953Z
        _version: v2
    entitlements:
      summary: A collection of entitlements
      value:
      - id: 2c9180867dde18d1017de8ea1f5c130f
        name: Vendor Creation
        displayName: Vendor Creation
        created: 2021-12-23T20:09:57.340Z
        modified: 2023-05-02T06:31:19.357Z
        attribute: groups
        value: VC
        sourceSchemaObjectType: group
        schema: group
        privileged: false
        cloudGoverned: false
        hash: 22ac1f7a13c8a462c67ee74f5fcbf06a277cce50
        description: Set up new AP vendors
        requestable: false
        source:
          id: 2c9180887de347a7017de8e75fa5570a
          type: SOURCE
          name: Finance
        containsDataAccess: "false"
        pod: pod01-useast1
        org: org-name
        synced: 2024-11-07T16:29:06.131Z
        _type: entitlement
        type: entitlement
        _version: v2
    events:
      summary: A collection of events
      value:
      - id: 001909ce8cc3b519436197105426b18b5fc6ca179803c0c3702e9038107bec78
        stack: wps
        synced: 2023-06-01T22:01:38.170Z
        created: 2023-06-01T22:01:37.818Z
        objects:
        - ACCOUNT
        type: PROVISIONING
        technicalName: ACCOUNT_MODIFY_PASSED
        target:
          name: Colt.Spears
        actor:
          name: System
        name: Modify Account Passed
        action: ModifyAccount
        attributes:
          accountUuid: "{2d1ec18a-84cc-4659-bf75-a1ce4d56a9c5}"
          cloudAppName: Active Directory
          appId: 5c71ff71195b4794a0b87e7cf36fb017
          sourceId: source
          sourceName: Active Directory
          accountName: "CN=Colt Spears,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpoint,DC=com"
          interface: Identity Refresh
        trackingNumber: 1f74901adbc0412d9fa51314195155be
        operation: MODIFY
        status: PASSED
        pod: pod01-useast1
        org: org-name
        _type: event
        _version: v2
    identities:
      summary: A collection of identities
      value:
      - id: 2c9180865c45e7e3015c46c434a80622
        name: Laura Peeters
        firstName: Laura
        lastName: Peeters
        displayName: Laura Peeters
        email: Laura.Peeters@sailpointdemo.com
        created: 2024-04-04T21:36:00.385Z
        inactive: false
        protected: false
        status: ACTIVE
        employeeNumber: "10673"
        manager:
          id: 88e405b1a3b8439daf2efc8f4ff0a98b
          name: Mia Garcia
          displayName: Mia Garcia
        isManager: true
        identityProfile:
          id: 00a2bc6244b34f4a88d985f035f2b68b
          name: HR Global
        source:
          id: 524f8d986f9b4192865269516d169eb0
          name: HR Global
        attributes:
          city: Brussels
          cloudAuthoritativeSource: 524f8d986f9b4192865269516d169eb0
          cloudLifecycleState: active
          cloudStatus: ACTIVE
          country: BE
          department: EMEA Sales
          displayName: Laura Peeters
          email: Laura.Peeters@sailpointdemo.com
          firstname: Laura
          identificationNumber: "10673"
          identityState: ACTIVE
          internalCloudStatus: ACTIVE
          jobTitle: "Manager,  Sales - Belgium"
          lastname: Peeters
          location: EMEA
          uid: "10673"
          visibleSegments:
          - d75ae486-044b-4eba-8113-0cdacb5341df
        disabled: false
        locked: false
        accounts:
        - id: 830396e8863442f1bce7b485612c8b51
          name: Laura Peeters
          accountId: "10673"
          source:
            id: 524f8d986f9b4192865269516d169eb0
            name: HR Global
            type: DelimitedFile
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:36:00.385Z
          supportsPasswordChange: false
        - id: cd6797419f37492ba22ea991f9d6ba90
          name: $SEK300-N3K0K4HOPEB6
          accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
            type: Active Directory - Direct
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: true
          passwordLastSet: 2024-04-04T21:38:57.434Z
          entitlementAttributes:
            memberOf:
            - "CN=Salesforce Access,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            - "CN=Sales-Folder,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            - "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            - "CN=Salesforce opportunity management,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          created: 2024-04-04T21:42:26.787Z
          supportsPasswordChange: true
        - id: db145fd0ec6a4e0cbc3a24bbe0758c8f
          name: Laura Peeters
          accountId: "10681"
          source:
            id: 524f8d986f9b4192865269516d169eb0
            name: HR Global
            type: DelimitedFile
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:36:15.769Z
          supportsPasswordChange: false
        - id: 6b75898eec394b4c98a5c3d2d9ba311b
          name: Laura Peeters
          accountId: Laura Peeters
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
            type: IdentityNowConnector
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:36:15.809Z
          supportsPasswordChange: true
          accountAttributes: {}
        accountCount: 3
        apps:
        - id: "20003"
          name: Active Directory
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: cd6797419f37492ba22ea991f9d6ba90
            accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20013"
          name: AD test
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: cd6797419f37492ba22ea991f9d6ba90
            accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20014"
          name: Test AD
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: cd6797419f37492ba22ea991f9d6ba90
            accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5092"
          name: Accounting
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: cd6797419f37492ba22ea991f9d6ba90
            accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5822114389092541705"
          name: IdentityNow app
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
          account:
            id: 6b75898eec394b4c98a5c3d2d9ba311b
            accountId: Laura Peeters
        appCount: 5
        access:
        - id: 4919721c3c1a4ca484469b85f0fd9ba1
          name: Benefits
          displayName: Benefits
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: 4bf8f57887874e9c83ae3a662bf8988c
          name: Sales-Folder
          displayName: Sales-Folder
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Sales-Folder,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: f1bea520cace4489805d26de3463262d
          name: Salesforce Access
          displayName: Salesforce Access
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Salesforce Access,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: 98a76b26b7884f3e8d115991cebc09b2
          name: Salesforce opportunity management
          displayName: Salesforce opportunity management
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Salesforce opportunity management,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: 7e277d102c874560becc464cdfe33a86
          name: Benefits Employees
          displayName: Benefits Employees
          type: ACCESS_PROFILE
          description: Access for Benefits Employees. Distribution group and File
            share access.
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          owner:
            id: 278f8a1859df48d2a0adb204257b26a2
            name: Jerry.Bennett
            displayName: Jerry.Bennett
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: 468171f0af874adebb58d3718519bd56
          name: SalesCommonAccess
          displayName: SalesCommonAccess
          type: ACCESS_PROFILE
          description: Grants basic access for everyone in the sale department
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          owner:
            id: 278f8a1859df48d2a0adb204257b26a2
            name: Jerry.Bennett
            displayName: Jerry.Bennett
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: ad7025c956734455b28fa35e315e77fe
          name: Benefits Common Access
          displayName: Benefits Common Access
          type: ROLE
          description: Testing AD provisioning with birthright access
          enabled: false
          requestable: false
          requestCommentsRequired: false
          owner:
            id: 322c6bce405a495a8e841a014b7d8410
            name: tina.smith
            displayName: tina.smith
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: a8819cb0445541438fe08dd38f311b3c
          name: SalesGlobal
          displayName: SalesGlobal
          type: ROLE
          description: All Sales people in the company
          enabled: false
          requestable: false
          requestCommentsRequired: false
          owner:
            id: 29b6ee3f91484d159b1ceac3109af151
            name: se.admin
            displayName: se.admin
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        accessCount: 8
        accessProfileCount: 2
        entitlementCount: 4
        roleCount: 2
        modified: 2025-01-17T03:17:17.895Z
        visibleSegments:
        - All Employees
        visibleSegmentCount: 1
        tagCount: 2
        tags:
        - TAG_1
        - TAG_2
        pod: pod01-useast1
        org: org-name
        synced: 2025-01-17T06:10:19.853Z
        _type: identity
        type: identity
        _version: v2
    roles:
      summary: A collection of roles
      value:
      - id: 2c91808c6faadea6016fb4f2bc69077b
        accessProfileCount: 1
        accessProfiles:
        - id: 468171f0af874adebb58d3718519bd56
          name: SalesCommonAccess
        created: 2023-06-01T22:00:55.311Z
        description: All Sales people in the company
        dimensional: false
        enabled: true
        modified: 2023-06-01T22:00:55.432Z
        name: SalesGlobal
        owner:
          email: admin@sailpointdemo.com
          id: c18630c4811c4030810afb3a14f388cf
          name: admin
          type: IDENTITY
        requestCommentsRequired: false
        requestable: true
        tags:
        - TAG_1
        - TAG_2
        pod: pod01-useast1
        org: org-name
        _type: role
        type: role
        _version: v2
    queryFields:
      summary: Query with fields
      value:
      - name: John Doe
        firstName: John
        lastName: Doe
        displayName: John Doe
        id: 655f6741762547ec937893f27eab0cec
        email: John.Doe@sailpointdemo.com
        created: 2025-01-03T22:36:20.025Z
        inactive: false
        protected: false
        status: UNREGISTERED
        isManager: false
        identityProfile:
          id: 63e42f96f2fc4b8ba544654eba6068cf
          name: Contractors
        source:
          id: b33c36dbaf974200b4d91f846abc30a5
          name: Contractors
        attributes:
          cloudAuthoritativeSource: b33c36dbaf974200b4d91f846abc30a5
          cloudLifecycleState: active
          cloudStatus: UNREGISTERED
          displayName: John Doe
          email: John.Doe@sailpointdemo.com
          endDate: 2199-01-01T00:00:00.000Z
          firstname: John
          identityState: ACTIVE
          internalCloudStatus: UNREGISTERED
          lastname: Doe
          startDate: 2199-01-01T00:00:00.000Z
          uid: John Doe
          visibleSegments:
          - d75ae486-044b-4eba-8113-0cdacb5341df
        disabled: false
        locked: false
        accounts:
        - id: 6f9cce655ddd40ca86a8faab8d5d52ec
          name: John Doe
          accountId: ac10e3a8-942a-1409-8194-2e4fe3090003
          source:
            id: b33c36dbaf974200b4d91f846abc30a5
            name: Contractors
            type: Non-Employee
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2025-01-03T22:36:20.045Z
          supportsPasswordChange: false
        - id: 9e29df88d4c5449ea790b4c24135b85c
          name: $FHK300-LAAKDKHU50K3
          accountId: "CN=John Doe,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
            type: Active Directory - Direct
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: true
          entitlementAttributes:
            memberOf:
            - "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          created: 2025-01-03T22:36:36.866Z
          supportsPasswordChange: true
        - id: 74e0cd14200943ff92b4f11fa3596eba
          name: John Doe
          accountId: John Doe
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
            type: IdentityNowConnector
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2025-01-03T22:36:20.076Z
          supportsPasswordChange: true
          accountAttributes: {}
        accountCount: 2
        apps:
        - id: "20003"
          name: Active Directory
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: 9e29df88d4c5449ea790b4c24135b85c
            accountId: "CN=John Doe,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20013"
          name: AD test
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: 9e29df88d4c5449ea790b4c24135b85c
            accountId: "CN=John Doe,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20014"
          name: Test AD
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: 9e29df88d4c5449ea790b4c24135b85c
            accountId: "CN=John Doe,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5092"
          name: Accounting
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: 9e29df88d4c5449ea790b4c24135b85c
            accountId: "CN=John Doe,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5822114389092541705"
          name: IdentityNow app
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
          account:
            id: 74e0cd14200943ff92b4f11fa3596eba
            accountId: John Doe
        appCount: 5
        access:
        - id: 4919721c3c1a4ca484469b85f0fd9ba1
          name: Benefits
          displayName: Benefits
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: 7e277d102c874560becc464cdfe33a86
          name: Benefits Employees
          displayName: Benefits Employees
          type: ACCESS_PROFILE
          description: Access for Benefits Employees. Distribution group and File
            share access.
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          owner:
            id: 278f8a1859df48d2a0adb204257b26a2
            name: Jerry.Bennett
            displayName: Jerry.Bennett
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: ad7025c956734455b28fa35e315e77fe
          name: Benefits Common Access
          displayName: Benefits Common Access
          type: ROLE
          description: Testing AD provisioning with birthright access
          enabled: false
          requestable: false
          requestCommentsRequired: false
          owner:
            id: 322c6bce405a495a8e841a014b7d8410
            name: tina.smith
            displayName: tina.smith
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        accessCount: 3
        accessProfileCount: 1
        entitlementCount: 1
        roleCount: 1
        modified: 2025-01-03T22:36:37.599Z
        visibleSegments:
        - All Employees
        visibleSegmentCount: 1
        tagCount: 0
        pod: pod01-useast1
        org: org-name
        synced: 2025-01-03T22:37:04.452Z
        _type: identity
        type: identity
        _version: v2
    queryTimeZone:
      summary: Query with timezone
      value:
      - name: Laura Peeters
        firstName: Laura
        lastName: Peeters
        displayName: Laura Peeters
        id: 0011cac38db341738af1f2ce7bb3aede
        email: Laura.Peeters@sailpointdemo.com
        created: 2024-04-04T21:36:00.385Z
        inactive: false
        protected: false
        status: UNREGISTERED
        employeeNumber: "10673"
        manager:
          id: 88e405b1a3b8439daf2efc8f4ff0a98b
          name: Mia Garcia
          displayName: Mia Garcia
        isManager: true
        identityProfile:
          id: 00a2bc6244b34f4a88d985f035f2b68b
          name: HR Global
        source:
          id: 524f8d986f9b4192865269516d169eb0
          name: HR Global
        attributes:
          city: Brussels
          cloudAuthoritativeSource: 524f8d986f9b4192865269516d169eb0
          cloudLifecycleState: active
          cloudStatus: UNREGISTERED
          country: BE
          department: EMEA Sales
          displayName: Laura Peeters
          email: Laura.Peeters@sailpointdemo.com
          firstname: Laura
          identificationNumber: "10673"
          identityState: ACTIVE
          internalCloudStatus: UNREGISTERED
          jobTitle: "Manager,  Sales - Belgium"
          lastname: Peeters
          location: EMEA
          uid: "10673"
          visibleSegments:
          - d75ae486-044b-4eba-8113-0cdacb5341df
        disabled: false
        locked: false
        accounts:
        - id: 830396e8863442f1bce7b485612c8b51
          name: Laura Peeters
          accountId: "10673"
          source:
            id: 524f8d986f9b4192865269516d169eb0
            name: HR Global
            type: DelimitedFile
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:36:00.385Z
          supportsPasswordChange: false
        - id: cd6797419f37492ba22ea991f9d6ba90
          name: $SEK300-N3K0K4HOPEB6
          accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
            type: Active Directory - Direct
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: true
          passwordLastSet: 2024-04-04T21:38:57.434Z
          entitlementAttributes:
            memberOf:
            - "CN=Salesforce Access,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            - "CN=Sales-Folder,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            - "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            - "CN=Salesforce opportunity management,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          created: 2024-04-04T21:42:26.787Z
          supportsPasswordChange: true
        - id: db145fd0ec6a4e0cbc3a24bbe0758c8f
          name: Laura Peeters
          accountId: "10681"
          source:
            id: 524f8d986f9b4192865269516d169eb0
            name: HR Global
            type: DelimitedFile
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:36:15.769Z
          supportsPasswordChange: false
        - id: 6b75898eec394b4c98a5c3d2d9ba311b
          name: Laura Peeters
          accountId: Laura Peeters
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
            type: IdentityNowConnector
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:36:15.809Z
          supportsPasswordChange: true
          accountAttributes: {}
        accountCount: 3
        apps:
        - id: "20003"
          name: Active Directory
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: cd6797419f37492ba22ea991f9d6ba90
            accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20013"
          name: AD test
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: cd6797419f37492ba22ea991f9d6ba90
            accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20014"
          name: Test AD
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: cd6797419f37492ba22ea991f9d6ba90
            accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5092"
          name: Accounting
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: cd6797419f37492ba22ea991f9d6ba90
            accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5822114389092541705"
          name: IdentityNow app
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
          account:
            id: 6b75898eec394b4c98a5c3d2d9ba311b
            accountId: Laura Peeters
        appCount: 5
        access:
        - id: 4919721c3c1a4ca484469b85f0fd9ba1
          name: Benefits
          displayName: Benefits
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: 4bf8f57887874e9c83ae3a662bf8988c
          name: Sales-Folder
          displayName: Sales-Folder
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Sales-Folder,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: f1bea520cace4489805d26de3463262d
          name: Salesforce Access
          displayName: Salesforce Access
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Salesforce Access,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: 98a76b26b7884f3e8d115991cebc09b2
          name: Salesforce opportunity management
          displayName: Salesforce opportunity management
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Salesforce opportunity management,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: 7e277d102c874560becc464cdfe33a86
          name: Benefits Employees
          displayName: Benefits Employees
          type: ACCESS_PROFILE
          description: Access for Benefits Employees. Distribution group and File
            share access.
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          owner:
            id: 278f8a1859df48d2a0adb204257b26a2
            name: Jerry.Bennett
            displayName: Jerry.Bennett
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: 468171f0af874adebb58d3718519bd56
          name: SalesCommonAccess
          displayName: SalesCommonAccess
          type: ACCESS_PROFILE
          description: Grants basic access for everyone in the sale department
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          owner:
            id: 278f8a1859df48d2a0adb204257b26a2
            name: Jerry.Bennett
            displayName: Jerry.Bennett
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: ad7025c956734455b28fa35e315e77fe
          name: Benefits Common Access
          displayName: Benefits Common Access
          type: ROLE
          description: Testing AD provisioning with birthright access
          enabled: false
          requestable: false
          requestCommentsRequired: false
          owner:
            id: 322c6bce405a495a8e841a014b7d8410
            name: tina.smith
            displayName: tina.smith
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: a8819cb0445541438fe08dd38f311b3c
          name: SalesGlobal
          displayName: SalesGlobal
          type: ROLE
          description: All Sales people in the company
          enabled: false
          requestable: false
          requestCommentsRequired: false
          owner:
            id: 29b6ee3f91484d159b1ceac3109af151
            name: se.admin
            displayName: se.admin
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        accessCount: 8
        accessProfileCount: 2
        entitlementCount: 4
        roleCount: 2
        modified: 2024-12-13T02:49:18.104Z
        visibleSegments:
        - All Employees
        visibleSegmentCount: 1
        tagCount: 0
        pod: pod01-useast1
        org: org-name
        synced: 2024-12-13T06:10:14.229Z
        _type: identity
        type: identity
        _version: v2
    queryInnerHit:
      summary: Query with innerhit
      value:
      - requestCommentsRequired: false
        schema: group
        cloudEligible: false
        displayName: Benefits
        standalone: false
        source:
          name: Active Directory
          id: 5c71ff71195b4794a0b87e7cf36fb017
        type: ENTITLEMENT
        enabled: false
        privileged: false
        name: Benefits
        disabled: false
        id: 4919721c3c1a4ca484469b85f0fd9ba1
        requestable: false
        attribute: memberOf
        value: "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        cloudGoverned: false
        _type: access
        _originalType: identity
        _version: v2
      - requestCommentsRequired: false
        owner:
          displayName: Jerry.Bennett
          name: Jerry.Bennett
          id: 278f8a1859df48d2a0adb204257b26a2
        cloudEligible: false
        displayName: Benefits Employees
        standalone: false
        description: Access for Benefits Employees. Distribution group and File share
          access.
        source:
          name: Active Directory
          id: 5c71ff71195b4794a0b87e7cf36fb017
        revocable: false
        type: ACCESS_PROFILE
        enabled: false
        privileged: false
        name: Benefits Employees
        disabled: false
        id: 7e277d102c874560becc464cdfe33a86
        requestable: false
        cloudGoverned: false
        _type: access
        _originalType: identity
        _version: v2
    typeAheadQueryNestedType:
      summary: Typeahead query with nestedtype
      value:
      - Active Directory
      - PRISM
      - ServiceNow
      - TRAKK-WS
      - AWS
    filterExists:
      summary: Filter with exists
      value:
      - name: Cory Henry
        firstName: Cory
        lastName: Henry
        displayName: Cory Henry
        id: 026bb65ed1f54fcd89197ca986e9acac
        email: Cory.Henry@sailpointdemo.com
        created: 2024-04-04T21:32:46.844Z
        inactive: false
        protected: false
        status: UNREGISTERED
        employeeNumber: "10090"
        manager:
          id: 903349b85746471a9a898722206109bb
          name: Layla Hendricks
          displayName: Layla Hendricks
        isManager: true
        identityProfile:
          id: 00a2bc6244b34f4a88d985f035f2b68b
          name: HR Global
        source:
          id: 524f8d986f9b4192865269516d169eb0
          name: HR Global
        attributes:
          city: Austin
          cloudAuthoritativeSource: 524f8d986f9b4192865269516d169eb0
          cloudLifecycleState: active
          cloudStatus: UNREGISTERED
          country: US
          department: Revenue Operations
          displayName: Cory Henry
          email: Cory.Henry@sailpointdemo.com
          firstname: Cory
          identificationNumber: "10090"
          identityState: ACTIVE
          internalCloudStatus: UNREGISTERED
          jobTitle: "Manager,  System Operations"
          lastname: Henry
          location: AMS
          uid: "10090"
          visibleSegments:
          - d75ae486-044b-4eba-8113-0cdacb5341df
          - 8ea4e957-f2f1-4cba-b202-54cc702528d1
        disabled: false
        locked: false
        accounts:
        - id: a02142f41ad1407884da04a7bfa586d4
          name: Cory Henry
          accountId: "10090"
          source:
            id: 524f8d986f9b4192865269516d169eb0
            name: HR Global
            type: DelimitedFile
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:32:46.844Z
          supportsPasswordChange: false
        - id: f30019e125c74684acee7da3f1643d2a
          name: $LUJ300-P3QNVHE6R7FB
          accountId: "CN=Cory Henry,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
            type: Active Directory - Direct
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: true
          passwordLastSet: 2024-04-04T21:33:34.488Z
          entitlementAttributes:
            memberOf:
            - "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          created: 2024-04-04T21:37:03.481Z
          supportsPasswordChange: true
        - id: 7fe340119c5d4b00a9b85d55b18a6416
          name: Cory Henry
          accountId: Cory Henry
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
            type: IdentityNowConnector
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:37:03.536Z
          supportsPasswordChange: true
          accountAttributes: {}
        accountCount: 2
        apps:
        - id: "20003"
          name: Active Directory
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: f30019e125c74684acee7da3f1643d2a
            accountId: "CN=Cory Henry,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20013"
          name: AD test
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: f30019e125c74684acee7da3f1643d2a
            accountId: "CN=Cory Henry,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20014"
          name: Test AD
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: f30019e125c74684acee7da3f1643d2a
            accountId: "CN=Cory Henry,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5092"
          name: Accounting
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: f30019e125c74684acee7da3f1643d2a
            accountId: "CN=Cory Henry,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5822114389092541705"
          name: IdentityNow app
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
          account:
            id: 7fe340119c5d4b00a9b85d55b18a6416
            accountId: Cory Henry
        appCount: 5
        access:
        - id: ad7025c956734455b28fa35e315e77fe
          name: Benefits Common Access
          displayName: Benefits Common Access
          type: ROLE
          description: Testing AD provisioning with birthright access
          enabled: false
          requestable: false
          requestCommentsRequired: false
          owner:
            id: 322c6bce405a495a8e841a014b7d8410
            name: tina.smith
            displayName: tina.smith
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: 7e277d102c874560becc464cdfe33a86
          name: Benefits Employees
          displayName: Benefits Employees
          type: ACCESS_PROFILE
          description: Access for Benefits Employees. Distribution group and File
            share access.
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          owner:
            id: 278f8a1859df48d2a0adb204257b26a2
            name: Jerry.Bennett
            displayName: Jerry.Bennett
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: 4919721c3c1a4ca484469b85f0fd9ba1
          name: Benefits
          displayName: Benefits
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        accessCount: 3
        accessProfileCount: 1
        entitlementCount: 1
        roleCount: 1
        modified: 2024-12-13T02:49:19.214Z
        visibleSegments:
        - All Employees
        - Austin Employees
        visibleSegmentCount: 2
        tagCount: 0
        pod: pod01-useast1
        org: org-name
        synced: 2024-12-13T06:10:29.734Z
        _type: identity
        type: identity
        _version: v2
    filterRange:
      summary: Filter with range
      value:
      - name: Mia Garcia
        firstName: Mia
        lastName: Garcia
        displayName: Mia Garcia
        id: 88e405b1a3b8439daf2efc8f4ff0a98b
        email: Mia.Garcia@sailpointdemo.com
        created: 2024-04-04T21:33:05.522Z
        inactive: false
        protected: false
        status: UNREGISTERED
        employeeNumber: "10142"
        manager:
          id: 624db52c764f410baca2b192caad8e58
          name: Ethan Johnson
          displayName: Ethan Johnson
        isManager: true
        identityProfile:
          id: 00a2bc6244b34f4a88d985f035f2b68b
          name: HR Global
        source:
          id: 524f8d986f9b4192865269516d169eb0
          name: HR Global
        attributes:
          city: London
          cloudAuthoritativeSource: 524f8d986f9b4192865269516d169eb0
          cloudLifecycleState: active
          cloudStatus: UNREGISTERED
          country: GB
          department: EMEA Sales
          displayName: Mia Garcia
          email: Mia.Garcia@sailpointdemo.com
          firstname: Mia
          identificationNumber: "10142"
          identityState: ACTIVE
          internalCloudStatus: UNREGISTERED
          jobTitle: "Regional Director, EMEA Sales"
          lastname: Garcia
          location: EMEA
          uid: "10142"
          visibleSegments:
          - d75ae486-044b-4eba-8113-0cdacb5341df
        disabled: false
        locked: false
        accounts:
        - id: 9021760f10b64f42b7ebfb78085ccaff
          name: Mia Garcia
          accountId: "10142"
          source:
            id: 524f8d986f9b4192865269516d169eb0
            name: HR Global
            type: DelimitedFile
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:33:05.522Z
          supportsPasswordChange: false
        - id: f3ef91f3c2874e79981f2d97297660ee
          name: $DUJ300-H5LFRVRDLKKM
          accountId: "CN=Mia Garcia,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
            type: Active Directory - Direct
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: true
          passwordLastSet: 2024-04-04T21:33:25.979Z
          entitlementAttributes:
            memberOf:
            - "CN=Salesforce Access,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            - "CN=Sales-Folder,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            - "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            - "CN=Salesforce opportunity management,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          created: 2024-04-04T21:36:54.974Z
          supportsPasswordChange: true
        - id: c379279cc5b9450cbb274aad31486510
          name: Mia Garcia
          accountId: Mia Garcia
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
            type: IdentityNowConnector
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:36:55.027Z
          supportsPasswordChange: true
          accountAttributes: {}
        accountCount: 2
        apps:
        - id: "20003"
          name: Active Directory
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: f3ef91f3c2874e79981f2d97297660ee
            accountId: "CN=Mia Garcia,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20013"
          name: AD test
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: f3ef91f3c2874e79981f2d97297660ee
            accountId: "CN=Mia Garcia,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20014"
          name: Test AD
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: f3ef91f3c2874e79981f2d97297660ee
            accountId: "CN=Mia Garcia,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5092"
          name: Accounting
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: f3ef91f3c2874e79981f2d97297660ee
            accountId: "CN=Mia Garcia,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5822114389092541705"
          name: IdentityNow app
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
          account:
            id: c379279cc5b9450cbb274aad31486510
            accountId: Mia Garcia
        appCount: 5
        access:
        - id: 7e277d102c874560becc464cdfe33a86
          name: Benefits Employees
          displayName: Benefits Employees
          type: ACCESS_PROFILE
          description: Access for Benefits Employees. Distribution group and File
            share access.
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          owner:
            id: 278f8a1859df48d2a0adb204257b26a2
            name: Jerry.Bennett
            displayName: Jerry.Bennett
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: 468171f0af874adebb58d3718519bd56
          name: SalesCommonAccess
          displayName: SalesCommonAccess
          type: ACCESS_PROFILE
          description: Grants basic access for everyone in the sale department
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          owner:
            id: 278f8a1859df48d2a0adb204257b26a2
            name: Jerry.Bennett
            displayName: Jerry.Bennett
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: ad7025c956734455b28fa35e315e77fe
          name: Benefits Common Access
          displayName: Benefits Common Access
          type: ROLE
          description: Testing AD provisioning with birthright access
          enabled: false
          requestable: false
          requestCommentsRequired: false
          owner:
            id: 322c6bce405a495a8e841a014b7d8410
            name: tina.smith
            displayName: tina.smith
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: a8819cb0445541438fe08dd38f311b3c
          name: SalesGlobal
          displayName: SalesGlobal
          type: ROLE
          description: All Sales people in the company
          enabled: false
          requestable: false
          requestCommentsRequired: false
          owner:
            id: 29b6ee3f91484d159b1ceac3109af151
            name: se.admin
            displayName: se.admin
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: 4919721c3c1a4ca484469b85f0fd9ba1
          name: Benefits
          displayName: Benefits
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: 4bf8f57887874e9c83ae3a662bf8988c
          name: Sales-Folder
          displayName: Sales-Folder
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Sales-Folder,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: f1bea520cace4489805d26de3463262d
          name: Salesforce Access
          displayName: Salesforce Access
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Salesforce Access,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: 98a76b26b7884f3e8d115991cebc09b2
          name: Salesforce opportunity management
          displayName: Salesforce opportunity management
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Salesforce opportunity management,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        accessCount: 8
        accessProfileCount: 2
        entitlementCount: 4
        roleCount: 2
        modified: 2024-12-13T02:49:35.220Z
        visibleSegments:
        - All Employees
        visibleSegmentCount: 1
        tagCount: 0
        pod: pod01-useast1
        org: org-name
        synced: 2024-12-13T06:25:44.222Z
        _type: identity
        type: identity
        _version: v2
    filterTerms:
      summary: Filter with terms
      value:
      - name: Oliver Davies
        firstName: Oliver
        lastName: Davies
        displayName: Oliver Davies
        id: b173815fef574b74a283f39e6634c215
        email: Oliver.Davies@sailpointdemo.com
        created: 2024-04-04T21:32:27.473Z
        inactive: false
        protected: false
        status: UNREGISTERED
        employeeNumber: "10029"
        manager:
          id: b8c8e021a4104eda91b80bfac6a99b47
          name: Jackson Brooks
          displayName: Jackson Brooks
        isManager: true
        identityProfile:
          id: 00a2bc6244b34f4a88d985f035f2b68b
          name: HR Global
        source:
          id: 524f8d986f9b4192865269516d169eb0
          name: HR Global
        attributes:
          city: London
          cloudAuthoritativeSource: 524f8d986f9b4192865269516d169eb0
          cloudLifecycleState: active
          cloudStatus: UNREGISTERED
          country: GB
          department: Customer Support
          displayName: Oliver Davies
          email: Oliver.Davies@sailpointdemo.com
          firstname: Oliver
          identificationNumber: "10029"
          identityState: ACTIVE
          internalCloudStatus: UNREGISTERED
          jobTitle: Call Center
          lastname: Davies
          location: EMEA
          uid: "10029"
          visibleSegments:
          - d75ae486-044b-4eba-8113-0cdacb5341df
        disabled: false
        locked: false
        accounts:
        - id: c8cacc7080254b2781f56e0ded6c8dea
          name: $GRJ300-AQD2M7N9L7NT
          accountId: "CN=Oliver Davies,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
            type: Active Directory - Direct
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: true
          passwordLastSet: 2024-04-04T21:30:25.205Z
          entitlementAttributes:
            memberOf:
            - "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          created: 2024-04-04T21:33:54.332Z
          supportsPasswordChange: true
        - id: cd7f58b2290c43909320ff89427b57a1
          name: Oliver Davies
          accountId: "10029"
          source:
            id: 524f8d986f9b4192865269516d169eb0
            name: HR Global
            type: DelimitedFile
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:32:27.473Z
          supportsPasswordChange: false
        - id: a1ee6cd948754371a98105a5a6dd067d
          name: Oliver Davies
          accountId: Oliver Davies
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
            type: IdentityNowConnector
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:33:54.377Z
          supportsPasswordChange: true
          accountAttributes: {}
        accountCount: 2
        apps:
        - id: "20003"
          name: Active Directory
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: c8cacc7080254b2781f56e0ded6c8dea
            accountId: "CN=Oliver Davies,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20013"
          name: AD test
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: c8cacc7080254b2781f56e0ded6c8dea
            accountId: "CN=Oliver Davies,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20014"
          name: Test AD
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: c8cacc7080254b2781f56e0ded6c8dea
            accountId: "CN=Oliver Davies,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5092"
          name: Accounting
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: c8cacc7080254b2781f56e0ded6c8dea
            accountId: "CN=Oliver Davies,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5822114389092541705"
          name: IdentityNow app
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
          account:
            id: a1ee6cd948754371a98105a5a6dd067d
            accountId: Oliver Davies
        appCount: 5
        access:
        - id: ad7025c956734455b28fa35e315e77fe
          name: Benefits Common Access
          displayName: Benefits Common Access
          type: ROLE
          description: Testing AD provisioning with birthright access
          enabled: false
          requestable: false
          requestCommentsRequired: false
          owner:
            id: 322c6bce405a495a8e841a014b7d8410
            name: tina.smith
            displayName: tina.smith
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: 7e277d102c874560becc464cdfe33a86
          name: Benefits Employees
          displayName: Benefits Employees
          type: ACCESS_PROFILE
          description: Access for Benefits Employees. Distribution group and File
            share access.
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          owner:
            id: 278f8a1859df48d2a0adb204257b26a2
            name: Jerry.Bennett
            displayName: Jerry.Bennett
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: 4919721c3c1a4ca484469b85f0fd9ba1
          name: Benefits
          displayName: Benefits
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        accessCount: 3
        accessProfileCount: 1
        entitlementCount: 1
        roleCount: 1
        modified: 2024-12-13T02:49:35.917Z
        visibleSegments:
        - All Employees
        visibleSegmentCount: 1
        tagCount: 0
        pod: pod01-useast1
        org: org-name
        synced: 2024-12-13T06:28:14.763Z
        _type: identity
        type: identity
        _version: v2
    metricAggregation:
      summary: Metricaggregation
      value:
        indices:
        - identities
        aggregationType: SAILPOINT
        aggregations:
          metric:
            name: How Many Locations
            type: UNIQUE_COUNT
            field: attributes.city
    metricAggregation-dsl:
      summary: Metricaggregation using dsl
      value:
        indices:
        - identities
        aggregationType: DSL
        aggregationsDsl:
          How Many Locations:
            cardinality:
              field: attributes.city.exact
    bucketAggregation:
      summary: Bucketaggregation
      value:
        indices:
        - identities
        aggregationType: SAILPOINT
        aggregations:
          bucket:
            name: Identity Locations
            type: TERMS
            field: attributes.city
    bucketAggregation-dsl:
      summary: Bucketaggregation using dsl
      value:
        indices:
        - identities
        aggregationType: DSL
        aggregationsDsl:
          Identity Locations:
            terms:
              field: attributes.city.exact
    nestedAggregation-bucketAggregation:
      summary: Nestedaggregation with bucketaggregation
      value:
        indices:
        - identities
        aggregationType: SAILPOINT
        aggregations:
          nested:
            name: Access
            field: access
            type: TERMS
          bucket:
            name: Access Source Name
            type: TERMS
            field: access.source.name
    nestedAggregation-bucketAggregation-dsl:
      summary: Nestedaggregation with bucketaggregation using dsl
      value:
        indices:
        - identities
        aggregationType: DSL
        aggregationsDsl:
          access:
            nested:
              path: access
            aggs:
              Access Source Name:
                terms:
                  field: access.source.name.exact
    nestedAggregation-filterAggregation-bucketAggregation:
      summary: Nestedaggregation with filteraggregation and bucketaggregation
      value:
        indices:
        - identities
        aggregationType: SAILPOINT
        aggregations:
          nested:
            name: Access
            field: access
            type: TERMS
          filter:
            name: Entitlements
            field: access.type
            value: ENTITLEMENT
          bucket:
            name: Access Name
            type: TERMS
            field: access.name
    nestedAggregation-filterAggregation-bucketAggregation-dsl:
      summary: Nestedaggregation with filteraggregation and bucketaggregation using
        dsl
      value:
        indices:
        - identities
        aggregationType: DSL
        aggregationsDsl:
          access:
            nested:
              path: access
            aggs:
              Entitlements:
                filter:
                  term:
                    access.type: ENTITLEMENT
                aggs:
                  Access Name:
                    terms:
                      field: access.name.exact
    bucketAggregation-subAggregation:
      summary: Bucketaggregation with subaggregation
      value:
        indices:
        - identities
        aggregationType: SAILPOINT
        aggregations:
          bucket:
            name: Identity Department
            type: TERMS
            field: attributes.department
          subAggregation:
            bucket:
              name: Identity Locations
              type: TERMS
              field: attributes.city
    bucketAggregation-subAggregation-dsl:
      summary: Bucketaggregation with subaggregation using dsl
      value:
        indices:
        - identities
        aggregationType: DSL
        aggregationsDsl:
          Identity Department:
            terms:
              field: attributes.department.exact
            aggs:
              Identity Locations:
                terms:
                  field: attributes.city.exact
    accessProfile:
      summary: Accessprofile
      value:
        id: 13b856dd9a264206954b63ecbb57a853
        name: Cloud Eng
        description: Cloud Eng
        source:
          id: 5c71ff71195b4794a0b87e7cf36fb017
          name: Active Directory
        entitlements:
        - hasPermissions: false
          attribute: memberOf
          value: "CN=Cloud Engineering,DC=sailpoint,DC=COM"
          schema: group
          privileged: false
          id: 7372eaddd75749bd89a2e76a363eb891
          name: Cloud Engineering
          description: Cloud Engineering
        entitlementCount: 1
        segments: []
        segmentCount: 0
        apps: []
        created: 2024-09-16T17:41:25Z
        modified: 2024-09-16T19:30:54Z
        synced: 2025-02-12T06:32:40.156Z
        enabled: true
        requestable: true
        requestCommentsRequired: false
        owner:
          id: ff8081815757d36a015757d42e56031e
          name: SailPoint Support
          type: IDENTITY
          email: cloud-support@sailpoint.com
        tags:
        - TAG_1
        - TAG_2
    accountActivity:
      summary: Accountactivity
      value:
        id: 6f76c3add1db4ba8bbe0d42aaceb7a07
        requester:
          name: Amos.Cunningham
          id: ef1e2a36099447cb9448c68e1804dd9f
          type: Identity
        synced: 2025-01-02T21:47:16.953Z
        sources: Active Directory
        created: 2025-01-02T21:45:59.795Z
        accountRequests:
        - result:
            status: committed
          accountId: "CN=Amos Cunningham,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          op: Modify
          provisioningTarget:
            name: Active Directory
            id: 5c71ff71195b4794a0b87e7cf36fb017
            type: ADLDAPConnector
          source:
            name: Active Directory
            id: 5c71ff71195b4794a0b87e7cf36fb017
            type: ADLDAPConnector
          attributeRequests:
          - op: Add
            name: memberOf
            value: "CN=HelpDesk,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        stage: Completed
        originalRequests:
        - result:
            status: Manual Task Created
          accountId: "CN=Amos Cunningham,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          op: Modify
          accountUuid: "{17413e85-1c08-4bb0-b658-9afdaad11d0a}"
          source:
            name: Active Directory
            id: 5c71ff71195b4794a0b87e7cf36fb017
            type: ADLDAPConnector
          attributeRequests:
          - op: Add
            name: memberOf
            value: "CN=HelpDesk,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        expansionItems: []
        approvals:
        - owner:
            name: tina.smith
            id: 322c6bce405a495a8e841a014b7d8410
            type: Identity
          result: Finished
          attributeRequest:
            op: Add
            name: memberOf
            value:
            - "CN=HelpDesk,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          accountUuid: "{17413e85-1c08-4bb0-b658-9afdaad11d0a}"
          modified: 2025-01-02T21:47:16.903Z
          source:
            name: Active Directory
            id: 5c71ff71195b4794a0b87e7cf36fb017
            type: ADLDAPConnector
        recipient:
          name: Amos.Cunningham
          id: ef1e2a36099447cb9448c68e1804dd9f
          type: Identity
        action: Access Request
        modified: 2025-01-02T21:47:16.903Z
        trackingNumber: 051d09b0bb5b453d91f658ba7f1e3171
        status: Complete
    entitlement:
      summary: Entitlement
      value:
        id: 2c9180867dde18d1017de8ea1f5c130f
        name: Vendor Creation
        displayName: Vendor Creation
        created: 2021-12-23T20:09:57.340Z
        modified: 2023-05-02T06:31:19.357Z
        attribute: groups
        value: VC
        sourceSchemaObjectType: group
        schema: group
        privileged: false
        cloudGoverned: false
        hash: 22ac1f7a13c8a462c67ee74f5fcbf06a277cce50
        description: Set up new AP vendors
        requestable: false
        source:
          id: 2c9180887de347a7017de8e75fa5570a
          type: SOURCE
          name: Finance
        containsDataAccess: "false"
    event:
      summary: Event
      value:
        id: 001909ce8cc3b519436197105426b18b5fc6ca179803c0c3702e9038107bec78
        stack: wps
        synced: 2023-06-01T22:01:38.170Z
        created: 2023-06-01T22:01:37.818Z
        objects:
        - ACCOUNT
        type: PROVISIONING
        technicalName: ACCOUNT_MODIFY_PASSED
        target:
          name: Colt.Spears
        actor:
          name: System
        name: Modify Account Passed
        action: ModifyAccount
        attributes:
          accountUuid: "{2d1ec18a-84cc-4659-bf75-a1ce4d56a9c5}"
          cloudAppName: Active Directory
          appId: 5c71ff71195b4794a0b87e7cf36fb017
          sourceId: source
          sourceName: Active Directory
          accountName: "CN=Colt Spears,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpoint,DC=com"
          interface: Identity Refresh
          trackingNumber: 1f74901adbc0412d9fa51314195155be
        operation: MODIFY
        status: PASSED
    identity:
      summary: Identity
      value:
        id: 2c9180865c45e7e3015c46c434a80622
        name: Laura Peeters
        firstName: Laura
        lastName: Peeters
        displayName: Laura Peeters
        email: Laura.Peeters@sailpointdemo.com
        created: 2024-04-04T21:36:00.385Z
        inactive: false
        protected: false
        status: ACTIVE
        employeeNumber: "10673"
        manager:
          id: 88e405b1a3b8439daf2efc8f4ff0a98b
          name: Mia Garcia
          displayName: Mia Garcia
        isManager: true
        identityProfile:
          id: 00a2bc6244b34f4a88d985f035f2b68b
          name: HR Global
        source:
          id: 524f8d986f9b4192865269516d169eb0
          name: HR Global
        attributes:
          city: Brussels
          cloudAuthoritativeSource: 524f8d986f9b4192865269516d169eb0
          cloudLifecycleState: active
          cloudStatus: UNREGISTERED
          country: BE
          department: EMEA Sales
          displayName: Laura Peeters
          email: Laura.Peeters@sailpointdemo.com
          firstname: Laura
          identificationNumber: "10673"
          identityState: ACTIVE
          internalCloudStatus: UNREGISTERED
          jobTitle: "Manager,  Sales - Belgium"
          lastname: Peeters
          location: EMEA
          uid: "10673"
          visibleSegments:
          - d75ae486-044b-4eba-8113-0cdacb5341df
        disabled: false
        locked: false
        accounts:
        - id: 830396e8863442f1bce7b485612c8b51
          name: Laura Peeters
          accountId: "10673"
          source:
            id: 524f8d986f9b4192865269516d169eb0
            name: HR Global
            type: DelimitedFile
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:36:00.385Z
          supportsPasswordChange: false
        - id: cd6797419f37492ba22ea991f9d6ba90
          name: $SEK300-N3K0K4HOPEB6
          accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
            type: Active Directory - Direct
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: true
          passwordLastSet: 2024-04-04T21:38:57.434Z
          entitlementAttributes:
            memberOf:
            - "CN=Salesforce Access,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            - "CN=Sales-Folder,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            - "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            - "CN=Salesforce opportunity management,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          created: 2024-04-04T21:42:26.787Z
          supportsPasswordChange: true
        - id: db145fd0ec6a4e0cbc3a24bbe0758c8f
          name: Laura Peeters
          accountId: "10681"
          source:
            id: 524f8d986f9b4192865269516d169eb0
            name: HR Global
            type: DelimitedFile
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:36:15.769Z
          supportsPasswordChange: false
        - id: 6b75898eec394b4c98a5c3d2d9ba311b
          name: Laura Peeters
          accountId: Laura Peeters
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
            type: IdentityNowConnector
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          entitlementAttributes: {}
          created: 2024-04-04T21:36:15.809Z
          supportsPasswordChange: true
          accountAttributes: {}
        accountCount: 3
        apps:
        - id: "20003"
          name: Active Directory
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: cd6797419f37492ba22ea991f9d6ba90
            accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20013"
          name: AD test
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: cd6797419f37492ba22ea991f9d6ba90
            accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "20014"
          name: Test AD
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: cd6797419f37492ba22ea991f9d6ba90
            accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5092"
          name: Accounting
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          account:
            id: cd6797419f37492ba22ea991f9d6ba90
            accountId: "CN=Laura Peeters,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
        - id: "5822114389092541705"
          name: IdentityNow app
          source:
            id: af4686d6482841ac96d793901372ad9b
            name: IdentityNow
          account:
            id: 6b75898eec394b4c98a5c3d2d9ba311b
            accountId: Laura Peeters
        appCount: 5
        access:
        - id: 4919721c3c1a4ca484469b85f0fd9ba1
          name: Benefits
          displayName: Benefits
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Benefits,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: 4bf8f57887874e9c83ae3a662bf8988c
          name: Sales-Folder
          displayName: Sales-Folder
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Sales-Folder,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: f1bea520cace4489805d26de3463262d
          name: Salesforce Access
          displayName: Salesforce Access
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Salesforce Access,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: 98a76b26b7884f3e8d115991cebc09b2
          name: Salesforce opportunity management
          displayName: Salesforce opportunity management
          type: ENTITLEMENT
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          disabled: false
          privileged: false
          attribute: memberOf
          value: "CN=Salesforce opportunity management,OU=Sales,OU=AI,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          standalone: false
          cloudEligible: false
          cloudGoverned: false
          schema: group
        - id: 7e277d102c874560becc464cdfe33a86
          name: Benefits Employees
          displayName: Benefits Employees
          type: ACCESS_PROFILE
          description: Access for Benefits Employees. Distribution group and File
            share access.
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          owner:
            id: 278f8a1859df48d2a0adb204257b26a2
            name: Jerry.Bennett
            displayName: Jerry.Bennett
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: 468171f0af874adebb58d3718519bd56
          name: SalesCommonAccess
          displayName: SalesCommonAccess
          type: ACCESS_PROFILE
          description: Grants basic access for everyone in the sale department
          enabled: false
          requestable: false
          requestCommentsRequired: false
          source:
            id: 5c71ff71195b4794a0b87e7cf36fb017
            name: Active Directory
          owner:
            id: 278f8a1859df48d2a0adb204257b26a2
            name: Jerry.Bennett
            displayName: Jerry.Bennett
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: ad7025c956734455b28fa35e315e77fe
          name: Benefits Common Access
          displayName: Benefits Common Access
          type: ROLE
          description: Testing AD provisioning with birthright access
          enabled: false
          requestable: false
          requestCommentsRequired: false
          owner:
            id: 322c6bce405a495a8e841a014b7d8410
            name: tina.smith
            displayName: tina.smith
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        - id: a8819cb0445541438fe08dd38f311b3c
          name: SalesGlobal
          displayName: SalesGlobal
          type: ROLE
          description: All Sales people in the company
          enabled: false
          requestable: false
          requestCommentsRequired: false
          owner:
            id: 29b6ee3f91484d159b1ceac3109af151
            name: se.admin
            displayName: se.admin
          disabled: false
          privileged: false
          standalone: false
          revocable: false
          cloudEligible: false
          cloudGoverned: false
        accessCount: 8
        accessProfileCount: 2
        entitlementCount: 4
        roleCount: 2
        modified: 2025-01-17T03:17:17.895Z
        visibleSegments:
        - All Employees
        visibleSegmentCount: 1
        tagCount: 2
        tags:
        - TAG_1
        - TAG_2
    role:
      summary: Role
      value:
        id: 2c91808c6faadea6016fb4f2bc69077b
        accessProfileCount: 1
        accessProfiles:
        - id: 468171f0af874adebb58d3718519bd56
          name: SalesCommonAccess
        created: 2023-06-01T22:00:55.311Z
        description: All Sales people in the company
        dimensional: false
        enabled: true
        modified: 2023-06-01T22:00:55.432Z
        name: SalesGlobal
        owner:
          email: admin@sailpointdemo.com
          id: c18630c4811c4030810afb3a14f388cf
          name: admin
          type: IDENTITY
        requestCommentsRequired: false
        requestable: true
        tags:
        - TAG_1
        - TAG_2
    identities-details-report-results:
      summary: Identities details report result.
      value:
        reportType: IDENTITIES_DETAILS
        taskDefName: Identities Details Report
        id: 1e01d272b8084c4fa12fcf8fa898102d
        created: 2023-09-07T42:14:05.122Z
        status: SUCCESS
        duration: 3681
        rows: 193
        availableFormats:
        - CSV
    account-export-report-details:
      summary: Account export report
      value:
        reportType: ACCOUNTS
        arguments:
          application: 2c9180897eSourceIde781782f705b9
          sourceName: Active Directory
    identities-details-report-details:
      summary: Identities details report
      value:
        reportType: IDENTITIES_DETAILS
        arguments:
          correlatedOnly: true
    identities-report-details:
      summary: Identities report
      value:
        reportType: IDENTITIES
        arguments:
          correlatedOnly: true
    identity-profile-identity-error-report-details:
      summary: Identity profile identity error report
      value:
        reportType: IDENTITY_PROFILE_IDENTITY_ERROR
        arguments:
          authoritativeSource: 2c9180847de347aa017de8ef09167792
    orphan-identities-report-details:
      summary: Orphan identities report
      value:
        reportType: ORPHAN_IDENTITIES
        arguments:
          selectedFormats:
          - CSV
          - PDF
    search-export-report-details:
      summary: Search export report
      value:
        reportType: SEARCH_EXPORT
        arguments:
          indices:
          - identities
          query: attributes.city:London
          columns: "displayName,firstName,lastName,email,attributes.city,created,attributes.cloudLifecycleState,access.spread"
          sort:
          - +displayName
    uncorrelated-accounts-report-details:
      summary: Uncorrelated accounts report
      value:
        reportType: UNCORRELATED_ACCOUNTS
        arguments:
          selectedFormats:
          - CSV
          - PDF
    identities-details-report-task-result:
      summary: Identities details report task result.
      value:
        reportType: IDENTITIES_DETAILS
        taskDefName: Identities Details Report
        type: QUARTZ
        id: a248c16fe22222b2bd49615481311111
        created: 2023-09-07T42:14:00.364Z
        description: A detailed view of the identities in the system.
        parentName: Audit Report
        launcher: "9832285"
        launched: 2023-09-07T42:14:00.521Z
        completed: 2023-09-07T42:14:01.137Z
        messages: []
        returns: []
        attributes:
          org: an-org
        progress: Initializing...
    search-export-report-task-result:
      summary: Identities details report task result.
      value:
        reportType: SEARCH_EXPORT
        taskDefName: Search Export
        type: QUARTZ
        id: a248c16fe22222b2bd49615481311111
        created: 2023-09-07T42:14:11.137Z
        description: Extract query data from ElasticSearch to CSV
        parentName: null
        launcher: T05293
        launched: 2020-09-07T42:14:11.137Z
        completed: 2020-09-07T42:14:13.451Z
        messages: []
        returns: []
        attributes:
          queryHash: 5e12cf79c67d92e23d4d8cb3e974f87d164e86d4a48d32ecf89645cacfd3f2
          org: an-org
          queryParams:
            columns: "displayName,firstName,lastName,email,created,attributes.cloudLifecycleState,tags,access.spread,apps.pread,accounts.spread"
            indices: identities
            ownerId: 95ecba5c5444439c999aec638ce2a777
            query: 700007
            sort: displayName
        progress: Initializing...
    SlimDiscoveredApplications:
      description: List of discovered applications
      value:
      - id: 09d88a67-bae8-422c-a09b-f7a72f5ab032
        name: Example App
        discoverySource: csv
        discoveredVendor: Example Vendor
        description: An application for managing examples.
        recommendedConnectors:
        - ConnectorA
        - ConnectorB
        discoveredAt: 2023-07-01T12:00:00Z
        createdAt: 2024-06-01T12:00:00Z
        status: ACTIVE
      - id: 59310a1e-0d8f-42fa-95aa-b82b263de7f6
        name: Sample Tracker
        discoverySource: Okta SaaS
        discoveredVendor: Sample Vendor
        description: A tool for monitoring and managing samples.
        recommendedConnectors:
        - ConnectorC
        - ConnectorD
        discoveredAt: 2023-08-15T08:00:00Z
        createdAt: 2024-05-20T08:00:00Z
        status: ACTIVE
      - id: dfe675cb-f689-475f-99f1-49e348449867
        name: Demo Manager
        discoverySource: Okta SaaS
        discoveredVendor: Demo Provider
        description: Software to demonstrate basic functionalities.
        recommendedConnectors:
        - ConnectorE
        - ConnectorF
        discoveredAt: 2023-09-10T15:00:00Z
        createdAt: 2024-07-03T15:00:00Z
        status: ACTIVE
    FullDiscoveredApplications:
      description: List of discovered applications with their respective associated
        sources
      value:
      - id: 6f672248-2dac-4cf5-9531-fca0719cbb4a
        name: Example App
        discoverySource: csv
        discoveredVendor: Example Vendor
        description: An application for managing examples.
        recommendedConnectors:
        - ConnectorA
        - ConnectorB
        discoveredAt: 2023-07-01T12:00:00Z
        createdAt: 2024-06-01T12:00:00Z
        status: ACTIVE
        associatedSources:
        - e0cc5d7d-bf7f-4f81-b2af-8885b09d9923
      - id: b3a3a704-6a45-45ee-a501-bbc332388222
        name: Sample Tracker
        discoverySource: Okta SaaS
        discoveredVendor: Sample Vendor
        description: A tool for monitoring and managing samples.
        recommendedConnectors:
        - ConnectorC
        - ConnectorD
        discoveredAt: 2023-08-15T08:00:00Z
        createdAt: 2024-05-20T08:00:00Z
        status: ACTIVE
        associatedSources:
        - a3b159f2-5f09-43c9-b40e-a6f317aa5b8f
        - e0cc5d7d-bf7f-4f81-b2af-8885b09d9923
      - id: 1d070458-faed-4a6c-8990-918ad70a06ee
        name: Demo Manager
        discoverySource: Okta SaaS
        discoveredVendor: Demo Provider
        description: Software to demonstrate basic functionalities.
        recommendedConnectors:
        - ConnectorE
        - ConnectorF
        discoveredAt: 2023-09-10T15:00:00Z
        createdAt: 2024-07-03T15:00:00Z
        status: ACTIVE
        associatedSources:
        - 4e2d7605-833f-4c34-8d03-5b2c7d2f4f66
        - f9b7e2ce-aced-4117-a95f-4ffad8b33989
        - a3b159f2-5f09-43c9-b40e-a6f317aa5b8f
      - id: 9be7c5a5-9f37-46ba-965a-e5b9453472c6
        name: Task Organizer
        discoverySource: Manual Entry
        discoveredVendor: Organizer Solutions
        description: An application designed to help teams manage tasks and projects
          efficiently.
        recommendedConnectors:
        - ConnectorG
        - ConnectorH
        discoveredAt: 2023-10-05T14:00:00Z
        createdAt: 2024-08-01T14:00:00Z
        status: ACTIVE
        associatedSources: []
  parameters:
    limit:
      description: |-
        Max number of results to return.
        See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
      example: 250
      in: query
      name: limit
      required: false
      schema:
        default: 250
        format: int32
        maximum: 250
        minimum: 0
        type: integer
    offset:
      description: |-
        Offset into the full result set. Usually specified with *limit* to paginate through the results.
        See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
      example: 0
      in: query
      name: offset
      required: false
      schema:
        default: 0
        format: int32
        minimum: 0
        type: integer
    count:
      description: |-
        If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

        Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

        See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
      example: true
      in: query
      name: count
      required: false
      schema:
        default: false
        type: boolean
    limit50:
      description: |-
        Note that for this API the maximum value for limit is 50.
        See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
      example: 50
      in: query
      name: limit
      required: false
      schema:
        default: 50
        format: int32
        maximum: 50
        minimum: 0
        type: integer
    id:
      description: ID of the requested document.
      example: 2c91808568c529c60168cca6f90c1313
      in: path
      name: id
      required: true
      schema:
        type: string
      x-sailpoint-resource-operation-id:
      - listAccessProfiles
      - listAccountActivities
      - listEntitlements
      - listRoles
      - listIdentities
    searchlimit:
      description: |-
        Max number of results to return.
        See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
      example: 10000
      in: query
      name: limit
      required: false
      schema:
        default: 250
        format: int32
        maximum: 10000
        minimum: 0
        type: integer
    index:
      description: |
        The index from which to fetch the specified document.

        The currently supported index names are: *accessprofiles*, *accountactivities*, *entitlements*, *events*, *identities*, and *roles*.
      example: identities
      in: path
      name: index
      required: true
      schema:
        enum:
        - accessprofiles
        - accountactivities
        - entitlements
        - events
        - identities
        - roles
        type: string
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
      description: Client Error - Returned if the request body is invalid.
    "401":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listAccessProfiles_401_response'
      description: "Unauthorized - Returned if there is no authorization header, or\
        \ if the JWT token is expired."
    "403":
      content:
        application/json:
          examples:
            "403":
              summary: An example of a 403 response object
              value:
                detailCode: 403 Forbidden
                trackingId: b21b1f7ce4da4d639f2c62a57171b427
                messages:
                - locale: en-US
                  localeOrigin: DEFAULT
                  text: The server understood the request but refuses to authorize
                    it.
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
      description: "Forbidden - Returned if the user you are running as, doesn't have\
        \ access to this end-point."
    "429":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listAccessProfiles_429_response'
      description: Too Many Requests - Returned in response to too many requests in
        a given period of time - rate limited. The Retry-After header in the response
        includes how long to wait before trying again.
    "500":
      content:
        application/json:
          examples:
            "500":
              summary: An example of a 500 response object
              value:
                detailCode: 500.0 Internal Fault
                trackingId: b21b1f7ce4da4d639f2c62a57171b427
                messages:
                - locale: en-US
                  localeOrigin: DEFAULT
                  text: An internal fault occurred.
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
      description: Internal Server Error - Returned if there is an unexpected error.
    "204":
      description: No content - indicates the request was successful but there is
        no content to be returned in the response.
    "202":
      content:
        application/json:
          schema:
            type: object
      description: Accepted - Returned if the request was successfully accepted into
        the system.
    "404":
      content:
        application/json:
          examples:
            "404":
              summary: An example of a 404 response object
              value:
                detailCode: 404 Not found
                trackingId: b21b1f7ce4da4d639f2c62a57171b427
                messages:
                - locale: en-US
                  localeOrigin: DEFAULT
                  text: The server did not find a current representation for the target
                    resource.
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
      description: Not Found - returned if the request URL refers to a resource or
        object that does not exist
    "405":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/getVendorConnectorMappings_405_response'
      description: "Method Not Allowed - indicates that the server knows the request\
        \ method, but the target resource doesn't support this method."
  schemas:
    AccessRequest:
      example:
        requestedFor: 2c918084660f45d6016617daa9210584
        clientMetadata:
          requestedAppId: 2c91808f7892918f0178b78da4a305a1
          requestedAppName: test-app
        requestType: GRANT_ACCESS
        requestedItems:
        - clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          removeDate: 2020-07-11T21:23:15Z
          comment: Requesting access profile for John Doe
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
          assignmentId: ee48a191c00d49bf9264eb0a4fc3a9fc
          nativeIdentity: "CN=User db3377de14bf,OU=YOURCONTAINER, DC=YOURDOMAIN"
        - clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          removeDate: 2020-07-11T21:23:15Z
          comment: Requesting access profile for John Doe
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
          assignmentId: ee48a191c00d49bf9264eb0a4fc3a9fc
          nativeIdentity: "CN=User db3377de14bf,OU=YOURCONTAINER, DC=YOURDOMAIN"
        - clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          removeDate: 2020-07-11T21:23:15Z
          comment: Requesting access profile for John Doe
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
          assignmentId: ee48a191c00d49bf9264eb0a4fc3a9fc
          nativeIdentity: "CN=User db3377de14bf,OU=YOURCONTAINER, DC=YOURDOMAIN"
        - clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          removeDate: 2020-07-11T21:23:15Z
          comment: Requesting access profile for John Doe
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
          assignmentId: ee48a191c00d49bf9264eb0a4fc3a9fc
          nativeIdentity: "CN=User db3377de14bf,OU=YOURCONTAINER, DC=YOURDOMAIN"
        - clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          removeDate: 2020-07-11T21:23:15Z
          comment: Requesting access profile for John Doe
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
          assignmentId: ee48a191c00d49bf9264eb0a4fc3a9fc
          nativeIdentity: "CN=User db3377de14bf,OU=YOURCONTAINER, DC=YOURDOMAIN"
        requestedForWithRequestedItems:
        - identityId: cb89bc2f1ee6445fbea12224c526ba3a
          requestedItems:
          - clientMetadata:
              requestedAppName: test-app
              requestedAppId: 2c91808f7892918f0178b78da4a305a1
            removeDate: 2020-07-11T21:23:15Z
            accountSelection:
            - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
              accounts:
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
            - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
              accounts:
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
            comment: Requesting access profile for John Doe
            id: 2c9180835d2e5168015d32f890ca1581
            type: ACCESS_PROFILE
          - clientMetadata:
              requestedAppName: test-app
              requestedAppId: 2c91808f7892918f0178b78da4a305a1
            removeDate: 2020-07-11T21:23:15Z
            accountSelection:
            - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
              accounts:
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
            - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
              accounts:
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
            comment: Requesting access profile for John Doe
            id: 2c9180835d2e5168015d32f890ca1581
            type: ACCESS_PROFILE
        - identityId: cb89bc2f1ee6445fbea12224c526ba3a
          requestedItems:
          - clientMetadata:
              requestedAppName: test-app
              requestedAppId: 2c91808f7892918f0178b78da4a305a1
            removeDate: 2020-07-11T21:23:15Z
            accountSelection:
            - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
              accounts:
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
            - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
              accounts:
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
            comment: Requesting access profile for John Doe
            id: 2c9180835d2e5168015d32f890ca1581
            type: ACCESS_PROFILE
          - clientMetadata:
              requestedAppName: test-app
              requestedAppId: 2c91808f7892918f0178b78da4a305a1
            removeDate: 2020-07-11T21:23:15Z
            accountSelection:
            - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
              accounts:
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
            - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
              accounts:
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
              - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
                nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
            comment: Requesting access profile for John Doe
            id: 2c9180835d2e5168015d32f890ca1581
            type: ACCESS_PROFILE
      properties:
        requestedFor:
          description: "A list of Identity IDs for whom the Access is requested. If\
            \ it's a Revoke request, there can only be one Identity ID."
          example: 2c918084660f45d6016617daa9210584
          items:
            type: string
          type: array
        requestType:
          $ref: '#/components/schemas/AccessRequestType'
        requestedItems:
          items:
            $ref: '#/components/schemas/AccessRequestItem'
          maxItems: 25
          minItems: 1
          type: array
        clientMetadata:
          additionalProperties:
            example: "{requestedAppId=2c91808f7892918f0178b78da4a305a1, requestedAppName=test-app}"
            type: string
          description: Arbitrary key-value pairs. They will never be processed by
            the IdentityNow system but will be returned on associated APIs such as
            /account-activities.
          example:
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
            requestedAppName: test-app
          type: object
        requestedForWithRequestedItems:
          description: |
            Additional submit data structure with requestedFor containing requestedItems allowing distinction for each request item and Identity.
            * Can only be used when 'requestedFor' and 'requestedItems' are not separately provided
            * Adds ability to specify which account the user wants the access on, in case they have multiple accounts on a source
            * Allows the ability to request items with different remove dates
            * Also allows different combinations of request items and identities in the same request
            * Only for use in GRANT_ACCESS type requests
          items:
            $ref: '#/components/schemas/RequestedForDtoRef'
          nullable: true
          type: array
      required:
      - requestedFor
      - requestedItems
      type: object
    AccessRequestItem:
      example:
        clientMetadata:
          requestedAppName: test-app
          requestedAppId: 2c91808f7892918f0178b78da4a305a1
        removeDate: 2020-07-11T21:23:15Z
        comment: Requesting access profile for John Doe
        id: 2c9180835d2e5168015d32f890ca1581
        type: ACCESS_PROFILE
        assignmentId: ee48a191c00d49bf9264eb0a4fc3a9fc
        nativeIdentity: "CN=User db3377de14bf,OU=YOURCONTAINER, DC=YOURDOMAIN"
      properties:
        type:
          description: The type of the item being requested.
          enum:
          - ACCESS_PROFILE
          - ROLE
          - ENTITLEMENT
          example: ACCESS_PROFILE
          type: string
        id:
          description: "ID of Role, Access Profile or Entitlement being requested."
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        comment:
          description: |
            Comment provided by requester.
            * Comment is required when the request is of type Revoke Access.
          example: Requesting access profile for John Doe
          type: string
        clientMetadata:
          additionalProperties:
            example: "{requestedAppId=2c91808f7892918f0178b78da4a305a1, requestedAppName=test-app}"
            type: string
          description: Arbitrary key-value pairs. They will never be processed by
            the IdentityNow system but will be returned on associated APIs such as
            /account-activities and /access-request-status.
          example:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          type: object
        removeDate:
          description: |
            The date and time the role or access profile or entitlement is no longer assigned to the specified identity. Also known as the expiration date.
            * Specify a date-time in the future.
            * The current SLA for the deprovisioning is 24 hours.
            * This date-time can be used to change the duration of an existing access item assignment for the specified identity. A GRANT_ACCESS request can extend duration or even remove an expiration date, and either a  GRANT_ACCESS or REVOKE_ACCESS request can reduce duration or add an expiration date where one has not previously been present. You can change the expiration date in requests for yourself or others you are authorized to request for.
          example: 2020-07-11T21:23:15Z
          format: date-time
          type: string
        assignmentId:
          description: |
            The assignmentId for a specific role assignment on the identity. This id is used to revoke that specific roleAssignment on that identity.
            * For use with REVOKE_ACCESS requests for roles for identities with multiple accounts on a single source.
          example: ee48a191c00d49bf9264eb0a4fc3a9fc
          nullable: true
          type: string
        nativeIdentity:
          description: |
            The unique identifier for an account on the identity, designated as the account ID attribute in the source's account schema. This is used to revoke a specific attributeAssignment on the identity.
            * For use with REVOKE_ACCESS requests for entitlements for identities with multiple accounts on a single source.
          example: "CN=User db3377de14bf,OU=YOURCONTAINER, DC=YOURDOMAIN"
          nullable: true
          type: string
      required:
      - id
      - type
      type: object
    AccessProfileDocument:
      allOf:
      - $ref: '#/components/schemas/BaseAccess'
      - properties:
          id:
            description: Access profile's ID.
            example: 2c9180825a6c1adc015a71c9023f0818
            type: string
          name:
            description: Access profile's name.
            example: Cloud Eng
            type: string
          source:
            $ref: '#/components/schemas/AccessProfileDocument_allOf_source'
          entitlements:
            description: Entitlements the access profile has access to.
            items:
              $ref: '#/components/schemas/BaseEntitlement'
            type: array
          entitlementCount:
            description: Number of entitlements.
            example: 5
            type: integer
          segments:
            description: Segments with the access profile.
            items:
              $ref: '#/components/schemas/BaseSegment'
            type: array
          segmentCount:
            description: Number of segments with the access profile.
            example: 1
            format: int32
            type: integer
          tags:
            $ref: '#/components/schemas/Tags'
          apps:
            description: Applications with the access profile
            items:
              $ref: '#/components/schemas/AccessApps'
            type: array
        required:
        - id
        - name
        type: object
      description: 'More complete representation of an access profile.  '
    AccessProfileSummary:
      allOf:
      - $ref: '#/components/schemas/Access'
      - properties:
          type:
            description: Type of the access item.
            example: ACCESS_PROFILE
            type: string
          source:
            $ref: '#/components/schemas/Reference'
          owner:
            $ref: '#/components/schemas/DisplayReference'
          revocable:
            example: true
            type: boolean
        type: object
      description: This is a summary representation of an access profile.
    AccessReviewReassignment:
      example:
        reason: reassigned for some reason
        reassignTo: ef38f94347e94562b5bb8424a56397d8
        reassign:
        - id: ef38f94347e94562b5bb8424a56397d8
          type: ITEM
        - id: ef38f94347e94562b5bb8424a56397d8
          type: ITEM
      properties:
        reassign:
          items:
            $ref: '#/components/schemas/ReassignReference'
          type: array
        reassignTo:
          description: The ID of the identity to which the certification is reassigned
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        reason:
          description: The reason comment for why the reassign was made
          example: reassigned for some reason
          type: string
      required:
      - reason
      - reassign
      - reassignTo
      type: object
    Account:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - properties:
          sourceId:
            description: The unique ID of the source this account belongs to
            example: 2c9180835d2e5168015d32f890ca1581
            type: string
          sourceName:
            description: The display name of the source this account belongs to
            example: Employees
            nullable: true
            type: string
          identityId:
            description: The unique ID of the identity this account is correlated
              to
            example: 2c9180835d2e5168015d32f890ca1581
            type: string
          cloudLifecycleState:
            description: The lifecycle state of the identity this account is correlated
              to
            example: active
            nullable: true
            type: string
          identityState:
            description: The identity state of the identity this account is correlated
              to
            example: ACTIVE
            nullable: true
            type: string
          connectionType:
            description: The connection type of the source this account is from
            example: direct
            nullable: true
            type: string
          isMachine:
            default: false
            description: Indicates if the account is of machine type
            example: true
            type: boolean
          recommendation:
            $ref: '#/components/schemas/Account_allOf_recommendation'
          attributes:
            additionalProperties: true
            description: The account attributes that are aggregated
            example:
              firstName: SailPoint
              lastName: Support
              displayName: SailPoint Support
            nullable: true
            type: object
          authoritative:
            description: Indicates if this account is from an authoritative source
            example: false
            type: boolean
          description:
            description: A description of the account
            nullable: true
            type: string
            example: null
          disabled:
            description: Indicates if the account is currently disabled
            example: false
            type: boolean
          locked:
            description: Indicates if the account is currently locked
            example: false
            type: boolean
          nativeIdentity:
            description: The unique ID of the account generated by the source system
            example: "552775"
            type: string
          systemAccount:
            description: "If true, this is a user account within IdentityNow.  If\
              \ false, this is an account from a source system."
            example: false
            type: boolean
          uncorrelated:
            description: Indicates if this account is not correlated to an identity
            example: false
            type: boolean
          uuid:
            description: The unique ID of the account as determined by the account
              schema
            example: "{b0dce506-d6d4-44d2-8a32-d9a5b21fb175}"
            nullable: true
            type: string
          manuallyCorrelated:
            description: Indicates if the account has been manually correlated to
              an identity
            example: false
            type: boolean
          hasEntitlements:
            description: Indicates if the account has entitlements
            example: true
            type: boolean
          identity:
            $ref: '#/components/schemas/Account_allOf_identity'
          sourceOwner:
            $ref: '#/components/schemas/Account_allOf_sourceOwner'
          features:
            description: A string list containing the owning source's features
            example: ENABLE
            nullable: true
            type: string
          origin:
            description: The origin of the account either aggregated or provisioned
            enum:
            - AGGREGATED
            - PROVISIONED
            - null
            example: AGGREGATED
            nullable: true
            type: string
          ownerIdentity:
            $ref: '#/components/schemas/Account_allOf_ownerIdentity'
        required:
        - attributes
        - authoritative
        - disabled
        - hasEntitlements
        - locked
        - manuallyCorrelated
        - nativeIdentity
        - sourceId
        - sourceName
        - systemAccount
        - uncorrelated
        type: object
      example:
        sourceId: 2c9180835d2e5168015d32f890ca1581
        origin: AGGREGATED
        recommendation:
          method: DISCOVERY
          type: MACHINE
        description: description
        sourceOwner:
          name: Adam Kennedy
          id: 2c918084660f45d6016617daa9210584
          type: IDENTITY
        connectionType: direct
        uuid: "{b0dce506-d6d4-44d2-8a32-d9a5b21fb175}"
        ownerIdentity:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        features: ENABLE
        identity:
          name: John Doe
          id: 2c918084660f45d6016617daa9210584
          type: IDENTITY
        modified: 2015-05-28T14:07:17Z
        disabled: false
        hasEntitlements: true
        id: id12345
        locked: false
        isMachine: true
        authoritative: false
        created: 2015-05-28T14:07:17Z
        manuallyCorrelated: false
        identityState: ACTIVE
        nativeIdentity: "552775"
        uncorrelated: false
        identityId: 2c9180835d2e5168015d32f890ca1581
        name: aName
        cloudLifecycleState: active
        attributes:
          firstName: SailPoint
          lastName: Support
          displayName: SailPoint Support
        sourceName: Employees
        systemAccount: false
    AccountActivity:
      example:
        clientMetadata:
          customKey1: custom value 1
          customKey2: custom value 2
        created: 2017-07-11T18:45:37.098Z
        warnings:
        - "Some warning, another warning"
        executionStatus: COMPLETED
        completed: 2018-10-19T13:49:37.385Z
        type: appRequest
        targetIdentitySummary:
          identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
          name: SailPoint Services
          id: ff80818155fe8c080155fe8d925b0316
          completed: true
        name: 2c9180835d2e5168015d32f890ca1581
        requesterIdentitySummary:
          identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
          name: SailPoint Services
          id: ff80818155fe8c080155fe8d925b0316
          completed: true
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
        completionStatus: SUCCESS
        items:
        - approvalStatus: PENDING
          reviewerComment:
            date: 2017-07-11T18:45:37.098Z
            commenterName: Adam Kennedy
            body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
              erat.
            commenterId: 2c918084660f45d6016617daa9210584
          sourceId: 2c91808363ef85290164000587130c0c
          clientMetadata:
            customKey1: custom value 1
            customKey2: custom value 2
          removeDate: 2020-07-11T00:00:00Z
          reviewerIdentitySummary:
            identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
            name: SailPoint Services
            id: ff80818155fe8c080155fe8d925b0316
            completed: true
          requesterComment:
            date: 2017-07-11T18:45:37.098Z
            commenterName: Adam Kennedy
            body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
              erat.
            commenterId: 2c918084660f45d6016617daa9210584
          accountRequestInfo:
            requestedObjectId: 2c91808563ef85690164001c31140c0c
            requestedObjectName: Treasury Analyst
            requestedObjectType: ACCESS_PROFILE
          nativeIdentity: Sandie.Camero
          requested: 2017-07-11T18:45:37.098Z
          provisioningStatus: PENDING
          name: 48c545831b264409a81befcabb0e3c5a
          id: 48c545831b264409a81befcabb0e3c5a
          attribute: detectedRoles
          operation: ADD
          value: "Treasury Analyst [AccessProfile-1529010191212]"
        - approvalStatus: PENDING
          reviewerComment:
            date: 2017-07-11T18:45:37.098Z
            commenterName: Adam Kennedy
            body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
              erat.
            commenterId: 2c918084660f45d6016617daa9210584
          sourceId: 2c91808363ef85290164000587130c0c
          clientMetadata:
            customKey1: custom value 1
            customKey2: custom value 2
          removeDate: 2020-07-11T00:00:00Z
          reviewerIdentitySummary:
            identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
            name: SailPoint Services
            id: ff80818155fe8c080155fe8d925b0316
            completed: true
          requesterComment:
            date: 2017-07-11T18:45:37.098Z
            commenterName: Adam Kennedy
            body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
              erat.
            commenterId: 2c918084660f45d6016617daa9210584
          accountRequestInfo:
            requestedObjectId: 2c91808563ef85690164001c31140c0c
            requestedObjectName: Treasury Analyst
            requestedObjectType: ACCESS_PROFILE
          nativeIdentity: Sandie.Camero
          requested: 2017-07-11T18:45:37.098Z
          provisioningStatus: PENDING
          name: 48c545831b264409a81befcabb0e3c5a
          id: 48c545831b264409a81befcabb0e3c5a
          attribute: detectedRoles
          operation: ADD
          value: "Treasury Analyst [AccessProfile-1529010191212]"
        errors:
        - "sailpoint.connector.ConnectorException: java.lang.InterruptedException:\
          \ Timeout waiting for response to message 0 from client 57a4ab97-ab3f-4aef-9fe2-0eaf15c73d26\
          \ after 60 seconds."
      properties:
        id:
          description: Id of the account activity
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: The name of the activity
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        created:
          description: When the activity was first created
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: When the activity was last modified
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        completed:
          description: When the activity was completed
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          nullable: true
          type: string
        completionStatus:
          $ref: '#/components/schemas/CompletionStatus'
        type:
          description: |
            The type of action the activity performed.  Please see the following list of types.  This list may grow over time.

            - CloudAutomated
            - IdentityAttributeUpdate
            - appRequest
            - LifecycleStateChange
            - AccountStateUpdate
            - AccountAttributeUpdate
            - CloudPasswordRequest
            - Attribute Synchronization Refresh
            - Certification
            - Identity Refresh
            - Lifecycle Change Refresh


            [Learn more here](https://documentation.sailpoint.com/saas/help/search/searchable-fields.html#searching-account-activity-data).
          example: appRequest
          nullable: true
          type: string
        requesterIdentitySummary:
          $ref: '#/components/schemas/IdentitySummary'
        targetIdentitySummary:
          $ref: '#/components/schemas/IdentitySummary'
        errors:
          description: "A list of error messages, if any, that were encountered."
          example:
          - "sailpoint.connector.ConnectorException: java.lang.InterruptedException:\
            \ Timeout waiting for response to message 0 from client 57a4ab97-ab3f-4aef-9fe2-0eaf15c73d26\
            \ after 60 seconds."
          items:
            type: string
          nullable: true
          type: array
        warnings:
          description: "A list of warning messages, if any, that were encountered."
          example:
          - "Some warning, another warning"
          items:
            type: string
          nullable: true
          type: array
        items:
          description: Individual actions performed as part of this account activity
          items:
            $ref: '#/components/schemas/AccountActivityItem'
          nullable: true
          type: array
        executionStatus:
          $ref: '#/components/schemas/ExecutionStatus'
        clientMetadata:
          additionalProperties:
            type: string
          description: "Arbitrary key-value pairs, if any were included in the corresponding\
            \ access request"
          example:
            customKey1: custom value 1
            customKey2: custom value 2
          nullable: true
          type: object
      type: object
    AccountActivitySearchedItem:
      description: AccountActivity
      properties:
        id:
          description: ID of account activity.
          example: 2c91808375d8e80a0175e1f88a575222
          type: string
        action:
          description: Type of action performed in the activity.
          example: Identity Refresh.
          externalDocs:
            description: Learn more about account activity action types
            url: https://documentation.sailpoint.com/saas/help/search/searchable-fields.html#searching-account-activity-data
          type: string
        created:
          description: ISO-8601 date-time referring to the time when the object was
            created.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: ISO-8601 date-time referring to the time when the object was
            last modified.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        synced:
          description: "ISO-8601 date-time referring to the date-time when object\
            \ was queued to be synced into search database for use in the search API.\
            \  \nThis date-time changes anytime there is an update to the object,\
            \ which triggers a synchronization event being sent to the search database.\
            \ \nThere may be some delay between the `synced` time and the time when\
            \ the updated data is actually available in the search API. "
          example: 2018-06-25T20:22:28.104Z
          type: string
        stage:
          description: Activity's current stage.
          example: Completed
          type: string
        status:
          description: Activity's current status.
          example: Complete
          type: string
        requester:
          $ref: '#/components/schemas/ActivityIdentity'
        recipient:
          $ref: '#/components/schemas/ActivityIdentity'
        trackingNumber:
          description: Account activity's tracking number.
          example: 61aad0c9e8134eca89e76a35e0cabe3f
          type: string
        errors:
          description: Errors provided by the source while completing account actions.
          items:
            type: string
          nullable: true
          type: array
          example: null
        warnings:
          description: Warnings provided by the source while completing account actions.
          items:
            type: string
          nullable: true
          type: array
          example: null
        approvals:
          description: Approvals performed on an item during activity.
          items:
            $ref: '#/components/schemas/Approval'
          type: array
        originalRequests:
          description: Original actions that triggered all individual source actions
            related to the account action.
          items:
            $ref: '#/components/schemas/OriginalRequest'
          type: array
        expansionItems:
          description: Controls that translated the attribute requests into actual
            provisioning actions on the source.
          items:
            $ref: '#/components/schemas/ExpansionItem'
          type: array
        accountRequests:
          description: Account data for each individual source action triggered by
            the original requests.
          items:
            $ref: '#/components/schemas/AccountRequest'
          type: array
        sources:
          description: Sources involved in the account activity.
          example: "smartsheet-test, airtable-v4, IdentityNow"
          type: string
      type: object
    AccountAttributes:
      example:
        attributes:
          city: Austin
          displayName: John Doe
          userName: jdoe
          sAMAccountName: jDoe
          mail: john.doe@sailpoint.com
      properties:
        attributes:
          additionalProperties: true
          description: The schema attribute values for the account
          example:
            city: Austin
            displayName: John Doe
            userName: jdoe
            sAMAccountName: jDoe
            mail: john.doe@sailpoint.com
          type: object
      required:
      - attributes
      type: object
    AccountsAsyncResult:
      description: Accounts async response containing details on started async process
      example:
        id: 2c91808474683da6017468693c260195
      properties:
        id:
          description: id of the task
          example: 2c91808474683da6017468693c260195
          type: string
      required:
      - id
      type: object
    AccountToggleRequest:
      description: Request used for account enable/disable
      example:
        forceProvisioning: false
        externalVerificationId: 3f9180835d2e5168015d32f890ca1581
      properties:
        externalVerificationId:
          description: "If set, an external process validates that the user wants\
            \ to proceed with this request."
          example: 3f9180835d2e5168015d32f890ca1581
          type: string
        forceProvisioning:
          description: "If set, provisioning updates the account attribute at the\
            \ source.   This option is used when the account is not synced to ensure\
            \ the attribute is updated. Providing 'true' for an unlocked account will\
            \ add and process 'Unlock' operation by the workflow."
          example: false
          type: boolean
      type: object
    AccountUnlockRequest:
      description: Request used for account unlock
      example:
        forceProvisioning: false
        externalVerificationId: 3f9180835d2e5168015d32f890ca1581
        unlockIDNAccount: false
      properties:
        externalVerificationId:
          description: "If set, an external process validates that the user wants\
            \ to proceed with this request."
          example: 3f9180835d2e5168015d32f890ca1581
          type: string
        unlockIDNAccount:
          description: "If set, the IDN account is unlocked after the workflow completes."
          example: false
          type: boolean
        forceProvisioning:
          description: "If set, provisioning updates the account attribute at the\
            \ source.   This option is used when the account is not synced to ensure\
            \ the attribute is updated."
          example: false
          type: boolean
      type: object
    ApprovalItems:
      example:
        application: Active Directory
        name: emailAddress
        id: 2c9180835d2e5168015d32f890ca1581
        state: ""
        operation: update
        value: a@b.com
        account: john.smith
      properties:
        id:
          description: The approval item's ID
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        account:
          description: The account referenced by the approval item
          example: john.smith
          nullable: true
          type: string
        application:
          description: The name of the application/source
          example: Active Directory
          type: string
        name:
          description: The attribute's name
          example: emailAddress
          nullable: true
          type: string
        operation:
          description: The attribute's operation
          example: update
          type: string
        value:
          description: The attribute's value
          example: a@b.com
          nullable: true
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/WorkItemState'
          - nullable: true
            type: object
      type: object
    Campaign:
      allOf:
      - $ref: '#/components/schemas/SlimCampaign'
      - properties:
          modified:
            description: Modified time of the campaign
            example: 2020-03-03T22:20:12.674Z
            format: date-time
            readOnly: true
            type: string
          filter:
            $ref: '#/components/schemas/Campaign_allOf_filter'
          sunsetCommentsRequired:
            default: true
            description: Determines if comments on sunset date changes are required.
            example: true
            type: boolean
          sourceOwnerCampaignInfo:
            $ref: '#/components/schemas/Campaign_allOf_sourceOwnerCampaignInfo'
          searchCampaignInfo:
            $ref: '#/components/schemas/Campaign_allOf_searchCampaignInfo'
          roleCompositionCampaignInfo:
            $ref: '#/components/schemas/Campaign_allOf_roleCompositionCampaignInfo'
          machineAccountCampaignInfo:
            $ref: '#/components/schemas/Campaign_allOf_machineAccountCampaignInfo'
          sourcesWithOrphanEntitlements:
            description: A list of sources in the campaign that contain \"orphan entitlements\"
              (entitlements without a corresponding Managed Attribute). An empty list
              indicates the campaign has no orphan entitlements. Null indicates there
              may be unknown orphan entitlements in the campaign (the campaign was
              created before this feature was implemented).
            items:
              $ref: '#/components/schemas/Campaign_allOf_sourcesWithOrphanEntitlements'
            readOnly: true
            type: array
          mandatoryCommentRequirement:
            description: "Determines whether comments are required for decisions during\
              \ certification reviews. You can require comments for all decisions,\
              \ revoke-only decisions, or no decisions. By default, comments are not\
              \ required for decisions."
            enum:
            - ALL_DECISIONS
            - REVOKE_ONLY_DECISIONS
            - NO_DECISIONS
            example: NO_DECISIONS
            type: string
        type: object
      example:
        totalCertifications: 100
        sourcesWithOrphanEntitlements:
        - name: Source with orphan entitlements
          id: 2c90ad2a70ace7d50170acf22ca90010
          type: SOURCE
        - name: Source with orphan entitlements
          id: 2c90ad2a70ace7d50170acf22ca90010
          type: SOURCE
        recommendationsEnabled: true
        sunsetCommentsRequired: true
        created: 2020-03-03T22:15:13.611Z
        machineAccountCampaignInfo:
          reviewerType: ACCOUNT_OWNER
          sourceIds:
          - 0fbe863c063c4c88a35fd7f17e8a3df5
        description: Everyone needs to be reviewed by their manager
        type: MANAGER
        sourceOwnerCampaignInfo:
          sourceIds:
          - 0fbe863c063c4c88a35fd7f17e8a3df5
        emailNotificationEnabled: false
        alerts:
        - level: ERROR
          localizations:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
        - level: ERROR
          localizations:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
        filter:
          name: Test Filter
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          type: CAMPAIGN_FILTER
        searchCampaignInfo:
          identityIds:
          - 0fbe863c063c4c88a35fd7f17e8a3df5
          query: Search Campaign query description
          description: Search Campaign description
          reviewer:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          type: ACCESS
          accessConstraints:
          - ids:
            - 2c90ad2a70ace7d50170acf22ca90010
            type: ENTITLEMENT
            operator: SELECTED
          - ids:
            - 2c90ad2a70ace7d50170acf22ca90010
            type: ENTITLEMENT
            operator: SELECTED
          - ids:
            - 2c90ad2a70ace7d50170acf22ca90010
            type: ENTITLEMENT
            operator: SELECTED
          - ids:
            - 2c90ad2a70ace7d50170acf22ca90010
            type: ENTITLEMENT
            operator: SELECTED
          - ids:
            - 2c90ad2a70ace7d50170acf22ca90010
            type: ENTITLEMENT
            operator: SELECTED
        autoRevokeAllowed: false
        name: Manager Campaign
        mandatoryCommentRequirement: NO_DECISIONS
        modified: 2020-03-03T22:20:12.674Z
        roleCompositionCampaignInfo:
          remediatorRef:
            name: Role Admin
            id: 2c90ad2a70ace7d50170acf22ca90010
            type: IDENTITY
          roleIds:
          - 2c90ad2a70ace7d50170acf22ca90010
          query: Search Query
          description: Role Composition Description
          reviewer:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
        completedCertifications: 10
        id: 2c9079b270a266a60170a2779fcb0007
        deadline: 2020-03-15T10:00:01.456Z
        status: ACTIVE
        correlatedStatus: CORRELATED
      title: Campaign
      type: object
    Certification:
      example:
        phase: ACTIVE
        reassignment:
          from:
            name: Certification Name
            id: ef38f94347e94562b5bb8424a56397d8
            reviewer:
              created: 2018-06-25T20:22:28.104Z
              name: Reviewer Name
              modified: 2018-06-25T20:22:28.104Z
              id: ef38f94347e94562b5bb8424a56397d8
              type: IDENTITY
              email: reviewer@test.com
            type: CERTIFICATION
          comment: Reassigned for a reason
        hasErrors: false
        identitiesTotal: 10
        created: 2018-06-25T20:22:28.104Z
        decisionsTotal: 40
        errorMessage: The certification has an error
        signed: 2018-10-19T13:49:37.385Z
        completed: true
        reviewer:
          created: 2018-06-25T20:22:28.104Z
          name: Reviewer Name
          modified: 2018-06-25T20:22:28.104Z
          id: ef38f94347e94562b5bb8424a56397d8
          type: IDENTITY
          email: reviewer@test.com
        identitiesCompleted: 5
        due: 2018-10-19T13:49:37.385Z
        name: "Source Owner Access Review for Employees [source]"
        campaign:
          campaignType: MANAGER
          name: Campaign Name
          mandatoryCommentRequirement: NO_DECISIONS
          description: A description of the campaign
          id: ef38f94347e94562b5bb8424a56397d8
          type: CAMPAIGN
          correlatedStatus: CORRELATED
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
        decisionsMade: 20
      properties:
        id:
          description: id of the certification
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: name of the certification
          example: "Source Owner Access Review for Employees [source]"
          type: string
        campaign:
          $ref: '#/components/schemas/CampaignReference'
        completed:
          description: Have all decisions been made?
          example: true
          type: boolean
        identitiesCompleted:
          description: The number of identities for whom all decisions have been made
            and are complete.
          example: 5
          format: int32
          type: integer
        identitiesTotal:
          description: "The total number of identities in the Certification, both\
            \ complete and incomplete."
          example: 10
          format: int32
          type: integer
        created:
          description: created date
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        modified:
          description: modified date
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        decisionsMade:
          description: The number of approve/revoke/acknowledge decisions that have
            been made.
          example: 20
          format: int32
          type: integer
        decisionsTotal:
          description: The total number of approve/revoke/acknowledge decisions.
          example: 40
          format: int32
          type: integer
        due:
          description: The due date of the certification.
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          nullable: true
          type: string
        signed:
          description: The date the reviewer signed off on the Certification.
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          nullable: true
          type: string
        reviewer:
          $ref: '#/components/schemas/Reviewer'
        reassignment:
          $ref: '#/components/schemas/Reassignment'
        hasErrors:
          description: Identifies if the certification has an error
          example: false
          type: boolean
        errorMessage:
          description: Description of the certification error
          example: The certification has an error
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/CertificationPhase'
      type: object
    CertificationReference:
      example:
        name: Certification Name
        id: ef38f94347e94562b5bb8424a56397d8
        reviewer:
          created: 2018-06-25T20:22:28.104Z
          name: Reviewer Name
          modified: 2018-06-25T20:22:28.104Z
          id: ef38f94347e94562b5bb8424a56397d8
          type: IDENTITY
          email: reviewer@test.com
        type: CERTIFICATION
      properties:
        id:
          description: The id of the certification.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        name:
          description: The name of the certification.
          example: Certification Name
          type: string
        type:
          enum:
          - CERTIFICATION
          example: CERTIFICATION
          type: string
        reviewer:
          $ref: '#/components/schemas/Reviewer'
      type: object
    EntitlementDocument:
      allOf:
      - $ref: '#/components/schemas/BaseDocument'
      - properties:
          modified:
            description: ISO-8601 date-time referring to the time when the object
              was last modified.
            example: 2018-06-25T20:22:28.104Z
            format: date-time
            nullable: true
            type: string
          synced:
            description: "ISO-8601 date-time referring to the date-time when object\
              \ was queued to be synced into search database for use in the search\
              \ API.  \nThis date-time changes anytime there is an update to the object,\
              \ which triggers a synchronization event being sent to the search database.\
              \ \nThere may be some delay between the `synced` time and the time when\
              \ the updated data is actually available in the search API. "
            type: string
          displayName:
            description: Entitlement's display name.
            example: Admin
            type: string
          source:
            $ref: '#/components/schemas/EntitlementDocument_allOf_source'
          segments:
            description: Segments with the entitlement.
            items:
              $ref: '#/components/schemas/BaseSegment'
            type: array
          segmentCount:
            description: Number of segments with the role.
            example: 1
            format: int32
            type: integer
          requestable:
            default: false
            description: Indicates whether the entitlement is requestable.
            example: false
            type: boolean
          cloudGoverned:
            default: false
            description: Indicates whether the entitlement is cloud governed.
            example: false
            type: boolean
          created:
            description: ISO-8601 date-time referring to the time when the object
              was created.
            example: 2018-06-25T20:22:28.104Z
            format: date-time
            nullable: true
            type: string
          privileged:
            default: false
            description: Indicates whether the entitlement is privileged.
            example: false
            type: boolean
          tags:
            $ref: '#/components/schemas/Tags'
          attribute:
            description: Attribute information for the entitlement.
            example: groups
            type: string
          value:
            description: Value of the entitlement.
            example: 1733ff75-441e-4327-9bfc-3ac445fd8cd1
            type: string
          sourceSchemaObjectType:
            description: Source schema object type of the entitlement.
            example: group
            type: string
          schema:
            description: Schema type of the entitlement.
            example: group
            type: string
          hash:
            description: Read-only calculated hash value of an entitlement.
            example: c6fab95235584cca98a454a2f51e5683bc77d6a0
            type: string
          attributes:
            additionalProperties: true
            description: Attributes of the entitlement.
            type: object
          truncatedAttributes:
            description: Truncated attributes of the entitlement.
            items:
              type: string
            type: array
          containsDataAccess:
            default: false
            description: Indicates whether the entitlement contains data access.
            type: boolean
          manuallyUpdatedFields:
            $ref: '#/components/schemas/EntitlementDocument_allOf_manuallyUpdatedFields'
          permissions:
            items:
              $ref: '#/components/schemas/EntitlementDocument_allOf_permissions'
            type: array
        type: object
      description: Entitlement
    EntitlementSummary:
      allOf:
      - $ref: '#/components/schemas/Access'
      - properties:
          source:
            $ref: '#/components/schemas/Reference'
          type:
            description: Type of the access item.
            example: ENTITLEMENT
            type: string
          privileged:
            example: false
            type: boolean
          attribute:
            example: memberOf
            type: string
          value:
            example: "CN=Buyer,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            type: string
          standalone:
            example: false
            type: boolean
        type: object
      description: EntitlementReference
    Event:
      description: Event
      properties:
        id:
          description: ID of the entitlement.
          example: 2c91808375d8e80a0175e1f88a575222
          type: string
        name:
          description: Name of the entitlement.
          example: Add Entitlement Passed
          type: string
        created:
          description: ISO-8601 date-time referring to the time when the object was
            created.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        synced:
          description: "ISO-8601 date-time referring to the date-time when object\
            \ was queued to be synced into search database for use in the search API.\
            \  \nThis date-time changes anytime there is an update to the object,\
            \ which triggers a synchronization event being sent to the search database.\
            \ \nThere may be some delay between the `synced` time and the time when\
            \ the updated data is actually available in the search API. "
          example: 2018-06-25T20:22:28.104Z
          type: string
        action:
          description: Name of the event as it's displayed in audit reports.
          example: AddEntitlement
          type: string
        type:
          description: "Event type. Refer to [Event Types](https://documentation.sailpoint.com/saas/help/search/index.html#event-types)\
            \ for a list of event types and their meanings."
          example: ACCESS_ITEM
          type: string
        actor:
          $ref: '#/components/schemas/Event_actor'
        target:
          $ref: '#/components/schemas/Event_target'
        stack:
          description: The event's stack.
          example: tpe
          type: string
        trackingNumber:
          description: ID of the group of events.
          example: 63f891e0735f4cc8bf1968144a1e7440
          type: string
        ipAddress:
          description: Target system's IP address.
          example: 52.52.97.85
          type: string
        details:
          description: ID of event's details.
          example: 73b65dfbed1842548c207432a18c84b0
          type: string
        attributes:
          additionalProperties: true
          description: Attributes involved in the event.
          example:
            pod: stg03-useast1
            org: acme
            sourceName: SailPoint
          type: object
        objects:
          description: Objects the event is happening to.
          items:
            example: AUTHENTICATION
            type: string
          type: array
        operation:
          description: "Operation, or action, performed during the event."
          example: ADD
          type: string
        status:
          description: "Event status. Refer to [Event Statuses](https://documentation.sailpoint.com/saas/help/search/index.html#event-statuses)\
            \ for a list of event statuses and their meanings."
          example: PASSED
          type: string
        technicalName:
          description: Event's normalized name. This normalized name always follows
            the pattern of 'objects_operation_status'.
          example: ENTITLEMENT_ADD_PASSED
          type: string
      type: object
    IdentityDocument:
      allOf:
      - $ref: '#/components/schemas/BaseDocument'
      - $ref: '#/components/schemas/DisplayReference'
      - properties:
          displayName:
            description: Identity's display name.
            example: Carol.Adams
            type: string
          firstName:
            description: Identity's first name.
            example: Carol
            type: string
          lastName:
            description: Identity's last name.
            example: Adams
            type: string
          email:
            description: Identity's primary email address.
            example: Carol.Adams@sailpointdemo.com
            type: string
          created:
            description: ISO-8601 date-time referring to the time when the object
              was created.
            example: 2018-06-25T20:22:28.104Z
            format: date-time
            nullable: true
            type: string
          modified:
            description: ISO-8601 date-time referring to the time when the object
              was last modified.
            example: 2018-06-25T20:22:28.104Z
            format: date-time
            nullable: true
            type: string
          phone:
            description: Identity's phone number.
            example: +1 440-527-3672
            type: string
          synced:
            description: "ISO-8601 date-time referring to the date-time when object\
              \ was queued to be synced into search database for use in the search\
              \ API.  \nThis date-time changes anytime there is an update to the object,\
              \ which triggers a synchronization event being sent to the search database.\
              \ \nThere may be some delay between the `synced` time and the time when\
              \ the updated data is actually available in the search API. "
            type: string
          inactive:
            default: false
            description: Indicates whether the identity is inactive.
            example: false
            type: boolean
          protected:
            default: false
            description: Indicates whether the identity is protected.
            example: false
            type: boolean
          status:
            description: Identity's status in SailPoint.
            example: UNREGISTERED
            type: string
          employeeNumber:
            description: Identity's employee number.
            example: 1a2a3d4e
            type: string
          manager:
            $ref: '#/components/schemas/IdentityDocument_allOf_manager'
          isManager:
            description: Indicates whether the identity is a manager of other identities.
            example: false
            type: boolean
          identityProfile:
            $ref: '#/components/schemas/IdentityDocument_allOf_identityProfile'
          source:
            $ref: '#/components/schemas/IdentityDocument_allOf_source'
          attributes:
            additionalProperties: true
            description: Map or dictionary of key/value pairs.
            example:
              country: US
              firstname: Carol
              cloudStatus: UNREGISTERED
            type: object
          disabled:
            default: false
            description: Indicates whether the identity is disabled.
            example: false
            type: boolean
          locked:
            default: false
            description: Indicates whether the identity is locked.
            example: false
            type: boolean
          processingState:
            description: Identity's processing state.
            example: ERROR
            nullable: true
            type: string
          processingDetails:
            $ref: '#/components/schemas/ProcessingDetails'
          accounts:
            description: List of accounts associated with the identity.
            items:
              $ref: '#/components/schemas/BaseAccount'
            type: array
          accountCount:
            description: Number of accounts associated with the identity.
            example: 3
            format: int32
            type: integer
          apps:
            description: List of applications the identity has access to.
            items:
              $ref: '#/components/schemas/App'
            type: array
          appCount:
            description: Number of applications the identity has access to.
            example: 2
            format: int32
            type: integer
          access:
            description: List of access items assigned to the identity.
            items:
              $ref: '#/components/schemas/IdentityAccess'
            type: array
          accessCount:
            description: Number of access items assigned to the identity.
            example: 5
            format: int32
            type: integer
          entitlementCount:
            description: Number of entitlements assigned to the identity.
            example: 10
            format: int32
            type: integer
          roleCount:
            description: Number of roles assigned to the identity.
            example: 1
            format: int32
            type: integer
          accessProfileCount:
            description: Number of access profiles assigned to the identity.
            example: 1
            format: int32
            type: integer
          owns:
            description: Access items the identity owns.
            items:
              $ref: '#/components/schemas/Owns'
            type: array
          ownsCount:
            description: Number of access items the identity owns.
            example: 5
            format: int32
            type: integer
          tags:
            $ref: '#/components/schemas/Tags'
          tagsCount:
            description: Number of tags on the identity.
            format: int32
            type: integer
          visibleSegments:
            description: List of segments that the identity is in.
            example:
            - All Employees
            items:
              type: string
            nullable: true
            type: array
          visibleSegmentCount:
            description: Number of segments the identity is in.
            example: 1
            format: int32
            type: integer
        type: object
      description: Identity
    IdentityProfile:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - properties:
          description:
            description: Identity profile's description.
            example: My custom flat file profile
            nullable: true
            type: string
          owner:
            $ref: '#/components/schemas/IdentityProfile_allOf_owner'
          priority:
            description: Identity profile's priority.
            example: 10
            format: int64
            type: integer
          authoritativeSource:
            $ref: '#/components/schemas/IdentityProfile_allOf_authoritativeSource'
          identityRefreshRequired:
            default: false
            description: Set this value to 'True' if an identity refresh is necessary.
              You would typically want to trigger an identity refresh when a change
              has been made on the source.
            example: true
            type: boolean
          identityCount:
            description: Number of identities belonging to the identity profile.
            example: 8
            format: int32
            type: integer
          identityAttributeConfig:
            $ref: '#/components/schemas/IdentityAttributeConfig'
          identityExceptionReportReference:
            $ref: '#/components/schemas/IdentityExceptionReportReference'
          hasTimeBasedAttr:
            default: false
            description: Indicates the value of `requiresPeriodicRefresh` attribute
              for the identity profile.
            example: true
            type: boolean
        required:
        - authoritativeSource
        type: object
      example:
        owner:
          name: William Wilson
          id: 2c9180835d191a86015d28455b4b232a
          type: IDENTITY
        identityExceptionReportReference:
          reportName: My annual report
          taskResultId: 2b838de9-db9b-abcf-e646-d4f274ad4238
        authoritativeSource:
          name: HR Active Directory
          id: 2c9180835d191a86015d28455b4b232a
          type: SOURCE
        hasTimeBasedAttr: true
        created: 2015-05-28T14:07:17Z
        description: My custom flat file profile
        identityRefreshRequired: true
        identityCount: 8
        priority: 10
        identityAttributeConfig:
          attributeTransforms:
          - transformDefinition:
              attributes:
                attributeName: e-mail
                sourceName: MySource
                sourceId: 2c9180877a826e68017a8c0b03da1a53
              type: accountAttribute
            identityAttributeName: email
          - transformDefinition:
              attributes:
                attributeName: e-mail
                sourceName: MySource
                sourceId: 2c9180877a826e68017a8c0b03da1a53
              type: accountAttribute
            identityAttributeName: email
          enabled: true
        name: aName
        modified: 2015-05-28T14:07:17Z
        id: id12345
    IdentityReferenceWithNameAndEmail:
      example:
        name: Alison Ferguso
        id: 5168015d32f890ca15812c9180835d2e
        type: IDENTITY
        email: alison.ferguso@identitysoon.com
      nullable: true
      properties:
        type:
          description: The type can only be IDENTITY. This is read-only.
          example: IDENTITY
          type: string
        id:
          description: Identity ID.
          example: 5168015d32f890ca15812c9180835d2e
          type: string
        name:
          description: Identity's human-readable display name. This is read-only.
          example: Alison Ferguso
          type: string
        email:
          description: Identity's email address. This is read-only.
          example: alison.ferguso@identitysoon.com
          type: string
      type: object
    ProvisioningConfig:
      description: Specification of a Service Desk integration provisioning configuration.
      example:
        managedResourceRefs:
        - type: SOURCE
          id: 2c9180855d191c59015d291ceb051111
          name: My Source 1
        - type: SOURCE
          id: 2c9180855d191c59015d291ceb052222
          name: My Source 2
        provisioningRequestExpiration: 7
        noProvisioningRequests: true
        universalManager: true
        planInitializerScript:
          source: |
            <?xml version='1.0' encoding='UTF-8'?>\r\n<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">\r\n<Rule name=\"Example Rule\" type=\"BeforeProvisioning\">\r\n  <Description>Before Provisioning Rule which changes disables and enables to a modify.</Description>\r\n  <Source><![CDATA[\r\nimport sailpoint.object.*;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest.Operation;\r\nimport sailpoint.object.ProvisioningPlan.AttributeRequest;\r\nimport sailpoint.object.ProvisioningPlan;\r\nimport sailpoint.object.ProvisioningPlan.Operation;\r\n\r\nfor ( AccountRequest accountRequest : plan.getAccountRequests() ) {\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Disable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Enable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n}\r\n\r\n  ]]></Source>
      properties:
        universalManager:
          default: false
          description: "Specifies whether this configuration is used to manage provisioning\
            \ requests for all sources from the org.  If true, no managedResourceRefs\
            \ are allowed."
          example: true
          readOnly: true
          type: boolean
        managedResourceRefs:
          description: References to sources for the Service Desk integration template.  May
            only be specified if universalManager is false.
          example:
          - type: SOURCE
            id: 2c9180855d191c59015d291ceb051111
            name: My Source 1
          - type: SOURCE
            id: 2c9180855d191c59015d291ceb052222
            name: My Source 2
          items:
            allOf:
            - $ref: '#/components/schemas/ServiceDeskSource'
          type: array
        planInitializerScript:
          $ref: '#/components/schemas/ProvisioningConfig_planInitializerScript'
        noProvisioningRequests:
          default: false
          description: Name of an attribute that when true disables the saving of
            ProvisioningRequest objects whenever plans are sent through this integration.
          example: true
          type: boolean
        provisioningRequestExpiration:
          description: "When saving pending requests is enabled, this defines the\
            \ number of hours the request is allowed to live before it is considered\
            \ expired and no longer affects plan compilation."
          example: 7
          format: int32
          type: integer
      type: object
    ProvisioningPolicy:
      example:
        name: example provisioning policy for inactive identities
        description: this provisioning policy creates access based on an identity
          going inactive
        fields:
        - isRequired: false
          transform:
            type: rule
            attributes:
              name: Create Unique LDAP Attribute
          isMultiValued: false
          name: userName
          attributes:
            template: "${firstname}.${lastname}${uniqueCounter}"
            cloudMaxUniqueChecks: "50"
            cloudMaxSize: "20"
            cloudRequired: "true"
          type: string
        - isRequired: false
          transform:
            type: rule
            attributes:
              name: Create Unique LDAP Attribute
          isMultiValued: false
          name: userName
          attributes:
            template: "${firstname}.${lastname}${uniqueCounter}"
            cloudMaxUniqueChecks: "50"
            cloudMaxSize: "20"
            cloudRequired: "true"
          type: string
        usageType: CREATE
      properties:
        name:
          description: the provisioning policy name
          example: example provisioning policy for inactive identities
          nullable: true
          type: string
        description:
          description: the description of the provisioning policy
          example: this provisioning policy creates access based on an identity going
            inactive
          type: string
        usageType:
          $ref: '#/components/schemas/UsageType'
        fields:
          items:
            $ref: '#/components/schemas/FieldDetailsDto'
          type: array
      required:
      - name
      type: object
    QueuedCheckConfigDetails:
      description: Configuration of maximum number of days and interval for checking
        Service Desk integration queue status.
      example:
        provisioningStatusCheckIntervalMinutes: "30"
        provisioningMaxStatusCheckDays: "2"
      properties:
        provisioningStatusCheckIntervalMinutes:
          description: Interval in minutes between status checks
          example: "30"
          type: string
        provisioningMaxStatusCheckDays:
          description: Maximum number of days to check
          example: "2"
          type: string
      required:
      - provisioningMaxStatusCheckDays
      - provisioningStatusCheckIntervalMinutes
      type: object
    Reassignment:
      example:
        from:
          name: Certification Name
          id: ef38f94347e94562b5bb8424a56397d8
          reviewer:
            created: 2018-06-25T20:22:28.104Z
            name: Reviewer Name
            modified: 2018-06-25T20:22:28.104Z
            id: ef38f94347e94562b5bb8424a56397d8
            type: IDENTITY
            email: reviewer@test.com
          type: CERTIFICATION
        comment: Reassigned for a reason
      nullable: true
      properties:
        from:
          $ref: '#/components/schemas/CertificationReference'
        comment:
          description: The comment entered when the Certification was reassigned
          example: Reassigned for a reason
          type: string
      type: object
    ReassignmentReference:
      example:
        id: ef38f94347e94562b5bb8424a56397d8
        type: ITEM
      properties:
        id:
          description: The ID of item or identity being reassigned.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        type:
          description: The type of item or identity being reassigned.
          enum:
          - TARGET_SUMMARY
          - ITEM
          - IDENTITY_SUMMARY
          example: ITEM
          type: string
      required:
      - id
      - type
      type: object
    RemediationItems:
      example:
        targetName: john.smith
        targetId: 2c9180835d2e5168015d32f890ca1581
        attributeValue: 512-555-1212
        targetDisplayName: emailAddress
        attributeName: phoneNumber
        id: 2c9180835d2e5168015d32f890ca1581
        applicationName: Active Directory
        attributeOperation: update
        nativeIdentity: jason.smith2
      properties:
        id:
          description: The ID of the certification
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        targetId:
          description: The ID of the certification target
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        targetName:
          description: The name of the certification target
          example: john.smith
          type: string
        targetDisplayName:
          description: The display name of the certification target
          example: emailAddress
          type: string
        applicationName:
          description: The name of the application/source
          example: Active Directory
          type: string
        attributeName:
          description: The name of the attribute being certified
          example: phoneNumber
          type: string
        attributeOperation:
          description: The operation of the certification on the attribute
          example: update
          type: string
        attributeValue:
          description: The value of the attribute being certified
          example: 512-555-1212
          type: string
        nativeIdentity:
          description: The native identity of the target
          example: jason.smith2
          type: string
      type: object
    RequestableObject:
      example:
        requestCommentsRequired: false
        ownerRef:
          name: Alison Ferguso
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
          email: alison.ferguso@identitysoon.com
        created: 2017-07-11T18:45:37.098Z
        name: Applied Research Access
        modified: 2018-06-25T20:22:28.104Z
        description: "Access to research information, lab results, and schematics."
        identityRequestId: identityRequestId
        id: 2c9180835d2e5168015d32f890ca1581
        type: ACCESS_PROFILE
        requestStatus: ""
      properties:
        id:
          description: Id of the requestable object itself
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: Human-readable display name of the requestable object
          example: Applied Research Access
          type: string
        created:
          description: The time when the requestable object was created
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: The time when the requestable object was last modified
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        description:
          description: Description of the requestable object.
          example: "Access to research information, lab results, and schematics."
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/RequestableObjectType'
        requestStatus:
          allOf:
          - $ref: '#/components/schemas/RequestableObjectRequestStatus'
          - nullable: true
            type: object
        identityRequestId:
          description: "If *requestStatus* is *PENDING*, indicates the id of the associated\
            \ account activity."
          nullable: true
          type: string
          example: null
        ownerRef:
          $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
        requestCommentsRequired:
          description: Whether the requester must provide comments when requesting
            the object.
          example: false
          type: boolean
      type: object
    RequestableObjectType:
      description: Currently supported requestable object types.
      enum:
      - ACCESS_PROFILE
      - ROLE
      - ENTITLEMENT
      example: ACCESS_PROFILE
      type: string
    RequestableObjectRequestStatus:
      description: "Status indicating the ability of an access request for the object\
        \ to be made by or on behalf of the identity specified by *identity-id*. *AVAILABLE*\
        \ indicates the object is available to request. *PENDING* indicates the object\
        \ is unavailable because the identity has a pending request in flight. *ASSIGNED*\
        \ indicates the object is unavailable because the identity already has the\
        \ indicated role or access profile. If *identity-id* is not specified (allowed\
        \ only for admin users), then status will be *AVAILABLE* for all results."
      enum:
      - AVAILABLE
      - PENDING
      - ASSIGNED
      - null
      example: AVAILABLE
      type: string
    Reviewer:
      example:
        created: 2018-06-25T20:22:28.104Z
        name: Reviewer Name
        modified: 2018-06-25T20:22:28.104Z
        id: ef38f94347e94562b5bb8424a56397d8
        type: IDENTITY
        email: reviewer@test.com
      properties:
        id:
          description: The id of the reviewer.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        name:
          description: The name of the reviewer.
          example: Reviewer Name
          type: string
        email:
          description: The email of the reviewing identity.
          example: reviewer@test.com
          type: string
        type:
          description: The type of the reviewing identity.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        created:
          description: The created date of the reviewing identity.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: The modified date of the reviewing identity.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
      type: object
    RoleDocument:
      allOf:
      - $ref: '#/components/schemas/BaseAccess'
      - properties:
          id:
            description: ID of the role.
            example: 2c91808375d8e80a0175e1f88a575222
            type: string
          name:
            description: Name of the role.
            example: Branch Manager Access
            type: string
          accessProfiles:
            description: Access profiles included with the role.
            items:
              $ref: '#/components/schemas/BaseAccessProfile'
            nullable: true
            type: array
          accessProfileCount:
            description: Number of access profiles included with the role.
            example: 1
            format: int32
            nullable: true
            type: integer
          tags:
            $ref: '#/components/schemas/Tags'
          segments:
            description: Segments with the role.
            items:
              $ref: '#/components/schemas/BaseSegment'
            nullable: true
            type: array
          segmentCount:
            description: Number of segments with the role.
            example: 1
            format: int32
            nullable: true
            type: integer
          entitlements:
            description: Entitlements included with the role.
            items:
              $ref: '#/components/schemas/RoleDocument_allOf_entitlements'
            nullable: true
            type: array
          entitlementCount:
            description: Number of entitlements included with the role.
            example: 3
            format: int32
            nullable: true
            type: integer
          dimensional:
            default: false
            example: false
            type: boolean
          dimensionSchemaAttributeCount:
            description: Number of dimension attributes included with the role.
            example: 3
            format: int32
            nullable: true
            type: integer
          dimensionSchemaAttributes:
            description: Dimension attributes included with the role.
            items:
              $ref: '#/components/schemas/RoleDocument_allOf_dimensionSchemaAttributes'
            nullable: true
            type: array
          dimensions:
            items:
              $ref: '#/components/schemas/RoleDocument_allOf_dimensions'
            nullable: true
            type: array
        required:
        - id
        - name
        type: object
      description: Role
    RoleSummary:
      allOf:
      - $ref: '#/components/schemas/Access'
      - properties:
          type:
            description: Type of the access item.
            example: ROLE
            type: string
          owner:
            $ref: '#/components/schemas/DisplayReference'
          disabled:
            type: boolean
          revocable:
            type: boolean
        type: object
      description: Role
    SearchDocument:
      type: object
    SavedSearch:
      allOf:
      - properties:
          id:
            description: |
              The saved search ID.
            example: 0de46054-fe90-434a-b84e-c6b3359d0c64
            type: string
          owner:
            $ref: '#/components/schemas/TypedReference'
          ownerId:
            description: The ID of the identity that owns this saved search.
            example: 2c91808568c529c60168cca6f90c1313
            type: string
          public:
            default: false
            description: Whether this saved search is visible to anyone but the owner.
              This field will always be false as there is no way to set a saved search
              as public at this time.
            example: false
            type: boolean
        type: object
      - $ref: '#/components/schemas/SavedSearchName'
      - $ref: '#/components/schemas/SavedSearchDetail'
      example:
        owner:
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        created: 2018-06-25T20:22:28.104Z
        columns:
          identity:
          - field: displayName
            header: Display Name
          - field: e-mail
            header: Work Email
        query: '@accounts(disabled:true)'
        description: Disabled accounts
        orderBy:
          identity:
          - lastName
          - firstName
          role:
          - name
        sort:
        - displayName
        filters:
          terms:
          - account_count
          - account_count
          range:
            lower:
              inclusive: false
              value: "1"
            upper:
              inclusive: false
              value: "1"
          exclude: false
          type: RANGE
        ownerId: 2c91808568c529c60168cca6f90c1313
        indices:
        - identities
        public: false
        name: Disabled accounts
        modified: 2018-06-25T20:22:28.104Z
        id: 0de46054-fe90-434a-b84e-c6b3359d0c64
        fields:
        - disabled
      type: object
    Schedule:
      example:
        hours:
          values:
          - "1"
          interval: 2
          type: LIST
        months:
          values:
          - "1"
          interval: 2
          type: LIST
        timeZoneId: CST
        days:
          values:
          - "1"
          interval: 2
          type: LIST
        expiration: 2000-01-23T04:56:07.000+00:00
        type: WEEKLY
      properties:
        type:
          description: "Determines the overall schedule cadence. In general, all time\
            \ period fields smaller than the chosen type can be configured. For example,\
            \ a DAILY schedule can have 'hours' set, but not 'days'; a WEEKLY schedule\
            \ can have both 'hours' and 'days' set."
          enum:
          - WEEKLY
          - MONTHLY
          - ANNUALLY
          - CALENDAR
          example: WEEKLY
          type: string
        months:
          $ref: '#/components/schemas/Schedule_months'
        days:
          $ref: '#/components/schemas/Schedule_days'
        hours:
          $ref: '#/components/schemas/Schedule_hours'
        expiration:
          description: Specifies the time after which this schedule will no longer
            occur.
          format: date-time
          nullable: true
          type: string
        timeZoneId:
          description: "The time zone to use when running the schedule. For instance,\
            \ if the schedule is scheduled to run at 1AM, and this field is set to\
            \ \"CST\", the schedule will run at 1AM CST."
          example: CST
          type: string
      required:
      - hours
      - type
      type: object
    ScheduledSearch:
      allOf:
      - properties:
          id:
            description: The scheduled search ID.
            example: 0de46054-fe90-434a-b84e-c6b3359d0c64
            readOnly: true
            type: string
          owner:
            $ref: '#/components/schemas/ScheduledSearch_allOf_owner'
          ownerId:
            deprecated: true
            description: |
              The ID of the scheduled search owner.

              Please use the `id` in the `owner` object instead.
            example: 2c9180867624cbd7017642d8c8c81f67
            readOnly: true
            type: string
        type: object
      - $ref: '#/components/schemas/ScheduledSearchName'
      - $ref: '#/components/schemas/SearchSchedule'
      example:
        owner:
          id: 2c9180867624cbd7017642d8c8c81f67
          type: IDENTITY
        displayQueryDetails: false
        created: ""
        description: Daily disabled accounts
        ownerId: 2c9180867624cbd7017642d8c8c81f67
        enabled: false
        schedule:
          hours:
            values:
            - MON
            - WED
            interval: 3
            type: LIST
          months:
            values:
            - MON
            - WED
            interval: 3
            type: LIST
          timeZoneId: America/Chicago
          days:
            values:
            - MON
            - WED
            interval: 3
            type: LIST
          expiration: 2018-06-25T20:22:28.104Z
          type: WEEKLY
        recipients:
        - id: 2c9180867624cbd7017642d8c8c81f67
          type: IDENTITY
        - id: 2c9180867624cbd7017642d8c8c81f67
          type: IDENTITY
        savedSearchId: 554f1511-f0a1-4744-ab14-599514d3e57c
        name: Daily disabled accounts
        modified: ""
        id: 0de46054-fe90-434a-b84e-c6b3359d0c64
        emailEmptyResults: false
      required:
      - id
      - owner
      - ownerId
      type: object
    ServiceDeskIntegrationDto:
      allOf:
      - description: Service Desk integration's specification.
        properties:
          id:
            description: Unique identifier for the Service Desk integration
            example: 62945a496ef440189b1f03e3623411c8
            type: string
          name:
            description: Service Desk integration's name. The name must be unique.
            example: Service Desk Integration Name
            type: string
          created:
            description: The date and time the Service Desk integration was created
            example: 2024-01-17T18:45:25.994Z
            format: date-time
            type: string
          modified:
            description: The date and time the Service Desk integration was last modified
            example: 2024-02-18T18:45:25.994Z
            format: date-time
            type: string
          description:
            description: Service Desk integration's description.
            example: A very nice Service Desk integration
            type: string
          type:
            default: ServiceNowSDIM
            description: |
              Service Desk integration types:

              - ServiceNowSDIM
              - ServiceNow
            example: ServiceNowSDIM
            type: string
          ownerRef:
            allOf:
            - $ref: '#/components/schemas/OwnerDto'
          clusterRef:
            allOf:
            - $ref: '#/components/schemas/SourceClusterDto'
          cluster:
            deprecated: true
            description: "Cluster ID for the Service Desk integration (replaced by\
              \ clusterRef, retained for backward compatibility)."
            example: xyzzy999
            nullable: true
            type: string
          managedSources:
            deprecated: true
            description: "Source IDs for the Service Desk integration (replaced by\
              \ provisioningConfig.managedSResourceRefs, but retained here for backward\
              \ compatibility)."
            example:
            - 2c9180835d191a86015d28455b4a2329
            - 2c5680835d191a85765d28455b4a9823
            items:
              type: string
            type: array
          provisioningConfig:
            $ref: '#/components/schemas/ProvisioningConfig'
          attributes:
            additionalProperties: true
            description: Service Desk integration's attributes. Validation constraints
              enforced by the implementation.
            example:
              property: value
              key: value
            type: object
          beforeProvisioningRule:
            allOf:
            - $ref: '#/components/schemas/BeforeProvisioningRuleDto'
        required:
        - attributes
        - description
        - name
        - type
        type: object
      example:
        ownerRef: ""
        cluster: xyzzy999
        created: 2024-01-17T18:45:25.994Z
        description: A very nice Service Desk integration
        clusterRef: ""
        type: ServiceNowSDIM
        managedSources:
        - 2c9180835d191a86015d28455b4a2329
        - 2c5680835d191a85765d28455b4a9823
        provisioningConfig:
          managedResourceRefs:
          - type: SOURCE
            id: 2c9180855d191c59015d291ceb051111
            name: My Source 1
          - type: SOURCE
            id: 2c9180855d191c59015d291ceb052222
            name: My Source 2
          provisioningRequestExpiration: 7
          noProvisioningRequests: true
          universalManager: true
          planInitializerScript:
            source: |
              <?xml version='1.0' encoding='UTF-8'?>\r\n<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">\r\n<Rule name=\"Example Rule\" type=\"BeforeProvisioning\">\r\n  <Description>Before Provisioning Rule which changes disables and enables to a modify.</Description>\r\n  <Source><![CDATA[\r\nimport sailpoint.object.*;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest.Operation;\r\nimport sailpoint.object.ProvisioningPlan.AttributeRequest;\r\nimport sailpoint.object.ProvisioningPlan;\r\nimport sailpoint.object.ProvisioningPlan.Operation;\r\n\r\nfor ( AccountRequest accountRequest : plan.getAccountRequests() ) {\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Disable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Enable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n}\r\n\r\n  ]]></Source>
        name: Service Desk Integration Name
        modified: 2024-02-18T18:45:25.994Z
        attributes:
          property: value
          key: value
        id: 62945a496ef440189b1f03e3623411c8
        beforeProvisioningRule: ""
    ServiceDeskIntegrationTemplateDto:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - description: "This is the model for a Service Desk integration template, used\
          \ to create and edit Service Desk Integrations."
        properties:
          type:
            default: Web Service SDIM
            description: The 'type' property specifies the type of the Service Desk
              integration template.
            example: Web Service SDIM
            type: string
          attributes:
            additionalProperties: true
            description: The 'attributes' property value is a map of attributes available
              for integrations using this Service Desk integration template.
            example:
              property: value
              key: value
            type: object
          provisioningConfig:
            $ref: '#/components/schemas/ProvisioningConfig'
        required:
        - attributes
        - provisioningConfig
        - type
        type: object
      example:
        provisioningConfig:
          managedResourceRefs:
          - type: SOURCE
            id: 2c9180855d191c59015d291ceb051111
            name: My Source 1
          - type: SOURCE
            id: 2c9180855d191c59015d291ceb052222
            name: My Source 2
          provisioningRequestExpiration: 7
          noProvisioningRequests: true
          universalManager: true
          planInitializerScript:
            source: |
              <?xml version='1.0' encoding='UTF-8'?>\r\n<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">\r\n<Rule name=\"Example Rule\" type=\"BeforeProvisioning\">\r\n  <Description>Before Provisioning Rule which changes disables and enables to a modify.</Description>\r\n  <Source><![CDATA[\r\nimport sailpoint.object.*;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest.Operation;\r\nimport sailpoint.object.ProvisioningPlan.AttributeRequest;\r\nimport sailpoint.object.ProvisioningPlan;\r\nimport sailpoint.object.ProvisioningPlan.Operation;\r\n\r\nfor ( AccountRequest accountRequest : plan.getAccountRequests() ) {\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Disable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Enable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n}\r\n\r\n  ]]></Source>
        created: 2015-05-28T14:07:17Z
        name: aName
        modified: 2015-05-28T14:07:17Z
        attributes:
          property: value
          key: value
        id: id12345
        type: Web Service SDIM
    ServiceDeskIntegrationTemplateType:
      description: This represents a Service Desk Integration template type.
      example:
        name: aName
        scriptName: aScriptName
        type: aType
      properties:
        name:
          description: This is the name of the type.
          example: aName
          type: string
        type:
          description: This is the type value for the type.
          example: aType
          type: string
        scriptName:
          description: This is the scriptName attribute value for the type.
          example: aScriptName
          type: string
      required:
      - scriptName
      - type
      type: object
    Source:
      example:
        cluster:
          name: Corporate Cluster
          id: 2c9180866166b5b0016167c32ef31a66
          type: CLUSTER
        deleteThreshold: 10
        connectorId: active-directory
        description: This is the corporate directory.
        type: OpenLDAP - Direct
        connectorClass: sailpoint.connector.LDAPConnector
        connectionType: file
        features:
        - PROVISIONING
        - NO_PERMISSIONS_PROVISIONING
        - GROUPS_HAVE_MEMBERS
        passwordPolicies:
        - type: PASSWORD_POLICY
          id: 2c9180855d191c59015d291ceb053980
          name: Corporate Password Policy
        - type: PASSWORD_POLICY
          id: 2c9180855d191c59015d291ceb057777
          name: Vendor Password Policy
        modified: 2024-01-23T18:08:50.897Z
        id: 2c91808568c529c60168cca6f90c1324
        connectorImplementationId: delimited-file
        managerCorrelationRule:
          name: Example Rule
          id: 2c918085708c274401708c2a8a760001
          type: RULE
        owner:
          name: MyName
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        managementWorkgroup:
          name: My Management Workgroup
          id: 2c91808568c529c60168cca6f90c2222
          type: GOVERNANCE_GROUP
        accountCorrelationRule:
          name: Example Rule
          id: 2c918085708c274401708c2a8a760001
          type: RULE
        authoritative: false
        connectorAttributes:
          healthCheckTimeout: 30
          authSearchAttributes:
          - cn
          - uid
          - mail
        created: 2022-02-08T14:50:03.827Z
        managerCorrelationMapping:
          accountAttributeName: manager
          identityAttributeName: manager
        credentialProviderEnabled: false
        accountCorrelationConfig:
          name: "Directory [source-62867] Account Correlation"
          id: 2c9180855d191c59015d28583727245a
          type: ACCOUNT_CORRELATION_CONFIG
        connector: active-directory
        healthy: true
        schemas:
        - type: CONNECTOR_SCHEMA
          id: 2c9180835d191a86015d28455b4b232a
          name: account
        - type: CONNECTOR_SCHEMA
          id: 2c9180835d191a86015d28455b4b232b
          name: group
        name: My Source
        connectorName: Active Directory
        category: CredentialProvider
        beforeProvisioningRule:
          name: Example Rule
          id: 2c918085708c274401708c2a8a760001
          type: RULE
        status: SOURCE_STATE_HEALTHY
        since: 2021-09-28T15:48:29.3801666300Z
      properties:
        id:
          description: Source ID.
          example: 2c91808568c529c60168cca6f90c1324
          readOnly: true
          type: string
        name:
          description: Source's human-readable name.
          example: My Source
          type: string
        description:
          description: Source's human-readable description.
          example: This is the corporate directory.
          type: string
        owner:
          $ref: '#/components/schemas/Source_owner'
        cluster:
          $ref: '#/components/schemas/Source_cluster'
        accountCorrelationConfig:
          $ref: '#/components/schemas/Source_accountCorrelationConfig'
        accountCorrelationRule:
          $ref: '#/components/schemas/Source_accountCorrelationRule'
        managerCorrelationMapping:
          $ref: '#/components/schemas/Source_managerCorrelationMapping'
        managerCorrelationRule:
          $ref: '#/components/schemas/Source_managerCorrelationRule'
        beforeProvisioningRule:
          $ref: '#/components/schemas/Source_beforeProvisioningRule'
        schemas:
          description: List of references to schema objects.
          example:
          - type: CONNECTOR_SCHEMA
            id: 2c9180835d191a86015d28455b4b232a
            name: account
          - type: CONNECTOR_SCHEMA
            id: 2c9180835d191a86015d28455b4b232b
            name: group
          items:
            $ref: '#/components/schemas/Source_schemas_inner'
          type: array
        passwordPolicies:
          description: List of references to the associated PasswordPolicy objects.
          example:
          - type: PASSWORD_POLICY
            id: 2c9180855d191c59015d291ceb053980
            name: Corporate Password Policy
          - type: PASSWORD_POLICY
            id: 2c9180855d191c59015d291ceb057777
            name: Vendor Password Policy
          items:
            $ref: '#/components/schemas/Source_passwordPolicies_inner'
          nullable: true
          type: array
        features:
          description: |-
            Optional features that can be supported by a source. Modifying the features array may cause source configuration errors that are unsupportable. It is recommended to not modify this array for SailPoint supported connectors.
            * AUTHENTICATE: The source supports pass-through authentication.
            * COMPOSITE: The source supports composite source creation.
            * DIRECT_PERMISSIONS: The source supports returning DirectPermissions.
            * DISCOVER_SCHEMA: The source supports discovering schemas for users and groups.
            * ENABLE The source supports reading if an account is enabled or disabled.
            * MANAGER_LOOKUP: The source supports looking up managers as they are encountered in a feed. This is the opposite of NO_RANDOM_ACCESS.
            * NO_RANDOM_ACCESS: The source does not support random access and the getObject() methods should not be called and expected to perform.
            * PROXY: The source can serve as a proxy for another source. When an source has a proxy, all connector calls made with that source are redirected through the connector for the proxy source.
            * SEARCH
            * TEMPLATE
            * UNLOCK: The source supports reading if an account is locked or unlocked.
            * UNSTRUCTURED_TARGETS: The source supports returning unstructured Targets.
            * SHAREPOINT_TARGET: The source supports returning unstructured Target data for SharePoint. It will be typically used by AD, LDAP sources.
            * PROVISIONING: The source can both read and write accounts. Having this feature implies that the provision() method is implemented. It also means that direct and target permissions can also be provisioned if they can be returned by aggregation.
            * GROUP_PROVISIONING: The source can both read and write groups. Having this feature implies that the provision() method is implemented.
            * SYNC_PROVISIONING: The source can provision accounts synchronously.
            * PASSWORD: The source can provision password changes. Since sources can never read passwords, this is should only be used in conjunction with the PROVISIONING feature.
            * CURRENT_PASSWORD: Some source types support verification of the current password
            * ACCOUNT_ONLY_REQUEST: The source supports requesting accounts without entitlements.
            * ADDITIONAL_ACCOUNT_REQUEST: The source supports requesting additional accounts.
            * NO_AGGREGATION: A source that does not support aggregation.
            * GROUPS_HAVE_MEMBERS: The source models group memberships with a member attribute on the group object rather than a groups attribute on the account object. This effects the implementation of delta account aggregation.
            * NO_PERMISSIONS_PROVISIONING: Indicates that the connector cannot provision direct or target permissions for accounts. When DIRECT_PERMISSIONS and PROVISIONING features are present, it is assumed that the connector can also provision direct permissions. This feature disables that assumption and causes permission request to be converted to work items for accounts.
            * NO_GROUP_PERMISSIONS_PROVISIONING: Indicates that the connector cannot provision direct or target permissions for groups. When DIRECT_PERMISSIONS and PROVISIONING features are present, it is assumed that the connector can also provision direct permissions. This feature disables that assumption and causes permission request to be converted to work items for groups.
            * NO_UNSTRUCTURED_TARGETS_PROVISIONING: This string will be replaced by NO_GROUP_PERMISSIONS_PROVISIONING and NO_PERMISSIONS_PROVISIONING.
            * NO_DIRECT_PERMISSIONS_PROVISIONING: This string will be replaced by NO_GROUP_PERMISSIONS_PROVISIONING and NO_PERMISSIONS_PROVISIONING.
            * USES_UUID: Connectivity 2.0 flag used to indicate that the connector supports a compound naming structure.
            * PREFER_UUID: Used in ISC Provisioning AND Aggregation to decide if it should prefer account.uuid to account.nativeIdentity when data is read in through aggregation OR pushed out through provisioning.
            * ARM_SECURITY_EXTRACT: Indicates the application supports Security extracts for ARM
            * ARM_UTILIZATION_EXTRACT: Indicates the application supports Utilization extracts for ARM
            * ARM_CHANGELOG_EXTRACT: Indicates the application supports Change-log extracts for ARM
          example:
          - PROVISIONING
          - NO_PERMISSIONS_PROVISIONING
          - GROUPS_HAVE_MEMBERS
          items:
            enum:
            - AUTHENTICATE
            - COMPOSITE
            - DIRECT_PERMISSIONS
            - DISCOVER_SCHEMA
            - ENABLE
            - MANAGER_LOOKUP
            - NO_RANDOM_ACCESS
            - PROXY
            - SEARCH
            - TEMPLATE
            - UNLOCK
            - UNSTRUCTURED_TARGETS
            - SHAREPOINT_TARGET
            - PROVISIONING
            - GROUP_PROVISIONING
            - SYNC_PROVISIONING
            - PASSWORD
            - CURRENT_PASSWORD
            - ACCOUNT_ONLY_REQUEST
            - ADDITIONAL_ACCOUNT_REQUEST
            - NO_AGGREGATION
            - GROUPS_HAVE_MEMBERS
            - NO_PERMISSIONS_PROVISIONING
            - NO_GROUP_PERMISSIONS_PROVISIONING
            - NO_UNSTRUCTURED_TARGETS_PROVISIONING
            - NO_DIRECT_PERMISSIONS_PROVISIONING
            - PREFER_UUID
            - ARM_SECURITY_EXTRACT
            - ARM_UTILIZATION_EXTRACT
            - ARM_CHANGELOG_EXTRACT
            - USES_UUID
            - APPLICATION_DISCOVERY
            example: AUTHENTICATE
            type: string
          type: array
        type:
          description: "Specifies the type of system being managed e.g. Active Directory,\
            \ Workday, etc.. If you are creating a delimited file source, you must\
            \ set the `provisionasCsv` query parameter to `true`. "
          example: OpenLDAP - Direct
          type: string
        connector:
          description: Connector script name.
          example: active-directory
          type: string
        connectorClass:
          description: Fully qualified name of the Java class that implements the
            connector interface.
          example: sailpoint.connector.LDAPConnector
          type: string
        connectorAttributes:
          description: Connector specific configuration. This configuration will differ
            from type to type.
          example:
            healthCheckTimeout: 30
            authSearchAttributes:
            - cn
            - uid
            - mail
          type: object
        deleteThreshold:
          description: Number from 0 to 100 that specifies when to skip the delete
            phase.
          example: 10
          format: int32
          type: integer
        authoritative:
          default: false
          description: "When this is true, it indicates that the source is referenced\
            \ by an identity profile."
          example: false
          type: boolean
        managementWorkgroup:
          $ref: '#/components/schemas/Source_managementWorkgroup'
        healthy:
          default: false
          description: "When this is true, it indicates that the source is healthy."
          example: true
          type: boolean
        status:
          description: 'Status identifier that gives specific information about why
            a source is or isn''t healthy. '
          enum:
          - SOURCE_STATE_ERROR_ACCOUNT_FILE_IMPORT
          - SOURCE_STATE_ERROR_CLUSTER
          - SOURCE_STATE_ERROR_SOURCE
          - SOURCE_STATE_ERROR_VA
          - SOURCE_STATE_FAILURE_CLUSTER
          - SOURCE_STATE_FAILURE_SOURCE
          - SOURCE_STATE_HEALTHY
          - SOURCE_STATE_UNCHECKED_CLUSTER
          - SOURCE_STATE_UNCHECKED_CLUSTER_NO_SOURCES
          - SOURCE_STATE_UNCHECKED_SOURCE
          - SOURCE_STATE_UNCHECKED_SOURCE_NO_ACCOUNTS
          example: SOURCE_STATE_HEALTHY
          type: string
        since:
          description: Timestamp that shows when a source health check was last performed.
          example: 2021-09-28T15:48:29.3801666300Z
          type: string
        connectorId:
          description: Connector ID
          example: active-directory
          type: string
        connectorName:
          description: Name of the connector that was chosen during source creation.
          example: Active Directory
          type: string
        connectionType:
          description: Type of connection (direct or file).
          example: file
          type: string
        connectorImplementationId:
          description: Connector implementation ID.
          example: delimited-file
          type: string
        created:
          description: Date-time when the source was created
          example: 2022-02-08T14:50:03.827Z
          format: date-time
          type: string
        modified:
          description: Date-time when the source was last modified.
          example: 2024-01-23T18:08:50.897Z
          format: date-time
          type: string
        credentialProviderEnabled:
          default: false
          description: "If this is true, it enables a credential provider for the\
            \ source. If credentialProvider is turned on,  then the source can use\
            \ credential provider(s) to fetch credentials."
          example: false
          type: boolean
        category:
          description: "Source category (e.g. null, CredentialProvider)."
          example: CredentialProvider
          nullable: true
          type: string
      required:
      - connector
      - name
      - owner
      type: object
    SourceHealthDto:
      description: Dto for source health data
      example:
        hostname: megapod-useast1-secret-hostname.sailpoint.com
        iqServiceVersion: iqVersion123
        pod: megapod-useast1
        org: denali-cjh
        name: Source1234
        isAuthoritative: false
        id: 2c91808568c529c60168cca6f90c1324
        type: OpenLDAP - Direct
        isCluster: false
        status: SOURCE_STATE_UNCHECKED_SOURCE
      properties:
        id:
          description: the id of the Source
          example: 2c91808568c529c60168cca6f90c1324
          readOnly: true
          type: string
        type:
          description: "Specifies the type of system being managed e.g. Active Directory,\
            \ Workday, etc.. If you are creating a Delimited File source, you must\
            \ set the `provisionasCsv` query parameter to `true`. "
          example: OpenLDAP - Direct
          type: string
        name:
          description: the name of the source
          example: Source1234
          type: string
        org:
          description: source's org
          example: denali-cjh
          type: string
        isAuthoritative:
          description: Is the source authoritative
          example: false
          type: boolean
        isCluster:
          description: Is the source in a cluster
          example: false
          type: boolean
        hostname:
          description: source's hostname
          example: megapod-useast1-secret-hostname.sailpoint.com
          type: string
        pod:
          description: source's pod
          example: megapod-useast1
          type: string
        iqServiceVersion:
          description: The version of the iqService
          example: iqVersion123
          type: string
        status:
          description: connection test result
          enum:
          - SOURCE_STATE_ERROR_CLUSTER
          - SOURCE_STATE_ERROR_SOURCE
          - SOURCE_STATE_ERROR_VA
          - SOURCE_STATE_FAILURE_CLUSTER
          - SOURCE_STATE_FAILURE_SOURCE
          - SOURCE_STATE_HEALTHY
          - SOURCE_STATE_UNCHECKED_CLUSTER
          - SOURCE_STATE_UNCHECKED_CLUSTER_NO_SOURCES
          - SOURCE_STATE_UNCHECKED_SOURCE
          - SOURCE_STATE_UNCHECKED_SOURCE_NO_ACCOUNTS
          example: SOURCE_STATE_UNCHECKED_SOURCE
          type: string
      type: object
    Transform:
      description: The representation of an internally- or customer-defined transform.
      example:
        name: Timestamp To Date
        attributes: "{}"
        type: dateFormat
      properties:
        name:
          description: Unique name of this transform
          example: Timestamp To Date
          maxLength: 50
          minLength: 1
          type: string
        type:
          description: The type of transform operation
          enum:
          - accountAttribute
          - base64Decode
          - base64Encode
          - concat
          - conditional
          - dateCompare
          - dateFormat
          - dateMath
          - decomposeDiacriticalMarks
          - e164phone
          - firstValid
          - rule
          - identityAttribute
          - indexOf
          - iso3166
          - lastIndexOf
          - leftPad
          - lookup
          - lower
          - normalizeNames
          - randomAlphaNumeric
          - randomNumeric
          - reference
          - replaceAll
          - replace
          - rightPad
          - split
          - static
          - substring
          - trim
          - upper
          - usernameGenerator
          - uuid
          - displayName
          - rfc5646
          example: dateFormat
          externalDocs:
            description: Transform Operations
            url: https://developer.sailpoint.com/idn/docs/transforms/operations
          type: string
        attributes:
          description: Meta-data about the transform. Values in this list are specific
            to the type of transform to be executed.
          nullable: true
          type: object
      required:
      - attributes
      - name
      - type
      type: object
    WorkItems:
      example:
        requesterDisplayName: John Smith
        requesterId: 2c9180835d2e5168015d32f890ca1581
        created: 2017-07-11T18:45:37.098Z
        approvalItems:
        - application: Active Directory
          name: emailAddress
          id: 2c9180835d2e5168015d32f890ca1581
          state: ""
          operation: update
          value: a@b.com
          account: john.smith
        - application: Active Directory
          name: emailAddress
          id: 2c9180835d2e5168015d32f890ca1581
          state: ""
          operation: update
          value: a@b.com
          account: john.smith
        description: Create account on source 'AD'
        completed: 2018-10-19T13:49:37.385Z
        ownerId: 2c9180835d2e5168015d32f890ca1581
        type: Generic
        numItems: 19
        ownerName: Jason Smith
        form:
          subtitle: Please select from the following
          name: AccountSelection Form
          id: 2c9180835d2e5168015d32f890ca1581
          title: Account Selection for John.Doe
          targetUser: Jane.Doe
          sections:
          - formItems: []
            name: Field1
            label: Section 1
          - formItems: []
            name: Field1
            label: Section 1
        remediationItems:
        - targetName: john.smith
          targetId: 2c9180835d2e5168015d32f890ca1581
          attributeValue: 512-555-1212
          targetDisplayName: emailAddress
          attributeName: phoneNumber
          id: 2c9180835d2e5168015d32f890ca1581
          applicationName: Active Directory
          attributeOperation: update
          nativeIdentity: jason.smith2
        - targetName: john.smith
          targetId: 2c9180835d2e5168015d32f890ca1581
          attributeValue: 512-555-1212
          targetDisplayName: emailAddress
          attributeName: phoneNumber
          id: 2c9180835d2e5168015d32f890ca1581
          applicationName: Active Directory
          attributeOperation: update
          nativeIdentity: jason.smith2
        name: Account Create
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
        state: Finished
        errors:
        - The work item ID that was specified was not found.
      properties:
        id:
          description: ID of the work item
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        requesterId:
          description: ID of the requester
          example: 2c9180835d2e5168015d32f890ca1581
          nullable: true
          type: string
        requesterDisplayName:
          description: The displayname of the requester
          example: John Smith
          nullable: true
          type: string
        ownerId:
          description: The ID of the owner
          example: 2c9180835d2e5168015d32f890ca1581
          nullable: true
          type: string
        ownerName:
          description: The name of the owner
          example: Jason Smith
          type: string
        created:
          description: Time when the work item was created
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: Time when the work item was last updated
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        description:
          description: The description of the work item
          example: Create account on source 'AD'
          type: string
        state:
          $ref: '#/components/schemas/WorkItemStateManualWorkItems'
        type:
          $ref: '#/components/schemas/WorkItemTypeManualWorkItems'
        remediationItems:
          description: A list of remediation items
          items:
            $ref: '#/components/schemas/RemediationItemDetails'
          nullable: true
          type: array
        approvalItems:
          description: A list of items that need to be approved
          items:
            $ref: '#/components/schemas/ApprovalItemDetails'
          nullable: true
          type: array
        name:
          description: The work item name
          example: Account Create
          nullable: true
          type: string
        completed:
          description: The time at which the work item completed
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          nullable: true
          type: string
        numItems:
          description: The number of items in the work item
          example: 19
          format: int32
          nullable: true
          type: integer
        form:
          $ref: '#/components/schemas/WorkItems_form'
        errors:
          description: An array of errors that ocurred during the work item
          example:
          - The work item ID that was specified was not found.
          items:
            type: string
          type: array
      type: object
    WorkItemsCount:
      example:
        count: 29
      properties:
        count:
          description: The count of work items
          example: 29
          type: integer
      type: object
    WorkItemsSummary:
      example:
        total: 30
        completed: 1
        open: 29
      properties:
        open:
          description: The count of open work items
          example: 29
          type: integer
        completed:
          description: The count of completed work items
          example: 1
          type: integer
        total:
          description: The count of total work items
          example: 30
          type: integer
      type: object
    AccountUsage:
      example:
        date: 2023-04-21
        count: 10
      properties:
        date:
          description: The first day of the month for which activity is aggregated.
          example: 2023-04-21
          format: date
          type: string
        count:
          description: The number of days within the month that the account was active
            in a source.
          example: 10
          format: int64
          type: integer
      type: object
    SourceUsage:
      example:
        date: 2023-04-21
        count: 10.45
      properties:
        date:
          description: The first day of the month for which activity is aggregated.
          example: 2023-04-21
          format: date
          type: string
        count:
          description: "The average number of days that accounts were active within\
            \ this source, for the month."
          example: 10.45
          format: float
          type: number
      type: object
    SourceUsageStatus:
      example:
        status: COMPLETE
      properties:
        status:
          description: |-
            Source Usage Status. Acceptable values are:
              - COMPLETE
                  - This status means that an activity data source has been setup and usage insights are available for the source.
              - INCOMPLETE
                  - This status means that an activity data source has not been setup and usage insights are not available for the source.
          enum:
          - COMPLETE
          - INCOMPLETE
          example: COMPLETE
          type: string
      type: object
    BrandingItem:
      example:
        standardLogoURL: ""
        emailFromAddress: no-reply@sailpoint.com
        actionButtonColor: 0074D9
        name: default
        navigationColor: 011E69
        productName: product name
        loginInformationalMessage: ""
        activeLinkColor: 011E69
      properties:
        name:
          description: name of branding item
          example: default
          type: string
        productName:
          description: product name
          example: product name
          nullable: true
          type: string
        actionButtonColor:
          description: hex value of color for action button
          example: 0074D9
          nullable: true
          type: string
        activeLinkColor:
          description: hex value of color for link
          example: 011E69
          nullable: true
          type: string
        navigationColor:
          description: hex value of color for navigation bar
          example: 011E69
          nullable: true
          type: string
        emailFromAddress:
          description: email from address
          example: no-reply@sailpoint.com
          nullable: true
          type: string
        standardLogoURL:
          description: url to standard logo
          example: ""
          nullable: true
          type: string
        loginInformationalMessage:
          description: login information message
          example: ""
          nullable: true
          type: string
      type: object
    BrandingItemCreate:
      properties:
        name:
          description: name of branding item
          example: custom-branding-item
          type: string
        productName:
          description: product name
          example: product name
          nullable: true
          type: string
        actionButtonColor:
          description: hex value of color for action button
          example: 0074D9
          type: string
        activeLinkColor:
          description: hex value of color for link
          example: 011E69
          type: string
        navigationColor:
          description: hex value of color for navigation bar
          example: 011E69
          type: string
        emailFromAddress:
          description: email from address
          example: no-reply@sailpoint.com
          type: string
        loginInformationalMessage:
          description: login information message
          example: ""
          type: string
        fileStandard:
          description: png file with logo
          example: \x00\x00\x00\x02
          format: binary
          type: string
      required:
      - name
      - productName
      type: object
    AccessProfile:
      description: Access profile.
      example:
        owner:
          name: support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        entitlements:
        - name: "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local"
          id: 2c91809773dee32014e13e122092014e
          type: ENTITLEMENT
        - name: "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local"
          id: 2c91809773dee32014e13e122092014e
          type: ENTITLEMENT
        created: 2021-03-01T22:32:58.104Z
        description: Collection of entitlements to read/write the employee database
        source:
          name: ODS-AD-SOURCE
          id: 2c91809773dee3610173fdb0b6061ef4
          type: SOURCE
        enabled: true
        revocationRequestConfig:
          approvalSchemes:
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
        segments:
        - f7b1b8a3-5fed-4fd4-ad29-82014e137e19
        - 29cb6c06-1da8-43ea-8be4-b3125f248f2a
        accessRequestConfig:
          commentsRequired: true
          reauthorizationRequired: true
          approvalSchemes:
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          denialCommentsRequired: true
        name: Employee-database-read-write
        provisioningCriteria:
          children:
          - children:
            - children: children
              attribute: email
              operation: EQUALS
              value: carlee.cert1c9f9b6fd@mailinator.com
            - children: children
              attribute: email
              operation: EQUALS
              value: carlee.cert1c9f9b6fd@mailinator.com
            attribute: email
            operation: EQUALS
            value: carlee.cert1c9f9b6fd@mailinator.com
          - children:
            - children: children
              attribute: email
              operation: EQUALS
              value: carlee.cert1c9f9b6fd@mailinator.com
            - children: children
              attribute: email
              operation: EQUALS
              value: carlee.cert1c9f9b6fd@mailinator.com
            attribute: email
            operation: EQUALS
            value: carlee.cert1c9f9b6fd@mailinator.com
          attribute: email
          operation: EQUALS
          value: carlee.cert1c9f9b6fd@mailinator.com
        modified: 2021-03-02T20:22:28.104Z
        id: 2c91808a7190d06e01719938fcd20792
        requestable: true
      properties:
        id:
          description: Access profile ID.
          example: 2c91808a7190d06e01719938fcd20792
          readOnly: true
          type: string
        name:
          description: Access profile name.
          example: Employee-database-read-write
          type: string
        description:
          description: Access profile description.
          example: Collection of entitlements to read/write the employee database
          nullable: true
          type: string
        created:
          description: Date and time when the access profile was created.
          example: 2021-03-01T22:32:58.104Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Date and time when the access profile was last modified.
          example: 2021-03-02T20:22:28.104Z
          format: date-time
          readOnly: true
          type: string
        enabled:
          default: false
          description: "Indicates whether the access profile is enabled. If it's enabled,\
            \ you must include at least one entitlement."
          example: true
          type: boolean
        owner:
          $ref: '#/components/schemas/OwnerReference'
        source:
          $ref: '#/components/schemas/AccessProfileSourceRef'
        entitlements:
          description: "List of entitlements associated with the access profile. If\
            \ `enabled` is false, this can be empty. Otherwise, it must contain at\
            \ least one entitlement."
          items:
            $ref: '#/components/schemas/EntitlementRef'
          nullable: true
          type: array
        requestable:
          default: true
          description: "Indicates whether the access profile is requestable by access\
            \ request. Currently, making an access profile non-requestable is only\
            \ supported  for customers enabled with the new Request Center. Otherwise,\
            \ attempting to create an access profile with a value  **false** in this\
            \ field results in a 400 error."
          example: true
          type: boolean
        accessRequestConfig:
          $ref: '#/components/schemas/Requestability'
        revocationRequestConfig:
          $ref: '#/components/schemas/Revocability'
        segments:
          description: "List of segment IDs, if any, that the access profile is assigned\
            \ to."
          example:
          - f7b1b8a3-5fed-4fd4-ad29-82014e137e19
          - 29cb6c06-1da8-43ea-8be4-b3125f248f2a
          items:
            type: string
          nullable: true
          type: array
        provisioningCriteria:
          $ref: '#/components/schemas/ProvisioningCriteriaLevel1'
      required:
      - name
      - owner
      - source
      type: object
    ErrorResponseDto:
      example:
        causes:
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        messages:
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        detailCode: 400.1 Bad Request Content
        trackingId: e7eab60924f64aa284175b9fa3309599
      properties:
        detailCode:
          description: Fine-grained error code providing more detail of the error.
          example: 400.1 Bad Request Content
          type: string
        trackingId:
          description: Unique tracking id for the error.
          example: e7eab60924f64aa284175b9fa3309599
          type: string
        messages:
          description: Generic localized reason for error
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
        causes:
          description: Plain-text descriptive reasons to provide additional detail
            to the text provided in the messages field
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
      type: object
    JsonPatchOperation:
      description: "A JSONPatch Operation as defined by [RFC 6902 - JSON Patch](https://tools.ietf.org/html/rfc6902)"
      example:
        op: replace
        path: /description
        value: New description
      properties:
        op:
          description: The operation to be performed
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
          example: replace
          type: string
        path:
          description: A string JSON Pointer representing the target path to an element
            to be affected by the operation
          example: /description
          type: string
        value:
          $ref: '#/components/schemas/JsonPatchOperation_value'
      required:
      - op
      - path
      type: object
    AccessProfileBulkDeleteRequest:
      example:
        accessProfileIds:
        - 2c9180847812e0b1017817051919ecca
        - 2c9180887812e0b201781e129f151816
        bestEffortOnly: true
      properties:
        accessProfileIds:
          description: List of IDs of Access Profiles to be deleted.
          example:
          - 2c9180847812e0b1017817051919ecca
          - 2c9180887812e0b201781e129f151816
          items:
            type: string
          type: array
        bestEffortOnly:
          description: "If **true**, silently skip over any of the specified Access\
            \ Profiles if they cannot be deleted because they are in use. If **false**,\
            \ no deletions will be attempted if any of the Access Profiles are in\
            \ use."
          example: true
          type: boolean
      type: object
    AccessProfileBulkDeleteResponse:
      example:
        pending:
        - 2c91808876438bbb017668c21919ecca
        - 2c91808876438bb201766e129f151816
        inUse:
        - accessProfileId: 2c91808876438bbb017668c21919ecca
          usedBy:
          - name: Manager Role
            id: 2c8180857a9b3da0017aa03418480f9d
            type: ROLE
          - name: Manager Role
            id: 2c8180857a9b3da0017aa03418480f9d
            type: ROLE
        - accessProfileId: 2c91808876438bbb017668c21919ecca
          usedBy:
          - name: Manager Role
            id: 2c8180857a9b3da0017aa03418480f9d
            type: ROLE
          - name: Manager Role
            id: 2c8180857a9b3da0017aa03418480f9d
            type: ROLE
        taskId: 2c9180867817ac4d017817c491119a20
      properties:
        taskId:
          description: ID of the task which is executing the bulk deletion. This can
            be passed to the **/task-status** API to track status.
          example: 2c9180867817ac4d017817c491119a20
          type: string
        pending:
          description: List of IDs of Access Profiles which are pending deletion.
          example:
          - 2c91808876438bbb017668c21919ecca
          - 2c91808876438bb201766e129f151816
          items:
            type: string
          type: array
        inUse:
          description: List of usages of Access Profiles targeted for deletion.
          items:
            $ref: '#/components/schemas/AccessProfileUsage'
          type: array
      type: object
    Entitlement:
      example:
        owner:
          name: john.doe
          id: 2c9180827ca885d7017ca8ce28a000eb
          type: IDENTITY
        created: 2020-10-08T18:33:52.029Z
        description: "CN=LauncherTest2,OU=LauncherTestOrg,OU=slpt-automation,DC=TestAutomationAD,DC=local"
        source:
          name: ODS-AD-Source
          id: 2c9180827ca885d7017ca8ce28a000eb
          type: SOURCE
        segments:
        - f7b1b8a3-5fed-4fd4-ad29-82014e137e19
        - 29cb6c06-1da8-43ea-8be4-b3125f248f2a
        privileged: true
        directPermissions:
        - rights:
          - SELECT
          - SELECT
          target: SYS.GV_$TRANSACTION
        - rights:
          - SELECT
          - SELECT
          target: SYS.GV_$TRANSACTION
        manuallyUpdatedFields:
          DISPLAY_NAME: true
          DESCRIPTION: true
        name: LauncherTest2
        modified: 2020-10-08T18:33:52.029Z
        sourceSchemaObjectType: group
        accessModelMetadata:
          attributes:
          - multiselect: true
            values:
            - name: Development
              value: development
              status: active
            - name: Development
              value: development
              status: active
            name: CSP
            description: Indicates the type of deployment environment of an access
              item.
            type: governance
            objectTypes:
            - general
            - general
            key: iscCsp
            status: active
          - multiselect: true
            values:
            - name: Development
              value: development
              status: active
            - name: Development
              value: development
              status: active
            name: CSP
            description: Indicates the type of deployment environment of an access
              item.
            type: governance
            objectTypes:
            - general
            - general
            key: iscCsp
            status: active
        attributes:
          fieldName: fieldValue
        id: 2c91808874ff91550175097daaec161c
        attribute: memberOf
        requestable: true
        value: "CN=LauncherTest2,OU=LauncherTestOrg,OU=slpt-automation,DC=TestAutomationAD,DC=local"
        cloudGoverned: true
      properties:
        id:
          description: The entitlement id
          example: 2c91808874ff91550175097daaec161c
          type: string
        name:
          description: The entitlement name
          example: LauncherTest2
          type: string
        attribute:
          description: The entitlement attribute name
          example: memberOf
          type: string
        value:
          description: The value of the entitlement
          example: "CN=LauncherTest2,OU=LauncherTestOrg,OU=slpt-automation,DC=TestAutomationAD,DC=local"
          type: string
        sourceSchemaObjectType:
          description: The object type of the entitlement from the source schema
          example: group
          type: string
        description:
          description: The description of the entitlement
          example: "CN=LauncherTest2,OU=LauncherTestOrg,OU=slpt-automation,DC=TestAutomationAD,DC=local"
          nullable: true
          type: string
        privileged:
          description: True if the entitlement is privileged
          example: true
          type: boolean
        cloudGoverned:
          description: True if the entitlement is cloud governed
          example: true
          type: boolean
        requestable:
          default: false
          description: True if the entitlement is able to be directly requested
          example: true
          type: boolean
        owner:
          $ref: '#/components/schemas/Entitlement_owner'
        manuallyUpdatedFields:
          additionalProperties: true
          description: "A map of entitlement fields that have been manually updated.\
            \ The key is the field name in UPPER_SNAKE_CASE format, and the value\
            \ is true or false to indicate if the field has been updated."
          example:
            DISPLAY_NAME: true
            DESCRIPTION: true
          nullable: true
          type: object
        accessModelMetadata:
          $ref: '#/components/schemas/Entitlement_accessModelMetadata'
        created:
          description: Time when the entitlement was created
          example: 2020-10-08T18:33:52.029Z
          format: date-time
          type: string
        modified:
          description: Time when the entitlement was last modified
          example: 2020-10-08T18:33:52.029Z
          format: date-time
          type: string
        source:
          $ref: '#/components/schemas/Entitlement_source'
        attributes:
          additionalProperties: true
          description: A map of free-form key-value pairs from the source system
          example:
            fieldName: fieldValue
          type: object
        segments:
          description: "List of IDs of segments, if any, to which this Entitlement\
            \ is assigned."
          example:
          - f7b1b8a3-5fed-4fd4-ad29-82014e137e19
          - 29cb6c06-1da8-43ea-8be4-b3125f248f2a
          items:
            type: string
          nullable: true
          type: array
        directPermissions:
          items:
            $ref: '#/components/schemas/PermissionDto'
          type: array
      type: object
    AccessRequestResponse:
      example:
        newRequests:
        - requestedFor: 899fd612ecfc4cf3bf48f14d0afdef89
          requestedItemsDetails:
          - type: ENTITLEMENT
            id: 779c6fd7171540bba1184e5946112c28
          attributesHash: -1928438224
          accessRequestIds:
          - 5d3118c518a44ec7805450d53479ccdb
        existingRequests:
        - requestedFor: 899fd612ecfc4cf3bf48f14d0afdef89
          requestedItemsDetails:
          - type: ROLE
            id: 779c6fd7171540bbc1184e5946112c28
          attributesHash: 2843118224
          accessRequestIds:
          - 5d3118c518a44ec7805450d53479ccdc
      properties:
        newRequests:
          description: A list of new access request tracking data mapped to the values
            requested.
          example:
          - requestedFor: 899fd612ecfc4cf3bf48f14d0afdef89
            requestedItemsDetails:
            - type: ENTITLEMENT
              id: 779c6fd7171540bba1184e5946112c28
            attributesHash: -1928438224
            accessRequestIds:
            - 5d3118c518a44ec7805450d53479ccdb
          items:
            $ref: '#/components/schemas/AccessRequestTracking'
          type: array
        existingRequests:
          description: A list of existing access request tracking data mapped to the
            values requested.  This indicates access has already been requested for
            this item.
          example:
          - requestedFor: 899fd612ecfc4cf3bf48f14d0afdef89
            requestedItemsDetails:
            - type: ROLE
              id: 779c6fd7171540bbc1184e5946112c28
            attributesHash: 2843118224
            accessRequestIds:
            - 5d3118c518a44ec7805450d53479ccdc
          items:
            $ref: '#/components/schemas/AccessRequestTracking'
          type: array
      type: object
    CancelAccessRequest:
      description: Request body payload for cancel access request endpoint.
      example:
        accountActivityId: 2c9180835d2e5168015d32f890ca1581
        comment: I requested this role by mistake.
      properties:
        accountActivityId:
          description: "This refers to the identityRequestId. To successfully cancel\
            \ an access request, you must provide the identityRequestId."
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        comment:
          description: Reason for cancelling the pending access request.
          example: I requested this role by mistake.
          type: string
      required:
      - accountActivityId
      - comment
      type: object
    AccessRequestConfig:
      example:
        requestOnBehalfOfConfig:
          allowRequestOnBehalfOfEmployeeByManager: true
          allowRequestOnBehalfOfAnyoneByAnyone: true
        approvalReminderAndEscalationConfig:
          fallbackApproverRef:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          maxReminders: 1
          daysUntilEscalation: 0
          daysBetweenReminders: 0
        autoApprovalEnabled: true
        entitlementRequestConfig:
          requestCommentsRequired: false
          deniedCommentsRequired: false
          allowEntitlementRequest: true
          grantRequestApprovalSchemes: "entitlementOwner, sourceOwner, manager, workgroup:2c918084660f45d6016617daa9210584"
        reauthorizationEnabled: true
        approvalsMustBeExternal: true
      properties:
        approvalsMustBeExternal:
          default: false
          description: "If this is true, approvals must be processed by an external\
            \ system. Also, if this is true, it blocks Request Center access requests\
            \ and returns an error for any user who isn't an org admin."
          example: true
          type: boolean
        autoApprovalEnabled:
          default: false
          description: "If this is true and the requester and reviewer are the same,\
            \ the request is automatically approved."
          example: true
          type: boolean
        reauthorizationEnabled:
          default: false
          description: "If this is true, reauthorization will be enforced for appropriately\
            \ configured access items. Enablement of this feature is currently in\
            \ a limited state."
          example: true
          type: boolean
        requestOnBehalfOfConfig:
          $ref: '#/components/schemas/RequestOnBehalfOfConfig'
        approvalReminderAndEscalationConfig:
          $ref: '#/components/schemas/ApprovalReminderAndEscalationConfig'
        entitlementRequestConfig:
          $ref: '#/components/schemas/EntitlementRequestConfig'
      type: object
    RequestedItemStatus:
      example:
        requestedFor:
          name: William Wilson
          id: 2c9180835d191a86015d28455b4b232a
          type: IDENTITY
        requestedAccounts:
        - accountId: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          name: Glen.067da3248e914
          accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
          sourceName: Multi Account AD source name
          type: IDENTITY
        - accountId: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          name: Glen.067da3248e914
          accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
          sourceName: Multi Account AD source name
          type: IDENTITY
        cancelable: true
        requesterComment:
          created: 2017-07-11T18:45:37.098Z
          author:
            name: john.doe
            id: 2c9180847e25f377017e2ae8cae4650b
            type: IDENTITY
          comment: This is a comment.
        description: This is the Engineering role that engineers are granted.
        type: ACCESS_PROFILE
        approvalIds:
        - 85f0cf482dd44327b593624c07906c21
        - fa57e1bfa36f41ee85e33ee59fcbeac5
        provisioningDetails:
          orderedSubPhaseReferences: manualWorkItemDetails
        accountActivityItemId: 2c9180926cbfbddd016cbfc7c3b10010
        modified: 2019-08-23T18:52:59.162Z
        id: 2c9180926cbfbddd016cbfc7c3b10010
        state: EXECUTING
        accessRequestPhases:
        - result: SUCCESSFUL
          phaseReference: approvalDetails
          name: APPROVAL_PHASE
          started: 2020-07-11T00:00:00Z
          finished: 2020-07-12T00:00:00Z
          state: COMPLETED
        - result: SUCCESSFUL
          phaseReference: approvalDetails
          name: APPROVAL_PHASE
          started: 2020-07-11T00:00:00Z
          finished: 2020-07-12T00:00:00Z
          state: COMPLETED
        requester:
          name: William Wilson
          id: 2c7180a46faadee4016fb4e018c20648
          type: IDENTITY
        removeDate: 2019-10-23T00:00:00Z
        clientMetadata:
          key1: value1
          key2: value2
        approvalDetails:
        - errorMessages:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          removeDate: 2020-07-11T00:00:00Z
          originalOwner:
            name: Michael Michaels
            id: 2c7180a46faadee4016fb4e018c20642
            type: IDENTITY
          scheme: MANAGER
          currentOwner:
            name: Allen Albertson
            id: 2c3780a46faadee4016fb4e018c20652
            type: IDENTITY
          modified: 2019-08-23T18:52:57.398Z
          approvalId: 2c9180877b2b6ea4017b2c545f971429
          comment: I approve this request
          forwarded: false
          status: PENDING
        - errorMessages:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          removeDate: 2020-07-11T00:00:00Z
          originalOwner:
            name: Michael Michaels
            id: 2c7180a46faadee4016fb4e018c20642
            type: IDENTITY
          scheme: MANAGER
          currentOwner:
            name: Allen Albertson
            id: 2c3780a46faadee4016fb4e018c20652
            type: IDENTITY
          modified: 2019-08-23T18:52:57.398Z
          approvalId: 2c9180877b2b6ea4017b2c545f971429
          comment: I approve this request
          forwarded: false
          status: PENDING
        requestType: GRANT_ACCESS
        created: 2019-08-23T18:40:35.772Z
        preApprovalTriggerDetails:
          decision: APPROVED
          comment: Access is Approved
          reviewer: John Doe
        errorMessages:
        - - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
        - - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
        sodViolationContext:
          violationCheckResult:
            clientMetadata:
              requestedAppName: test-app
              requestedAppId: 2c91808f7892918f0178b78da4a305a1
            violationContexts:
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: Business SOD Policy
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                type: SOD_POLICY
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: Business SOD Policy
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                type: SOD_POLICY
            violatedPolicies:
            - name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
            - name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
            message:
              localeOrigin: DEFAULT
              text: The request was syntactically correct but its content is semantically
                invalid.
              locale: en-US
          state: SUCCESS
          uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
        cancelledRequestDetails:
          owner:
            name: Support
            id: 2c9180a46faadee4016fb4e018c20639
            type: IDENTITY
          modified: 2019-12-20T09:17:12.192Z
          comment: This request must be cancelled.
        accessRequestId: 2b838de9-db9b-abcf-e646-d4f274ad4238
        name: AccessProfile1
        manualWorkItemDetails:
        - originalOwner:
            name: Michael Michaels
            id: 2c7180a46faadee4016fb4e018c20642
            type: IDENTITY
          currentOwner:
            name: Allen Albertson
            id: 2c3780a46faadee4016fb4e018c20652
            type: IDENTITY
          modified: 2019-08-23T18:52:57.398Z
          forwardHistory:
          - forwarderName: William Wilson
            reassignmentType: AUTOMATIC_REASSIGNMENT
            modified: 2019-08-23T18:52:57.398Z
            oldApproverName: Frank Mir
            newApproverName: Al Volta
            comment: Forwarding from Frank to Al
          - forwarderName: William Wilson
            reassignmentType: AUTOMATIC_REASSIGNMENT
            modified: 2019-08-23T18:52:57.398Z
            oldApproverName: Frank Mir
            newApproverName: Al Volta
            comment: Forwarding from Frank to Al
          forwarded: true
          status: PENDING
        - originalOwner:
            name: Michael Michaels
            id: 2c7180a46faadee4016fb4e018c20642
            type: IDENTITY
          currentOwner:
            name: Allen Albertson
            id: 2c3780a46faadee4016fb4e018c20652
            type: IDENTITY
          modified: 2019-08-23T18:52:57.398Z
          forwardHistory:
          - forwarderName: William Wilson
            reassignmentType: AUTOMATIC_REASSIGNMENT
            modified: 2019-08-23T18:52:57.398Z
            oldApproverName: Frank Mir
            newApproverName: Al Volta
            comment: Forwarding from Frank to Al
          - forwarderName: William Wilson
            reassignmentType: AUTOMATIC_REASSIGNMENT
            modified: 2019-08-23T18:52:57.398Z
            oldApproverName: Frank Mir
            newApproverName: Al Volta
            comment: Forwarding from Frank to Al
          forwarded: true
          status: PENDING
      properties:
        id:
          description: The ID of the access request.
          example: 2c9180926cbfbddd016cbfc7c3b10010
          type: string
        name:
          description: Human-readable display name of the item being requested.
          example: AccessProfile1
          nullable: true
          type: string
        type:
          description: Type of requested object.
          enum:
          - ACCESS_PROFILE
          - ROLE
          - ENTITLEMENT
          - null
          example: ACCESS_PROFILE
          nullable: true
          type: string
        cancelledRequestDetails:
          $ref: '#/components/schemas/RequestedItemStatus_cancelledRequestDetails'
        errorMessages:
          description: "List of list of localized error messages, if any, encountered\
            \ during the approval/provisioning process."
          items:
            $ref: '#/components/schemas/ErrorMessageDtoList'
          nullable: true
          type: array
        state:
          $ref: '#/components/schemas/RequestedItemStatusRequestState'
        approvalDetails:
          description: Approval details for each item.
          items:
            $ref: '#/components/schemas/ApprovalStatusDto'
          type: array
        approvalIds:
          description: List of approval IDs associated with the request.
          example:
          - 85f0cf482dd44327b593624c07906c21
          - fa57e1bfa36f41ee85e33ee59fcbeac5
          items:
            type: string
          nullable: true
          type: array
        manualWorkItemDetails:
          description: Manual work items created for provisioning the item.
          items:
            $ref: '#/components/schemas/ManualWorkItemDetails'
          nullable: true
          type: array
        accountActivityItemId:
          description: Id of associated account activity item.
          example: 2c9180926cbfbddd016cbfc7c3b10010
          type: string
        requestType:
          $ref: '#/components/schemas/AccessRequestType'
        modified:
          description: When the request was last modified.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          nullable: true
          type: string
        created:
          description: When the request was created.
          example: 2019-08-23T18:40:35.772Z
          format: date-time
          type: string
        requester:
          $ref: '#/components/schemas/AccessItemRequester'
        requestedFor:
          $ref: '#/components/schemas/RequestedItemStatus_requestedFor'
        requesterComment:
          $ref: '#/components/schemas/RequestedItemStatus_requesterComment'
        sodViolationContext:
          $ref: '#/components/schemas/RequestedItemStatus_sodViolationContext'
        provisioningDetails:
          $ref: '#/components/schemas/RequestedItemStatus_provisioningDetails'
        preApprovalTriggerDetails:
          $ref: '#/components/schemas/RequestedItemStatus_preApprovalTriggerDetails'
        accessRequestPhases:
          description: "A list of Phases that the Access Request has gone through\
            \ in order, to help determine the status of the request."
          items:
            $ref: '#/components/schemas/AccessRequestPhases'
          nullable: true
          type: array
        description:
          description: Description associated to the requested object.
          example: This is the Engineering role that engineers are granted.
          nullable: true
          type: string
        removeDate:
          description: When the role access is scheduled for removal.
          example: 2019-10-23T00:00:00Z
          format: date-time
          nullable: true
          type: string
        cancelable:
          default: false
          description: True if the request can be canceled.
          example: true
          type: boolean
        accessRequestId:
          description: This is the account activity id.
          example: 2b838de9-db9b-abcf-e646-d4f274ad4238
          type: string
        clientMetadata:
          additionalProperties:
            type: string
          description: "Arbitrary key-value pairs, if any were included in the corresponding\
            \ access request"
          example:
            key1: value1
            key2: value2
          nullable: true
          type: object
        requestedAccounts:
          description: "The accounts selected by the user for the access to be provisioned\
            \ on, in case they have multiple accounts on one or more sources."
          items:
            $ref: '#/components/schemas/RequestedAccountRef'
          nullable: true
          type: array
      type: object
    PendingApproval:
      example:
        requester:
          name: William Wilson
          id: 2c7180a46faadee4016fb4e018c20648
          type: IDENTITY
        requestedFor:
          name: Robert Robinson
          id: 2c4180a46faadee4016fb4e018c20626
          type: IDENTITY
        owner:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        removeDate: 2020-07-11T00:00:00Z
        clientMetadata:
          customKey1: custom value 1
          customKey2: custom value 2
        requestedAccounts:
        - accountId: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          name: Glen.067da3248e914
          accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
          sourceName: Multi Account AD source name
          type: IDENTITY
        - accountId: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          name: Glen.067da3248e914
          accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
          sourceName: Multi Account AD source name
          type: IDENTITY
        requestType: GRANT_ACCESS
        commentRequiredWhenRejected: true
        created: 2017-07-11T18:45:37.098Z
        previousReviewersComments:
        - created: 2017-07-11T18:45:37.098Z
          author:
            name: john.doe
            id: 2c9180847e25f377017e2ae8cae4650b
            type: IDENTITY
          comment: This is a comment.
        - created: 2017-07-11T18:45:37.098Z
          author:
            name: john.doe
            id: 2c9180847e25f377017e2ae8cae4650b
            type: IDENTITY
          comment: This is a comment.
        requesterComment:
          created: 2017-07-11T18:45:37.098Z
          author:
            name: john.doe
            id: 2c9180847e25f377017e2ae8cae4650b
            type: IDENTITY
          comment: This is a comment.
        currentRemoveDate: 2020-07-11T00:00:00Z
        requestedObject:
          name: Applied Research Access
          description: "Access to research information, lab results, and schematics"
          id: 2c9180835d2e5168015d32f890ca1581
          type: ROLE
        sodViolationContext:
          violationCheckResult:
            clientMetadata:
              requestedAppName: test-app
              requestedAppId: 2c91808f7892918f0178b78da4a305a1
            violationContexts:
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: Business SOD Policy
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                type: SOD_POLICY
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: Business SOD Policy
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                type: SOD_POLICY
            violatedPolicies:
            - name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
            - name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
            message:
              localeOrigin: DEFAULT
              text: The request was syntactically correct but its content is semantically
                invalid.
              locale: en-US
          state: SUCCESS
          uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
        requestCreated: 2017-07-11T18:45:35.098Z
        actionInProcess: APPROVED
        accessRequestId: 2b838de9db9babcfe646d4f274ad4238
        name: aName
        modified: 2018-07-25T20:22:28.104Z
        id: id12345
        forwardHistory:
        - forwarderName: William Wilson
          reassignmentType: AUTOMATIC_REASSIGNMENT
          modified: 2019-08-23T18:52:57.398Z
          oldApproverName: Frank Mir
          newApproverName: Al Volta
          comment: Forwarding from Frank to Al
        - forwarderName: William Wilson
          reassignmentType: AUTOMATIC_REASSIGNMENT
          modified: 2019-08-23T18:52:57.398Z
          oldApproverName: Frank Mir
          newApproverName: Al Volta
          comment: Forwarding from Frank to Al
        removeDateUpdateRequested: true
      properties:
        id:
          description: The approval id.
          example: id12345
          type: string
        accessRequestId:
          description: This is the access request id.
          example: 2b838de9db9babcfe646d4f274ad4238
          type: string
        name:
          description: The name of the approval.
          example: aName
          type: string
        created:
          description: When the approval was created.
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: When the approval was modified last time.
          example: 2018-07-25T20:22:28.104Z
          format: date-time
          type: string
        requestCreated:
          description: When the access-request was created.
          example: 2017-07-11T18:45:35.098Z
          format: date-time
          type: string
        requestType:
          $ref: '#/components/schemas/AccessRequestType'
        requester:
          $ref: '#/components/schemas/AccessItemRequester'
        requestedFor:
          $ref: '#/components/schemas/AccessItemRequestedFor'
        owner:
          $ref: '#/components/schemas/PendingApproval_owner'
        requestedObject:
          $ref: '#/components/schemas/RequestableObjectReference'
        requesterComment:
          $ref: '#/components/schemas/CommentDto'
        previousReviewersComments:
          description: The history of the previous reviewers comments.
          items:
            $ref: '#/components/schemas/CommentDto'
          type: array
        forwardHistory:
          description: The history of approval forward action.
          items:
            $ref: '#/components/schemas/ApprovalForwardHistory'
          type: array
        commentRequiredWhenRejected:
          default: false
          description: When true the rejector has to provide comments when rejecting
          example: true
          type: boolean
        actionInProcess:
          $ref: '#/components/schemas/PendingApprovalAction'
        removeDate:
          description: The date the role or access profile or entitlement is no longer
            assigned to the specified identity.
          example: 2020-07-11T00:00:00Z
          format: date-time
          type: string
        removeDateUpdateRequested:
          default: false
          description: "If true, then the request is to change the remove date or\
            \ sunset date."
          example: true
          type: boolean
        currentRemoveDate:
          description: The remove date or sunset date that was assigned at the time
            of the request.
          example: 2020-07-11T00:00:00Z
          format: date-time
          type: string
        sodViolationContext:
          $ref: '#/components/schemas/SodViolationContextCheckCompleted'
        clientMetadata:
          additionalProperties:
            type: string
          description: "Arbitrary key-value pairs, if any were included in the corresponding\
            \ access request item"
          example:
            customKey1: custom value 1
            customKey2: custom value 2
          nullable: true
          type: object
        requestedAccounts:
          description: "The accounts selected by the user for the access to be provisioned\
            \ on, in case they have multiple accounts on one or more sources."
          items:
            $ref: '#/components/schemas/RequestedAccountRef'
          nullable: true
          type: array
      type: object
    CompletedApproval:
      example:
        requester:
          name: William Wilson
          id: 2c7180a46faadee4016fb4e018c20648
          type: IDENTITY
        requestedFor:
          name: William Wilson
          id: 2c9180835d191a86015d28455b4b232a
          type: IDENTITY
        owner:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        reviewerComment:
          created: 2017-07-11T18:45:37.098Z
          author:
            name: john.doe
            id: 2c9180847e25f377017e2ae8cae4650b
            type: IDENTITY
          comment: This is a comment.
        removeDate: 2020-07-11T00:00:00Z
        clientMetadata:
          requestedAppName: test-app
          requestedAppId: 2c91808f7892918f0178b78da4a305a1
        requestedAccounts:
        - accountId: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          name: Glen.067da3248e914
          accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
          sourceName: Multi Account AD source name
          type: IDENTITY
        - accountId: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          name: Glen.067da3248e914
          accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
          sourceName: Multi Account AD source name
          type: IDENTITY
        requestType: GRANT_ACCESS
        commentRequiredWhenRejected: true
        created: 2017-07-11T18:45:37.098Z
        previousReviewersComments:
        - created: 2017-07-11T18:45:37.098Z
          author:
            name: john.doe
            id: 2c9180847e25f377017e2ae8cae4650b
            type: IDENTITY
          comment: This is a comment.
        - created: 2017-07-11T18:45:37.098Z
          author:
            name: john.doe
            id: 2c9180847e25f377017e2ae8cae4650b
            type: IDENTITY
          comment: This is a comment.
        requesterComment:
          created: 2017-07-11T18:45:37.098Z
          author:
            name: john.doe
            id: 2c9180847e25f377017e2ae8cae4650b
            type: IDENTITY
          comment: This is a comment.
        currentRemoveDate: 2020-07-11T00:00:00Z
        reviewedBy:
          name: Allen Albertson
          id: 2c3780a46faadee4016fb4e018c20652
          type: IDENTITY
        requestedObject:
          name: Applied Research Access
          description: "Access to research information, lab results, and schematics"
          id: 2c9180835d2e5168015d32f890ca1581
          type: ROLE
        sodViolationContext:
          violationCheckResult:
            clientMetadata:
              requestedAppName: test-app
              requestedAppId: 2c91808f7892918f0178b78da4a305a1
            violationContexts:
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: Business SOD Policy
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                type: SOD_POLICY
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: Business SOD Policy
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                type: SOD_POLICY
            violatedPolicies:
            - name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
            - name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
            message:
              localeOrigin: DEFAULT
              text: The request was syntactically correct but its content is semantically
                invalid.
              locale: en-US
          state: SUCCESS
          uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
        requestCreated: 2017-07-11T18:45:35.098Z
        name: aName
        modified: 2018-07-25T20:22:28.104Z
        id: id12345
        forwardHistory:
        - forwarderName: William Wilson
          reassignmentType: AUTOMATIC_REASSIGNMENT
          modified: 2019-08-23T18:52:57.398Z
          oldApproverName: Frank Mir
          newApproverName: Al Volta
          comment: Forwarding from Frank to Al
        - forwarderName: William Wilson
          reassignmentType: AUTOMATIC_REASSIGNMENT
          modified: 2019-08-23T18:52:57.398Z
          oldApproverName: Frank Mir
          newApproverName: Al Volta
          comment: Forwarding from Frank to Al
        state: APPROVED
        removeDateUpdateRequested: true
        preApprovalTriggerResult:
          date: 2022-06-07T19:18:40.748Z
          decision: APPROVED
          comment: This request was autoapproved by our automated ETS subscriber
          reviewer: Automated AR Approval
      properties:
        id:
          description: The approval id.
          example: id12345
          type: string
        name:
          description: The name of the approval.
          example: aName
          type: string
        created:
          description: When the approval was created.
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: When the approval was modified last time.
          example: 2018-07-25T20:22:28.104Z
          format: date-time
          type: string
        requestCreated:
          description: When the access-request was created.
          example: 2017-07-11T18:45:35.098Z
          format: date-time
          type: string
        requestType:
          $ref: '#/components/schemas/AccessRequestType'
        requester:
          $ref: '#/components/schemas/AccessItemRequester'
        requestedFor:
          $ref: '#/components/schemas/RequestedItemStatus_requestedFor'
        reviewedBy:
          $ref: '#/components/schemas/AccessItemReviewedBy'
        owner:
          $ref: '#/components/schemas/OwnerDto'
        requestedObject:
          $ref: '#/components/schemas/RequestableObjectReference'
        requesterComment:
          $ref: '#/components/schemas/CompletedApproval_requesterComment'
        reviewerComment:
          $ref: '#/components/schemas/CompletedApproval_reviewerComment'
        previousReviewersComments:
          description: The history of the previous reviewers comments.
          items:
            $ref: '#/components/schemas/CommentDto'
          type: array
        forwardHistory:
          description: The history of approval forward action.
          items:
            $ref: '#/components/schemas/ApprovalForwardHistory'
          type: array
        commentRequiredWhenRejected:
          default: false
          description: When true the rejector has to provide comments when rejecting
          example: true
          type: boolean
        state:
          $ref: '#/components/schemas/CompletedApprovalState'
        removeDate:
          description: The date the role or access profile or entitlement is no longer
            assigned to the specified identity.
          example: 2020-07-11T00:00:00Z
          format: date-time
          nullable: true
          type: string
        removeDateUpdateRequested:
          default: false
          description: "If true, then the request was to change the remove date or\
            \ sunset date."
          example: true
          type: boolean
        currentRemoveDate:
          description: The remove date or sunset date that was assigned at the time
            of the request.
          example: 2020-07-11T00:00:00Z
          format: date-time
          nullable: true
          type: string
        sodViolationContext:
          $ref: '#/components/schemas/SodViolationContextCheckCompleted'
        preApprovalTriggerResult:
          $ref: '#/components/schemas/CompletedApproval_preApprovalTriggerResult'
        clientMetadata:
          additionalProperties:
            type: string
          description: Arbitrary key-value pairs provided during the request.
          example:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          type: object
        requestedAccounts:
          description: "The accounts selected by the user for the access to be provisioned\
            \ on, in case they have multiple accounts on one or more sources."
          items:
            $ref: '#/components/schemas/RequestedAccountRef'
          nullable: true
          type: array
      type: object
    CommentDto:
      example:
        created: 2017-07-11T18:45:37.098Z
        author:
          name: john.doe
          id: 2c9180847e25f377017e2ae8cae4650b
          type: IDENTITY
        comment: This is a comment.
      properties:
        comment:
          description: Comment content.
          example: This is a comment.
          nullable: true
          type: string
        created:
          description: Date and time comment was created.
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        author:
          $ref: '#/components/schemas/CommentDto_author'
      type: object
    ForwardApprovalDto:
      example:
        newOwnerId: 2c91808568c529c60168cca6f90c1314
        comment: 2c91808568c529c60168cca6f90c1313
      properties:
        newOwnerId:
          description: The Id of the new owner
          example: 2c91808568c529c60168cca6f90c1314
          maxLength: 255
          minLength: 1
          type: string
        comment:
          description: The comment provided by the forwarder
          example: 2c91808568c529c60168cca6f90c1313
          maxLength: 255
          minLength: 1
          type: string
      required:
      - comment
      - newOwnerId
      type: object
    ApprovalSummary:
      example:
        approved: 0
        rejected: 0
        pending: 0
      properties:
        pending:
          description: The number of pending access requests approvals.
          example: 0
          format: int32
          type: integer
        approved:
          description: The number of approved access requests approvals.
          example: 0
          format: int32
          type: integer
        rejected:
          description: The number of rejected access requests approvals.
          example: 0
          format: int32
          type: integer
      type: object
    AccountAttributesCreate:
      example:
        attributes:
          sourceId: 34bfcbe116c9407464af37acbaf7a4dc
          city: Austin
          displayName: John Doe
          userName: jdoe
          sAMAccountName: jDoe
          mail: john.doe@sailpoint.com
      properties:
        attributes:
          $ref: '#/components/schemas/AccountAttributesCreate_attributes'
      required:
      - attributes
      type: object
    SearchAttributeConfig:
      example:
        displayName: New Mail Attribute
        name: newMailAttribute
        applicationAttributes:
          "2c91808b79fd2422017a0b35d30f3968": employeeNumber
          "2c91808b79fd2422017a0b36008f396b": employeeNumber
      properties:
        name:
          description: Name of the new attribute
          example: newMailAttribute
          type: string
        displayName:
          description: The display name of the new attribute
          example: New Mail Attribute
          type: string
        applicationAttributes:
          description: Map of application id and their associated attribute.
          example:
            "2c91808b79fd2422017a0b35d30f3968": employeeNumber
            "2c91808b79fd2422017a0b36008f396b": employeeNumber
          type: object
      type: object
    NetworkConfiguration:
      example:
        range:
        - 1.3.7.2
        - 255.255.255.252/30
        whitelisted: true
        geolocation:
        - CA
        - FR
        - HT
      properties:
        range:
          description: The collection of ip ranges.
          example:
          - 1.3.7.2
          - 255.255.255.252/30
          items:
            type: string
          nullable: true
          type: array
        geolocation:
          description: The collection of country codes.
          example:
          - CA
          - FR
          - HT
          items:
            type: string
          nullable: true
          type: array
        whitelisted:
          default: false
          description: Denotes whether the provided lists are whitelisted or blacklisted
            for geo location.
          example: true
          type: boolean
      type: object
    LockoutConfiguration:
      example:
        maximumAttempts: 5
        lockoutDuration: 15
        lockoutWindow: 5
      properties:
        maximumAttempts:
          description: The maximum attempts allowed before lockout occurs.
          example: 5
          format: int32
          type: integer
        lockoutDuration:
          description: The total time in minutes a user will be locked out.
          example: 15
          format: int32
          type: integer
        lockoutWindow:
          description: A rolling window where authentication attempts in a series
            count towards the maximum before lockout occurs.
          example: 5
          format: int32
          type: integer
      type: object
    ServiceProviderConfiguration:
      description: Represents the IdentityNow as Service Provider Configuration allowing
        customers to log into IDN via an Identity Provider
      example:
        bypassIdp: true
        samlConfigurationValid: true
        federationProtocolDetails:
        - role: SAML_IDP
          entityId: http://www.okta.com/exktq4o24bmQA4fr60h7
          cert: MIIDpDCCAoygAwIBAgIGAYhZ+b29MA0GCSqGSIb3DQEBCwUAMIGSMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEzARBgNVBAMMCmRldi0yMDY0NDUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMjMwNTI2MjEzMDU5WhcNMzMwNTI2MjEzMTU5WjCBkjELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRMwEQYDVQQDDApkZXYtMjA2NDQ1MRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwvi1+WbF2ceGlLCrLl5PrG1lpj04IsrHX6OE666ObC2WFh+Nxvpxy+Vmzon9c9+akhK3bTv+9ifEoVc6tA1qWuCfXISAn9g81JqI68I1PGUbe6eF8pmOA18rjOrt7x94k4QukpR3+I8DfPJ+TynatltB51laLb8H4jchMafA4rDTjV/ZiYPxV0LMEIbprVyGuvBEhiEWha3wwVdDuJq996okX36YNS8PcGH+5CJ8c3YWZp/wrspgJmfCooMXeV+6zBpZfXqPpMWlUo0gcZqDOFgy3r4vkXehJdVYRlInMfDv04Lvy8VI1YAZClG/duO/6o9YVUFLjD9s+mQfhgaF5wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB1CTrA/pTHkarbhMHsdSFAjVoYWwdAfrssG99rIjwwr/CW9tavTC3keaoUmUeddcnLY4V/TfL07+xgQGHCBR88cnzG9h6rC9qWxt6C3nug3YDVQfkdCDgnW9A8QEvLeq/KVLoRccpJNEENb2Y5ESUXHi1+PtjkFBtvfSgZ4eEhVggirL0bJdWVm700hCnjb2iCGSbSX7WflfPi0GSmjht983caG9OwZDnDzNFt8qGWCxo4bNSThT00JnWEN/6f1BWNOt9YDrxqEyNclqhLL+RDqFsPBFIrQlsoXzqpWqCL8oS9UMNxbGATK2v3d5ueE9+SswBAFBhirCuqZw19Ri2W
          loginUrlPost: https://dev-206445.oktapreview.com/app/tivolidev206445_acmeidntest_1/exktq4o24bmQA4fr60h7/sso/saml
          loginUrlRedirect: https://dev-206445.oktapreview.com/app/tivolidev206445_acmeidntest_1/exktq4o24bmQA4fr60h7/sso/saml
          logoutUrl: https://dev-206445.oktapreview.com/login/signout
          nameId: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
          binding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST
          authnContext: urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport
          includeAuthnContext: true
          mappingAttribute: email
          jitConfiguration:
            enabled: true
            sourceId: 2c9180897427f3a501745042afc83144
            sourceAttributeMappings:
              firstName: okta.firstName
              lastName: okta.lastName
              email: okta.email
          certificateExpirationDate: Thu May 26 21:31:59 GMT 2033
          certificateName: "EMAILADDRESS=info@okta.com, CN=dev-206445, OU=SSOProvider,\
            \ O=Okta, L=San Francisco, ST=California, C=US"
        - role: SAML_SP
          entityId: https://acme.identitysoon.com/sp
          alias: acme-sp
          callbackUrl: https://acme.test-login.sailpoint.com/saml/SSO/alias/acme-sp
          legacyAcsUrl: https://megapod-useast1-sso.identitysoon.com/sso/Consumer/metaAlias/acme/sp
        enabled: true
      properties:
        enabled:
          default: false
          description: This determines whether or not the SAML authentication flow
            is enabled for an org
          example: true
          type: boolean
        bypassIdp:
          default: false
          description: "This allows basic login with the parameter prompt=true. This\
            \ is often toggled on when debugging SAML authentication setup. When false,\
            \ only org admins with MFA-enabled can bypass the IDP."
          example: true
          type: boolean
        samlConfigurationValid:
          default: false
          description: This indicates whether or not the SAML configuration is valid.
          example: true
          type: boolean
        federationProtocolDetails:
          description: "A list of the abstract implementations of the Federation Protocol\
            \ details. Typically, this will include on SpDetails object and one IdpDetails\
            \ object used in tandem to define a SAML integration between a customer's\
            \ identity provider and a customer's SailPoint instance (i.e., the service\
            \ provider)."
          example:
          - role: SAML_IDP
            entityId: http://www.okta.com/exktq4o24bmQA4fr60h7
            cert: MIIDpDCCAoygAwIBAgIGAYhZ+b29MA0GCSqGSIb3DQEBCwUAMIGSMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEzARBgNVBAMMCmRldi0yMDY0NDUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMjMwNTI2MjEzMDU5WhcNMzMwNTI2MjEzMTU5WjCBkjELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRMwEQYDVQQDDApkZXYtMjA2NDQ1MRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwvi1+WbF2ceGlLCrLl5PrG1lpj04IsrHX6OE666ObC2WFh+Nxvpxy+Vmzon9c9+akhK3bTv+9ifEoVc6tA1qWuCfXISAn9g81JqI68I1PGUbe6eF8pmOA18rjOrt7x94k4QukpR3+I8DfPJ+TynatltB51laLb8H4jchMafA4rDTjV/ZiYPxV0LMEIbprVyGuvBEhiEWha3wwVdDuJq996okX36YNS8PcGH+5CJ8c3YWZp/wrspgJmfCooMXeV+6zBpZfXqPpMWlUo0gcZqDOFgy3r4vkXehJdVYRlInMfDv04Lvy8VI1YAZClG/duO/6o9YVUFLjD9s+mQfhgaF5wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB1CTrA/pTHkarbhMHsdSFAjVoYWwdAfrssG99rIjwwr/CW9tavTC3keaoUmUeddcnLY4V/TfL07+xgQGHCBR88cnzG9h6rC9qWxt6C3nug3YDVQfkdCDgnW9A8QEvLeq/KVLoRccpJNEENb2Y5ESUXHi1+PtjkFBtvfSgZ4eEhVggirL0bJdWVm700hCnjb2iCGSbSX7WflfPi0GSmjht983caG9OwZDnDzNFt8qGWCxo4bNSThT00JnWEN/6f1BWNOt9YDrxqEyNclqhLL+RDqFsPBFIrQlsoXzqpWqCL8oS9UMNxbGATK2v3d5ueE9+SswBAFBhirCuqZw19Ri2W
            loginUrlPost: https://dev-206445.oktapreview.com/app/tivolidev206445_acmeidntest_1/exktq4o24bmQA4fr60h7/sso/saml
            loginUrlRedirect: https://dev-206445.oktapreview.com/app/tivolidev206445_acmeidntest_1/exktq4o24bmQA4fr60h7/sso/saml
            logoutUrl: https://dev-206445.oktapreview.com/login/signout
            nameId: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
            binding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST
            authnContext: urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport
            includeAuthnContext: true
            mappingAttribute: email
            jitConfiguration:
              enabled: true
              sourceId: 2c9180897427f3a501745042afc83144
              sourceAttributeMappings:
                firstName: okta.firstName
                lastName: okta.lastName
                email: okta.email
            certificateExpirationDate: Thu May 26 21:31:59 GMT 2033
            certificateName: "EMAILADDRESS=info@okta.com, CN=dev-206445, OU=SSOProvider,\
              \ O=Okta, L=San Francisco, ST=California, C=US"
          - role: SAML_SP
            entityId: https://acme.identitysoon.com/sp
            alias: acme-sp
            callbackUrl: https://acme.test-login.sailpoint.com/saml/SSO/alias/acme-sp
            legacyAcsUrl: https://megapod-useast1-sso.identitysoon.com/sso/Consumer/metaAlias/acme/sp
          items:
            $ref: '#/components/schemas/ServiceProviderConfiguration_federationProtocolDetails_inner'
          type: array
      type: object
    SessionConfiguration:
      example:
        maxSessionTime: 45
        maxIdleTime: 15
        rememberMe: true
      properties:
        maxIdleTime:
          description: The maximum time in minutes a session can be idle.
          example: 15
          format: int32
          type: integer
        rememberMe:
          default: false
          description: Denotes if 'remember me' is enabled.
          example: true
          type: boolean
        maxSessionTime:
          description: The maximum allowable session time in minutes.
          example: 45
          format: int32
          type: integer
      type: object
    AuthUser:
      example:
        firstname: Will
        capabilities:
        - ORG_ADMIN
        - ORG_ADMIN
        displayName: Will Smith
        profile: 2c91808458ae7a4f0158b1bbf8af0756
        lastPasswordChangeDate: 2021-03-08T22:37:33.901Z
        currentLoginTimestamp: 1656327185832
        personalEmail: william.smith@example.com
        lastname: Smith
        lastLoginTimestamp: 1656327185832
        uid: will.smith
        phone: "5555555555"
        identificationNumber: 19-5588452
        alias: will.smith
        workPhone: "5555555555"
        id: 2c91808458ae7a4f0158b1bbf8af0628
        tenant: test-tenant
        email: william.smith@example.com
        lastUnlockTimestamp: 2021-03-08T22:37:33.901Z
      properties:
        tenant:
          description: Tenant name.
          example: test-tenant
          type: string
        id:
          description: Identity ID.
          example: 2c91808458ae7a4f0158b1bbf8af0628
          type: string
        uid:
          description: Identity's unique identitifier.
          example: will.smith
          type: string
        profile:
          description: ID of the auth profile associated with the auth user.
          example: 2c91808458ae7a4f0158b1bbf8af0756
          type: string
        identificationNumber:
          description: Auth user's employee number.
          example: 19-5588452
          nullable: true
          type: string
        email:
          description: Auth user's email.
          example: william.smith@example.com
          nullable: true
          type: string
        phone:
          description: Auth user's phone number.
          example: "5555555555"
          nullable: true
          type: string
        workPhone:
          description: Auth user's work phone number.
          example: "5555555555"
          nullable: true
          type: string
        personalEmail:
          description: Auth user's personal email.
          example: william.smith@example.com
          nullable: true
          type: string
        firstname:
          description: Auth user's first name.
          example: Will
          nullable: true
          type: string
        lastname:
          description: Auth user's last name.
          example: Smith
          nullable: true
          type: string
        displayName:
          description: Auth user's name in displayed format.
          example: Will Smith
          type: string
        alias:
          description: Auth user's alias.
          example: will.smith
          type: string
        lastPasswordChangeDate:
          description: Date of last password change.
          example: 2021-03-08T22:37:33.901Z
          format: date-time
          nullable: true
          type: string
        lastLoginTimestamp:
          description: Timestamp of the last login (long type value).
          example: 1656327185832
          format: int64
          type: integer
        currentLoginTimestamp:
          description: Timestamp of the current login (long type value).
          example: 1656327185832
          format: int64
          type: integer
        lastUnlockTimestamp:
          description: The date and time when the user was last unlocked.
          example: 2021-03-08T22:37:33.901Z
          format: date-time
          nullable: true
          type: string
        capabilities:
          description: Array of the auth user's capabilities.
          items:
            enum:
            - CERT_ADMIN
            - CLOUD_GOV_ADMIN
            - CLOUD_GOV_USER
            - HELPDESK
            - ORG_ADMIN
            - REPORT_ADMIN
            - ROLE_ADMIN
            - ROLE_SUBADMIN
            - SAAS_MANAGEMENT_ADMIN
            - SAAS_MANAGEMENT_READER
            - SOURCE_ADMIN
            - SOURCE_SUBADMIN
            - das:ui-administrator
            - das:ui-compliance_manager
            - das:ui-auditor
            - das:ui-data-scope
            - sp:aic-dashboard-read
            - sp:aic-dashboard-write
            - sp:ui-config-hub-admin
            - sp:ui-config-hub-backup-admin
            - sp:ui-config-hub-read
            example: ORG_ADMIN
            type: string
          nullable: true
          type: array
      type: object
    SlimCampaign:
      example:
        totalCertifications: 100
        recommendationsEnabled: true
        created: 2020-03-03T22:15:13.611Z
        description: Everyone needs to be reviewed by their manager
        type: MANAGER
        emailNotificationEnabled: false
        alerts:
        - level: ERROR
          localizations:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
        - level: ERROR
          localizations:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
        autoRevokeAllowed: false
        name: Manager Campaign
        completedCertifications: 10
        id: 2c9079b270a266a60170a2779fcb0007
        deadline: 2020-03-15T10:00:01.456Z
        status: ACTIVE
        correlatedStatus: CORRELATED
      properties:
        id:
          description: Id of the campaign
          example: 2c9079b270a266a60170a2779fcb0007
          readOnly: true
          type: string
        name:
          description: |
            The campaign name. If this object is part of a template, special formatting applies; see the
            `/campaign-templates/{id}/generate` endpoint documentation for details.
          example: Manager Campaign
          type: string
        description:
          description: |
            The campaign description. If this object is part of a template, special formatting applies; see the
            `/campaign-templates/{id}/generate` endpoint documentation for details.
          example: Everyone needs to be reviewed by their manager
          nullable: true
          type: string
        deadline:
          description: "The campaign's completion deadline.  This date must be in\
            \ the future in order to activate the campaign.  If you try to activate\
            \ a campaign with a deadline of today or in the past, you will receive\
            \ a 400 error response."
          example: 2020-03-15T10:00:01.456Z
          format: date-time
          type: string
        type:
          description: The type of campaign. Could be extended in the future.
          enum:
          - MANAGER
          - SOURCE_OWNER
          - SEARCH
          - ROLE_COMPOSITION
          - MACHINE_ACCOUNT
          example: MANAGER
          type: string
        emailNotificationEnabled:
          default: false
          description: Enables email notification for this campaign
          example: false
          type: boolean
        autoRevokeAllowed:
          default: false
          description: Allows auto revoke for this campaign
          example: false
          type: boolean
        recommendationsEnabled:
          default: false
          description: Enables IAI for this campaign. Accepts true even if the IAI
            product feature is off. If IAI is turned off then campaigns generated
            from this template will indicate false. The real value will then be returned
            if IAI is ever enabled for the org in the future.
          example: true
          type: boolean
        status:
          description: The campaign's current status.
          enum:
          - PENDING
          - STAGED
          - CANCELING
          - ACTIVATING
          - ACTIVE
          - COMPLETING
          - COMPLETED
          - ERROR
          - ARCHIVED
          example: ACTIVE
          readOnly: true
          type: string
        correlatedStatus:
          description: The correlatedStatus of the campaign. Only SOURCE_OWNER campaigns
            can be Uncorrelated. An Uncorrelated certification campaign only includes
            Uncorrelated identities (An identity is uncorrelated if it has no accounts
            on an authoritative source).
          enum:
          - CORRELATED
          - UNCORRELATED
          example: CORRELATED
          type: string
        created:
          description: Created time of the campaign
          example: 2020-03-03T22:15:13.611Z
          format: date-time
          readOnly: true
          type: string
        totalCertifications:
          description: The total number of certifications in this campaign.
          example: 100
          format: int32
          readOnly: true
          type: integer
        completedCertifications:
          description: The number of completed certifications in this campaign.
          example: 10
          format: int32
          readOnly: true
          type: integer
        alerts:
          description: A list of errors and warnings that have accumulated.
          items:
            $ref: '#/components/schemas/CampaignAlert'
          readOnly: true
          type: array
      required:
      - description
      - name
      - type
      title: Slim Campaign
      type: object
    AdminReviewReassign:
      example:
        certificationIds:
        - af3859464779471211bb8424a563abc1
        - af3859464779471211bb8424a563abc2
        - af3859464779471211bb8424a563abc3
        reason: reassigned for some reason
        reassignTo:
          id: ef38f94347e94562b5bb8424a56397d8
          type: IDENTITY
      properties:
        certificationIds:
          description: List of certification IDs to reassign
          example:
          - af3859464779471211bb8424a563abc1
          - af3859464779471211bb8424a563abc2
          - af3859464779471211bb8424a563abc3
          items:
            type: string
          maxItems: 250
          minItems: 1
          type: array
        reassignTo:
          $ref: '#/components/schemas/AdminReviewReassign_reassignTo'
        reason:
          description: Comment to explain why the certification was reassigned
          example: reassigned for some reason
          type: string
      type: object
    CertificationTask:
      example:
        targetId: 2c918086719eec070171a7e3355a834c
        created: 2020-09-24T18:10:47.693Z
        targetType: CAMPAIGN
        id: 2c918086719eec070171a7e3355a360a
        type: ADMIN_REASSIGN
        reassignmentTrailDTOs:
          previousOwner: ef38f94347e94562b5bb8424a56397d8
          newOwner: ef38f94347e94562b5bb8424a56397a3
          reassignmentType: AUTOMATIC_REASSIGNMENT
        errors:
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        status: QUEUED
      properties:
        id:
          description: The ID of the certification task.
          example: 2c918086719eec070171a7e3355a360a
          type: string
        type:
          description: The type of the certification task. More values may be added
            in the future.
          enum:
          - REASSIGN
          - ADMIN_REASSIGN
          - COMPLETE_CERTIFICATION
          - FINISH_CERTIFICATION
          - COMPLETE_CAMPAIGN
          - ACTIVATE_CAMPAIGN
          - CAMPAIGN_CREATE
          - CAMPAIGN_DELETE
          example: ADMIN_REASSIGN
          type: string
        targetType:
          description: The type of item that is being operated on by this task whose
            ID is stored in the targetId field.
          enum:
          - CERTIFICATION
          - CAMPAIGN
          example: CAMPAIGN
          type: string
        targetId:
          description: The ID of the item being operated on by this task.
          example: 2c918086719eec070171a7e3355a834c
          type: string
        status:
          description: The status of the task.
          enum:
          - QUEUED
          - IN_PROGRESS
          - SUCCESS
          - ERROR
          example: QUEUED
          type: string
        errors:
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
        reassignmentTrailDTOs:
          description: Reassignment trails that lead to self certification identity
          example:
            previousOwner: ef38f94347e94562b5bb8424a56397d8
            newOwner: ef38f94347e94562b5bb8424a56397a3
            reassignmentType: AUTOMATIC_REASSIGNMENT
          items:
            $ref: '#/components/schemas/ReassignmentTrailDTO'
          type: array
        created:
          description: The date and time on which this task was created.
          example: 2020-09-24T18:10:47.693Z
          format: date-time
          type: string
      type: object
    ActivateCampaignOptions:
      example:
        timeZone: -05:00
      properties:
        timeZone:
          default: Z
          description: "The timezone must be in a valid ISO 8601 format. Timezones\
            \ in ISO 8601 are represented as UTC (represented as 'Z') or as an offset\
            \ from UTC. The offset format can be +/-hh:mm, +/-hhmm, or +/-hh."
          example: -05:00
          type: string
      type: object
    CampaignCompleteOptions:
      example:
        autoCompleteAction: REVOKE
      properties:
        autoCompleteAction:
          default: APPROVE
          description: Determines whether to auto-approve(APPROVE) or auto-revoke(REVOKE)
            upon campaign completion.
          enum:
          - APPROVE
          - REVOKE
          example: REVOKE
          type: string
      type: object
    CampaignsDeleteRequest:
      example:
        ids:
        - 2c9180887335cee10173490db1776c26
        - 2c9180836a712436016a7125a90c0021
      properties:
        ids:
          description: The ids of the campaigns to delete
          example:
          - 2c9180887335cee10173490db1776c26
          - 2c9180836a712436016a7125a90c0021
          items:
            type: string
          type: array
      type: object
    CampaignReport:
      allOf:
      - $ref: '#/components/schemas/ReportResultReference'
      - properties:
          reportType:
            $ref: '#/components/schemas/ReportType'
          lastRunAt:
            description: The most recent date and time this report was run
            format: date-time
            readOnly: true
            type: string
        type: object
      example:
        type: REPORT_RESULT
        id: 2c91808568c529c60168cca6f90c1313
        name: Campaign Composition Report
        status: SUCCESS
        reportType: CAMPAIGN_COMPOSITION_REPORT
        lastRunAt: 2019-12-19T13:49:37.385Z
      required:
      - reportType
      title: Campaign Report
      type: object
    ReportType:
      description: type of a Report
      enum:
      - CAMPAIGN_COMPOSITION_REPORT
      - CAMPAIGN_REMEDIATION_STATUS_REPORT
      - CAMPAIGN_STATUS_REPORT
      - CERTIFICATION_SIGNOFF_REPORT
      example: CAMPAIGN_COMPOSITION_REPORT
      type: string
    CampaignReportsConfig:
      example:
        identityAttributeColumns:
        - firstname
        - lastname
      properties:
        identityAttributeColumns:
          description: list of identity attribute columns
          example:
          - firstname
          - lastname
          items:
            type: string
          nullable: true
          type: array
      title: Campaign Reports Configuration
      type: object
    CampaignFilterDetails:
      description: Campaign Filter Details
      example:
        owner: SailPoint Support
        mode: INCLUSION
        isSystemFilter: false
        name: Identity Attribute Campaign Filter
        description: Campaign filter to certify data based on an identity attribute's
          specified property.
        id: 5ec18cef39020d6fd7a60ad3970aba61
        criteriaList:
        - type: IDENTITY_ATTRIBUTE
          property: displayName
          value: support
          operation: CONTAINS
          negateResult: false
          shortCircuit: false
          recordChildMatches: false
          id: null
          suppressMatchedItems: false
          children: null
      properties:
        id:
          description: The unique ID of the campaign filter
          example: 5ec18cef39020d6fd7a60ad3970aba61
          type: string
        name:
          description: Campaign filter name.
          example: Identity Attribute Campaign Filter
          type: string
        description:
          description: Campaign filter description.
          example: Campaign filter to certify data based on an identity attribute's
            specified property.
          type: string
        owner:
          description: Owner of the filter. This field automatically populates at
            creation time with the current user.
          example: SailPoint Support
          nullable: true
          type: string
        mode:
          description: "Mode/type of filter, either the INCLUSION or EXCLUSION type.\
            \ The INCLUSION type includes the data in generated campaigns  as per\
            \ specified in the criteria, whereas the EXCLUSION type excludes the data\
            \ in generated campaigns as per specified in criteria."
          enum:
          - INCLUSION
          - EXCLUSION
          example: INCLUSION
          type: string
        criteriaList:
          description: List of criteria.
          example:
          - type: IDENTITY_ATTRIBUTE
            property: displayName
            value: support
            operation: CONTAINS
            negateResult: false
            shortCircuit: false
            recordChildMatches: false
            id: null
            suppressMatchedItems: false
            children: null
          items:
            $ref: '#/components/schemas/CampaignFilterDetails_criteriaList_inner'
          type: array
        isSystemFilter:
          default: false
          description: "If true, the filter is created by the system. If false, the\
            \ filter is created by a user."
          example: false
          type: boolean
      required:
      - id
      - isSystemFilter
      - mode
      - name
      - owner
      type: object
    CampaignTemplate:
      description: Campaign Template
      example:
        ownerRef:
          name: Mister Manager
          id: 2c918086676d3e0601677611dbde220f
          type: IDENTITY
          email: mr.manager@example.com
        deadlineDuration: P2W
        created: 2020-03-05T22:44:00.364Z
        scheduled: false
        name: Manager Campaign Template
        description: Template for the annual manager campaign.
        modified: 2020-03-05T22:52:09.969Z
        campaign:
          totalCertifications: 100
          sourcesWithOrphanEntitlements:
          - name: Source with orphan entitlements
            id: 2c90ad2a70ace7d50170acf22ca90010
            type: SOURCE
          - name: Source with orphan entitlements
            id: 2c90ad2a70ace7d50170acf22ca90010
            type: SOURCE
          recommendationsEnabled: true
          sunsetCommentsRequired: true
          created: 2020-03-03T22:15:13.611Z
          machineAccountCampaignInfo:
            reviewerType: ACCOUNT_OWNER
            sourceIds:
            - 0fbe863c063c4c88a35fd7f17e8a3df5
          description: Everyone needs to be reviewed by their manager
          type: MANAGER
          sourceOwnerCampaignInfo:
            sourceIds:
            - 0fbe863c063c4c88a35fd7f17e8a3df5
          emailNotificationEnabled: false
          alerts:
          - level: ERROR
            localizations:
            - localeOrigin: DEFAULT
              text: The request was syntactically correct but its content is semantically
                invalid.
              locale: en-US
            - localeOrigin: DEFAULT
              text: The request was syntactically correct but its content is semantically
                invalid.
              locale: en-US
          - level: ERROR
            localizations:
            - localeOrigin: DEFAULT
              text: The request was syntactically correct but its content is semantically
                invalid.
              locale: en-US
            - localeOrigin: DEFAULT
              text: The request was syntactically correct but its content is semantically
                invalid.
              locale: en-US
          filter:
            name: Test Filter
            id: 0fbe863c063c4c88a35fd7f17e8a3df5
            type: CAMPAIGN_FILTER
          searchCampaignInfo:
            identityIds:
            - 0fbe863c063c4c88a35fd7f17e8a3df5
            query: Search Campaign query description
            description: Search Campaign description
            reviewer:
              name: William Wilson
              id: 2c91808568c529c60168cca6f90c1313
              type: IDENTITY
            type: ACCESS
            accessConstraints:
            - ids:
              - 2c90ad2a70ace7d50170acf22ca90010
              type: ENTITLEMENT
              operator: SELECTED
            - ids:
              - 2c90ad2a70ace7d50170acf22ca90010
              type: ENTITLEMENT
              operator: SELECTED
            - ids:
              - 2c90ad2a70ace7d50170acf22ca90010
              type: ENTITLEMENT
              operator: SELECTED
            - ids:
              - 2c90ad2a70ace7d50170acf22ca90010
              type: ENTITLEMENT
              operator: SELECTED
            - ids:
              - 2c90ad2a70ace7d50170acf22ca90010
              type: ENTITLEMENT
              operator: SELECTED
          autoRevokeAllowed: false
          name: Manager Campaign
          mandatoryCommentRequirement: NO_DECISIONS
          modified: 2020-03-03T22:20:12.674Z
          roleCompositionCampaignInfo:
            remediatorRef:
              name: Role Admin
              id: 2c90ad2a70ace7d50170acf22ca90010
              type: IDENTITY
            roleIds:
            - 2c90ad2a70ace7d50170acf22ca90010
            query: Search Query
            description: Role Composition Description
            reviewer:
              name: William Wilson
              id: 2c91808568c529c60168cca6f90c1313
              type: IDENTITY
          completedCertifications: 10
          id: 2c9079b270a266a60170a2779fcb0007
          deadline: 2020-03-15T10:00:01.456Z
          status: ACTIVE
          correlatedStatus: CORRELATED
        id: 2c9079b270a266a60170a277bb960008
      properties:
        id:
          description: Id of the campaign template
          example: 2c9079b270a266a60170a277bb960008
          type: string
        name:
          description: This template's name. Has no bearing on generated campaigns'
            names.
          example: Manager Campaign Template
          type: string
        description:
          description: This template's description. Has no bearing on generated campaigns'
            descriptions.
          example: Template for the annual manager campaign.
          type: string
        created:
          description: Creation date of Campaign Template
          example: 2020-03-05T22:44:00.364Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Modification date of Campaign Template
          example: 2020-03-05T22:52:09.969Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        scheduled:
          default: false
          description: Indicates if this campaign template has been scheduled.
          example: false
          readOnly: true
          type: boolean
        ownerRef:
          $ref: '#/components/schemas/CampaignTemplate_ownerRef'
        deadlineDuration:
          description: "The time period during which the campaign should be completed,\
            \ formatted as an ISO-8601 Duration. When this template generates a campaign,\
            \ the campaign's deadline will be the current date plus this duration.\
            \ For example, if generation occurred on 2020-01-01 and this field was\
            \ \"P2W\" (two weeks), the resulting campaign's deadline would be 2020-01-15\
            \ (the current date plus 14 days)."
          example: P2W
          type: string
        campaign:
          $ref: '#/components/schemas/Campaign'
      required:
      - campaign
      - created
      - description
      - modified
      - name
      type: object
    CampaignReference:
      example:
        campaignType: MANAGER
        name: Campaign Name
        mandatoryCommentRequirement: NO_DECISIONS
        description: A description of the campaign
        id: ef38f94347e94562b5bb8424a56397d8
        type: CAMPAIGN
        correlatedStatus: CORRELATED
      properties:
        id:
          description: The unique ID of the campaign.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        name:
          description: The name of the campaign.
          example: Campaign Name
          type: string
        type:
          description: The type of object that is being referenced.
          enum:
          - CAMPAIGN
          example: CAMPAIGN
          type: string
        campaignType:
          description: The type of the campaign.
          enum:
          - MANAGER
          - SOURCE_OWNER
          - SEARCH
          example: MANAGER
          type: string
        description:
          description: The description of the campaign set by the admin who created
            it.
          example: A description of the campaign
          nullable: true
          type: string
        correlatedStatus:
          description: The correlatedStatus of the campaign. Only SOURCE_OWNER campaigns
            can be Uncorrelated. An Uncorrelated certification campaign only includes
            Uncorrelated identities (An identity is uncorrelated if it has no accounts
            on an authoritative source).
          enum:
          - CORRELATED
          - UNCORRELATED
          example: CORRELATED
          type: string
        mandatoryCommentRequirement:
          description: "Determines whether comments are required for decisions during\
            \ certification reviews. You can require comments for all decisions, revoke-only\
            \ decisions, or no decisions. By default, comments are not required for\
            \ decisions."
          enum:
          - ALL_DECISIONS
          - REVOKE_ONLY_DECISIONS
          - NO_DECISIONS
          example: NO_DECISIONS
          type: string
      required:
      - campaignType
      - correlatedStatus
      - description
      - id
      - mandatoryCommentRequirement
      - name
      - type
      type: object
    IdentityCertificationDto:
      example:
        phase: ACTIVE
        reassignment:
          from:
            name: Certification Name
            id: ef38f94347e94562b5bb8424a56397d8
            reviewer:
              created: 2018-06-25T20:22:28.104Z
              name: Reviewer Name
              modified: 2018-06-25T20:22:28.104Z
              id: ef38f94347e94562b5bb8424a56397d8
              type: IDENTITY
              email: reviewer@test.com
            type: CERTIFICATION
          comment: Reassigned for a reason
        hasErrors: false
        identitiesTotal: 10
        created: 2018-06-25T20:22:28.104Z
        decisionsTotal: 40
        errorMessage: The certification has an error
        signed: 2018-10-19T13:49:37.385Z
        completed: true
        reviewer:
          created: 2018-06-25T20:22:28.104Z
          name: Reviewer Name
          modified: 2018-06-25T20:22:28.104Z
          id: ef38f94347e94562b5bb8424a56397d8
          type: IDENTITY
          email: reviewer@test.com
        identitiesCompleted: 5
        due: 2018-10-19T13:49:37.385Z
        name: "Source Owner Access Review for Employees [source]"
        campaign:
          campaignType: MANAGER
          name: Campaign Name
          mandatoryCommentRequirement: NO_DECISIONS
          description: A description of the campaign
          id: ef38f94347e94562b5bb8424a56397d8
          type: CAMPAIGN
          correlatedStatus: CORRELATED
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
        decisionsMade: 20
      properties:
        id:
          description: id of the certification
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: name of the certification
          example: "Source Owner Access Review for Employees [source]"
          type: string
        campaign:
          $ref: '#/components/schemas/CampaignReference'
        completed:
          description: Have all decisions been made?
          example: true
          type: boolean
        identitiesCompleted:
          description: The number of identities for whom all decisions have been made
            and are complete.
          example: 5
          format: int32
          type: integer
        identitiesTotal:
          description: "The total number of identities in the Certification, both\
            \ complete and incomplete."
          example: 10
          format: int32
          type: integer
        created:
          description: created date
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        modified:
          description: modified date
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        decisionsMade:
          description: The number of approve/revoke/acknowledge decisions that have
            been made.
          example: 20
          format: int32
          type: integer
        decisionsTotal:
          description: The total number of approve/revoke/acknowledge decisions.
          example: 40
          format: int32
          type: integer
        due:
          description: The due date of the certification.
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          nullable: true
          type: string
        signed:
          description: The date the reviewer signed off on the Certification.
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          nullable: true
          type: string
        reviewer:
          $ref: '#/components/schemas/Reviewer'
        reassignment:
          $ref: '#/components/schemas/Reassignment'
        hasErrors:
          description: Identifies if the certification has an error
          example: false
          type: boolean
        errorMessage:
          description: Description of the certification error
          example: The certification has an error
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/CertificationPhase'
      type: object
    AccessReviewItem:
      example:
        identitySummary:
          identityId: 2c9180857182306001719937377a33de
          name: Alison Ferguso
          id: 2c91808772a504f50172a9540e501ba7
          completed: true
        comments: This user still needs access to this source
        newAccess: false
        decision: APPROVE
        accessSummary:
          access:
            name: Entitlement for Company Database
            id: 2c9180867160846801719932c5153fb7
            type: IDENTITY
          role:
            privileged: false
            owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            entitlements:
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              sourceId: 78ca6be511cb41fbb86dba2fcca7780c
              dataAccess:
                policies:
                - value: GDPR-20
                - value: GDPR-20
                categories:
                - matchCount: 10
                  value: email-7
                - matchCount: 10
                  value: email-7
                impactScore:
                  value: Medium
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              containsDataAccess: true
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                owner:
                  displayName: Alison Ferguson
                  id: 2c9180857182305e0171993737eb29e8
                  type: IDENTITY
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                description: Account for Read/write to the company database
                disabled: false
                governanceGroupId: 2c9180857182305e0171993737eb29e6
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
                activityInsights:
                  accountID: c4ddd5421d8549f0abd309162cafd3b1
                  usageDays: 45
                  usageDaysState: COMPLETE
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              sourceId: 78ca6be511cb41fbb86dba2fcca7780c
              dataAccess:
                policies:
                - value: GDPR-20
                - value: GDPR-20
                categories:
                - matchCount: 10
                  value: email-7
                - matchCount: 10
                  value: email-7
                impactScore:
                  value: Medium
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              containsDataAccess: true
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                owner:
                  displayName: Alison Ferguson
                  id: 2c9180857182305e0171993737eb29e8
                  type: IDENTITY
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                description: Account for Read/write to the company database
                disabled: false
                governanceGroupId: 2c9180857182305e0171993737eb29e6
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
                activityInsights:
                  accountID: c4ddd5421d8549f0abd309162cafd3b1
                  usageDays: 45
                  usageDaysState: COMPLETE
            endDate: 2021-12-25T00:00:00Z
            accessProfiles:
            - privileged: false
              owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              entitlements:
              - owner:
                  name: Alison Ferguso
                  id: 5168015d32f890ca15812c9180835d2e
                  type: IDENTITY
                  email: alison.ferguso@identitysoon.com
                sourceId: 78ca6be511cb41fbb86dba2fcca7780c
                dataAccess:
                  policies:
                  - value: GDPR-20
                  - value: GDPR-20
                  categories:
                  - matchCount: 10
                    value: email-7
                  - matchCount: 10
                    value: email-7
                  impactScore:
                    value: Medium
                hasPermissions: false
                attributeValue: CN=entitlement.bbb7c650
                containsDataAccess: true
                description: Gives read/write access to the company database
                isPermission: false
                revocable: true
                privileged: false
                sourceType: Active Directory - Direct
                name: CN=entitlement.bbb7c650
                attributeName: memberOf
                sourceSchemaObjectType: groups
                id: 2c918085718230600171993742c63558
                sourceName: ODS-AD-Source
                cloudGoverned: false
                account:
                  owner:
                    displayName: Alison Ferguson
                    id: 2c9180857182305e0171993737eb29e8
                    type: IDENTITY
                  created: 2020-04-20T20:11:05.067Z
                  name: Alison Ferguso
                  modified: 2020-05-20T18:57:16.987Z
                  description: Account for Read/write to the company database
                  disabled: false
                  governanceGroupId: 2c9180857182305e0171993737eb29e6
                  id: 2c9180857182305e0171993737eb29e6
                  locked: false
                  type: IDENTITY
                  nativeIdentity: CN=Alison Ferguso
                  activityInsights:
                    accountID: c4ddd5421d8549f0abd309162cafd3b1
                    usageDays: 45
                    usageDaysState: COMPLETE
              - owner:
                  name: Alison Ferguso
                  id: 5168015d32f890ca15812c9180835d2e
                  type: IDENTITY
                  email: alison.ferguso@identitysoon.com
                sourceId: 78ca6be511cb41fbb86dba2fcca7780c
                dataAccess:
                  policies:
                  - value: GDPR-20
                  - value: GDPR-20
                  categories:
                  - matchCount: 10
                    value: email-7
                  - matchCount: 10
                    value: email-7
                  impactScore:
                    value: Medium
                hasPermissions: false
                attributeValue: CN=entitlement.bbb7c650
                containsDataAccess: true
                description: Gives read/write access to the company database
                isPermission: false
                revocable: true
                privileged: false
                sourceType: Active Directory - Direct
                name: CN=entitlement.bbb7c650
                attributeName: memberOf
                sourceSchemaObjectType: groups
                id: 2c918085718230600171993742c63558
                sourceName: ODS-AD-Source
                cloudGoverned: false
                account:
                  owner:
                    displayName: Alison Ferguson
                    id: 2c9180857182305e0171993737eb29e8
                    type: IDENTITY
                  created: 2020-04-20T20:11:05.067Z
                  name: Alison Ferguso
                  modified: 2020-05-20T18:57:16.987Z
                  description: Account for Read/write to the company database
                  disabled: false
                  governanceGroupId: 2c9180857182305e0171993737eb29e6
                  id: 2c9180857182305e0171993737eb29e6
                  locked: false
                  type: IDENTITY
                  nativeIdentity: CN=Alison Ferguso
                  activityInsights:
                    accountID: c4ddd5421d8549f0abd309162cafd3b1
                    usageDays: 45
                    usageDaysState: COMPLETE
              endDate: 2021-12-25T00:00:00Z
              created: 2021-01-01T22:32:58.104Z
              name: Employee-database-read-write
              description: Collection of entitlements to read/write the employee database
              modified: 2021-02-01T22:32:58.104Z
              id: 2c91808a7190d06e01719938fcd20792
              cloudGoverned: false
            - privileged: false
              owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              entitlements:
              - owner:
                  name: Alison Ferguso
                  id: 5168015d32f890ca15812c9180835d2e
                  type: IDENTITY
                  email: alison.ferguso@identitysoon.com
                sourceId: 78ca6be511cb41fbb86dba2fcca7780c
                dataAccess:
                  policies:
                  - value: GDPR-20
                  - value: GDPR-20
                  categories:
                  - matchCount: 10
                    value: email-7
                  - matchCount: 10
                    value: email-7
                  impactScore:
                    value: Medium
                hasPermissions: false
                attributeValue: CN=entitlement.bbb7c650
                containsDataAccess: true
                description: Gives read/write access to the company database
                isPermission: false
                revocable: true
                privileged: false
                sourceType: Active Directory - Direct
                name: CN=entitlement.bbb7c650
                attributeName: memberOf
                sourceSchemaObjectType: groups
                id: 2c918085718230600171993742c63558
                sourceName: ODS-AD-Source
                cloudGoverned: false
                account:
                  owner:
                    displayName: Alison Ferguson
                    id: 2c9180857182305e0171993737eb29e8
                    type: IDENTITY
                  created: 2020-04-20T20:11:05.067Z
                  name: Alison Ferguso
                  modified: 2020-05-20T18:57:16.987Z
                  description: Account for Read/write to the company database
                  disabled: false
                  governanceGroupId: 2c9180857182305e0171993737eb29e6
                  id: 2c9180857182305e0171993737eb29e6
                  locked: false
                  type: IDENTITY
                  nativeIdentity: CN=Alison Ferguso
                  activityInsights:
                    accountID: c4ddd5421d8549f0abd309162cafd3b1
                    usageDays: 45
                    usageDaysState: COMPLETE
              - owner:
                  name: Alison Ferguso
                  id: 5168015d32f890ca15812c9180835d2e
                  type: IDENTITY
                  email: alison.ferguso@identitysoon.com
                sourceId: 78ca6be511cb41fbb86dba2fcca7780c
                dataAccess:
                  policies:
                  - value: GDPR-20
                  - value: GDPR-20
                  categories:
                  - matchCount: 10
                    value: email-7
                  - matchCount: 10
                    value: email-7
                  impactScore:
                    value: Medium
                hasPermissions: false
                attributeValue: CN=entitlement.bbb7c650
                containsDataAccess: true
                description: Gives read/write access to the company database
                isPermission: false
                revocable: true
                privileged: false
                sourceType: Active Directory - Direct
                name: CN=entitlement.bbb7c650
                attributeName: memberOf
                sourceSchemaObjectType: groups
                id: 2c918085718230600171993742c63558
                sourceName: ODS-AD-Source
                cloudGoverned: false
                account:
                  owner:
                    displayName: Alison Ferguson
                    id: 2c9180857182305e0171993737eb29e8
                    type: IDENTITY
                  created: 2020-04-20T20:11:05.067Z
                  name: Alison Ferguso
                  modified: 2020-05-20T18:57:16.987Z
                  description: Account for Read/write to the company database
                  disabled: false
                  governanceGroupId: 2c9180857182305e0171993737eb29e6
                  id: 2c9180857182305e0171993737eb29e6
                  locked: false
                  type: IDENTITY
                  nativeIdentity: CN=Alison Ferguso
                  activityInsights:
                    accountID: c4ddd5421d8549f0abd309162cafd3b1
                    usageDays: 45
                    usageDaysState: COMPLETE
              endDate: 2021-12-25T00:00:00Z
              created: 2021-01-01T22:32:58.104Z
              name: Employee-database-read-write
              description: Collection of entitlements to read/write the employee database
              modified: 2021-02-01T22:32:58.104Z
              id: 2c91808a7190d06e01719938fcd20792
              cloudGoverned: false
            name: Accounting-Employees
            description: Role for members of the accounting department with the necessary
              Access Profiles
            id: 2c91808a7190d06e0171993907fd0794
            revocable: false
          entitlement:
            owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            sourceId: 78ca6be511cb41fbb86dba2fcca7780c
            dataAccess:
              policies:
              - value: GDPR-20
              - value: GDPR-20
              categories:
              - matchCount: 10
                value: email-7
              - matchCount: 10
                value: email-7
              impactScore:
                value: Medium
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            containsDataAccess: true
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              owner:
                displayName: Alison Ferguson
                id: 2c9180857182305e0171993737eb29e8
                type: IDENTITY
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              description: Account for Read/write to the company database
              disabled: false
              governanceGroupId: 2c9180857182305e0171993737eb29e6
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
              activityInsights:
                accountID: c4ddd5421d8549f0abd309162cafd3b1
                usageDays: 45
                usageDaysState: COMPLETE
          accessProfile:
            privileged: false
            owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            entitlements:
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              sourceId: 78ca6be511cb41fbb86dba2fcca7780c
              dataAccess:
                policies:
                - value: GDPR-20
                - value: GDPR-20
                categories:
                - matchCount: 10
                  value: email-7
                - matchCount: 10
                  value: email-7
                impactScore:
                  value: Medium
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              containsDataAccess: true
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                owner:
                  displayName: Alison Ferguson
                  id: 2c9180857182305e0171993737eb29e8
                  type: IDENTITY
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                description: Account for Read/write to the company database
                disabled: false
                governanceGroupId: 2c9180857182305e0171993737eb29e6
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
                activityInsights:
                  accountID: c4ddd5421d8549f0abd309162cafd3b1
                  usageDays: 45
                  usageDaysState: COMPLETE
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              sourceId: 78ca6be511cb41fbb86dba2fcca7780c
              dataAccess:
                policies:
                - value: GDPR-20
                - value: GDPR-20
                categories:
                - matchCount: 10
                  value: email-7
                - matchCount: 10
                  value: email-7
                impactScore:
                  value: Medium
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              containsDataAccess: true
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                owner:
                  displayName: Alison Ferguson
                  id: 2c9180857182305e0171993737eb29e8
                  type: IDENTITY
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                description: Account for Read/write to the company database
                disabled: false
                governanceGroupId: 2c9180857182305e0171993737eb29e6
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
                activityInsights:
                  accountID: c4ddd5421d8549f0abd309162cafd3b1
                  usageDays: 45
                  usageDaysState: COMPLETE
            endDate: 2021-12-25T00:00:00Z
            created: 2021-01-01T22:32:58.104Z
            name: Employee-database-read-write
            description: Collection of entitlements to read/write the employee database
            modified: 2021-02-01T22:32:58.104Z
            id: 2c91808a7190d06e01719938fcd20792
            cloudGoverned: false
        id: ef38f94347e94562b5bb8424a56397d8
        completed: false
      properties:
        accessSummary:
          $ref: '#/components/schemas/AccessSummary'
        identitySummary:
          $ref: '#/components/schemas/CertificationIdentitySummary'
        id:
          description: The review item's id
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        completed:
          description: Whether the review item is complete
          example: false
          type: boolean
        newAccess:
          description: Indicates whether the review item is for new access to a source
          example: false
          type: boolean
        decision:
          $ref: '#/components/schemas/CertificationDecision'
        comments:
          description: Comments for this review item
          example: This user still needs access to this source
          nullable: true
          type: string
      type: object
    ReviewDecision:
      example:
        comments: This user no longer needs access to this source
        decision: APPROVE
        proposedEndDate: 2017-07-11T18:45:37.098Z
        recommendation:
          reasons:
          - Reason 1
          - Reason 2
          recommendation: recommendation
          timestamp: 2020-06-01T13:49:37.385Z
        id: ef38f94347e94562b5bb8424a56397d8
        bulk: true
      properties:
        id:
          description: The id of the review decision
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        decision:
          $ref: '#/components/schemas/CertificationDecision'
        proposedEndDate:
          description: The date at which a user's access should be taken away. Should
            only be set for `REVOKE` decisions.
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        bulk:
          description: Indicates whether decision should be marked as part of a larger
            bulk decision
          example: true
          type: boolean
        recommendation:
          $ref: '#/components/schemas/ReviewRecommendation'
        comments:
          description: Comments recorded when the decision was made
          example: This user no longer needs access to this source
          type: string
      required:
      - bulk
      - decision
      - id
      type: object
    ReviewReassign:
      example:
        reason: reassigned for some reason
        reassignTo: ef38f94347e94562b5bb8424a56397d8
        reassign:
        - id: ef38f94347e94562b5bb8424a56397d8
          type: ITEM
        - id: ef38f94347e94562b5bb8424a56397d8
          type: ITEM
      properties:
        reassign:
          items:
            $ref: '#/components/schemas/ReassignReference'
          type: array
        reassignTo:
          description: The ID of the identity to which the certification is reassigned
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        reason:
          description: The reason comment for why the reassign was made
          example: reassigned for some reason
          type: string
      required:
      - reason
      - reassign
      - reassignTo
      type: object
    IdentityCertDecisionSummary:
      example:
        entitlementDecisionsMade: 3
        rolesApproved: 2
        roleDecisionsTotal: 4
        accessProfilesRevoked: 2
        accessProfileDecisionsTotal: 10
        accountDecisionsTotal: 8
        rolesRevoked: 0
        roleDecisionsMade: 2
        accountsApproved: 1
        entitlementsApproved: 2
        accessProfilesApproved: 3
        accessProfileDecisionsMade: 5
        accountDecisionsMade: 4
        entitlementDecisionsTotal: 6
        accountsRevoked: 3
        entitlementsRevoked: 1
      properties:
        entitlementDecisionsMade:
          description: Number of entitlement decisions that have been made
          example: 3
          format: int32
          type: integer
        accessProfileDecisionsMade:
          description: Number of access profile decisions that have been made
          example: 5
          format: int32
          type: integer
        roleDecisionsMade:
          description: Number of role decisions that have been made
          example: 2
          format: int32
          type: integer
        accountDecisionsMade:
          description: Number of account decisions that have been made
          example: 4
          format: int32
          type: integer
        entitlementDecisionsTotal:
          description: "The total number of entitlement decisions on the certification,\
            \ both complete and incomplete"
          example: 6
          format: int32
          type: integer
        accessProfileDecisionsTotal:
          description: "The total number of access profile decisions on the certification,\
            \ both complete and incomplete"
          example: 10
          format: int32
          type: integer
        roleDecisionsTotal:
          description: "The total number of role decisions on the certification, both\
            \ complete and incomplete"
          example: 4
          format: int32
          type: integer
        accountDecisionsTotal:
          description: "The total number of account decisions on the certification,\
            \ both complete and incomplete"
          example: 8
          format: int32
          type: integer
        entitlementsApproved:
          description: The number of entitlement decisions that have been made which
            were approved
          example: 2
          format: int32
          type: integer
        entitlementsRevoked:
          description: The number of entitlement decisions that have been made which
            were revoked
          example: 1
          format: int32
          type: integer
        accessProfilesApproved:
          description: The number of access profile decisions that have been made
            which were approved
          example: 3
          format: int32
          type: integer
        accessProfilesRevoked:
          description: The number of access profile decisions that have been made
            which were revoked
          example: 2
          format: int32
          type: integer
        rolesApproved:
          description: The number of role decisions that have been made which were
            approved
          example: 2
          format: int32
          type: integer
        rolesRevoked:
          description: The number of role decisions that have been made which were
            revoked
          example: 0
          format: int32
          type: integer
        accountsApproved:
          description: The number of account decisions that have been made which were
            approved
          example: 1
          format: int32
          type: integer
        accountsRevoked:
          description: The number of account decisions that have been made which were
            revoked
          example: 3
          format: int32
          type: integer
      type: object
    CertificationIdentitySummary:
      example:
        identityId: 2c9180857182306001719937377a33de
        name: Alison Ferguso
        id: 2c91808772a504f50172a9540e501ba7
        completed: true
      properties:
        id:
          description: The ID of the identity summary
          example: 2c91808772a504f50172a9540e501ba7
          type: string
        name:
          description: Name of the linked identity
          example: Alison Ferguso
          type: string
        identityId:
          description: The ID of the identity being certified
          example: 2c9180857182306001719937377a33de
          type: string
        completed:
          description: Indicates whether the review items for the linked identity's
            certification have been completed
          example: true
          type: boolean
      type: object
    AccessSummary:
      description: An object holding the access that is being reviewed
      example:
        access:
          name: Entitlement for Company Database
          id: 2c9180867160846801719932c5153fb7
          type: IDENTITY
        role:
          privileged: false
          owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          entitlements:
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            sourceId: 78ca6be511cb41fbb86dba2fcca7780c
            dataAccess:
              policies:
              - value: GDPR-20
              - value: GDPR-20
              categories:
              - matchCount: 10
                value: email-7
              - matchCount: 10
                value: email-7
              impactScore:
                value: Medium
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            containsDataAccess: true
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              owner:
                displayName: Alison Ferguson
                id: 2c9180857182305e0171993737eb29e8
                type: IDENTITY
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              description: Account for Read/write to the company database
              disabled: false
              governanceGroupId: 2c9180857182305e0171993737eb29e6
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
              activityInsights:
                accountID: c4ddd5421d8549f0abd309162cafd3b1
                usageDays: 45
                usageDaysState: COMPLETE
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            sourceId: 78ca6be511cb41fbb86dba2fcca7780c
            dataAccess:
              policies:
              - value: GDPR-20
              - value: GDPR-20
              categories:
              - matchCount: 10
                value: email-7
              - matchCount: 10
                value: email-7
              impactScore:
                value: Medium
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            containsDataAccess: true
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              owner:
                displayName: Alison Ferguson
                id: 2c9180857182305e0171993737eb29e8
                type: IDENTITY
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              description: Account for Read/write to the company database
              disabled: false
              governanceGroupId: 2c9180857182305e0171993737eb29e6
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
              activityInsights:
                accountID: c4ddd5421d8549f0abd309162cafd3b1
                usageDays: 45
                usageDaysState: COMPLETE
          endDate: 2021-12-25T00:00:00Z
          accessProfiles:
          - privileged: false
            owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            entitlements:
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              sourceId: 78ca6be511cb41fbb86dba2fcca7780c
              dataAccess:
                policies:
                - value: GDPR-20
                - value: GDPR-20
                categories:
                - matchCount: 10
                  value: email-7
                - matchCount: 10
                  value: email-7
                impactScore:
                  value: Medium
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              containsDataAccess: true
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                owner:
                  displayName: Alison Ferguson
                  id: 2c9180857182305e0171993737eb29e8
                  type: IDENTITY
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                description: Account for Read/write to the company database
                disabled: false
                governanceGroupId: 2c9180857182305e0171993737eb29e6
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
                activityInsights:
                  accountID: c4ddd5421d8549f0abd309162cafd3b1
                  usageDays: 45
                  usageDaysState: COMPLETE
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              sourceId: 78ca6be511cb41fbb86dba2fcca7780c
              dataAccess:
                policies:
                - value: GDPR-20
                - value: GDPR-20
                categories:
                - matchCount: 10
                  value: email-7
                - matchCount: 10
                  value: email-7
                impactScore:
                  value: Medium
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              containsDataAccess: true
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                owner:
                  displayName: Alison Ferguson
                  id: 2c9180857182305e0171993737eb29e8
                  type: IDENTITY
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                description: Account for Read/write to the company database
                disabled: false
                governanceGroupId: 2c9180857182305e0171993737eb29e6
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
                activityInsights:
                  accountID: c4ddd5421d8549f0abd309162cafd3b1
                  usageDays: 45
                  usageDaysState: COMPLETE
            endDate: 2021-12-25T00:00:00Z
            created: 2021-01-01T22:32:58.104Z
            name: Employee-database-read-write
            description: Collection of entitlements to read/write the employee database
            modified: 2021-02-01T22:32:58.104Z
            id: 2c91808a7190d06e01719938fcd20792
            cloudGoverned: false
          - privileged: false
            owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            entitlements:
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              sourceId: 78ca6be511cb41fbb86dba2fcca7780c
              dataAccess:
                policies:
                - value: GDPR-20
                - value: GDPR-20
                categories:
                - matchCount: 10
                  value: email-7
                - matchCount: 10
                  value: email-7
                impactScore:
                  value: Medium
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              containsDataAccess: true
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                owner:
                  displayName: Alison Ferguson
                  id: 2c9180857182305e0171993737eb29e8
                  type: IDENTITY
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                description: Account for Read/write to the company database
                disabled: false
                governanceGroupId: 2c9180857182305e0171993737eb29e6
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
                activityInsights:
                  accountID: c4ddd5421d8549f0abd309162cafd3b1
                  usageDays: 45
                  usageDaysState: COMPLETE
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              sourceId: 78ca6be511cb41fbb86dba2fcca7780c
              dataAccess:
                policies:
                - value: GDPR-20
                - value: GDPR-20
                categories:
                - matchCount: 10
                  value: email-7
                - matchCount: 10
                  value: email-7
                impactScore:
                  value: Medium
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              containsDataAccess: true
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                owner:
                  displayName: Alison Ferguson
                  id: 2c9180857182305e0171993737eb29e8
                  type: IDENTITY
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                description: Account for Read/write to the company database
                disabled: false
                governanceGroupId: 2c9180857182305e0171993737eb29e6
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
                activityInsights:
                  accountID: c4ddd5421d8549f0abd309162cafd3b1
                  usageDays: 45
                  usageDaysState: COMPLETE
            endDate: 2021-12-25T00:00:00Z
            created: 2021-01-01T22:32:58.104Z
            name: Employee-database-read-write
            description: Collection of entitlements to read/write the employee database
            modified: 2021-02-01T22:32:58.104Z
            id: 2c91808a7190d06e01719938fcd20792
            cloudGoverned: false
          name: Accounting-Employees
          description: Role for members of the accounting department with the necessary
            Access Profiles
          id: 2c91808a7190d06e0171993907fd0794
          revocable: false
        entitlement:
          owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          sourceId: 78ca6be511cb41fbb86dba2fcca7780c
          dataAccess:
            policies:
            - value: GDPR-20
            - value: GDPR-20
            categories:
            - matchCount: 10
              value: email-7
            - matchCount: 10
              value: email-7
            impactScore:
              value: Medium
          hasPermissions: false
          attributeValue: CN=entitlement.bbb7c650
          containsDataAccess: true
          description: Gives read/write access to the company database
          isPermission: false
          revocable: true
          privileged: false
          sourceType: Active Directory - Direct
          name: CN=entitlement.bbb7c650
          attributeName: memberOf
          sourceSchemaObjectType: groups
          id: 2c918085718230600171993742c63558
          sourceName: ODS-AD-Source
          cloudGoverned: false
          account:
            owner:
              displayName: Alison Ferguson
              id: 2c9180857182305e0171993737eb29e8
              type: IDENTITY
            created: 2020-04-20T20:11:05.067Z
            name: Alison Ferguso
            modified: 2020-05-20T18:57:16.987Z
            description: Account for Read/write to the company database
            disabled: false
            governanceGroupId: 2c9180857182305e0171993737eb29e6
            id: 2c9180857182305e0171993737eb29e6
            locked: false
            type: IDENTITY
            nativeIdentity: CN=Alison Ferguso
            activityInsights:
              accountID: c4ddd5421d8549f0abd309162cafd3b1
              usageDays: 45
              usageDaysState: COMPLETE
        accessProfile:
          privileged: false
          owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          entitlements:
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            sourceId: 78ca6be511cb41fbb86dba2fcca7780c
            dataAccess:
              policies:
              - value: GDPR-20
              - value: GDPR-20
              categories:
              - matchCount: 10
                value: email-7
              - matchCount: 10
                value: email-7
              impactScore:
                value: Medium
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            containsDataAccess: true
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              owner:
                displayName: Alison Ferguson
                id: 2c9180857182305e0171993737eb29e8
                type: IDENTITY
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              description: Account for Read/write to the company database
              disabled: false
              governanceGroupId: 2c9180857182305e0171993737eb29e6
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
              activityInsights:
                accountID: c4ddd5421d8549f0abd309162cafd3b1
                usageDays: 45
                usageDaysState: COMPLETE
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            sourceId: 78ca6be511cb41fbb86dba2fcca7780c
            dataAccess:
              policies:
              - value: GDPR-20
              - value: GDPR-20
              categories:
              - matchCount: 10
                value: email-7
              - matchCount: 10
                value: email-7
              impactScore:
                value: Medium
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            containsDataAccess: true
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              owner:
                displayName: Alison Ferguson
                id: 2c9180857182305e0171993737eb29e8
                type: IDENTITY
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              description: Account for Read/write to the company database
              disabled: false
              governanceGroupId: 2c9180857182305e0171993737eb29e6
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
              activityInsights:
                accountID: c4ddd5421d8549f0abd309162cafd3b1
                usageDays: 45
                usageDaysState: COMPLETE
          endDate: 2021-12-25T00:00:00Z
          created: 2021-01-01T22:32:58.104Z
          name: Employee-database-read-write
          description: Collection of entitlements to read/write the employee database
          modified: 2021-02-01T22:32:58.104Z
          id: 2c91808a7190d06e01719938fcd20792
          cloudGoverned: false
      properties:
        access:
          $ref: '#/components/schemas/AccessSummary_access'
        entitlement:
          $ref: '#/components/schemas/ReviewableEntitlement'
        accessProfile:
          $ref: '#/components/schemas/ReviewableAccessProfile'
        role:
          $ref: '#/components/schemas/ReviewableRole'
      type: object
    PermissionDto:
      description: "Simplified DTO for the Permission objects stored in SailPoint's\
        \ database. The data is aggregated from customer systems and is free-form,\
        \ so its appearance can vary largely between different clients/customers."
      example:
        rights:
        - SELECT
        - SELECT
        target: SYS.GV_$TRANSACTION
      properties:
        rights:
          description: All the rights (e.g. actions) that this permission allows on
            the target
          items:
            example: SELECT
            type: string
          readOnly: true
          type: array
        target:
          description: The target the permission would grants rights on.
          example: SYS.GV_$TRANSACTION
          readOnly: true
          type: string
      type: object
    ObjectMappingResponse:
      example:
        created: 2024-03-19T23:18:53.732Z
        targetValue: My New Governance Group Name
        modified: 2024-03-19T23:18:53.732Z
        jsonPath: $.name
        sourceValue: My Governance Group Name
        objectMappingId: 3d6e0144-963f-4bd6-8d8d-d77b4e507ce4
        enabled: false
        objectType: IDENTITY
      properties:
        objectMappingId:
          description: Id of the object mapping
          example: 3d6e0144-963f-4bd6-8d8d-d77b4e507ce4
          type: string
        objectType:
          description: Type of the object the mapping value applies to
          enum:
          - ACCESS_PROFILE
          - ACCESS_REQUEST_CONFIG
          - ATTR_SYNC_SOURCE_CONFIG
          - AUTH_ORG
          - CAMPAIGN_FILTER
          - ENTITLEMENT
          - FORM_DEFINITION
          - GOVERNANCE_GROUP
          - IDENTITY
          - IDENTITY_OBJECT_CONFIG
          - IDENTITY_PROFILE
          - LIFECYCLE_STATE
          - NOTIFICATION_TEMPLATE
          - PASSWORD_POLICY
          - PASSWORD_SYNC_GROUP
          - PUBLIC_IDENTITIES_CONFIG
          - ROLE
          - RULE
          - SEGMENT
          - SERVICE_DESK_INTEGRATION
          - SOD_POLICY
          - SOURCE
          - TAG
          - TRANSFORM
          - TRIGGER_SUBSCRIPTION
          - WORKFLOW
          example: IDENTITY
          type: string
        jsonPath:
          description: JSONPath expression denoting the path within the object where
            the mapping value should be applied
          example: $.name
          type: string
        sourceValue:
          description: Original value at the jsonPath location within the object
          example: My Governance Group Name
          type: string
        targetValue:
          description: Value to be assigned at the jsonPath location within the object
          example: My New Governance Group Name
          type: string
        enabled:
          default: false
          description: Whether or not this object mapping is enabled
          example: false
          type: boolean
        created:
          description: Object mapping creation timestamp
          example: 2024-03-19T23:18:53.732Z
          type: string
        modified:
          description: Object mapping latest update timestamp
          example: 2024-03-19T23:18:53.732Z
          type: string
      title: Object Mapping Response
      type: object
    ObjectMappingRequest:
      example:
        targetValue: My New Governance Group Name
        jsonPath: $.name
        sourceValue: My Governance Group Name
        enabled: false
        objectType: IDENTITY
      properties:
        objectType:
          description: "Type of the object the mapping value applies to, must be one\
            \ from enum"
          enum:
          - ACCESS_PROFILE
          - ACCESS_REQUEST_CONFIG
          - ATTR_SYNC_SOURCE_CONFIG
          - AUTH_ORG
          - CAMPAIGN_FILTER
          - ENTITLEMENT
          - FORM_DEFINITION
          - GOVERNANCE_GROUP
          - IDENTITY
          - IDENTITY_OBJECT_CONFIG
          - IDENTITY_PROFILE
          - LIFECYCLE_STATE
          - NOTIFICATION_TEMPLATE
          - PASSWORD_POLICY
          - PASSWORD_SYNC_GROUP
          - PUBLIC_IDENTITIES_CONFIG
          - ROLE
          - RULE
          - SEGMENT
          - SERVICE_DESK_INTEGRATION
          - SOD_POLICY
          - SOURCE
          - TAG
          - TRANSFORM
          - TRIGGER_SUBSCRIPTION
          - WORKFLOW
          example: IDENTITY
          type: string
        jsonPath:
          description: JSONPath expression denoting the path within the object where
            the mapping value should be applied
          example: $.name
          type: string
        sourceValue:
          description: Original value at the jsonPath location within the object
          example: My Governance Group Name
          type: string
        targetValue:
          description: Value to be assigned at the jsonPath location within the object
          example: My New Governance Group Name
          type: string
        enabled:
          default: false
          description: Whether or not this object mapping is enabled
          example: false
          type: boolean
      required:
      - jsonPath
      - objectType
      - sourceValue
      - targetValue
      title: Object Mapping Request
      type: object
    ObjectMappingBulkCreateRequest:
      example:
        newObjectsMappings:
        - targetValue: My New Governance Group Name
          jsonPath: $.name
          sourceValue: My Governance Group Name
          enabled: false
          objectType: IDENTITY
        - targetValue: My New Governance Group Name
          jsonPath: $.name
          sourceValue: My Governance Group Name
          enabled: false
          objectType: IDENTITY
      properties:
        newObjectsMappings:
          items:
            $ref: '#/components/schemas/ObjectMappingRequest'
          type: array
      required:
      - newObjectsMappings
      title: Bulk Create Object Mapping Request
      type: object
    ObjectMappingBulkCreateResponse:
      example:
        addedObjects:
        - created: 2024-03-19T23:18:53.732Z
          targetValue: My New Governance Group Name
          modified: 2024-03-19T23:18:53.732Z
          jsonPath: $.name
          sourceValue: My Governance Group Name
          objectMappingId: 3d6e0144-963f-4bd6-8d8d-d77b4e507ce4
          enabled: false
          objectType: IDENTITY
        - created: 2024-03-19T23:18:53.732Z
          targetValue: My New Governance Group Name
          modified: 2024-03-19T23:18:53.732Z
          jsonPath: $.name
          sourceValue: My Governance Group Name
          objectMappingId: 3d6e0144-963f-4bd6-8d8d-d77b4e507ce4
          enabled: false
          objectType: IDENTITY
      properties:
        addedObjects:
          items:
            $ref: '#/components/schemas/ObjectMappingResponse'
          type: array
      title: Bulk Create Object Mapping Response
      type: object
    ObjectMappingBulkPatchRequest:
      example:
        patches:
          "603b1a61-d03d-4ed1-864f-a508fbd1995d":
          - op: replace
            path: /enabled
            value: true
          "00bece34-f50d-4227-8878-76f620b5a971":
          - op: replace
            path: /targetValue
            value: New Target Value
      properties:
        patches:
          additionalProperties:
            items:
              $ref: '#/components/schemas/JsonPatchOperation'
            type: array
          description: Map of id of the object mapping to a JsonPatchOperation describing
            what to patch on that object mapping.
          example:
            "603b1a61-d03d-4ed1-864f-a508fbd1995d":
            - op: replace
              path: /enabled
              value: true
            "00bece34-f50d-4227-8878-76f620b5a971":
            - op: replace
              path: /targetValue
              value: New Target Value
          type: object
      required:
      - patches
      title: Bulk Update Object Mapping Request
      type: object
    ObjectMappingBulkPatchResponse:
      example:
        patchedObjects:
        - created: 2024-03-19T23:18:53.732Z
          targetValue: My New Governance Group Name
          modified: 2024-03-19T23:18:53.732Z
          jsonPath: $.name
          sourceValue: My Governance Group Name
          objectMappingId: 3d6e0144-963f-4bd6-8d8d-d77b4e507ce4
          enabled: false
          objectType: IDENTITY
        - created: 2024-03-19T23:18:53.732Z
          targetValue: My New Governance Group Name
          modified: 2024-03-19T23:18:53.732Z
          jsonPath: $.name
          sourceValue: My Governance Group Name
          objectMappingId: 3d6e0144-963f-4bd6-8d8d-d77b4e507ce4
          enabled: false
          objectType: IDENTITY
      properties:
        patchedObjects:
          items:
            $ref: '#/components/schemas/ObjectMappingResponse'
          type: array
      title: Bulk Update Object Mapping Response
      type: object
    BackupResponse:
      example:
        userCanDelete: false
        totalObjectCount: 10
        created: 2021-05-11T22:23:16Z
        fileExists: true
        completed: 2021-05-11T22:23:16Z
        type: BACKUP
        hydrationStatus: NOT_HYDRATED
        backupType: MANUAL
        jobId: 3469b87d-48ca-439a-868f-2160001da8c1
        requesterName: Requester Name
        name: Backup Name
        options:
          includeTypes:
          - TRIGGER_SUBSCRIPTION
          - TRIGGER_SUBSCRIPTION
          objectOptions:
            TRIGGER_SUBSCRIPTION:
              includedNames:
              - Trigger Subscription name
        modified: 2021-05-11T22:23:16Z
        isPartial: false
        cloudStorageStatus: SYNCED
        tenant: tenant-name
        status: COMPLETE
      properties:
        jobId:
          description: Unique id assigned to this backup.
          example: 3469b87d-48ca-439a-868f-2160001da8c1
          type: string
        status:
          description: Status of the backup.
          enum:
          - NOT_STARTED
          - IN_PROGRESS
          - COMPLETE
          - CANCELLED
          - FAILED
          example: COMPLETE
          type: string
        type:
          description: "Type of the job, will always be BACKUP for this type of job."
          enum:
          - BACKUP
          example: BACKUP
          type: string
        tenant:
          description: The name of the tenant performing the upload
          example: tenant-name
          type: string
        requesterName:
          description: The name of the requester.
          example: Requester Name
          type: string
        fileExists:
          default: true
          description: Whether or not a file was created and stored for this backup.
          example: true
          type: boolean
        created:
          description: The time the job was started.
          example: 2021-05-11T22:23:16Z
          format: date-time
          type: string
        modified:
          description: The time of the last update to the job.
          example: 2021-05-11T22:23:16Z
          format: date-time
          type: string
        completed:
          description: The time the job was completed.
          example: 2021-05-11T22:23:16Z
          format: date-time
          type: string
        name:
          description: The name assigned to the upload file in the request body.
          example: Backup Name
          type: string
        userCanDelete:
          default: true
          description: Whether this backup can be deleted by a regular user.
          example: false
          type: boolean
        isPartial:
          default: false
          description: Whether this backup contains all supported object types or
            only some of them.
          example: false
          type: boolean
        backupType:
          description: |-
            Denotes how this backup was created.
            - MANUAL - The backup was created by a user.
            - AUTOMATED - The backup was created by devops.
            - AUTOMATED_DRAFT - The backup was created during a draft process.
            - UPLOADED - The backup was created by uploading an existing configuration file.
          enum:
          - UPLOADED
          - AUTOMATED
          - MANUAL
          example: MANUAL
          type: string
        options:
          $ref: '#/components/schemas/BackupOptions'
        hydrationStatus:
          description: Whether the object details of this backup are ready.
          enum:
          - HYDRATED
          - NOT_HYDRATED
          example: NOT_HYDRATED
          type: string
        totalObjectCount:
          description: Number of objects contained in this backup.
          example: 10
          format: int64
          type: integer
        cloudStorageStatus:
          description: Whether this backup has been transferred to a customer storage
            location.
          enum:
          - SYNCED
          - NOT_SYNCED
          - SYNC_FAILED
          example: SYNCED
          type: string
      type: object
    ConnectorDetail:
      example:
        applicationXml: |
          <?xml version='1.0' encoding='UTF-8'?>
          <!DOCTYPE Application PUBLIC "sailpoint.dtd" "sailpoint.dtd">
          <Application connector="sailpoint.connector.OpenConnectorAdapter" name="custom Atlassian Suite - Cloud" type="custom Atlassian Suite - Cloud"/>
        uploadedFiles:
        - pod/org/connectorFiles/testconnector/test1.jar
        translationProperties:
          de: |-
            # Copyright (C) 2024 SailPoint Technologies, Inc.  All rights reserved.
            # DO NOT EDIT. This file is generated by "sailpointTranslate" command.
            menuLabel_ConnectionSettings=Verbindungseinstellungen
            menuLabel_AggregationSettings=Aggregationseinstellungen
            sectionLabel_AuthenticationSettings=Verbindungseinstellungen
            sectionLabel_AggregationSettings=Aggregationseinstellungen
            sectionInfo_AuthenticationSettings=Konfigurieren Sie eine direkte Verbindung zwischen der Quelle Delinea Secret Server On-Premise und IdentityNow.<br><br>Geben Sie bei <strong>Zeit\u00fcberschreitung bei Verbindung</strong> die maximal erlaubte Zeitdauer (in Minuten) f\u00fcr die Verbindung von IdentityNow mit der Quelle ein.<br><br>Geben Sie die <strong>Host-URL</strong> der Delinea-SCIM-Serverquelle ein.<br><br>Geben Sie den <strong>API-Token</strong> der Quelle zur Authentifizierung ein.
            sectionInfo_AggregationSettings=Geben Sie die Einstellungen f\u00fcr Ihre Aggregation an.<br><br>Geben Sie in das Feld  <strong>Seitengr\u00f6\u00dfe</strong> die Anzahl an Kontoeintr\u00e4gen ein, die auf einer einzelnen Seite aggregiert werden sollen, wenn gro\u00dfe Datens\u00e4tze durchlaufen werden.<br>\n<br>Geben Sie im <strong>Kontofilter</strong> die Bedingungen f\u00fcr den Kontofilter an. Beispiel: userName sw "S"<br><br>Geben Sie im <strong>Gruppenfilter</strong> die Gruppenfilterbedingungen an. Beispiel: displayName sw "S".
            placeHolder_accAggregation=userName sw "S"
            placeHolder_grpAggregation=displayName sw "S"
            placeHolder_host=https://{Delinea_SCIM_Server_host}/v2
            docLinkLabel_AuthenticationSettings=Mehr \u00fcber Verbindungseinstellungen
            docLinkLabel_Filters=Mehr \u00fcber Konto- und Gruppenfilter
            HostURL=Host-URL
            ConnectionTimeout=Zeit\u00fcberschreitung bei Verbindung
            API_TOKEN=API-Token
            JSONPathMapping=JSON-Path-Attribut-Mapping
            FilterConditionForAccounts=Kontofilter
            FilterConditionForGroups=Gruppenfilter
            Page_Size=Seitengr\u00f6\u00dfe
            SchemaAttribute=Schema-Attribut
            JSONpath=JSON-Pfad
            ShortDesc=Das Integrationsmodul IdentityNow f\u00fcr Delinea Secret Server On-Premise bietet die M\u00f6glichkeit einer tiefen Governance f\u00fcr Konten und Gruppen. Es unterst\u00fctzt au\u00dferdem das End-to-End-Lebenszyklus-Management.
        directConnect: true
        className: class name
        type: ServiceNow
        fileUpload: true
        sourceConfigFrom: sp-connect
        sourceConfig: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"\
          ?><!-- Copyright (C) 2023 SailPoint Technologies, Inc.  All rights reserved.\
          \ --><Form xmlns=\"http://www.sailpoint.com/xsd/sailpoint_form_2_0.xsd\"\
          \ connectorName=\"custom Atlassian Suite - Cloud\" directConnect=\"true\"\
          \ fileUpload=\"true\" name=\"Custom Atlassian Suite - Cloud\" status=\"\
          released\" type=\"SourceConfig\">\n    <BaseConfig>\n        <Field maxFiles=\"\
          10\" maxSize=\"300\" name=\"fileUpload\" supportedExtensions=\"jar\" type=\"\
          fileupload\" validateJSON=\"false\"/>\n    </BaseConfig>\n  \n\n \n</Form>"
        name: name
        correlationConfigXml: "<?xml version='1.0' encoding='UTF-8'?>\n<!-- Copyright\
          \ (C) 2021 SailPoint Technologies, Inc.  All rights reserved. -->\n\n<!DOCTYPE\
          \ CorrelationConfig PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">\n\n<CorrelationConfig\
          \ name=\"custom Atlassian Suite - Cloud Account Correlation Config\">\n\t\
          <AttributeAssignments>\n\t\t<Filter operation=\"EQ\" property=\"email\"\
          \ value=\"mail\"/>\n\t\t<Filter operation=\"EQ\" property=\"empId\" value=\"\
          employeeNumber\"/>\n\t\t<Filter operation=\"EQ\" property=\"displayName\"\
          \ value=\"cn\"/>\n\t</AttributeAssignments>\n</CorrelationConfig>\n"
        sourceConfigXml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"\
          ?><!-- Copyright (C) 2023 SailPoint Technologies, Inc.  All rights reserved.\
          \ --><Form xmlns=\"http://www.sailpoint.com/xsd/sailpoint_form_2_0.xsd\"\
          \ connectorName=\"custom Atlassian Suite - Cloud\" directConnect=\"true\"\
          \ fileUpload=\"true\" name=\"Custom Atlassian Suite - Cloud\" status=\"\
          released\" type=\"SourceConfig\">\n    <BaseConfig>\n        <Field maxFiles=\"\
          10\" maxSize=\"300\" name=\"fileUpload\" supportedExtensions=\"jar\" type=\"\
          fileupload\" validateJSON=\"false\"/>\n    </BaseConfig>\n  \n\n \n</Form>"
        scriptName: servicenow
        s3Location: custom-connector/scriptname
        connectorMetadata:
          supportedUI: EXTJS
          platform: ccg
          shortDesc: connector description
        status: RELEASED
      properties:
        name:
          description: The connector name
          example: name
          type: string
        type:
          description: The connector type
          example: ServiceNow
          type: string
        className:
          description: The connector class name
          example: class name
          type: string
        scriptName:
          description: The connector script name
          example: servicenow
          type: string
        applicationXml:
          description: The connector application xml
          example: |
            <?xml version='1.0' encoding='UTF-8'?>
            <!DOCTYPE Application PUBLIC "sailpoint.dtd" "sailpoint.dtd">
            <Application connector="sailpoint.connector.OpenConnectorAdapter" name="custom Atlassian Suite - Cloud" type="custom Atlassian Suite - Cloud"/>
          type: string
        correlationConfigXml:
          description: The connector correlation config xml
          example: "<?xml version='1.0' encoding='UTF-8'?>\n<!-- Copyright (C) 2021\
            \ SailPoint Technologies, Inc.  All rights reserved. -->\n\n<!DOCTYPE\
            \ CorrelationConfig PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">\n\n<CorrelationConfig\
            \ name=\"custom Atlassian Suite - Cloud Account Correlation Config\">\n\
            \t<AttributeAssignments>\n\t\t<Filter operation=\"EQ\" property=\"email\"\
            \ value=\"mail\"/>\n\t\t<Filter operation=\"EQ\" property=\"empId\" value=\"\
            employeeNumber\"/>\n\t\t<Filter operation=\"EQ\" property=\"displayName\"\
            \ value=\"cn\"/>\n\t</AttributeAssignments>\n</CorrelationConfig>\n"
          type: string
        sourceConfigXml:
          description: The connector source config xml
          example: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!--\
            \ Copyright (C) 2023 SailPoint Technologies, Inc.  All rights reserved.\
            \ --><Form xmlns=\"http://www.sailpoint.com/xsd/sailpoint_form_2_0.xsd\"\
            \ connectorName=\"custom Atlassian Suite - Cloud\" directConnect=\"true\"\
            \ fileUpload=\"true\" name=\"Custom Atlassian Suite - Cloud\" status=\"\
            released\" type=\"SourceConfig\">\n    <BaseConfig>\n        <Field maxFiles=\"\
            10\" maxSize=\"300\" name=\"fileUpload\" supportedExtensions=\"jar\" type=\"\
            fileupload\" validateJSON=\"false\"/>\n    </BaseConfig>\n  \n\n \n</Form>"
          type: string
        sourceConfig:
          description: The connector source config
          example: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!--\
            \ Copyright (C) 2023 SailPoint Technologies, Inc.  All rights reserved.\
            \ --><Form xmlns=\"http://www.sailpoint.com/xsd/sailpoint_form_2_0.xsd\"\
            \ connectorName=\"custom Atlassian Suite - Cloud\" directConnect=\"true\"\
            \ fileUpload=\"true\" name=\"Custom Atlassian Suite - Cloud\" status=\"\
            released\" type=\"SourceConfig\">\n    <BaseConfig>\n        <Field maxFiles=\"\
            10\" maxSize=\"300\" name=\"fileUpload\" supportedExtensions=\"jar\" type=\"\
            fileupload\" validateJSON=\"false\"/>\n    </BaseConfig>\n  \n\n \n</Form>"
          type: string
        sourceConfigFrom:
          description: The connector source config origin
          example: sp-connect
          type: string
        s3Location:
          description: storage path key for this connector
          example: custom-connector/scriptname
          type: string
        uploadedFiles:
          description: The list of uploaded files supported by the connector. If there
            was any executable files uploaded to thee connector. Typically this be
            empty as the executable be uploaded at source creation.
          example:
          - pod/org/connectorFiles/testconnector/test1.jar
          items:
            type: string
          nullable: true
          type: array
        fileUpload:
          default: false
          description: true if the source is file upload
          example: true
          type: boolean
        directConnect:
          default: false
          description: true if the source is a direct connect source
          example: true
          type: boolean
        translationProperties:
          additionalProperties: true
          description: A map containing translation attributes by loacale key
          example:
            de: |-
              # Copyright (C) 2024 SailPoint Technologies, Inc.  All rights reserved.
              # DO NOT EDIT. This file is generated by "sailpointTranslate" command.
              menuLabel_ConnectionSettings=Verbindungseinstellungen
              menuLabel_AggregationSettings=Aggregationseinstellungen
              sectionLabel_AuthenticationSettings=Verbindungseinstellungen
              sectionLabel_AggregationSettings=Aggregationseinstellungen
              sectionInfo_AuthenticationSettings=Konfigurieren Sie eine direkte Verbindung zwischen der Quelle Delinea Secret Server On-Premise und IdentityNow.<br><br>Geben Sie bei <strong>Zeit\u00fcberschreitung bei Verbindung</strong> die maximal erlaubte Zeitdauer (in Minuten) f\u00fcr die Verbindung von IdentityNow mit der Quelle ein.<br><br>Geben Sie die <strong>Host-URL</strong> der Delinea-SCIM-Serverquelle ein.<br><br>Geben Sie den <strong>API-Token</strong> der Quelle zur Authentifizierung ein.
              sectionInfo_AggregationSettings=Geben Sie die Einstellungen f\u00fcr Ihre Aggregation an.<br><br>Geben Sie in das Feld  <strong>Seitengr\u00f6\u00dfe</strong> die Anzahl an Kontoeintr\u00e4gen ein, die auf einer einzelnen Seite aggregiert werden sollen, wenn gro\u00dfe Datens\u00e4tze durchlaufen werden.<br>\n<br>Geben Sie im <strong>Kontofilter</strong> die Bedingungen f\u00fcr den Kontofilter an. Beispiel: userName sw "S"<br><br>Geben Sie im <strong>Gruppenfilter</strong> die Gruppenfilterbedingungen an. Beispiel: displayName sw "S".
              placeHolder_accAggregation=userName sw "S"
              placeHolder_grpAggregation=displayName sw "S"
              placeHolder_host=https://{Delinea_SCIM_Server_host}/v2
              docLinkLabel_AuthenticationSettings=Mehr \u00fcber Verbindungseinstellungen
              docLinkLabel_Filters=Mehr \u00fcber Konto- und Gruppenfilter
              HostURL=Host-URL
              ConnectionTimeout=Zeit\u00fcberschreitung bei Verbindung
              API_TOKEN=API-Token
              JSONPathMapping=JSON-Path-Attribut-Mapping
              FilterConditionForAccounts=Kontofilter
              FilterConditionForGroups=Gruppenfilter
              Page_Size=Seitengr\u00f6\u00dfe
              SchemaAttribute=Schema-Attribut
              JSONpath=JSON-Pfad
              ShortDesc=Das Integrationsmodul IdentityNow f\u00fcr Delinea Secret Server On-Premise bietet die M\u00f6glichkeit einer tiefen Governance f\u00fcr Konten und Gruppen. Es unterst\u00fctzt au\u00dferdem das End-to-End-Lebenszyklus-Management.
          type: object
        connectorMetadata:
          additionalProperties: true
          description: A map containing metadata pertinent to the UI to be used
          example:
            supportedUI: EXTJS
            platform: ccg
            shortDesc: connector description
          type: object
        status:
          description: The connector status
          enum:
          - DEPRECATED
          - DEVELOPMENT
          - DEMO
          - RELEASED
          example: RELEASED
          type: string
      type: object
    V3ConnectorDto:
      example:
        features:
        - PROVISIONING
        - SYNC_PROVISIONING
        - SEARCH
        - UNSTRUCTURED_TARGETS
        name: name
        scriptName: servicenow
        directConnect: true
        className: sailpoint.connector.OpenConnectorAdapter
        type: ServiceNow
        connectorMetadata:
          supportedUI: ANGULAR
          platform: ccg
          shortDesc: connector description
        status: RELEASED
      properties:
        name:
          description: The connector name
          example: name
          type: string
        type:
          description: The connector type
          example: ServiceNow
          type: string
        scriptName:
          description: The connector script name
          example: servicenow
          type: string
        className:
          description: The connector class name.
          example: sailpoint.connector.OpenConnectorAdapter
          nullable: true
          type: string
        features:
          description: The list of features supported by the connector
          example:
          - PROVISIONING
          - SYNC_PROVISIONING
          - SEARCH
          - UNSTRUCTURED_TARGETS
          items:
            type: string
          nullable: true
          type: array
        directConnect:
          default: false
          description: true if the source is a direct connect source
          example: true
          type: boolean
        connectorMetadata:
          additionalProperties: true
          description: A map containing metadata pertinent to the connector
          example:
            supportedUI: ANGULAR
            platform: ccg
            shortDesc: connector description
          type: object
        status:
          description: The connector status
          enum:
          - DEPRECATED
          - DEVELOPMENT
          - DEMO
          - RELEASED
          example: RELEASED
          type: string
      title: custom connector response object
      type: object
    V3CreateConnectorDto:
      example:
        name: custom connector
        directConnect: true
        className: sailpoint.connector.OpenConnectorAdapter
        type: custom connector type
        status: RELEASED
      properties:
        name:
          description: The connector name. Need to be unique per tenant. The name
            will able be used to derive a url friendly unique scriptname that will
            be in response. Script name can then be used for all update endpoints
          example: custom connector
          type: string
        type:
          description: The connector type. If not specified will be defaulted to 'custom
            '+name
          example: custom connector type
          type: string
        className:
          description: "The connector class name. If you are implementing openconnector\
            \ standard (what is recommended), then this need to be set to sailpoint.connector.OpenConnectorAdapter"
          example: sailpoint.connector.OpenConnectorAdapter
          type: string
        directConnect:
          default: true
          description: true if the source is a direct connect source
          example: true
          type: boolean
        status:
          description: The connector status
          enum:
          - DEVELOPMENT
          - DEMO
          - RELEASED
          example: RELEASED
          type: string
      required:
      - className
      - name
      title: custom connector create request
      type: object
    UpdateDetail:
      example:
        updatedFiles:
        - pod/org/connectorFiles/testconnector/test1.jar
        scriptName: servicenow
        message: "unsupported xsd version, please ensure latest xsd version http://www.sailpoint.com/xsd/sailpoint_form_2_0.xsd\
          \ is used for source config"
        status: ERROR
      properties:
        message:
          description: The detailed message for an update. Typically the relevent
            error message when status is error.
          example: "unsupported xsd version, please ensure latest xsd version http://www.sailpoint.com/xsd/sailpoint_form_2_0.xsd\
            \ is used for source config"
          type: string
        scriptName:
          description: The connector script name
          example: servicenow
          type: string
        updatedFiles:
          description: The list of updated files supported by the connector
          example:
          - pod/org/connectorFiles/testconnector/test1.jar
          items:
            type: string
          nullable: true
          type: array
        status:
          description: The connector update status
          enum:
          - ERROR
          - UPDATED
          - UNCHANGED
          - SKIPPED
          example: ERROR
          type: string
      type: object
    LifecycleState:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - properties:
          enabled:
            default: false
            description: Indicates whether the lifecycle state is enabled or disabled.
            example: true
            type: boolean
          technicalName:
            description: The lifecycle state's technical name. This is for internal
              use.
            example: Technical Name
            type: string
          description:
            description: Lifecycle state's description.
            example: Lifecycle description
            type: string
          identityCount:
            description: Number of identities that have the lifecycle state.
            example: 42
            format: int32
            readOnly: true
            type: integer
          emailNotificationOption:
            $ref: '#/components/schemas/EmailNotificationOption'
          accountActions:
            items:
              $ref: '#/components/schemas/AccountAction'
            type: array
          accessProfileIds:
            description: List of unique access-profile IDs that are associated with
              the lifecycle state.
            example:
            - 2c918084660f45d6016617daa9210584
            - 2c918084660f45d6016617daa9210500
            items:
              type: string
            type: array
            uniqueItems: true
          identityState:
            description: The lifecycle state's associated identity state. This field
              is generally 'null'.
            nullable: true
            type: string
            example: null
        required:
        - technicalName
        type: object
      example:
        accessProfileIds:
        - 2c918084660f45d6016617daa9210584
        - 2c918084660f45d6016617daa9210500
        emailNotificationOption:
          notifyManagers: true
          notifySpecificUsers: true
          emailAddressList:
          - test@test.com
          - test2@test.com
          notifyAllAdmins: true
        created: 2015-05-28T14:07:17Z
        name: aName
        modified: 2015-05-28T14:07:17Z
        description: Lifecycle description
        accountActions:
        - action: ENABLE
          sourceIds:
          - 2c918084660f45d6016617daa9210584
          - 2c918084660f45d6016617daa9210500
        - action: ENABLE
          sourceIds:
          - 2c918084660f45d6016617daa9210584
          - 2c918084660f45d6016617daa9210500
        id: id12345
        identityCount: 42
        technicalName: Technical Name
        identityState: identityState
        enabled: true
    LifecyclestateDeleted:
      description: Deleted lifecycle state.
      example:
        name: Contractor Lifecycle
        id: "12345"
        type: LIFECYCLE_STATE
      properties:
        type:
          description: Deleted lifecycle state's DTO type.
          enum:
          - LIFECYCLE_STATE
          - TASK_RESULT
          example: LIFECYCLE_STATE
          type: string
        id:
          description: Deleted lifecycle state ID.
          example: "12345"
          type: string
        name:
          description: Deleted lifecycle state's display name.
          example: Contractor Lifecycle
          type: string
      type: object
    IdentityProfileBulkDelete:
      description: List of Identity Profile IDs to delete.
      example:
      - 2c9180867b2a34e0017b3078d60b0699
      - 2c9180867b2a34e0017b3078d60b0698
      items:
        type: string
      type: array
    TaskResultSimplified:
      example:
        name: Background Object Terminator c8f030f2-b1a6-4e33-99e8-6935bc18735d
        description: "Generic task for terminating data in the overlay, used by the\
          \ TerminationService."
        id: ff8081814d977c21014da056804a0af3
        completed: 2000-01-23T04:56:07.000+00:00
        completionStatus: Success
        launched: 2000-01-23T04:56:07.000+00:00
        launcher: support
      properties:
        id:
          description: Task identifier
          example: ff8081814d977c21014da056804a0af3
          type: string
        name:
          description: Task name
          example: Background Object Terminator c8f030f2-b1a6-4e33-99e8-6935bc18735d
          type: string
        description:
          description: Task description
          example: "Generic task for terminating data in the overlay, used by the\
            \ TerminationService."
          type: string
        launcher:
          description: User or process who launched the task
          example: support
          type: string
        completed:
          description: Date time of completion
          format: date-time
          type: string
        launched:
          description: Date time when the task was launched
          format: date-time
          type: string
        completionStatus:
          description: Task result status
          enum:
          - Success
          - Warning
          - Error
          - Terminated
          - TempError
          example: Success
          type: string
      type: object
    IdentityProfileExportedObject:
      description: Identity profile exported object.
      example:
        self:
          name: HR Active Directory
          id: 2c9180835d191a86015d28455b4b232a
          type: SOURCE
        version: 1
        object:
          owner:
            name: William Wilson
            id: 2c9180835d191a86015d28455b4b232a
            type: IDENTITY
          identityExceptionReportReference:
            reportName: My annual report
            taskResultId: 2b838de9-db9b-abcf-e646-d4f274ad4238
          authoritativeSource:
            name: HR Active Directory
            id: 2c9180835d191a86015d28455b4b232a
            type: SOURCE
          hasTimeBasedAttr: true
          created: 2015-05-28T14:07:17Z
          description: My custom flat file profile
          identityRefreshRequired: true
          identityCount: 8
          priority: 10
          identityAttributeConfig:
            attributeTransforms:
            - transformDefinition:
                attributes:
                  attributeName: e-mail
                  sourceName: MySource
                  sourceId: 2c9180877a826e68017a8c0b03da1a53
                type: accountAttribute
              identityAttributeName: email
            - transformDefinition:
                attributes:
                  attributeName: e-mail
                  sourceName: MySource
                  sourceId: 2c9180877a826e68017a8c0b03da1a53
                type: accountAttribute
              identityAttributeName: email
            enabled: true
          name: aName
          modified: 2015-05-28T14:07:17Z
          id: id12345
      properties:
        version:
          description: Version or object from the target service.
          example: 1
          format: int32
          type: integer
        self:
          $ref: '#/components/schemas/IdentityProfileExportedObject_self'
        object:
          $ref: '#/components/schemas/IdentityProfile'
      type: object
    ObjectImportResult:
      description: Response model for import of a single object.
      example:
        warnings:
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        importedObjects:
        - name: HR Active Directory
          id: 2c9180835d191a86015d28455b4b232a
          type: SOURCE
        - name: HR Active Directory
          id: 2c9180835d191a86015d28455b4b232a
          type: SOURCE
        infos:
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        errors:
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
      properties:
        infos:
          description: Informational messages returned from the target service on
            import.
          items:
            $ref: '#/components/schemas/SpConfigMessage'
          type: array
        warnings:
          description: Warning messages returned from the target service on import.
          items:
            $ref: '#/components/schemas/SpConfigMessage'
          type: array
        errors:
          description: Error messages returned from the target service on import.
          items:
            $ref: '#/components/schemas/SpConfigMessage'
          type: array
        importedObjects:
          description: References to objects that were created or updated by the import.
          items:
            $ref: '#/components/schemas/ImportObject'
          type: array
      required:
      - errors
      - importedObjects
      - infos
      - warnings
      title: Import Object Response Body
      type: object
    IdentityPreviewRequest:
      example:
        identityId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        identityAttributeConfig:
          attributeTransforms:
          - transformDefinition:
              attributes:
                attributeName: e-mail
                sourceName: MySource
                sourceId: 2c9180877a826e68017a8c0b03da1a53
              type: accountAttribute
            identityAttributeName: email
          - transformDefinition:
              attributes:
                attributeName: e-mail
                sourceName: MySource
                sourceId: 2c9180877a826e68017a8c0b03da1a53
              type: accountAttribute
            identityAttributeName: email
          enabled: true
      properties:
        identityId:
          description: The Identity id
          format: uuid
          type: string
        identityAttributeConfig:
          $ref: '#/components/schemas/IdentityAttributeConfig'
      type: object
    IdentityPreviewResponse:
      example:
        identity:
          name: Michael Michaels
          id: 2c7180a46faadee4016fb4e018c20642
          type: IDENTITY
        previewAttributes:
        - errorMessages:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          name: email
          value: email@mail.com
          previousValue: oldEmail@mail.com
        - errorMessages:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          name: email
          value: email@mail.com
          previousValue: oldEmail@mail.com
      properties:
        identity:
          $ref: '#/components/schemas/IdentityPreviewResponse_identity'
        previewAttributes:
          items:
            $ref: '#/components/schemas/IdentityAttributePreview'
          type: array
      type: object
    IdentityAttributeConfig:
      description: Defines all the identity attribute mapping configurations. This
        defines how to generate or collect data for each identity attributes in identity
        refresh process.
      example:
        attributeTransforms:
        - transformDefinition:
            attributes:
              attributeName: e-mail
              sourceName: MySource
              sourceId: 2c9180877a826e68017a8c0b03da1a53
            type: accountAttribute
          identityAttributeName: email
        - transformDefinition:
            attributes:
              attributeName: e-mail
              sourceName: MySource
              sourceId: 2c9180877a826e68017a8c0b03da1a53
            type: accountAttribute
          identityAttributeName: email
        enabled: true
      properties:
        enabled:
          default: false
          description: Backend will only promote values if the profile/mapping is
            enabled.
          example: true
          type: boolean
        attributeTransforms:
          items:
            $ref: '#/components/schemas/IdentityAttributeTransform'
          type: array
      type: object
    ManagedClient:
      description: Managed Client
      example:
        clusterType: idn
        clientId: 00be54a2-bb6d-402f-9159-beb2d5319347
        apiGatewayBaseUrl: apiGatewayBaseUrl
        vaVersion: va-megapod-useast1-610-1621372012
        ipAddress: 123.456.78.90
        description: A short description of the ManagedClient
        sinceLastSeen: "15000"
        alertKey: CLIENT_STATUS_NOT_CONFIGURED
        clusterId: e1ff7bb24c934240bbf55e1aa39e41c5
        secret: ef878e15eaa8c8d3e2fa52f41125e2a0eeadadc6a14f931a33ad3e1b62d56381
        type: VA
        vaDownloadUrl: aUrl
        createdAt: 2023-08-04T20:48:01.865Z
        lastSeen: 2020-01-01T00:00:00Z
        provisionStatus: PROVISIONED
        cookbook: cookbook
        ccId: 2248
        name: aName
        id: 2c9180878eaf4204018eb019c3570003
        status: NORMAL
        updatedAt: 2023-08-04T20:48:01.865Z
      properties:
        id:
          description: ManagedClient ID
          example: 2c9180878eaf4204018eb019c3570003
          nullable: true
          readOnly: true
          type: string
        alertKey:
          description: ManagedClient alert key
          example: CLIENT_STATUS_NOT_CONFIGURED
          nullable: true
          readOnly: true
          type: string
        apiGatewayBaseUrl:
          nullable: true
          type: string
        cookbook:
          nullable: true
          type: string
        ccId:
          description: Previous CC ID to be used in data migration. (This field will
            be deleted after CC migration!)
          example: 2248
          format: int64
          nullable: true
          type: integer
        clientId:
          description: The client ID used in API management
          example: 00be54a2-bb6d-402f-9159-beb2d5319347
          type: string
        clusterId:
          description: Cluster ID that the ManagedClient is linked to
          example: e1ff7bb24c934240bbf55e1aa39e41c5
          type: string
        description:
          default: ""
          description: ManagedClient description
          example: A short description of the ManagedClient
          type: string
        ipAddress:
          description: The public IP address of the ManagedClient
          example: 123.456.78.90
          nullable: true
          readOnly: true
          type: string
        lastSeen:
          description: When the ManagedClient was last seen by the server
          example: 2020-01-01T00:00:00Z
          format: date-time
          nullable: true
          readOnly: true
          type: string
        name:
          default: VA-$clientId
          description: ManagedClient name
          example: aName
          nullable: true
          type: string
        sinceLastSeen:
          description: Milliseconds since the ManagedClient has polled the server
          example: "15000"
          nullable: true
          readOnly: true
          type: string
        status:
          description: Status of the ManagedClient
          enum:
          - NORMAL
          - UNDEFINED
          - NOT_CONFIGURED
          - CONFIGURING
          - WARNING
          - ERROR
          - FAILED
          - null
          example: NORMAL
          nullable: true
          readOnly: true
          type: string
        type:
          description: "Type of the ManagedClient (VA, CCG)"
          example: VA
          type: string
        clusterType:
          description: Cluster Type of the ManagedClient
          enum:
          - null
          - idn
          - iai
          - spConnectCluster
          - sqsCluster
          - das-rc
          - das-pc
          - das-dc
          example: idn
          nullable: true
          readOnly: true
          type: string
        vaDownloadUrl:
          description: ManagedClient VA download URL
          example: aUrl
          nullable: true
          readOnly: true
          type: string
        vaVersion:
          description: Version that the ManagedClient's VA is running
          example: va-megapod-useast1-610-1621372012
          nullable: true
          readOnly: true
          type: string
        secret:
          description: Client's apiKey
          example: ef878e15eaa8c8d3e2fa52f41125e2a0eeadadc6a14f931a33ad3e1b62d56381
          nullable: true
          type: string
        createdAt:
          description: The date/time this ManagedClient was created
          example: 2023-08-04T20:48:01.865Z
          format: date-time
          nullable: true
          type: string
        updatedAt:
          description: The date/time this ManagedClient was last updated
          example: 2023-08-04T20:48:01.865Z
          format: date-time
          nullable: true
          type: string
        provisionStatus:
          description: The provisioning status of the ManagedClient
          enum:
          - null
          - PROVISIONED
          - DRAFT
          example: PROVISIONED
          nullable: true
          readOnly: true
          type: string
      required:
      - clientId
      - clusterId
      - description
      - type
      type: object
    ManagedClientRequest:
      description: Managed Client Request
      example:
        name: aName
        description: A short description of the ManagedClient
        clusterId: aClusterId
        type: VA
      properties:
        clusterId:
          description: Cluster ID that the ManagedClient is linked to
          example: aClusterId
          type: string
        description:
          description: description for the ManagedClient to create
          example: A short description of the ManagedClient
          nullable: true
          type: string
        name:
          description: name for the ManagedClient to create
          example: aName
          nullable: true
          type: string
        type:
          description: "Type of the ManagedClient (VA, CCG) to create"
          example: VA
          nullable: true
          type: string
      required:
      - clusterId
      type: object
    ManagedClientType:
      description: Managed Client type
      enum:
      - CCG
      - VA
      - INTERNAL
      - IIQ_HARVESTER
      - null
      example: CCG
      nullable: true
      type: string
    ManagedClientStatus:
      description: Managed Client Status
      example:
        body:
          alertKey: ""
          id: "5678"
          clusterId: "1234"
          ccg_etag: ccg_etag123xyz456
          ccg_pin: NONE
          cookbook_etag: 20210420125956-20210511144538
          hostname: megapod-useast1-secret-hostname.sailpoint.com
          internal_ip: 127.0.0.1
          lastSeen: "1620843964604"
          sinceSeen: "14708"
          sinceSeenMillis: "14708"
          localDev: false
          stacktrace: ""
          state: null
          status: NORMAL
          uuid: null
          product: idn
          va_version: null
          platform_version: "2"
          os_version: 2345.3.1
          os_type: flatcar
          hypervisor: unknown
        type: CCG
        status: NORMAL
        timestamp: 2020-01-01T00:00:00Z
      properties:
        body:
          description: ManagedClientStatus body information
          example:
            alertKey: ""
            id: "5678"
            clusterId: "1234"
            ccg_etag: ccg_etag123xyz456
            ccg_pin: NONE
            cookbook_etag: 20210420125956-20210511144538
            hostname: megapod-useast1-secret-hostname.sailpoint.com
            internal_ip: 127.0.0.1
            lastSeen: "1620843964604"
            sinceSeen: "14708"
            sinceSeenMillis: "14708"
            localDev: false
            stacktrace: ""
            state: null
            status: NORMAL
            uuid: null
            product: idn
            va_version: null
            platform_version: "2"
            os_version: 2345.3.1
            os_type: flatcar
            hypervisor: unknown
          type: object
        status:
          $ref: '#/components/schemas/ManagedClientStatusCode'
        type:
          $ref: '#/components/schemas/ManagedClientType'
        timestamp:
          description: timestamp on the Client Status update
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - body
      - status
      - timestamp
      - type
      type: object
    ManagedCluster:
      description: Managed Cluster
      example:
        pod: megapod-useast1
        configuration:
          clusterExternalId: e1ff7bb24c934240bbf55e1aa39e41c5
          clusterType: sqsCluster
          gmtOffset: "-5"
        description: A short description of the managed cluster.
        publicKeyCertificate: '-----BEGIN CERTIFICATE-----TCCAb2gAwIBAgIBADANBgkqhkiG9w0BAQsFADAuMQ0wCwYDVQQD-----END
          CERTIFICATE-----'
        publicKey: '-----BEGIN PUBLIC KEY-----jANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3WgnsxP52MDgBTfHR+5n4-----END
          PUBLIC KEY-----'
        type: idn
        redis:
          redisHost: megapod-useast1-shared-redis.cloud.sailpoint.com
          redisPort: 6379
        createdAt: 2023-08-04T20:48:01.865Z
        clientType: CCG
        id: e1ff7bb24c934240bbf55e1aa39e41c5
        pinnedConfig: false
        updatedAt: 2023-08-04T20:48:01.865Z
        publicKeyThumbprint: obc6pLiulGbtZ
        org: denali
        logConfiguration:
          durationMinutes: 120
          rootLevel: INFO
          clientId: 3a38a51992e8445ab51a549c0a70ee66
          expiration: 2024-11-06T01:31:08.013164Z
          logLevels: INFO
        operational: false
        alertKey: LIMITED_RESOURCES
        clientIds:
        - "1244"
        - "1245"
        serviceCount: 6
        ccgVersion: v01
        ccId: "1533"
        name: Managed Cluster Name
        keyPair:
          publicKeyThumbprint: 6CMlaJIV44-xJxcB3CJBjDUUn54
          publicKeyCertificate: '-----BEGIN CERTIFICATE-----****-----END CERTIFICATE-----'
          publicKey: '-----BEGIN PUBLIC KEY-----******-----END PUBLIC KEY-----'
        attributes:
          keystore: /u3+7QAAAAIAAAABAAAAAQAvL3Byb3h5LWNsdXN0ZXIvMmM5MTgwODc3Yjg3MW
          queue:
            name: megapod-useast1-denali-lwt-cluster-1533
            region: us-east-1
        status: NORMAL
      properties:
        id:
          description: ManagedCluster ID
          example: e1ff7bb24c934240bbf55e1aa39e41c5
          type: string
        name:
          description: ManagedCluster name
          example: Managed Cluster Name
          type: string
        pod:
          description: ManagedCluster pod
          example: megapod-useast1
          type: string
        org:
          description: ManagedCluster org
          example: denali
          type: string
        type:
          $ref: '#/components/schemas/ManagedClusterTypes'
        configuration:
          additionalProperties:
            nullable: true
            type: string
          description: ManagedProcess configuration map
          example:
            clusterExternalId: e1ff7bb24c934240bbf55e1aa39e41c5
            clusterType: sqsCluster
            gmtOffset: "-5"
          type: object
        keyPair:
          $ref: '#/components/schemas/ManagedClusterKeyPair'
        attributes:
          $ref: '#/components/schemas/ManagedClusterAttributes'
        description:
          default: q
          description: ManagedCluster description
          example: A short description of the managed cluster.
          type: string
        redis:
          $ref: '#/components/schemas/ManagedClusterRedis'
        clientType:
          $ref: '#/components/schemas/ManagedClientType'
        ccgVersion:
          description: CCG version used by the ManagedCluster
          example: v01
          type: string
        pinnedConfig:
          default: false
          description: boolean flag indiacting whether or not the cluster configuration
            is pinned
          example: false
          type: boolean
        logConfiguration:
          $ref: '#/components/schemas/ClientLogConfiguration'
        operational:
          default: false
          description: Whether or not the cluster is operational or not
          example: false
          type: boolean
        status:
          description: Cluster status
          enum:
          - CONFIGURING
          - FAILED
          - NO_CLIENTS
          - NORMAL
          - WARNING
          example: NORMAL
          type: string
        publicKeyCertificate:
          description: Public key certificate
          example: '-----BEGIN CERTIFICATE-----TCCAb2gAwIBAgIBADANBgkqhkiG9w0BAQsFADAuMQ0wCwYDVQQD-----END
            CERTIFICATE-----'
          nullable: true
          type: string
        publicKeyThumbprint:
          description: Public key thumbprint
          example: obc6pLiulGbtZ
          nullable: true
          type: string
        publicKey:
          description: Public key
          example: '-----BEGIN PUBLIC KEY-----jANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3WgnsxP52MDgBTfHR+5n4-----END
            PUBLIC KEY-----'
          nullable: true
          type: string
        alertKey:
          description: Key describing any immediate cluster alerts
          example: LIMITED_RESOURCES
          type: string
        clientIds:
          description: List of clients in a cluster
          example:
          - "1244"
          - "1245"
          items:
            type: string
          type: array
        serviceCount:
          default: 0
          description: Number of services bound to a cluster
          example: 6
          format: int32
          type: integer
        ccId:
          default: "0"
          description: "CC ID only used in calling CC, will be removed without notice\
            \ when Migration to CEGS is finished"
          example: "1533"
          type: string
        createdAt:
          description: The date/time this cluster was created
          example: 2023-08-04T20:48:01.865Z
          format: date-time
          nullable: true
          type: string
        updatedAt:
          description: The date/time this cluster was last updated
          example: 2023-08-04T20:48:01.865Z
          format: date-time
          nullable: true
          type: string
      required:
      - ccgVersion
      - clientType
      - id
      type: object
    ManagedClusterRequest:
      description: Request to create Managed Cluster
      example:
        configuration:
          clusterExternalId: externalId
          ccgVersion: 77.0.0
        name: Managed Cluster Name
        description: A short description of the managed cluster.
        type: idn
      properties:
        name:
          description: ManagedCluster name
          example: Managed Cluster Name
          nullable: false
          type: string
        type:
          $ref: '#/components/schemas/ManagedClusterTypes'
        configuration:
          additionalProperties:
            type: string
          description: ManagedProcess configuration map
          example:
            clusterExternalId: externalId
            ccgVersion: 77.0.0
          type: object
        description:
          description: ManagedCluster description
          example: A short description of the managed cluster.
          nullable: true
          type: string
      required:
      - name
      type: object
    ClientLogConfiguration:
      description: Client Runtime Logging Configuration
      example:
        durationMinutes: 120
        rootLevel: INFO
        clientId: 3a38a51992e8445ab51a549c0a70ee66
        expiration: 2024-11-06T01:31:08.013164Z
        logLevels: INFO
      nullable: true
      properties:
        clientId:
          description: Log configuration's client ID
          example: 3a38a51992e8445ab51a549c0a70ee66
          type: string
        durationMinutes:
          default: 240
          description: Duration in minutes for log configuration to remain in effect
            before resetting to defaults.
          example: 120
          format: int32
          maximum: 1440
          minimum: 5
          type: integer
        expiration:
          description: Expiration date-time of the log configuration request.  Can
            be no greater than 24 hours from current date-time.
          example: 2024-11-06T01:31:08.013164Z
          format: date-time
          type: string
        rootLevel:
          $ref: '#/components/schemas/StandardLevel'
        logLevels:
          additionalProperties:
            $ref: '#/components/schemas/StandardLevel'
          description: Mapping of identifiers to Standard Log Level values
          example: INFO
          type: object
      required:
      - rootLevel
      type: object
    ClientLogConfigurationDurationMinutes:
      description: Client Runtime Logging Configuration
      nullable: true
      properties:
        clientId:
          description: Log configuration's client ID
          example: 3a38a51992e8445ab51a549c0a70ee66
          type: string
        durationMinutes:
          default: 240
          description: Duration in minutes for log configuration to remain in effect
            before resetting to defaults.
          example: 120
          format: int32
          maximum: 1440
          minimum: 5
          type: integer
        rootLevel:
          $ref: '#/components/schemas/StandardLevel'
        logLevels:
          additionalProperties:
            $ref: '#/components/schemas/StandardLevel'
          description: Mapping of identifiers to Standard Log Level values
          example: INFO
          type: object
      required:
      - rootLevel
      title: Set Duration Minutes
      type: object
    ClientLogConfigurationExpiration:
      description: Client Runtime Logging Configuration
      nullable: true
      properties:
        clientId:
          description: Log configuration's client ID
          example: 3a38a51992e8445ab51a549c0a70ee66
          type: string
        expiration:
          description: Expiration date-time of the log configuration request.  Can
            be no greater than 24 hours from current date-time.
          example: 2024-11-06T01:31:08.013164Z
          format: date-time
          type: string
        rootLevel:
          $ref: '#/components/schemas/StandardLevel'
        logLevels:
          additionalProperties:
            $ref: '#/components/schemas/StandardLevel'
          description: Mapping of identifiers to Standard Log Level values
          example: INFO
          type: object
      required:
      - rootLevel
      title: Set Expiration Date
      type: object
    MfaOktaConfig:
      example:
        accessKey: qw123Y3QlA5UqocYpdU3rEkzrK2D497y
        host: example.com
        mfaMethod: okta-verify
        enabled: true
        identityAttribute: email
      properties:
        mfaMethod:
          description: Mfa method name
          example: okta-verify
          nullable: true
          type: string
        enabled:
          default: false
          description: If MFA method is enabled.
          example: true
          type: boolean
        host:
          description: The server host name or IP address of the MFA provider.
          example: example.com
          nullable: true
          type: string
        accessKey:
          description: The secret key for authenticating requests to the MFA provider.
          example: qw123Y3QlA5UqocYpdU3rEkzrK2D497y
          nullable: true
          type: string
        identityAttribute:
          description: Optional. The name of the attribute for mapping IdentityNow
            identity to the MFA provider.
          example: email
          nullable: true
          type: string
      type: object
    MfaDuoConfig:
      example:
        accessKey: qw123Y3QlA5UqocYpdU3rEkzrK2D497y
        host: example.com
        configProperties:
          skey: qwERttyZx1CdlQye2Vwtbsjr3HKddy4BAiCXjc5x
          ikey: Q123WE45R6TY7890ZXCV
        mfaMethod: duo-web
        enabled: true
        identityAttribute: email
      properties:
        mfaMethod:
          description: Mfa method name
          example: duo-web
          nullable: true
          type: string
        enabled:
          default: false
          description: If MFA method is enabled.
          example: true
          type: boolean
        host:
          description: The server host name or IP address of the MFA provider.
          example: example.com
          nullable: true
          type: string
        accessKey:
          description: The secret key for authenticating requests to the MFA provider.
          example: qw123Y3QlA5UqocYpdU3rEkzrK2D497y
          nullable: true
          type: string
        identityAttribute:
          description: Optional. The name of the attribute for mapping IdentityNow
            identity to the MFA provider.
          example: email
          nullable: true
          type: string
        configProperties:
          additionalProperties: true
          description: A map with additional config properties for the given MFA method
            - duo-web.
          example:
            skey: qwERttyZx1CdlQye2Vwtbsjr3HKddy4BAiCXjc5x
            ikey: Q123WE45R6TY7890ZXCV
          nullable: true
          type: object
      type: object
    KbaQuestion:
      description: KBA Configuration
      example:
        hasAnswer: true
        numAnswers: 5
        id: 143cfd3b-c23f-426b-ae5f-d3db06fa5919
        text: "[{\"text\":\"Nouvelle question MFA -1 ?\",\"locale\":\"fr\"},{\"text\"\
          :\"MFA new question -1 ?\",\"locale\":\"\"}]"
      properties:
        id:
          description: KBA Question Id
          example: 143cfd3b-c23f-426b-ae5f-d3db06fa5919
          nullable: false
          type: string
        text:
          description: KBA Question description
          example: "[{\"text\":\"Nouvelle question MFA -1 ?\",\"locale\":\"fr\"},{\"\
            text\":\"MFA new question -1 ?\",\"locale\":\"\"}]"
          nullable: false
          type: string
        hasAnswer:
          description: Denotes whether the KBA question has an answer configured for
            any user in the tenant
          example: true
          nullable: false
          type: boolean
        numAnswers:
          description: Denotes the number of KBA configurations for this question
          example: 5
          format: int32
          nullable: false
          type: integer
      required:
      - hasAnswer
      - id
      - numAnswers
      - text
      type: object
    KbaAnswerRequestItem:
      example:
        answer: Your answer
        id: c54fee53-2d63-4fc5-9259-3e93b9994135
      properties:
        id:
          description: Question Id
          example: c54fee53-2d63-4fc5-9259-3e93b9994135
          nullable: false
          type: string
        answer:
          description: An answer for the KBA question
          example: Your answer
          nullable: false
          type: string
      required:
      - answer
      - id
      type: object
    KbaAnswerResponseItem:
      example:
        hasAnswer: true
        question: "[{\"text\":\"Nouvelle question MFA -1 ?\",\"locale\":\"fr\"},{\"\
          text\":\"MFA new question -1 ?\",\"locale\":\"\"}]"
        id: c54fee53-2d63-4fc5-9259-3e93b9994135
      properties:
        id:
          description: Question Id
          example: c54fee53-2d63-4fc5-9259-3e93b9994135
          nullable: false
          type: string
        question:
          description: Question description
          example: "[{\"text\":\"Nouvelle question MFA -1 ?\",\"locale\":\"fr\"},{\"\
            text\":\"MFA new question -1 ?\",\"locale\":\"\"}]"
          nullable: false
          type: string
        hasAnswer:
          description: Denotes whether the KBA question has an answer configured for
            the current user
          example: true
          nullable: false
          type: boolean
      required:
      - hasAnswer
      - id
      - question
      type: object
    MfaConfigTestResponse:
      description: Response model for configuration test of a given MFA method
      example:
        state: SUCCESS
        error: MFA Method is disabled.
      properties:
        state:
          description: The configuration test result.
          enum:
          - SUCCESS
          - FAILED
          example: SUCCESS
          readOnly: true
          type: string
        error:
          description: The error message to indicate the failure of configuration
            test.
          example: MFA Method is disabled.
          readOnly: true
          type: string
      type: object
    OktaVerificationRequest:
      example:
        userId: example@mail.com
      properties:
        userId:
          description: User identifier for Verification request. The value of the
            user's attribute.
          example: example@mail.com
          nullable: false
          type: string
      required:
      - userId
      type: object
    VerificationResponse:
      example:
        requestId: 089899f13a8f4da7824996191587bab9
        error: Unable to connect DUO Service during verification
        status: SUCCESS
      properties:
        requestId:
          description: The verificationPollRequest request ID
          example: 089899f13a8f4da7824996191587bab9
          nullable: true
          type: string
        status:
          description: MFA Authentication status
          enum:
          - PENDING
          - SUCCESS
          - FAILED
          - LOCKOUT
          - NOT_ENOUGH_DATA
          example: SUCCESS
          type: string
        error:
          description: Error messages from MFA verification request
          example: Unable to connect DUO Service during verification
          nullable: true
          type: string
      type: object
    DuoVerificationRequest:
      example:
        signedResponse: AUTH|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjUzMDg5|f1f5f8ced5b340f3d303b05d0efa0e43b6a8f970:APP|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjU2NjE5|cb44cf44353f5127edcae31b1da0355f87357db2
        userId: 2c9180947f0ef465017f215cbcfd004b
      properties:
        userId:
          description: User id for Verification request.
          example: 2c9180947f0ef465017f215cbcfd004b
          nullable: false
          type: string
        signedResponse:
          description: User id for Verification request.
          example: AUTH|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjUzMDg5|f1f5f8ced5b340f3d303b05d0efa0e43b6a8f970:APP|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjU2NjE5|cb44cf44353f5127edcae31b1da0355f87357db2
          nullable: false
          type: string
      required:
      - signedResponse
      - userId
      type: object
    VerificationPollRequest:
      example:
        requestId: 089899f13a8f4da7824996191587bab9
      properties:
        requestId:
          description: Verification request Id
          example: 089899f13a8f4da7824996191587bab9
          nullable: false
          type: string
      required:
      - requestId
      type: object
    KbaAuthResponse:
      example:
        kbaAuthResponseItems:
        - questionId: 089899f13a8f4da7824996191587bab9
          isVerified: false
        status: PENDING
      properties:
        kbaAuthResponseItems:
          example:
          - questionId: 089899f13a8f4da7824996191587bab9
            isVerified: false
          items:
            $ref: '#/components/schemas/KbaAuthResponseItem'
          type: array
        status:
          description: MFA Authentication status
          enum:
          - PENDING
          - SUCCESS
          - FAILED
          - LOCKOUT
          - NOT_ENOUGH_DATA
          example: PENDING
          type: string
      type: object
    TokenAuthRequest:
      example:
        userAlias: will.albin
        deliveryType: EMAIL_WORK
        token: "12345"
      properties:
        token:
          description: Token value
          example: "12345"
          nullable: false
          type: string
        userAlias:
          description: User alias from table spt_identity field named 'name'
          example: will.albin
          nullable: false
          type: string
        deliveryType:
          description: Token delivery type
          enum:
          - SMS_PERSONAL
          - VOICE_PERSONAL
          - SMS_WORK
          - VOICE_WORK
          - EMAIL_WORK
          - EMAIL_PERSONAL
          example: EMAIL_WORK
          nullable: false
          type: string
      required:
      - deliveryType
      - token
      - userAlias
      type: object
    TokenAuthResponse:
      example:
        status: PENDING
      properties:
        status:
          description: MFA Authentication status
          enum:
          - PENDING
          - SUCCESS
          - FAILED
          - LOCKOUT
          - NOT_ENOUGH_DATA
          example: PENDING
          type: string
      type: object
    SendTokenRequest:
      example:
        userAlias: will.albin
        deliveryType: EMAIL_WORK
      properties:
        userAlias:
          description: User alias from table spt_identity field named 'name'
          example: will.albin
          nullable: false
          type: string
        deliveryType:
          description: Token delivery type
          enum:
          - SMS_PERSONAL
          - VOICE_PERSONAL
          - SMS_WORK
          - VOICE_WORK
          - EMAIL_WORK
          - EMAIL_PERSONAL
          example: EMAIL_WORK
          nullable: false
          type: string
      required:
      - deliveryType
      - userAlias
      type: object
    SendTokenResponse:
      example:
        requestId: 089899f13a8f4da7824996191587bab9
        errorMessage: Unable to sent text message
        status: SUCCESS
      properties:
        requestId:
          description: The token request ID
          example: 089899f13a8f4da7824996191587bab9
          nullable: true
          type: string
        status:
          description: Status of sending token
          enum:
          - SUCCESS
          - FAILED
          example: SUCCESS
          type: string
        errorMessage:
          description: Error messages from token send request
          example: Unable to sent text message
          nullable: true
          type: string
      type: object
    NonEmployeeRecord:
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        lastName: Smith
        manager: jane.doe
        data:
          description: Auditing
        accountName: Abby.Smith
        endDate: 2020-08-23T18:52:59.162Z
        created: 2019-08-23T18:40:35.772Z
        firstName: William
        phone: "5125555555"
        modified: 2019-08-23T18:52:59.162Z
        id: ef38f94347e94562b5bb8424a56397d8
        email: william.smith@example.com
        startDate: 2019-08-23T18:52:59.162Z
      properties:
        id:
          description: Non-Employee record id.
          example: ef38f94347e94562b5bb8424a56397d8
          format: UUID
          type: string
        accountName:
          description: Requested identity account name.
          example: Abby.Smith
          type: string
        firstName:
          description: Non-Employee's first name.
          example: William
          type: string
        lastName:
          description: Non-Employee's last name.
          example: Smith
          type: string
        email:
          description: Non-Employee's email.
          example: william.smith@example.com
          type: string
        phone:
          description: Non-Employee's phone.
          example: "5125555555"
          type: string
        manager:
          description: The account ID of a valid identity to serve as this non-employee's
            manager.
          example: jane.doe
          type: string
        sourceId:
          description: Non-Employee's source id.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        data:
          additionalProperties:
            type: string
          description: Additional attributes for a non-employee. Up to 10 custom attributes
            can be added.
          example:
            description: Auditing
          type: object
        startDate:
          description: Non-Employee employment start date.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        endDate:
          description: Non-Employee employment end date.
          example: 2020-08-23T18:52:59.162Z
          format: date-time
          type: string
        modified:
          description: When the request was last modified.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        created:
          description: When the request was created.
          example: 2019-08-23T18:40:35.772Z
          format: date-time
          type: string
      type: object
    NonEmployeeRequestBody:
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        firstName: William
        lastName: Smith
        manager: jane.doe
        data:
          description: Auditing
        accountName: william.smith
        phone: "5125555555"
        endDate: 2021-03-25T00:00:00-05:00
        email: william.smith@example.com
        startDate: 2020-03-24T00:00:00-05:00
      properties:
        accountName:
          description: Requested identity account name.
          example: william.smith
          type: string
        firstName:
          description: Non-Employee's first name.
          example: William
          type: string
        lastName:
          description: Non-Employee's last name.
          example: Smith
          type: string
        email:
          description: Non-Employee's email.
          example: william.smith@example.com
          type: string
        phone:
          description: Non-Employee's phone.
          example: "5125555555"
          type: string
        manager:
          description: The account ID of a valid identity to serve as this non-employee's
            manager.
          example: jane.doe
          type: string
        sourceId:
          description: Non-Employee's source id.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        data:
          additionalProperties:
            type: string
          description: Additional attributes for a non-employee. Up to 10 custom attributes
            can be added.
          example:
            description: Auditing
          type: object
        startDate:
          description: Non-Employee employment start date.
          example: 2020-03-24T00:00:00-05:00
          format: date-time
          type: string
        endDate:
          description: Non-Employee employment end date.
          example: 2021-03-25T00:00:00-05:00
          format: date-time
          type: string
      required:
      - accountName
      - email
      - endDate
      - firstName
      - lastName
      - manager
      - phone
      - sourceId
      - startDate
      type: object
    NonEmployeeRequest:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSourceLite'
      - properties:
          accountName:
            description: Requested identity account name.
            example: william.smith
            type: string
          firstName:
            description: Non-Employee's first name.
            example: William
            type: string
          lastName:
            description: Non-Employee's last name.
            example: Smith
            type: string
          email:
            description: Non-Employee's email.
            example: william.smith@example.com
            type: string
          phone:
            description: Non-Employee's phone.
            example: "5125555555"
            type: string
          manager:
            description: The account ID of a valid identity to serve as this non-employee's
              manager.
            example: jane.doe
            type: string
          nonEmployeeSource:
            $ref: '#/components/schemas/NonEmployeeSourceLite'
          data:
            additionalProperties:
              type: string
            description: Additional attributes for a non-employee. Up to 10 custom
              attributes can be added.
            example:
              description: Auditing
            type: object
          approvalItems:
            description: List of approval item for the request
            items:
              $ref: '#/components/schemas/NonEmployeeApprovalItemBase'
            type: array
          approvalStatus:
            $ref: '#/components/schemas/ApprovalStatus'
          comment:
            description: Comment of requester
            example: approved
            type: string
          completionDate:
            description: When the request was completely approved.
            example: 2020-03-24T11:11:41.139-05:00
            format: date-time
            type: string
          startDate:
            description: Non-Employee employment start date.
            example: 2020-03-24T00:00:00-05:00
            format: date-time
            type: string
          endDate:
            description: Non-Employee employment end date.
            example: 2021-03-25T00:00:00-05:00
            format: date-time
            type: string
          modified:
            description: When the request was last modified.
            example: 2020-03-24T11:11:41.139-05:00
            format: date-time
            type: string
          created:
            description: When the request was created.
            example: 2020-03-24T11:11:41.139-05:00
            format: date-time
            type: string
        type: object
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        approvalStatus: APPROVED
        lastName: Smith
        manager: jane.doe
        data:
          description: Auditing
        accountName: william.smith
        endDate: 2021-03-25T00:00:00-05:00
        created: 2020-03-24T11:11:41.139-05:00
        approvalItems:
        - approver:
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
          approvalStatus: APPROVED
          accountName: test.account
          approvalOrder: 1
          created: 2019-08-23T18:40:35.772Z
          modified: 2019-08-23T18:52:59.162Z
          comment: I approve
          id: 2c1e388b-1e55-4b0a-ab5c-897f1204159c
        - approver:
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
          approvalStatus: APPROVED
          accountName: test.account
          approvalOrder: 1
          created: 2019-08-23T18:40:35.772Z
          modified: 2019-08-23T18:52:59.162Z
          comment: I approve
          id: 2c1e388b-1e55-4b0a-ab5c-897f1204159c
        description: Source description
        nonEmployeeSource:
          sourceId: 2c91808568c529c60168cca6f90c1313
          name: Retail
          description: Source description
          id: a0303682-5e4a-44f7-bdc2-6ce6112549c1
        firstName: William
        phone: "5125555555"
        name: Retail
        modified: 2020-03-24T11:11:41.139-05:00
        comment: approved
        completionDate: 2020-03-24T11:11:41.139-05:00
        id: a0303682-5e4a-44f7-bdc2-6ce6112549c1
        email: william.smith@example.com
        startDate: 2020-03-24T00:00:00-05:00
    NonEmployeeRequestSummary:
      example:
        approved: 2
        rejected: 2
        pending: 2
        nonEmployeeCount: 2
      properties:
        approved:
          description: The number of approved non-employee requests on all sources
            that *requested-for* user manages.
          example: 2
          format: int32
          type: integer
        rejected:
          description: The number of rejected non-employee requests on all sources
            that *requested-for* user manages.
          example: 2
          format: int32
          type: integer
        pending:
          description: The number of pending non-employee requests on all sources
            that *requested-for* user manages.
          example: 2
          format: int32
          type: integer
        nonEmployeeCount:
          description: The number of non-employee records on all sources that *requested-for*
            user manages.
          example: 2
          format: int32
          type: integer
      type: object
    NonEmployeeSourceWithNECount:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSource'
      - properties:
          nonEmployeeCount:
            description: "Number of non-employee records associated with this source.\
              \ This value is 'NULL' by default. To get the non-employee count, you\
              \ must set the `non-employee-count` flag in your request to 'true'."
            example: 120
            format: int32
            nullable: true
            type: integer
        type: object
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        created: 2019-08-23T18:40:35.772Z
        accountManagers:
        - id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        - id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        name: Retail
        description: Source description
        approvers:
        - id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        - id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        modified: 2019-08-23T18:52:59.162Z
        id: a0303682-5e4a-44f7-bdc2-6ce6112549c1
        nonEmployeeCount: 120
    NonEmployeeSourceRequestBody:
      example:
        owner:
          id: 2c91808570313110017040b06f344ec9
        managementWorkgroup: "123299"
        accountManagers:
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        name: Retail
        description: Source description
        approvers:
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
      properties:
        name:
          description: Name of non-employee source.
          example: Retail
          type: string
        description:
          description: Description of non-employee source.
          example: Source description
          type: string
        owner:
          $ref: '#/components/schemas/NonEmployeeIdnUserRequest'
        managementWorkgroup:
          description: The ID for the management workgroup that contains source sub-admins
          example: "123299"
          type: string
        approvers:
          description: List of approvers.
          items:
            $ref: '#/components/schemas/NonEmployeeIdnUserRequest'
          maxItems: 3
          type: array
        accountManagers:
          description: List of account managers.
          items:
            $ref: '#/components/schemas/NonEmployeeIdnUserRequest'
          maxItems: 10
          type: array
      required:
      - description
      - name
      - owner
      type: object
    NonEmployeeSourceWithCloudExternalId:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSource'
      - properties:
          cloudExternalId:
            description: Legacy ID used for sources from the V1 API. This attribute
              will be removed from a future version of the API and will not be considered
              a breaking change. No clients should rely on this ID always being present.
            example: "99999"
            type: string
        type: object
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        created: 2019-08-23T18:40:35.772Z
        accountManagers:
        - id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        - id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        name: Retail
        description: Source description
        approvers:
        - id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        - id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        modified: 2019-08-23T18:52:59.162Z
        cloudExternalId: "99999"
        id: a0303682-5e4a-44f7-bdc2-6ce6112549c1
    NonEmployeeSource:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSourceLite'
      - properties:
          approvers:
            description: List of approvers
            items:
              $ref: '#/components/schemas/NonEmployeeIdentityReferenceWithId'
            type: array
          accountManagers:
            description: List of account managers
            items:
              $ref: '#/components/schemas/NonEmployeeIdentityReferenceWithId'
            type: array
          modified:
            description: When the request was last modified.
            example: 2019-08-23T18:52:59.162Z
            format: date-time
            type: string
          created:
            description: When the request was created.
            example: 2019-08-23T18:40:35.772Z
            format: date-time
            type: string
        type: object
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        created: 2019-08-23T18:40:35.772Z
        accountManagers:
        - id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        - id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        name: Retail
        description: Source description
        approvers:
        - id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        - id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        modified: 2019-08-23T18:52:59.162Z
        id: a0303682-5e4a-44f7-bdc2-6ce6112549c1
    NonEmployeeBulkUploadJob:
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        created: 2019-08-23T18:52:59.162Z
        modified: 2019-08-23T18:52:59.162Z
        id: 2c91808568c529c60168cca6f90cffff
        status: PENDING
      properties:
        id:
          description: The bulk upload job's ID. (UUID)
          example: 2c91808568c529c60168cca6f90cffff
          type: string
        sourceId:
          description: The ID of the source to bulk-upload non-employees to. (UUID)
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        created:
          description: The date-time the job was submitted.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        modified:
          description: The date-time that the job was last updated.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        status:
          description: |
            Returns the following values indicating the progress or result of the bulk upload job.
            "PENDING" means the job is queued and waiting to be processed.
            "IN_PROGRESS" means the job is currently being processed.
            "COMPLETED" means the job has been completed without any errors.
            "ERROR" means the job failed to process with errors.
          enum:
          - PENDING
          - IN_PROGRESS
          - COMPLETED
          - ERROR
          example: PENDING
          type: string
      type: object
    NonEmployeeBulkUploadStatus:
      example:
        status: PENDING
      properties:
        status:
          description: |
            Returns the following values indicating the progress or result of the bulk upload job.
            "PENDING" means the job is queued and waiting to be processed.
            "IN_PROGRESS" means the job is currently being processed.
            "COMPLETED" means the job has been completed without any errors.
            "ERROR" means the job failed to process with errors.
            null means job has been submitted to the source.
          enum:
          - PENDING
          - IN_PROGRESS
          - COMPLETED
          - ERROR
          example: PENDING
          type: string
      type: object
    NonEmployeeApprovalItem:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeApprovalItemBase'
      - properties:
          nonEmployeeRequest:
            $ref: '#/components/schemas/NonEmployeeRequestLite'
        type: object
      example:
        approver:
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        approvalStatus: APPROVED
        accountName: test.account
        approvalOrder: 1
        created: 2019-08-23T18:40:35.772Z
        modified: 2019-08-23T18:52:59.162Z
        comment: I approve
        id: 2c1e388b-1e55-4b0a-ab5c-897f1204159c
        nonEmployeeRequest:
          requester:
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
          id: ac110005-7156-1150-8171-5b292e3e0084
    NonEmployeeApprovalItemDetail:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeApprovalItemBase'
      - properties:
          nonEmployeeRequest:
            $ref: '#/components/schemas/NonEmployeeRequestWithoutApprovalItem'
        type: object
      example:
        approver:
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        approvalStatus: APPROVED
        accountName: test.account
        approvalOrder: 1
        created: 2019-08-23T18:40:35.772Z
        modified: 2019-08-23T18:52:59.162Z
        comment: I approve
        id: 2c1e388b-1e55-4b0a-ab5c-897f1204159c
        nonEmployeeRequest:
          requester:
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
          approvalStatus: APPROVED
          lastName: Smith
          manager: jane.doe
          data:
            description: Auditing
          accountName: william.smith
          endDate: 2021-03-25
          created: 2020-03-24T11:11:41.139-05:00
          nonEmployeeSource:
            sourceId: 2c91808568c529c60168cca6f90c1313
            name: Retail
            description: Source description
            id: a0303682-5e4a-44f7-bdc2-6ce6112549c1
            schemaAttributes:
            - system: true
              helpText: The unique identifier for the account
              created: 2019-08-23T18:40:35.772Z
              modified: 2019-08-23T18:52:59.162Z
              id: ac110005-7156-1150-8171-5b292e3e0084
              label: Account Name
              placeholder: Enter a unique user name for this account.
              type: TEXT
              technicalName: account.name
              required: true
            - system: true
              helpText: The unique identifier for the account
              created: 2019-08-23T18:40:35.772Z
              modified: 2019-08-23T18:52:59.162Z
              id: ac110005-7156-1150-8171-5b292e3e0084
              label: Account Name
              placeholder: Enter a unique user name for this account.
              type: TEXT
              technicalName: account.name
              required: true
          firstName: William
          phone: "5125555555"
          modified: 2020-03-24T11:11:41.139-05:00
          comment: approved
          completionDate: 2020-03-24T11:11:41.139-05:00
          id: ac110005-7156-1150-8171-5b292e3e0084
          email: william.smith@example.com
          startDate: 2020-03-24
    NonEmployeeApprovalDecision:
      example:
        comment: Approved by manager
      properties:
        comment:
          description: Comment on the approval item.
          example: Approved by manager
          maxLength: 4000
          type: string
      type: object
    NonEmployeeRejectApprovalDecision:
      example:
        comment: approved
      properties:
        comment:
          description: Comment on the approval item.
          example: approved
          maxLength: 4000
          type: string
      required:
      - comment
      type: object
    NonEmployeeApprovalSummary:
      example:
        approved: 2
        rejected: 2
        pending: 2
      properties:
        approved:
          description: The number of approved non-employee approval requests.
          example: 2
          format: int32
          type: integer
        pending:
          description: The number of pending non-employee approval requests.
          example: 2
          format: int32
          type: integer
        rejected:
          description: The number of rejected non-employee approval requests.
          example: 2
          format: int32
          type: integer
      type: object
    NonEmployeeSchemaAttribute:
      example:
        system: true
        helpText: The unique identifier for the account
        created: 2019-08-23T18:40:35.772Z
        modified: 2019-08-23T18:52:59.162Z
        id: ac110005-7156-1150-8171-5b292e3e0084
        label: Account Name
        placeholder: Enter a unique user name for this account.
        type: TEXT
        technicalName: account.name
        required: true
      properties:
        id:
          description: Schema Attribute Id
          example: ac110005-7156-1150-8171-5b292e3e0084
          format: UUID
          type: string
        system:
          default: false
          description: True if this schema attribute is mandatory on all non-employees
            sources.
          example: true
          type: boolean
        modified:
          description: When the schema attribute was last modified.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        created:
          description: When the schema attribute was created.
          example: 2019-08-23T18:40:35.772Z
          format: date-time
          type: string
        type:
          $ref: '#/components/schemas/NonEmployeeSchemaAttributeType'
        label:
          description: Label displayed on the UI for this schema attribute.
          example: Account Name
          type: string
        technicalName:
          description: The technical name of the attribute. Must be unique per source.
          example: account.name
          type: string
        helpText:
          description: help text displayed by UI.
          example: The unique identifier for the account
          type: string
        placeholder:
          description: Hint text that fills UI box.
          example: Enter a unique user name for this account.
          type: string
        required:
          default: false
          description: "If true, the schema attribute is required for all non-employees\
            \ in the source"
          example: true
          type: boolean
      required:
      - label
      - technicalName
      - type
      type: object
    NonEmployeeSchemaAttributeBody:
      example:
        helpText: The unique identifier for the account
        label: Account Name
        placeholder: Enter a unique user name for this account.
        type: TEXT
        technicalName: account.name
        required: true
      properties:
        type:
          description: Type of the attribute. Only type 'TEXT' is supported for custom
            attributes.
          example: TEXT
          type: string
        label:
          description: Label displayed on the UI for this schema attribute.
          example: Account Name
          type: string
        technicalName:
          description: The technical name of the attribute. Must be unique per source.
          example: account.name
          type: string
        helpText:
          description: help text displayed by UI.
          example: The unique identifier for the account
          type: string
        placeholder:
          description: Hint text that fills UI box.
          example: Enter a unique user name for this account.
          type: string
        required:
          description: "If true, the schema attribute is required for all non-employees\
            \ in the source"
          example: true
          type: boolean
      required:
      - label
      - technicalName
      - type
      type: object
    GetOAuthClientResponse:
      example:
        internal: false
        metadata: metadata
        created: 2017-07-11T18:45:37.098Z
        businessName: Acme-Solar
        description: "An API client used for the authorization_code, refresh_token,\
          \ and client_credentials flows"
        refreshTokenValiditySeconds: 86400
        secret: secret
        type: CONFIDENTIAL
        redirectUris:
        - http://localhost:12345
        enabled: true
        accessType: OFFLINE
        lastUsed: 2017-07-11T18:45:37.098Z
        grantTypes:
        - AUTHORIZATION_CODE
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        strongAuthSupported: false
        homepageUrl: http://localhost:12345
        accessTokenValiditySeconds: 750
        scope:
        - demo:api-client-scope:first
        - demo:api-client-scope:second
        name: Demo API Client
        claimsSupported: false
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
      properties:
        id:
          description: ID of the OAuth client
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        businessName:
          description: The name of the business the API Client should belong to
          example: Acme-Solar
          nullable: true
          type: string
        homepageUrl:
          description: The homepage URL associated with the owner of the API Client
          example: http://localhost:12345
          nullable: true
          type: string
        name:
          description: A human-readable name for the API Client
          example: Demo API Client
          type: string
        description:
          description: A description of the API Client
          example: "An API client used for the authorization_code, refresh_token,\
            \ and client_credentials flows"
          nullable: true
          type: string
        accessTokenValiditySeconds:
          description: The number of seconds an access token generated for this API
            Client is valid for
          example: 750
          format: int32
          type: integer
        refreshTokenValiditySeconds:
          description: The number of seconds a refresh token generated for this API
            Client is valid for
          example: 86400
          format: int32
          type: integer
        redirectUris:
          description: A list of the approved redirect URIs used with the authorization_code
            flow
          example:
          - http://localhost:12345
          items:
            type: string
          nullable: true
          type: array
        grantTypes:
          description: A list of OAuth 2.0 grant types this API Client can be used
            with
          example:
          - AUTHORIZATION_CODE
          - CLIENT_CREDENTIALS
          - REFRESH_TOKEN
          items:
            $ref: '#/components/schemas/GrantType'
          type: array
        accessType:
          $ref: '#/components/schemas/AccessType'
        type:
          $ref: '#/components/schemas/ClientType'
        internal:
          description: An indicator of whether the API Client can be used for requests
            internal to IDN
          example: false
          type: boolean
        enabled:
          description: An indicator of whether the API Client is enabled for use
          example: true
          type: boolean
        strongAuthSupported:
          description: An indicator of whether the API Client supports strong authentication
          example: false
          type: boolean
        claimsSupported:
          description: An indicator of whether the API Client supports the serialization
            of SAML claims when used with the authorization_code flow
          example: false
          type: boolean
        created:
          description: "The date and time, down to the millisecond, when the API Client\
            \ was created"
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: "The date and time, down to the millisecond, when the API Client\
            \ was last updated"
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        secret:
          nullable: true
          type: string
        metadata:
          nullable: true
          type: string
        lastUsed:
          description: "The date and time, down to the millisecond, when this API\
            \ Client was last used to generate an access token. This timestamp does\
            \ not get updated on every API Client usage, but only once a day. This\
            \ property can be useful for identifying which API Clients are no longer\
            \ actively used and can be removed."
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          nullable: true
          type: string
        scope:
          description: Scopes of the API Client.
          example:
          - demo:api-client-scope:first
          - demo:api-client-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
      required:
      - accessTokenValiditySeconds
      - accessType
      - businessName
      - claimsSupported
      - created
      - description
      - enabled
      - grantTypes
      - homepageUrl
      - id
      - internal
      - modified
      - name
      - redirectUris
      - refreshTokenValiditySeconds
      - scope
      - strongAuthSupported
      - type
      type: object
    CreateOAuthClientRequest:
      example:
        internal: false
        businessName: Acme-Solar
        description: "An API client used for the authorization_code, refresh_token,\
          \ and client_credentials flows"
        refreshTokenValiditySeconds: 86400
        type: CONFIDENTIAL
        redirectUris:
        - http://localhost:12345
        enabled: true
        accessType: OFFLINE
        grantTypes:
        - AUTHORIZATION_CODE
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        strongAuthSupported: false
        homepageUrl: http://localhost:12345
        accessTokenValiditySeconds: 750
        scope:
        - demo:api-client-scope:first
        - demo:api-client-scope:second
        name: Demo API Client
        claimsSupported: false
      properties:
        businessName:
          description: The name of the business the API Client should belong to
          example: Acme-Solar
          nullable: true
          type: string
        homepageUrl:
          description: The homepage URL associated with the owner of the API Client
          example: http://localhost:12345
          nullable: true
          type: string
        name:
          description: A human-readable name for the API Client
          example: Demo API Client
          nullable: true
          type: string
        description:
          description: A description of the API Client
          example: "An API client used for the authorization_code, refresh_token,\
            \ and client_credentials flows"
          nullable: true
          type: string
        accessTokenValiditySeconds:
          description: The number of seconds an access token generated for this API
            Client is valid for
          example: 750
          format: int32
          type: integer
        refreshTokenValiditySeconds:
          description: The number of seconds a refresh token generated for this API
            Client is valid for
          example: 86400
          format: int32
          type: integer
        redirectUris:
          description: A list of the approved redirect URIs. Provide one or more URIs
            when assigning the AUTHORIZATION_CODE grant type to a new OAuth Client.
          example:
          - http://localhost:12345
          items:
            type: string
          nullable: true
          type: array
        grantTypes:
          description: A list of OAuth 2.0 grant types this API Client can be used
            with
          example:
          - AUTHORIZATION_CODE
          - CLIENT_CREDENTIALS
          - REFRESH_TOKEN
          items:
            $ref: '#/components/schemas/GrantType'
          nullable: true
          type: array
        accessType:
          $ref: '#/components/schemas/AccessType'
        type:
          $ref: '#/components/schemas/ClientType'
        internal:
          description: An indicator of whether the API Client can be used for requests
            internal within the product.
          example: false
          type: boolean
        enabled:
          description: An indicator of whether the API Client is enabled for use
          example: true
          type: boolean
        strongAuthSupported:
          description: An indicator of whether the API Client supports strong authentication
          example: false
          type: boolean
        claimsSupported:
          description: An indicator of whether the API Client supports the serialization
            of SAML claims when used with the authorization_code flow
          example: false
          type: boolean
        scope:
          description: "Scopes of the API Client. If no scope is specified, the client\
            \ will be created with the default scope \"sp:scopes:all\". This means\
            \ the API Client will have all the rights of the owner who created it."
          example:
          - demo:api-client-scope:first
          - demo:api-client-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
      required:
      - accessTokenValiditySeconds
      - accessType
      - description
      - enabled
      - grantTypes
      - name
      type: object
    CreateOAuthClientResponse:
      example:
        internal: false
        created: 2017-07-11T18:45:37.098Z
        businessName: Acme-Solar
        description: "An API client used for the authorization_code, refresh_token,\
          \ and client_credentials flows"
        secret: 5c32dd9b21adb51c77794d46e71de117a1d0ddb36a7ff941fa28014ab7de2cf3
        refreshTokenValiditySeconds: 86400
        type: CONFIDENTIAL
        redirectUris:
        - http://localhost:12345
        enabled: true
        accessType: OFFLINE
        grantTypes:
        - AUTHORIZATION_CODE
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        strongAuthSupported: false
        homepageUrl: http://localhost:12345
        accessTokenValiditySeconds: 750
        scope:
        - demo:api-client-scope:first
        - demo:api-client-scope:second
        name: Demo API Client
        claimsSupported: false
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
      properties:
        id:
          description: ID of the OAuth client
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        secret:
          description: Secret of the OAuth client (This field is only returned on
            the intial create call.)
          example: 5c32dd9b21adb51c77794d46e71de117a1d0ddb36a7ff941fa28014ab7de2cf3
          type: string
        businessName:
          description: The name of the business the API Client should belong to
          example: Acme-Solar
          type: string
        homepageUrl:
          description: The homepage URL associated with the owner of the API Client
          example: http://localhost:12345
          type: string
        name:
          description: A human-readable name for the API Client
          example: Demo API Client
          type: string
        description:
          description: A description of the API Client
          example: "An API client used for the authorization_code, refresh_token,\
            \ and client_credentials flows"
          type: string
        accessTokenValiditySeconds:
          description: The number of seconds an access token generated for this API
            Client is valid for
          example: 750
          format: int32
          type: integer
        refreshTokenValiditySeconds:
          description: The number of seconds a refresh token generated for this API
            Client is valid for
          example: 86400
          format: int32
          type: integer
        redirectUris:
          description: A list of the approved redirect URIs used with the authorization_code
            flow
          example:
          - http://localhost:12345
          items:
            type: string
          type: array
        grantTypes:
          description: A list of OAuth 2.0 grant types this API Client can be used
            with
          example:
          - AUTHORIZATION_CODE
          - CLIENT_CREDENTIALS
          - REFRESH_TOKEN
          items:
            $ref: '#/components/schemas/GrantType'
          type: array
        accessType:
          $ref: '#/components/schemas/AccessType'
        type:
          $ref: '#/components/schemas/ClientType'
        internal:
          description: An indicator of whether the API Client can be used for requests
            internal to IDN
          example: false
          type: boolean
        enabled:
          description: An indicator of whether the API Client is enabled for use
          example: true
          type: boolean
        strongAuthSupported:
          description: An indicator of whether the API Client supports strong authentication
          example: false
          type: boolean
        claimsSupported:
          description: An indicator of whether the API Client supports the serialization
            of SAML claims when used with the authorization_code flow
          example: false
          type: boolean
        created:
          description: "The date and time, down to the millisecond, when the API Client\
            \ was created"
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: "The date and time, down to the millisecond, when the API Client\
            \ was last updated"
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        scope:
          description: Scopes of the API Client.
          example:
          - demo:api-client-scope:first
          - demo:api-client-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
      required:
      - accessTokenValiditySeconds
      - accessType
      - businessName
      - claimsSupported
      - created
      - description
      - enabled
      - grantTypes
      - homepageUrl
      - id
      - internal
      - modified
      - name
      - redirectUris
      - refreshTokenValiditySeconds
      - scope
      - secret
      - strongAuthSupported
      - type
      type: object
    PasswordSyncGroup:
      example:
        created: 2023-03-16T04:00:00Z
        name: Password Sync Group 1
        modified: 2023-03-16T04:00:00Z
        passwordPolicyId: 2c91808d744ba0ce01746f93b6204501
        id: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
        sourceIds:
        - 2c918084660f45d6016617daa9210584
        - 2c918084660f45d6016617daa9210500
      properties:
        id:
          description: ID of the sync group
          example: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
          type: string
        name:
          description: Name of the sync group
          example: Password Sync Group 1
          type: string
        passwordPolicyId:
          description: ID of the password policy
          example: 2c91808d744ba0ce01746f93b6204501
          type: string
        sourceIds:
          description: List of password managed sources IDs
          example:
          - 2c918084660f45d6016617daa9210584
          - 2c918084660f45d6016617daa9210500
          items:
            type: string
          type: array
        created:
          description: The date and time this sync group was created
          example: 2023-03-16T04:00:00Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: The date and time this sync group was last modified
          example: 2023-03-16T04:00:00Z
          format: date-time
          nullable: true
          type: string
      type: object
    PasswordPolicyV3Dto:
      example:
        validateAgainstAccountName: true
        minLength: 8
        description: Information about the Password Policy
        requireStrongAuthUntrustedGeographies: true
        enablePasswdExpiration: true
        minNumeric: 8
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        validateAgainstAccountId: false
        dateCreated: 2000-01-23T04:56:07.000+00:00
        accountNameMinWordLength: 6
        minUpper: 8
        firstExpirationReminder: 45
        modified: modified
        id: 2c91808e7d976f3b017d9f5ceae440c8
        requireStrongAuthn: true
        useDictionary: false
        minSpecial: 8
        sourceIds:
        - 2c91808382ffee0b01830de154f14034
        - 2f98808382ffee0b01830de154f12134
        passwordExpiration: 8
        maxRepeatedChars: 3
        minCharacterTypes: 5
        minAlpha: 5
        created: created
        useAccountAttributes: false
        accountIdMinWordLength: 4
        minLower: 8
        useIdentityAttributes: false
        defaultPolicy: true
        requireStrongAuthOffNetwork: true
        name: PasswordPolicy Example
        maxLength: 25
      properties:
        id:
          description: The password policy Id.
          example: 2c91808e7d976f3b017d9f5ceae440c8
          type: string
        description:
          description: Description for current password policy.
          example: Information about the Password Policy
          nullable: true
          type: string
        name:
          description: The name of the password policy.
          example: PasswordPolicy Example
          type: string
        dateCreated:
          description: Date the Password Policy was created.
          format: date-time
          type: string
        lastUpdated:
          description: Date the Password Policy was updated.
          format: date-time
          nullable: true
          type: string
        firstExpirationReminder:
          description: The number of days before expiration remaninder.
          example: 45
          format: int64
          type: integer
        accountIdMinWordLength:
          description: The minimun length of account Id. By default is equals to -1.
          example: 4
          format: int64
          type: integer
        accountNameMinWordLength:
          description: The minimun length of account name. By default is equals to
            -1.
          example: 6
          format: int64
          type: integer
        minAlpha:
          description: Maximum alpha. By default is equals to 0.
          example: 5
          format: int64
          type: integer
        minCharacterTypes:
          description: MinCharacterTypes. By default is equals to -1.
          example: 5
          format: int64
          type: integer
        maxLength:
          description: Maximum length of the password.
          example: 25
          format: int64
          type: integer
        minLength:
          description: Minimum length of the password. By default is equals to 0.
          example: 8
          format: int64
          type: integer
        maxRepeatedChars:
          description: Maximum repetition of the same character in the password. By
            default is equals to -1.
          example: 3
          format: int64
          type: integer
        minLower:
          description: Minimum amount of lower case character in the password. By
            default is equals to 0.
          example: 8
          format: int64
          type: integer
        minNumeric:
          description: Minimum amount of numeric characters in the password. By default
            is equals to 0.
          example: 8
          format: int64
          type: integer
        minSpecial:
          description: Minimum amount of special symbols in the password. By default
            is equals to 0.
          example: 8
          format: int64
          type: integer
        minUpper:
          description: Minimum amount of upper case symbols in the password. By default
            is equals to 0.
          example: 8
          format: int64
          type: integer
        passwordExpiration:
          description: Number of days before current password expires. By default
            is equals to 90.
          example: 8
          format: int64
          type: integer
        defaultPolicy:
          default: false
          description: Defines whether this policy is default or not. Default policy
            is created automatically when an org is setup. This field is false by
            default.
          example: true
          type: boolean
        enablePasswdExpiration:
          default: false
          description: Defines whether this policy is enabled to expire or not. This
            field is false by default.
          example: true
          type: boolean
        requireStrongAuthn:
          default: false
          description: Defines whether this policy require strong Auth or not. This
            field is false by default.
          example: true
          type: boolean
        requireStrongAuthOffNetwork:
          default: false
          description: Defines whether this policy require strong Auth of network
            or not. This field is false by default.
          example: true
          type: boolean
        requireStrongAuthUntrustedGeographies:
          default: false
          description: Defines whether this policy require strong Auth for untrusted
            geographies. This field is false by default.
          example: true
          type: boolean
        useAccountAttributes:
          default: false
          description: Defines whether this policy uses account attributes or not.
            This field is false by default.
          example: false
          type: boolean
        useDictionary:
          default: false
          description: Defines whether this policy uses dictionary or not. This field
            is false by default.
          example: false
          type: boolean
        useIdentityAttributes:
          default: false
          description: Defines whether this policy uses identity attributes or not.
            This field is false by default.
          example: false
          type: boolean
        validateAgainstAccountId:
          default: false
          description: Defines whether this policy validate against account id or
            not. This field is false by default.
          example: false
          type: boolean
        validateAgainstAccountName:
          default: false
          description: Defines whether this policy validate against account name or
            not. This field is false by default.
          example: true
          type: boolean
        created:
          nullable: true
          type: string
        modified:
          nullable: true
          type: string
        sourceIds:
          description: List of sources IDs managed by this password policy.
          example:
          - 2c91808382ffee0b01830de154f14034
          - 2f98808382ffee0b01830de154f12134
          items:
            type: string
          type: array
      type: object
    GetPersonalAccessTokenResponse:
      example:
        owner:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        lastUsed: 2017-07-11T18:45:37.098Z
        created: 2017-07-11T18:45:37.098Z
        managed: false
        scope:
        - demo:personal-access-token-scope:first
        - demo:personal-access-token-scope:second
        name: NodeJS Integration
        id: 86f1dc6fe8f54414950454cbb11278fa
      properties:
        id:
          description: The ID of the personal access token (to be used as the username
            for Basic Auth).
          example: 86f1dc6fe8f54414950454cbb11278fa
          type: string
        name:
          description: The name of the personal access token. Cannot be the same as
            other personal access tokens owned by a user.
          example: NodeJS Integration
          type: string
        scope:
          description: Scopes of the personal  access token.
          example:
          - demo:personal-access-token-scope:first
          - demo:personal-access-token-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
        owner:
          $ref: '#/components/schemas/PatOwner'
        created:
          description: "The date and time, down to the millisecond, when this personal\
            \ access token was created."
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        lastUsed:
          description: "The date and time, down to the millisecond, when this personal\
            \ access token was last used to generate an access token. This timestamp\
            \ does not get updated on every PAT usage, but only once a day. This property\
            \ can be useful for identifying which PATs are no longer actively used\
            \ and can be removed."
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          nullable: true
          type: string
        managed:
          default: false
          description: "If true, this token is managed by the SailPoint platform,\
            \ and is not visible in the user interface. For example, Workflows will\
            \ create managed personal access tokens for users who create workflows."
          example: false
          type: boolean
      required:
      - created
      - id
      - name
      - owner
      - scope
      type: object
    CreatePersonalAccessTokenRequest:
      description: Object for specifying the name of a personal access token to create
      example:
        scope:
        - demo:personal-access-token-scope:first
        - demo:personal-access-token-scope:second
        accessTokenValiditySeconds: 36900
        name: NodeJS Integration
      properties:
        name:
          description: The name of the personal access token (PAT) to be created.
            Cannot be the same as another PAT owned by the user for whom this PAT
            is being created.
          example: NodeJS Integration
          type: string
        scope:
          description: "Scopes of the personal  access token. If no scope is specified,\
            \ the token will be created with the default scope \"sp:scopes:all\".\
            \ This means the personal access token will have all the rights of the\
            \ owner who created it."
          example:
          - demo:personal-access-token-scope:first
          - demo:personal-access-token-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
        accessTokenValiditySeconds:
          description: "Number of seconds an access token is valid when generated\
            \ using this Personal Access Token. If no value is specified, the token\
            \ will be created with the default value of 43200."
          example: 36900
          format: int32
          items:
            default: 43200
            format: int32
            type: integer
          maximum: 43200
          minimum: 15
          type: integer
      required:
      - name
      type: object
    CreatePersonalAccessTokenResponse:
      example:
        owner:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        created: 2017-07-11T18:45:37.098Z
        scope:
        - demo:personal-access-token-scope:first
        - demo:personal-access-token-scope:second
        accessTokenValiditySeconds: 36900
        name: NodeJS Integration
        id: 86f1dc6fe8f54414950454cbb11278fa
        secret: 1d1bef2b9f426383447f64f69349fc7cac176042578d205c256ba3f37c59adb9
      properties:
        id:
          description: The ID of the personal access token (to be used as the username
            for Basic Auth).
          example: 86f1dc6fe8f54414950454cbb11278fa
          type: string
        secret:
          description: The secret of the personal access token (to be used as the
            password for Basic Auth).
          example: 1d1bef2b9f426383447f64f69349fc7cac176042578d205c256ba3f37c59adb9
          type: string
        scope:
          description: Scopes of the personal  access token.
          example:
          - demo:personal-access-token-scope:first
          - demo:personal-access-token-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
        name:
          description: The name of the personal access token. Cannot be the same as
            other personal access tokens owned by a user.
          example: NodeJS Integration
          type: string
        owner:
          $ref: '#/components/schemas/PatOwner'
        created:
          description: "The date and time, down to the millisecond, when this personal\
            \ access token was created."
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        accessTokenValiditySeconds:
          description: "Number of seconds an access token is valid when generated\
            \ using this Personal Access Token. If no value is specified, the token\
            \ will be created with the default value of 43200."
          example: 36900
          format: int32
          items:
            default: 43200
            format: int32
            type: integer
          type: integer
      required:
      - accessTokenValiditySeconds
      - created
      - id
      - name
      - owner
      - scope
      - secret
      type: object
    PublicIdentity:
      description: Details about a public identity
      example:
        manager:
          name: Thomas Edison
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        name: Alison Ferguso
        alias: alison.ferguso
        attributes:
        - name: Country
          value: US
          key: country
        - name: Country
          value: US
          key: country
        id: 2c9180857182305e0171993735622948
        identityState: ACTIVE
        email: alison.ferguso@acme-solar.com
        status: Active
      properties:
        id:
          description: Identity id
          example: 2c9180857182305e0171993735622948
          type: string
        name:
          description: Human-readable display name of identity.
          example: Alison Ferguso
          type: string
        alias:
          description: Alternate unique identifier for the identity.
          example: alison.ferguso
          type: string
        email:
          description: Email address of identity.
          example: alison.ferguso@acme-solar.com
          nullable: true
          type: string
        status:
          description: The lifecycle status for the identity
          example: Active
          nullable: true
          type: string
        identityState:
          description: |
            The current state of the identity, which determines how Identity Security Cloud interacts with the identity.
            An identity that is Active will be included identity picklists in Request Center, identity processing, and more.
            Identities that are Inactive will be excluded from these features.
          enum:
          - ACTIVE
          - INACTIVE_SHORT_TERM
          - INACTIVE_LONG_TERM
          - null
          example: ACTIVE
          nullable: true
          type: string
        manager:
          $ref: '#/components/schemas/IdentityReference'
        attributes:
          description: The public identity attributes of the identity
          items:
            $ref: '#/components/schemas/PublicIdentity_attributes_inner'
          type: array
      title: Public Identity
      type: object
    PublicIdentityConfig:
      description: Details of up to 5 Identity attributes that will be publicly accessible
        for all Identities to anyone in the org.
      example:
        modified: 2018-06-25T20:22:28.104Z
        attributes:
        - name: Country
          key: country
        - name: Country
          key: country
        modifiedBy:
          name: Thomas Edison
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
      properties:
        attributes:
          description: Up to 5 identity attributes that will be available to everyone
            in the org for all users in the org.
          items:
            $ref: '#/components/schemas/PublicIdentityAttributeConfig'
          type: array
        modified:
          description: When this configuration was last modified.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        modifiedBy:
          $ref: '#/components/schemas/IdentityReference'
      type: object
    Role:
      description: A Role
      example:
        owner:
          name: support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        entitlements:
        - name: "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local"
          id: 2c91809773dee32014e13e122092014e
          type: ENTITLEMENT
        - name: "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local"
          id: 2c91809773dee32014e13e122092014e
          type: ENTITLEMENT
        dimensional: false
        created: 2021-03-01T22:32:58.104Z
        dimensionRefs:
        - name: Role 2
          id: 2c91808568c529c60168cca6f90c1313
          type: DIMENSION
        - name: Role 2
          id: 2c91808568c529c60168cca6f90c1313
          type: DIMENSION
        description: Urna amet cursus pellentesque nisl orci maximus lorem nisl euismod
          fusce morbi placerat adipiscing maecenas nisi tristique et metus et lacus
          sed morbi nunc nisl maximus magna arcu varius sollicitudin elementum enim
          maecenas nisi id ipsum tempus fusce diam ipsum tortor.
        membership:
          identities:
          - aliasName: t.edison
            name: Thomas Edison
            id: 2c9180a46faadee4016fb4e018c20639
            type: IDENTITY
          - aliasName: t.edison
            name: Thomas Edison
            id: 2c9180a46faadee4016fb4e018c20639
            type: IDENTITY
          criteria:
            stringValue: carlee.cert1c9f9b6fd@mailinator.com
            children:
            - stringValue: carlee.cert1c9f9b6fd@mailinator.com
              children:
              - stringValue: carlee.cert1c9f9b6fd@mailinator.com
                operation: EQUALS
                key:
                  sourceId: 2c9180867427f3a301745aec18211519
                  property: attribute.email
                  type: ACCOUNT
              - stringValue: carlee.cert1c9f9b6fd@mailinator.com
                operation: EQUALS
                key:
                  sourceId: 2c9180867427f3a301745aec18211519
                  property: attribute.email
                  type: ACCOUNT
              operation: EQUALS
              key:
                sourceId: 2c9180867427f3a301745aec18211519
                property: attribute.email
                type: ACCOUNT
            - stringValue: carlee.cert1c9f9b6fd@mailinator.com
              children:
              - stringValue: carlee.cert1c9f9b6fd@mailinator.com
                operation: EQUALS
                key:
                  sourceId: 2c9180867427f3a301745aec18211519
                  property: attribute.email
                  type: ACCOUNT
              - stringValue: carlee.cert1c9f9b6fd@mailinator.com
                operation: EQUALS
                key:
                  sourceId: 2c9180867427f3a301745aec18211519
                  property: attribute.email
                  type: ACCOUNT
              operation: EQUALS
              key:
                sourceId: 2c9180867427f3a301745aec18211519
                property: attribute.email
                type: ACCOUNT
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          type: IDENTITY_LIST
        enabled: true
        revocationRequestConfig:
          commentsRequired: false
          approvalSchemes:
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          denialCommentsRequired: false
        segments:
        - f7b1b8a3-5fed-4fd4-ad29-82014e137e19
        - 29cb6c06-1da8-43ea-8be4-b3125f248f2a
        legacyMembershipInfo:
          type: IDENTITY_LIST
        accessRequestConfig:
          commentsRequired: true
          reauthorizationRequired: true
          approvalSchemes:
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          denialCommentsRequired: true
        accessProfiles:
        - name: Access Profile 2567
          id: ff808081751e6e129f1518161919ecca
          type: ACCESS_PROFILE
        - name: Access Profile 2567
          id: ff808081751e6e129f1518161919ecca
          type: ACCESS_PROFILE
        name: Role 2567
        modified: 2021-03-02T20:22:28.104Z
        accessModelMetadata:
          attributes:
          - key: iscPrivacy
            name: Privacy
            multiselect: false
            status: active
            type: governance
            objectTypes:
            - all
            description: Specifies the level of privacy associated with an access
              item.
            values:
            - value: public
              name: Public
              status: active
        id: 2c918086749d78830174a1a40e121518
        requestable: true
      properties:
        id:
          description: "The id of the Role. This field must be left null when creating\
            \ an Role, otherwise a 400 Bad Request error will result."
          example: 2c918086749d78830174a1a40e121518
          type: string
        name:
          description: The human-readable display name of the Role
          example: Role 2567
          maxLength: 128
          type: string
        created:
          description: Date the Role was created
          example: 2021-03-01T22:32:58.104Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Date the Role was last modified.
          example: 2021-03-02T20:22:28.104Z
          format: date-time
          readOnly: true
          type: string
        description:
          description: A human-readable description of the Role
          example: Urna amet cursus pellentesque nisl orci maximus lorem nisl euismod
            fusce morbi placerat adipiscing maecenas nisi tristique et metus et lacus
            sed morbi nunc nisl maximus magna arcu varius sollicitudin elementum enim
            maecenas nisi id ipsum tempus fusce diam ipsum tortor.
          nullable: true
          type: string
        owner:
          $ref: '#/components/schemas/OwnerReference'
        accessProfiles:
          items:
            $ref: '#/components/schemas/AccessProfileRef'
          nullable: true
          type: array
        entitlements:
          items:
            $ref: '#/components/schemas/EntitlementRef'
          type: array
        membership:
          $ref: '#/components/schemas/RoleMembershipSelector'
        legacyMembershipInfo:
          additionalProperties: true
          description: "This field is not directly modifiable and is generally expected\
            \ to be *null*. In very rare instances, some Roles may have been created\
            \ using membership selection criteria that are no longer fully supported.\
            \ While these Roles will still work, they should be migrated to STANDARD\
            \ or IDENTITY_LIST selection criteria. This field exists for informational\
            \ purposes as an aid to such migration."
          example:
            type: IDENTITY_LIST
          nullable: true
          type: object
        enabled:
          default: false
          description: Whether the Role is enabled or not.
          example: true
          type: boolean
        requestable:
          default: false
          description: Whether the Role can be the target of access requests.
          example: true
          type: boolean
        accessRequestConfig:
          $ref: '#/components/schemas/RequestabilityForRole'
        revocationRequestConfig:
          $ref: '#/components/schemas/RevocabilityForRole'
        segments:
          description: "List of IDs of segments, if any, to which this Role is assigned."
          example:
          - f7b1b8a3-5fed-4fd4-ad29-82014e137e19
          - 29cb6c06-1da8-43ea-8be4-b3125f248f2a
          items:
            type: string
          nullable: true
          type: array
        dimensional:
          default: false
          description: Whether the Role is dimensional.
          nullable: true
          type: boolean
        dimensionRefs:
          description: List of references to dimensions to which this Role is assigned.
            This field is only relevant if the Role is dimensional.
          items:
            $ref: '#/components/schemas/DimensionRef'
          nullable: true
          type: array
        accessModelMetadata:
          $ref: '#/components/schemas/AttributeDTOList'
      required:
      - name
      - owner
      type: object
    RoleBulkDeleteRequest:
      example:
        roleIds:
        - 2c9180847812e0b1017817051919ecca
        - 2c9180887812e0b201781e129f151816
      properties:
        roleIds:
          description: List of IDs of Roles to be deleted.
          example:
          - 2c9180847812e0b1017817051919ecca
          - 2c9180887812e0b201781e129f151816
          items:
            type: string
          type: array
      required:
      - roleIds
      type: object
    TaskResultDto:
      description: Task result.
      example:
        name: name
        id: 464ae7bf791e49fdb74606a2e4a89635
        type: TASK_RESULT
      properties:
        type:
          description: Task result DTO type.
          enum:
          - TASK_RESULT
          example: TASK_RESULT
          type: string
        id:
          description: Task result ID.
          example: 464ae7bf791e49fdb74606a2e4a89635
          type: string
        name:
          description: Task result display name.
          nullable: true
          type: string
          example: null
      type: object
    RoleIdentity:
      description: A subset of the fields of an Identity which is a member of a Role.
      example:
        aliasName: t.edison
        name: Thomas Edison
        roleAssignmentSource: ACCESS_REQUEST
        id: 2c9180a46faadee4016fb4e018c20639
        email: t.edison@identitynow.com
      properties:
        id:
          description: The ID of the Identity
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        aliasName:
          description: The alias / username of the Identity
          example: t.edison
          type: string
        name:
          description: The human-readable display name of the Identity
          example: Thomas Edison
          type: string
        email:
          description: Email address of the Identity
          example: t.edison@identitynow.com
          type: string
        roleAssignmentSource:
          $ref: '#/components/schemas/RoleAssignmentSourceType'
      type: object
    SavedSearchName:
      properties:
        name:
          description: |
            The name of the saved search.
          example: Disabled accounts
          type: string
        description:
          description: |
            The description of the saved search.
          example: Disabled accounts
          nullable: true
          type: string
      type: object
    SavedSearchDetail:
      properties:
        created:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        indices:
          description: |
            The names of the Elasticsearch indices in which to search.
          example:
          - identities
          items:
            $ref: '#/components/schemas/Index'
          type: array
        columns:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Column'
            type: array
          description: |
            The columns to be returned (specifies the order in which they will be presented) for each document type.

            The currently supported document types are: _accessprofile_, _accountactivity_, _account_, _aggregation_, _entitlement_, _event_, _identity_, and _role_.
          example:
            identity:
            - field: displayName
              header: Display Name
            - field: e-mail
              header: Work Email
          type: object
        query:
          description: |
            The search query using Elasticsearch [Query String Query](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string) syntax from the Query DSL.
          example: '@accounts(disabled:true)'
          type: string
        fields:
          description: |
            The fields to be searched against in a multi-field query.
          example:
          - disabled
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          additionalProperties:
            items:
              type: string
            type: array
          description: |
            Sort by index. This takes precedence over the `sort` property.
          example:
            identity:
            - lastName
            - firstName
            role:
            - name
          nullable: true
          type: object
        sort:
          description: |
            The fields to be used to sort the search results.
          example:
          - displayName
          items:
            type: string
          nullable: true
          type: array
        filters:
          $ref: '#/components/schemas/SavedSearchDetail_filters'
      required:
      - indices
      - query
      type: object
    SearchArguments:
      example:
        owner: ""
        recipients:
        - id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        - id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        scheduleId: 7a724640-0c17-4ce9-a8c3-4a89738459c8
      properties:
        scheduleId:
          description: |
            The ID of the scheduled search that triggered the saved search execution.
          example: 7a724640-0c17-4ce9-a8c3-4a89738459c8
          type: string
        owner:
          allOf:
          - $ref: '#/components/schemas/TypedReference'
          description: |
            The owner of the scheduled search being tested.
        recipients:
          description: |
            The email recipients of the scheduled search being tested.
          items:
            $ref: '#/components/schemas/TypedReference'
          type: array
      type: object
    ScheduledSearchName:
      properties:
        name:
          description: |
            The name of the scheduled search.
          example: Daily disabled accounts
          nullable: true
          type: string
        description:
          description: |
            The description of the scheduled search.
          example: Daily disabled accounts
          nullable: true
          type: string
      type: object
    SearchSchedule:
      properties:
        savedSearchId:
          description: The ID of the saved search that will be executed.
          example: 554f1511-f0a1-4744-ab14-599514d3e57c
          type: string
        created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date the scheduled search was initially created.
          readOnly: true
        modified:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The last date the scheduled search was modified.
          readOnly: true
        schedule:
          $ref: '#/components/schemas/Schedule_1'
        recipients:
          description: A list of identities that should receive the scheduled search
            report via email.
          items:
            $ref: '#/components/schemas/SearchSchedule_recipients_inner'
          type: array
        enabled:
          default: false
          description: |
            Indicates if the scheduled search is enabled.
          example: false
          type: boolean
        emailEmptyResults:
          default: false
          description: |
            Indicates if email generation should occur when search returns no results.
          example: false
          type: boolean
        displayQueryDetails:
          default: false
          description: |
            Indicates if the generated email should include the query and search results preview (which could include PII).
          example: false
          type: boolean
      required:
      - recipients
      - savedSearchId
      - schedule
      type: object
    TypedReference:
      description: |
        A typed reference to the object.
      example:
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: |
            The id of the object.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
      required:
      - id
      - type
      type: object
    Search:
      example:
        queryDsl:
          match:
            name: john.doe
        aggregationType: DSL
        aggregationsVersion: ""
        query:
          query: name:a*
          timeZone: America/Chicago
          fields: "[firstName,lastName,email]"
          innerHit:
            query: source.name:\"Active Directory\"
            type: access
        aggregationsDsl: {}
        sort:
        - displayName
        - +id
        filters: {}
        queryVersion: ""
        queryType: SAILPOINT
        includeNested: true
        queryResultFilter:
          excludes:
          - stacktrace
          includes:
          - name
          - displayName
        indices:
        - identities
        typeAheadQuery:
          field: source.name
          size: 100
          query: Work
          sortByValue: true
          nestedType: access
          sort: asc
          maxExpansions: 10
        textQuery:
          contains: true
          terms:
          - The quick brown fox
          - "3141592"
          - "7"
          matchAny: false
          fields:
          - displayName
          - employeeNumber
          - roleCount
        searchAfter:
        - John Doe
        - 2c91808375d8e80a0175e1f88a575221
        aggregations:
          filter:
            field: access.type
            name: Entitlements
            type: TERM
            value: ENTITLEMENT
          bucket:
            field: attributes.city
            size: 100
            minDocCount: 2
            name: Identity Locations
            type: TERMS
          metric:
            field: '@access.name'
            name: Access Name Count
            type: COUNT
          subAggregation:
            filter:
              field: access.type
              name: Entitlements
              type: TERM
              value: ENTITLEMENT
            bucket:
              field: attributes.city
              size: 100
              minDocCount: 2
              name: Identity Locations
              type: TERMS
            metric:
              field: '@access.name'
              name: Access Name Count
              type: COUNT
            subAggregation:
              filter:
                field: access.type
                name: Entitlements
                type: TERM
                value: ENTITLEMENT
              bucket:
                field: attributes.city
                size: 100
                minDocCount: 2
                name: Identity Locations
                type: TERMS
              metric:
                field: '@access.name'
                name: Access Name Count
                type: COUNT
              nested:
                name: id
                type: access
            nested:
              name: id
              type: access
          nested:
            name: id
            type: access
      properties:
        indices:
          description: "The names of the Elasticsearch indices in which to search.\
            \ If none are provided, then all indices will be searched."
          example:
          - identities
          externalDocs:
            description: Learn more about search indices here.
            url: https://documentation.sailpoint.com/saas/help/search/searchable-fields.html
          items:
            $ref: '#/components/schemas/Index'
          type: array
        queryType:
          $ref: '#/components/schemas/QueryType'
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/ElasticVersion'
          - description: |-
              The version of the query object.
              This version number will map to the version of Elasticsearch for the query strings and objects being used.
            type: string
        query:
          $ref: '#/components/schemas/Query'
        queryDsl:
          description: "The search query using the Elasticsearch [Query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.10/query-dsl.html)\
            \ syntax."
          example:
            match:
              name: john.doe
          type: object
        textQuery:
          $ref: '#/components/schemas/TextQuery'
        typeAheadQuery:
          $ref: '#/components/schemas/TypeAheadQuery'
        includeNested:
          default: true
          description: Indicates whether nested objects from returned search results
            should be included.
          example: true
          type: boolean
        queryResultFilter:
          $ref: '#/components/schemas/QueryResultFilter'
        aggregationType:
          $ref: '#/components/schemas/AggregationType'
        aggregationsVersion:
          allOf:
          - $ref: '#/components/schemas/ElasticVersion'
          - description: |-
              The version of the language being used for aggregation queries.
              This version number will map to the version of Elasticsearch for the aggregation query object.
            type: string
        aggregationsDsl:
          description: "The aggregation search query using Elasticsearch [Aggregations](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/search-aggregations.html)\
            \ syntax."
          example: {}
          type: object
        aggregations:
          $ref: '#/components/schemas/SearchAggregationSpecification'
        sort:
          description: The fields to be used to sort the search results. Use + or
            - to specify the sort direction.
          example:
          - displayName
          - +id
          items:
            type: string
          type: array
        searchAfter:
          description: "Used to begin the search window at the values specified.\n\
            This parameter consists of the last values of the sorted fields in the\
            \ current record set.\nThis is used to expand the Elasticsearch limit\
            \ of 10K records by shifting the 10K window to begin at this value.\n\
            It is recommended that you always include the ID of the object in addition\
            \ to any other fields on this parameter in order to ensure you don't get\
            \ duplicate results while paging.\nFor example, when searching for identities,\
            \ if you are sorting by displayName you will also want to include ID,\
            \ for example [\"displayName\", \"id\"]. \nIf the last identity ID in\
            \ the search result is 2c91808375d8e80a0175e1f88a575221 and the last displayName\
            \ is \"John Doe\", then using that displayName and ID will start a new\
            \ search after this identity.\nThe searchAfter value will look like [\"\
            John Doe\",\"2c91808375d8e80a0175e1f88a575221\"]"
          example:
          - John Doe
          - 2c91808375d8e80a0175e1f88a575221
          items:
            type: string
          type: array
        filters:
          additionalProperties:
            $ref: '#/components/schemas/Filter'
          description: The filters to be applied for each filtered field name.
          example: {}
          type: object
      type: object
    SearchDocuments:
      type: object
    AggregationResult:
      example:
        hits:
        - null
        - null
        aggregations:
          Identity Locations:
            buckets:
            - key: Austin
              doc_count: 109
            - key: London
              doc_count: 64
            - key: San Jose
              doc_count: 27
            - key: Brussels
              doc_count: 26
            - key: Sao Paulo
              doc_count: 24
            - key: Munich
              doc_count: 23
            - key: Singapore
              doc_count: 22
            - key: Tokyo
              doc_count: 20
            - key: Taipei
              doc_count: 16
      properties:
        aggregations:
          description: |
            The document containing the results of the aggregation. This document is controlled by Elasticsearch and depends on the type of aggregation query that is run.

            See Elasticsearch [Aggregations](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/search-aggregations.html) documentation for information.
          example:
            Identity Locations:
              buckets:
              - key: Austin
                doc_count: 109
              - key: London
                doc_count: 64
              - key: San Jose
                doc_count: 27
              - key: Brussels
                doc_count: 26
              - key: Sao Paulo
                doc_count: 24
              - key: Munich
                doc_count: 23
              - key: Singapore
                doc_count: 22
              - key: Tokyo
                doc_count: 20
              - key: Taipei
                doc_count: 16
          type: object
        hits:
          description: |
            The results of the aggregation search query.
          items:
            $ref: '#/components/schemas/SearchDocuments'
          type: array
      type: object
    AggregationResult-csv:
      description: |
        If the *Accept:text/csv* header is specified and the *aggregationType* parameter in the request body is *SAILPOINT*,

        the aggregation result will be returned as a CSV document.
      example: "[Identity Locations,Count, Munich,23, Brussels,26, Singapore,22, Tokyo,20,\
        \ Taipei,16, London,64, Austin,109, Sao Paulo,24, San Jose,27]"
      type: string
    Segment:
      example:
        owner:
          name: support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        created: 2020-01-01T00:00:00Z
        visibilityCriteria:
          expression:
            children: []
            attribute: location
            value:
              type: STRING
              value: Austin
            operator: EQUALS
        name: segment-xyz
        modified: 2020-01-01T00:00:00Z
        description: This segment represents xyz
        active: true
        id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
      properties:
        id:
          description: The segment's ID.
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: string
        name:
          description: The segment's business name.
          example: segment-xyz
          type: string
        created:
          description: The time when the segment is created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: The time when the segment is modified.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
        description:
          description: The segment's optional description.
          example: This segment represents xyz
          type: string
        owner:
          $ref: '#/components/schemas/OwnerReferenceSegments'
        visibilityCriteria:
          $ref: '#/components/schemas/Segment_visibilityCriteria'
        active:
          default: false
          description: This boolean indicates whether the segment is currently active.
            Inactive segments have no effect.
          example: true
          type: boolean
      type: object
    PasswordInfoQueryDTO:
      example:
        sourceName: My-AD
        userName: Abby.Smith
      properties:
        userName:
          description: The login name of the user
          example: Abby.Smith
          type: string
        sourceName:
          description: The display name of the source
          example: My-AD
          type: string
      type: object
    PasswordInfo:
      example:
        sourceId: 2c918083746f642c01746f990884012a
        identityId: 2c918085744fec4301746f9a5bce4605
        policies:
        - passwordRepeatedChar is 3
        - passwordMinAlpha is 1
        - passwordMinLength is 5
        - passwordMinNumeric is 1
        publicKey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuGFkWi2J75TztpbaPKd36bJnIB3J8gZ6UcoS9oSDYsqBzPpTsfZXYaEf4Y4BKGgJIXmE/lwhwuj7mU1itdZ2qTSNFtnXA8Fn75c3UUkk+h+wdZbkuSmqlsJo3R1OnJkwkJggcAy9Jvk9jlcrNLWorpQ1w9raUvxtvfgkSdq153KxotenQ1HciSyZ0nA/Kw0UaucLnho8xdRowZs11afXGXA9IT9H6D8T6zUdtSxm0nAyH+mluma5LdTfaM50W3l/L8q56Vrqmx2pZIiwdx/0+g3Y++jV70zom0ZBkC1MmSoLMrQYG5OICNjr72f78B2PaGXfarQHqARLjKpMVt9YIQIDAQAB
        accounts:
        - accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          accountName: Abby.Smith
        - accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          accountName: Abby.Smith
        publicKeyId: N2M1OTJiMGEtMDJlZS00ZWU3LTkyYTEtNjA5YmI5NWE3ZWVh
      properties:
        identityId:
          description: Identity ID
          example: 2c918085744fec4301746f9a5bce4605
          type: string
        sourceId:
          description: source ID
          example: 2c918083746f642c01746f990884012a
          type: string
        publicKeyId:
          description: public key ID
          example: N2M1OTJiMGEtMDJlZS00ZWU3LTkyYTEtNjA5YmI5NWE3ZWVh
          type: string
        publicKey:
          description: User's public key with Base64 encoding
          example: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuGFkWi2J75TztpbaPKd36bJnIB3J8gZ6UcoS9oSDYsqBzPpTsfZXYaEf4Y4BKGgJIXmE/lwhwuj7mU1itdZ2qTSNFtnXA8Fn75c3UUkk+h+wdZbkuSmqlsJo3R1OnJkwkJggcAy9Jvk9jlcrNLWorpQ1w9raUvxtvfgkSdq153KxotenQ1HciSyZ0nA/Kw0UaucLnho8xdRowZs11afXGXA9IT9H6D8T6zUdtSxm0nAyH+mluma5LdTfaM50W3l/L8q56Vrqmx2pZIiwdx/0+g3Y++jV70zom0ZBkC1MmSoLMrQYG5OICNjr72f78B2PaGXfarQHqARLjKpMVt9YIQIDAQAB
          type: string
        accounts:
          description: Account info related to queried identity and source
          items:
            $ref: '#/components/schemas/PasswordInfoAccount'
          type: array
        policies:
          description: Password constraints
          example:
          - passwordRepeatedChar is 3
          - passwordMinAlpha is 1
          - passwordMinLength is 5
          - passwordMinNumeric is 1
          items:
            type: string
          type: array
      type: object
    PasswordChangeRequest:
      example:
        sourceId: 8a807d4c73c545510173c545d4b60246
        accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
        identityId: 8a807d4c73c545510173c545f0a002ff
        publicKeyId: YWQ2NjQ4MTItZjY0NC00MWExLWFjMjktOGNmMzU3Y2VlNjk2
        encryptedPassword: XzN+YwKgr2C+InkMYFMBG3UtjMEw5ZIql/XFlXo8cJNeslmkplx6vn4kd4/43IF9STBk5RnzR6XmjpEO+FwHDoiBwYZAkAZK/Iswxk4OdybG6Y4MStJCOCiK8osKr35IMMSV/mbO4wAeltoCk7daTWzTGLiI6UaT5tf+F2EgdjJZ7YqM8W8r7aUWsm3p2Xt01Y46ZRx0QaM91QruiIx2rECFT2pUO0wr+7oQ77jypATyGWRtADsu3YcvCk/6U5MqCnXMzKBcRas7NnZdSL/d5H1GglVGz3VLPMaivG4/oL4chOMmFCRl/zVsGxZ9RhN8rxsRGFFKn+rhExTi+bax3A==
      properties:
        identityId:
          description: The identity ID that requested the password change
          example: 8a807d4c73c545510173c545f0a002ff
          type: string
        encryptedPassword:
          description: The RSA encrypted password
          example: XzN+YwKgr2C+InkMYFMBG3UtjMEw5ZIql/XFlXo8cJNeslmkplx6vn4kd4/43IF9STBk5RnzR6XmjpEO+FwHDoiBwYZAkAZK/Iswxk4OdybG6Y4MStJCOCiK8osKr35IMMSV/mbO4wAeltoCk7daTWzTGLiI6UaT5tf+F2EgdjJZ7YqM8W8r7aUWsm3p2Xt01Y46ZRx0QaM91QruiIx2rECFT2pUO0wr+7oQ77jypATyGWRtADsu3YcvCk/6U5MqCnXMzKBcRas7NnZdSL/d5H1GglVGz3VLPMaivG4/oL4chOMmFCRl/zVsGxZ9RhN8rxsRGFFKn+rhExTi+bax3A==
          type: string
        publicKeyId:
          description: The encryption key ID
          example: YWQ2NjQ4MTItZjY0NC00MWExLWFjMjktOGNmMzU3Y2VlNjk2
          type: string
        accountId:
          description: Account ID of the account This is specified per account schema
            in the source configuration. It is used to distinguish accounts. More
            info can be found here https://community.sailpoint.com/t5/IdentityNow-Connectors/How-do-I-designate-an-account-attribute-as-the-Account-ID-for-a/ta-p/80350
          example: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          type: string
        sourceId:
          description: The ID of the source for which identity is requesting the password
            change
          example: 8a807d4c73c545510173c545d4b60246
          type: string
      type: object
    PasswordChangeResponse:
      example:
        requestId: 089899f13a8f4da7824996191587bab9
        state: IN_PROGRESS
      properties:
        requestId:
          description: The password change request ID
          example: 089899f13a8f4da7824996191587bab9
          nullable: true
          type: string
        state:
          description: Password change state
          enum:
          - IN_PROGRESS
          - FINISHED
          - FAILED
          example: IN_PROGRESS
          type: string
      type: object
    PasswordStatus:
      example:
        requestId: 089899f13a8f4da7824996191587bab9
        state: IN_PROGRESS
        errors:
        - The password change payload is invalid
        sourceIds:
        - 2c918083746f642c01746f990884012a
      properties:
        requestId:
          description: The password change request ID
          example: 089899f13a8f4da7824996191587bab9
          nullable: true
          type: string
        state:
          description: Password change state
          enum:
          - IN_PROGRESS
          - FINISHED
          - FAILED
          example: IN_PROGRESS
          type: string
        errors:
          description: The errors during the password change request
          example:
          - The password change payload is invalid
          items:
            type: string
          type: array
        sourceIds:
          description: List of source IDs in the password change request
          example:
          - 2c918083746f642c01746f990884012a
          items:
            type: string
          type: array
      type: object
    PasswordOrgConfig:
      example:
        digitTokenLength: 9
        digitTokenEnabled: true
        digitTokenDurationMinutes: 10
        customInstructionsEnabled: true
      properties:
        customInstructionsEnabled:
          default: false
          description: Indicator whether custom password instructions feature is enabled.
            The default value is false.
          example: true
          type: boolean
        digitTokenEnabled:
          default: false
          description: Indicator whether "digit token" feature is enabled. The default
            value is false.
          example: true
          type: boolean
        digitTokenDurationMinutes:
          default: 5
          description: The duration of "digit token" in minutes. The default value
            is 5.
          example: 10
          format: int32
          maximum: 60
          minimum: 1
          type: integer
        digitTokenLength:
          default: 6
          description: The length of "digit token". The default value is 6.
          example: 9
          format: int32
          maximum: 18
          minimum: 6
          type: integer
      type: object
    ReportResults:
      description: Details about report result or current state.
      example:
        reportType: IDENTITIES_DETAILS
        duration: 342
        availableFormats:
        - CSV
        created: 2000-01-23T04:56:07.000+00:00
        taskDefName: Identities Details Report
        id: a248c16fe22222b2bd49615481311111
        rows: 37
        status: SUCCESS
      properties:
        reportType:
          description: Use this property to define what report should be processed
            in the RDE service.
          enum:
          - ACCOUNTS
          - IDENTITIES_DETAILS
          - IDENTITIES
          - IDENTITY_PROFILE_IDENTITY_ERROR
          - ORPHAN_IDENTITIES
          - SEARCH_EXPORT
          - UNCORRELATED_ACCOUNTS
          example: IDENTITIES_DETAILS
          type: string
        taskDefName:
          description: Name of the task definition which is started to process requesting
            report. Usually the same as report name
          example: Identities Details Report
          type: string
        id:
          description: Unique task definition identifier.
          example: a248c16fe22222b2bd49615481311111
          type: string
        created:
          description: Report processing start date
          format: date-time
          type: string
        status:
          description: Report current state or result status.
          enum:
          - SUCCESS
          - FAILURE
          - WARNING
          - TERMINATED
          example: SUCCESS
          type: string
        duration:
          description: Report processing time in ms.
          example: 342
          format: int64
          type: integer
        rows:
          description: Report size in rows.
          example: 37
          format: int64
          type: integer
        availableFormats:
          description: "Output report file formats. This are formats for calling get\
            \ endpoint as a query parameter 'fileFormat'.  In case report won't have\
            \ this argument there will be ['CSV', 'PDF'] as default."
          example:
          - CSV
          items:
            enum:
            - CSV
            - PDF
            type: string
          type: array
      type: object
    ReportDetails:
      description: Details about report to be processed.
      example:
        reportType: ACCOUNTS
        arguments:
          application: 2c9180897e7742b2017e781782f705b9
          sourceName: Active Directory
      properties:
        reportType:
          description: Use this property to define what report should be processed
            in the RDE service.
          enum:
          - ACCOUNTS
          - IDENTITIES_DETAILS
          - IDENTITIES
          - IDENTITY_PROFILE_IDENTITY_ERROR
          - ORPHAN_IDENTITIES
          - SEARCH_EXPORT
          - UNCORRELATED_ACCOUNTS
          example: ACCOUNTS
          type: string
        arguments:
          $ref: '#/components/schemas/ReportDetails_arguments'
      type: object
    TaskResultDetails:
      description: "Details about job or task type, state and lifecycle."
      example:
        created: 2000-01-23T04:56:07.000+00:00
        description: A detailed view of the identities in the system.
        completed: 2000-01-23T04:56:07.000+00:00
        type: MENTOS
        launched: 2000-01-23T04:56:07.000+00:00
        reportType: IDENTITIES_DETAILS
        parentName: Audit Report
        messages: []
        progress: Initializing...
        returns: []
        attributes:
          org: an-org
        id: a248c16fe22222b2bd49615481311111
        completionStatus: Success
        launcher: cloudadmin
      properties:
        type:
          description: "Type of the job or task underlying in the report processing.\
            \ It could be a quartz task, QPOC or MENTOS jobs or a refresh/sync task."
          enum:
          - QUARTZ
          - QPOC
          - MENTOS
          - QUEUED_TASK
          example: MENTOS
          type: string
        id:
          description: Unique task definition identifier.
          example: a248c16fe22222b2bd49615481311111
          type: string
        reportType:
          description: Use this property to define what report should be processed
            in the RDE service.
          enum:
          - ACCOUNTS
          - IDENTITIES_DETAILS
          - IDENTITIES
          - IDENTITY_PROFILE_IDENTITY_ERROR
          - ORPHAN_IDENTITIES
          - SEARCH_EXPORT
          - UNCORRELATED_ACCOUNTS
          example: IDENTITIES_DETAILS
          type: string
        description:
          description: Description of the report purpose and/or contents.
          example: A detailed view of the identities in the system.
          type: string
        parentName:
          description: Name of the parent task/report if exists.
          example: Audit Report
          nullable: true
          type: string
        launcher:
          description: Name of the report processing initiator.
          example: cloudadmin
          type: string
        created:
          description: Report creation date
          format: date-time
          type: string
        launched:
          description: Report start date
          format: date-time
          nullable: true
          type: string
        completed:
          description: Report completion date
          format: date-time
          nullable: true
          type: string
        completionStatus:
          description: Report completion status.
          enum:
          - SUCCESS
          - WARNING
          - ERROR
          - TERMINATED
          - TEMP_ERROR
          example: Success
          nullable: true
          type: string
        messages:
          description: List of the messages dedicated to the report.  From task definition
            perspective here usually should be warnings or errors.
          example: []
          items:
            $ref: '#/components/schemas/TaskResultDetails_messages_inner'
          type: array
        returns:
          description: "Task definition results, if necessary."
          example: []
          items:
            $ref: '#/components/schemas/TaskResultDetails_returns_inner'
          type: array
        attributes:
          description: Extra attributes map(dictionary) needed for the report.
          example:
            org: an-org
          type: object
        progress:
          description: Current report state.
          example: Initializing...
          nullable: true
          type: string
      type: object
    SodPolicyRead:
      allOf:
      - $ref: '#/components/schemas/SodPolicy'
      - properties:
          conflictingAccessCriteria:
            $ref: '#/components/schemas/SodPolicyRead_allOf_conflictingAccessCriteria'
        type: object
      example:
        conflictingAccessCriteria:
          leftCriteria:
            name: money-in
            criteriaList:
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a66
              name: Administrator
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a67
              name: Administrator
          rightCriteria:
            name: money-in
            criteriaList:
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a66
              name: Administrator
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a67
              name: Administrator
        ownerRef:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        created: 2020-01-01T00:00:00Z
        scheduled: true
        creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        description: This policy ensures compliance of xyz
        violationOwnerAssignmentConfig:
          assignmentRule: MANAGER
          ownerRef:
            name: Support
            id: 2c9180a46faadee4016fb4e018c20639
            type: IDENTITY
        correctionAdvice: "Based on the role of the employee, managers should remove\
          \ access that is not required for their job function."
        type: GENERAL
        tags:
        - TAG1
        - TAG2
        name: policy-xyz
        modified: 2020-01-01T00:00:00Z
        policyQuery: '@access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdg) AND @access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdf)'
        compensatingControls: Have a manager review the transaction decisions for
          their "out of compliance" employee
        id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        state: ENFORCED
        externalPolicyReference: XYZ policy
    SodPolicyRequest:
      allOf:
      - $ref: '#/components/schemas/SodPolicy'
      - properties:
          conflictingAccessCriteria:
            $ref: '#/components/schemas/SodPolicyRequest_allOf_conflictingAccessCriteria'
        type: object
      example:
        conflictingAccessCriteria:
          leftCriteria:
            name: money-in
            criteriaList:
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a66
              name: Administrator
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a67
              name: Administrator
          rightCriteria:
            name: money-in
            criteriaList:
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a66
              name: Administrator
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a67
              name: Administrator
        ownerRef:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        created: 2020-01-01T00:00:00Z
        scheduled: true
        creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        description: This policy ensures compliance of xyz
        violationOwnerAssignmentConfig:
          assignmentRule: MANAGER
          ownerRef:
            name: Support
            id: 2c9180a46faadee4016fb4e018c20639
            type: IDENTITY
        correctionAdvice: "Based on the role of the employee, managers should remove\
          \ access that is not required for their job function."
        type: GENERAL
        tags:
        - TAG1
        - TAG2
        name: policy-xyz
        modified: 2020-01-01T00:00:00Z
        policyQuery: '@access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdg) AND @access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdf)'
        compensatingControls: Have a manager review the transaction decisions for
          their "out of compliance" employee
        id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        state: ENFORCED
        externalPolicyReference: XYZ policy
    ReportResultReference:
      allOf:
      - $ref: '#/components/schemas/SodReportResultDto'
      - properties:
          status:
            description: Status of a SOD policy violation report.
            enum:
            - SUCCESS
            - WARNING
            - ERROR
            - TERMINATED
            - TEMP_ERROR
            - PENDING
            example: PENDING
            type: string
        type: object
      example:
        name: SOD Policy 1 Violation
        id: 2c9180835d191a86015d28455b4b232a
        type: REPORT_RESULT
        status: PENDING
    SodPolicySchedule:
      example:
        schedule:
          hours:
            values:
            - MON
            - WED
            interval: 3
            type: LIST
          months:
            values:
            - MON
            - WED
            interval: 3
            type: LIST
          timeZoneId: America/Chicago
          days:
            values:
            - MON
            - WED
            interval: 3
            type: LIST
          expiration: 2018-06-25T20:22:28.104Z
          type: WEEKLY
        created: 2020-01-01T00:00:00Z
        recipients:
        - name: Michael Michaels
          id: 2c7180a46faadee4016fb4e018c20642
          type: IDENTITY
        - name: Michael Michaels
          id: 2c7180a46faadee4016fb4e018c20642
          type: IDENTITY
        name: SCH-1584312283015
        creatorId: 0f11f2a47c944bf3a2bd742580fe3bde
        modifierId: 0f11f2a47c944bf3a2bd742580fe3bde
        modified: 2020-01-01T00:00:00Z
        description: Schedule for policy xyz
        emailEmptyResults: false
      properties:
        name:
          description: SOD Policy schedule name
          example: SCH-1584312283015
          type: string
        created:
          description: The time when this SOD policy schedule is created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: The time when this SOD policy schedule is modified.
          example: 2020-01-01T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        description:
          description: SOD Policy schedule description
          example: Schedule for policy xyz
          type: string
        schedule:
          $ref: '#/components/schemas/Schedule_1'
        recipients:
          items:
            $ref: '#/components/schemas/SodRecipient'
          type: array
        emailEmptyResults:
          default: false
          description: Indicates if empty results need to be emailed
          example: false
          type: boolean
        creatorId:
          description: Policy's creator ID
          example: 0f11f2a47c944bf3a2bd742580fe3bde
          readOnly: true
          type: string
        modifierId:
          description: Policy's modifier ID
          example: 0f11f2a47c944bf3a2bd742580fe3bde
          readOnly: true
          type: string
      type: object
    IdentityWithNewAccess:
      description: An identity with a set of access to be added
      example:
        identityId: 2c91808568c529c60168cca6f90c1313
        accessRefs:
        - type: ENTITLEMENT
          id: 2c918087682f9a86016839c050861ab1
          name: "CN=Information Access,OU=test,OU=test-service,DC=TestAD,DC=local"
        - type: ENTITLEMENT
          id: 2c918087682f9a86016839c0509c1ab2
          name: "CN=Information Technology,OU=test,OU=test-service,DC=TestAD,DC=local"
      properties:
        identityId:
          description: Identity id to be checked.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        accessRefs:
          description: The list of entitlements to consider for possible violations
            in a preventive check.
          example:
          - type: ENTITLEMENT
            id: 2c918087682f9a86016839c050861ab1
            name: "CN=Information Access,OU=test,OU=test-service,DC=TestAD,DC=local"
          - type: ENTITLEMENT
            id: 2c918087682f9a86016839c0509c1ab2
            name: "CN=Information Technology,OU=test,OU=test-service,DC=TestAD,DC=local"
          items:
            $ref: '#/components/schemas/IdentityWithNewAccess_accessRefs_inner'
          type: array
      required:
      - accessRefs
      - identityId
      type: object
    ViolationPrediction:
      description: An object containing a listing of the SOD violation reasons detected
        by this check.
      example:
        violationContexts:
        - conflictingAccessCriteria:
            leftCriteria:
              criteriaList:
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a66
                existing: true
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a67
                existing: false
            rightCriteria:
              criteriaList:
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a66
                existing: true
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a67
                existing: false
          policy:
            type: ENTITLEMENT
        - conflictingAccessCriteria:
            leftCriteria:
              criteriaList:
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a66
                existing: true
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a67
                existing: false
            rightCriteria:
              criteriaList:
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a66
                existing: true
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a67
                existing: false
          policy:
            type: ENTITLEMENT
      properties:
        violationContexts:
          description: List of Violation Contexts
          items:
            $ref: '#/components/schemas/ViolationContext'
          type: array
      required:
      - requestId
      type: object
    IdentityWithNewAccess_1:
      description: An identity with a set of access to be added
      properties:
        identityId:
          description: Set of identity IDs to be checked.
          example: 2c91809050db617d0150e0bf3215385e
          type: string
        accessRefs:
          description: The bundle of access profiles to be added to the identities
            specified. All references must be ENTITLEMENT type.
          items:
            allOf:
            - $ref: '#/components/schemas/EntitlementRef_1'
          type: array
        clientMetadata:
          additionalProperties:
            type: string
          description: Arbitrary key-value pairs. They will never be processed by
            the IdentityNow system but will be returned on completion of the violation
            check.
          example:
            clientName: client1
            clientId: 2c91808f7892918f0178b78da4a305a1
          type: object
      required:
      - accessRefs
      - identityId
      type: object
    SodViolationCheck:
      description: An object referencing an SOD violation check
      example:
        requestId: 089899f13a8f4da7824996191587bab9
        created: 2020-01-01T00:00:00Z
      properties:
        requestId:
          description: The id of the original request
          example: 089899f13a8f4da7824996191587bab9
          type: string
        created:
          description: The date-time when this request was created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          readOnly: true
          type: string
      required:
      - requestId
      type: object
    MultiPolicyRequest:
      example:
        filteredPolicyList:
        - "[b868cd40-ffa4-4337-9c07-1a51846cfa94, 63a07a7b-39a4-48aa-956d-50c827deba2a]"
        - "[b868cd40-ffa4-4337-9c07-1a51846cfa94, 63a07a7b-39a4-48aa-956d-50c827deba2a]"
      properties:
        filteredPolicyList:
          description: Multi-policy report will be run for this list of ids
          items:
            example: "[b868cd40-ffa4-4337-9c07-1a51846cfa94, 63a07a7b-39a4-48aa-956d-50c827deba2a]"
            type: string
          type: array
      type: object
    ProvisioningPolicyDto:
      example:
        name: example provisioning policy for inactive identities
        description: this provisioning policy creates access based on an identity
          going inactive
        fields:
        - isRequired: false
          transform:
            type: rule
            attributes:
              name: Create Unique LDAP Attribute
          isMultiValued: false
          name: userName
          attributes:
            template: "${firstname}.${lastname}${uniqueCounter}"
            cloudMaxUniqueChecks: "50"
            cloudMaxSize: "20"
            cloudRequired: "true"
          type: string
        - isRequired: false
          transform:
            type: rule
            attributes:
              name: Create Unique LDAP Attribute
          isMultiValued: false
          name: userName
          attributes:
            template: "${firstname}.${lastname}${uniqueCounter}"
            cloudMaxUniqueChecks: "50"
            cloudMaxSize: "20"
            cloudRequired: "true"
          type: string
        usageType: CREATE
      properties:
        name:
          description: the provisioning policy name
          example: example provisioning policy for inactive identities
          nullable: true
          type: string
        description:
          description: the description of the provisioning policy
          example: this provisioning policy creates access based on an identity going
            inactive
          type: string
        usageType:
          $ref: '#/components/schemas/UsageType'
        fields:
          items:
            $ref: '#/components/schemas/FieldDetailsDto'
          type: array
      required:
      - name
      type: object
    UsageType:
      description: "The type of provisioning policy usage. \nIn IdentityNow, a source\
        \ can support various provisioning operations. For example, when a joiner\
        \ is added to a source, this may trigger both CREATE and UPDATE provisioning\
        \ operations.  Each usage type is considered a provisioning policy.  A source\
        \ can have any number of these provisioning policies defined. \nThese are\
        \ the common usage types: \nCREATE - This usage type relates to 'Create Account\
        \ Profile', the provisioning template for the account to be created. For example,\
        \ this would be used for a joiner on a source.  \nUPDATE - This usage type\
        \ relates to 'Update Account Profile', the provisioning template for the 'Update'\
        \ connector operations. For example, this would be used for an attribute sync\
        \ on a source.\nENABLE - This usage type relates to 'Enable Account Profile',\
        \ the provisioning template for the account to be enabled. For example, this\
        \ could be used for a joiner on a source once the joiner's account is created.\
        \ \nDISABLE - This usage type relates to 'Disable Account Profile', the provisioning\
        \ template for the account to be disabled. For example, this could be used\
        \ when a leaver is removed temporarily from a source. \nYou can use these\
        \ four usage types for all your provisioning policy needs. "
      enum:
      - CREATE
      - UPDATE
      - ENABLE
      - DISABLE
      - DELETE
      - ASSIGN
      - UNASSIGN
      - CREATE_GROUP
      - UPDATE_GROUP
      - DELETE_GROUP
      - REGISTER
      - CREATE_IDENTITY
      - UPDATE_IDENTITY
      - EDIT_GROUP
      - UNLOCK
      - CHANGE_PASSWORD
      example: CREATE
      nullable: false
      type: string
    Schema:
      example:
        features:
        - PROVISIONING
        - NO_PERMISSIONS_PROVISIONING
        - GROUPS_HAVE_MEMBERS
        nativeObjectType: User
        configuration:
          groupMemberAttribute: member
        created: 2019-12-24T22:32:58.104Z
        includePermissions: false
        name: account
        hierarchyAttribute: memberOf
        modified: 2019-12-31T20:22:28.104Z
        attributes:
        - name: sAMAccountName
          type: STRING
          isMultiValued: false
          isEntitlement: false
          isGroup: false
        - name: memberOf
          type: STRING
          schema:
            type: CONNECTOR_SCHEMA
            id: 2c9180887671ff8c01767b4671fc7d60
            name: group
          description: Group membership
          isMultiValued: true
          isEntitlement: true
          isGroup: true
        id: 2c9180835d191a86015d28455b4a2329
        displayAttribute: distinguishedName
        identityAttribute: sAMAccountName
      properties:
        id:
          description: The id of the Schema.
          example: 2c9180835d191a86015d28455b4a2329
          type: string
        name:
          description: The name of the Schema.
          example: account
          type: string
        nativeObjectType:
          description: The name of the object type on the native system that the schema
            represents.
          example: User
          type: string
        identityAttribute:
          description: The name of the attribute used to calculate the unique identifier
            for an object in the schema.
          example: sAMAccountName
          type: string
        displayAttribute:
          description: The name of the attribute used to calculate the display value
            for an object in the schema.
          example: distinguishedName
          type: string
        hierarchyAttribute:
          description: The name of the attribute whose values represent other objects
            in a hierarchy. Only relevant to group schemas.
          example: memberOf
          type: string
        includePermissions:
          description: Flag indicating whether or not the include permissions with
            the object data when aggregating the schema.
          example: false
          type: boolean
        features:
          description: |-
            Optional features that can be supported by a source. Modifying the features array may cause source configuration errors that are unsupportable. It is recommended to not modify this array for SailPoint supported connectors.
            * AUTHENTICATE: The source supports pass-through authentication.
            * COMPOSITE: The source supports composite source creation.
            * DIRECT_PERMISSIONS: The source supports returning DirectPermissions.
            * DISCOVER_SCHEMA: The source supports discovering schemas for users and groups.
            * ENABLE The source supports reading if an account is enabled or disabled.
            * MANAGER_LOOKUP: The source supports looking up managers as they are encountered in a feed. This is the opposite of NO_RANDOM_ACCESS.
            * NO_RANDOM_ACCESS: The source does not support random access and the getObject() methods should not be called and expected to perform.
            * PROXY: The source can serve as a proxy for another source. When an source has a proxy, all connector calls made with that source are redirected through the connector for the proxy source.
            * SEARCH
            * TEMPLATE
            * UNLOCK: The source supports reading if an account is locked or unlocked.
            * UNSTRUCTURED_TARGETS: The source supports returning unstructured Targets.
            * SHAREPOINT_TARGET: The source supports returning unstructured Target data for SharePoint. It will be typically used by AD, LDAP sources.
            * PROVISIONING: The source can both read and write accounts. Having this feature implies that the provision() method is implemented. It also means that direct and target permissions can also be provisioned if they can be returned by aggregation.
            * GROUP_PROVISIONING: The source can both read and write groups. Having this feature implies that the provision() method is implemented.
            * SYNC_PROVISIONING: The source can provision accounts synchronously.
            * PASSWORD: The source can provision password changes. Since sources can never read passwords, this is should only be used in conjunction with the PROVISIONING feature.
            * CURRENT_PASSWORD: Some source types support verification of the current password
            * ACCOUNT_ONLY_REQUEST: The source supports requesting accounts without entitlements.
            * ADDITIONAL_ACCOUNT_REQUEST: The source supports requesting additional accounts.
            * NO_AGGREGATION: A source that does not support aggregation.
            * GROUPS_HAVE_MEMBERS: The source models group memberships with a member attribute on the group object rather than a groups attribute on the account object. This effects the implementation of delta account aggregation.
            * NO_PERMISSIONS_PROVISIONING: Indicates that the connector cannot provision direct or target permissions for accounts. When DIRECT_PERMISSIONS and PROVISIONING features are present, it is assumed that the connector can also provision direct permissions. This feature disables that assumption and causes permission request to be converted to work items for accounts.
            * NO_GROUP_PERMISSIONS_PROVISIONING: Indicates that the connector cannot provision direct or target permissions for groups. When DIRECT_PERMISSIONS and PROVISIONING features are present, it is assumed that the connector can also provision direct permissions. This feature disables that assumption and causes permission request to be converted to work items for groups.
            * NO_UNSTRUCTURED_TARGETS_PROVISIONING: This string will be replaced by NO_GROUP_PERMISSIONS_PROVISIONING and NO_PERMISSIONS_PROVISIONING.
            * NO_DIRECT_PERMISSIONS_PROVISIONING: This string will be replaced by NO_GROUP_PERMISSIONS_PROVISIONING and NO_PERMISSIONS_PROVISIONING.
            * USES_UUID: Connectivity 2.0 flag used to indicate that the connector supports a compound naming structure.
            * PREFER_UUID: Used in ISC Provisioning AND Aggregation to decide if it should prefer account.uuid to account.nativeIdentity when data is read in through aggregation OR pushed out through provisioning.
            * ARM_SECURITY_EXTRACT: Indicates the application supports Security extracts for ARM
            * ARM_UTILIZATION_EXTRACT: Indicates the application supports Utilization extracts for ARM
            * ARM_CHANGELOG_EXTRACT: Indicates the application supports Change-log extracts for ARM
          example:
          - PROVISIONING
          - NO_PERMISSIONS_PROVISIONING
          - GROUPS_HAVE_MEMBERS
          items:
            enum:
            - AUTHENTICATE
            - COMPOSITE
            - DIRECT_PERMISSIONS
            - DISCOVER_SCHEMA
            - ENABLE
            - MANAGER_LOOKUP
            - NO_RANDOM_ACCESS
            - PROXY
            - SEARCH
            - TEMPLATE
            - UNLOCK
            - UNSTRUCTURED_TARGETS
            - SHAREPOINT_TARGET
            - PROVISIONING
            - GROUP_PROVISIONING
            - SYNC_PROVISIONING
            - PASSWORD
            - CURRENT_PASSWORD
            - ACCOUNT_ONLY_REQUEST
            - ADDITIONAL_ACCOUNT_REQUEST
            - NO_AGGREGATION
            - GROUPS_HAVE_MEMBERS
            - NO_PERMISSIONS_PROVISIONING
            - NO_GROUP_PERMISSIONS_PROVISIONING
            - NO_UNSTRUCTURED_TARGETS_PROVISIONING
            - NO_DIRECT_PERMISSIONS_PROVISIONING
            - PREFER_UUID
            - ARM_SECURITY_EXTRACT
            - ARM_UTILIZATION_EXTRACT
            - ARM_CHANGELOG_EXTRACT
            - USES_UUID
            - APPLICATION_DISCOVERY
            example: AUTHENTICATE
            type: string
          type: array
        configuration:
          description: Holds any extra configuration data that the schema may require.
          example:
            groupMemberAttribute: member
          type: object
        attributes:
          description: The attribute definitions which form the schema.
          example:
          - name: sAMAccountName
            type: STRING
            isMultiValued: false
            isEntitlement: false
            isGroup: false
          - name: memberOf
            type: STRING
            schema:
              type: CONNECTOR_SCHEMA
              id: 2c9180887671ff8c01767b4671fc7d60
              name: group
            description: Group membership
            isMultiValued: true
            isEntitlement: true
            isGroup: true
          items:
            $ref: '#/components/schemas/AttributeDefinition'
          type: array
        created:
          description: The date the Schema was created.
          example: 2019-12-24T22:32:58.104Z
          format: date-time
          type: string
        modified:
          description: The date the Schema was last modified.
          example: 2019-12-31T20:22:28.104Z
          format: date-time
          type: string
      type: object
    SourceConnectionsDto:
      example:
        identityProfiles:
        - name: ODS-Identity-Profile
          id: 76cfddb62818416f816bc494410f46c4
          identityCount: 100
        - name: ODS-Identity-Profile
          id: 76cfddb62818416f816bc494410f46c4
          identityCount: 100
        dependentApps:
        - owner:
          - name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          - name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          launcherCount: 100
          cloudAppId: 9e3cdd80edf84f119327df8bbd5bb5ac
          description: This is a Sailpoint application
          accountSource:
            passwordPolicies:
            - name: Policy ODS
              id: 2c91808568c529c60168cca6f90c1313
              type: PASSWORD_POLICY
            - name: Policy ODS
              id: 2c91808568c529c60168cca6f90c1313
              type: PASSWORD_POLICY
            useForPasswordManagement: false
          provisionRequestEnabled: true
          appCenterEnabled: false
          enabled: true
          matchAllAccount: true
        - owner:
          - name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          - name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          launcherCount: 100
          cloudAppId: 9e3cdd80edf84f119327df8bbd5bb5ac
          description: This is a Sailpoint application
          accountSource:
            passwordPolicies:
            - name: Policy ODS
              id: 2c91808568c529c60168cca6f90c1313
              type: PASSWORD_POLICY
            - name: Policy ODS
              id: 2c91808568c529c60168cca6f90c1313
              type: PASSWORD_POLICY
            useForPasswordManagement: false
          provisionRequestEnabled: true
          appCenterEnabled: false
          enabled: true
          matchAllAccount: true
        dependentCustomTransforms:
        - id: 61190eae-290b-4335-aeb8-7335f1fd99cb
          name: Split Transform
          type: split
          attributes:
            delimiter: "-"
            index: 1
            input:
              attributes:
                sourceName: Example CSV Source
                attributeName: last_name
              type: accountAttribute
          internal: false
        mappingProfiles:
        - ODS-AD-Profile
        - ODS-Profile2
        credentialProfiles:
        - "[Profile ODS]"
        - "[Profile ODS]"
        missingDependents:
        - reason: "If there was an error retrieving any dependencies, it would lbe\
            \ listed here"
          dependencyType: dependantApps
        - reason: "If there was an error retrieving any dependencies, it would lbe\
            \ listed here"
          dependencyType: dependantApps
        sourceAttributes:
        - "[sAMAccountName, mail, sn, givenName, displayName, employeeNumber, manager,\
          \ telephoneNumber]"
        - "[sAMAccountName, mail, sn, givenName, displayName, employeeNumber, manager,\
          \ telephoneNumber]"
      properties:
        identityProfiles:
          description: The IdentityProfile attached to this source
          items:
            $ref: '#/components/schemas/IdentityProfilesConnections'
          type: array
        credentialProfiles:
          description: Name of the CredentialProfile attached to this source
          items:
            example: "[Profile ODS]"
            type: string
          type: array
        sourceAttributes:
          description: The attributes attached to this source
          items:
            example: "[sAMAccountName, mail, sn, givenName, displayName, employeeNumber,\
              \ manager, telephoneNumber]"
            type: string
          type: array
        mappingProfiles:
          description: The profiles attached to this source
          example:
          - ODS-AD-Profile
          - ODS-Profile2
          items:
            type: string
          type: array
        dependentCustomTransforms:
          description: A list of custom transforms associated with this source. A
            transform will be considered associated with a source if any attributes
            of the transform specify the source as the sourceName.
          example:
          - id: 61190eae-290b-4335-aeb8-7335f1fd99cb
            name: Split Transform
            type: split
            attributes:
              delimiter: "-"
              index: 1
              input:
                attributes:
                  sourceName: Example CSV Source
                  attributeName: last_name
                type: accountAttribute
            internal: false
          items:
            $ref: '#/components/schemas/TransformRead'
          type: array
        dependentApps:
          items:
            $ref: '#/components/schemas/DependantAppConnections'
          type: array
        missingDependents:
          items:
            $ref: '#/components/schemas/DependantConnectionsMissingDto'
          type: array
      type: object
    TaggedObject:
      description: Tagged object.
      example:
        objectRef:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        tags:
        - BU_FINANCE
        - PCI
      properties:
        objectRef:
          $ref: '#/components/schemas/TaggedObjectDto'
        tags:
          description: Labels to be applied to an Object
          example:
          - BU_FINANCE
          - PCI
          items:
            type: string
          type: array
      type: object
    BulkAddTaggedObject:
      example:
        objectRefs:
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        operation: MERGE
        tags:
        - BU_FINANCE
        - PCI
      properties:
        objectRefs:
          items:
            $ref: '#/components/schemas/TaggedObjectDto'
          type: array
        tags:
          description: Label to be applied to an Object
          example:
          - BU_FINANCE
          - PCI
          items:
            type: string
          type: array
        operation:
          default: APPEND
          description: |-
            If APPEND, tags are appended to the list of tags for the object. A 400 error is returned if this would add duplicate tags to the object.

            If MERGE, tags are merged with the existing tags. Duplicate tags are silently ignored.
          enum:
          - APPEND
          - MERGE
          example: MERGE
          type: string
      type: object
    BulkTaggedObjectResponse:
      example:
        objectRefs:
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        tags:
        - BU_FINANCE
        - PCI
      properties:
        objectRefs:
          items:
            $ref: '#/components/schemas/TaggedObjectDto'
          type: array
        tags:
          description: Label to be applied to an Object
          example:
          - BU_FINANCE
          - PCI
          items:
            type: string
          type: array
      type: object
    BulkRemoveTaggedObject:
      example:
        objectRefs:
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        tags:
        - BU_FINANCE
        - PCI
      properties:
        objectRefs:
          items:
            $ref: '#/components/schemas/TaggedObjectDto'
          type: array
        tags:
          description: Label to be applied to an Object
          example:
          - BU_FINANCE
          - PCI
          items:
            type: string
          type: array
      type: object
    TransformRead:
      allOf:
      - $ref: '#/components/schemas/Transform'
      - properties:
          id:
            description: Unique ID of this transform
            example: 2cd78adghjkja34jh2b1hkjhasuecd
            type: string
          internal:
            default: false
            description: Indicates whether this is an internal SailPoint-created transform
              or a customer-created transform
            example: false
            type: boolean
        required:
        - id
        - internal
        type: object
      example:
        internal: false
        name: Timestamp To Date
        attributes: "{}"
        id: 2cd78adghjkja34jh2b1hkjhasuecd
        type: dateFormat
    WorkItemForward:
      example:
        targetOwnerId: 2c9180835d2e5168015d32f890ca1581
        comment: I'm going on vacation.
        sendNotifications: true
      properties:
        targetOwnerId:
          description: The ID of the identity to forward this work item to.
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        comment:
          description: Comments to send to the target owner
          example: I'm going on vacation.
          type: string
        sendNotifications:
          default: true
          description: "If true, send a notification to the target owner."
          example: true
          type: boolean
      required:
      - comment
      - targetOwnerId
      type: object
    Workflow:
      allOf:
      - properties:
          id:
            description: Workflow ID. This is a UUID generated upon creation.
            example: d201c5e9-d37b-4aff-af14-66414f39d569
            type: string
          executionCount:
            description: The number of times this workflow has been executed.
            example: 2
            format: int32
            type: integer
          failureCount:
            description: The number of times this workflow has failed during execution.
            example: 0
            format: int32
            type: integer
          created:
            description: The date and time the workflow was created.
            example: 2022-01-10T16:06:16.636381447Z
            format: date-time
            type: string
          modified:
            description: The date and time the workflow was modified.
            example: 2023-12-05T15:18:27.699132301Z
            format: date-time
            type: string
          modifiedBy:
            $ref: '#/components/schemas/WorkflowModifiedBy'
          creator:
            $ref: '#/components/schemas/Workflow_allOf_creator'
        type: object
      - $ref: '#/components/schemas/WorkflowBody'
      example:
        owner:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        creator:
          name: Michael Michaels
          id: 2c7180a46faadee4016fb4e018c20642
          type: IDENTITY
        created: 2022-01-10T16:06:16.636381447Z
        description: Send an email to the identity who's attributes changed.
        trigger:
          displayName: displayName
          attributes: "{}"
          type: EVENT
        enabled: false
        name: Send Email
        executionCount: 2
        modified: 2023-12-05T15:18:27.699132301Z
        modifiedBy:
          name: Thomas Edison
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        definition:
          start: Send Email Test
          steps:
            Send Email:
              actionId: sp:send-email
              attributes:
                body: This is a test
                from: sailpoint@sailpoint.com
                recipientId.$: $.identity.id
                subject: test
              nextStep: success
              selectResult: null
              type: ACTION
            success:
              type: success
        id: d201c5e9-d37b-4aff-af14-66414f39d569
        failureCount: 0
    WorkflowBody:
      example:
        owner:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        name: Send Email
        description: Send an email to the identity who's attributes changed.
        definition:
          start: Send Email Test
          steps:
            Send Email:
              actionId: sp:send-email
              attributes:
                body: This is a test
                from: sailpoint@sailpoint.com
                recipientId.$: $.identity.id
                subject: test
              nextStep: success
              selectResult: null
              type: ACTION
            success:
              type: success
        trigger:
          displayName: displayName
          attributes: "{}"
          type: EVENT
        enabled: false
      properties:
        name:
          description: The name of the workflow
          example: Send Email
          type: string
        owner:
          $ref: '#/components/schemas/WorkflowBody_owner'
        description:
          description: Description of what the workflow accomplishes
          example: Send an email to the identity who's attributes changed.
          type: string
        definition:
          $ref: '#/components/schemas/WorkflowDefinition'
        enabled:
          default: false
          description: Enable or disable the workflow.  Workflows cannot be created
            in an enabled state.
          example: false
          type: boolean
        trigger:
          $ref: '#/components/schemas/WorkflowTrigger'
      type: object
    WorkflowExecution:
      example:
        requestId: 41e12a74fa7b4a6a98ae47887b64acdb
        closeTime: 2022-02-07T20:13:31.682410165Z
        startTime: 2022-02-07T20:13:29.356648026Z
        id: b393f4e2-4785-4d7f-ab27-3a6b8ded4c81
        workflowId: d201c5d9-d37b-4a2f-af14-66414f39d568
        status: Completed
      properties:
        id:
          description: Workflow execution ID.
          example: b393f4e2-4785-4d7f-ab27-3a6b8ded4c81
          type: string
        workflowId:
          description: Workflow ID.
          example: d201c5d9-d37b-4a2f-af14-66414f39d568
          type: string
        requestId:
          description: Backend ID that tracks a workflow request in the system. Provide
            this ID in a customer support ticket for debugging purposes.
          example: 41e12a74fa7b4a6a98ae47887b64acdb
          type: string
        startTime:
          description: Date/time when the workflow started.
          example: 2022-02-07T20:13:29.356648026Z
          format: date-time
          type: string
        closeTime:
          description: Date/time when the workflow ended.
          example: 2022-02-07T20:13:31.682410165Z
          format: date-time
          type: string
        status:
          description: Workflow execution status.
          enum:
          - Completed
          - Failed
          - Canceled
          - Queued
          - Running
          example: Completed
          type: string
      type: object
    WorkflowExecutionEvent:
      example:
        attributes: {}
        type: WorkflowTaskScheduled
        timestamp: 2022-02-07T20:13:31.640618296Z
      properties:
        type:
          description: The type of event
          enum:
          - WorkflowExecutionScheduled
          - WorkflowExecutionStarted
          - WorkflowExecutionCompleted
          - WorkflowExecutionFailed
          - WorkflowTaskScheduled
          - WorkflowTaskStarted
          - WorkflowTaskCompleted
          - WorkflowTaskFailed
          - ActivityTaskScheduled
          - ActivityTaskStarted
          - ActivityTaskCompleted
          - ActivityTaskFailed
          - StartChildWorkflowExecutionInitiated
          - ChildWorkflowExecutionStarted
          - ChildWorkflowExecutionCompleted
          - ChildWorkflowExecutionFailed
          example: WorkflowTaskScheduled
          type: string
        timestamp:
          description: The date-time when the event occurred
          example: 2022-02-07T20:13:31.640618296Z
          format: date-time
          type: string
        attributes:
          description: Additional attributes associated with the event
          example: {}
          type: object
      type: object
    WorkflowLibraryAction:
      example:
        outputSchema:
          definitions: {}
          properties:
            autoRevokeAllowed:
              $id: '#sp:create-campaign/autoRevokeAllowed'
              default: true
              examples:
              - false
              title: autoRevokeAllowed
              type: boolean
            deadline:
              $id: '#sp:create-campaign/deadline'
              default: ""
              examples:
              - 2020-12-25T06:00:00.468Z
              format: date-time
              pattern: ^.*$
              title: deadline
              type: string
            description:
              $id: '#sp:create-campaign/description'
              default: ""
              examples:
              - A review of everyone's access by their manager.
              pattern: ^.*$
              title: description
              type: string
            emailNotificationEnabled:
              $id: '#sp:create-campaign/emailNotificationEnabled'
              default: true
              examples:
              - false
              title: emailNotificationEnabled
              type: boolean
            filter:
              $id: '#sp:create-campaign/filter'
              properties:
                id:
                  $id: '#sp:create-campaign/filter/id'
                  default: ""
                  examples:
                  - e0adaae69852e8fe8b8a3d48e5ce757c
                  pattern: ^.*$
                  title: id
                  type: string
                type:
                  $id: '#sp:create-campaign/filter/type'
                  default: ""
                  examples:
                  - CAMPAIGN_FILTER
                  pattern: ^.*$
                  title: type
                  type: string
              title: filter
              type: object
            id:
              $id: '#sp:create-campaign/id'
              default: ""
              examples:
              - 2c918086719eec070171a7e3355a360a
              pattern: ^.*$
              title: id
              type: string
            name:
              $id: '#sp:create-campaign/name'
              default: ""
              examples:
              - Manager Review
              pattern: ^.*$
              title: name
              type: string
            recommendationsEnabled:
              $id: '#sp:create-campaign/recommendationsEnabled'
              default: true
              examples:
              - false
              title: recommendationEnabled
              type: boolean
            type:
              $id: '#sp:create-campaign/type'
              default: ""
              examples:
              - MANAGER
              pattern: ^.*$
              title: type
              type: string
          title: sp:create-campaign
          type: object
        exampleOutput: "{}"
        deprecated: true
        isSimulationEnabled: true
        name: Create Certification Campaign
        description: Generates a certification campaign.
        id: sp:create-campaign
        formFields:
        - helpText: The name to give to this certification campaign.
          name: name
          description: First value to compare
          label: Campaign Name
          type: text
          required: false
        - helpText: The name to give to this certification campaign.
          name: name
          description: First value to compare
          label: Campaign Name
          type: text
          required: false
        deprecatedBy: 2000-01-23T04:56:07.000+00:00
        type: ACTION
        isDynamicSchema: false
        versionNumber: 0
      properties:
        id:
          description: Action ID. This is a static namespaced ID for the action
          example: sp:create-campaign
          type: string
        name:
          description: Action Name
          example: Create Certification Campaign
          type: string
        type:
          description: Action type
          example: ACTION
          type: string
        description:
          description: Action Description
          example: Generates a certification campaign.
          type: string
        formFields:
          description: One or more inputs that the action accepts
          items:
            $ref: '#/components/schemas/WorkflowLibraryFormFields'
          nullable: true
          type: array
        exampleOutput:
          $ref: '#/components/schemas/WorkflowLibraryAction_exampleOutput'
        deprecated:
          type: boolean
        deprecatedBy:
          format: date-time
          type: string
        versionNumber:
          description: Version number
          type: integer
        isSimulationEnabled:
          type: boolean
        isDynamicSchema:
          default: false
          description: "Determines whether the dynamic output schema is returned in\
            \ place of the action's output schema. The dynamic schema lists non-static\
            \ properties, like properties of a workflow form where each form has different\
            \ fields. These will be provided dynamically based on available form fields."
          example: false
          type: boolean
        outputSchema:
          description: "Defines the output schema, if any, that this action produces."
          example:
            definitions: {}
            properties:
              autoRevokeAllowed:
                $id: '#sp:create-campaign/autoRevokeAllowed'
                default: true
                examples:
                - false
                title: autoRevokeAllowed
                type: boolean
              deadline:
                $id: '#sp:create-campaign/deadline'
                default: ""
                examples:
                - 2020-12-25T06:00:00.468Z
                format: date-time
                pattern: ^.*$
                title: deadline
                type: string
              description:
                $id: '#sp:create-campaign/description'
                default: ""
                examples:
                - A review of everyone's access by their manager.
                pattern: ^.*$
                title: description
                type: string
              emailNotificationEnabled:
                $id: '#sp:create-campaign/emailNotificationEnabled'
                default: true
                examples:
                - false
                title: emailNotificationEnabled
                type: boolean
              filter:
                $id: '#sp:create-campaign/filter'
                properties:
                  id:
                    $id: '#sp:create-campaign/filter/id'
                    default: ""
                    examples:
                    - e0adaae69852e8fe8b8a3d48e5ce757c
                    pattern: ^.*$
                    title: id
                    type: string
                  type:
                    $id: '#sp:create-campaign/filter/type'
                    default: ""
                    examples:
                    - CAMPAIGN_FILTER
                    pattern: ^.*$
                    title: type
                    type: string
                title: filter
                type: object
              id:
                $id: '#sp:create-campaign/id'
                default: ""
                examples:
                - 2c918086719eec070171a7e3355a360a
                pattern: ^.*$
                title: id
                type: string
              name:
                $id: '#sp:create-campaign/name'
                default: ""
                examples:
                - Manager Review
                pattern: ^.*$
                title: name
                type: string
              recommendationsEnabled:
                $id: '#sp:create-campaign/recommendationsEnabled'
                default: true
                examples:
                - false
                title: recommendationEnabled
                type: boolean
              type:
                $id: '#sp:create-campaign/type'
                default: ""
                examples:
                - MANAGER
                pattern: ^.*$
                title: type
                type: string
            title: sp:create-campaign
            type: object
          type: object
      title: Workflow Action
      type: object
    WorkflowLibraryTrigger:
      example:
        outputSchema: "{}"
        deprecated: true
        isSimulationEnabled: true
        name: Identity Attributes Changed
        description: One or more identity attributes changed.
        id: idn:identity-attributes-changed
        deprecatedBy: 2000-01-23T04:56:07.000+00:00
        formFields: []
        type: EVENT
        isDynamicSchema: false
        inputExample:
          changes:
          - attribute: department
            newValue: marketing
            oldValue: sales
          - attribute: manager
            newValue:
              id: ee769173319b41d19ccec6c235423236c
              name: mean.guy
              type: IDENTITY
            oldValue:
              id: ee769173319b41d19ccec6c235423237b
              name: nice.guy
              type: IDENTITY
          - attribute: email
            newValue: john.doe@gmail.com
            oldValue: john.doe@hotmail.com
          identity:
            id: ee769173319b41d19ccec6cea52f237b
            name: john.doe
            type: IDENTITY
      properties:
        id:
          description: Trigger ID. This is a static namespaced ID for the trigger.
          example: idn:identity-attributes-changed
          type: string
        type:
          description: Trigger type
          enum:
          - EVENT
          - SCHEDULED
          - EXTERNAL
          example: EVENT
          type: string
        deprecated:
          type: boolean
        deprecatedBy:
          format: date-time
          type: string
        isSimulationEnabled:
          type: boolean
        outputSchema:
          description: Example output schema
          type: object
        name:
          description: Trigger Name
          example: Identity Attributes Changed
          type: string
        description:
          description: Trigger Description
          example: One or more identity attributes changed.
          type: string
        isDynamicSchema:
          default: false
          description: "Determines whether the dynamic output schema is returned in\
            \ place of the action's output schema. The dynamic schema lists non-static\
            \ properties, like properties of a workflow form where each form has different\
            \ fields. These will be provided dynamically based on available form fields."
          example: false
          type: boolean
        inputExample:
          description: Example trigger payload if applicable
          example:
            changes:
            - attribute: department
              newValue: marketing
              oldValue: sales
            - attribute: manager
              newValue:
                id: ee769173319b41d19ccec6c235423236c
                name: mean.guy
                type: IDENTITY
              oldValue:
                id: ee769173319b41d19ccec6c235423237b
                name: nice.guy
                type: IDENTITY
            - attribute: email
              newValue: john.doe@gmail.com
              oldValue: john.doe@hotmail.com
            identity:
              id: ee769173319b41d19ccec6cea52f237b
              name: john.doe
              type: IDENTITY
          externalDocs:
            description: List of triggers and their input schemas
            url: https://developer.sailpoint.com/idn/docs/event-triggers/available
          nullable: true
          type: object
        formFields:
          description: One or more inputs that the trigger accepts
          example: []
          items:
            $ref: '#/components/schemas/WorkflowLibraryFormFields'
          nullable: true
          type: array
      title: Workflow Trigger
      type: object
    WorkflowLibraryOperator:
      example:
        deprecated: true
        isSimulationEnabled: true
        name: Compare Boolean Values
        description: Compare two boolean values and decide what happens based on the
          result.
        id: sp:compare-boolean
        deprecatedBy: 2000-01-23T04:56:07.000+00:00
        formFields:
        - description: Enter the JSONPath to a value from the input to compare to
            Variable B.
          helpText: ""
          label: Variable A
          name: variableA.$
          required: true
          type: text
        - helpText: Select an operation.
          label: Operation
          name: operator
          options:
          - label: Equals
            value: BooleanEquals
          required: true
          type: select
        - description: Enter the JSONPath to a value from the input to compare to
            Variable A.
          helpText: ""
          label: Variable B
          name: variableB.$
          required: false
          type: text
        - description: Enter True or False.
          helpText: ""
          label: Variable B
          name: variableB
          required: false
          type: text
        type: OPERATOR
        isDynamicSchema: false
      properties:
        id:
          description: Operator ID.
          example: sp:compare-boolean
          type: string
        name:
          description: Operator friendly name
          example: Compare Boolean Values
          type: string
        type:
          description: Operator type
          example: OPERATOR
          type: string
        description:
          description: Description of the operator
          example: Compare two boolean values and decide what happens based on the
            result.
          type: string
        isDynamicSchema:
          description: "Determines whether the dynamic output schema is returned in\
            \ place of the action's output schema. The dynamic schema lists non-static\
            \ properties, like properties of a workflow form where each form has different\
            \ fields. These will be provided dynamically based on available form fields."
          example: false
          type: boolean
        deprecated:
          type: boolean
        deprecatedBy:
          format: date-time
          type: string
        isSimulationEnabled:
          type: boolean
        formFields:
          description: One or more inputs that the operator accepts
          example:
          - description: Enter the JSONPath to a value from the input to compare to
              Variable B.
            helpText: ""
            label: Variable A
            name: variableA.$
            required: true
            type: text
          - helpText: Select an operation.
            label: Operation
            name: operator
            options:
            - label: Equals
              value: BooleanEquals
            required: true
            type: select
          - description: Enter the JSONPath to a value from the input to compare to
              Variable A.
            helpText: ""
            label: Variable B
            name: variableB.$
            required: false
            type: text
          - description: Enter True or False.
            helpText: ""
            label: Variable B
            name: variableB
            required: false
            type: text
          items:
            $ref: '#/components/schemas/WorkflowLibraryFormFields'
          nullable: true
          type: array
      title: Workflow Operator
      type: object
    WorkflowOAuthClient:
      example:
        id: 1a58c03a6bf64dc2876f6988c6e2c7b7
        secret: 00cc24a7fe810fe06a7cb38bc168ae104d703c7abb296f9944dc68e69ddb578b
        url: https://tenant.api.identitynow.com/beta/workflows/execute/external/c17bea3a-574d-453c-9e04-4365fbf5af0b
      properties:
        id:
          description: OAuth client ID for the trigger. This is a UUID generated upon
            creation.
          example: 1a58c03a6bf64dc2876f6988c6e2c7b7
          type: string
        secret:
          description: OAuthClient secret.
          example: 00cc24a7fe810fe06a7cb38bc168ae104d703c7abb296f9944dc68e69ddb578b
          type: string
        url:
          description: URL for the external trigger to invoke
          example: https://tenant.api.identitynow.com/beta/workflows/execute/external/c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
      type: object
    ManualDiscoverApplicationsTemplate:
      properties:
        application_name:
          description: Name of the application.
          example: Example Application
          type: string
        description:
          description: Description of the application.
          example: Example Description
          type: string
      type: object
    ManualDiscoverApplications:
      properties:
        file:
          description: The CSV file to upload containing `application_name` and `description`
            columns. Each row represents an application to be discovered.
          example: |-
            application_name,description
            "Sample App","This is a sample description for Sample App."
            "Another App","Description for Another App."
          format: binary
          type: string
      required:
      - file
      type: object
    SlimDiscoveredApplications:
      description: Discovered applications
      example:
        createdAt: 2023-01-01T12:00:00Z
        discoveredVendor: ExampleVendor
        discoverySource: csv
        name: ExampleApp
        recommendedConnectors:
        - ConnectorA
        - ConnectorB
        description: An application for managing examples.
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        discoveredAt: 2023-01-01T12:00:00Z
        status: ACTIVE
      properties:
        id:
          description: Unique identifier for the discovered application.
          format: uuid
          type: string
        name:
          description: Name of the discovered application.
          example: ExampleApp
          type: string
        discoverySource:
          description: Source from which the application was discovered.
          example: csv
          type: string
        discoveredVendor:
          description: The vendor associated with the discovered application.
          example: ExampleVendor
          type: string
        description:
          description: A brief description of the discovered application.
          example: An application for managing examples.
          type: string
        recommendedConnectors:
          description: List of recommended connectors for the application.
          example:
          - ConnectorA
          - ConnectorB
          items:
            type: string
          type: array
        discoveredAt:
          description: "The timestamp when the application was last received via an\
            \ entitlement aggregation invocation  or a manual csv upload, in ISO 8601\
            \ format."
          example: 2023-01-01T12:00:00Z
          format: date-time
          type: string
        createdAt:
          description: "The timestamp when the application was first discovered, in\
            \ ISO 8601 format."
          example: 2023-01-01T12:00:00Z
          format: date-time
          type: string
        status:
          description: |-
            The status of an application within the discovery source.

            By default this field is set to "ACTIVE" when the application is discovered.

            If an application has been deleted from within the discovery source, the status will be set to "INACTIVE".
          example: ACTIVE
          type: string
      title: Slim Discovered Application
      type: object
    FullDiscoveredApplications:
      description: Discovered applications with their respective associated sources
      properties:
        id:
          description: Unique identifier for the discovered application.
          format: uuid
          type: string
        name:
          description: Name of the discovered application.
          example: ExampleApp
          type: string
        discoverySource:
          description: Source from which the application was discovered.
          example: csv
          type: string
        discoveredVendor:
          description: The vendor associated with the discovered application.
          example: ExampleVendor
          type: string
        description:
          description: A brief description of the discovered application.
          example: An application for managing examples.
          type: string
        recommendedConnectors:
          description: List of recommended connectors for the application.
          example:
          - ConnectorA
          - ConnectorB
          items:
            type: string
          type: array
        discoveredAt:
          description: "The timestamp when the application was last received via an\
            \ entitlement aggregation invocation  or a manual csv upload, in ISO 8601\
            \ format."
          example: 2023-01-01T12:00:00Z
          format: date-time
          type: string
        createdAt:
          description: "The timestamp when the application was first discovered, in\
            \ ISO 8601 format."
          example: 2023-01-01T12:00:00Z
          format: date-time
          type: string
        status:
          description: |-
            The status of an application within the discovery source.

            By default this field is set to "ACTIVE" when the application is discovered.

            If an application has been deleted from within the discovery source, the status will be set to "INACTIVE".
          example: ACTIVE
          type: string
        associatedSources:
          description: List of associated sources related to this discovered application.
          example:
          - e0cc5d7d-bf7f-4f81-b2af-8885b09d9923
          - a0303682-5e4a-44f7-bdc2-6ce6112549c1
          items:
            format: uuid
            type: string
          type: array
      title: Discovered Application
      type: object
    VendorConnectorMapping:
      example:
        createdAt: 2024-03-13T12:56:19.391294Z
        deletedAt:
          Valid: false
          Time: 0001-01-01T00:00:00Z
        updatedBy:
          Valid: true
          String: user-67891
        connector: Example connector
        createdBy: admin
        vendor: Example vendor
        id: 78733556-9ea3-4f59-bf69-e5cd92b011b4
        deletedBy:
          Valid: false
          String: ""
        updatedAt:
          Valid: true
          Time: 2024-03-14T12:56:19.391294Z
      properties:
        id:
          description: The unique identifier for the vendor-connector mapping.
          example: 78733556-9ea3-4f59-bf69-e5cd92b011b4
          type: string
        vendor:
          description: The name of the vendor.
          example: Example vendor
          type: string
        connector:
          description: The name of the connector.
          example: Example connector
          type: string
        createdAt:
          description: The creation timestamp of the mapping.
          example: 2024-03-13T12:56:19.391294Z
          format: date-time
          type: string
        createdBy:
          description: The identifier of the user who created the mapping.
          example: admin
          type: string
        updatedAt:
          $ref: '#/components/schemas/VendorConnectorMapping_updatedAt'
        updatedBy:
          $ref: '#/components/schemas/VendorConnectorMapping_updatedBy'
        deletedAt:
          $ref: '#/components/schemas/VendorConnectorMapping_deletedAt'
        deletedBy:
          $ref: '#/components/schemas/VendorConnectorMapping_deletedBy'
      type: object
    AccessRequestType:
      description: Access request type. Defaults to GRANT_ACCESS. REVOKE_ACCESS type
        can only have a single Identity ID in the requestedFor field.
      enum:
      - GRANT_ACCESS
      - REVOKE_ACCESS
      - null
      example: GRANT_ACCESS
      nullable: true
      type: string
    RequestedForDtoRef:
      example:
        identityId: cb89bc2f1ee6445fbea12224c526ba3a
        requestedItems:
        - clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          removeDate: 2020-07-11T21:23:15Z
          accountSelection:
          - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
            accounts:
            - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
              nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
            - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
              nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
            accounts:
            - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
              nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
            - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
              nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          comment: Requesting access profile for John Doe
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
        - clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          removeDate: 2020-07-11T21:23:15Z
          accountSelection:
          - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
            accounts:
            - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
              nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
            - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
              nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
            accounts:
            - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
              nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
            - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
              nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          comment: Requesting access profile for John Doe
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
      properties:
        identityId:
          description: The identity id for which the access is requested
          example: cb89bc2f1ee6445fbea12224c526ba3a
          nullable: false
          type: string
        requestedItems:
          description: the details for the access items that are requested for the
            identity
          items:
            $ref: '#/components/schemas/RequestedItemDtoRef'
          nullable: false
          type: array
      required:
      - identityId
      - requestedItems
      type: object
    BaseCommonDto:
      properties:
        id:
          description: System-generated unique ID of the Object
          example: id12345
          readOnly: true
          type: string
        name:
          description: Name of the Object
          example: aName
          nullable: true
          type: string
        created:
          description: Creation date of the Object
          example: 2015-05-28T14:07:17Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Last modification date of the Object
          example: 2015-05-28T14:07:17Z
          format: date-time
          readOnly: true
          type: string
      required:
      - name
      type: object
    Recommendation:
      properties:
        type:
          description: Recommended type of account.
          enum:
          - HUMAN
          - MACHINE
          example: MACHINE
          type: string
        method:
          description: "Method used to produce the recommendation. DISCOVERY - suggested\
            \ by AI, SOURCE - the account comes from a source flagged as containing\
            \ machine accounts, CRITERIA - the account satisfies classification criteria."
          enum:
          - DISCOVERY
          - SOURCE
          - CRITERIA
          example: DISCOVERY
          type: string
      required:
      - method
      - type
      type: object
    BaseReferenceDto:
      example:
        name: William Wilson
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: ID of the object to which this reference applies
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: William Wilson
          type: string
      type: object
    CompletionStatus:
      description: The status after completion.
      enum:
      - SUCCESS
      - FAILURE
      - INCOMPLETE
      - PENDING
      - null
      example: SUCCESS
      nullable: true
      type: string
    IdentitySummary:
      example:
        identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
        name: SailPoint Services
        id: ff80818155fe8c080155fe8d925b0316
        completed: true
      nullable: true
      properties:
        id:
          description: ID of this identity summary
          example: ff80818155fe8c080155fe8d925b0316
          type: string
        name:
          description: Human-readable display name of identity
          example: SailPoint Services
          type: string
        identityId:
          description: ID of the identity that this summary represents
          example: c15b9f5cca5a4e9599eaa0e64fa921bd
          type: string
        completed:
          default: false
          description: Indicates if all access items for this summary have been decided
            on
          example: true
          type: boolean
      type: object
    AccountActivityItem:
      example:
        approvalStatus: PENDING
        reviewerComment:
          date: 2017-07-11T18:45:37.098Z
          commenterName: Adam Kennedy
          body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat.
          commenterId: 2c918084660f45d6016617daa9210584
        sourceId: 2c91808363ef85290164000587130c0c
        clientMetadata:
          customKey1: custom value 1
          customKey2: custom value 2
        removeDate: 2020-07-11T00:00:00Z
        reviewerIdentitySummary:
          identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
          name: SailPoint Services
          id: ff80818155fe8c080155fe8d925b0316
          completed: true
        requesterComment:
          date: 2017-07-11T18:45:37.098Z
          commenterName: Adam Kennedy
          body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat.
          commenterId: 2c918084660f45d6016617daa9210584
        accountRequestInfo:
          requestedObjectId: 2c91808563ef85690164001c31140c0c
          requestedObjectName: Treasury Analyst
          requestedObjectType: ACCESS_PROFILE
        nativeIdentity: Sandie.Camero
        requested: 2017-07-11T18:45:37.098Z
        provisioningStatus: PENDING
        name: 48c545831b264409a81befcabb0e3c5a
        id: 48c545831b264409a81befcabb0e3c5a
        attribute: detectedRoles
        operation: ADD
        value: "Treasury Analyst [AccessProfile-1529010191212]"
      properties:
        id:
          description: Item id
          example: 48c545831b264409a81befcabb0e3c5a
          type: string
        name:
          description: Human-readable display name of item
          example: 48c545831b264409a81befcabb0e3c5a
          type: string
        requested:
          description: Date and time item was requested
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        approvalStatus:
          $ref: '#/components/schemas/AccountActivityApprovalStatus'
        provisioningStatus:
          $ref: '#/components/schemas/ProvisioningState'
        requesterComment:
          $ref: '#/components/schemas/Comment'
        reviewerIdentitySummary:
          $ref: '#/components/schemas/IdentitySummary'
        reviewerComment:
          $ref: '#/components/schemas/Comment'
        operation:
          $ref: '#/components/schemas/AccountActivityItemOperation'
        attribute:
          description: Attribute to which account activity applies
          example: detectedRoles
          nullable: true
          type: string
        value:
          description: Value of attribute
          example: "Treasury Analyst [AccessProfile-1529010191212]"
          nullable: true
          type: string
        nativeIdentity:
          description: Native identity in the target system to which the account activity
            applies
          example: Sandie.Camero
          nullable: true
          type: string
        sourceId:
          description: Id of Source to which account activity applies
          example: 2c91808363ef85290164000587130c0c
          type: string
        accountRequestInfo:
          $ref: '#/components/schemas/AccountRequestInfo'
        clientMetadata:
          additionalProperties:
            type: string
          description: "Arbitrary key-value pairs, if any were included in the corresponding\
            \ access request item"
          example:
            customKey1: custom value 1
            customKey2: custom value 2
          nullable: true
          type: object
        removeDate:
          description: The date the role or access profile or entitlement is no longer
            assigned to the specified identity.
          example: 2020-07-11T00:00:00Z
          format: date-time
          nullable: true
          type: string
      type: object
    ExecutionStatus:
      description: The current state of execution.
      enum:
      - EXECUTING
      - VERIFYING
      - TERMINATED
      - COMPLETED
      example: COMPLETED
      type: string
    AccountActivityDocument:
      description: AccountActivity
      properties:
        id:
          description: ID of account activity.
          example: 2c91808375d8e80a0175e1f88a575222
          type: string
        action:
          description: Type of action performed in the activity.
          example: Identity Refresh.
          externalDocs:
            description: Learn more about account activity action types
            url: https://documentation.sailpoint.com/saas/help/search/searchable-fields.html#searching-account-activity-data
          type: string
        created:
          description: ISO-8601 date-time referring to the time when the object was
            created.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: ISO-8601 date-time referring to the time when the object was
            last modified.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        synced:
          description: "ISO-8601 date-time referring to the date-time when object\
            \ was queued to be synced into search database for use in the search API.\
            \  \nThis date-time changes anytime there is an update to the object,\
            \ which triggers a synchronization event being sent to the search database.\
            \ \nThere may be some delay between the `synced` time and the time when\
            \ the updated data is actually available in the search API. "
          example: 2018-06-25T20:22:28.104Z
          type: string
        stage:
          description: Activity's current stage.
          example: Completed
          type: string
        status:
          description: Activity's current status.
          example: Complete
          type: string
        requester:
          $ref: '#/components/schemas/ActivityIdentity'
        recipient:
          $ref: '#/components/schemas/ActivityIdentity'
        trackingNumber:
          description: Account activity's tracking number.
          example: 61aad0c9e8134eca89e76a35e0cabe3f
          type: string
        errors:
          description: Errors provided by the source while completing account actions.
          items:
            type: string
          nullable: true
          type: array
          example: null
        warnings:
          description: Warnings provided by the source while completing account actions.
          items:
            type: string
          nullable: true
          type: array
          example: null
        approvals:
          description: Approvals performed on an item during activity.
          items:
            $ref: '#/components/schemas/Approval'
          type: array
        originalRequests:
          description: Original actions that triggered all individual source actions
            related to the account action.
          items:
            $ref: '#/components/schemas/OriginalRequest'
          type: array
        expansionItems:
          description: Controls that translated the attribute requests into actual
            provisioning actions on the source.
          items:
            $ref: '#/components/schemas/ExpansionItem'
          type: array
        accountRequests:
          description: Account data for each individual source action triggered by
            the original requests.
          items:
            $ref: '#/components/schemas/AccountRequest'
          type: array
        sources:
          description: Sources involved in the account activity.
          example: "smartsheet-test, airtable-v4, IdentityNow"
          type: string
      type: object
    ApprovalItemDetails:
      example:
        application: Active Directory
        name: emailAddress
        id: 2c9180835d2e5168015d32f890ca1581
        state: ""
        operation: update
        value: a@b.com
        account: john.smith
      properties:
        id:
          description: The approval item's ID
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        account:
          description: The account referenced by the approval item
          example: john.smith
          nullable: true
          type: string
        application:
          description: The name of the application/source
          example: Active Directory
          type: string
        name:
          description: The attribute's name
          example: emailAddress
          nullable: true
          type: string
        operation:
          description: The attribute's operation
          example: update
          type: string
        value:
          description: The attribute's value
          example: a@b.com
          nullable: true
          type: string
        state:
          allOf:
          - $ref: '#/components/schemas/WorkItemState'
          - nullable: true
            type: object
      type: object
    AccessConstraint:
      example:
        ids:
        - 2c90ad2a70ace7d50170acf22ca90010
        type: ENTITLEMENT
        operator: SELECTED
      properties:
        type:
          description: Type of Access
          enum:
          - ENTITLEMENT
          - ACCESS_PROFILE
          - ROLE
          example: ENTITLEMENT
          type: string
        ids:
          description: Must be set only if operator is SELECTED.
          example:
          - 2c90ad2a70ace7d50170acf22ca90010
          items:
            type: string
          type: array
        operator:
          description: Used to determine whether the scope of the campaign should
            be reduced for selected ids or all.
          enum:
          - ALL
          - SELECTED
          example: SELECTED
          type: string
      required:
      - operator
      - type
      type: object
    AccessProfileEntitlement:
      allOf:
      - $ref: '#/components/schemas/Access'
      - properties:
          source:
            $ref: '#/components/schemas/Reference'
          type:
            description: Type of the access item.
            example: ENTITLEMENT
            type: string
          privileged:
            example: false
            type: boolean
          attribute:
            example: memberOf
            type: string
          value:
            example: "CN=Buyer,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
            type: string
          standalone:
            example: false
            type: boolean
        type: object
      description: EntitlementReference
    EventDocument:
      description: Event
      properties:
        id:
          description: ID of the entitlement.
          example: 2c91808375d8e80a0175e1f88a575222
          type: string
        name:
          description: Name of the entitlement.
          example: Add Entitlement Passed
          type: string
        created:
          description: ISO-8601 date-time referring to the time when the object was
            created.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        synced:
          description: "ISO-8601 date-time referring to the date-time when object\
            \ was queued to be synced into search database for use in the search API.\
            \  \nThis date-time changes anytime there is an update to the object,\
            \ which triggers a synchronization event being sent to the search database.\
            \ \nThere may be some delay between the `synced` time and the time when\
            \ the updated data is actually available in the search API. "
          example: 2018-06-25T20:22:28.104Z
          type: string
        action:
          description: Name of the event as it's displayed in audit reports.
          example: AddEntitlement
          type: string
        type:
          description: "Event type. Refer to [Event Types](https://documentation.sailpoint.com/saas/help/search/index.html#event-types)\
            \ for a list of event types and their meanings."
          example: ACCESS_ITEM
          type: string
        actor:
          $ref: '#/components/schemas/Event_actor'
        target:
          $ref: '#/components/schemas/Event_target'
        stack:
          description: The event's stack.
          example: tpe
          type: string
        trackingNumber:
          description: ID of the group of events.
          example: 63f891e0735f4cc8bf1968144a1e7440
          type: string
        ipAddress:
          description: Target system's IP address.
          example: 52.52.97.85
          type: string
        details:
          description: ID of event's details.
          example: 73b65dfbed1842548c207432a18c84b0
          type: string
        attributes:
          additionalProperties: true
          description: Attributes involved in the event.
          example:
            pod: stg03-useast1
            org: acme
            sourceName: SailPoint
          type: object
        objects:
          description: Objects the event is happening to.
          items:
            example: AUTHENTICATION
            type: string
          type: array
        operation:
          description: "Operation, or action, performed during the event."
          example: ADD
          type: string
        status:
          description: "Event status. Refer to [Event Statuses](https://documentation.sailpoint.com/saas/help/search/index.html#event-statuses)\
            \ for a list of event statuses and their meanings."
          example: PASSED
          type: string
        technicalName:
          description: Event's normalized name. This normalized name always follows
            the pattern of 'objects_operation_status'.
          example: ENTITLEMENT_ADD_PASSED
          type: string
      type: object
    IdentityExceptionReportReference:
      example:
        reportName: My annual report
        taskResultId: 2b838de9-db9b-abcf-e646-d4f274ad4238
      nullable: true
      properties:
        taskResultId:
          description: Task result ID.
          example: 2b838de9-db9b-abcf-e646-d4f274ad4238
          format: uuid
          type: string
        reportName:
          description: Report name.
          example: My annual report
          type: string
      type: object
    ReassignReference:
      example:
        id: ef38f94347e94562b5bb8424a56397d8
        type: ITEM
      properties:
        id:
          description: The ID of item or identity being reassigned.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        type:
          description: The type of item or identity being reassigned.
          enum:
          - TARGET_SUMMARY
          - ITEM
          - IDENTITY_SUMMARY
          example: ITEM
          type: string
      required:
      - id
      - type
      type: object
    RemediationItemDetails:
      example:
        targetName: john.smith
        targetId: 2c9180835d2e5168015d32f890ca1581
        attributeValue: 512-555-1212
        targetDisplayName: emailAddress
        attributeName: phoneNumber
        id: 2c9180835d2e5168015d32f890ca1581
        applicationName: Active Directory
        attributeOperation: update
        nativeIdentity: jason.smith2
      properties:
        id:
          description: The ID of the certification
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        targetId:
          description: The ID of the certification target
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        targetName:
          description: The name of the certification target
          example: john.smith
          type: string
        targetDisplayName:
          description: The display name of the certification target
          example: emailAddress
          type: string
        applicationName:
          description: The name of the application/source
          example: Active Directory
          type: string
        attributeName:
          description: The name of the attribute being certified
          example: phoneNumber
          type: string
        attributeOperation:
          description: The operation of the certification on the attribute
          example: update
          type: string
        attributeValue:
          description: The value of the attribute being certified
          example: 512-555-1212
          type: string
        nativeIdentity:
          description: The native identity of the target
          example: jason.smith2
          type: string
      type: object
    AccessProfileRole:
      allOf:
      - $ref: '#/components/schemas/Access'
      - properties:
          type:
            description: Type of the access item.
            example: ROLE
            type: string
          owner:
            $ref: '#/components/schemas/DisplayReference'
          disabled:
            type: boolean
          revocable:
            type: boolean
        type: object
      description: Role
    OwnerDto:
      description: Owner's identity.
      example:
        name: Support
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      properties:
        type:
          description: Owner's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Owner's identity ID.
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Owner's name.
          example: Support
          type: string
      type: object
    SourceClusterDto:
      description: Source cluster.
      properties:
        type:
          description: Source cluster DTO type.
          enum:
          - CLUSTER
          example: CLUSTER
          type: string
        id:
          description: Source cluster ID.
          example: 2c9180847a7fccdd017aa5896f9f4f6f
          type: string
        name:
          description: Source cluster display name.
          example: Training VA
          type: string
      type: object
    BeforeProvisioningRuleDto:
      description: Before Provisioning Rule.
      properties:
        type:
          description: Before Provisioning Rule DTO type.
          enum:
          - RULE
          example: RULE
          type: string
        id:
          description: Before Provisioning Rule ID.
          example: 048eb3d55c5a4758bd07dccb87741c78
          type: string
        name:
          description: Rule display name.
          example: Before Provisioning Airtable Rule
          type: string
      type: object
    ManagerCorrelationMapping:
      properties:
        accountAttributeName:
          description: Name of the attribute to use for manager correlation. The value
            found on the account attribute will be used to lookup the manager's identity.
          example: manager
          type: string
        identityAttributeName:
          description: Name of the identity attribute to search when trying to find
            a manager using the value from the accountAttribute.
          example: manager
          type: string
      type: object
    SourceFeature:
      description: |-
        Optional features that can be supported by a source. Modifying the features array may cause source configuration errors that are unsupportable. It is recommended to not modify this array for SailPoint supported connectors.
        * AUTHENTICATE: The source supports pass-through authentication.
        * COMPOSITE: The source supports composite source creation.
        * DIRECT_PERMISSIONS: The source supports returning DirectPermissions.
        * DISCOVER_SCHEMA: The source supports discovering schemas for users and groups.
        * ENABLE The source supports reading if an account is enabled or disabled.
        * MANAGER_LOOKUP: The source supports looking up managers as they are encountered in a feed. This is the opposite of NO_RANDOM_ACCESS.
        * NO_RANDOM_ACCESS: The source does not support random access and the getObject() methods should not be called and expected to perform.
        * PROXY: The source can serve as a proxy for another source. When an source has a proxy, all connector calls made with that source are redirected through the connector for the proxy source.
        * SEARCH
        * TEMPLATE
        * UNLOCK: The source supports reading if an account is locked or unlocked.
        * UNSTRUCTURED_TARGETS: The source supports returning unstructured Targets.
        * SHAREPOINT_TARGET: The source supports returning unstructured Target data for SharePoint. It will be typically used by AD, LDAP sources.
        * PROVISIONING: The source can both read and write accounts. Having this feature implies that the provision() method is implemented. It also means that direct and target permissions can also be provisioned if they can be returned by aggregation.
        * GROUP_PROVISIONING: The source can both read and write groups. Having this feature implies that the provision() method is implemented.
        * SYNC_PROVISIONING: The source can provision accounts synchronously.
        * PASSWORD: The source can provision password changes. Since sources can never read passwords, this is should only be used in conjunction with the PROVISIONING feature.
        * CURRENT_PASSWORD: Some source types support verification of the current password
        * ACCOUNT_ONLY_REQUEST: The source supports requesting accounts without entitlements.
        * ADDITIONAL_ACCOUNT_REQUEST: The source supports requesting additional accounts.
        * NO_AGGREGATION: A source that does not support aggregation.
        * GROUPS_HAVE_MEMBERS: The source models group memberships with a member attribute on the group object rather than a groups attribute on the account object. This effects the implementation of delta account aggregation.
        * NO_PERMISSIONS_PROVISIONING: Indicates that the connector cannot provision direct or target permissions for accounts. When DIRECT_PERMISSIONS and PROVISIONING features are present, it is assumed that the connector can also provision direct permissions. This feature disables that assumption and causes permission request to be converted to work items for accounts.
        * NO_GROUP_PERMISSIONS_PROVISIONING: Indicates that the connector cannot provision direct or target permissions for groups. When DIRECT_PERMISSIONS and PROVISIONING features are present, it is assumed that the connector can also provision direct permissions. This feature disables that assumption and causes permission request to be converted to work items for groups.
        * NO_UNSTRUCTURED_TARGETS_PROVISIONING: This string will be replaced by NO_GROUP_PERMISSIONS_PROVISIONING and NO_PERMISSIONS_PROVISIONING.
        * NO_DIRECT_PERMISSIONS_PROVISIONING: This string will be replaced by NO_GROUP_PERMISSIONS_PROVISIONING and NO_PERMISSIONS_PROVISIONING.
        * USES_UUID: Connectivity 2.0 flag used to indicate that the connector supports a compound naming structure.
        * PREFER_UUID: Used in ISC Provisioning AND Aggregation to decide if it should prefer account.uuid to account.nativeIdentity when data is read in through aggregation OR pushed out through provisioning.
        * ARM_SECURITY_EXTRACT: Indicates the application supports Security extracts for ARM
        * ARM_UTILIZATION_EXTRACT: Indicates the application supports Utilization extracts for ARM
        * ARM_CHANGELOG_EXTRACT: Indicates the application supports Change-log extracts for ARM
      example:
      - PROVISIONING
      - NO_PERMISSIONS_PROVISIONING
      - GROUPS_HAVE_MEMBERS
      items:
        enum:
        - AUTHENTICATE
        - COMPOSITE
        - DIRECT_PERMISSIONS
        - DISCOVER_SCHEMA
        - ENABLE
        - MANAGER_LOOKUP
        - NO_RANDOM_ACCESS
        - PROXY
        - SEARCH
        - TEMPLATE
        - UNLOCK
        - UNSTRUCTURED_TARGETS
        - SHAREPOINT_TARGET
        - PROVISIONING
        - GROUP_PROVISIONING
        - SYNC_PROVISIONING
        - PASSWORD
        - CURRENT_PASSWORD
        - ACCOUNT_ONLY_REQUEST
        - ADDITIONAL_ACCOUNT_REQUEST
        - NO_AGGREGATION
        - GROUPS_HAVE_MEMBERS
        - NO_PERMISSIONS_PROVISIONING
        - NO_GROUP_PERMISSIONS_PROVISIONING
        - NO_UNSTRUCTURED_TARGETS_PROVISIONING
        - NO_DIRECT_PERMISSIONS_PROVISIONING
        - PREFER_UUID
        - ARM_SECURITY_EXTRACT
        - ARM_UTILIZATION_EXTRACT
        - ARM_CHANGELOG_EXTRACT
        - USES_UUID
        - APPLICATION_DISCOVERY
        example: AUTHENTICATE
        type: string
      type: array
    WorkItemStateManualWorkItems:
      description: The state of a work item
      enum:
      - Finished
      - Rejected
      - Returned
      - Expired
      - Pending
      - Canceled
      example: Finished
      type: string
    WorkItemTypeManualWorkItems:
      description: The type of the work item
      enum:
      - Generic
      - Certification
      - Remediation
      - Delegation
      - Approval
      - ViolationReview
      - Form
      - PolicyVioloation
      - Challenge
      - ImpactAnalysis
      - Signoff
      - Event
      - ManualAction
      - Test
      example: Generic
      type: string
    FormDetails:
      properties:
        id:
          description: ID of the form
          example: 2c9180835d2e5168015d32f890ca1581
          nullable: true
          type: string
        name:
          description: Name of the form
          example: AccountSelection Form
          nullable: true
          type: string
        title:
          description: The form title
          example: Account Selection for John.Doe
          type: string
        subtitle:
          description: The form subtitle.
          example: Please select from the following
          type: string
        targetUser:
          description: The name of the user that should be shown this form
          example: Jane.Doe
          type: string
        sections:
          description: Sections of the form
          items:
            $ref: '#/components/schemas/SectionDetails'
          type: array
      type: object
    OwnerReference:
      description: Owner of the object.
      example:
        name: support
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      nullable: false
      properties:
        type:
          description: "Owner type. This field must be either left null or set to\
            \ 'IDENTITY' on input, otherwise a 400 Bad Request error will result."
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Owner's identity ID.
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: "Owner's name. It may be left null or omitted in a POST or\
            \ PATCH. If set, it must match the current value of the owner's display\
            \ name, otherwise a 400 Bad Request error will result."
          example: support
          type: string
      type: object
    AccessProfileSourceRef:
      example:
        name: ODS-AD-SOURCE
        id: 2c91809773dee3610173fdb0b6061ef4
        type: SOURCE
      properties:
        id:
          description: ID of the source the access profile is associated with.
          example: 2c91809773dee3610173fdb0b6061ef4
          type: string
        type:
          description: Source's DTO type.
          enum:
          - SOURCE
          example: SOURCE
          type: string
        name:
          description: Source name.
          example: ODS-AD-SOURCE
          type: string
      type: object
    EntitlementRef:
      description: Entitlement including a specific set of access.
      example:
        name: "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local"
        id: 2c91809773dee32014e13e122092014e
        type: ENTITLEMENT
      properties:
        type:
          description: Entitlement's DTO type.
          enum:
          - ENTITLEMENT
          example: ENTITLEMENT
          type: string
        id:
          description: Entitlement's ID.
          example: 2c91809773dee32014e13e122092014e
          type: string
        name:
          description: Entitlement's display name.
          example: "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local"
          nullable: true
          type: string
      type: object
    Requestability:
      example:
        commentsRequired: true
        reauthorizationRequired: true
        approvalSchemes:
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        denialCommentsRequired: true
      nullable: true
      properties:
        commentsRequired:
          default: false
          description: Indicates whether the requester of the containing object must
            provide comments justifying the request.
          example: true
          nullable: true
          type: boolean
        denialCommentsRequired:
          default: false
          description: Indicates whether an approver must provide comments when denying
            the request.
          example: true
          nullable: true
          type: boolean
        reauthorizationRequired:
          default: false
          description: Indicates whether reauthorization is required for the request.
          example: true
          nullable: true
          type: boolean
        approvalSchemes:
          description: List describing the steps involved in approving the request.
          items:
            $ref: '#/components/schemas/AccessProfileApprovalScheme'
          nullable: true
          type: array
      type: object
    Revocability:
      example:
        approvalSchemes:
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
      nullable: true
      properties:
        approvalSchemes:
          description: List describing the steps involved in approving the revocation
            request.
          items:
            $ref: '#/components/schemas/AccessProfileApprovalScheme'
          nullable: true
          type: array
      type: object
    ProvisioningCriteriaLevel1:
      description: Defines matching criteria for an account to be provisioned with
        a specific access profile.
      example:
        children:
        - children:
          - children: children
            attribute: email
            operation: EQUALS
            value: carlee.cert1c9f9b6fd@mailinator.com
          - children: children
            attribute: email
            operation: EQUALS
            value: carlee.cert1c9f9b6fd@mailinator.com
          attribute: email
          operation: EQUALS
          value: carlee.cert1c9f9b6fd@mailinator.com
        - children:
          - children: children
            attribute: email
            operation: EQUALS
            value: carlee.cert1c9f9b6fd@mailinator.com
          - children: children
            attribute: email
            operation: EQUALS
            value: carlee.cert1c9f9b6fd@mailinator.com
          attribute: email
          operation: EQUALS
          value: carlee.cert1c9f9b6fd@mailinator.com
        attribute: email
        operation: EQUALS
        value: carlee.cert1c9f9b6fd@mailinator.com
      nullable: true
      properties:
        operation:
          $ref: '#/components/schemas/ProvisioningCriteriaOperation'
        attribute:
          description: "Name of the account attribute to be tested. If **operation**\
            \ is one of `EQUALS`, `NOT_EQUALS`, `CONTAINS`, or `HAS`, this field is\
            \ required. Otherwise, specifying it results in an error."
          example: email
          nullable: true
          type: string
        value:
          description: "String value to test the account attribute w/r/t the specified\
            \ operation. If the operation is one of `EQUALS`, `NOT_EQUALS`, or `CONTAINS`,\
            \ this field is required. Otherwise, specifying it results in an error.\
            \ If the attribute is not string-typed, the API will convert it to the\
            \ appropriate type."
          example: carlee.cert1c9f9b6fd@mailinator.com
          nullable: true
          type: string
        children:
          description: "Array of child criteria. This field is required if the operation\
            \ is `AND` or `OR`. Otherwise, it must be left null. A maximum of three\
            \ levels of criteria are supported, including leaf nodes."
          items:
            $ref: '#/components/schemas/ProvisioningCriteriaLevel2'
          nullable: true
          type: array
          example: null
      type: object
    ErrorMessageDto:
      example:
        localeOrigin: DEFAULT
        text: The request was syntactically correct but its content is semantically
          invalid.
        locale: en-US
      properties:
        locale:
          description: "The locale for the message text, a BCP 47 language tag."
          example: en-US
          nullable: true
          type: string
        localeOrigin:
          $ref: '#/components/schemas/LocaleOrigin'
        text:
          description: Actual text of the error message in the indicated locale.
          example: The request was syntactically correct but its content is semantically
            invalid.
          type: string
      type: object
    AccessProfileUsage:
      example:
        accessProfileId: 2c91808876438bbb017668c21919ecca
        usedBy:
        - name: Manager Role
          id: 2c8180857a9b3da0017aa03418480f9d
          type: ROLE
        - name: Manager Role
          id: 2c8180857a9b3da0017aa03418480f9d
          type: ROLE
      properties:
        accessProfileId:
          description: ID of the Access Profile that is in use
          example: 2c91808876438bbb017668c21919ecca
          type: string
        usedBy:
          description: List of references to objects which are using the indicated
            Access Profile
          items:
            $ref: '#/components/schemas/AccessProfileUsage_usedBy_inner'
          type: array
      type: object
    AccessModelMetadata:
      description: Metadata that describes an access item
      example:
        multiselect: true
        values:
        - name: Development
          value: development
          status: active
        - name: Development
          value: development
          status: active
        name: CSP
        description: Indicates the type of deployment environment of an access item.
        type: governance
        objectTypes:
        - general
        - general
        key: iscCsp
        status: active
      properties:
        key:
          description: Unique identifier for the metadata type
          example: iscCsp
          type: string
        name:
          description: Human readable name of the metadata type
          example: CSP
          type: string
        multiselect:
          default: false
          description: Allows selecting multiple values
          example: true
          type: boolean
        status:
          description: The state of the metadata item
          example: active
          type: string
        type:
          description: The type of the metadata item
          example: governance
          type: string
        objectTypes:
          description: The types of objects
          items:
            example: general
            type: string
          type: array
        description:
          description: Describes the metadata item
          example: Indicates the type of deployment environment of an access item.
          type: string
        values:
          description: The value to assign to the metadata item
          items:
            $ref: '#/components/schemas/AccessModelMetadata_values_inner'
          type: array
      type: object
    AccessRequestTracking:
      properties:
        requestedFor:
          description: The identity id in which the access request is for.
          example: 2c918084660f45d6016617daa9210584
          type: string
        requestedItemsDetails:
          description: The details of the item requested.
          example: "{\n\"type\": \"ENTITLEMENT\", \n\"id\": \"779c6fd7171540bba1184e5946112c28\"\
            \ \n }"
          items:
            $ref: '#/components/schemas/RequestedItemDetails'
          type: array
        attributesHash:
          description: "a hash representation of the access requested, useful for\
            \ longer term tracking client side."
          example: -1928438224
          format: int32
          type: integer
        accessRequestIds:
          description: "a list of access request identifiers, generally only one will\
            \ be populated, but high volume requested may result in multiple ids."
          example:
          - 5d3118c518a44ec7805450d53479ccdb
          items:
            type: string
          type: array
      type: object
    RequestOnBehalfOfConfig:
      example:
        allowRequestOnBehalfOfEmployeeByManager: true
        allowRequestOnBehalfOfAnyoneByAnyone: true
      properties:
        allowRequestOnBehalfOfAnyoneByAnyone:
          default: false
          description: "If this is true, anyone can request access for anyone."
          example: true
          type: boolean
        allowRequestOnBehalfOfEmployeeByManager:
          default: false
          description: "If this is true, a manager can request access for his or her\
            \ direct reports."
          example: true
          type: boolean
      type: object
    ApprovalReminderAndEscalationConfig:
      example:
        fallbackApproverRef:
          name: Alison Ferguso
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
          email: alison.ferguso@identitysoon.com
        maxReminders: 1
        daysUntilEscalation: 0
        daysBetweenReminders: 0
      properties:
        daysUntilEscalation:
          description: "Number of days to wait before the first reminder. If no reminders\
            \ are configured, then this is the number of days to wait before escalation."
          example: 0
          format: int32
          nullable: true
          type: integer
        daysBetweenReminders:
          description: Number of days to wait between reminder notifications.
          example: 0
          format: int32
          nullable: true
          type: integer
        maxReminders:
          description: Maximum number of reminder notification to send to the reviewer
            before approval escalation.
          example: 1
          format: int32
          minimum: 1
          nullable: true
          type: integer
        fallbackApproverRef:
          $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
      type: object
    EntitlementRequestConfig:
      example:
        requestCommentsRequired: false
        deniedCommentsRequired: false
        allowEntitlementRequest: true
        grantRequestApprovalSchemes: "entitlementOwner, sourceOwner, manager, workgroup:2c918084660f45d6016617daa9210584"
      properties:
        allowEntitlementRequest:
          default: false
          description: "If this is true, entitlement requests are allowed."
          example: true
          type: boolean
        requestCommentsRequired:
          default: false
          description: "If this is true, comments are required to submit entitlement\
            \ requests."
          example: false
          type: boolean
        deniedCommentsRequired:
          default: false
          description: "If this is true, comments are required to reject entitlement\
            \ requests."
          example: false
          type: boolean
        grantRequestApprovalSchemes:
          default: sourceOwner
          description: |
            Approval schemes for granting entitlement request. This can be empty if no approval is needed.
            Multiple schemes must be comma-separated. The valid schemes are "entitlementOwner", "sourceOwner", "manager" and "`workgroup:{id}`".
            You can use multiple governance groups (workgroups).
          example: "entitlementOwner, sourceOwner, manager, workgroup:2c918084660f45d6016617daa9210584"
          nullable: true
          type: string
      type: object
    CancelledRequestDetails:
      description: Provides additional details for a request that has been cancelled.
      properties:
        comment:
          description: Comment made by the owner when cancelling the associated request.
          example: This request must be cancelled.
          type: string
        owner:
          $ref: '#/components/schemas/OwnerDto'
        modified:
          description: Date comment was added by the owner when cancelling the associated
            request.
          example: 2019-12-20T09:17:12.192Z
          format: date-time
          type: string
      type: object
    ErrorMessageDtoList:
      items:
        $ref: '#/components/schemas/ErrorMessageDto'
      type: array
    RequestedItemStatusRequestState:
      description: |-
        Indicates the state of an access request:
        * EXECUTING: The request is executing, which indicates the system is doing some processing.
        * REQUEST_COMPLETED: Indicates the request  has been completed.
        * CANCELLED: The request was cancelled with no user input.
        * TERMINATED: The request has been terminated before it was able to complete.
        * PROVISIONING_VERIFICATION_PENDING: The request has finished any approval steps and provisioning is waiting to be verified.
        * REJECTED: The request was rejected.
        * PROVISIONING_FAILED: The request has failed to complete.
        * NOT_ALL_ITEMS_PROVISIONED: One or more of the requested items failed to complete, but there were one or more  successes.
        * ERROR: An error occurred during request processing.
      enum:
      - EXECUTING
      - REQUEST_COMPLETED
      - CANCELLED
      - TERMINATED
      - PROVISIONING_VERIFICATION_PENDING
      - REJECTED
      - PROVISIONING_FAILED
      - NOT_ALL_ITEMS_PROVISIONED
      - ERROR
      example: EXECUTING
      type: string
    ApprovalStatusDto:
      example:
        errorMessages:
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        removeDate: 2020-07-11T00:00:00Z
        originalOwner:
          name: Michael Michaels
          id: 2c7180a46faadee4016fb4e018c20642
          type: IDENTITY
        scheme: MANAGER
        currentOwner:
          name: Allen Albertson
          id: 2c3780a46faadee4016fb4e018c20652
          type: IDENTITY
        modified: 2019-08-23T18:52:57.398Z
        approvalId: 2c9180877b2b6ea4017b2c545f971429
        comment: I approve this request
        forwarded: false
        status: PENDING
      properties:
        approvalId:
          description: Unique identifier for the approval.
          example: 2c9180877b2b6ea4017b2c545f971429
          nullable: true
          type: string
        forwarded:
          default: false
          description: True if the request for this item was forwarded from one owner
            to another.
          example: false
          type: boolean
        originalOwner:
          $ref: '#/components/schemas/ApprovalStatusDto_originalOwner'
        currentOwner:
          $ref: '#/components/schemas/ApprovalStatusDto_currentOwner'
        modified:
          description: Time at which item was modified.
          example: 2019-08-23T18:52:57.398Z
          format: date-time
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/ManualWorkItemState'
        scheme:
          $ref: '#/components/schemas/ApprovalScheme'
        errorMessages:
          description: "If the request failed, includes any error messages that were\
            \ generated."
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          nullable: true
          type: array
        comment:
          description: "Comment, if any, provided by the approver."
          example: I approve this request
          nullable: true
          type: string
        removeDate:
          description: The date the role or access profile or entitlement is no longer
            assigned to the specified identity.
          example: 2020-07-11T00:00:00Z
          format: date-time
          nullable: true
          type: string
      type: object
    ManualWorkItemDetails:
      example:
        originalOwner:
          name: Michael Michaels
          id: 2c7180a46faadee4016fb4e018c20642
          type: IDENTITY
        currentOwner:
          name: Allen Albertson
          id: 2c3780a46faadee4016fb4e018c20652
          type: IDENTITY
        modified: 2019-08-23T18:52:57.398Z
        forwardHistory:
        - forwarderName: William Wilson
          reassignmentType: AUTOMATIC_REASSIGNMENT
          modified: 2019-08-23T18:52:57.398Z
          oldApproverName: Frank Mir
          newApproverName: Al Volta
          comment: Forwarding from Frank to Al
        - forwarderName: William Wilson
          reassignmentType: AUTOMATIC_REASSIGNMENT
          modified: 2019-08-23T18:52:57.398Z
          oldApproverName: Frank Mir
          newApproverName: Al Volta
          comment: Forwarding from Frank to Al
        forwarded: true
        status: PENDING
      properties:
        forwarded:
          default: false
          description: True if the request for this item was forwarded from one owner
            to another.
          example: true
          type: boolean
        originalOwner:
          $ref: '#/components/schemas/ManualWorkItemDetails_originalOwner'
        currentOwner:
          $ref: '#/components/schemas/ManualWorkItemDetails_currentOwner'
        modified:
          description: Time at which item was modified.
          example: 2019-08-23T18:52:57.398Z
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ManualWorkItemState'
        forwardHistory:
          description: The history of approval forward action.
          items:
            $ref: '#/components/schemas/ApprovalForwardHistory'
          nullable: true
          type: array
      type: object
    AccessItemRequester:
      description: Access item requester's identity.
      example:
        name: William Wilson
        id: 2c7180a46faadee4016fb4e018c20648
        type: IDENTITY
      properties:
        type:
          description: Access item requester's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Access item requester's identity ID.
          example: 2c7180a46faadee4016fb4e018c20648
          type: string
        name:
          description: Access item owner's human-readable display name.
          example: William Wilson
          type: string
      type: object
    SodViolationContextCheckCompleted:
      description: An object referencing a completed SOD violation check
      example:
        violationCheckResult:
          clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          violationContexts:
          - conflictingAccessCriteria:
              leftCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
              rightCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
            policy:
              name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
          - conflictingAccessCriteria:
              leftCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
              rightCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
            policy:
              name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
          violatedPolicies:
          - name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
          - name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
          message:
            localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
        state: SUCCESS
        uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
      nullable: true
      properties:
        state:
          description: The status of SOD violation check
          enum:
          - SUCCESS
          - ERROR
          - null
          example: SUCCESS
          nullable: true
          type: string
        uuid:
          description: The id of the Violation check event
          example: f73d16e9-a038-46c5-b217-1246e15fdbdd
          nullable: true
          type: string
        violationCheckResult:
          $ref: '#/components/schemas/SodViolationCheckResult'
      type: object
    ProvisioningDetails:
      description: Provides additional details about provisioning for this request.
      properties:
        orderedSubPhaseReferences:
          description: "Ordered CSV of sub phase references to objects that contain\
            \ more information about provisioning. For example, this can contain \"\
            manualWorkItemDetails\" which indicate that there is further information\
            \ in that object for this phase."
          example: manualWorkItemDetails
          type: string
      type: object
    PreApprovalTriggerDetails:
      description: Provides additional details about the pre-approval trigger for
        this request.
      properties:
        comment:
          description: Comment left for the pre-approval decision
          example: Access is Approved
          type: string
        reviewer:
          description: The reviewer of the pre-approval decision
          example: John Doe
          type: string
        decision:
          description: The decision of the pre-approval trigger
          enum:
          - APPROVED
          - REJECTED
          example: APPROVED
          type: string
      type: object
    AccessRequestPhases:
      description: Provides additional details about this access request phase.
      example:
        result: SUCCESSFUL
        phaseReference: approvalDetails
        name: APPROVAL_PHASE
        started: 2020-07-11T00:00:00Z
        finished: 2020-07-12T00:00:00Z
        state: COMPLETED
      properties:
        started:
          description: The time that this phase started.
          example: 2020-07-11T00:00:00Z
          format: date-time
          type: string
        finished:
          description: The time that this phase finished.
          example: 2020-07-12T00:00:00Z
          format: date-time
          nullable: true
          type: string
        name:
          description: The name of this phase.
          example: APPROVAL_PHASE
          type: string
        state:
          description: The state of this phase.
          enum:
          - PENDING
          - EXECUTING
          - COMPLETED
          - CANCELLED
          - NOT_EXECUTED
          example: COMPLETED
          type: string
        result:
          description: The state of this phase.
          enum:
          - SUCCESSFUL
          - FAILED
          - null
          example: SUCCESSFUL
          nullable: true
          type: string
        phaseReference:
          description: "A reference to another object on the RequestedItemStatus that\
            \ contains more details about the phase. Note that for the Provisioning\
            \ phase, this will be empty if there are no manual work items."
          example: approvalDetails
          nullable: true
          type: string
      type: object
    RequestedAccountRef:
      example:
        accountId: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
        name: Glen.067da3248e914
        accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
        sourceName: Multi Account AD source name
        type: IDENTITY
      properties:
        name:
          description: Display name of the account for the user
          example: Glen.067da3248e914
          type: string
        type:
          $ref: '#/components/schemas/DtoType'
        accountUuid:
          description: The uuid for the account
          example: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
          nullable: true
          type: string
        accountId:
          description: The native identity for the account
          example: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          nullable: true
          type: string
        sourceName:
          description: Display name of the source for the account
          example: Multi Account AD source name
          nullable: false
          type: string
      type: object
    AccessItemRequestedFor:
      description: Identity the access item is requested for.
      example:
        name: Robert Robinson
        id: 2c4180a46faadee4016fb4e018c20626
        type: IDENTITY
      properties:
        type:
          description: DTO type of identity the access item is requested for.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of identity the access item is requested for.
          example: 2c4180a46faadee4016fb4e018c20626
          type: string
        name:
          description: Human-readable display name of identity the access item is
            requested for.
          example: Robert Robinson
          type: string
      type: object
    RequestableObjectReference:
      example:
        name: Applied Research Access
        description: "Access to research information, lab results, and schematics"
        id: 2c9180835d2e5168015d32f890ca1581
        type: ROLE
      properties:
        id:
          description: Id of the object.
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: Name of the object.
          example: Applied Research Access
          type: string
        description:
          description: Description of the object.
          example: "Access to research information, lab results, and schematics"
          type: string
        type:
          description: Type of the object.
          enum:
          - ACCESS_PROFILE
          - ROLE
          - ENTITLEMENT
          example: ROLE
          type: string
      type: object
    ApprovalForwardHistory:
      example:
        forwarderName: William Wilson
        reassignmentType: AUTOMATIC_REASSIGNMENT
        modified: 2019-08-23T18:52:57.398Z
        oldApproverName: Frank Mir
        newApproverName: Al Volta
        comment: Forwarding from Frank to Al
      properties:
        oldApproverName:
          description: Display name of approver from whom the approval was forwarded.
          example: Frank Mir
          type: string
        newApproverName:
          description: Display name of approver to whom the approval was forwarded.
          example: Al Volta
          type: string
        comment:
          description: Comment made while forwarding.
          example: Forwarding from Frank to Al
          nullable: true
          type: string
        modified:
          description: Time at which approval was forwarded.
          example: 2019-08-23T18:52:57.398Z
          format: date-time
          type: string
        forwarderName:
          description: Display name of forwarder who forwarded the approval.
          example: William Wilson
          nullable: true
          type: string
        reassignmentType:
          $ref: '#/components/schemas/ReassignmentType'
      type: object
    PendingApprovalAction:
      description: Enum represents action that is being processed on an approval.
      enum:
      - APPROVED
      - REJECTED
      - FORWARDED
      example: APPROVED
      type: string
    AccessItemReviewedBy:
      description: Identity who reviewed the access item request.
      example:
        name: Allen Albertson
        id: 2c3780a46faadee4016fb4e018c20652
        type: IDENTITY
      properties:
        type:
          description: DTO type of identity who reviewed the access item request.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of identity who reviewed the access item request.
          example: 2c3780a46faadee4016fb4e018c20652
          type: string
        name:
          description: Human-readable display name of identity who reviewed the access
            item request.
          example: Allen Albertson
          type: string
      type: object
    CompletedApprovalState:
      description: Enum represents completed approval object's state.
      enum:
      - APPROVED
      - REJECTED
      example: APPROVED
      type: string
    IdpDetails:
      allOf:
      - $ref: '#/components/schemas/FederationProtocolDetails'
      - description: Specification of Identity Provider Details section of Service
          Provider Config
        properties:
          binding:
            description: Defines the binding used for the SAML flow. Used with IDP
              configurations.
            example: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST
            type: string
          authnContext:
            description: Specifies the SAML authentication method to use. Used with
              IDP configurations.
            example: urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport
            type: string
          logoutUrl:
            description: The IDP logout URL. Used with IDP configurations.
            example: https://dev-206445.oktapreview.com/login/signout
            type: string
          includeAuthnContext:
            default: false
            description: Determines if the configured AuthnContext should be used
              or the default. Used with IDP configurations.
            example: false
            type: boolean
          nameId:
            description: The name id format to use. Used with IDP configurations.
            example: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
            type: string
          jitConfiguration:
            $ref: '#/components/schemas/JITConfiguration'
          cert:
            description: The Base64-encoded certificate used by the IDP. Used with
              IDP configurations.
            example: '-----BEGIN CERTIFICATE-----****-----END CERTIFICATE-----'
            type: string
          loginUrlPost:
            description: "The IDP POST URL, used with IDP HTTP-POST bindings for IDP-initiated\
              \ logins. Used with IDP configurations."
            example: https://dev-157216.okta.com/app/sailpointdev157216_cdovsaml_1/exkdaruy8Ln5Ry7C54x6/sso/saml
            type: string
          loginUrlRedirect:
            description: The IDP Redirect URL. Used with IDP configurations.
            example: https://dev-157216.okta.com/app/sailpointdev157216_cdovsaml_1/exkdaruy8Ln5Ry7C54x6/sso/saml
            type: string
          mappingAttribute:
            description: "Return the saml Id for the given user, based on the IDN\
              \ as SP settings of the org. Used with IDP configurations."
            example: email
            type: string
          certificateExpirationDate:
            description: The expiration date extracted from the certificate.
            example: Fri Mar 08 08:54:24 UTC 2013
            type: string
          certificateName:
            description: The name extracted from the certificate.
            example: "OU=Conext, O=Surfnet, L=Utrecht, ST=Utrecht, C=NL"
            type: string
        required:
        - mappingAttribute
        type: object
    SpDetails:
      allOf:
      - $ref: '#/components/schemas/FederationProtocolDetails'
      - description: Specification of a Service Provider Details
        properties:
          alias:
            description: Unique alias used to identify the selected local service
              provider based on used URL. Used with SP configurations.
            example: acme-sp
            type: string
          callbackUrl:
            description: The allowed callback URL where users will be redirected to
              after authentication. Used with SP configurations.
            example: https://stradbroke-sso.identitysoon.com/sso/Consumer/metaAlias/cdov-saml/sp
            type: string
          legacyAcsUrl:
            description: The legacy ACS URL used for SAML authentication. Used with
              SP configurations.
            example: https://megapod-useast1-sso.identitysoon.com/sso/Consumer/metaAlias/acme/sp
            type: string
        required:
        - callbackUrl
        type: object
    CampaignAlert:
      example:
        level: ERROR
        localizations:
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
      properties:
        level:
          description: Denotes the level of the message
          enum:
          - ERROR
          - WARN
          - INFO
          example: ERROR
          type: string
        localizations:
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
      type: object
    ReassignmentTrailDTOList:
      description: Reassignment trails that lead to self certification identity
      example:
        previousOwner: ef38f94347e94562b5bb8424a56397d8
        newOwner: ef38f94347e94562b5bb8424a56397a3
        reassignmentType: AUTOMATIC_REASSIGNMENT
      items:
        $ref: '#/components/schemas/ReassignmentTrailDTO'
      type: array
    CriteriaType:
      description: Type of the criteria in the filter. The `COMPOSITE` filter can
        contain multiple filters in an AND/OR relationship.
      enum:
      - COMPOSITE
      - ROLE
      - IDENTITY
      - IDENTITY_ATTRIBUTE
      - ENTITLEMENT
      - ACCESS_PROFILE
      - SOURCE
      - ACCOUNT
      - AGGREGATED_ENTITLEMENT
      - INVALID_CERTIFIABLE_ENTITY
      - INVALID_CERTIFIABLE_BUNDLE
      example: IDENTITY_ATTRIBUTE
      type: string
    Operation:
      description: Operation on a specific criteria
      enum:
      - EQUALS
      - NOT_EQUALS
      - CONTAINS
      - STARTS_WITH
      - ENDS_WITH
      - AND
      - OR
      - null
      example: EQUALS
      nullable: true
      type: string
    CertificationPhase:
      description: |
        The current phase of the campaign.
        * `STAGED`: The campaign is waiting to be activated.
        * `ACTIVE`: The campaign is active.
        * `SIGNED`: The reviewer has signed off on the campaign, and it is considered complete.
      enum:
      - STAGED
      - ACTIVE
      - SIGNED
      example: ACTIVE
      type: string
    CertificationDecision:
      description: The decision to approve or revoke the review item
      enum:
      - APPROVE
      - REVOKE
      example: APPROVE
      type: string
    ReviewRecommendation:
      example:
        reasons:
        - Reason 1
        - Reason 2
        recommendation: recommendation
        timestamp: 2020-06-01T13:49:37.385Z
      properties:
        recommendation:
          description: The recommendation from IAI at the time of the decision. This
            field will be null if no recommendation was made.
          nullable: true
          type: string
          example: null
        reasons:
          description: A list of reasons for the recommendation.
          example:
          - Reason 1
          - Reason 2
          items:
            type: string
          type: array
        timestamp:
          description: The time at which the recommendation was recorded.
          example: 2020-06-01T13:49:37.385Z
          format: date-time
          type: string
      type: object
    DtoType:
      description: An enumeration of the types of DTOs supported within the IdentityNow
        infrastructure.
      enum:
      - ACCOUNT_CORRELATION_CONFIG
      - ACCESS_PROFILE
      - ACCESS_REQUEST_APPROVAL
      - ACCOUNT
      - APPLICATION
      - CAMPAIGN
      - CAMPAIGN_FILTER
      - CERTIFICATION
      - CLUSTER
      - CONNECTOR_SCHEMA
      - ENTITLEMENT
      - GOVERNANCE_GROUP
      - IDENTITY
      - IDENTITY_PROFILE
      - IDENTITY_REQUEST
      - MACHINE_IDENTITY
      - LIFECYCLE_STATE
      - PASSWORD_POLICY
      - ROLE
      - RULE
      - SOD_POLICY
      - SOURCE
      - TAG
      - TAG_CATEGORY
      - TASK_RESULT
      - REPORT_RESULT
      - SOD_VIOLATION
      - ACCOUNT_ACTIVITY
      - WORKGROUP
      example: IDENTITY
      type: string
    ReviewableEntitlement:
      example:
        owner:
          name: Alison Ferguso
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
          email: alison.ferguso@identitysoon.com
        sourceId: 78ca6be511cb41fbb86dba2fcca7780c
        dataAccess:
          policies:
          - value: GDPR-20
          - value: GDPR-20
          categories:
          - matchCount: 10
            value: email-7
          - matchCount: 10
            value: email-7
          impactScore:
            value: Medium
        hasPermissions: false
        attributeValue: CN=entitlement.bbb7c650
        containsDataAccess: true
        description: Gives read/write access to the company database
        isPermission: false
        revocable: true
        privileged: false
        sourceType: Active Directory - Direct
        name: CN=entitlement.bbb7c650
        attributeName: memberOf
        sourceSchemaObjectType: groups
        id: 2c918085718230600171993742c63558
        sourceName: ODS-AD-Source
        cloudGoverned: false
        account:
          owner:
            displayName: Alison Ferguson
            id: 2c9180857182305e0171993737eb29e8
            type: IDENTITY
          created: 2020-04-20T20:11:05.067Z
          name: Alison Ferguso
          modified: 2020-05-20T18:57:16.987Z
          description: Account for Read/write to the company database
          disabled: false
          governanceGroupId: 2c9180857182305e0171993737eb29e6
          id: 2c9180857182305e0171993737eb29e6
          locked: false
          type: IDENTITY
          nativeIdentity: CN=Alison Ferguso
          activityInsights:
            accountID: c4ddd5421d8549f0abd309162cafd3b1
            usageDays: 45
            usageDaysState: COMPLETE
      nullable: true
      properties:
        id:
          description: The id for the entitlement
          example: 2c918085718230600171993742c63558
          type: string
        name:
          description: The name of the entitlement
          example: CN=entitlement.bbb7c650
          type: string
        description:
          description: Information about the entitlement
          example: Gives read/write access to the company database
          nullable: true
          type: string
        privileged:
          default: false
          description: Indicates if the entitlement is a privileged entitlement
          example: false
          type: boolean
        owner:
          $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
        attributeName:
          description: The name of the attribute on the source
          example: memberOf
          type: string
        attributeValue:
          description: The value of the attribute on the source
          example: CN=entitlement.bbb7c650
          type: string
        sourceSchemaObjectType:
          description: The schema object type on the source used to represent the
            entitlement and its attributes
          example: groups
          type: string
        sourceName:
          description: The name of the source for which this entitlement belongs
          example: ODS-AD-Source
          type: string
        sourceType:
          description: The type of the source for which the entitlement belongs
          example: Active Directory - Direct
          type: string
        sourceId:
          description: The ID of the source for which the entitlement belongs
          example: 78ca6be511cb41fbb86dba2fcca7780c
          type: string
        hasPermissions:
          default: false
          description: Indicates if the entitlement has permissions
          example: false
          type: boolean
        isPermission:
          default: false
          description: Indicates if the entitlement is a representation of an account
            permission
          example: false
          type: boolean
        revocable:
          default: false
          description: Indicates whether the entitlement can be revoked
          example: true
          type: boolean
        cloudGoverned:
          default: false
          description: True if the entitlement is cloud governed
          example: false
          type: boolean
        containsDataAccess:
          default: false
          description: True if the entitlement has DAS data
          example: true
          type: boolean
        dataAccess:
          $ref: '#/components/schemas/DataAccess'
        account:
          $ref: '#/components/schemas/ReviewableEntitlement_account'
      type: object
    ReviewableAccessProfile:
      example:
        privileged: false
        owner:
          name: Alison Ferguso
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
          email: alison.ferguso@identitysoon.com
        entitlements:
        - owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          sourceId: 78ca6be511cb41fbb86dba2fcca7780c
          dataAccess:
            policies:
            - value: GDPR-20
            - value: GDPR-20
            categories:
            - matchCount: 10
              value: email-7
            - matchCount: 10
              value: email-7
            impactScore:
              value: Medium
          hasPermissions: false
          attributeValue: CN=entitlement.bbb7c650
          containsDataAccess: true
          description: Gives read/write access to the company database
          isPermission: false
          revocable: true
          privileged: false
          sourceType: Active Directory - Direct
          name: CN=entitlement.bbb7c650
          attributeName: memberOf
          sourceSchemaObjectType: groups
          id: 2c918085718230600171993742c63558
          sourceName: ODS-AD-Source
          cloudGoverned: false
          account:
            owner:
              displayName: Alison Ferguson
              id: 2c9180857182305e0171993737eb29e8
              type: IDENTITY
            created: 2020-04-20T20:11:05.067Z
            name: Alison Ferguso
            modified: 2020-05-20T18:57:16.987Z
            description: Account for Read/write to the company database
            disabled: false
            governanceGroupId: 2c9180857182305e0171993737eb29e6
            id: 2c9180857182305e0171993737eb29e6
            locked: false
            type: IDENTITY
            nativeIdentity: CN=Alison Ferguso
            activityInsights:
              accountID: c4ddd5421d8549f0abd309162cafd3b1
              usageDays: 45
              usageDaysState: COMPLETE
        - owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          sourceId: 78ca6be511cb41fbb86dba2fcca7780c
          dataAccess:
            policies:
            - value: GDPR-20
            - value: GDPR-20
            categories:
            - matchCount: 10
              value: email-7
            - matchCount: 10
              value: email-7
            impactScore:
              value: Medium
          hasPermissions: false
          attributeValue: CN=entitlement.bbb7c650
          containsDataAccess: true
          description: Gives read/write access to the company database
          isPermission: false
          revocable: true
          privileged: false
          sourceType: Active Directory - Direct
          name: CN=entitlement.bbb7c650
          attributeName: memberOf
          sourceSchemaObjectType: groups
          id: 2c918085718230600171993742c63558
          sourceName: ODS-AD-Source
          cloudGoverned: false
          account:
            owner:
              displayName: Alison Ferguson
              id: 2c9180857182305e0171993737eb29e8
              type: IDENTITY
            created: 2020-04-20T20:11:05.067Z
            name: Alison Ferguso
            modified: 2020-05-20T18:57:16.987Z
            description: Account for Read/write to the company database
            disabled: false
            governanceGroupId: 2c9180857182305e0171993737eb29e6
            id: 2c9180857182305e0171993737eb29e6
            locked: false
            type: IDENTITY
            nativeIdentity: CN=Alison Ferguso
            activityInsights:
              accountID: c4ddd5421d8549f0abd309162cafd3b1
              usageDays: 45
              usageDaysState: COMPLETE
        endDate: 2021-12-25T00:00:00Z
        created: 2021-01-01T22:32:58.104Z
        name: Employee-database-read-write
        description: Collection of entitlements to read/write the employee database
        modified: 2021-02-01T22:32:58.104Z
        id: 2c91808a7190d06e01719938fcd20792
        cloudGoverned: false
      properties:
        id:
          description: The id of the Access Profile
          example: 2c91808a7190d06e01719938fcd20792
          type: string
        name:
          description: Name of the Access Profile
          example: Employee-database-read-write
          type: string
        description:
          description: Information about the Access Profile
          example: Collection of entitlements to read/write the employee database
          type: string
        privileged:
          description: Indicates if the entitlement is a privileged entitlement
          example: false
          type: boolean
        cloudGoverned:
          description: True if the entitlement is cloud governed
          example: false
          type: boolean
        endDate:
          description: The date at which a user's access expires
          example: 2021-12-25T00:00:00Z
          format: date-time
          nullable: true
          type: string
        owner:
          $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
        entitlements:
          description: A list of entitlements associated with this Access Profile
          items:
            $ref: '#/components/schemas/ReviewableEntitlement'
          type: array
        created:
          description: Date the Access Profile was created.
          example: 2021-01-01T22:32:58.104Z
          format: date-time
          type: string
        modified:
          description: Date the Access Profile was last modified.
          example: 2021-02-01T22:32:58.104Z
          format: date-time
          type: string
      type: object
    ReviewableRole:
      example:
        privileged: false
        owner:
          name: Alison Ferguso
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
          email: alison.ferguso@identitysoon.com
        entitlements:
        - owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          sourceId: 78ca6be511cb41fbb86dba2fcca7780c
          dataAccess:
            policies:
            - value: GDPR-20
            - value: GDPR-20
            categories:
            - matchCount: 10
              value: email-7
            - matchCount: 10
              value: email-7
            impactScore:
              value: Medium
          hasPermissions: false
          attributeValue: CN=entitlement.bbb7c650
          containsDataAccess: true
          description: Gives read/write access to the company database
          isPermission: false
          revocable: true
          privileged: false
          sourceType: Active Directory - Direct
          name: CN=entitlement.bbb7c650
          attributeName: memberOf
          sourceSchemaObjectType: groups
          id: 2c918085718230600171993742c63558
          sourceName: ODS-AD-Source
          cloudGoverned: false
          account:
            owner:
              displayName: Alison Ferguson
              id: 2c9180857182305e0171993737eb29e8
              type: IDENTITY
            created: 2020-04-20T20:11:05.067Z
            name: Alison Ferguso
            modified: 2020-05-20T18:57:16.987Z
            description: Account for Read/write to the company database
            disabled: false
            governanceGroupId: 2c9180857182305e0171993737eb29e6
            id: 2c9180857182305e0171993737eb29e6
            locked: false
            type: IDENTITY
            nativeIdentity: CN=Alison Ferguso
            activityInsights:
              accountID: c4ddd5421d8549f0abd309162cafd3b1
              usageDays: 45
              usageDaysState: COMPLETE
        - owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          sourceId: 78ca6be511cb41fbb86dba2fcca7780c
          dataAccess:
            policies:
            - value: GDPR-20
            - value: GDPR-20
            categories:
            - matchCount: 10
              value: email-7
            - matchCount: 10
              value: email-7
            impactScore:
              value: Medium
          hasPermissions: false
          attributeValue: CN=entitlement.bbb7c650
          containsDataAccess: true
          description: Gives read/write access to the company database
          isPermission: false
          revocable: true
          privileged: false
          sourceType: Active Directory - Direct
          name: CN=entitlement.bbb7c650
          attributeName: memberOf
          sourceSchemaObjectType: groups
          id: 2c918085718230600171993742c63558
          sourceName: ODS-AD-Source
          cloudGoverned: false
          account:
            owner:
              displayName: Alison Ferguson
              id: 2c9180857182305e0171993737eb29e8
              type: IDENTITY
            created: 2020-04-20T20:11:05.067Z
            name: Alison Ferguso
            modified: 2020-05-20T18:57:16.987Z
            description: Account for Read/write to the company database
            disabled: false
            governanceGroupId: 2c9180857182305e0171993737eb29e6
            id: 2c9180857182305e0171993737eb29e6
            locked: false
            type: IDENTITY
            nativeIdentity: CN=Alison Ferguso
            activityInsights:
              accountID: c4ddd5421d8549f0abd309162cafd3b1
              usageDays: 45
              usageDaysState: COMPLETE
        endDate: 2021-12-25T00:00:00Z
        accessProfiles:
        - privileged: false
          owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          entitlements:
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            sourceId: 78ca6be511cb41fbb86dba2fcca7780c
            dataAccess:
              policies:
              - value: GDPR-20
              - value: GDPR-20
              categories:
              - matchCount: 10
                value: email-7
              - matchCount: 10
                value: email-7
              impactScore:
                value: Medium
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            containsDataAccess: true
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              owner:
                displayName: Alison Ferguson
                id: 2c9180857182305e0171993737eb29e8
                type: IDENTITY
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              description: Account for Read/write to the company database
              disabled: false
              governanceGroupId: 2c9180857182305e0171993737eb29e6
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
              activityInsights:
                accountID: c4ddd5421d8549f0abd309162cafd3b1
                usageDays: 45
                usageDaysState: COMPLETE
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            sourceId: 78ca6be511cb41fbb86dba2fcca7780c
            dataAccess:
              policies:
              - value: GDPR-20
              - value: GDPR-20
              categories:
              - matchCount: 10
                value: email-7
              - matchCount: 10
                value: email-7
              impactScore:
                value: Medium
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            containsDataAccess: true
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              owner:
                displayName: Alison Ferguson
                id: 2c9180857182305e0171993737eb29e8
                type: IDENTITY
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              description: Account for Read/write to the company database
              disabled: false
              governanceGroupId: 2c9180857182305e0171993737eb29e6
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
              activityInsights:
                accountID: c4ddd5421d8549f0abd309162cafd3b1
                usageDays: 45
                usageDaysState: COMPLETE
          endDate: 2021-12-25T00:00:00Z
          created: 2021-01-01T22:32:58.104Z
          name: Employee-database-read-write
          description: Collection of entitlements to read/write the employee database
          modified: 2021-02-01T22:32:58.104Z
          id: 2c91808a7190d06e01719938fcd20792
          cloudGoverned: false
        - privileged: false
          owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          entitlements:
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            sourceId: 78ca6be511cb41fbb86dba2fcca7780c
            dataAccess:
              policies:
              - value: GDPR-20
              - value: GDPR-20
              categories:
              - matchCount: 10
                value: email-7
              - matchCount: 10
                value: email-7
              impactScore:
                value: Medium
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            containsDataAccess: true
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              owner:
                displayName: Alison Ferguson
                id: 2c9180857182305e0171993737eb29e8
                type: IDENTITY
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              description: Account for Read/write to the company database
              disabled: false
              governanceGroupId: 2c9180857182305e0171993737eb29e6
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
              activityInsights:
                accountID: c4ddd5421d8549f0abd309162cafd3b1
                usageDays: 45
                usageDaysState: COMPLETE
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            sourceId: 78ca6be511cb41fbb86dba2fcca7780c
            dataAccess:
              policies:
              - value: GDPR-20
              - value: GDPR-20
              categories:
              - matchCount: 10
                value: email-7
              - matchCount: 10
                value: email-7
              impactScore:
                value: Medium
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            containsDataAccess: true
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              owner:
                displayName: Alison Ferguson
                id: 2c9180857182305e0171993737eb29e8
                type: IDENTITY
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              description: Account for Read/write to the company database
              disabled: false
              governanceGroupId: 2c9180857182305e0171993737eb29e6
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
              activityInsights:
                accountID: c4ddd5421d8549f0abd309162cafd3b1
                usageDays: 45
                usageDaysState: COMPLETE
          endDate: 2021-12-25T00:00:00Z
          created: 2021-01-01T22:32:58.104Z
          name: Employee-database-read-write
          description: Collection of entitlements to read/write the employee database
          modified: 2021-02-01T22:32:58.104Z
          id: 2c91808a7190d06e01719938fcd20792
          cloudGoverned: false
        name: Accounting-Employees
        description: Role for members of the accounting department with the necessary
          Access Profiles
        id: 2c91808a7190d06e0171993907fd0794
        revocable: false
      nullable: true
      properties:
        id:
          description: The id for the Role
          example: 2c91808a7190d06e0171993907fd0794
          type: string
        name:
          description: The name of the Role
          example: Accounting-Employees
          type: string
        description:
          description: Information about the Role
          example: Role for members of the accounting department with the necessary
            Access Profiles
          type: string
        privileged:
          description: Indicates if the entitlement is a privileged entitlement
          example: false
          type: boolean
        owner:
          $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
        revocable:
          description: Indicates whether the Role can be revoked or requested
          example: false
          type: boolean
        endDate:
          description: The date when a user's access expires.
          example: 2021-12-25T00:00:00Z
          format: date-time
          type: string
        accessProfiles:
          description: The list of Access Profiles associated with this Role
          items:
            $ref: '#/components/schemas/ReviewableAccessProfile'
          type: array
        entitlements:
          description: The list of entitlements associated with this Role
          items:
            $ref: '#/components/schemas/ReviewableEntitlement'
          type: array
      type: object
    BackupOptions:
      description: Backup options control what will be included in the backup.
      example:
        includeTypes:
        - TRIGGER_SUBSCRIPTION
        - TRIGGER_SUBSCRIPTION
        objectOptions:
          TRIGGER_SUBSCRIPTION:
            includedNames:
            - Trigger Subscription name
      nullable: true
      properties:
        includeTypes:
          description: Object type names to be included in a Configuration Hub backup
            command.
          items:
            enum:
            - ACCESS_PROFILE
            - ACCESS_REQUEST_CONFIG
            - ATTR_SYNC_SOURCE_CONFIG
            - AUTH_ORG
            - CAMPAIGN_FILTER
            - FORM_DEFINITION
            - GOVERNANCE_GROUP
            - IDENTITY_OBJECT_CONFIG
            - IDENTITY_PROFILE
            - LIFECYCLE_STATE
            - NOTIFICATION_TEMPLATE
            - PASSWORD_POLICY
            - PASSWORD_SYNC_GROUP
            - PUBLIC_IDENTITIES_CONFIG
            - ROLE
            - RULE
            - SEGMENT
            - SERVICE_DESK_INTEGRATION
            - SOD_POLICY
            - SOURCE
            - TAG
            - TRANSFORM
            - TRIGGER_SUBSCRIPTION
            - WORKFLOW
            example: TRIGGER_SUBSCRIPTION
            type: string
          type: array
        objectOptions:
          additionalProperties:
            $ref: '#/components/schemas/ObjectExportImportNames'
          description: Additional options targeting specific objects related to each
            item in the includeTypes field.
          example:
            TRIGGER_SUBSCRIPTION:
              includedNames:
              - Trigger Subscription name
          type: object
      type: object
    EmailNotificationOption:
      description: This is used for representing email configuration for a lifecycle
        state
      example:
        notifyManagers: true
        notifySpecificUsers: true
        emailAddressList:
        - test@test.com
        - test2@test.com
        notifyAllAdmins: true
      properties:
        notifyManagers:
          default: false
          description: "If true, then the manager is notified of the lifecycle state\
            \ change."
          example: true
          type: boolean
        notifyAllAdmins:
          default: false
          description: "If true, then all the admins are notified of the lifecycle\
            \ state change."
          example: true
          type: boolean
        notifySpecificUsers:
          default: false
          description: "If true, then the users specified in \"emailAddressList\"\
            \ below are notified of lifecycle state change."
          example: true
          type: boolean
        emailAddressList:
          description: "List of user email addresses. If \"notifySpecificUsers\" option\
            \ is true, then these users are notified of lifecycle state change."
          example:
          - test@test.com
          - test2@test.com
          items:
            type: string
          type: array
      type: object
    AccountAction:
      description: Object for specifying Actions to be performed on a specified list
        of sources' account.
      example:
        action: ENABLE
        sourceIds:
        - 2c918084660f45d6016617daa9210584
        - 2c918084660f45d6016617daa9210500
      properties:
        action:
          description: Describes if action will be enabled or disabled
          enum:
          - ENABLE
          - DISABLE
          example: ENABLE
          type: string
        sourceIds:
          description: List of unique source IDs. The sources must have the ENABLE
            feature or flat file source. See "/sources" endpoint for source features.
          example:
          - 2c918084660f45d6016617daa9210584
          - 2c918084660f45d6016617daa9210500
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    SpConfigMessage:
      description: Message model for Config Import/Export.
      example:
        details:
          details: message details
        text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
          \ name: random identity]"
        key: UNKNOWN_REFERENCE_RESOLVER
      properties:
        key:
          description: Message key.
          example: UNKNOWN_REFERENCE_RESOLVER
          type: string
        text:
          description: Message text.
          example: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          type: string
        details:
          additionalProperties: true
          description: "Message details if any, in key:value pairs."
          example:
            details: message details
          type: object
      required:
      - details
      - key
      - text
      title: Config Import/Export Message
      type: object
    ImportObject:
      description: Object created or updated by import.
      example:
        name: HR Active Directory
        id: 2c9180835d191a86015d28455b4b232a
        type: SOURCE
      properties:
        type:
          description: DTO type of object created or updated by import.
          enum:
          - CONNECTOR_RULE
          - IDENTITY_OBJECT_CONFIG
          - IDENTITY_PROFILE
          - RULE
          - SOURCE
          - TRANSFORM
          - TRIGGER_SUBSCRIPTION
          example: SOURCE
          type: string
        id:
          description: ID of object created or updated by import.
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Display name of object created or updated by import.
          example: HR Active Directory
          type: string
      type: object
    IdentityAttributePreview:
      example:
        errorMessages:
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        name: email
        value: email@mail.com
        previousValue: oldEmail@mail.com
      properties:
        name:
          description: Name of the attribute that is being previewed.
          example: email
          type: string
        value:
          description: Value that was derived during the preview.
          example: email@mail.com
          type: string
        previousValue:
          description: The value of the attribute before the preview.
          example: oldEmail@mail.com
          type: string
        errorMessages:
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
      type: object
    IdentityAttributeTransform:
      description: Transform definition for an identity attribute.
      example:
        transformDefinition:
          attributes:
            attributeName: e-mail
            sourceName: MySource
            sourceId: 2c9180877a826e68017a8c0b03da1a53
          type: accountAttribute
        identityAttributeName: email
      properties:
        identityAttributeName:
          description: Identity attribute's name.
          example: email
          type: string
        transformDefinition:
          $ref: '#/components/schemas/TransformDefinition'
      type: object
    ManagedClientStatusCode:
      description: Status of a Managed Client
      enum:
      - NORMAL
      - UNDEFINED
      - NOT_CONFIGURED
      - CONFIGURING
      - WARNING
      - ERROR
      - FAILED
      example: NORMAL
      type: string
    ManagedClusterTypes:
      description: The Type of Cluster
      enum:
      - idn
      - iai
      example: idn
      type: string
    ManagedClusterKeyPair:
      description: Managed Cluster key pair for Cluster
      example:
        publicKeyThumbprint: 6CMlaJIV44-xJxcB3CJBjDUUn54
        publicKeyCertificate: '-----BEGIN CERTIFICATE-----****-----END CERTIFICATE-----'
        publicKey: '-----BEGIN PUBLIC KEY-----******-----END PUBLIC KEY-----'
      properties:
        publicKey:
          description: ManagedCluster publicKey
          example: '-----BEGIN PUBLIC KEY-----******-----END PUBLIC KEY-----'
          nullable: true
          type: string
        publicKeyThumbprint:
          description: ManagedCluster publicKeyThumbprint
          example: 6CMlaJIV44-xJxcB3CJBjDUUn54
          nullable: true
          type: string
        publicKeyCertificate:
          description: ManagedCluster publicKeyCertificate
          example: '-----BEGIN CERTIFICATE-----****-----END CERTIFICATE-----'
          nullable: true
          type: string
      type: object
    ManagedClusterAttributes:
      description: "Managed Cluster Attributes for Cluster Configuration. Supported\
        \ Cluster Types [sqsCluster, spConnectCluster]"
      example:
        keystore: /u3+7QAAAAIAAAABAAAAAQAvL3Byb3h5LWNsdXN0ZXIvMmM5MTgwODc3Yjg3MW
        queue:
          name: megapod-useast1-denali-lwt-cluster-1533
          region: us-east-1
      properties:
        queue:
          $ref: '#/components/schemas/ManagedClusterQueue'
        keystore:
          description: ManagedCluster keystore for spConnectCluster type
          example: /u3+7QAAAAIAAAABAAAAAQAvL3Byb3h5LWNsdXN0ZXIvMmM5MTgwODc3Yjg3MW
          nullable: true
          type: string
      type: object
    ManagedClusterRedis:
      description: Managed Cluster Redis Configuration
      example:
        redisHost: megapod-useast1-shared-redis.cloud.sailpoint.com
        redisPort: 6379
      properties:
        redisHost:
          description: ManagedCluster redisHost
          example: megapod-useast1-shared-redis.cloud.sailpoint.com
          type: string
        redisPort:
          description: ManagedCluster redisPort
          example: 6379
          format: int32
          type: integer
      type: object
    StandardLevel:
      description: Standard Log4j log level
      enum:
      - "false"
      - FATAL
      - ERROR
      - WARN
      - INFO
      - DEBUG
      - TRACE
      example: INFO
      type: string
    LogLevelSpec:
      additionalProperties:
        $ref: '#/components/schemas/StandardLevel'
      description: Mapping of identifiers to Standard Log Level values
      example: INFO
      type: object
    KbaAuthResponseItem:
      properties:
        questionId:
          description: The KBA question id
          example: 089899f13a8f4da7824996191587bab9
          nullable: true
          type: string
        isVerified:
          description: Return true if verified
          example: true
          nullable: true
          type: boolean
      type: object
    NonEmployeeSourceLite:
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        name: Retail
        description: Source description
        id: a0303682-5e4a-44f7-bdc2-6ce6112549c1
      properties:
        id:
          description: Non-Employee source id.
          example: a0303682-5e4a-44f7-bdc2-6ce6112549c1
          format: UUID
          type: string
        sourceId:
          description: Source Id associated with this non-employee source.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Source name associated with this non-employee source.
          example: Retail
          type: string
        description:
          description: Source description associated with this non-employee source.
          example: Source description
          type: string
      type: object
    NonEmployeeApprovalItemBase:
      example:
        approver:
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        approvalStatus: APPROVED
        accountName: test.account
        approvalOrder: 1
        created: 2019-08-23T18:40:35.772Z
        modified: 2019-08-23T18:52:59.162Z
        comment: I approve
        id: 2c1e388b-1e55-4b0a-ab5c-897f1204159c
      properties:
        id:
          description: Non-Employee approval item id
          example: 2c1e388b-1e55-4b0a-ab5c-897f1204159c
          format: UUID
          type: string
        approver:
          $ref: '#/components/schemas/NonEmployeeIdentityReferenceWithId'
        accountName:
          description: Requested identity account name
          example: test.account
          type: string
        approvalStatus:
          $ref: '#/components/schemas/ApprovalStatus'
        approvalOrder:
          description: Approval order
          example: 1
          format: float
          type: number
        comment:
          description: comment of approver
          example: I approve
          type: string
        modified:
          description: When the request was last modified.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        created:
          description: When the request was created.
          example: 2019-08-23T18:40:35.772Z
          format: date-time
          type: string
      type: object
    ApprovalStatus:
      description: Enum representing the non-employee request approval status
      enum:
      - APPROVED
      - REJECTED
      - PENDING
      - NOT_READY
      - CANCELLED
      example: APPROVED
      type: string
    NonEmployeeIdnUserRequest:
      example:
        id: 2c91808570313110017040b06f344ec9
      properties:
        id:
          description: Identity id.
          example: 2c91808570313110017040b06f344ec9
          format: UUID
          type: string
      required:
      - id
      type: object
    NonEmployeeIdentityReferenceWithId:
      example:
        id: 5168015d32f890ca15812c9180835d2e
        type: IDENTITY
      properties:
        type:
          $ref: '#/components/schemas/NonEmployeeIdentityDtoType'
        id:
          description: Identity id
          example: 5168015d32f890ca15812c9180835d2e
          type: string
      type: object
    NonEmployeeRequestLite:
      example:
        requester:
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        id: ac110005-7156-1150-8171-5b292e3e0084
      properties:
        id:
          description: Non-Employee request id.
          example: ac110005-7156-1150-8171-5b292e3e0084
          format: UUID
          type: string
        requester:
          $ref: '#/components/schemas/NonEmployeeIdentityReferenceWithId'
      type: object
    NonEmployeeRequestWithoutApprovalItem:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeRequestLite'
      - properties:
          accountName:
            description: Requested identity account name.
            example: william.smith
            type: string
          firstName:
            description: Non-Employee's first name.
            example: William
            type: string
          lastName:
            description: Non-Employee's last name.
            example: Smith
            type: string
          email:
            description: Non-Employee's email.
            example: william.smith@example.com
            type: string
          phone:
            description: Non-Employee's phone.
            example: "5125555555"
            type: string
          manager:
            description: The account ID of a valid identity to serve as this non-employee's
              manager.
            example: jane.doe
            type: string
          nonEmployeeSource:
            $ref: '#/components/schemas/NonEmployeeSourceLiteWithSchemaAttributes'
          data:
            additionalProperties:
              type: string
            description: Additional attributes for a non-employee. Up to 10 custom
              attributes can be added.
            example:
              description: Auditing
            type: object
          approvalStatus:
            $ref: '#/components/schemas/ApprovalStatus'
          comment:
            description: Comment of requester
            example: approved
            type: string
          completionDate:
            description: When the request was completely approved.
            example: 2020-03-24T11:11:41.139-05:00
            format: date-time
            type: string
          startDate:
            description: Non-Employee employment start date.
            example: 2020-03-24
            format: date
            type: string
          endDate:
            description: Non-Employee employment end date.
            example: 2021-03-25
            format: date
            type: string
          modified:
            description: When the request was last modified.
            example: 2020-03-24T11:11:41.139-05:00
            format: date-time
            type: string
          created:
            description: When the request was created.
            example: 2020-03-24T11:11:41.139-05:00
            format: date-time
            type: string
        type: object
      example:
        requester:
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
        approvalStatus: APPROVED
        lastName: Smith
        manager: jane.doe
        data:
          description: Auditing
        accountName: william.smith
        endDate: 2021-03-25
        created: 2020-03-24T11:11:41.139-05:00
        nonEmployeeSource:
          sourceId: 2c91808568c529c60168cca6f90c1313
          name: Retail
          description: Source description
          id: a0303682-5e4a-44f7-bdc2-6ce6112549c1
          schemaAttributes:
          - system: true
            helpText: The unique identifier for the account
            created: 2019-08-23T18:40:35.772Z
            modified: 2019-08-23T18:52:59.162Z
            id: ac110005-7156-1150-8171-5b292e3e0084
            label: Account Name
            placeholder: Enter a unique user name for this account.
            type: TEXT
            technicalName: account.name
            required: true
          - system: true
            helpText: The unique identifier for the account
            created: 2019-08-23T18:40:35.772Z
            modified: 2019-08-23T18:52:59.162Z
            id: ac110005-7156-1150-8171-5b292e3e0084
            label: Account Name
            placeholder: Enter a unique user name for this account.
            type: TEXT
            technicalName: account.name
            required: true
        firstName: William
        phone: "5125555555"
        modified: 2020-03-24T11:11:41.139-05:00
        comment: approved
        completionDate: 2020-03-24T11:11:41.139-05:00
        id: ac110005-7156-1150-8171-5b292e3e0084
        email: william.smith@example.com
        startDate: 2020-03-24
    NonEmployeeSchemaAttributeType:
      description: Enum representing the type of data a schema attribute accepts.
      enum:
      - TEXT
      - DATE
      - IDENTITY
      example: TEXT
      type: string
    GrantType:
      description: OAuth2 Grant Type
      enum:
      - CLIENT_CREDENTIALS
      - AUTHORIZATION_CODE
      - REFRESH_TOKEN
      example: CLIENT_CREDENTIALS
      type: string
    AccessType:
      description: Access type of API Client indicating online or offline use
      enum:
      - ONLINE
      - OFFLINE
      example: OFFLINE
      type: string
    ClientType:
      description: Type of an API Client indicating public or confidentials use
      enum:
      - CONFIDENTIAL
      - PUBLIC
      example: CONFIDENTIAL
      type: string
    PatOwner:
      description: Personal access token owner's identity.
      example:
        name: Support
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      properties:
        type:
          description: Personal access token owner's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Personal access token owner's identity ID.
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Personal access token owner's human-readable display name.
          example: Support
          type: string
      type: object
    IdentityReference:
      description: The manager for the identity.
      example:
        name: Thomas Edison
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      nullable: true
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: Identity id
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Human-readable display name of identity.
          example: Thomas Edison
          type: string
      type: object
    PublicIdentityAttributeConfig:
      description: Used to map an attribute key for an Identity to its display name.
      example:
        name: Country
        key: country
      properties:
        key:
          description: The attribute key
          example: country
          type: string
        name:
          description: The attribute display name
          example: Country
          type: string
      type: object
    AccessProfileRef:
      example:
        name: Access Profile 2567
        id: ff808081751e6e129f1518161919ecca
        type: ACCESS_PROFILE
      properties:
        id:
          description: ID of the Access Profile
          example: ff808081751e6e129f1518161919ecca
          type: string
        type:
          description: "Type of requested object. This field must be either left null\
            \ or set to 'ACCESS_PROFILE' when creating an Access Profile, otherwise\
            \ a 400 Bad Request error will result."
          enum:
          - ACCESS_PROFILE
          example: ACCESS_PROFILE
          type: string
        name:
          description: Human-readable display name of the Access Profile. This field
            is ignored on input.
          example: Access Profile 2567
          type: string
      type: object
    RoleMembershipSelector:
      description: "When present, specifies that the Role is to be granted to Identities\
        \ which either satisfy specific criteria or which are members of a given list\
        \ of Identities."
      example:
        identities:
        - aliasName: t.edison
          name: Thomas Edison
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        - aliasName: t.edison
          name: Thomas Edison
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        criteria:
          stringValue: carlee.cert1c9f9b6fd@mailinator.com
          children:
          - stringValue: carlee.cert1c9f9b6fd@mailinator.com
            children:
            - stringValue: carlee.cert1c9f9b6fd@mailinator.com
              operation: EQUALS
              key:
                sourceId: 2c9180867427f3a301745aec18211519
                property: attribute.email
                type: ACCOUNT
            - stringValue: carlee.cert1c9f9b6fd@mailinator.com
              operation: EQUALS
              key:
                sourceId: 2c9180867427f3a301745aec18211519
                property: attribute.email
                type: ACCOUNT
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          - stringValue: carlee.cert1c9f9b6fd@mailinator.com
            children:
            - stringValue: carlee.cert1c9f9b6fd@mailinator.com
              operation: EQUALS
              key:
                sourceId: 2c9180867427f3a301745aec18211519
                property: attribute.email
                type: ACCOUNT
            - stringValue: carlee.cert1c9f9b6fd@mailinator.com
              operation: EQUALS
              key:
                sourceId: 2c9180867427f3a301745aec18211519
                property: attribute.email
                type: ACCOUNT
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          operation: EQUALS
          key:
            sourceId: 2c9180867427f3a301745aec18211519
            property: attribute.email
            type: ACCOUNT
        type: IDENTITY_LIST
      nullable: true
      properties:
        type:
          $ref: '#/components/schemas/RoleMembershipSelectorType'
        criteria:
          $ref: '#/components/schemas/RoleCriteriaLevel1'
        identities:
          description: "Defines role membership as being exclusive to the specified\
            \ Identities, when type is IDENTITY_LIST."
          items:
            $ref: '#/components/schemas/RoleMembershipIdentity'
          nullable: true
          type: array
      type: object
    RequestabilityForRole:
      example:
        commentsRequired: true
        reauthorizationRequired: true
        approvalSchemes:
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        denialCommentsRequired: true
      properties:
        commentsRequired:
          default: false
          description: Whether the requester of the containing object must provide
            comments justifying the request
          example: true
          nullable: true
          type: boolean
        denialCommentsRequired:
          default: false
          description: Whether an approver must provide comments when denying the
            request
          example: true
          nullable: true
          type: boolean
        reauthorizationRequired:
          default: false
          description: Indicates whether reauthorization is required for the request.
          example: true
          nullable: true
          type: boolean
        approvalSchemes:
          description: List describing the steps in approving the request
          items:
            $ref: '#/components/schemas/ApprovalSchemeForRole'
          type: array
      type: object
    RevocabilityForRole:
      example:
        commentsRequired: false
        approvalSchemes:
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        denialCommentsRequired: false
      properties:
        commentsRequired:
          default: false
          description: Whether the requester of the containing object must provide
            comments justifying the request
          example: false
          nullable: true
          type: boolean
        denialCommentsRequired:
          default: false
          description: Whether an approver must provide comments when denying the
            request
          example: false
          nullable: true
          type: boolean
        approvalSchemes:
          description: List describing the steps in approving the revocation request
          items:
            $ref: '#/components/schemas/ApprovalSchemeForRole'
          type: array
      type: object
    DimensionRef:
      example:
        name: Role 2
        id: 2c91808568c529c60168cca6f90c1313
        type: DIMENSION
      properties:
        type:
          description: The type of the object to which this reference applies
          enum:
          - DIMENSION
          example: DIMENSION
          type: string
        id:
          description: ID of the object to which this reference applies
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: Role 2
          type: string
      type: object
    AttributeDTOList:
      example:
        attributes:
        - key: iscPrivacy
          name: Privacy
          multiselect: false
          status: active
          type: governance
          objectTypes:
          - all
          description: Specifies the level of privacy associated with an access item.
          values:
          - value: public
            name: Public
            status: active
      properties:
        attributes:
          example:
          - key: iscPrivacy
            name: Privacy
            multiselect: false
            status: active
            type: governance
            objectTypes:
            - all
            description: Specifies the level of privacy associated with an access
              item.
            values:
            - value: public
              name: Public
              status: active
          items:
            $ref: '#/components/schemas/AttributeDTO'
          nullable: true
          type: array
      type: object
    RoleAssignmentSourceType:
      description: Type which indicates how a particular Identity obtained a particular
        Role
      enum:
      - ACCESS_REQUEST
      - ROLE_MEMBERSHIP
      example: ACCESS_REQUEST
      type: string
    DateTime:
      description: A date-time in ISO-8601 format
      example: 2018-06-25T20:22:28.104Z
      format: date-time
      nullable: true
      type: string
    Index:
      description: |-
        Enum representing the currently supported indices.
        Additional values may be added in the future without notice.
      enum:
      - accessprofiles
      - accountactivities
      - entitlements
      - events
      - identities
      - roles
      - '*'
      example: identities
      type: string
    Column:
      properties:
        field:
          description: |
            The name of the field.
          example: email
          type: string
        header:
          description: |
            The value of the header.
          example: Work Email
          type: string
      required:
      - field
      type: object
    Filter:
      properties:
        type:
          $ref: '#/components/schemas/FilterType'
        range:
          $ref: '#/components/schemas/Range'
        terms:
          description: The terms to be filtered.
          items:
            example: account_count
            type: string
          type: array
        exclude:
          default: false
          description: Indicates if the filter excludes results.
          example: false
          type: boolean
      type: object
    Schedule_1:
      description: The schedule information.
      example:
        hours:
          values:
          - MON
          - WED
          interval: 3
          type: LIST
        months:
          values:
          - MON
          - WED
          interval: 3
          type: LIST
        timeZoneId: America/Chicago
        days:
          values:
          - MON
          - WED
          interval: 3
          type: LIST
        expiration: 2018-06-25T20:22:28.104Z
        type: WEEKLY
      properties:
        type:
          $ref: '#/components/schemas/ScheduleType'
        months:
          $ref: '#/components/schemas/Schedule_1_months'
        days:
          $ref: '#/components/schemas/Schedule_1_days'
        hours:
          $ref: '#/components/schemas/Schedule_1_hours'
        expiration:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        timeZoneId:
          description: "The canonical TZ identifier the schedule will run in (ex.\
            \ America/New_York).  If no timezone is specified, the org's default timezone\
            \ is used."
          example: America/Chicago
          nullable: true
          type: string
      required:
      - hours
      - type
      type: object
    QueryType:
      default: SAILPOINT
      description: |-
        The type of query to use.  By default, the `SAILPOINT` query type is used, which requires the `query` object to be defined in the request body.
        To use the `queryDsl` or `typeAheadQuery` objects in the request, you must set the type to `DSL` or `TYPEAHEAD` accordingly.
        Additional values may be added in the future without notice.
      enum:
      - DSL
      - SAILPOINT
      - TEXT
      - TYPEAHEAD
      example: SAILPOINT
      type: string
    ElasticVersion:
      default: "5.2"
      description: The current Elasticserver version.
      example: "5.2"
      type: string
    Query:
      description: Query parameters used to construct an Elasticsearch query object.
      example:
        query: name:a*
        timeZone: America/Chicago
        fields: "[firstName,lastName,email]"
        innerHit:
          query: source.name:\"Active Directory\"
          type: access
      properties:
        query:
          description: "The query using the Elasticsearch [Query String Query](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string)\
            \ syntax from the Query DSL extended by SailPoint to support Nested queries."
          example: name:a*
          type: string
        fields:
          description: "The fields the query will be applied to.  Fields provide you\
            \ with a simple way to add additional fields to search, without making\
            \ the query too complicated.  For example, you can use the fields to specify\
            \ that you want your query of \"a*\" to be applied to \"name\", \"firstName\"\
            , and the \"source.name\".  The response will include all results matching\
            \ the \"a*\" query found in those three fields. \nA field's availability\
            \ depends on the indices being searched.  For example, if you are searching\
            \ \"identities\", you can apply your search to the \"firstName\" field,\
            \ but you couldn't use \"firstName\" with a search on \"access profiles\"\
            .  Refer to the response schema for the respective lists of available\
            \ fields. "
          example: "[firstName,lastName,email]"
          type: string
        timeZone:
          description: The time zone to be applied to any range query related to dates.
          example: America/Chicago
          type: string
        innerHit:
          $ref: '#/components/schemas/InnerHit'
      type: object
    TextQuery:
      description: Query parameters used to construct an Elasticsearch text query
        object.
      example:
        contains: true
        terms:
        - The quick brown fox
        - "3141592"
        - "7"
        matchAny: false
        fields:
        - displayName
        - employeeNumber
        - roleCount
      properties:
        terms:
          description: Words or characters that specify a particular thing to be searched
            for.
          example:
          - The quick brown fox
          - "3141592"
          - "7"
          items:
            type: string
          type: array
        fields:
          description: The fields to be searched.
          example:
          - displayName
          - employeeNumber
          - roleCount
          items:
            type: string
          type: array
        matchAny:
          default: false
          description: "Indicates that at least one of the terms must be found in\
            \ the specified fields;  otherwise, all terms must be found."
          example: false
          type: boolean
        contains:
          default: false
          description: "Indicates that the terms can be located anywhere in the specified\
            \ fields;  otherwise, the fields must begin with the terms."
          example: true
          type: boolean
      required:
      - fields
      - terms
      type: object
    TypeAheadQuery:
      description: "Query parameters used to construct an Elasticsearch type ahead\
        \ query object.  The typeAheadQuery performs a search for top values beginning\
        \ with the typed values. For example, typing \"Jo\" results in top hits matching\
        \ \"Jo.\" Typing \"Job\" results in top hits matching \"Job.\" "
      example:
        field: source.name
        size: 100
        query: Work
        sortByValue: true
        nestedType: access
        sort: asc
        maxExpansions: 10
      properties:
        query:
          description: The type ahead query string used to construct a phrase prefix
            match query.
          example: Work
          type: string
        field:
          description: The field on which to perform the type ahead search.
          example: source.name
          type: string
        nestedType:
          description: The nested type.
          example: access
          type: string
        maxExpansions:
          default: 10
          description: |-
            The number of suffixes the last term will be expanded into.
            Influences the performance of the query and the number results returned.
            Valid values: 1 to 1000.
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        size:
          default: 100
          description: The max amount of records the search will return.
          example: 100
          format: int32
          minimum: 1
          type: integer
        sort:
          default: desc
          description: The sort order of the returned records.
          example: asc
          type: string
        sortByValue:
          default: false
          description: "The flag that defines the sort type, by count or value."
          example: true
          type: boolean
      required:
      - field
      - query
      type: object
    QueryResultFilter:
      description: Allows the query results to be filtered by specifying a list of
        fields to include and/or exclude from the result documents.
      example:
        excludes:
        - stacktrace
        includes:
        - name
        - displayName
      properties:
        includes:
          description: The list of field names to include in the result documents.
          example:
          - name
          - displayName
          items:
            type: string
          type: array
        excludes:
          description: The list of field names to exclude from the result documents.
          example:
          - stacktrace
          items:
            type: string
          type: array
      type: object
    AggregationType:
      default: DSL
      description: |
        Enum representing the currently available query languages for aggregations, which are used to perform calculations or groupings on search results.

        Additional values may be added in the future without notice.
      enum:
      - DSL
      - SAILPOINT
      example: DSL
      type: string
    SearchAggregationSpecification:
      allOf:
      - $ref: '#/components/schemas/Aggregations'
      - properties:
          subAggregation:
            $ref: '#/components/schemas/SubSearchAggregationSpecification'
        type: object
      example:
        filter:
          field: access.type
          name: Entitlements
          type: TERM
          value: ENTITLEMENT
        bucket:
          field: attributes.city
          size: 100
          minDocCount: 2
          name: Identity Locations
          type: TERMS
        metric:
          field: '@access.name'
          name: Access Name Count
          type: COUNT
        subAggregation:
          filter:
            field: access.type
            name: Entitlements
            type: TERM
            value: ENTITLEMENT
          bucket:
            field: attributes.city
            size: 100
            minDocCount: 2
            name: Identity Locations
            type: TERMS
          metric:
            field: '@access.name'
            name: Access Name Count
            type: COUNT
          subAggregation:
            filter:
              field: access.type
              name: Entitlements
              type: TERM
              value: ENTITLEMENT
            bucket:
              field: attributes.city
              size: 100
              minDocCount: 2
              name: Identity Locations
              type: TERMS
            metric:
              field: '@access.name'
              name: Access Name Count
              type: COUNT
            nested:
              name: id
              type: access
          nested:
            name: id
            type: access
        nested:
          name: id
          type: access
    OwnerReferenceSegments:
      description: The owner of this object.
      example:
        name: support
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      nullable: true
      properties:
        type:
          description: "Owner type. This field must be either left null or set to\
            \ 'IDENTITY' on input, otherwise a 400 Bad Request error will result."
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Identity id
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: "Human-readable display name of the owner. It may be left null\
            \ or omitted in a POST or PATCH. If set, it must match the current value\
            \ of the owner's display name, otherwise a 400 Bad Request error will\
            \ result."
          example: support
          type: string
      type: object
    VisibilityCriteria:
      properties:
        expression:
          $ref: '#/components/schemas/Expression'
      type: object
    PasswordInfoAccount:
      example:
        accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
        accountName: Abby.Smith
      properties:
        accountId:
          description: Account ID of the account. This is specified per account schema
            in the source configuration. It is used to distinguish accounts. More
            info can be found here https://community.sailpoint.com/t5/IdentityNow-Connectors/How-do-I-designate-an-account-attribute-as-the-Account-ID-for-a/ta-p/80350
          example: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          type: string
        accountName:
          description: Display name of the account. This is specified per account
            schema in the source configuration. It is used to display name of the
            account. More info can be found here https://community.sailpoint.com/t5/IdentityNow-Connectors/How-do-I-designate-an-account-attribute-as-the-Account-Name-for/ta-p/74008
          example: Abby.Smith
          type: string
      type: object
    accounts-export-report-arguments:
      description: Arguments for Account Export report (ACCOUNTS)
      properties:
        application:
          description: Source ID.
          example: 2c9180897eSourceIde781782f705b9
          type: string
        sourceName:
          description: Source name.
          example: Active Directory
          type: string
      required:
      - application
      - sourceName
      title: ACCOUNTS
      type: object
    identities-details-report-arguments:
      description: Arguments for Identities Details report (IDENTITIES_DETAILS)
      properties:
        correlatedOnly:
          default: false
          description: Flag to specify if only correlated identities are included
            in report.
          example: true
          type: boolean
      required:
      - correlatedOnly
      title: IDENTITIES_DETAILS
      type: object
    identities-report-arguments:
      description: Arguments for Identities report (IDENTITIES)
      properties:
        correlatedOnly:
          default: false
          description: Flag to specify if only correlated identities are included
            in report.
          example: true
          type: boolean
      title: IDENTITIES
      type: object
    identity-profile-identity-error-report-arguments:
      description: Arguments for Identity Profile Identity Error report (IDENTITY_PROFILE_IDENTITY_ERROR)
      properties:
        authoritativeSource:
          description: Source ID.
          example: 1234sourceId5678902
          type: string
      required:
      - authoritativeSource
      title: IDENTITY_PROFILE_IDENTITY_ERROR
      type: object
    orphan-identities-report-arguments:
      description: Arguments for Orphan Identities report (ORPHAN_IDENTITIES)
      properties:
        selectedFormats:
          description: "Output report file formats. These are formats for calling\
            \ GET endpoint as query parameter 'fileFormat'.  In case report won't\
            \ have this argument there will be ['CSV', 'PDF'] as default."
          example:
          - CSV
          items:
            enum:
            - CSV
            - PDF
            type: string
          type: array
      title: ORPHAN_IDENTITIES
      type: object
    search-export-report-arguments:
      description: |
        Arguments for Search Export report (SEARCH_EXPORT)

        The report file generated will be a zip file containing csv files of the search results.
      properties:
        indices:
          description: "The names of the Elasticsearch indices in which to search.\
            \ If none are provided, then all indices will be searched."
          example:
          - entitlements
          externalDocs:
            description: Learn more about search indices here.
            url: https://documentation.sailpoint.com/saas/help/search/searchable-fields.html
          items:
            $ref: '#/components/schemas/Index'
          type: array
        query:
          description: "The query using the Elasticsearch [Query String Query](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string)\
            \ syntax from the Query DSL extended by SailPoint to support Nested queries."
          example: name:a*
          type: string
        columns:
          description: |
            Comma separated string consisting of technical attribute names of fields to include in report.

            Use `access.spread`, `apps.spread`, `accounts.spread` to include respective identity access details.

            Use `accessProfiles.spread` to unclude access profile details.

            Use `entitlements.spread` to include entitlement details.
          example: "displayName,firstName,lastName,email,created,attributes.cloudLifecycleState"
          type: string
        sort:
          description: The fields to be used to sort the search results. Use + or
            - to specify the sort direction.
          example:
          - displayName
          - +id
          items:
            type: string
          type: array
      required:
      - query
      title: SEARCH_EXPORT
      type: object
    uncorrelated-accounts-report-arguments:
      description: Arguments for Uncorrelated Accounts report (UNCORRELATED_ACCOUNTS)
      properties:
        selectedFormats:
          description: "Output report file formats. These are formats for calling\
            \ GET endpoint as query parameter 'fileFormat'.  In case report won't\
            \ have this argument there will be ['CSV', 'PDF'] as default."
          example:
          - CSV
          items:
            enum:
            - CSV
            - PDF
            type: string
          type: array
      title: UNCORRELATED_ACCOUNTS
      type: object
    SodPolicy:
      properties:
        id:
          description: Policy id
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          readOnly: true
          type: string
        name:
          description: Policy Business Name
          example: policy-xyz
          type: string
        created:
          description: The time when this SOD policy is created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: The time when this SOD policy is modified.
          example: 2020-01-01T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        description:
          description: Optional description of the SOD policy
          example: This policy ensures compliance of xyz
          nullable: true
          type: string
        ownerRef:
          $ref: '#/components/schemas/SodPolicy_ownerRef'
        externalPolicyReference:
          description: Optional External Policy Reference
          example: XYZ policy
          nullable: true
          type: string
        policyQuery:
          description: Search query of the SOD policy
          example: '@access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdg) AND @access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdf)'
          type: string
        compensatingControls:
          description: Optional compensating controls(Mitigating Controls)
          example: Have a manager review the transaction decisions for their "out
            of compliance" employee
          nullable: true
          type: string
        correctionAdvice:
          description: Optional correction advice
          example: "Based on the role of the employee, managers should remove access\
            \ that is not required for their job function."
          nullable: true
          type: string
        state:
          description: whether the policy is enforced or not
          enum:
          - ENFORCED
          - NOT_ENFORCED
          example: ENFORCED
          type: string
        tags:
          description: tags for this policy object
          example:
          - TAG1
          - TAG2
          items:
            type: string
          type: array
        creatorId:
          description: Policy's creator ID
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          readOnly: true
          type: string
        modifierId:
          description: Policy's modifier ID
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          nullable: true
          readOnly: true
          type: string
        violationOwnerAssignmentConfig:
          $ref: '#/components/schemas/ViolationOwnerAssignmentConfig'
        scheduled:
          default: false
          description: defines whether a policy has been scheduled or not
          example: true
          type: boolean
        type:
          default: GENERAL
          description: whether a policy is query based or conflicting access based
          enum:
          - GENERAL
          - CONFLICTING_ACCESS_BASED
          example: GENERAL
          type: string
      type: object
    ConflictingAccessCriteria:
      properties:
        leftCriteria:
          $ref: '#/components/schemas/AccessCriteria'
        rightCriteria:
          $ref: '#/components/schemas/AccessCriteria'
      type: object
    ConflictingAccessCriteriaRequest:
      properties:
        leftCriteria:
          $ref: '#/components/schemas/AccessCriteriaRequest'
        rightCriteria:
          $ref: '#/components/schemas/AccessCriteriaRequest'
      type: object
    SodReportResultDto:
      description: SOD policy violation report result.
      properties:
        type:
          description: SOD policy violation report result DTO type.
          enum:
          - REPORT_RESULT
          example: REPORT_RESULT
          type: string
        id:
          description: SOD policy violation report result ID.
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Human-readable name of the SOD policy violation report result.
          example: SOD Policy 1 Violation
          type: string
      type: object
    SodRecipient:
      description: SOD policy recipient.
      example:
        name: Michael Michaels
        id: 2c7180a46faadee4016fb4e018c20642
        type: IDENTITY
      properties:
        type:
          description: SOD policy recipient DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: SOD policy recipient's identity ID.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: SOD policy recipient's display name.
          example: Michael Michaels
          type: string
      type: object
    ViolationContext:
      example:
        conflictingAccessCriteria:
          leftCriteria:
            criteriaList:
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a66
              existing: true
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a67
              existing: false
          rightCriteria:
            criteriaList:
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a66
              existing: true
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a67
              existing: false
        policy:
          type: ENTITLEMENT
      properties:
        policy:
          $ref: '#/components/schemas/ViolationContext_policy'
        conflictingAccessCriteria:
          $ref: '#/components/schemas/ExceptionAccessCriteria'
      type: object
    EntitlementRef_1:
      description: Entitlement including a specific set of access.
      properties:
        type:
          description: Entitlement's DTO type.
          enum:
          - ENTITLEMENT
          example: ENTITLEMENT
          type: string
        id:
          description: Entitlement's ID.
          example: 2c91809773dee32014e13e122092014e
          type: string
        name:
          description: Entitlement's display name.
          example: "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local"
          type: string
      type: object
    FieldDetailsDto:
      example:
        isRequired: false
        transform:
          type: rule
          attributes:
            name: Create Unique LDAP Attribute
        isMultiValued: false
        name: userName
        attributes:
          template: "${firstname}.${lastname}${uniqueCounter}"
          cloudMaxUniqueChecks: "50"
          cloudMaxSize: "20"
          cloudRequired: "true"
        type: string
      properties:
        name:
          description: The name of the attribute.
          example: userName
          type: string
        transform:
          default: {}
          description: The transform to apply to the field
          example:
            type: rule
            attributes:
              name: Create Unique LDAP Attribute
          type: object
        attributes:
          description: Attributes required for the transform
          example:
            template: "${firstname}.${lastname}${uniqueCounter}"
            cloudMaxUniqueChecks: "50"
            cloudMaxSize: "20"
            cloudRequired: "true"
          type: object
        isRequired:
          default: false
          description: Flag indicating whether or not the attribute is required.
          example: false
          readOnly: true
          type: boolean
        type:
          description: The type of the attribute.
          example: string
          type: string
        isMultiValued:
          default: false
          description: Flag indicating whether or not the attribute is multi-valued.
          example: false
          type: boolean
      type: object
    AttributeDefinition:
      properties:
        name:
          description: The name of the attribute.
          example: sAMAccountName
          type: string
        type:
          $ref: '#/components/schemas/AttributeDefinitionType'
        schema:
          $ref: '#/components/schemas/AttributeDefinition_schema'
        description:
          description: A human-readable description of the attribute.
          example: SAM Account Name
          type: string
        isMulti:
          default: false
          description: Flag indicating whether or not the attribute is multi-valued.
          example: false
          type: boolean
        isEntitlement:
          default: false
          description: Flag indicating whether or not the attribute is an entitlement.
          example: false
          type: boolean
        isGroup:
          default: false
          description: |
            Flag indicating whether or not the attribute represents a group.
            This can only be `true` if `isEntitlement` is also `true` **and** there is a schema defined for the attribute..
          example: false
          type: boolean
      type: object
    IdentityProfilesConnections:
      example:
        name: ODS-Identity-Profile
        id: 76cfddb62818416f816bc494410f46c4
        identityCount: 100
      properties:
        id:
          description: ID of the IdentityProfile this reference applies
          example: 76cfddb62818416f816bc494410f46c4
          type: string
        name:
          description: Human-readable display name of the IdentityProfile to which
            this reference applies
          example: ODS-Identity-Profile
          type: string
        identityCount:
          description: The Number of Identities managed by this IdentityProfile
          example: 100
          format: int64
          type: integer
      type: object
    DependantAppConnections:
      example:
        owner:
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        launcherCount: 100
        cloudAppId: 9e3cdd80edf84f119327df8bbd5bb5ac
        description: This is a Sailpoint application
        accountSource:
          passwordPolicies:
          - name: Policy ODS
            id: 2c91808568c529c60168cca6f90c1313
            type: PASSWORD_POLICY
          - name: Policy ODS
            id: 2c91808568c529c60168cca6f90c1313
            type: PASSWORD_POLICY
          useForPasswordManagement: false
        provisionRequestEnabled: true
        appCenterEnabled: false
        enabled: true
        matchAllAccount: true
      properties:
        cloudAppId:
          description: Id of the connected Application
          example: 9e3cdd80edf84f119327df8bbd5bb5ac
          type: string
        description:
          description: Description of the connected Application
          example: This is a Sailpoint application
          type: string
        enabled:
          default: true
          description: Is the Application enabled
          example: true
          type: boolean
        provisionRequestEnabled:
          default: true
          description: Is Provisioning enabled for connected Application
          example: true
          type: boolean
        accountSource:
          $ref: '#/components/schemas/DependantAppConnections_accountSource'
        launcherCount:
          description: The amount of launchers for connected Application (long type)
          example: 100
          format: int64
          type: integer
        matchAllAccount:
          default: false
          description: Is Provisioning enabled for connected Application
          example: true
          type: boolean
        owner:
          description: The owner of the connected Application
          items:
            $ref: '#/components/schemas/BaseReferenceDto'
          type: array
        appCenterEnabled:
          default: false
          description: Is App Center enabled for connected Application
          example: false
          type: boolean
      type: object
    DependantConnectionsMissingDto:
      example:
        reason: "If there was an error retrieving any dependencies, it would lbe listed\
          \ here"
        dependencyType: dependantApps
      properties:
        dependencyType:
          description: The type of dependency type that is missing in the SourceConnections
          enum:
          - identityProfiles
          - credentialProfiles
          - mappingProfiles
          - sourceAttributes
          - dependantCustomTransforms
          - dependantApps
          example: dependantApps
          type: string
        reason:
          description: The reason why this dependency is missing
          example: "If there was an error retrieving any dependencies, it would lbe\
            \ listed here"
          type: string
      type: object
    TaggedObjectDto:
      example:
        name: William Wilson
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          description: DTO type
          enum:
          - ACCESS_PROFILE
          - APPLICATION
          - CAMPAIGN
          - ENTITLEMENT
          - IDENTITY
          - ROLE
          - SOD_POLICY
          - SOURCE
          example: IDENTITY
          type: string
        id:
          description: ID of the object this reference applies to
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the object this reference applies
            to
          example: William Wilson
          nullable: true
          type: string
      type: object
    WorkflowModifiedBy:
      example:
        name: Thomas Edison
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      properties:
        type:
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Identity ID
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Human-readable display name of identity.
          example: Thomas Edison
          type: string
      type: object
    WorkflowDefinition:
      description: The map of steps that the workflow will execute.
      example:
        start: Send Email Test
        steps:
          Send Email:
            actionId: sp:send-email
            attributes:
              body: This is a test
              from: sailpoint@sailpoint.com
              recipientId.$: $.identity.id
              subject: test
            nextStep: success
            selectResult: null
            type: ACTION
          success:
            type: success
      properties:
        start:
          description: The name of the starting step.
          example: Send Email Test
          type: string
        steps:
          additionalProperties: true
          description: One or more step objects that comprise this workflow.  Please
            see the Workflow documentation to see the JSON schema for each step type.
          example:
            Send Email:
              actionId: sp:send-email
              attributes:
                body: This is a test
                from: sailpoint@sailpoint.com
                recipientId.$: $.identity.id
                subject: test
              nextStep: success
              selectResult: null
              type: ACTION
            success:
              type: success
          type: object
      type: object
    WorkflowTrigger:
      description: The trigger that starts the workflow
      example:
        displayName: displayName
        attributes: "{}"
        type: EVENT
      properties:
        type:
          description: The trigger type
          enum:
          - EVENT
          - EXTERNAL
          - SCHEDULED
          - ""
          example: EVENT
          type: string
        displayName:
          nullable: true
          type: string
        attributes:
          description: Workflow Trigger Attributes.
          nullable: true
          type: object
      required:
      - attributes
      - type
      type: object
    WorkflowLibraryFormFields:
      example:
        helpText: The name to give to this certification campaign.
        name: name
        description: First value to compare
        label: Campaign Name
        type: text
        required: false
      properties:
        description:
          description: Description of the form field
          example: First value to compare
          type: string
        helpText:
          description: Describes the form field in the UI
          example: The name to give to this certification campaign.
          type: string
        label:
          description: A human readable name for this form field in the UI
          example: Campaign Name
          type: string
        name:
          description: The name of the input attribute
          example: name
          type: string
        required:
          default: false
          description: Denotes if this field is a required attribute
          example: false
          type: boolean
        type:
          description: The type of the form field
          enum:
          - text
          - textarea
          - boolean
          - email
          - url
          - number
          - json
          - checkbox
          - jsonpath
          - select
          - multiType
          - duration
          - toggle
          - formPicker
          - identityPicker
          - governanceGroupPicker
          - string
          - object
          - array
          - secret
          - keyValuePairs
          - emailPicker
          - advancedToggle
          - variableCreator
          - htmlEditor
          example: text
          nullable: true
          type: string
      type: object
    ActivityIdentity:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - properties:
          type:
            description: Type of object
            example: Identity
            type: string
        type: object
    Approval:
      properties:
        comments:
          items:
            $ref: '#/components/schemas/ApprovalComment'
          type: array
        modified:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        owner:
          $ref: '#/components/schemas/ActivityIdentity'
        result:
          description: The result of the approval
          example: Finished
          type: string
        attributeRequest:
          $ref: '#/components/schemas/AttributeRequest'
        source:
          $ref: '#/components/schemas/AccountSource'
      type: object
    OriginalRequest:
      properties:
        accountId:
          description: Account ID.
          example: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          type: string
        result:
          $ref: '#/components/schemas/Result'
        attributeRequests:
          description: Attribute changes requested for account.
          items:
            $ref: '#/components/schemas/AttributeRequest'
          type: array
        op:
          description: Operation used.
          example: add
          type: string
        source:
          $ref: '#/components/schemas/AccountSource'
      type: object
    ExpansionItem:
      properties:
        accountId:
          description: The ID of the account
          example: 2c91808981f58ea601821c3e93482e6f
          type: string
        cause:
          description: Cause of the expansion item.
          example: Role
          type: string
        name:
          description: The name of the item
          example: smartsheet-role
          type: string
        attributeRequest:
          $ref: '#/components/schemas/AttributeRequest'
        source:
          $ref: '#/components/schemas/AccountSource'
        id:
          description: ID of the expansion item
          example: ac2887ffe0e7435a8c18c73f7ae94c7b
          type: string
        state:
          description: State of the expansion item
          example: EXECUTING
          type: string
      type: object
    AccountRequest:
      properties:
        accountId:
          description: Unique ID of the account
          example: John.Doe
          type: string
        attributeRequests:
          items:
            $ref: '#/components/schemas/AttributeRequest'
          type: array
        op:
          description: The operation that was performed
          example: Modify
          type: string
        provisioningTarget:
          $ref: '#/components/schemas/AccountSource'
        result:
          $ref: '#/components/schemas/AccountRequest_result'
        source:
          $ref: '#/components/schemas/AccountSource'
      type: object
    BaseAccess:
      properties:
        description:
          description: Access item's description.
          example: Admin access
          type: string
        created:
          description: ISO-8601 date-time referring to the time when the object was
            created.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: ISO-8601 date-time referring to the time when the object was
            last modified.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        synced:
          description: "ISO-8601 date-time referring to the date-time when object\
            \ was queued to be synced into search database for use in the search API.\
            \  \nThis date-time changes anytime there is an update to the object,\
            \ which triggers a synchronization event being sent to the search database.\
            \ \nThere may be some delay between the `synced` time and the time when\
            \ the updated data is actually available in the search API. "
          example: 2018-06-25T20:22:33.104Z
          format: date-time
          nullable: true
          type: string
        enabled:
          default: false
          description: Indicates whether the access item is currently enabled.
          example: true
          type: boolean
        requestable:
          default: true
          description: Indicates whether the access item can be requested.
          example: true
          type: boolean
        requestCommentsRequired:
          default: false
          description: Indicates whether comments are required for requests to access
            the item.
          example: false
          type: boolean
        owner:
          $ref: '#/components/schemas/BaseAccess_owner'
      type: object
    BaseEntitlement:
      properties:
        hasPermissions:
          default: false
          description: Indicates whether the entitlement has permissions.
          example: false
          type: boolean
        description:
          description: Entitlement's description.
          example: Cloud engineering
          nullable: true
          type: string
        attribute:
          description: Entitlement attribute's name.
          example: memberOf
          type: string
        value:
          description: Entitlement's value.
          example: "CN=Cloud Engineering,DC=sailpoint,DC=COM"
          type: string
        schema:
          description: Entitlement's schema.
          example: group
          type: string
        privileged:
          default: false
          description: Indicates whether the entitlement is privileged.
          example: false
          type: boolean
        id:
          description: Entitlement's ID.
          example: 2c918084575812550157589064f33b89
          type: string
        name:
          description: Entitlement's name.
          example: "CN=Cloud Engineering,DC=sailpoint,DC=COM"
          type: string
      type: object
    BaseSegment:
      properties:
        id:
          description: Segment's unique ID.
          example: b009b6e3-b56d-41d9-8735-cb532ea0b017
          type: string
        name:
          description: Segment's display name.
          example: Test Segment
          type: string
      type: object
    Tags:
      description: Tags that have been applied to the object.
      example:
      - TAG_1
      - TAG_2
      items:
        type: string
      type: array
    AccessApps:
      properties:
        id:
          description: The unique ID of the referenced object.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Name of application
          example: Travel and Expense
          type: string
        description:
          description: Description of application.
          example: Travel and Expense Application
          type: string
        owner:
          $ref: '#/components/schemas/AccessApps_owner'
      type: object
    Access:
      allOf:
      - $ref: '#/components/schemas/DisplayReference'
      - properties:
          description:
            description: Description of access item.
            nullable: true
            type: string
            example: null
        type: object
    Reference:
      properties:
        id:
          description: The unique ID of the referenced object.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: The human readable name of the referenced object.
          example: John Doe
          type: string
      type: object
    DisplayReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - properties:
          displayName:
            example: John Q. Doe
            type: string
        type: object
    WorkItemState:
      description: The state of a work item
      enum:
      - Finished
      - Rejected
      - Returned
      - Expired
      - Pending
      - Canceled
      - null
      example: Pending
      nullable: true
      type: string
    BaseDocument:
      properties:
        id:
          description: ID of the referenced object.
          example: 2c91808375d8e80a0175e1f88a575222
          type: string
        name:
          description: The human readable name of the referenced object.
          example: john.doe
          type: string
      required:
      - id
      - name
      type: object
    ProcessingDetails:
      properties:
        date:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        stage:
          example: In Process
          type: string
        retryCount:
          example: 0
          format: int32
          type: integer
        stackTrace:
          example: <stack trace>
          type: string
        message:
          example: <message>
          type: string
      type: object
    BaseAccount:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - properties:
          accountId:
            description: Account ID.
            example: John.Doe
            type: string
          source:
            $ref: '#/components/schemas/AccountSource'
          disabled:
            default: false
            description: Indicates whether the account is disabled.
            example: false
            type: boolean
          locked:
            default: false
            description: Indicates whether the account is locked.
            example: false
            type: boolean
          privileged:
            default: false
            description: Indicates whether the account is privileged.
            example: false
            type: boolean
          manuallyCorrelated:
            default: false
            description: Indicates whether the account has been manually correlated
              to an identity.
            example: false
            type: boolean
          passwordLastSet:
            $ref: '#/components/schemas/DateTime'
          entitlementAttributes:
            additionalProperties: true
            description: Map or dictionary of key/value pairs.
            example:
              moderator: true
              admin: true
              trust_level: "4"
            nullable: true
            type: object
          created:
            description: ISO-8601 date-time referring to the time when the object
              was created.
            example: 2018-06-25T20:22:28.104Z
            format: date-time
            nullable: true
            type: string
          supportsPasswordChange:
            default: false
            description: Indicates whether the account supports password change.
            example: false
            type: boolean
          accountAttributes:
            additionalProperties: true
            description: Map or dictionary of key/value pairs.
            example:
              type: global
              admin: true
              trust_level: "4"
            nullable: true
            type: object
        type: object
    App:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - properties:
          source:
            $ref: '#/components/schemas/Reference'
          account:
            $ref: '#/components/schemas/App_allOf_account'
        type: object
    IdentityAccess:
      discriminator:
        mapping:
          ACCESS_PROFILE: '#/components/schemas/AccessProfileSummary'
          ENTITLEMENT: '#/components/schemas/AccessProfileEntitlement'
          ROLE: '#/components/schemas/AccessProfileRole'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AccessProfileSummary'
      - $ref: '#/components/schemas/AccessProfileEntitlement'
      - $ref: '#/components/schemas/AccessProfileRole'
    Owns:
      properties:
        sources:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        entitlements:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        accessProfiles:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        roles:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        apps:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        governanceGroups:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        fallbackApprover:
          example: false
          type: boolean
      type: object
    ServiceDeskSource:
      description: Source for Service Desk integration template.
      properties:
        type:
          description: DTO type of source for service desk integration template.
          enum:
          - SOURCE
          example: SOURCE
          type: string
        id:
          description: ID of source for service desk integration template.
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Human-readable name of source for service desk integration
            template.
          example: HR Active Directory
          type: string
      type: object
    BaseAccessProfile:
      properties:
        id:
          description: Access profile's unique ID.
          example: 2c91809c6faade77016fb4f0b63407ae
          type: string
        name:
          description: Access profile's display name.
          example: Admin Access
          type: string
      type: object
    RequestedItemDtoRef:
      example:
        clientMetadata:
          requestedAppName: test-app
          requestedAppId: 2c91808f7892918f0178b78da4a305a1
        removeDate: 2020-07-11T21:23:15Z
        accountSelection:
        - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
          accounts:
          - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
            nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
            nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
        - sourceId: cb89bc2f1ee6445fbea12224c526ba3a
          accounts:
          - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
            nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
            nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
        comment: Requesting access profile for John Doe
        id: 2c9180835d2e5168015d32f890ca1581
        type: ACCESS_PROFILE
      properties:
        type:
          description: The type of the item being requested.
          enum:
          - ACCESS_PROFILE
          - ROLE
          - ENTITLEMENT
          example: ACCESS_PROFILE
          type: string
        id:
          description: "ID of Role, Access Profile or Entitlement being requested."
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        comment:
          description: |
            Comment provided by requester.
            * Comment is required when the request is of type Revoke Access.
          example: Requesting access profile for John Doe
          type: string
        clientMetadata:
          additionalProperties:
            example: "{requestedAppId=2c91808f7892918f0178b78da4a305a1, requestedAppName=test-app}"
            type: string
          description: Arbitrary key-value pairs. They will never be processed by
            the IdentityNow system but will be returned on associated APIs such as
            /account-activities and /access-request-status.
          example:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          type: object
        removeDate:
          description: |
            The date and time the role or access profile or entitlement is no longer assigned to the specified identity. Also known as the expiration date.
            * Specify a date-time in the future.
            * The current SLA for the deprovisioning is 24 hours.
            * This date-time can be used to change the duration of an existing access item assignment for the specified identity. A GRANT_ACCESS request can extend duration or even remove an expiration date, and either a  GRANT_ACCESS or REVOKE_ACCESS request can reduce duration or add an expiration date where one has not previously been present. You can change the expiration date in requests for yourself or others you are authorized to request for.
          example: 2020-07-11T21:23:15Z
          format: date-time
          type: string
        accountSelection:
          description: |
            The accounts where the access item will be provisioned to
            * Includes selections performed by the user in the event of multiple accounts existing on the same source
            * Also includes details for sources where user only has one account
          items:
            $ref: '#/components/schemas/SourceItemRef'
          nullable: true
          type: array
      required:
      - id
      - type
      type: object
    AccountActivityApprovalStatus:
      description: The state of an approval status
      enum:
      - FINISHED
      - REJECTED
      - RETURNED
      - EXPIRED
      - PENDING
      - CANCELED
      - null
      example: PENDING
      nullable: true
      type: string
    ProvisioningState:
      description: Provisioning state of an account activity item
      enum:
      - PENDING
      - FINISHED
      - UNVERIFIABLE
      - COMMITED
      - FAILED
      - RETRY
      example: PENDING
      type: string
    Comment:
      example:
        date: 2017-07-11T18:45:37.098Z
        commenterName: Adam Kennedy
        body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
          erat.
        commenterId: 2c918084660f45d6016617daa9210584
      nullable: true
      properties:
        commenterId:
          description: Id of the identity making the comment
          example: 2c918084660f45d6016617daa9210584
          type: string
        commenterName:
          description: Human-readable display name of the identity making the comment
          example: Adam Kennedy
          type: string
        body:
          description: Content of the comment
          example: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat.
          type: string
        date:
          description: Date and time comment was made
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
      type: object
    AccountActivityItemOperation:
      description: Represents an operation in an account activity item
      enum:
      - ADD
      - CREATE
      - MODIFY
      - DELETE
      - DISABLE
      - ENABLE
      - UNLOCK
      - LOCK
      - REMOVE
      - SET
      - null
      example: ADD
      nullable: true
      type: string
    AccountRequestInfo:
      description: "If an account activity item is associated with an access request,\
        \ captures details of that request."
      example:
        requestedObjectId: 2c91808563ef85690164001c31140c0c
        requestedObjectName: Treasury Analyst
        requestedObjectType: ACCESS_PROFILE
      nullable: true
      properties:
        requestedObjectId:
          description: Id of requested object
          example: 2c91808563ef85690164001c31140c0c
          type: string
        requestedObjectName:
          description: Human-readable name of requested object
          example: Treasury Analyst
          type: string
        requestedObjectType:
          $ref: '#/components/schemas/RequestableObjectType'
      type: object
    SectionDetails:
      allOf:
      - $ref: '#/components/schemas/FormItemDetails'
      - properties:
          label:
            description: Label of the section
            example: Section 1
            type: string
          formItems:
            description: List of FormItems. FormItems can be SectionDetails and/or
              FieldDetails
            example: []
            items:
              type: object
            type: array
        type: object
      example:
        formItems: []
        name: Field1
        label: Section 1
      type: object
    AccessProfileApprovalScheme:
      example:
        approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
        approverType: GOVERNANCE_GROUP
      properties:
        approverType:
          description: |-
            Describes the individual or group that is responsible for an approval step. These are the possible values:
            **APP_OWNER**: The owner of the Application

            **OWNER**: Owner of the associated Access Profile or Role

            **SOURCE_OWNER**: Owner of the Source associated with an Access Profile

            **MANAGER**: Manager of the Identity making the request

            **GOVERNANCE_GROUP**: A Governance Group, the ID of which is specified by the **approverId** field
          enum:
          - APP_OWNER
          - OWNER
          - SOURCE_OWNER
          - MANAGER
          - GOVERNANCE_GROUP
          example: GOVERNANCE_GROUP
          type: string
        approverId:
          description: Specific approver ID. Only use this when the `approverType`
            is `GOVERNANCE_GROUP`.
          example: 46c79819-a69f-49a2-becb-12c971ae66c6
          nullable: true
          type: string
      type: object
    ProvisioningCriteriaOperation:
      description: Supported operations on `ProvisioningCriteria`.
      enum:
      - EQUALS
      - NOT_EQUALS
      - CONTAINS
      - HAS
      - AND
      - OR
      example: EQUALS
      type: string
    ProvisioningCriteriaLevel2:
      description: Defines matching criteria for an account to be provisioned with
        a specific access profile.
      example:
        children:
        - children: children
          attribute: email
          operation: EQUALS
          value: carlee.cert1c9f9b6fd@mailinator.com
        - children: children
          attribute: email
          operation: EQUALS
          value: carlee.cert1c9f9b6fd@mailinator.com
        attribute: email
        operation: EQUALS
        value: carlee.cert1c9f9b6fd@mailinator.com
      properties:
        operation:
          $ref: '#/components/schemas/ProvisioningCriteriaOperation'
        attribute:
          description: "Name of the account attribute to be tested. If **operation**\
            \ is one of `EQUALS`, `NOT_EQUALS`, `CONTAINS`, or `HAS`, this field is\
            \ required. Otherwise, specifying it results in an error."
          example: email
          nullable: true
          type: string
        value:
          description: "String value to test the account attribute w/r/t the specified\
            \ operation. If the operation is one of `EQUALS`, `NOT_EQUALS`, or `CONTAINS`,\
            \ this field is required. Otherwise, specifying it results in an error.\
            \ If the attribute is not string-typed, the API will convert it to the\
            \ appropriate type."
          example: carlee.cert1c9f9b6fd@mailinator.com
          nullable: true
          type: string
        children:
          description: "Array of child criteria. This field is required if the operation\
            \ is `AND` or `OR`. Otherwise, it must be left null. A maximum of three\
            \ levels of criteria are supported, including leaf nodes."
          items:
            $ref: '#/components/schemas/ProvisioningCriteriaLevel3'
          nullable: true
          type: array
          example: null
      type: object
    LocaleOrigin:
      description: "An indicator of how the locale was selected. *DEFAULT* means the\
        \ locale is the system default. *REQUEST* means the locale was selected from\
        \ the request context (i.e., best match based on the *Accept-Language* header).\
        \ Additional values may be added in the future without notice."
      enum:
      - DEFAULT
      - REQUEST
      - null
      example: DEFAULT
      nullable: true
      type: string
    RequestedItemDetails:
      properties:
        type:
          description: The type of access item requested.
          enum:
          - ACCESS_PROFILE
          - ENTITLEMENT
          - ROLE
          example: ENTITLEMENT
          type: string
        id:
          description: The id of the access item requested.
          example: 779c6fd7171540bba1184e5946112c28
          type: string
      type: object
    ManualWorkItemState:
      description: |-
        Indicates the state of the request processing for this item:
        * PENDING: The request for this item is awaiting processing.
        * APPROVED: The request for this item has been approved.
        * REJECTED: The request for this item was rejected.
        * EXPIRED: The request for this item expired with no action taken.
        * CANCELLED: The request for this item was cancelled with no user action.
        * ARCHIVED: The request for this item has been archived after completion.
      enum:
      - PENDING
      - APPROVED
      - REJECTED
      - EXPIRED
      - CANCELLED
      - ARCHIVED
      example: PENDING
      type: string
    ApprovalScheme:
      description: Describes the individual or group that is responsible for an approval
        step.
      enum:
      - APP_OWNER
      - SOURCE_OWNER
      - MANAGER
      - ROLE_OWNER
      - ACCESS_PROFILE_OWNER
      - ENTITLEMENT_OWNER
      - GOVERNANCE_GROUP
      example: MANAGER
      type: string
    SodViolationCheckResult:
      description: The inner object representing the completed SOD Violation check
      example:
        clientMetadata:
          requestedAppName: test-app
          requestedAppId: 2c91808f7892918f0178b78da4a305a1
        violationContexts:
        - conflictingAccessCriteria:
            leftCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
            rightCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
          policy:
            name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
        - conflictingAccessCriteria:
            leftCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
            rightCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
          policy:
            name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
        violatedPolicies:
        - name: Business SOD Policy
          id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: SOD_POLICY
        - name: Business SOD Policy
          id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: SOD_POLICY
        message:
          localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessageDto'
        clientMetadata:
          additionalProperties:
            type: string
          description: Arbitrary key-value pairs. They will never be processed by
            the IdentityNow system but will be returned on completion of the violation
            check.
          example:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          nullable: true
          type: object
        violationContexts:
          items:
            $ref: '#/components/schemas/SodViolationContext'
          nullable: true
          type: array
        violatedPolicies:
          description: A list of the SOD policies that were violated.
          items:
            $ref: '#/components/schemas/SodPolicyDto'
          nullable: true
          type: array
      type: object
    ReassignmentType:
      description: "The approval reassignment type. \n* MANUAL_REASSIGNMENT: An approval\
        \ with this reassignment type has been specifically reassigned by the approval\
        \ task's owner, from their queue to someone else's. \n* AUTOMATIC_REASSIGNMENT:\
        \ An approval with this reassignment type has been automatically reassigned\
        \ from another approver's queue, according to that approver's reassignment\
        \ configuration. The approver's reassignment configuration may be set up to\
        \ automatically reassign approval tasks for a defined (or possibly open-ended)\
        \ period of time.\n* AUTO_ESCALATION: An approval with this reassignment type\
        \ has been automatically reassigned from another approver's queue, according\
        \ to the request's escalation configuration. For more information about escalation\
        \ configuration, refer to [Setting Global Reminders and Escalation Policies](https://documentation.sailpoint.com/saas/help/requests/config_emails.html).\n\
        * SELF_REVIEW_DELEGATION: An approval with this reassignment type has been\
        \ automatically reassigned by the system to prevent self-review. This helps\
        \ prevent situations like a requester being tasked with approving their own\
        \ request. For more information about preventing self-review, refer to [Self-review\
        \ Prevention](https://documentation.sailpoint.com/saas/help/users/work_reassignment.html#self-review-prevention)\
        \ and [Preventing Self-approval](https://documentation.sailpoint.com/saas/help/requests/config_ap_roles.html#preventing-self-approval)."
      enum:
      - MANUAL_REASSIGNMENT
      - AUTOMATIC_REASSIGNMENT
      - AUTO_ESCALATION
      - SELF_REVIEW_DELEGATION
      example: AUTOMATIC_REASSIGNMENT
      type: string
    FederationProtocolDetails:
      properties:
        role:
          description: Federation protocol role
          enum:
          - SAML_IDP
          - SAML_SP
          example: SAML_IDP
          type: string
        entityId:
          description: "An entity ID is a globally unique name for a SAML entity,\
            \ either an Identity Provider (IDP) or a Service Provider (SP)."
          example: http://www.okta.com/exkdaruy8Ln5Ry7C54x6
          type: string
      type: object
    JITConfiguration:
      properties:
        enabled:
          default: false
          description: The indicator for just-in-time provisioning enabled
          example: false
          type: boolean
        sourceId:
          description: the sourceId that mapped to just-in-time provisioning configuration
          example: 2c9180857377ed2901739c12a2da5ac8
          type: string
        sourceAttributeMappings:
          additionalProperties:
            description: a mapping of JIT source attributes to the SAML assertion
              attribute
            type: string
          description: A mapping of identity profile attribute names to SAML assertion
            attribute names
          example:
            firstName: okta.firstName
            lastName: okta.lastName
            email: okta.email
          type: object
      type: object
    ReassignmentTrailDTO:
      properties:
        previousOwner:
          description: The ID of previous owner identity.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        newOwner:
          description: The ID of new owner identity.
          example: ef38f94347e94562b5bb8424a56397a3
          type: string
        reassignmentType:
          description: The type of reassignment.
          example: AUTOMATIC_REASSIGNMENT
          type: string
      type: object
    DataAccess:
      description: DAS data for the entitlement
      example:
        policies:
        - value: GDPR-20
        - value: GDPR-20
        categories:
        - matchCount: 10
          value: email-7
        - matchCount: 10
          value: email-7
        impactScore:
          value: Medium
      nullable: true
      properties:
        policies:
          description: List of classification policies that apply to resources the
            entitlement \ groups has access to
          items:
            $ref: '#/components/schemas/DataAccess_policies_inner'
          type: array
        categories:
          description: List of classification categories that apply to resources the
            entitlement \ groups has access to
          items:
            $ref: '#/components/schemas/DataAccess_categories_inner'
          type: array
        impactScore:
          $ref: '#/components/schemas/DataAccess_impactScore'
      type: object
    ActivityInsights:
      description: Insights into account activity
      example:
        accountID: c4ddd5421d8549f0abd309162cafd3b1
        usageDays: 45
        usageDaysState: COMPLETE
      properties:
        accountID:
          description: UUID of the account
          example: c4ddd5421d8549f0abd309162cafd3b1
          type: string
        usageDays:
          description: The number of days of activity
          example: 45
          format: int32
          maximum: 90
          minimum: 0
          type: integer
        usageDaysState:
          description: Status indicating if the activity is complete or unknown
          enum:
          - COMPLETE
          - UNKNOWN
          example: COMPLETE
          type: string
      type: object
    ObjectExportImportNames:
      properties:
        includedNames:
          description: Object names to be included in a backup.
          items:
            example: Test Object name
            type: string
          type: array
      type: object
    TransformDefinition:
      example:
        attributes:
          attributeName: e-mail
          sourceName: MySource
          sourceId: 2c9180877a826e68017a8c0b03da1a53
        type: accountAttribute
      properties:
        type:
          description: Transform definition type.
          example: accountAttribute
          type: string
        attributes:
          additionalProperties: true
          description: Arbitrary key-value pairs to store any metadata for the object
          example:
            attributeName: e-mail
            sourceName: MySource
            sourceId: 2c9180877a826e68017a8c0b03da1a53
          type: object
      type: object
    ManagedClusterQueue:
      description: Managed Cluster key pair for Cluster
      example:
        name: megapod-useast1-denali-lwt-cluster-1533
        region: us-east-1
      properties:
        name:
          description: ManagedCluster queue name
          example: megapod-useast1-denali-lwt-cluster-1533
          type: string
        region:
          description: ManagedCluster queue aws region
          example: us-east-1
          type: string
      type: object
    NonEmployeeIdentityDtoType:
      description: Identifies if the identity is a normal identity or a governance
        group
      enum:
      - GOVERNANCE_GROUP
      - IDENTITY
      example: IDENTITY
      type: string
    NonEmployeeSourceLiteWithSchemaAttributes:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSourceLite'
      - properties:
          schemaAttributes:
            description: List of schema attributes associated with this non-employee
              source.
            items:
              $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
            type: array
        type: object
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        name: Retail
        description: Source description
        id: a0303682-5e4a-44f7-bdc2-6ce6112549c1
        schemaAttributes:
        - system: true
          helpText: The unique identifier for the account
          created: 2019-08-23T18:40:35.772Z
          modified: 2019-08-23T18:52:59.162Z
          id: ac110005-7156-1150-8171-5b292e3e0084
          label: Account Name
          placeholder: Enter a unique user name for this account.
          type: TEXT
          technicalName: account.name
          required: true
        - system: true
          helpText: The unique identifier for the account
          created: 2019-08-23T18:40:35.772Z
          modified: 2019-08-23T18:52:59.162Z
          id: ac110005-7156-1150-8171-5b292e3e0084
          label: Account Name
          placeholder: Enter a unique user name for this account.
          type: TEXT
          technicalName: account.name
          required: true
    RoleMembershipSelectorType:
      description: |-
        This enum characterizes the type of a Role's membership selector. Only the following two are fully supported:

        STANDARD: Indicates that Role membership is defined in terms of a criteria expression

        IDENTITY_LIST: Indicates that Role membership is conferred on the specific identities listed
      enum:
      - STANDARD
      - IDENTITY_LIST
      example: IDENTITY_LIST
      type: string
    RoleCriteriaLevel1:
      description: Defines STANDARD type Role membership
      example:
        stringValue: carlee.cert1c9f9b6fd@mailinator.com
        children:
        - stringValue: carlee.cert1c9f9b6fd@mailinator.com
          children:
          - stringValue: carlee.cert1c9f9b6fd@mailinator.com
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          - stringValue: carlee.cert1c9f9b6fd@mailinator.com
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          operation: EQUALS
          key:
            sourceId: 2c9180867427f3a301745aec18211519
            property: attribute.email
            type: ACCOUNT
        - stringValue: carlee.cert1c9f9b6fd@mailinator.com
          children:
          - stringValue: carlee.cert1c9f9b6fd@mailinator.com
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          - stringValue: carlee.cert1c9f9b6fd@mailinator.com
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          operation: EQUALS
          key:
            sourceId: 2c9180867427f3a301745aec18211519
            property: attribute.email
            type: ACCOUNT
        operation: EQUALS
        key:
          sourceId: 2c9180867427f3a301745aec18211519
          property: attribute.email
          type: ACCOUNT
      nullable: true
      properties:
        operation:
          $ref: '#/components/schemas/RoleCriteriaOperation'
        key:
          $ref: '#/components/schemas/RoleCriteriaKey'
        stringValue:
          description: "String value to test the Identity attribute, Account attribute,\
            \ or Entitlement specified in the key w/r/t the specified operation. If\
            \ this criteria is a leaf node, that is, if the operation is one of EQUALS,\
            \ NOT_EQUALS, CONTAINS, STARTS_WITH, or ENDS_WITH, this field is required.\
            \ Otherwise, specifying it is an error."
          example: carlee.cert1c9f9b6fd@mailinator.com
          nullable: true
          type: string
        children:
          description: "Array of child criteria. Required if the operation is AND\
            \ or OR, otherwise it must be left null. A maximum of three levels of\
            \ criteria are supported, including leaf nodes. Additionally, AND nodes\
            \ can only be children or OR nodes and vice-versa."
          items:
            $ref: '#/components/schemas/RoleCriteriaLevel2'
          nullable: true
          type: array
      type: object
    RoleMembershipIdentity:
      description: A reference to an Identity in an IDENTITY_LIST role membership
        criteria.
      example:
        aliasName: t.edison
        name: Thomas Edison
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: Identity id
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Human-readable display name of the Identity.
          example: Thomas Edison
          nullable: true
          type: string
        aliasName:
          description: User name of the Identity
          example: t.edison
          nullable: true
          type: string
      type: object
    ApprovalSchemeForRole:
      example:
        approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
        approverType: GOVERNANCE_GROUP
      properties:
        approverType:
          description: |-
            Describes the individual or group that is responsible for an approval step. Values are as follows.

            **OWNER**: Owner of the associated Role

            **MANAGER**: Manager of the Identity making the request

            **GOVERNANCE_GROUP**: A Governance Group, the ID of which is specified by the **approverId** field
          enum:
          - OWNER
          - MANAGER
          - GOVERNANCE_GROUP
          example: GOVERNANCE_GROUP
          type: string
        approverId:
          description: "Id of the specific approver, used only when approverType is\
            \ GOVERNANCE_GROUP"
          example: 46c79819-a69f-49a2-becb-12c971ae66c6
          nullable: true
          type: string
      type: object
    AttributeDTO:
      properties:
        key:
          description: Technical name of the Attribute. This is unique and cannot
            be changed after creation.
          example: iscPrivacy
          type: string
        name:
          description: The display name of the key.
          example: Privacy
          type: string
        multiselect:
          default: false
          description: Indicates whether the attribute can have multiple values.
          example: false
          type: boolean
        status:
          description: The status of the Attribute.
          example: active
          type: string
        type:
          description: The type of the Attribute. This can be either "custom" or "governance".
          example: governance
          type: string
        objectTypes:
          description: An array of object types this attributes values can be applied
            to. Possible values are "all" or "entitlement". Value "all" means this
            attribute can be used with all object types that are supported.
          example:
          - entitlement
          items:
            type: string
          nullable: true
          type: array
        description:
          description: The description of the Attribute.
          example: Specifies the level of privacy associated with an access item.
          type: string
        values:
          items:
            $ref: '#/components/schemas/AttributeValueDTO'
          nullable: true
          type: array
      type: object
    FilterType:
      description: |-
        Enum representing the currently supported filter types.
        Additional values may be added in the future without notice.
      enum:
      - EXISTS
      - RANGE
      - TERMS
      example: RANGE
      type: string
    Range:
      description: The range of values to be filtered.
      example:
        lower:
          inclusive: false
          value: "1"
        upper:
          inclusive: false
          value: "1"
      properties:
        lower:
          $ref: '#/components/schemas/Bound'
        upper:
          $ref: '#/components/schemas/Bound'
      type: object
    ScheduleType:
      description: |
        Enum representing the currently supported schedule types.

        Additional values may be added in the future without notice.
      enum:
      - DAILY
      - WEEKLY
      - MONTHLY
      - CALENDAR
      - ANNUALLY
      example: WEEKLY
      type: string
    Selector:
      properties:
        type:
          $ref: '#/components/schemas/SelectorType'
        values:
          description: |
            The selected values.
          example:
          - MON
          - WED
          items:
            type: string
          type: array
        interval:
          description: |
            The selected interval for RANGE selectors.
          example: 3
          format: int32
          nullable: true
          type: integer
      required:
      - type
      - values
      type: object
    InnerHit:
      description: Inner Hit query object that will cause the specified nested type
        to be returned as the result matching the supplied query.
      example:
        query: source.name:\"Active Directory\"
        type: access
      properties:
        query:
          description: "The search query using the Elasticsearch [Query String Query](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string)\
            \ syntax from the Query DSL extended by SailPoint to support Nested queries."
          example: source.name:\"Active Directory\"
          type: string
        type:
          description: "The nested type to use in the inner hits query.  The nested\
            \ type [Nested Type](https://www.elastic.co/guide/en/elasticsearch/reference/current/nested.html)\
            \ refers to a document \"nested\" within another document. For example,\
            \ an identity can have nested documents for access, accounts, and apps."
          example: access
          type: string
      required:
      - query
      - type
      type: object
    Aggregations:
      example:
        filter:
          field: access.type
          name: Entitlements
          type: TERM
          value: ENTITLEMENT
        bucket:
          field: attributes.city
          size: 100
          minDocCount: 2
          name: Identity Locations
          type: TERMS
        metric:
          field: '@access.name'
          name: Access Name Count
          type: COUNT
        nested:
          name: id
          type: access
      properties:
        nested:
          $ref: '#/components/schemas/NestedAggregation'
        metric:
          $ref: '#/components/schemas/MetricAggregation'
        filter:
          $ref: '#/components/schemas/FilterAggregation'
        bucket:
          $ref: '#/components/schemas/BucketAggregation'
      type: object
    SubSearchAggregationSpecification:
      allOf:
      - $ref: '#/components/schemas/Aggregations'
      - properties:
          subAggregation:
            $ref: '#/components/schemas/Aggregations'
        type: object
      example:
        filter:
          field: access.type
          name: Entitlements
          type: TERM
          value: ENTITLEMENT
        bucket:
          field: attributes.city
          size: 100
          minDocCount: 2
          name: Identity Locations
          type: TERMS
        metric:
          field: '@access.name'
          name: Access Name Count
          type: COUNT
        subAggregation:
          filter:
            field: access.type
            name: Entitlements
            type: TERM
            value: ENTITLEMENT
          bucket:
            field: attributes.city
            size: 100
            minDocCount: 2
            name: Identity Locations
            type: TERMS
          metric:
            field: '@access.name'
            name: Access Name Count
            type: COUNT
          nested:
            name: id
            type: access
        nested:
          name: id
          type: access
    Expression:
      example:
        children: []
        attribute: location
        value:
          type: STRING
          value: Austin
        operator: EQUALS
      properties:
        operator:
          description: Operator for the expression
          enum:
          - AND
          - EQUALS
          example: EQUALS
          type: string
        attribute:
          description: Name for the attribute
          example: location
          nullable: true
          type: string
        value:
          $ref: '#/components/schemas/Value'
        children:
          description: List of expressions
          example: []
          items:
            $ref: '#/components/schemas/Expression_children_inner'
          nullable: true
          type: array
      type: object
    ViolationOwnerAssignmentConfig:
      example:
        assignmentRule: MANAGER
        ownerRef:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
      properties:
        assignmentRule:
          description: |-
            Details about the violations owner.
            MANAGER - identity's manager
            STATIC - Governance Group or Identity
          enum:
          - MANAGER
          - STATIC
          - null
          example: MANAGER
          nullable: true
          type: string
        ownerRef:
          $ref: '#/components/schemas/ViolationOwnerAssignmentConfig_ownerRef'
      type: object
    AccessCriteria:
      example:
        name: money-in
        criteriaList:
        - type: ENTITLEMENT
          id: 2c9180866166b5b0016167c32ef31a66
          name: Administrator
        - type: ENTITLEMENT
          id: 2c9180866166b5b0016167c32ef31a67
          name: Administrator
      properties:
        name:
          description: Business name for the access construct list
          example: money-in
          type: string
        criteriaList:
          description: List of criteria. There is a min of 1 and max of 50 items in
            the list.
          example:
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a66
            name: Administrator
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a67
            name: Administrator
          items:
            $ref: '#/components/schemas/AccessCriteria_criteriaList_inner'
          maxItems: 50
          minItems: 1
          type: array
      type: object
    AccessCriteriaRequest:
      example:
        name: money-in
        criteriaList:
        - type: ENTITLEMENT
          id: 2c9180866166b5b0016167c32ef31a66
          name: Administrator
        - type: ENTITLEMENT
          id: 2c9180866166b5b0016167c32ef31a67
          name: Administrator
      properties:
        name:
          description: Business name for the access construct list
          example: money-in
          type: string
        criteriaList:
          description: List of criteria. There is a min of 1 and max of 50 items in
            the list.
          example:
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a66
            name: Administrator
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a67
            name: Administrator
          items:
            $ref: '#/components/schemas/AccessCriteriaRequest_criteriaList_inner'
          maxItems: 50
          minItems: 1
          type: array
      type: object
    SodPolicyDto:
      description: SOD policy.
      example:
        name: Business SOD Policy
        id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        type: SOD_POLICY
      properties:
        type:
          description: SOD policy DTO type.
          enum:
          - SOD_POLICY
          example: SOD_POLICY
          type: string
        id:
          description: SOD policy ID.
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: string
        name:
          description: SOD policy display name.
          example: Business SOD Policy
          type: string
      type: object
    ExceptionAccessCriteria:
      example:
        leftCriteria:
          criteriaList:
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a66
            existing: true
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a67
            existing: false
        rightCriteria:
          criteriaList:
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a66
            existing: true
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a67
            existing: false
      properties:
        leftCriteria:
          $ref: '#/components/schemas/ExceptionCriteria'
        rightCriteria:
          $ref: '#/components/schemas/ExceptionCriteria'
      type: object
    AttributeDefinitionType:
      description: The underlying type of the value which an AttributeDefinition represents.
      enum:
      - STRING
      - LONG
      - INT
      - BOOLEAN
      - DATE
      example: STRING
      type: string
    ApprovalComment:
      properties:
        comment:
          description: The comment text
          example: This request was autoapproved by our automated ETS subscriber.
          type: string
        commenter:
          description: The name of the commenter
          example: Automated AR Approval
          type: string
        date:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
      type: object
    AttributeRequest:
      properties:
        name:
          description: Attribute name.
          example: groups
          type: string
        op:
          description: Operation to perform on attribute.
          example: Add
          type: string
        value:
          $ref: '#/components/schemas/AttributeRequest_value'
      type: object
    AccountSource:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - properties:
          type:
            description: Type of source returned.
            example: Delimited File
            type: string
        type: object
    Result:
      properties:
        status:
          description: Request result status
          example: Manual Task Created
          type: string
      type: object
    SourceItemRef:
      example:
        sourceId: cb89bc2f1ee6445fbea12224c526ba3a
        accounts:
        - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
          nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
        - accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
          nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
      properties:
        sourceId:
          description: The id for the source on which account selections are made
          example: cb89bc2f1ee6445fbea12224c526ba3a
          nullable: true
          type: string
        accounts:
          description: "A list of account selections on the source. Currently, only\
            \ one selection per source is supported."
          items:
            $ref: '#/components/schemas/AccountItemRef'
          nullable: true
          type: array
      type: object
    FormItemDetails:
      properties:
        name:
          description: Name of the FormItem
          example: Field1
          type: string
      type: object
    ProvisioningCriteriaLevel3:
      description: Defines matching criteria for an account to be provisioned with
        a specific access profile.
      example:
        children: children
        attribute: email
        operation: EQUALS
        value: carlee.cert1c9f9b6fd@mailinator.com
      properties:
        operation:
          $ref: '#/components/schemas/ProvisioningCriteriaOperation'
        attribute:
          description: "Name of the account attribute to be tested. If **operation**\
            \ is one of `EQUALS`, `NOT_EQUALS`, `CONTAINS`, or `HAS`, this field is\
            \ required. Otherwise, specifying it results in an error."
          example: email
          nullable: true
          type: string
        value:
          description: "String value to test the account attribute w/r/t the specified\
            \ operation. If the operation is one of `EQUALS`, `NOT_EQUALS`, or `CONTAINS`,\
            \ this field is required. Otherwise, specifying it results in an error.\
            \ If the attribute is not string-typed, the API will convert it to the\
            \ appropriate type."
          example: carlee.cert1c9f9b6fd@mailinator.com
          nullable: true
          type: string
        children:
          description: "Array of child criteria. This field is required if the operation\
            \ is `AND` or `OR`. Otherwise, it must be left null. A maximum of three\
            \ levels of criteria are supported, including leaf nodes."
          nullable: true
          type: string
          example: null
      type: object
    SodViolationContext:
      description: The contextual information of the violated criteria
      example:
        conflictingAccessCriteria:
          leftCriteria:
            criteriaList:
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
          rightCriteria:
            criteriaList:
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
        policy:
          name: Business SOD Policy
          id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: SOD_POLICY
      properties:
        policy:
          $ref: '#/components/schemas/SodPolicyDto'
        conflictingAccessCriteria:
          $ref: '#/components/schemas/SodViolationContext_conflictingAccessCriteria'
      type: object
    RoleCriteriaOperation:
      description: An operation
      enum:
      - EQUALS
      - NOT_EQUALS
      - CONTAINS
      - STARTS_WITH
      - ENDS_WITH
      - AND
      - OR
      example: EQUALS
      type: string
    RoleCriteriaKey:
      description: "Refers to a specific Identity attribute, Account attibute, or\
        \ Entitlement used in Role membership criteria"
      example:
        sourceId: 2c9180867427f3a301745aec18211519
        property: attribute.email
        type: ACCOUNT
      nullable: true
      properties:
        type:
          $ref: '#/components/schemas/RoleCriteriaKeyType'
        property:
          description: The name of the attribute or entitlement to which the associated
            criteria applies.
          example: attribute.email
          type: string
        sourceId:
          description: ID of the Source from which an account attribute or entitlement
            is drawn. Required if type is ACCOUNT or ENTITLEMENT
          example: 2c9180867427f3a301745aec18211519
          nullable: true
          type: string
      required:
      - property
      - type
      type: object
    RoleCriteriaLevel2:
      description: Defines STANDARD type Role membership
      example:
        stringValue: carlee.cert1c9f9b6fd@mailinator.com
        children:
        - stringValue: carlee.cert1c9f9b6fd@mailinator.com
          operation: EQUALS
          key:
            sourceId: 2c9180867427f3a301745aec18211519
            property: attribute.email
            type: ACCOUNT
        - stringValue: carlee.cert1c9f9b6fd@mailinator.com
          operation: EQUALS
          key:
            sourceId: 2c9180867427f3a301745aec18211519
            property: attribute.email
            type: ACCOUNT
        operation: EQUALS
        key:
          sourceId: 2c9180867427f3a301745aec18211519
          property: attribute.email
          type: ACCOUNT
      nullable: true
      properties:
        operation:
          $ref: '#/components/schemas/RoleCriteriaOperation'
        key:
          $ref: '#/components/schemas/RoleCriteriaKey'
        stringValue:
          description: "String value to test the Identity attribute, Account attribute,\
            \ or Entitlement specified in the key w/r/t the specified operation. If\
            \ this criteria is a leaf node, that is, if the operation is one of EQUALS,\
            \ NOT_EQUALS, CONTAINS, STARTS_WITH, or ENDS_WITH, this field is required.\
            \ Otherwise, specifying it is an error."
          example: carlee.cert1c9f9b6fd@mailinator.com
          nullable: true
          type: string
        children:
          description: "Array of child criteria. Required if the operation is AND\
            \ or OR, otherwise it must be left null. A maximum of three levels of\
            \ criteria are supported, including leaf nodes. Additionally, AND nodes\
            \ can only be children or OR nodes and vice-versa."
          items:
            $ref: '#/components/schemas/RoleCriteriaLevel3'
          nullable: true
          type: array
      type: object
    AttributeValueDTO:
      properties:
        value:
          description: Technical name of the Attribute value. This is unique and cannot
            be changed after creation.
          example: public
          type: string
        name:
          description: The display name of the Attribute value.
          example: Public
          type: string
        status:
          description: The status of the Attribute value.
          example: active
          type: string
      type: object
    Bound:
      example:
        inclusive: false
        value: "1"
      properties:
        value:
          description: The value of the range's endpoint.
          example: "1"
          type: string
        inclusive:
          default: false
          description: Indicates if the endpoint is included in the range.
          example: false
          type: boolean
      required:
      - value
      type: object
    SelectorType:
      description: |
        Enum representing the currently supported selector types.

        LIST - the *values* array contains one or more distinct values.

        RANGE - the *values* array contains two values: the start and end of the range, inclusive.

        Additional values may be added in the future without notice.
      enum:
      - LIST
      - RANGE
      example: LIST
      type: string
    NestedAggregation:
      description: The nested aggregation object.
      example:
        name: id
        type: access
      properties:
        name:
          description: The name of the nested aggregate to be included in the result.
          example: id
          type: string
        type:
          description: The type of the nested object.
          example: access
          type: string
      required:
      - name
      - type
      type: object
    MetricAggregation:
      description: The calculation done on the results of the query
      example:
        field: '@access.name'
        name: Access Name Count
        type: COUNT
      properties:
        name:
          description: |-
            The name of the metric aggregate to be included in the result.
            If the metric aggregation is omitted, the resulting aggregation will be a count of the documents in the search results.
          example: Access Name Count
          type: string
        type:
          $ref: '#/components/schemas/MetricType'
        field:
          description: |
            The field the calculation is performed on.

            Prefix the field name with '@' to reference a nested object.
          example: '@access.name'
          type: string
      required:
      - field
      - name
      type: object
    FilterAggregation:
      description: An additional filter to constrain the results of the search query.
      example:
        field: access.type
        name: Entitlements
        type: TERM
        value: ENTITLEMENT
      properties:
        name:
          description: The name of the filter aggregate to be included in the result.
          example: Entitlements
          type: string
        type:
          $ref: '#/components/schemas/SearchFilterType'
        field:
          description: |
            The search field to apply the filter to.

            Prefix the field name with '@' to reference a nested object.
          example: access.type
          type: string
        value:
          description: The value to filter on.
          example: ENTITLEMENT
          type: string
      required:
      - field
      - name
      - value
      type: object
    BucketAggregation:
      description: The bucket to group the results of the aggregation query by.
      example:
        field: attributes.city
        size: 100
        minDocCount: 2
        name: Identity Locations
        type: TERMS
      properties:
        name:
          description: The name of the bucket aggregate to be included in the result.
          example: Identity Locations
          type: string
        type:
          $ref: '#/components/schemas/BucketType'
        field:
          description: |-
            The field to bucket on.
            Prefix the field name with '@' to reference a nested object.
          example: attributes.city
          type: string
        size:
          description: Maximum number of buckets to include.
          example: 100
          format: int32
          type: integer
        minDocCount:
          description: Minimum number of documents a bucket should have.
          example: 2
          format: int32
          type: integer
      required:
      - field
      - name
      type: object
    Value:
      example:
        type: STRING
        value: Austin
      nullable: true
      properties:
        type:
          description: The type of attribute value
          example: STRING
          type: string
        value:
          description: The attribute value
          example: Austin
          type: string
      type: object
    ExceptionCriteria:
      example:
        criteriaList:
        - type: ENTITLEMENT
          id: 2c9180866166b5b0016167c32ef31a66
          existing: true
        - type: ENTITLEMENT
          id: 2c9180866166b5b0016167c32ef31a67
          existing: false
      properties:
        criteriaList:
          description: List of exception criteria. There is a min of 1 and max of
            50 items in the list.
          example:
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a66
            existing: true
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a67
            existing: false
          items:
            $ref: '#/components/schemas/ExceptionCriteria_criteriaList_inner'
          type: array
      type: object
    AccountItemRef:
      example:
        accountUuid: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
        nativeIdentity: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
      properties:
        accountUuid:
          description: "The uuid for the account, available under the 'objectguid'\
            \ attribute"
          example: "{fab7119e-004f-4822-9c33-b8d570d6c6a6}"
          nullable: true
          type: string
        nativeIdentity:
          description: The 'distinguishedName' attribute for the account
          example: "CN=Glen 067da3248e914,OU=YOUROU,OU=org-data-service,DC=YOURDC,DC=local"
          nullable: false
          type: string
      type: object
    SodExemptCriteria:
      description: Details of the Entitlement criteria
      example:
        existing: true
        name: My HR Entitlement
        id: 2c918085771e9d3301773b3cb66f6398
        type: IDENTITY
      properties:
        existing:
          default: false
          description: If the entitlement already belonged to the user or not.
          example: true
          type: boolean
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: Entitlement ID
          example: 2c918085771e9d3301773b3cb66f6398
          type: string
        name:
          description: Entitlement name
          example: My HR Entitlement
          type: string
      type: object
    RoleCriteriaKeyType:
      description: "Indicates whether the associated criteria represents an expression\
        \ on identity attributes, account attributes, or entitlements, respectively."
      enum:
      - IDENTITY
      - ACCOUNT
      - ENTITLEMENT
      example: ACCOUNT
      type: string
    RoleCriteriaLevel3:
      description: Defines STANDARD type Role membership
      example:
        stringValue: carlee.cert1c9f9b6fd@mailinator.com
        operation: EQUALS
        key:
          sourceId: 2c9180867427f3a301745aec18211519
          property: attribute.email
          type: ACCOUNT
      properties:
        operation:
          $ref: '#/components/schemas/RoleCriteriaOperation'
        key:
          $ref: '#/components/schemas/RoleCriteriaKey'
        stringValue:
          description: "String value to test the Identity attribute, Account attribute,\
            \ or Entitlement specified in the key w/r/t the specified operation. If\
            \ this criteria is a leaf node, that is, if the operation is one of EQUALS,\
            \ NOT_EQUALS, CONTAINS, STARTS_WITH, or ENDS_WITH, this field is required.\
            \ Otherwise, specifying it is an error."
          example: carlee.cert1c9f9b6fd@mailinator.com
          type: string
      type: object
    MetricType:
      default: UNIQUE_COUNT
      description: |-
        Enum representing the currently supported metric aggregation types.
        Additional values may be added in the future without notice.
      enum:
      - COUNT
      - UNIQUE_COUNT
      - AVG
      - SUM
      - MEDIAN
      - MIN
      - MAX
      example: COUNT
      type: string
    SearchFilterType:
      default: TERM
      description: |-
        Enum representing the currently supported filter aggregation types.
        Additional values may be added in the future without notice.
      enum:
      - TERM
      example: TERM
      type: string
    BucketType:
      default: TERMS
      description: |-
        Enum representing the currently supported bucket aggregation types.
        Additional values may be added in the future without notice.
      enum:
      - TERMS
      example: TERMS
      type: string
    ExceptionCriteriaAccess:
      description: Access reference with addition of boolean existing flag to indicate
        whether the access was extant
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: ID of the object to which this reference applies
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: "CN=HelpDesk,OU=test,OU=test-service,DC=TestAD,DC=local"
          type: string
        existing:
          default: false
          description: Whether the subject identity already had that access or not
          example: true
          type: boolean
      type: object
    listAccessProfiles_401_response:
      example:
        error: "JWT validation failed: JWT is expired"
      properties:
        error:
          description: A message describing the error
          example: "JWT validation failed: JWT is expired"
          type: object
      type: object
    listAccessProfiles_429_response:
      example:
        message: ' Rate Limit Exceeded '
      properties:
        message:
          description: A message describing the error
          example: ' Rate Limit Exceeded '
          type: object
      type: object
    getActiveCampaigns_200_response_inner:
      anyOf:
      - $ref: '#/components/schemas/Campaign'
      - $ref: '#/components/schemas/SlimCampaign'
    getCampaign_200_response:
      anyOf:
      - $ref: '#/components/schemas/SlimCampaign'
      - $ref: '#/components/schemas/Campaign'
    listCampaignFilters_200_response:
      example:
        count: 2
        items:
        - owner: SailPoint Support
          mode: INCLUSION
          isSystemFilter: false
          name: Identity Attribute Campaign Filter
          description: Campaign filter to certify data based on an identity attribute's
            specified property.
          id: 5ec18cef39020d6fd7a60ad3970aba61
          criteriaList:
          - type: IDENTITY_ATTRIBUTE
            property: displayName
            value: support
            operation: CONTAINS
            negateResult: false
            shortCircuit: false
            recordChildMatches: false
            id: null
            suppressMatchedItems: false
            children: null
        - owner: SailPoint Support
          mode: INCLUSION
          isSystemFilter: false
          name: Identity Attribute Campaign Filter
          description: Campaign filter to certify data based on an identity attribute's
            specified property.
          id: 5ec18cef39020d6fd7a60ad3970aba61
          criteriaList:
          - type: IDENTITY_ATTRIBUTE
            property: displayName
            value: support
            operation: CONTAINS
            negateResult: false
            shortCircuit: false
            recordChildMatches: false
            id: null
            suppressMatchedItems: false
            children: null
      properties:
        items:
          description: List of campaign filters.
          items:
            $ref: '#/components/schemas/CampaignFilterDetails'
          type: array
        count:
          description: Number of filters returned.
          example: 2
          type: integer
      type: object
    createUploadedConfiguration_request:
      properties:
        data:
          description: JSON file containing the objects to be imported.
          format: binary
          type: string
        name:
          description: Name that will be assigned to the uploaded configuration file.
          type: string
      required:
      - data
      - name
      type: object
    putConnectorSourceConfig_request:
      properties:
        file:
          description: connector source config xml file
          format: binary
          type: string
      required:
      - file
      type: object
    putConnectorSourceTemplate_request:
      properties:
        file:
          description: connector source template xml file
          format: binary
          type: string
      required:
      - file
      type: object
    setLifecycleState_request:
      properties:
        lifecycleStateId:
          description: ID of the lifecycle state to set.
          example: 2c9180877a86e408017a8c19fefe046c
          type: string
      type: object
    setLifecycleState_200_response:
      example:
        accountActivityId: 2c9180837ab5b716017ab7c6c9ef1e20
      properties:
        accountActivityId:
          description: "ID of the IdentityRequest object that is generated when the\
            \ workflow launches. To follow the IdentityRequest, you can provide this\
            \ ID with a [Get Account Activity request](https://developer.sailpoint.com/docs/api/v3/get-account-activity/).\
            \ The response will contain relevant information about the IdentityRequest,\
            \ such as its status."
          example: 2c9180837ab5b716017ab7c6c9ef1e20
          type: string
      type: object
    putClientLogConfiguration_request:
      oneOf:
      - $ref: '#/components/schemas/ClientLogConfigurationDurationMinutes'
      - $ref: '#/components/schemas/ClientLogConfigurationExpiration'
    deleteNonEmployeeRecordsInBulk_request:
      properties:
        ids:
          description: List of non-employee ids.
          example:
          - 2b838de9-db9b-abcf-e646-d4f274ad4238
          - 2d838de9-db9b-abcf-e646-d4f274ad4238
          items:
            format: uuid
            type: string
          type: array
      required:
      - ids
      type: object
    importNonEmployeeRecordsInBulk_request:
      properties:
        data:
          format: binary
          type: string
      required:
      - data
      type: object
    createSavedSearch_request:
      allOf:
      - $ref: '#/components/schemas/SavedSearchName'
      - $ref: '#/components/schemas/SavedSearchDetail'
    createScheduledSearch_request:
      allOf:
      - $ref: '#/components/schemas/ScheduledSearchName'
      - $ref: '#/components/schemas/SearchSchedule'
    putPasswordDictionary_request:
      properties:
        file:
          format: binary
          type: string
      type: object
    deleteSource_202_response:
      example:
        name: name
        id: 2c91808779ecf55b0179f720942f181a
        type: TASK_RESULT
      properties:
        type:
          description: Type of object being referenced.
          enum:
          - TASK_RESULT
          example: TASK_RESULT
          type: string
        id:
          description: Task result ID.
          example: 2c91808779ecf55b0179f720942f181a
          type: string
        name:
          description: Task result's human-readable display name (this should be null/empty).
          type: string
          example: null
      type: object
    createWorkflow_request:
      allOf:
      - required:
        - name
        type: object
      - $ref: '#/components/schemas/WorkflowBody'
    testWorkflow_request:
      properties:
        input:
          description: The test input for the workflow.
          type: object
      required:
      - input
      type: object
    testWorkflow_200_response:
      example:
        workflowExecutionId: 0e11cefa-96e7-4b67-90d0-065bc1da5753
      properties:
        workflowExecutionId:
          description: The workflow execution id
          example: 0e11cefa-96e7-4b67-90d0-065bc1da5753
          type: string
      type: object
    listCompleteWorkflowLibrary_200_response_inner:
      anyOf:
      - $ref: '#/components/schemas/WorkflowLibraryAction'
      - $ref: '#/components/schemas/WorkflowLibraryTrigger'
      - $ref: '#/components/schemas/WorkflowLibraryOperator'
    createExternalExecuteWorkflow_request:
      properties:
        input:
          description: The input for the workflow
          example:
            customAttribute1: value1
            customAttribute2: value2
          type: object
      type: object
    createExternalExecuteWorkflow_200_response:
      example:
        workflowExecutionId: 0e11cefa-96e7-4b67-90d0-065bc1da5753
        message: Workflow was not executed externally. Check enabled flag on workflow
          definition
      properties:
        workflowExecutionId:
          description: The workflow execution id
          example: 0e11cefa-96e7-4b67-90d0-065bc1da5753
          type: string
        message:
          description: An error message if any errors occurred
          example: Workflow was not executed externally. Check enabled flag on workflow
            definition
          type: string
      type: object
    testExternalExecuteWorkflow_request:
      properties:
        input:
          description: The test input for the workflow
          example:
            test: hello world
          type: object
      type: object
    testExternalExecuteWorkflow_200_response:
      example:
        payload:
          test: hello world
      properties:
        payload:
          description: The input that was received
          example:
            test: hello world
          type: object
      type: object
    getDiscoveredApplications_200_response_inner:
      oneOf:
      - $ref: '#/components/schemas/SlimDiscoveredApplications'
      - $ref: '#/components/schemas/FullDiscoveredApplications'
    getVendorConnectorMappings_405_response:
      example:
        errorName: NotSupportedException
        errorMessage: Cannot consume content type
        trackingId: e7eab60924f64aa284175b9fa3309599
      properties:
        errorName:
          description: A message describing the error
          example: NotSupportedException
          type: object
        errorMessage:
          description: Description of the error
          example: Cannot consume content type
          type: object
        trackingId:
          description: Unique tracking id for the error.
          example: e7eab60924f64aa284175b9fa3309599
          type: string
      type: object
    deleteVendorConnectorMapping_200_response:
      example:
        count: 1
      properties:
        count:
          description: The number of vendor connector mappings successfully deleted.
          example: 1
          type: integer
      type: object
    AccessProfileDocument_allOf_source:
      description: Access profile's source.
      properties:
        id:
          description: Source's ID.
          example: ff8081815757d4fb0157588f3d9d008f
          type: string
        name:
          description: Source's name.
          example: Employees
          type: string
      type: object
    Account_allOf_recommendation:
      allOf:
      - $ref: '#/components/schemas/Recommendation'
      - description: Indicates that the account is currently classified to be one
          type but is recommended to be a different one
        example:
          type: MACHINE
          method: DISCOVERY
        nullable: true
        type: object
      example:
        method: DISCOVERY
        type: MACHINE
    Account_allOf_identity:
      description: The identity this account is correlated to
      example:
        name: John Doe
        id: 2c918084660f45d6016617daa9210584
        type: IDENTITY
      properties:
        id:
          description: The ID of the identity
          example: 2c918084660f45d6016617daa9210584
          type: string
        type:
          description: The type of object being referenced
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        name:
          description: display name of identity
          example: John Doe
          type: string
      type: object
    Account_allOf_sourceOwner:
      description: The owner of the source this account belongs to.
      example:
        name: Adam Kennedy
        id: 2c918084660f45d6016617daa9210584
        type: IDENTITY
      nullable: true
      properties:
        id:
          description: The ID of the identity
          example: 2c918084660f45d6016617daa9210584
          type: string
        type:
          description: The type of object being referenced
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        name:
          description: display name of identity
          example: Adam Kennedy
          type: string
      type: object
    Account_allOf_ownerIdentity:
      allOf:
      - $ref: '#/components/schemas/BaseReferenceDto'
      - description: "The identity who owns this account, used only for machine accounts"
        example:
          id: 2c918084660f45d6016617daa9210584
          type: IDENTITY
          name: Adam Kennedy
        nullable: true
        type: object
      example:
        name: William Wilson
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
    Campaign_allOf_filter:
      description: Determines which items will be included in this campaign. The default
        campaign filter is used if this field is left blank.
      example:
        name: Test Filter
        id: 0fbe863c063c4c88a35fd7f17e8a3df5
        type: CAMPAIGN_FILTER
      properties:
        id:
          description: The ID of whatever type of filter is being used.
          example: 0fbe863c063c4c88a35fd7f17e8a3df5
          type: string
        type:
          description: Type of the filter
          enum:
          - CAMPAIGN_FILTER
          - RULE
          example: CAMPAIGN_FILTER
          type: string
        name:
          description: Name of the filter
          example: Test Filter
          type: string
      type: object
    Campaign_allOf_sourceOwnerCampaignInfo:
      description: Must be set only if the campaign type is SOURCE_OWNER.
      example:
        sourceIds:
        - 0fbe863c063c4c88a35fd7f17e8a3df5
      properties:
        sourceIds:
          description: The list of sources to be included in the campaign.
          example:
          - 0fbe863c063c4c88a35fd7f17e8a3df5
          items:
            type: string
          type: array
      type: object
    Campaign_allOf_searchCampaignInfo_reviewer:
      description: "If specified, this identity or governance group will be the reviewer\
        \ for all certifications in this campaign. The allowed DTO types are IDENTITY\
        \ and GOVERNANCE_GROUP."
      example:
        name: William Wilson
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          description: The reviewer's DTO type.
          enum:
          - GOVERNANCE_GROUP
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: The reviewer's ID.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: The reviewer's name.
          example: William Wilson
          type: string
      type: object
    Campaign_allOf_searchCampaignInfo:
      description: Must be set only if the campaign type is SEARCH.
      example:
        identityIds:
        - 0fbe863c063c4c88a35fd7f17e8a3df5
        query: Search Campaign query description
        description: Search Campaign description
        reviewer:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        type: ACCESS
        accessConstraints:
        - ids:
          - 2c90ad2a70ace7d50170acf22ca90010
          type: ENTITLEMENT
          operator: SELECTED
        - ids:
          - 2c90ad2a70ace7d50170acf22ca90010
          type: ENTITLEMENT
          operator: SELECTED
        - ids:
          - 2c90ad2a70ace7d50170acf22ca90010
          type: ENTITLEMENT
          operator: SELECTED
        - ids:
          - 2c90ad2a70ace7d50170acf22ca90010
          type: ENTITLEMENT
          operator: SELECTED
        - ids:
          - 2c90ad2a70ace7d50170acf22ca90010
          type: ENTITLEMENT
          operator: SELECTED
      properties:
        type:
          description: The type of search campaign represented.
          enum:
          - IDENTITY
          - ACCESS
          example: ACCESS
          type: string
        description:
          description: "Describes this search campaign. Intended for storing the query\
            \ used, and possibly the number of identities selected/available."
          example: Search Campaign description
          type: string
        reviewer:
          $ref: '#/components/schemas/Campaign_allOf_searchCampaignInfo_reviewer'
        query:
          description: The scope for the campaign. The campaign will cover identities
            returned by the query and identities that have access items returned by
            the query. One of `query` or `identityIds` must be set.
          example: Search Campaign query description
          type: string
        identityIds:
          description: A direct list of identities to include in this campaign. One
            of `identityIds` or `query` must be set.
          example:
          - 0fbe863c063c4c88a35fd7f17e8a3df5
          items:
            type: string
          maxItems: 1000
          type: array
        accessConstraints:
          description: Further reduces the scope of the campaign by excluding identities
            (from `query` or `identityIds`) that do not have this access.
          items:
            $ref: '#/components/schemas/AccessConstraint'
          maxItems: 1000
          type: array
      required:
      - type
      type: object
    Campaign_allOf_roleCompositionCampaignInfo_remediatorRef:
      description: "This determines who remediation tasks will be assigned to. Remediation\
        \ tasks are created for each revoke decision on items in the campaign. The\
        \ only legal remediator type is 'IDENTITY', and the chosen identity must be\
        \ a Role Admin or Org Admin."
      example:
        name: Role Admin
        id: 2c90ad2a70ace7d50170acf22ca90010
        type: IDENTITY
      properties:
        type:
          description: Legal Remediator Type
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: The ID of the remediator.
          example: 2c90ad2a70ace7d50170acf22ca90010
          type: string
        name:
          description: The name of the remediator.
          example: Role Admin
          readOnly: true
          type: string
      required:
      - id
      - type
      type: object
    Campaign_allOf_roleCompositionCampaignInfo:
      description: Optional configuration options for role composition campaigns.
      example:
        remediatorRef:
          name: Role Admin
          id: 2c90ad2a70ace7d50170acf22ca90010
          type: IDENTITY
        roleIds:
        - 2c90ad2a70ace7d50170acf22ca90010
        query: Search Query
        description: Role Composition Description
        reviewer:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
      properties:
        reviewer:
          $ref: '#/components/schemas/Campaign_allOf_searchCampaignInfo_reviewer'
        roleIds:
          description: "Optional list of roles to include in this campaign. Only one\
            \ of `roleIds` and `query` may be set; if neither are set, all roles are\
            \ included."
          example:
          - 2c90ad2a70ace7d50170acf22ca90010
          items:
            type: string
          type: array
        remediatorRef:
          $ref: '#/components/schemas/Campaign_allOf_roleCompositionCampaignInfo_remediatorRef'
        query:
          description: "Optional search query to scope this campaign to a set of roles.\
            \ Only one of `roleIds` and `query` may be set; if neither are set, all\
            \ roles are included."
          example: Search Query
          type: string
        description:
          description: "Describes this role composition campaign. Intended for storing\
            \ the query used, and possibly the number of roles selected/available."
          example: Role Composition Description
          type: string
      required:
      - remediatorRef
      type: object
    Campaign_allOf_machineAccountCampaignInfo:
      description: Must be set only if the campaign type is MACHINE_ACCOUNT.
      example:
        reviewerType: ACCOUNT_OWNER
        sourceIds:
        - 0fbe863c063c4c88a35fd7f17e8a3df5
      properties:
        sourceIds:
          description: The list of sources to be included in the campaign.
          example:
          - 0fbe863c063c4c88a35fd7f17e8a3df5
          items:
            type: string
          type: array
        reviewerType:
          description: The reviewer's type.
          enum:
          - ACCOUNT_OWNER
          example: ACCOUNT_OWNER
          type: string
      type: object
    Campaign_allOf_sourcesWithOrphanEntitlements:
      example:
        name: Source with orphan entitlements
        id: 2c90ad2a70ace7d50170acf22ca90010
        type: SOURCE
      properties:
        id:
          description: Id of the source
          example: 2c90ad2a70ace7d50170acf22ca90010
          type: string
        type:
          description: Type
          enum:
          - SOURCE
          example: SOURCE
          type: string
        name:
          description: Name of the source
          example: Source with orphan entitlements
          type: string
      type: object
    EntitlementDocument_allOf_source:
      description: Entitlement's source.
      properties:
        id:
          description: ID of entitlement's source.
          example: 2c91808b6e9e6fb8016eec1a2b6f7b5f
          type: string
        name:
          description: Display name of entitlement's source.
          example: ODS-HR-Employees
          type: string
        type:
          description: Type of object.
          example: SOURCE
          type: string
      type: object
    EntitlementDocument_allOf_manuallyUpdatedFields:
      description: Indicates whether the entitlement's display name and/or description
        have been manually updated.
      nullable: true
      properties:
        DESCRIPTION:
          default: false
          example: false
          type: boolean
        DISPLAY_NAME:
          default: false
          example: false
          type: boolean
      type: object
    EntitlementDocument_allOf_permissions:
      properties:
        target:
          description: The target the permission would grants rights on.
          example: SYS.GV_$TRANSACTION
          type: string
        rights:
          description: All the rights (e.g. actions) that this permission allows on
            the target
          items:
            example: SELECT
            type: string
          type: array
      type: object
    Event_actor:
      properties:
        name:
          description: Name of the actor that generated the event.
          example: System
          type: string
      type: object
    Event_target:
      properties:
        name:
          description: "Name of the target, or recipient, of the event."
          example: Carol.Adams
          type: string
      type: object
    IdentityDocument_allOf_manager:
      description: Identity's manager.
      nullable: true
      properties:
        id:
          description: ID of identity's manager.
          example: 2c9180867dfe694b017e208e27c05799
          type: string
        name:
          description: Name of identity's manager.
          example: Amanda.Ross
          type: string
        displayName:
          description: Display name of identity's manager.
          example: Amanda.Ross
          type: string
      type: object
    IdentityDocument_allOf_identityProfile:
      description: Identity's identity profile.
      properties:
        id:
          description: Identity profile's ID.
          example: 3bc8ad26b8664945866b31339d1ff7d2
          type: string
        name:
          description: Identity profile's name.
          example: HR Employees
          type: string
      type: object
    IdentityDocument_allOf_source:
      description: Identity's source.
      properties:
        id:
          description: ID of identity's source.
          example: 2c91808b6e9e6fb8016eec1a2b6f7b5f
          type: string
        name:
          description: Display name of identity's source.
          example: ODS-HR-Employees
          type: string
      type: object
    IdentityProfile_allOf_owner:
      description: Identity profile's owner.
      example:
        name: William Wilson
        id: 2c9180835d191a86015d28455b4b232a
        type: IDENTITY
      nullable: true
      properties:
        type:
          description: Owner's object type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Owner's ID.
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Owner's name.
          example: William Wilson
          type: string
      type: object
    IdentityProfile_allOf_authoritativeSource:
      example:
        name: HR Active Directory
        id: 2c9180835d191a86015d28455b4b232a
        type: SOURCE
      properties:
        type:
          description: Authoritative source's object type.
          enum:
          - SOURCE
          example: SOURCE
          type: string
        id:
          description: Authoritative source's ID.
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Authoritative source's name.
          example: HR Active Directory
          type: string
      type: object
    ProvisioningConfig_planInitializerScript:
      description: This is a reference to a plan initializer script.
      example:
        source: |
          <?xml version='1.0' encoding='UTF-8'?>\r\n<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">\r\n<Rule name=\"Example Rule\" type=\"BeforeProvisioning\">\r\n  <Description>Before Provisioning Rule which changes disables and enables to a modify.</Description>\r\n  <Source><![CDATA[\r\nimport sailpoint.object.*;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest.Operation;\r\nimport sailpoint.object.ProvisioningPlan.AttributeRequest;\r\nimport sailpoint.object.ProvisioningPlan;\r\nimport sailpoint.object.ProvisioningPlan.Operation;\r\n\r\nfor ( AccountRequest accountRequest : plan.getAccountRequests() ) {\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Disable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Enable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n}\r\n\r\n  ]]></Source>
      nullable: true
      properties:
        source:
          description: This is a Rule that allows provisioning instruction changes.
          example: |
            <?xml version='1.0' encoding='UTF-8'?>\r\n<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">\r\n<Rule name=\"Example Rule\" type=\"BeforeProvisioning\">\r\n  <Description>Before Provisioning Rule which changes disables and enables to a modify.</Description>\r\n  <Source><![CDATA[\r\nimport sailpoint.object.*;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest.Operation;\r\nimport sailpoint.object.ProvisioningPlan.AttributeRequest;\r\nimport sailpoint.object.ProvisioningPlan;\r\nimport sailpoint.object.ProvisioningPlan.Operation;\r\n\r\nfor ( AccountRequest accountRequest : plan.getAccountRequests() ) {\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Disable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Enable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n}\r\n\r\n  ]]></Source>
          type: string
      type: object
    RoleDocument_allOf_entitlements:
      allOf:
      - $ref: '#/components/schemas/BaseEntitlement'
      - properties:
          sourceSchemaObjectType:
            description: Schema objectType.
            example: group
            type: string
          hash:
            description: Read-only calculated hash value of an entitlement.
            example: c6fab95235584cca98a454a2f51e5683bc77d6a0
            type: string
        type: object
    RoleDocument_allOf_dimensionSchemaAttributes:
      properties:
        derived:
          default: true
          example: true
          type: boolean
        displayName:
          description: Displayname of the dimension attribute.
          example: Department
          type: string
        name:
          description: Name of the dimension attribute.
          example: department
          type: string
      type: object
    RoleDocument_allOf_entitlements_1:
      allOf:
      - $ref: '#/components/schemas/BaseEntitlement'
      - properties:
          sourceSchemaObjectType:
            description: Schema objectType.
            example: group
            type: string
          hash:
            description: Read-only calculated hash value of an entitlement.
            example: c6fab95235584cca98a454a2f51e5683bc77d6a0
            type: string
        type: object
    RoleDocument_allOf_dimensions:
      properties:
        id:
          description: Unique ID of the dimension.
          example: b3c28992ba964a40a7598978139d1ced
          type: string
        name:
          description: Name of the dimension.
          example: Manager Austin Branch
          type: string
        description:
          description: Description of the dimension.
          example: Managers located at the Austin branch
          nullable: true
          type: string
        entitlements:
          description: Entitlements included with the role.
          items:
            $ref: '#/components/schemas/RoleDocument_allOf_entitlements_1'
          nullable: true
          type: array
        accessProfiles:
          description: Access profiles included in the dimension.
          items:
            $ref: '#/components/schemas/BaseAccessProfile'
          nullable: true
          type: array
      type: object
    Schedule_months:
      description: |
        Specifies which months of a schedule are active. Only valid for ANNUALLY schedule types. Examples:

        On February and March:
        * type LIST
        * values "2", "3"

        Every 3 months, starting in January (quarterly):
        * type LIST
        * values "1"
        * interval 3

        Every two months between July and December:
        * type RANGE
        * values "7", "12"
        * interval 2
      example:
        values:
        - "1"
        interval: 2
        type: LIST
      nullable: true
      properties:
        type:
          description: Enum type to specify months value
          enum:
          - LIST
          - RANGE
          example: LIST
          type: string
        values:
          description: Values of the months based on the enum type mentioned above
          example:
          - "1"
          items:
            type: string
          type: array
        interval:
          description: Interval between the cert generations
          example: 2
          format: int64
          type: integer
      required:
      - type
      - values
      type: object
    Schedule_days:
      description: |
        Specifies which day(s) a schedule is active for. This is required for all schedule types.
        The "values" field holds different data depending on the type of schedule:
        * WEEKLY: days of the week (1-7)
        * MONTHLY: days of the month (1-31, L, L-1...)
        * ANNUALLY: if the "months" field is also set: days of the month (1-31, L, L-1...); otherwise: ISO-8601 dates without year ("--12-31")
        * CALENDAR: ISO-8601 dates ("2020-12-31")

        Note that CALENDAR only supports the LIST type, and ANNUALLY does not support the RANGE type when provided
        with ISO-8601 dates without year.

        Examples:

        On Sundays:
        * type LIST
        * values "1"

        The second to last day of the month:
        * type LIST
        * values "L-1"

        From the 20th to the last day of the month:
        * type RANGE
        * values "20", "L"

        Every March 2nd:
        * type LIST
        * values "--03-02"

        On March 2nd, 2021:
        * type: LIST
        * values "2021-03-02"
      example:
        values:
        - "1"
        interval: 2
        type: LIST
      properties:
        type:
          description: Enum type to specify days value
          enum:
          - LIST
          - RANGE
          example: LIST
          type: string
        values:
          description: Values of the days based on the enum type mentioned above
          example:
          - "1"
          items:
            type: string
          type: array
        interval:
          description: Interval between the cert generations
          example: 2
          format: int64
          nullable: true
          type: integer
      required:
      - type
      - values
      type: object
    Schedule_hours:
      description: |
        Specifies which hour(s) a schedule is active for. Examples:

        Every three hours starting from 8AM, inclusive:
        * type LIST
        * values "8"
        * interval 3

        During business hours:
        * type RANGE
        * values "9", "5"

        At 5AM, noon, and 5PM:
        * type LIST
        * values "5", "12", "17"
      example:
        values:
        - "1"
        interval: 2
        type: LIST
      properties:
        type:
          description: Enum type to specify hours value
          enum:
          - LIST
          - RANGE
          example: LIST
          type: string
        values:
          description: Values of the days based on the enum type mentioned above
          example:
          - "1"
          items:
            type: string
          type: array
        interval:
          description: Interval between the cert generations
          example: 2
          format: int64
          nullable: true
          type: integer
      required:
      - type
      - values
      type: object
    ScheduledSearch_allOf_owner:
      description: The owner of the scheduled search
      example:
        id: 2c9180867624cbd7017642d8c8c81f67
        type: IDENTITY
      properties:
        type:
          description: The type of object being referenced
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: The ID of the referenced object
          example: 2c9180867624cbd7017642d8c8c81f67
          type: string
      readOnly: true
      required:
      - id
      - type
      type: object
    Source_owner:
      description: Reference to identity object who owns the source.
      example:
        name: MyName
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          description: Type of object being referenced.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Owner identity's ID.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Owner identity's human-readable display name.
          example: MyName
          type: string
      type: object
    Source_cluster:
      description: Reference to the source's associated cluster.
      example:
        name: Corporate Cluster
        id: 2c9180866166b5b0016167c32ef31a66
        type: CLUSTER
      nullable: true
      properties:
        type:
          description: Type of object being referenced.
          enum:
          - CLUSTER
          example: CLUSTER
          type: string
        id:
          description: Cluster ID.
          example: 2c9180866166b5b0016167c32ef31a66
          type: string
        name:
          description: Cluster's human-readable display name.
          example: Corporate Cluster
          type: string
      required:
      - id
      - name
      - type
      type: object
    Source_accountCorrelationConfig:
      description: Reference to account correlation config object.
      example:
        name: "Directory [source-62867] Account Correlation"
        id: 2c9180855d191c59015d28583727245a
        type: ACCOUNT_CORRELATION_CONFIG
      nullable: true
      properties:
        type:
          description: Type of object being referenced.
          enum:
          - ACCOUNT_CORRELATION_CONFIG
          example: ACCOUNT_CORRELATION_CONFIG
          type: string
        id:
          description: Account correlation config ID.
          example: 2c9180855d191c59015d28583727245a
          type: string
        name:
          description: Account correlation config's human-readable display name.
          example: "Directory [source-62867] Account Correlation"
          type: string
      type: object
    Source_accountCorrelationRule:
      description: Reference to a rule that can do COMPLEX correlation. Only use this
        rule when you can't use accountCorrelationConfig.
      example:
        name: Example Rule
        id: 2c918085708c274401708c2a8a760001
        type: RULE
      nullable: true
      properties:
        type:
          description: Type of object being referenced.
          enum:
          - RULE
          example: RULE
          type: string
        id:
          description: Rule ID.
          example: 2c918085708c274401708c2a8a760001
          type: string
        name:
          description: Rule's human-readable display name.
          example: Example Rule
          type: string
      type: object
    Source_managerCorrelationMapping:
      allOf:
      - $ref: '#/components/schemas/ManagerCorrelationMapping'
      - description: |
          Filter object used during manager correlation to match incoming manager values to an existing manager's
          account/identity.
        nullable: true
        type: object
      example:
        accountAttributeName: manager
        identityAttributeName: manager
    Source_managerCorrelationRule:
      description: Reference to the ManagerCorrelationRule. Only use this rule when
        a simple filter isn't sufficient.
      example:
        name: Example Rule
        id: 2c918085708c274401708c2a8a760001
        type: RULE
      nullable: true
      properties:
        type:
          description: Type of object being referenced.
          enum:
          - RULE
          example: RULE
          type: string
        id:
          description: Rule ID.
          example: 2c918085708c274401708c2a8a760001
          type: string
        name:
          description: Rule's human-readable display name.
          example: Example Rule
          type: string
      type: object
    Source_beforeProvisioningRule:
      description: 'Rule that runs on the CCG and allows for customization of provisioning
        plans before the API calls the connector. '
      example:
        name: Example Rule
        id: 2c918085708c274401708c2a8a760001
        type: RULE
      nullable: true
      properties:
        type:
          description: Type of object being referenced.
          enum:
          - RULE
          example: RULE
          type: string
        id:
          description: Rule ID.
          example: 2c918085708c274401708c2a8a760001
          type: string
        name:
          description: Rule's human-readable display name.
          example: Example Rule
          type: string
      type: object
    Source_schemas_inner:
      properties:
        type:
          description: Type of object being referenced.
          enum:
          - CONNECTOR_SCHEMA
          example: CONNECTOR_SCHEMA
          type: string
        id:
          description: Schema ID.
          example: 2c91808568c529c60168cca6f90c1777
          type: string
        name:
          description: Schema's human-readable display name.
          example: MySchema
          type: string
      type: object
    Source_passwordPolicies_inner:
      properties:
        type:
          description: Type of object being referenced.
          enum:
          - PASSWORD_POLICY
          example: PASSWORD_POLICY
          type: string
        id:
          description: Policy ID.
          example: 2c91808568c529c60168cca6f90c1777
          type: string
        name:
          description: Policy's human-readable display name.
          example: My Password Policy
          type: string
      type: object
    Source_managementWorkgroup:
      description: Reference to management workgroup for the source.
      example:
        name: My Management Workgroup
        id: 2c91808568c529c60168cca6f90c2222
        type: GOVERNANCE_GROUP
      nullable: true
      properties:
        type:
          description: Type of object being referenced.
          enum:
          - GOVERNANCE_GROUP
          example: GOVERNANCE_GROUP
          type: string
        id:
          description: Management workgroup ID.
          example: 2c91808568c529c60168cca6f90c2222
          type: string
        name:
          description: Management workgroup's human-readable display name.
          example: My Management Workgroup
          type: string
      type: object
    WorkItems_form:
      allOf:
      - $ref: '#/components/schemas/FormDetails'
      - nullable: true
        type: object
      example:
        subtitle: Please select from the following
        name: AccountSelection Form
        id: 2c9180835d2e5168015d32f890ca1581
        title: Account Selection for John.Doe
        targetUser: Jane.Doe
        sections:
        - formItems: []
          name: Field1
          label: Section 1
        - formItems: []
          name: Field1
          label: Section 1
    array_inner:
      anyOf:
      - type: string
      - type: integer
      - type: object
      example:
      - "001"
      - "002"
      - "003"
    JsonPatchOperation_value:
      description: "The value to be used for the operation, required for \"add\" and\
        \ \"replace\" operations"
      example: New description
      oneOf:
      - example: New description
        title: string
        type: string
      - example: true
        title: boolean
        type: boolean
      - example: 300
        title: integer
        type: integer
      - example:
          attributes:
            name: philip
        title: object
        type: object
      - items:
          $ref: '#/components/schemas/array_inner'
        title: array
        type: array
    Entitlement_owner:
      description: The identity that owns the entitlement
      example:
        name: john.doe
        id: 2c9180827ca885d7017ca8ce28a000eb
        type: IDENTITY
      nullable: true
      properties:
        id:
          description: The identity ID
          example: 2c9180827ca885d7017ca8ce28a000eb
          type: string
        type:
          description: The type of object
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        name:
          description: The display name of the identity
          example: john.doe
          type: string
      type: object
    Entitlement_accessModelMetadata:
      description: Additional data to classify the entitlement
      example:
        attributes:
        - multiselect: true
          values:
          - name: Development
            value: development
            status: active
          - name: Development
            value: development
            status: active
          name: CSP
          description: Indicates the type of deployment environment of an access item.
          type: governance
          objectTypes:
          - general
          - general
          key: iscCsp
          status: active
        - multiselect: true
          values:
          - name: Development
            value: development
            status: active
          - name: Development
            value: development
            status: active
          name: CSP
          description: Indicates the type of deployment environment of an access item.
          type: governance
          objectTypes:
          - general
          - general
          key: iscCsp
          status: active
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/AccessModelMetadata'
          type: array
      type: object
    Entitlement_source:
      example:
        name: ODS-AD-Source
        id: 2c9180827ca885d7017ca8ce28a000eb
        type: SOURCE
      properties:
        id:
          description: The source ID
          example: 2c9180827ca885d7017ca8ce28a000eb
          type: string
        type:
          description: "The source type, will always be \"SOURCE\""
          example: SOURCE
          type: string
        name:
          description: The source name
          example: ODS-AD-Source
          type: string
      type: object
    RequestedItemStatus_cancelledRequestDetails:
      allOf:
      - $ref: '#/components/schemas/CancelledRequestDetails'
      - nullable: true
        type: object
      example:
        owner:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        modified: 2019-12-20T09:17:12.192Z
        comment: This request must be cancelled.
    RequestedItemStatus_requestedFor:
      description: Identity access was requested for.
      example:
        name: William Wilson
        id: 2c9180835d191a86015d28455b4b232a
        type: IDENTITY
      properties:
        type:
          description: Type of the object to which this reference applies
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of the object to which this reference applies
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: William Wilson
          type: string
      type: object
    RequestedItemStatus_requesterComment:
      allOf:
      - $ref: '#/components/schemas/CommentDto'
      - description: The requester's comment.
        nullable: true
        type: object
      example:
        created: 2017-07-11T18:45:37.098Z
        author:
          name: john.doe
          id: 2c9180847e25f377017e2ae8cae4650b
          type: IDENTITY
        comment: This is a comment.
    RequestedItemStatus_sodViolationContext:
      allOf:
      - $ref: '#/components/schemas/SodViolationContextCheckCompleted'
      - description: The details of the SOD violations for the associated approval.
        nullable: true
        type: object
      example:
        violationCheckResult:
          clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          violationContexts:
          - conflictingAccessCriteria:
              leftCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
              rightCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
            policy:
              name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
          - conflictingAccessCriteria:
              leftCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
              rightCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
            policy:
              name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
          violatedPolicies:
          - name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
          - name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
          message:
            localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
        state: SUCCESS
        uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
    RequestedItemStatus_provisioningDetails:
      allOf:
      - $ref: '#/components/schemas/ProvisioningDetails'
      - nullable: true
        type: object
      example:
        orderedSubPhaseReferences: manualWorkItemDetails
    RequestedItemStatus_preApprovalTriggerDetails:
      allOf:
      - $ref: '#/components/schemas/PreApprovalTriggerDetails'
      - nullable: true
        type: object
      example:
        decision: APPROVED
        comment: Access is Approved
        reviewer: John Doe
    PendingApproval_owner:
      description: Access item owner's identity.
      example:
        name: Support
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      properties:
        type:
          description: Access item owner's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Access item owner's identity ID.
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Access item owner's human-readable display name.
          example: Support
          type: string
      type: object
    CompletedApproval_requesterComment:
      allOf:
      - $ref: '#/components/schemas/CommentDto'
      - description: The requester's comment.
        type: object
      example:
        created: 2017-07-11T18:45:37.098Z
        author:
          name: john.doe
          id: 2c9180847e25f377017e2ae8cae4650b
          type: IDENTITY
        comment: This is a comment.
    CompletedApproval_reviewerComment:
      allOf:
      - $ref: '#/components/schemas/CommentDto'
      - description: The approval's reviewer's comment.
        nullable: true
        type: object
      example:
        created: 2017-07-11T18:45:37.098Z
        author:
          name: john.doe
          id: 2c9180847e25f377017e2ae8cae4650b
          type: IDENTITY
        comment: This is a comment.
    CompletedApproval_preApprovalTriggerResult:
      description: "If the access request submitted event trigger is configured and\
        \ this access request was intercepted by it, then this is the result of the\
        \ trigger's decision to either approve or deny the request."
      example:
        date: 2022-06-07T19:18:40.748Z
        decision: APPROVED
        comment: This request was autoapproved by our automated ETS subscriber
        reviewer: Automated AR Approval
      nullable: true
      properties:
        comment:
          description: The comment from the trigger
          example: This request was autoapproved by our automated ETS subscriber
          type: string
        decision:
          $ref: '#/components/schemas/CompletedApprovalState'
        reviewer:
          description: The name of the approver
          example: Automated AR Approval
          type: string
        date:
          description: The date and time the trigger decided on the request
          example: 2022-06-07T19:18:40.748Z
          format: date-time
          type: string
      type: object
    CommentDto_author:
      description: Author of the comment
      example:
        name: john.doe
        id: 2c9180847e25f377017e2ae8cae4650b
        type: IDENTITY
      properties:
        type:
          description: The type of object
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: The unique ID of the object
          example: 2c9180847e25f377017e2ae8cae4650b
          type: string
        name:
          description: The display name of the object
          example: john.doe
          type: string
      readOnly: true
      type: object
    AccountAttributesCreate_attributes:
      additionalProperties:
        type: string
      description: The schema attribute values for the account
      example:
        sourceId: 34bfcbe116c9407464af37acbaf7a4dc
        city: Austin
        displayName: John Doe
        userName: jdoe
        sAMAccountName: jDoe
        mail: john.doe@sailpoint.com
      properties:
        sourceId:
          description: Target source to create an account
          example: 34bfcbe116c9407464af37acbaf7a4dc
          type: string
      required:
      - sourceId
      type: object
    ServiceProviderConfiguration_federationProtocolDetails_inner:
      anyOf:
      - $ref: '#/components/schemas/IdpDetails'
      - $ref: '#/components/schemas/SpDetails'
    AdminReviewReassign_reassignTo:
      example:
        id: ef38f94347e94562b5bb8424a56397d8
        type: IDENTITY
      properties:
        id:
          description: The identity ID to which the review is being assigned.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        type:
          description: The type of the ID provided.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
      type: object
    CampaignFilterDetails_criteriaList_inner:
      properties:
        type:
          $ref: '#/components/schemas/CriteriaType'
        operation:
          $ref: '#/components/schemas/Operation'
        property:
          description: Specified key from the type of criteria.
          example: displayName
          nullable: true
          type: string
        value:
          description: Value for the specified key from the type of criteria.
          example: Allie
          nullable: true
          type: string
        negateResult:
          default: false
          description: "If true, the filter will negate the result of the criteria."
          example: false
          type: boolean
        shortCircuit:
          default: false
          description: "If true, the filter will short circuit the evaluation of the\
            \ criteria."
          example: false
          type: boolean
        recordChildMatches:
          default: false
          description: "If true, the filter will record child matches for the criteria."
          example: false
          type: boolean
        id:
          description: The unique ID of the criteria.
          example: 5ec18cef39020d6fd7a60ad3970aba61
          nullable: true
          type: string
        suppressMatchedItems:
          default: false
          description: "If this value is true, then matched items will not only be\
            \ excluded from the campaign, they will also not have archived certification\
            \ items created. \nSuch items will not appear in the exclusion report.\n"
          example: false
          type: boolean
        children:
          description: List of child criteria.
          items:
            type: object
          type: array
      required:
      - property
      - type
      - value
      type: object
    CampaignTemplate_ownerRef:
      description: "The owner of this template, and the owner of campaigns generated\
        \ from this template via a schedule. This field is automatically populated\
        \ at creation time with the current user."
      example:
        name: Mister Manager
        id: 2c918086676d3e0601677611dbde220f
        type: IDENTITY
        email: mr.manager@example.com
      properties:
        id:
          description: Id of the owner
          example: 2c918086676d3e0601677611dbde220f
          type: string
        type:
          description: Type of the owner
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        name:
          description: Name of the owner
          example: Mister Manager
          type: string
        email:
          description: Email of the owner
          example: mr.manager@example.com
          type: string
      readOnly: true
      type: object
    AccessSummary_access:
      example:
        name: Entitlement for Company Database
        id: 2c9180867160846801719932c5153fb7
        type: IDENTITY
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: The ID of the item being certified
          example: 2c9180867160846801719932c5153fb7
          type: string
        name:
          description: The name of the item being certified
          example: Entitlement for Company Database
          type: string
      type: object
    IdentityProfileExportedObject_self:
      description: Self block for exported object.
      example:
        name: HR Active Directory
        id: 2c9180835d191a86015d28455b4b232a
        type: SOURCE
      properties:
        type:
          description: Exported object's DTO type.
          enum:
          - ACCESS_PROFILE
          - ACCESS_REQUEST_CONFIG
          - ATTR_SYNC_SOURCE_CONFIG
          - AUTH_ORG
          - CAMPAIGN_FILTER
          - FORM_DEFINITION
          - GOVERNANCE_GROUP
          - IDENTITY_OBJECT_CONFIG
          - IDENTITY_PROFILE
          - LIFECYCLE_STATE
          - NOTIFICATION_TEMPLATE
          - PASSWORD_POLICY
          - PASSWORD_SYNC_GROUP
          - PUBLIC_IDENTITIES_CONFIG
          - ROLE
          - RULE
          - SEGMENT
          - SERVICE_DESK_INTEGRATION
          - SOD_POLICY
          - SOURCE
          - TAG
          - TRANSFORM
          - TRIGGER_SUBSCRIPTION
          - WORKFLOW
          example: SOURCE
          type: string
        id:
          description: Exported object's ID.
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Exported object's display name.
          example: HR Active Directory
          type: string
      type: object
    IdentityPreviewResponse_identity:
      description: Identity's basic details.
      example:
        name: Michael Michaels
        id: 2c7180a46faadee4016fb4e018c20642
        type: IDENTITY
      properties:
        type:
          description: Identity's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Identity ID.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Identity's display name.
          example: Michael Michaels
          type: string
      type: object
    PublicIdentity_attributes_inner:
      example:
        name: Country
        value: US
        key: country
      properties:
        key:
          description: The attribute key
          example: country
          type: string
        name:
          description: Human-readable display name of the attribute
          example: Country
          type: string
        value:
          description: The attribute value
          example: US
          nullable: true
          type: string
      type: object
    SavedSearchDetail_filters:
      allOf:
      - description: The filters to be applied for each filtered field name.
        example:
          attributes.cloudAuthoritativeSource:
            type: EXISTS
            exclude: true
          accessCount:
            type: RANGE
            range:
              lower:
                value: "3"
          created:
            type: RANGE
            range:
              lower:
                value: 2019-12-01
                inclusive: true
              upper:
                value: 2020-01-01
          source.name:
            type: TERMS
            terms:
            - HR Employees
            - Corporate Active Directory
            exclude: true
          protected:
            type: TERMS
            terms:
            - "true"
        type: object
      - $ref: '#/components/schemas/Filter'
      example:
        terms:
        - account_count
        - account_count
        range:
          lower:
            inclusive: false
            value: "1"
          upper:
            inclusive: false
            value: "1"
        exclude: false
        type: RANGE
      nullable: true
    SearchSchedule_recipients_inner:
      example:
        id: 2c9180867624cbd7017642d8c8c81f67
        type: IDENTITY
      properties:
        type:
          description: The type of object being referenced
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: The ID of the referenced object
          example: 2c9180867624cbd7017642d8c8c81f67
          type: string
      required:
      - id
      - type
      type: object
    Segment_visibilityCriteria:
      allOf:
      - $ref: '#/components/schemas/VisibilityCriteria'
      - nullable: true
        type: object
      example:
        expression:
          children: []
          attribute: location
          value:
            type: STRING
            value: Austin
          operator: EQUALS
    ReportDetails_arguments:
      anyOf:
      - $ref: '#/components/schemas/accounts-export-report-arguments'
      - $ref: '#/components/schemas/identities-details-report-arguments'
      - $ref: '#/components/schemas/identities-report-arguments'
      - $ref: '#/components/schemas/identity-profile-identity-error-report-arguments'
      - $ref: '#/components/schemas/orphan-identities-report-arguments'
      - $ref: '#/components/schemas/search-export-report-arguments'
      - $ref: '#/components/schemas/uncorrelated-accounts-report-arguments'
      description: The string-object map(dictionary) with the arguments needed for
        report processing.
      example:
        application: 2c9180897e7742b2017e781782f705b9
        sourceName: Active Directory
    TaskResultDetails_messages_inner:
      properties:
        type:
          description: Type of the message.
          enum:
          - INFO
          - WARN
          - ERROR
          example: WARN
          type: string
        error:
          default: false
          description: Flag whether message is an error.
          example: false
          type: boolean
        warning:
          default: false
          description: Flag whether message is a warning.
          example: true
          type: boolean
        key:
          description: Message string identifier.
          example: "The following account(s) failed to correlate: A,B,C"
          type: string
        localizedText:
          description: Message context with the locale based language.
          example: "The following account(s) failed to correlate: A,B,C"
          type: string
      type: object
    TaskResultDetails_returns_inner:
      properties:
        displayLabel:
          description: Attribute description.
          example: ' '
          type: string
        attributeName:
          description: System or database attribute name.
          example: ' '
          type: string
      type: object
    SodPolicyRead_allOf_conflictingAccessCriteria:
      allOf:
      - $ref: '#/components/schemas/ConflictingAccessCriteria'
      - nullable: true
        type: object
      example:
        leftCriteria:
          name: money-in
          criteriaList:
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a66
            name: Administrator
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a67
            name: Administrator
        rightCriteria:
          name: money-in
          criteriaList:
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a66
            name: Administrator
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a67
            name: Administrator
    SodPolicyRequest_allOf_conflictingAccessCriteria:
      allOf:
      - $ref: '#/components/schemas/ConflictingAccessCriteriaRequest'
      - nullable: true
        type: object
      example:
        leftCriteria:
          name: money-in
          criteriaList:
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a66
            name: Administrator
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a67
            name: Administrator
        rightCriteria:
          name: money-in
          criteriaList:
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a66
            name: Administrator
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a67
            name: Administrator
    IdentityWithNewAccess_accessRefs_inner:
      description: Entitlement including a specific set of access.
      properties:
        type:
          description: Entitlement's DTO type.
          enum:
          - ENTITLEMENT
          example: ENTITLEMENT
          type: string
        id:
          description: Entitlement's ID.
          example: 2c91809773dee32014e13e122092014e
          type: string
        name:
          description: Entitlement's display name.
          example: "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local"
          type: string
      type: object
    Workflow_allOf_creator:
      description: Workflow creator's identity.
      example:
        name: Michael Michaels
        id: 2c7180a46faadee4016fb4e018c20642
        type: IDENTITY
      properties:
        type:
          description: Workflow creator's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Workflow creator's identity ID.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Workflow creator's display name.
          example: Michael Michaels
          type: string
      type: object
    WorkflowBody_owner:
      description: The identity that owns the workflow.  The owner's permissions in
        IDN will determine what actions the workflow is allowed to perform.  Ownership
        can be changed by updating the owner in a PUT or PATCH request.
      example:
        name: William Wilson
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          description: The type of object that is referenced
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: The unique ID of the object
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: The name of the object
          example: William Wilson
          type: string
      type: object
    WorkflowLibraryAction_exampleOutput:
      oneOf:
      - description: Example output
        type: object
      - items:
          type: object
        type: array
    VendorConnectorMapping_updatedAt:
      description: An object representing the nullable timestamp of the last update.
      example:
        Valid: true
        Time: 2024-03-14T12:56:19.391294Z
      nullable: true
      properties:
        Time:
          description: "The timestamp when the mapping was last updated, represented\
            \ in ISO 8601 format."
          example: 2024-03-14T12:56:19.391294Z
          format: date-time
          type: string
        Valid:
          default: false
          description: A flag indicating if the 'Time' field is set and valid.
          example: true
          type: boolean
      type: object
    VendorConnectorMapping_updatedBy:
      description: An object representing the nullable identifier of the user who
        last updated the mapping.
      example:
        Valid: true
        String: user-67891
      nullable: true
      properties:
        String:
          description: "The identifier of the user who last updated the mapping, if\
            \ available."
          example: user-67891
          type: string
        Valid:
          default: false
          description: A flag indicating if the 'String' field is set and valid.
          example: true
          type: boolean
      type: object
    VendorConnectorMapping_deletedAt:
      description: An object representing the nullable timestamp of when the mapping
        was deleted.
      example:
        Valid: false
        Time: 0001-01-01T00:00:00Z
      nullable: true
      properties:
        Time:
          description: "The timestamp when the mapping was deleted, represented in\
            \ ISO 8601 format, if applicable."
          example: 0001-01-01T00:00:00Z
          format: date-time
          type: string
        Valid:
          default: false
          description: "A flag indicating if the 'Time' field is set and valid, i.e.,\
            \ if the mapping has been deleted."
          example: false
          type: boolean
      type: object
    VendorConnectorMapping_deletedBy:
      description: An object representing the nullable identifier of the user who
        deleted the mapping.
      example:
        Valid: false
        String: ""
      nullable: true
      properties:
        String:
          description: "The identifier of the user who deleted the mapping, if applicable."
          example: ""
          type: string
        Valid:
          default: false
          description: "A flag indicating if the 'String' field is set and valid,\
            \ i.e., if the mapping has been deleted."
          example: false
          type: boolean
      type: object
    AccessProfileUsage_usedBy_inner:
      description: Role using the access profile.
      example:
        name: Manager Role
        id: 2c8180857a9b3da0017aa03418480f9d
        type: ROLE
      properties:
        type:
          description: DTO type of role using the access profile.
          enum:
          - ROLE
          example: ROLE
          type: string
        id:
          description: ID of role using the access profile.
          example: 2c8180857a9b3da0017aa03418480f9d
          type: string
        name:
          description: Display name of role using the access profile.
          example: Manager Role
          type: string
      type: object
    AccessModelMetadata_values_inner:
      description: An individual value to assign to the metadata item
      example:
        name: Development
        value: development
        status: active
      properties:
        value:
          description: The value to assign to the metdata item
          example: development
          type: string
        name:
          description: Display name of the value
          example: Development
          type: string
        status:
          description: The status of the individual value
          example: active
          type: string
      type: object
    ApprovalStatusDto_originalOwner:
      description: Identity of orginal approval owner.
      example:
        name: Michael Michaels
        id: 2c7180a46faadee4016fb4e018c20642
        type: IDENTITY
      properties:
        type:
          description: DTO type of original approval owner's identity.
          enum:
          - GOVERNANCE_GROUP
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of original approval owner's identity.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Display name of original approval owner.
          example: Michael Michaels
          type: string
      type: object
    ApprovalStatusDto_currentOwner:
      allOf:
      - $ref: '#/components/schemas/AccessItemReviewedBy'
      - nullable: true
        type: object
      example:
        name: Allen Albertson
        id: 2c3780a46faadee4016fb4e018c20652
        type: IDENTITY
    ManualWorkItemDetails_originalOwner:
      description: "Identity of original work item owner, if the work item has been\
        \ forwarded."
      example:
        name: Michael Michaels
        id: 2c7180a46faadee4016fb4e018c20642
        type: IDENTITY
      nullable: true
      properties:
        type:
          description: DTO type of original work item owner's identity.
          enum:
          - GOVERNANCE_GROUP
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of original work item owner's identity.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Display name of original work item owner.
          example: Michael Michaels
          type: string
      type: object
    ManualWorkItemDetails_currentOwner:
      description: Identity of current work item owner.
      example:
        name: Allen Albertson
        id: 2c3780a46faadee4016fb4e018c20652
        type: IDENTITY
      nullable: true
      properties:
        type:
          description: DTO type of current work item owner's identity.
          enum:
          - GOVERNANCE_GROUP
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of current work item owner's identity.
          example: 2c3780a46faadee4016fb4e018c20652
          type: string
        name:
          description: Display name of current work item owner.
          example: Allen Albertson
          type: string
      type: object
    ReviewableEntitlement_account_owner:
      description: Information about the machine account owner
      example:
        displayName: Alison Ferguson
        id: 2c9180857182305e0171993737eb29e8
        type: IDENTITY
      nullable: true
      properties:
        id:
          description: The id associated with the machine account owner
          example: 2c9180857182305e0171993737eb29e8
          nullable: true
          type: string
        type:
          description: An enumeration of the types of Owner supported within the IdentityNow
            infrastructure.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        displayName:
          description: The machine account owner's display name
          example: Alison Ferguson
          nullable: true
          type: string
      type: object
    ReviewableEntitlement_account:
      description: Information about the status of the entitlement
      example:
        owner:
          displayName: Alison Ferguson
          id: 2c9180857182305e0171993737eb29e8
          type: IDENTITY
        created: 2020-04-20T20:11:05.067Z
        name: Alison Ferguso
        modified: 2020-05-20T18:57:16.987Z
        description: Account for Read/write to the company database
        disabled: false
        governanceGroupId: 2c9180857182305e0171993737eb29e6
        id: 2c9180857182305e0171993737eb29e6
        locked: false
        type: IDENTITY
        nativeIdentity: CN=Alison Ferguso
        activityInsights:
          accountID: c4ddd5421d8549f0abd309162cafd3b1
          usageDays: 45
          usageDaysState: COMPLETE
      nullable: true
      properties:
        nativeIdentity:
          description: The native identity for this account
          example: CN=Alison Ferguso
          type: string
        disabled:
          default: false
          description: Indicates whether this account is currently disabled
          example: false
          type: boolean
        locked:
          default: false
          description: Indicates whether this account is currently locked
          example: false
          type: boolean
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: The id associated with the account
          example: 2c9180857182305e0171993737eb29e6
          nullable: true
          type: string
        name:
          description: The account name
          example: Alison Ferguso
          nullable: true
          type: string
        created:
          description: When the account was created
          example: 2020-04-20T20:11:05.067Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: When the account was last modified
          example: 2020-05-20T18:57:16.987Z
          format: date-time
          nullable: true
          type: string
        activityInsights:
          $ref: '#/components/schemas/ActivityInsights'
        description:
          description: Information about the account
          example: Account for Read/write to the company database
          nullable: true
          type: string
        governanceGroupId:
          description: The id associated with the machine Account Governance Group
          example: 2c9180857182305e0171993737eb29e6
          nullable: true
          type: string
        owner:
          $ref: '#/components/schemas/ReviewableEntitlement_account_owner'
      type: object
    Schedule_1_months:
      allOf:
      - $ref: '#/components/schemas/Selector'
      - description: |
          The months to execute the search. This only applies to schedules with a type of `ANNUALLY`.
        example:
          type: LIST
          values:
          - "3"
          - "6"
          - "9"
          - "12"
        nullable: true
        type: object
      example:
        values:
        - MON
        - WED
        interval: 3
        type: LIST
    Schedule_1_days:
      allOf:
      - $ref: '#/components/schemas/Selector'
      - description: |
          The days to execute the search.

          If `type` is `WEEKLY`, the values will be `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, and `SUN`.

          If `type` is `MONTHLY` or `ANNUALLY`, the values will be a number in double quotes, like `"1"`, `"10"`, or `"28"`.  Optionally, the value `"L"` can be used to refer to the last day of the month.
        example:
          type: LIST
          values:
          - MON
          - WED
          - FRI
        nullable: true
        type: object
      example:
        values:
        - MON
        - WED
        interval: 3
        type: LIST
    Schedule_1_hours:
      allOf:
      - $ref: '#/components/schemas/Selector'
      - description: The hours selected.
        example:
          type: RANGE
          values:
          - "9"
          - "18"
          interval: 3
        type: object
      example:
        values:
        - MON
        - WED
        interval: 3
        type: LIST
    SodPolicy_ownerRef:
      description: The owner of the SOD policy.
      example:
        name: Support
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      properties:
        type:
          description: Owner type.
          enum:
          - IDENTITY
          - GOVERNANCE_GROUP
          example: IDENTITY
          type: string
        id:
          description: Owner's ID.
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Owner's name.
          example: Support
          type: string
      type: object
    ViolationContext_policy:
      allOf:
      - $ref: '#/components/schemas/SodPolicyDto'
      - properties:
          type:
            example: SOD_POLICY
            type: string
          name:
            example: A very cool policy name
            type: string
        type: object
      description: The types of objects supported for SOD violations
      example:
        type: ENTITLEMENT
      properties:
        type:
          description: The type of object that is referenced
          enum:
          - ENTITLEMENT
          example: ENTITLEMENT
          type: object
    AttributeDefinition_schema:
      description: A reference to the schema on the source to the attribute values
        map to.
      properties:
        type:
          description: The type of object being referenced
          enum:
          - CONNECTOR_SCHEMA
          example: CONNECTOR_SCHEMA
          type: string
        id:
          description: The object ID this reference applies to.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: The human-readable display name of the object.
          example: group
          type: string
      type: object
    DependantAppConnections_accountSource_passwordPolicies_inner:
      example:
        name: Policy ODS
        id: 2c91808568c529c60168cca6f90c1313
        type: PASSWORD_POLICY
      properties:
        type:
          description: DTO type
          example: PASSWORD_POLICY
          type: string
        id:
          description: ID of the object to which this reference applies
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: Policy ODS
          type: string
      type: object
    DependantAppConnections_accountSource:
      description: The Account Source of the connected Application
      example:
        passwordPolicies:
        - name: Policy ODS
          id: 2c91808568c529c60168cca6f90c1313
          type: PASSWORD_POLICY
        - name: Policy ODS
          id: 2c91808568c529c60168cca6f90c1313
          type: PASSWORD_POLICY
        useForPasswordManagement: false
      properties:
        useForPasswordManagement:
          default: false
          description: Use this Account Source for password management
          example: false
          type: boolean
        passwordPolicies:
          description: A list of Password Policies for this Account Source
          items:
            $ref: '#/components/schemas/DependantAppConnections_accountSource_passwordPolicies_inner'
          type: array
      type: object
    AccountRequest_result:
      properties:
        errors:
          description: Error message.
          items:
            example: |-
              [ConnectorError] [
                {
                  "code": "unrecognized_keys",
                  "keys": [
                    "groups"
                  ],
                  "path": [],
                  "message": "Unrecognized key(s) in object: 'groups'"
                }
              ] (requestId: 5e9d6df5-9b1b-47d9-9bf1-dc3a2893299e)
            type: string
          type: array
        status:
          description: The status of the account request
          example: failed
          type: string
        ticketId:
          description: ID of associated ticket.
          nullable: true
          type: string
          example: null
      type: object
    BaseAccess_owner:
      description: Owner's identity.
      properties:
        type:
          description: Owner's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Owner's identity ID.
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Owner's display name.
          example: Support
          type: string
        email:
          description: Owner's email.
          example: cloud-support@sailpoint.com
          type: string
      type: object
    AccessApps_owner:
      description: Owner's identity.
      properties:
        type:
          description: Owner's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Owner's identity ID.
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Owner's display name.
          example: John Doe
          type: string
        email:
          description: Owner's email.
          example: john.doe@sailpoint.com
          type: string
      type: object
    App_allOf_account:
      properties:
        id:
          description: The SailPoint generated unique ID
          example: 2c9180837dfe6949017e21f3d8cd6d49
          type: string
        accountId:
          description: The account ID generated by the source
          example: "CN=Carol Adams,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          type: string
      type: object
    DataAccess_policies_inner:
      example:
        value: GDPR-20
      properties:
        value:
          description: Value of the policy
          example: GDPR-20
          type: string
      type: object
    DataAccess_categories_inner:
      example:
        matchCount: 10
        value: email-7
      properties:
        value:
          description: Value of the category
          example: email-7
          type: string
        matchCount:
          description: Number of matched for each category
          example: 10
          type: integer
      type: object
    DataAccess_impactScore:
      example:
        value: Medium
      properties:
        value:
          description: Impact Score for this data
          example: Medium
          type: string
      type: object
    Expression_children_inner:
      properties:
        operator:
          description: Operator for the expression
          enum:
          - AND
          - EQUALS
          example: EQUALS
          type: string
        attribute:
          description: Name for the attribute
          example: location
          nullable: true
          type: string
        value:
          $ref: '#/components/schemas/Value'
        children:
          description: There cannot be anymore nested children. This will always be
            null.
          nullable: true
          type: string
          example: null
      type: object
    ViolationOwnerAssignmentConfig_ownerRef:
      description: The owner of the violation assignment config.
      example:
        name: Support
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      nullable: true
      properties:
        type:
          description: Owner type.
          enum:
          - IDENTITY
          - GOVERNANCE_GROUP
          - MANAGER
          - null
          example: IDENTITY
          type: string
        id:
          description: Owner's ID.
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Owner's name.
          example: Support
          type: string
      type: object
    AccessCriteria_criteriaList_inner:
      properties:
        type:
          description: Type of the property to which this reference applies to
          enum:
          - ENTITLEMENT
          example: ENTITLEMENT
          type: string
        id:
          description: ID of the object to which this reference applies to
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies to
          example: Administrator
          type: string
      type: object
    AccessCriteriaRequest_criteriaList_inner:
      properties:
        type:
          description: Type of the property to which this reference applies to
          enum:
          - ENTITLEMENT
          example: ENTITLEMENT
          type: string
        id:
          description: ID of the object to which this reference applies to
          example: 2c91808568c529c60168cca6f90c1313
          type: string
      type: object
    AttributeRequest_value:
      description: Value of attribute.
      oneOf:
      - example: "3203537556531076"
        type: string
      - items:
          example: "[3203537556531076, 1263537556831096]"
          type: string
        type: array
    SodViolationContext_conflictingAccessCriteria_leftCriteria:
      example:
        criteriaList:
        - existing: true
          name: My HR Entitlement
          id: 2c918085771e9d3301773b3cb66f6398
          type: IDENTITY
        - existing: true
          name: My HR Entitlement
          id: 2c918085771e9d3301773b3cb66f6398
          type: IDENTITY
      properties:
        criteriaList:
          items:
            $ref: '#/components/schemas/SodExemptCriteria'
          type: array
      type: object
    SodViolationContext_conflictingAccessCriteria:
      description: The object which contains the left and right hand side of the entitlements
        that got violated according to the policy.
      example:
        leftCriteria:
          criteriaList:
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
        rightCriteria:
          criteriaList:
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
      properties:
        leftCriteria:
          $ref: '#/components/schemas/SodViolationContext_conflictingAccessCriteria_leftCriteria'
        rightCriteria:
          $ref: '#/components/schemas/SodViolationContext_conflictingAccessCriteria_leftCriteria'
      type: object
    ExceptionCriteria_criteriaList_inner:
      allOf:
      - $ref: '#/components/schemas/ExceptionCriteriaAccess'
      description: The types of objects supported for SOD violations
      properties:
        type:
          description: The type of object that is referenced
          enum:
          - ENTITLEMENT
          example: ENTITLEMENT
          type: object
  securitySchemes:
    userAuth:
      description: |
        OAuth2 Bearer token (JWT) generated using either a [personal access token (PAT)](https://developer.sailpoint.com/docs/api/authentication/#generate-a-personal-access-token) or through the [authorization code flow](https://developer.sailpoint.com/docs/api/authentication/#request-access-token-with-authorization-code-grant-flow).

        Personal access tokens are associated with a user in Identity Security Cloud and relies on the user's [user level](https://documentation.sailpoint.com/saas/help/common/users/index.html) (ex. Admin, Helpdesk, etc.) to determine a base level of access.

        See [Identity Security Cloud REST API Authentication](https://developer.sailpoint.com/docs/api/authentication/) for more information.
      flows:
        authorizationCode:
          authorizationUrl: https://tenant.login.sailpoint.com/oauth/authorize
          scopes:
            sp:scopes:default: default scope
            sp:scopes:all: access to all scopes
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
        clientCredentials:
          scopes:
            sp:scopes:default: default scope
            sp:scopes:all: access to all scopes
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
      type: oauth2
      x-displayName: Personal Access Token
    applicationAuth:
      description: |
        OAuth2 Bearer token (JWT) generated using [client credentials flow](https://developer.sailpoint.com/docs/api/authentication/#request-access-token-with-client-credentials-grant-flow).

        Client credentials refers to tokens that are not associated with a user in Identity Security Cloud.

        See [Identity Security Cloud REST API Authentication](https://developer.sailpoint.com/docs/api/authentication/) for more information.
      flows:
        clientCredentials:
          scopes:
            sp:scopes:default: default scope
            sp:scopes:all: access to all scopes
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
      type: oauth2
      x-displayName: Client Credentials
