/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v3

import (
	"encoding/json"
	"fmt"
)

// WorkItemTypeManualWorkItems The type of the work item
type WorkItemTypeManualWorkItems string

// List of WorkItemTypeManualWorkItems
const (
	WORKITEMTYPEMANUALWORKITEMS_GENERIC WorkItemTypeManualWorkItems = "Generic"
	WORKITEMTYPEMANUALWORKITEMS_CERTIFICATION WorkItemTypeManualWorkItems = "Certification"
	WORKITEMTYPEMANUALWORKITEMS_REMEDIATION WorkItemTypeManualWorkItems = "Remediation"
	WORKITEMTYPEMANUALWORKITEMS_DELEGATION WorkItemTypeManualWorkItems = "Delegation"
	WORKITEMTYPEMANUALWORKITEMS_APPROVAL WorkItemTypeManualWorkItems = "Approval"
	WORKITEMTYPEMANUALWORKITEMS_VIOLATION_REVIEW WorkItemTypeManualWorkItems = "ViolationReview"
	WORKITEMTYPEMANUALWORKITEMS_FORM WorkItemTypeManualWorkItems = "Form"
	WORKITEMTYPEMANUALWORKITEMS_POLICY_VIOLOATION WorkItemTypeManualWorkItems = "PolicyVioloation"
	WORKITEMTYPEMANUALWORKITEMS_CHALLENGE WorkItemTypeManualWorkItems = "Challenge"
	WORKITEMTYPEMANUALWORKITEMS_IMPACT_ANALYSIS WorkItemTypeManualWorkItems = "ImpactAnalysis"
	WORKITEMTYPEMANUALWORKITEMS_SIGNOFF WorkItemTypeManualWorkItems = "Signoff"
	WORKITEMTYPEMANUALWORKITEMS_EVENT WorkItemTypeManualWorkItems = "Event"
	WORKITEMTYPEMANUALWORKITEMS_MANUAL_ACTION WorkItemTypeManualWorkItems = "ManualAction"
	WORKITEMTYPEMANUALWORKITEMS_TEST WorkItemTypeManualWorkItems = "Test"
)

// All allowed values of WorkItemTypeManualWorkItems enum
var AllowedWorkItemTypeManualWorkItemsEnumValues = []WorkItemTypeManualWorkItems{
	"Generic",
	"Certification",
	"Remediation",
	"Delegation",
	"Approval",
	"ViolationReview",
	"Form",
	"PolicyVioloation",
	"Challenge",
	"ImpactAnalysis",
	"Signoff",
	"Event",
	"ManualAction",
	"Test",
}

func (v *WorkItemTypeManualWorkItems) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WorkItemTypeManualWorkItems(value)
	for _, existing := range AllowedWorkItemTypeManualWorkItemsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WorkItemTypeManualWorkItems", value)
}

// NewWorkItemTypeManualWorkItemsFromValue returns a pointer to a valid WorkItemTypeManualWorkItems
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWorkItemTypeManualWorkItemsFromValue(v string) (*WorkItemTypeManualWorkItems, error) {
	ev := WorkItemTypeManualWorkItems(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WorkItemTypeManualWorkItems: valid values are %v", v, AllowedWorkItemTypeManualWorkItemsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WorkItemTypeManualWorkItems) IsValid() bool {
	for _, existing := range AllowedWorkItemTypeManualWorkItemsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WorkItemTypeManualWorkItems value
func (v WorkItemTypeManualWorkItems) Ptr() *WorkItemTypeManualWorkItems {
	return &v
}

type NullableWorkItemTypeManualWorkItems struct {
	value *WorkItemTypeManualWorkItems
	isSet bool
}

func (v NullableWorkItemTypeManualWorkItems) Get() *WorkItemTypeManualWorkItems {
	return v.value
}

func (v *NullableWorkItemTypeManualWorkItems) Set(val *WorkItemTypeManualWorkItems) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkItemTypeManualWorkItems) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkItemTypeManualWorkItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkItemTypeManualWorkItems(val *WorkItemTypeManualWorkItems) *NullableWorkItemTypeManualWorkItems {
	return &NullableWorkItemTypeManualWorkItems{value: val, isSet: true}
}

func (v NullableWorkItemTypeManualWorkItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkItemTypeManualWorkItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

