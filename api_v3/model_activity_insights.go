/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v3

import (
	"encoding/json"
)

// checks if the ActivityInsights type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityInsights{}

// ActivityInsights Insights into account activity
type ActivityInsights struct {
	// UUID of the account
	AccountID *string `json:"accountID,omitempty"`
	// The number of days of activity
	UsageDays *int32 `json:"usageDays,omitempty"`
	// Status indicating if the activity is complete or unknown
	UsageDaysState *string `json:"usageDaysState,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ActivityInsights ActivityInsights

// NewActivityInsights instantiates a new ActivityInsights object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityInsights() *ActivityInsights {
	this := ActivityInsights{}
	return &this
}

// NewActivityInsightsWithDefaults instantiates a new ActivityInsights object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityInsightsWithDefaults() *ActivityInsights {
	this := ActivityInsights{}
	return &this
}

// GetAccountID returns the AccountID field value if set, zero value otherwise.
func (o *ActivityInsights) GetAccountID() string {
	if o == nil || isNil(o.AccountID) {
		var ret string
		return ret
	}
	return *o.AccountID
}

// GetAccountIDOk returns a tuple with the AccountID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityInsights) GetAccountIDOk() (*string, bool) {
	if o == nil || isNil(o.AccountID) {
		return nil, false
	}
	return o.AccountID, true
}

// HasAccountID returns a boolean if a field has been set.
func (o *ActivityInsights) HasAccountID() bool {
	if o != nil && !isNil(o.AccountID) {
		return true
	}

	return false
}

// SetAccountID gets a reference to the given string and assigns it to the AccountID field.
func (o *ActivityInsights) SetAccountID(v string) {
	o.AccountID = &v
}

// GetUsageDays returns the UsageDays field value if set, zero value otherwise.
func (o *ActivityInsights) GetUsageDays() int32 {
	if o == nil || isNil(o.UsageDays) {
		var ret int32
		return ret
	}
	return *o.UsageDays
}

// GetUsageDaysOk returns a tuple with the UsageDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityInsights) GetUsageDaysOk() (*int32, bool) {
	if o == nil || isNil(o.UsageDays) {
		return nil, false
	}
	return o.UsageDays, true
}

// HasUsageDays returns a boolean if a field has been set.
func (o *ActivityInsights) HasUsageDays() bool {
	if o != nil && !isNil(o.UsageDays) {
		return true
	}

	return false
}

// SetUsageDays gets a reference to the given int32 and assigns it to the UsageDays field.
func (o *ActivityInsights) SetUsageDays(v int32) {
	o.UsageDays = &v
}

// GetUsageDaysState returns the UsageDaysState field value if set, zero value otherwise.
func (o *ActivityInsights) GetUsageDaysState() string {
	if o == nil || isNil(o.UsageDaysState) {
		var ret string
		return ret
	}
	return *o.UsageDaysState
}

// GetUsageDaysStateOk returns a tuple with the UsageDaysState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityInsights) GetUsageDaysStateOk() (*string, bool) {
	if o == nil || isNil(o.UsageDaysState) {
		return nil, false
	}
	return o.UsageDaysState, true
}

// HasUsageDaysState returns a boolean if a field has been set.
func (o *ActivityInsights) HasUsageDaysState() bool {
	if o != nil && !isNil(o.UsageDaysState) {
		return true
	}

	return false
}

// SetUsageDaysState gets a reference to the given string and assigns it to the UsageDaysState field.
func (o *ActivityInsights) SetUsageDaysState(v string) {
	o.UsageDaysState = &v
}

func (o ActivityInsights) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityInsights) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccountID) {
		toSerialize["accountID"] = o.AccountID
	}
	if !isNil(o.UsageDays) {
		toSerialize["usageDays"] = o.UsageDays
	}
	if !isNil(o.UsageDaysState) {
		toSerialize["usageDaysState"] = o.UsageDaysState
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ActivityInsights) UnmarshalJSON(bytes []byte) (err error) {
	varActivityInsights := _ActivityInsights{}

	if err = json.Unmarshal(bytes, &varActivityInsights); err == nil {
	*o = ActivityInsights(varActivityInsights)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accountID")
		delete(additionalProperties, "usageDays")
		delete(additionalProperties, "usageDaysState")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableActivityInsights struct {
	value *ActivityInsights
	isSet bool
}

func (v NullableActivityInsights) Get() *ActivityInsights {
	return v.value
}

func (v *NullableActivityInsights) Set(val *ActivityInsights) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityInsights) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityInsights) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityInsights(val *ActivityInsights) *NullableActivityInsights {
	return &NullableActivityInsights{value: val, isSet: true}
}

func (v NullableActivityInsights) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityInsights) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


