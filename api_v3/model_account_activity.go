/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v3

import (
	"encoding/json"
	"time"
)

// checks if the AccountActivity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountActivity{}

// AccountActivity struct for AccountActivity
type AccountActivity struct {
	// Id of the account activity
	Id *string `json:"id,omitempty"`
	// The name of the activity
	Name *string `json:"name,omitempty"`
	// When the activity was first created
	Created *time.Time `json:"created,omitempty"`
	// When the activity was last modified
	Modified NullableTime `json:"modified,omitempty"`
	// When the activity was completed
	Completed NullableTime `json:"completed,omitempty"`
	CompletionStatus NullableCompletionStatus `json:"completionStatus,omitempty"`
	// The type of action the activity performed.  Please see the following list of types.  This list may grow over time.  - CloudAutomated - IdentityAttributeUpdate - appRequest - LifecycleStateChange - AccountStateUpdate - AccountAttributeUpdate - CloudPasswordRequest - Attribute Synchronization Refresh - Certification - Identity Refresh - Lifecycle Change Refresh   [Learn more here](https://documentation.sailpoint.com/saas/help/search/searchable-fields.html#searching-account-activity-data). 
	Type NullableString `json:"type,omitempty"`
	RequesterIdentitySummary NullableIdentitySummary `json:"requesterIdentitySummary,omitempty"`
	TargetIdentitySummary NullableIdentitySummary `json:"targetIdentitySummary,omitempty"`
	// A list of error messages, if any, that were encountered.
	Errors []string `json:"errors,omitempty"`
	// A list of warning messages, if any, that were encountered.
	Warnings []string `json:"warnings,omitempty"`
	// Individual actions performed as part of this account activity
	Items []AccountActivityItem `json:"items,omitempty"`
	ExecutionStatus *ExecutionStatus `json:"executionStatus,omitempty"`
	// Arbitrary key-value pairs, if any were included in the corresponding access request
	ClientMetadata map[string]string `json:"clientMetadata,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountActivity AccountActivity

// NewAccountActivity instantiates a new AccountActivity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountActivity() *AccountActivity {
	this := AccountActivity{}
	return &this
}

// NewAccountActivityWithDefaults instantiates a new AccountActivity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountActivityWithDefaults() *AccountActivity {
	this := AccountActivity{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccountActivity) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountActivity) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccountActivity) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AccountActivity) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AccountActivity) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountActivity) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AccountActivity) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AccountActivity) SetName(v string) {
	o.Name = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *AccountActivity) GetCreated() time.Time {
	if o == nil || isNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountActivity) GetCreatedOk() (*time.Time, bool) {
	if o == nil || isNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *AccountActivity) HasCreated() bool {
	if o != nil && !isNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *AccountActivity) SetCreated(v time.Time) {
	o.Created = &v
}

// GetModified returns the Modified field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountActivity) GetModified() time.Time {
	if o == nil || isNil(o.Modified.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Modified.Get()
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountActivity) GetModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Modified.Get(), o.Modified.IsSet()
}

// HasModified returns a boolean if a field has been set.
func (o *AccountActivity) HasModified() bool {
	if o != nil && o.Modified.IsSet() {
		return true
	}

	return false
}

// SetModified gets a reference to the given NullableTime and assigns it to the Modified field.
func (o *AccountActivity) SetModified(v time.Time) {
	o.Modified.Set(&v)
}
// SetModifiedNil sets the value for Modified to be an explicit nil
func (o *AccountActivity) SetModifiedNil() {
	o.Modified.Set(nil)
}

// UnsetModified ensures that no value is present for Modified, not even an explicit nil
func (o *AccountActivity) UnsetModified() {
	o.Modified.Unset()
}

// GetCompleted returns the Completed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountActivity) GetCompleted() time.Time {
	if o == nil || isNil(o.Completed.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Completed.Get()
}

// GetCompletedOk returns a tuple with the Completed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountActivity) GetCompletedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Completed.Get(), o.Completed.IsSet()
}

// HasCompleted returns a boolean if a field has been set.
func (o *AccountActivity) HasCompleted() bool {
	if o != nil && o.Completed.IsSet() {
		return true
	}

	return false
}

// SetCompleted gets a reference to the given NullableTime and assigns it to the Completed field.
func (o *AccountActivity) SetCompleted(v time.Time) {
	o.Completed.Set(&v)
}
// SetCompletedNil sets the value for Completed to be an explicit nil
func (o *AccountActivity) SetCompletedNil() {
	o.Completed.Set(nil)
}

// UnsetCompleted ensures that no value is present for Completed, not even an explicit nil
func (o *AccountActivity) UnsetCompleted() {
	o.Completed.Unset()
}

// GetCompletionStatus returns the CompletionStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountActivity) GetCompletionStatus() CompletionStatus {
	if o == nil || isNil(o.CompletionStatus.Get()) {
		var ret CompletionStatus
		return ret
	}
	return *o.CompletionStatus.Get()
}

// GetCompletionStatusOk returns a tuple with the CompletionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountActivity) GetCompletionStatusOk() (*CompletionStatus, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletionStatus.Get(), o.CompletionStatus.IsSet()
}

// HasCompletionStatus returns a boolean if a field has been set.
func (o *AccountActivity) HasCompletionStatus() bool {
	if o != nil && o.CompletionStatus.IsSet() {
		return true
	}

	return false
}

// SetCompletionStatus gets a reference to the given NullableCompletionStatus and assigns it to the CompletionStatus field.
func (o *AccountActivity) SetCompletionStatus(v CompletionStatus) {
	o.CompletionStatus.Set(&v)
}
// SetCompletionStatusNil sets the value for CompletionStatus to be an explicit nil
func (o *AccountActivity) SetCompletionStatusNil() {
	o.CompletionStatus.Set(nil)
}

// UnsetCompletionStatus ensures that no value is present for CompletionStatus, not even an explicit nil
func (o *AccountActivity) UnsetCompletionStatus() {
	o.CompletionStatus.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountActivity) GetType() string {
	if o == nil || isNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountActivity) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *AccountActivity) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *AccountActivity) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *AccountActivity) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *AccountActivity) UnsetType() {
	o.Type.Unset()
}

// GetRequesterIdentitySummary returns the RequesterIdentitySummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountActivity) GetRequesterIdentitySummary() IdentitySummary {
	if o == nil || isNil(o.RequesterIdentitySummary.Get()) {
		var ret IdentitySummary
		return ret
	}
	return *o.RequesterIdentitySummary.Get()
}

// GetRequesterIdentitySummaryOk returns a tuple with the RequesterIdentitySummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountActivity) GetRequesterIdentitySummaryOk() (*IdentitySummary, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequesterIdentitySummary.Get(), o.RequesterIdentitySummary.IsSet()
}

// HasRequesterIdentitySummary returns a boolean if a field has been set.
func (o *AccountActivity) HasRequesterIdentitySummary() bool {
	if o != nil && o.RequesterIdentitySummary.IsSet() {
		return true
	}

	return false
}

// SetRequesterIdentitySummary gets a reference to the given NullableIdentitySummary and assigns it to the RequesterIdentitySummary field.
func (o *AccountActivity) SetRequesterIdentitySummary(v IdentitySummary) {
	o.RequesterIdentitySummary.Set(&v)
}
// SetRequesterIdentitySummaryNil sets the value for RequesterIdentitySummary to be an explicit nil
func (o *AccountActivity) SetRequesterIdentitySummaryNil() {
	o.RequesterIdentitySummary.Set(nil)
}

// UnsetRequesterIdentitySummary ensures that no value is present for RequesterIdentitySummary, not even an explicit nil
func (o *AccountActivity) UnsetRequesterIdentitySummary() {
	o.RequesterIdentitySummary.Unset()
}

// GetTargetIdentitySummary returns the TargetIdentitySummary field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountActivity) GetTargetIdentitySummary() IdentitySummary {
	if o == nil || isNil(o.TargetIdentitySummary.Get()) {
		var ret IdentitySummary
		return ret
	}
	return *o.TargetIdentitySummary.Get()
}

// GetTargetIdentitySummaryOk returns a tuple with the TargetIdentitySummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountActivity) GetTargetIdentitySummaryOk() (*IdentitySummary, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetIdentitySummary.Get(), o.TargetIdentitySummary.IsSet()
}

// HasTargetIdentitySummary returns a boolean if a field has been set.
func (o *AccountActivity) HasTargetIdentitySummary() bool {
	if o != nil && o.TargetIdentitySummary.IsSet() {
		return true
	}

	return false
}

// SetTargetIdentitySummary gets a reference to the given NullableIdentitySummary and assigns it to the TargetIdentitySummary field.
func (o *AccountActivity) SetTargetIdentitySummary(v IdentitySummary) {
	o.TargetIdentitySummary.Set(&v)
}
// SetTargetIdentitySummaryNil sets the value for TargetIdentitySummary to be an explicit nil
func (o *AccountActivity) SetTargetIdentitySummaryNil() {
	o.TargetIdentitySummary.Set(nil)
}

// UnsetTargetIdentitySummary ensures that no value is present for TargetIdentitySummary, not even an explicit nil
func (o *AccountActivity) UnsetTargetIdentitySummary() {
	o.TargetIdentitySummary.Unset()
}

// GetErrors returns the Errors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountActivity) GetErrors() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountActivity) GetErrorsOk() ([]string, bool) {
	if o == nil || isNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *AccountActivity) HasErrors() bool {
	if o != nil && isNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *AccountActivity) SetErrors(v []string) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountActivity) GetWarnings() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountActivity) GetWarningsOk() ([]string, bool) {
	if o == nil || isNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *AccountActivity) HasWarnings() bool {
	if o != nil && isNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []string and assigns it to the Warnings field.
func (o *AccountActivity) SetWarnings(v []string) {
	o.Warnings = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *AccountActivity) GetItems() []AccountActivityItem {
	if o == nil || isNil(o.Items) {
		var ret []AccountActivityItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountActivity) GetItemsOk() ([]AccountActivityItem, bool) {
	if o == nil || isNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *AccountActivity) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []AccountActivityItem and assigns it to the Items field.
func (o *AccountActivity) SetItems(v []AccountActivityItem) {
	o.Items = v
}

// GetExecutionStatus returns the ExecutionStatus field value if set, zero value otherwise.
func (o *AccountActivity) GetExecutionStatus() ExecutionStatus {
	if o == nil || isNil(o.ExecutionStatus) {
		var ret ExecutionStatus
		return ret
	}
	return *o.ExecutionStatus
}

// GetExecutionStatusOk returns a tuple with the ExecutionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountActivity) GetExecutionStatusOk() (*ExecutionStatus, bool) {
	if o == nil || isNil(o.ExecutionStatus) {
		return nil, false
	}
	return o.ExecutionStatus, true
}

// HasExecutionStatus returns a boolean if a field has been set.
func (o *AccountActivity) HasExecutionStatus() bool {
	if o != nil && !isNil(o.ExecutionStatus) {
		return true
	}

	return false
}

// SetExecutionStatus gets a reference to the given ExecutionStatus and assigns it to the ExecutionStatus field.
func (o *AccountActivity) SetExecutionStatus(v ExecutionStatus) {
	o.ExecutionStatus = &v
}

// GetClientMetadata returns the ClientMetadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountActivity) GetClientMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ClientMetadata
}

// GetClientMetadataOk returns a tuple with the ClientMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountActivity) GetClientMetadataOk() (*map[string]string, bool) {
	if o == nil || isNil(o.ClientMetadata) {
		return nil, false
	}
	return &o.ClientMetadata, true
}

// HasClientMetadata returns a boolean if a field has been set.
func (o *AccountActivity) HasClientMetadata() bool {
	if o != nil && isNil(o.ClientMetadata) {
		return true
	}

	return false
}

// SetClientMetadata gets a reference to the given map[string]string and assigns it to the ClientMetadata field.
func (o *AccountActivity) SetClientMetadata(v map[string]string) {
	o.ClientMetadata = v
}

func (o AccountActivity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountActivity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if o.Modified.IsSet() {
		toSerialize["modified"] = o.Modified.Get()
	}
	if o.Completed.IsSet() {
		toSerialize["completed"] = o.Completed.Get()
	}
	if o.CompletionStatus.IsSet() {
		toSerialize["completionStatus"] = o.CompletionStatus.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.RequesterIdentitySummary.IsSet() {
		toSerialize["requesterIdentitySummary"] = o.RequesterIdentitySummary.Get()
	}
	if o.TargetIdentitySummary.IsSet() {
		toSerialize["targetIdentitySummary"] = o.TargetIdentitySummary.Get()
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.ExecutionStatus) {
		toSerialize["executionStatus"] = o.ExecutionStatus
	}
	if o.ClientMetadata != nil {
		toSerialize["clientMetadata"] = o.ClientMetadata
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountActivity) UnmarshalJSON(bytes []byte) (err error) {
	varAccountActivity := _AccountActivity{}

	if err = json.Unmarshal(bytes, &varAccountActivity); err == nil {
	*o = AccountActivity(varAccountActivity)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "created")
		delete(additionalProperties, "modified")
		delete(additionalProperties, "completed")
		delete(additionalProperties, "completionStatus")
		delete(additionalProperties, "type")
		delete(additionalProperties, "requesterIdentitySummary")
		delete(additionalProperties, "targetIdentitySummary")
		delete(additionalProperties, "errors")
		delete(additionalProperties, "warnings")
		delete(additionalProperties, "items")
		delete(additionalProperties, "executionStatus")
		delete(additionalProperties, "clientMetadata")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountActivity struct {
	value *AccountActivity
	isSet bool
}

func (v NullableAccountActivity) Get() *AccountActivity {
	return v.value
}

func (v *NullableAccountActivity) Set(val *AccountActivity) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountActivity) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountActivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountActivity(val *AccountActivity) *NullableAccountActivity {
	return &NullableAccountActivity{value: val, isSet: true}
}

func (v NullableAccountActivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountActivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


