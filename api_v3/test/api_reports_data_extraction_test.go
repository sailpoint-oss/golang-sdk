/*
IdentityNow V3 API

Testing ReportsDataExtractionAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package api_v3

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/sailpoint-oss/golang-sdk"
)

func Test_api_v3_ReportsDataExtractionAPIService(t *testing.T) {

	configuration := openapiclient.NewDefaultConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ReportsDataExtractionAPIService CancelReport", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		httpRes, err := apiClient.API_V3.ReportsDataExtractionAPI.CancelReport(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ReportsDataExtractionAPIService GetReport", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var taskResultId string

		resp, httpRes, err := apiClient.API_V3.ReportsDataExtractionAPI.GetReport(context.Background(), taskResultId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ReportsDataExtractionAPIService GetReportResult", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var taskResultId string

		resp, httpRes, err := apiClient.API_V3.ReportsDataExtractionAPI.GetReportResult(context.Background(), taskResultId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ReportsDataExtractionAPIService StartReport", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.API_V3.ReportsDataExtractionAPI.StartReport(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
