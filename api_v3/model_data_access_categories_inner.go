/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v3

import (
	"encoding/json"
)

// checks if the DataAccessCategoriesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataAccessCategoriesInner{}

// DataAccessCategoriesInner struct for DataAccessCategoriesInner
type DataAccessCategoriesInner struct {
	// Value of the category
	Value *string `json:"value,omitempty"`
	// Number of matched for each category
	MatchCount *int32 `json:"matchCount,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DataAccessCategoriesInner DataAccessCategoriesInner

// NewDataAccessCategoriesInner instantiates a new DataAccessCategoriesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataAccessCategoriesInner() *DataAccessCategoriesInner {
	this := DataAccessCategoriesInner{}
	return &this
}

// NewDataAccessCategoriesInnerWithDefaults instantiates a new DataAccessCategoriesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataAccessCategoriesInnerWithDefaults() *DataAccessCategoriesInner {
	this := DataAccessCategoriesInner{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DataAccessCategoriesInner) GetValue() string {
	if o == nil || isNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataAccessCategoriesInner) GetValueOk() (*string, bool) {
	if o == nil || isNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DataAccessCategoriesInner) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *DataAccessCategoriesInner) SetValue(v string) {
	o.Value = &v
}

// GetMatchCount returns the MatchCount field value if set, zero value otherwise.
func (o *DataAccessCategoriesInner) GetMatchCount() int32 {
	if o == nil || isNil(o.MatchCount) {
		var ret int32
		return ret
	}
	return *o.MatchCount
}

// GetMatchCountOk returns a tuple with the MatchCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataAccessCategoriesInner) GetMatchCountOk() (*int32, bool) {
	if o == nil || isNil(o.MatchCount) {
		return nil, false
	}
	return o.MatchCount, true
}

// HasMatchCount returns a boolean if a field has been set.
func (o *DataAccessCategoriesInner) HasMatchCount() bool {
	if o != nil && !isNil(o.MatchCount) {
		return true
	}

	return false
}

// SetMatchCount gets a reference to the given int32 and assigns it to the MatchCount field.
func (o *DataAccessCategoriesInner) SetMatchCount(v int32) {
	o.MatchCount = &v
}

func (o DataAccessCategoriesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataAccessCategoriesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !isNil(o.MatchCount) {
		toSerialize["matchCount"] = o.MatchCount
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DataAccessCategoriesInner) UnmarshalJSON(bytes []byte) (err error) {
	varDataAccessCategoriesInner := _DataAccessCategoriesInner{}

	if err = json.Unmarshal(bytes, &varDataAccessCategoriesInner); err == nil {
	*o = DataAccessCategoriesInner(varDataAccessCategoriesInner)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "value")
		delete(additionalProperties, "matchCount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDataAccessCategoriesInner struct {
	value *DataAccessCategoriesInner
	isSet bool
}

func (v NullableDataAccessCategoriesInner) Get() *DataAccessCategoriesInner {
	return v.value
}

func (v *NullableDataAccessCategoriesInner) Set(val *DataAccessCategoriesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDataAccessCategoriesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDataAccessCategoriesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataAccessCategoriesInner(val *DataAccessCategoriesInner) *NullableDataAccessCategoriesInner {
	return &NullableDataAccessCategoriesInner{value: val, isSet: true}
}

func (v NullableDataAccessCategoriesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataAccessCategoriesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


