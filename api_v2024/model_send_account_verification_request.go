/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
	"fmt"
)

// checks if the SendAccountVerificationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendAccountVerificationRequest{}

// SendAccountVerificationRequest struct for SendAccountVerificationRequest
type SendAccountVerificationRequest struct {
	// The source name where identity account password should be reset
	SourceName NullableString `json:"sourceName,omitempty"`
	// The method to send notification
	Via string `json:"via"`
	AdditionalProperties map[string]interface{}
}

type _SendAccountVerificationRequest SendAccountVerificationRequest

// NewSendAccountVerificationRequest instantiates a new SendAccountVerificationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendAccountVerificationRequest(via string) *SendAccountVerificationRequest {
	this := SendAccountVerificationRequest{}
	this.Via = via
	return &this
}

// NewSendAccountVerificationRequestWithDefaults instantiates a new SendAccountVerificationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendAccountVerificationRequestWithDefaults() *SendAccountVerificationRequest {
	this := SendAccountVerificationRequest{}
	return &this
}

// GetSourceName returns the SourceName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SendAccountVerificationRequest) GetSourceName() string {
	if o == nil || IsNil(o.SourceName.Get()) {
		var ret string
		return ret
	}
	return *o.SourceName.Get()
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SendAccountVerificationRequest) GetSourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceName.Get(), o.SourceName.IsSet()
}

// HasSourceName returns a boolean if a field has been set.
func (o *SendAccountVerificationRequest) HasSourceName() bool {
	if o != nil && o.SourceName.IsSet() {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given NullableString and assigns it to the SourceName field.
func (o *SendAccountVerificationRequest) SetSourceName(v string) {
	o.SourceName.Set(&v)
}
// SetSourceNameNil sets the value for SourceName to be an explicit nil
func (o *SendAccountVerificationRequest) SetSourceNameNil() {
	o.SourceName.Set(nil)
}

// UnsetSourceName ensures that no value is present for SourceName, not even an explicit nil
func (o *SendAccountVerificationRequest) UnsetSourceName() {
	o.SourceName.Unset()
}

// GetVia returns the Via field value
func (o *SendAccountVerificationRequest) GetVia() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Via
}

// GetViaOk returns a tuple with the Via field value
// and a boolean to check if the value has been set.
func (o *SendAccountVerificationRequest) GetViaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Via, true
}

// SetVia sets field value
func (o *SendAccountVerificationRequest) SetVia(v string) {
	o.Via = v
}

func (o SendAccountVerificationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendAccountVerificationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SourceName.IsSet() {
		toSerialize["sourceName"] = o.SourceName.Get()
	}
	toSerialize["via"] = o.Via

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SendAccountVerificationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"via",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSendAccountVerificationRequest := _SendAccountVerificationRequest{}

	err = json.Unmarshal(data, &varSendAccountVerificationRequest)

	if err != nil {
		return err
	}

	*o = SendAccountVerificationRequest(varSendAccountVerificationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "sourceName")
		delete(additionalProperties, "via")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSendAccountVerificationRequest struct {
	value *SendAccountVerificationRequest
	isSet bool
}

func (v NullableSendAccountVerificationRequest) Get() *SendAccountVerificationRequest {
	return v.value
}

func (v *NullableSendAccountVerificationRequest) Set(val *SendAccountVerificationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSendAccountVerificationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSendAccountVerificationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendAccountVerificationRequest(val *SendAccountVerificationRequest) *NullableSendAccountVerificationRequest {
	return &NullableSendAccountVerificationRequest{value: val, isSet: true}
}

func (v NullableSendAccountVerificationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendAccountVerificationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


