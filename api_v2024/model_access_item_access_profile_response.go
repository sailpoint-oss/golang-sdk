/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
	"fmt"
)

// checks if the AccessItemAccessProfileResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessItemAccessProfileResponse{}

// AccessItemAccessProfileResponse struct for AccessItemAccessProfileResponse
type AccessItemAccessProfileResponse struct {
	// the access item id
	Id *string `json:"id,omitempty"`
	// the access item type. accessProfile in this case
	AccessType *string `json:"accessType,omitempty"`
	// the display name of the identity
	DisplayName *string `json:"displayName,omitempty"`
	// the name of the source
	SourceName *string `json:"sourceName,omitempty"`
	// the number of entitlements the access profile will create
	EntitlementCount int32 `json:"entitlementCount"`
	// the description for the access profile
	Description NullableString `json:"description,omitempty"`
	// the id of the source
	SourceId *string `json:"sourceId,omitempty"`
	// the list of app ids associated with the access profile
	AppRefs []AccessItemAccessProfileResponseAppRefsInner `json:"appRefs"`
	// the date the access profile is no longer assigned to the specified identity
	RemoveDate NullableString `json:"removeDate,omitempty"`
	// indicates whether the access profile is standalone
	Standalone NullableBool `json:"standalone"`
	// indicates whether the access profile is revocable
	Revocable NullableBool `json:"revocable"`
	AdditionalProperties map[string]interface{}
}

type _AccessItemAccessProfileResponse AccessItemAccessProfileResponse

// NewAccessItemAccessProfileResponse instantiates a new AccessItemAccessProfileResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessItemAccessProfileResponse(entitlementCount int32, appRefs []AccessItemAccessProfileResponseAppRefsInner, standalone NullableBool, revocable NullableBool) *AccessItemAccessProfileResponse {
	this := AccessItemAccessProfileResponse{}
	this.EntitlementCount = entitlementCount
	this.AppRefs = appRefs
	this.Standalone = standalone
	this.Revocable = revocable
	return &this
}

// NewAccessItemAccessProfileResponseWithDefaults instantiates a new AccessItemAccessProfileResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessItemAccessProfileResponseWithDefaults() *AccessItemAccessProfileResponse {
	this := AccessItemAccessProfileResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccessItemAccessProfileResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessItemAccessProfileResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccessItemAccessProfileResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AccessItemAccessProfileResponse) SetId(v string) {
	o.Id = &v
}

// GetAccessType returns the AccessType field value if set, zero value otherwise.
func (o *AccessItemAccessProfileResponse) GetAccessType() string {
	if o == nil || IsNil(o.AccessType) {
		var ret string
		return ret
	}
	return *o.AccessType
}

// GetAccessTypeOk returns a tuple with the AccessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessItemAccessProfileResponse) GetAccessTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccessType) {
		return nil, false
	}
	return o.AccessType, true
}

// HasAccessType returns a boolean if a field has been set.
func (o *AccessItemAccessProfileResponse) HasAccessType() bool {
	if o != nil && !IsNil(o.AccessType) {
		return true
	}

	return false
}

// SetAccessType gets a reference to the given string and assigns it to the AccessType field.
func (o *AccessItemAccessProfileResponse) SetAccessType(v string) {
	o.AccessType = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AccessItemAccessProfileResponse) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessItemAccessProfileResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AccessItemAccessProfileResponse) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AccessItemAccessProfileResponse) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetSourceName returns the SourceName field value if set, zero value otherwise.
func (o *AccessItemAccessProfileResponse) GetSourceName() string {
	if o == nil || IsNil(o.SourceName) {
		var ret string
		return ret
	}
	return *o.SourceName
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessItemAccessProfileResponse) GetSourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceName) {
		return nil, false
	}
	return o.SourceName, true
}

// HasSourceName returns a boolean if a field has been set.
func (o *AccessItemAccessProfileResponse) HasSourceName() bool {
	if o != nil && !IsNil(o.SourceName) {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given string and assigns it to the SourceName field.
func (o *AccessItemAccessProfileResponse) SetSourceName(v string) {
	o.SourceName = &v
}

// GetEntitlementCount returns the EntitlementCount field value
func (o *AccessItemAccessProfileResponse) GetEntitlementCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EntitlementCount
}

// GetEntitlementCountOk returns a tuple with the EntitlementCount field value
// and a boolean to check if the value has been set.
func (o *AccessItemAccessProfileResponse) GetEntitlementCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntitlementCount, true
}

// SetEntitlementCount sets field value
func (o *AccessItemAccessProfileResponse) SetEntitlementCount(v int32) {
	o.EntitlementCount = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessItemAccessProfileResponse) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessItemAccessProfileResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AccessItemAccessProfileResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AccessItemAccessProfileResponse) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AccessItemAccessProfileResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AccessItemAccessProfileResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *AccessItemAccessProfileResponse) GetSourceId() string {
	if o == nil || IsNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessItemAccessProfileResponse) GetSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *AccessItemAccessProfileResponse) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *AccessItemAccessProfileResponse) SetSourceId(v string) {
	o.SourceId = &v
}

// GetAppRefs returns the AppRefs field value
func (o *AccessItemAccessProfileResponse) GetAppRefs() []AccessItemAccessProfileResponseAppRefsInner {
	if o == nil {
		var ret []AccessItemAccessProfileResponseAppRefsInner
		return ret
	}

	return o.AppRefs
}

// GetAppRefsOk returns a tuple with the AppRefs field value
// and a boolean to check if the value has been set.
func (o *AccessItemAccessProfileResponse) GetAppRefsOk() ([]AccessItemAccessProfileResponseAppRefsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.AppRefs, true
}

// SetAppRefs sets field value
func (o *AccessItemAccessProfileResponse) SetAppRefs(v []AccessItemAccessProfileResponseAppRefsInner) {
	o.AppRefs = v
}

// GetRemoveDate returns the RemoveDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessItemAccessProfileResponse) GetRemoveDate() string {
	if o == nil || IsNil(o.RemoveDate.Get()) {
		var ret string
		return ret
	}
	return *o.RemoveDate.Get()
}

// GetRemoveDateOk returns a tuple with the RemoveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessItemAccessProfileResponse) GetRemoveDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoveDate.Get(), o.RemoveDate.IsSet()
}

// HasRemoveDate returns a boolean if a field has been set.
func (o *AccessItemAccessProfileResponse) HasRemoveDate() bool {
	if o != nil && o.RemoveDate.IsSet() {
		return true
	}

	return false
}

// SetRemoveDate gets a reference to the given NullableString and assigns it to the RemoveDate field.
func (o *AccessItemAccessProfileResponse) SetRemoveDate(v string) {
	o.RemoveDate.Set(&v)
}
// SetRemoveDateNil sets the value for RemoveDate to be an explicit nil
func (o *AccessItemAccessProfileResponse) SetRemoveDateNil() {
	o.RemoveDate.Set(nil)
}

// UnsetRemoveDate ensures that no value is present for RemoveDate, not even an explicit nil
func (o *AccessItemAccessProfileResponse) UnsetRemoveDate() {
	o.RemoveDate.Unset()
}

// GetStandalone returns the Standalone field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *AccessItemAccessProfileResponse) GetStandalone() bool {
	if o == nil || o.Standalone.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Standalone.Get()
}

// GetStandaloneOk returns a tuple with the Standalone field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessItemAccessProfileResponse) GetStandaloneOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Standalone.Get(), o.Standalone.IsSet()
}

// SetStandalone sets field value
func (o *AccessItemAccessProfileResponse) SetStandalone(v bool) {
	o.Standalone.Set(&v)
}

// GetRevocable returns the Revocable field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *AccessItemAccessProfileResponse) GetRevocable() bool {
	if o == nil || o.Revocable.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Revocable.Get()
}

// GetRevocableOk returns a tuple with the Revocable field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessItemAccessProfileResponse) GetRevocableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Revocable.Get(), o.Revocable.IsSet()
}

// SetRevocable sets field value
func (o *AccessItemAccessProfileResponse) SetRevocable(v bool) {
	o.Revocable.Set(&v)
}

func (o AccessItemAccessProfileResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessItemAccessProfileResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AccessType) {
		toSerialize["accessType"] = o.AccessType
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.SourceName) {
		toSerialize["sourceName"] = o.SourceName
	}
	toSerialize["entitlementCount"] = o.EntitlementCount
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.SourceId) {
		toSerialize["sourceId"] = o.SourceId
	}
	toSerialize["appRefs"] = o.AppRefs
	if o.RemoveDate.IsSet() {
		toSerialize["removeDate"] = o.RemoveDate.Get()
	}
	toSerialize["standalone"] = o.Standalone.Get()
	toSerialize["revocable"] = o.Revocable.Get()

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccessItemAccessProfileResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entitlementCount",
		"appRefs",
		"standalone",
		"revocable",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessItemAccessProfileResponse := _AccessItemAccessProfileResponse{}

	err = json.Unmarshal(data, &varAccessItemAccessProfileResponse)

	if err != nil {
		return err
	}

	*o = AccessItemAccessProfileResponse(varAccessItemAccessProfileResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "accessType")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "sourceName")
		delete(additionalProperties, "entitlementCount")
		delete(additionalProperties, "description")
		delete(additionalProperties, "sourceId")
		delete(additionalProperties, "appRefs")
		delete(additionalProperties, "removeDate")
		delete(additionalProperties, "standalone")
		delete(additionalProperties, "revocable")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccessItemAccessProfileResponse struct {
	value *AccessItemAccessProfileResponse
	isSet bool
}

func (v NullableAccessItemAccessProfileResponse) Get() *AccessItemAccessProfileResponse {
	return v.value
}

func (v *NullableAccessItemAccessProfileResponse) Set(val *AccessItemAccessProfileResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessItemAccessProfileResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessItemAccessProfileResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessItemAccessProfileResponse(val *AccessItemAccessProfileResponse) *NullableAccessItemAccessProfileResponse {
	return &NullableAccessItemAccessProfileResponse{value: val, isSet: true}
}

func (v NullableAccessItemAccessProfileResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessItemAccessProfileResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


