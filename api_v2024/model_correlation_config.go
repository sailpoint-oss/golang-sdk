/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the CorrelationConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorrelationConfig{}

// CorrelationConfig Source configuration information that is used by correlation process.
type CorrelationConfig struct {
	// The ID of the correlation configuration.
	Id *string `json:"id,omitempty"`
	// The name of the correlation configuration.
	Name *string `json:"name,omitempty"`
	// The list of attribute assignments of the correlation configuration.
	AttributeAssignments []CorrelationConfigAttributeAssignmentsInner `json:"attributeAssignments,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CorrelationConfig CorrelationConfig

// NewCorrelationConfig instantiates a new CorrelationConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorrelationConfig() *CorrelationConfig {
	this := CorrelationConfig{}
	return &this
}

// NewCorrelationConfigWithDefaults instantiates a new CorrelationConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorrelationConfigWithDefaults() *CorrelationConfig {
	this := CorrelationConfig{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CorrelationConfig) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrelationConfig) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CorrelationConfig) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CorrelationConfig) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CorrelationConfig) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrelationConfig) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CorrelationConfig) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CorrelationConfig) SetName(v string) {
	o.Name = &v
}

// GetAttributeAssignments returns the AttributeAssignments field value if set, zero value otherwise.
func (o *CorrelationConfig) GetAttributeAssignments() []CorrelationConfigAttributeAssignmentsInner {
	if o == nil || IsNil(o.AttributeAssignments) {
		var ret []CorrelationConfigAttributeAssignmentsInner
		return ret
	}
	return o.AttributeAssignments
}

// GetAttributeAssignmentsOk returns a tuple with the AttributeAssignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrelationConfig) GetAttributeAssignmentsOk() ([]CorrelationConfigAttributeAssignmentsInner, bool) {
	if o == nil || IsNil(o.AttributeAssignments) {
		return nil, false
	}
	return o.AttributeAssignments, true
}

// HasAttributeAssignments returns a boolean if a field has been set.
func (o *CorrelationConfig) HasAttributeAssignments() bool {
	if o != nil && !IsNil(o.AttributeAssignments) {
		return true
	}

	return false
}

// SetAttributeAssignments gets a reference to the given []CorrelationConfigAttributeAssignmentsInner and assigns it to the AttributeAssignments field.
func (o *CorrelationConfig) SetAttributeAssignments(v []CorrelationConfigAttributeAssignmentsInner) {
	o.AttributeAssignments = v
}

func (o CorrelationConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorrelationConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AttributeAssignments) {
		toSerialize["attributeAssignments"] = o.AttributeAssignments
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CorrelationConfig) UnmarshalJSON(data []byte) (err error) {
	varCorrelationConfig := _CorrelationConfig{}

	err = json.Unmarshal(data, &varCorrelationConfig)

	if err != nil {
		return err
	}

	*o = CorrelationConfig(varCorrelationConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "attributeAssignments")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCorrelationConfig struct {
	value *CorrelationConfig
	isSet bool
}

func (v NullableCorrelationConfig) Get() *CorrelationConfig {
	return v.value
}

func (v *NullableCorrelationConfig) Set(val *CorrelationConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCorrelationConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCorrelationConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorrelationConfig(val *CorrelationConfig) *NullableCorrelationConfig {
	return &NullableCorrelationConfig{value: val, isSet: true}
}

func (v NullableCorrelationConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorrelationConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


