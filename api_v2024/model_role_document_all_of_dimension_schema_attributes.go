/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the RoleDocumentAllOfDimensionSchemaAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleDocumentAllOfDimensionSchemaAttributes{}

// RoleDocumentAllOfDimensionSchemaAttributes struct for RoleDocumentAllOfDimensionSchemaAttributes
type RoleDocumentAllOfDimensionSchemaAttributes struct {
	Derived *bool `json:"derived,omitempty"`
	// Displayname of the dimension attribute.
	DisplayName *string `json:"displayName,omitempty"`
	// Name of the dimension attribute.
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RoleDocumentAllOfDimensionSchemaAttributes RoleDocumentAllOfDimensionSchemaAttributes

// NewRoleDocumentAllOfDimensionSchemaAttributes instantiates a new RoleDocumentAllOfDimensionSchemaAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleDocumentAllOfDimensionSchemaAttributes() *RoleDocumentAllOfDimensionSchemaAttributes {
	this := RoleDocumentAllOfDimensionSchemaAttributes{}
	var derived bool = true
	this.Derived = &derived
	return &this
}

// NewRoleDocumentAllOfDimensionSchemaAttributesWithDefaults instantiates a new RoleDocumentAllOfDimensionSchemaAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleDocumentAllOfDimensionSchemaAttributesWithDefaults() *RoleDocumentAllOfDimensionSchemaAttributes {
	this := RoleDocumentAllOfDimensionSchemaAttributes{}
	var derived bool = true
	this.Derived = &derived
	return &this
}

// GetDerived returns the Derived field value if set, zero value otherwise.
func (o *RoleDocumentAllOfDimensionSchemaAttributes) GetDerived() bool {
	if o == nil || IsNil(o.Derived) {
		var ret bool
		return ret
	}
	return *o.Derived
}

// GetDerivedOk returns a tuple with the Derived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleDocumentAllOfDimensionSchemaAttributes) GetDerivedOk() (*bool, bool) {
	if o == nil || IsNil(o.Derived) {
		return nil, false
	}
	return o.Derived, true
}

// HasDerived returns a boolean if a field has been set.
func (o *RoleDocumentAllOfDimensionSchemaAttributes) HasDerived() bool {
	if o != nil && !IsNil(o.Derived) {
		return true
	}

	return false
}

// SetDerived gets a reference to the given bool and assigns it to the Derived field.
func (o *RoleDocumentAllOfDimensionSchemaAttributes) SetDerived(v bool) {
	o.Derived = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *RoleDocumentAllOfDimensionSchemaAttributes) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleDocumentAllOfDimensionSchemaAttributes) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *RoleDocumentAllOfDimensionSchemaAttributes) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *RoleDocumentAllOfDimensionSchemaAttributes) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RoleDocumentAllOfDimensionSchemaAttributes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleDocumentAllOfDimensionSchemaAttributes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RoleDocumentAllOfDimensionSchemaAttributes) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RoleDocumentAllOfDimensionSchemaAttributes) SetName(v string) {
	o.Name = &v
}

func (o RoleDocumentAllOfDimensionSchemaAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleDocumentAllOfDimensionSchemaAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Derived) {
		toSerialize["derived"] = o.Derived
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RoleDocumentAllOfDimensionSchemaAttributes) UnmarshalJSON(data []byte) (err error) {
	varRoleDocumentAllOfDimensionSchemaAttributes := _RoleDocumentAllOfDimensionSchemaAttributes{}

	err = json.Unmarshal(data, &varRoleDocumentAllOfDimensionSchemaAttributes)

	if err != nil {
		return err
	}

	*o = RoleDocumentAllOfDimensionSchemaAttributes(varRoleDocumentAllOfDimensionSchemaAttributes)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "derived")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRoleDocumentAllOfDimensionSchemaAttributes struct {
	value *RoleDocumentAllOfDimensionSchemaAttributes
	isSet bool
}

func (v NullableRoleDocumentAllOfDimensionSchemaAttributes) Get() *RoleDocumentAllOfDimensionSchemaAttributes {
	return v.value
}

func (v *NullableRoleDocumentAllOfDimensionSchemaAttributes) Set(val *RoleDocumentAllOfDimensionSchemaAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleDocumentAllOfDimensionSchemaAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleDocumentAllOfDimensionSchemaAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleDocumentAllOfDimensionSchemaAttributes(val *RoleDocumentAllOfDimensionSchemaAttributes) *NullableRoleDocumentAllOfDimensionSchemaAttributes {
	return &NullableRoleDocumentAllOfDimensionSchemaAttributes{value: val, isSet: true}
}

func (v NullableRoleDocumentAllOfDimensionSchemaAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleDocumentAllOfDimensionSchemaAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


