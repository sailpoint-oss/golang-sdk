/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the AccessRequestedStatusChange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessRequestedStatusChange{}

// AccessRequestedStatusChange struct for AccessRequestedStatusChange
type AccessRequestedStatusChange struct {
	// the previous status of the account
	PreviousStatus *string `json:"previousStatus,omitempty"`
	// the new status of the account
	NewStatus *string `json:"newStatus,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccessRequestedStatusChange AccessRequestedStatusChange

// NewAccessRequestedStatusChange instantiates a new AccessRequestedStatusChange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessRequestedStatusChange() *AccessRequestedStatusChange {
	this := AccessRequestedStatusChange{}
	return &this
}

// NewAccessRequestedStatusChangeWithDefaults instantiates a new AccessRequestedStatusChange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessRequestedStatusChangeWithDefaults() *AccessRequestedStatusChange {
	this := AccessRequestedStatusChange{}
	return &this
}

// GetPreviousStatus returns the PreviousStatus field value if set, zero value otherwise.
func (o *AccessRequestedStatusChange) GetPreviousStatus() string {
	if o == nil || IsNil(o.PreviousStatus) {
		var ret string
		return ret
	}
	return *o.PreviousStatus
}

// GetPreviousStatusOk returns a tuple with the PreviousStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRequestedStatusChange) GetPreviousStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PreviousStatus) {
		return nil, false
	}
	return o.PreviousStatus, true
}

// HasPreviousStatus returns a boolean if a field has been set.
func (o *AccessRequestedStatusChange) HasPreviousStatus() bool {
	if o != nil && !IsNil(o.PreviousStatus) {
		return true
	}

	return false
}

// SetPreviousStatus gets a reference to the given string and assigns it to the PreviousStatus field.
func (o *AccessRequestedStatusChange) SetPreviousStatus(v string) {
	o.PreviousStatus = &v
}

// GetNewStatus returns the NewStatus field value if set, zero value otherwise.
func (o *AccessRequestedStatusChange) GetNewStatus() string {
	if o == nil || IsNil(o.NewStatus) {
		var ret string
		return ret
	}
	return *o.NewStatus
}

// GetNewStatusOk returns a tuple with the NewStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRequestedStatusChange) GetNewStatusOk() (*string, bool) {
	if o == nil || IsNil(o.NewStatus) {
		return nil, false
	}
	return o.NewStatus, true
}

// HasNewStatus returns a boolean if a field has been set.
func (o *AccessRequestedStatusChange) HasNewStatus() bool {
	if o != nil && !IsNil(o.NewStatus) {
		return true
	}

	return false
}

// SetNewStatus gets a reference to the given string and assigns it to the NewStatus field.
func (o *AccessRequestedStatusChange) SetNewStatus(v string) {
	o.NewStatus = &v
}

func (o AccessRequestedStatusChange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessRequestedStatusChange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PreviousStatus) {
		toSerialize["previousStatus"] = o.PreviousStatus
	}
	if !IsNil(o.NewStatus) {
		toSerialize["newStatus"] = o.NewStatus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccessRequestedStatusChange) UnmarshalJSON(data []byte) (err error) {
	varAccessRequestedStatusChange := _AccessRequestedStatusChange{}

	err = json.Unmarshal(data, &varAccessRequestedStatusChange)

	if err != nil {
		return err
	}

	*o = AccessRequestedStatusChange(varAccessRequestedStatusChange)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "previousStatus")
		delete(additionalProperties, "newStatus")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccessRequestedStatusChange struct {
	value *AccessRequestedStatusChange
	isSet bool
}

func (v NullableAccessRequestedStatusChange) Get() *AccessRequestedStatusChange {
	return v.value
}

func (v *NullableAccessRequestedStatusChange) Set(val *AccessRequestedStatusChange) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessRequestedStatusChange) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessRequestedStatusChange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessRequestedStatusChange(val *AccessRequestedStatusChange) *NullableAccessRequestedStatusChange {
	return &NullableAccessRequestedStatusChange{value: val, isSet: true}
}

func (v NullableAccessRequestedStatusChange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessRequestedStatusChange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


