/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the ScheduledActionResponseContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScheduledActionResponseContent{}

// ScheduledActionResponseContent Content details for the scheduled action.
type ScheduledActionResponseContent struct {
	// Name of the scheduled action (maximum 50 characters).
	Name *string `json:"name,omitempty"`
	BackupOptions *ScheduledActionResponseContentBackupOptions `json:"backupOptions,omitempty"`
	// ID of the source backup. Required for CREATE_DRAFT jobs only.
	SourceBackupId *string `json:"sourceBackupId,omitempty"`
	// Source tenant identifier. Required for CREATE_DRAFT jobs only.
	SourceTenant *string `json:"sourceTenant,omitempty"`
	// ID of the draft to be deployed. Required for CONFIG_DEPLOY_DRAFT jobs only.
	DraftId *string `json:"draftId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ScheduledActionResponseContent ScheduledActionResponseContent

// NewScheduledActionResponseContent instantiates a new ScheduledActionResponseContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledActionResponseContent() *ScheduledActionResponseContent {
	this := ScheduledActionResponseContent{}
	return &this
}

// NewScheduledActionResponseContentWithDefaults instantiates a new ScheduledActionResponseContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledActionResponseContentWithDefaults() *ScheduledActionResponseContent {
	this := ScheduledActionResponseContent{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ScheduledActionResponseContent) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledActionResponseContent) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ScheduledActionResponseContent) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ScheduledActionResponseContent) SetName(v string) {
	o.Name = &v
}

// GetBackupOptions returns the BackupOptions field value if set, zero value otherwise.
func (o *ScheduledActionResponseContent) GetBackupOptions() ScheduledActionResponseContentBackupOptions {
	if o == nil || IsNil(o.BackupOptions) {
		var ret ScheduledActionResponseContentBackupOptions
		return ret
	}
	return *o.BackupOptions
}

// GetBackupOptionsOk returns a tuple with the BackupOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledActionResponseContent) GetBackupOptionsOk() (*ScheduledActionResponseContentBackupOptions, bool) {
	if o == nil || IsNil(o.BackupOptions) {
		return nil, false
	}
	return o.BackupOptions, true
}

// HasBackupOptions returns a boolean if a field has been set.
func (o *ScheduledActionResponseContent) HasBackupOptions() bool {
	if o != nil && !IsNil(o.BackupOptions) {
		return true
	}

	return false
}

// SetBackupOptions gets a reference to the given ScheduledActionResponseContentBackupOptions and assigns it to the BackupOptions field.
func (o *ScheduledActionResponseContent) SetBackupOptions(v ScheduledActionResponseContentBackupOptions) {
	o.BackupOptions = &v
}

// GetSourceBackupId returns the SourceBackupId field value if set, zero value otherwise.
func (o *ScheduledActionResponseContent) GetSourceBackupId() string {
	if o == nil || IsNil(o.SourceBackupId) {
		var ret string
		return ret
	}
	return *o.SourceBackupId
}

// GetSourceBackupIdOk returns a tuple with the SourceBackupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledActionResponseContent) GetSourceBackupIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceBackupId) {
		return nil, false
	}
	return o.SourceBackupId, true
}

// HasSourceBackupId returns a boolean if a field has been set.
func (o *ScheduledActionResponseContent) HasSourceBackupId() bool {
	if o != nil && !IsNil(o.SourceBackupId) {
		return true
	}

	return false
}

// SetSourceBackupId gets a reference to the given string and assigns it to the SourceBackupId field.
func (o *ScheduledActionResponseContent) SetSourceBackupId(v string) {
	o.SourceBackupId = &v
}

// GetSourceTenant returns the SourceTenant field value if set, zero value otherwise.
func (o *ScheduledActionResponseContent) GetSourceTenant() string {
	if o == nil || IsNil(o.SourceTenant) {
		var ret string
		return ret
	}
	return *o.SourceTenant
}

// GetSourceTenantOk returns a tuple with the SourceTenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledActionResponseContent) GetSourceTenantOk() (*string, bool) {
	if o == nil || IsNil(o.SourceTenant) {
		return nil, false
	}
	return o.SourceTenant, true
}

// HasSourceTenant returns a boolean if a field has been set.
func (o *ScheduledActionResponseContent) HasSourceTenant() bool {
	if o != nil && !IsNil(o.SourceTenant) {
		return true
	}

	return false
}

// SetSourceTenant gets a reference to the given string and assigns it to the SourceTenant field.
func (o *ScheduledActionResponseContent) SetSourceTenant(v string) {
	o.SourceTenant = &v
}

// GetDraftId returns the DraftId field value if set, zero value otherwise.
func (o *ScheduledActionResponseContent) GetDraftId() string {
	if o == nil || IsNil(o.DraftId) {
		var ret string
		return ret
	}
	return *o.DraftId
}

// GetDraftIdOk returns a tuple with the DraftId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledActionResponseContent) GetDraftIdOk() (*string, bool) {
	if o == nil || IsNil(o.DraftId) {
		return nil, false
	}
	return o.DraftId, true
}

// HasDraftId returns a boolean if a field has been set.
func (o *ScheduledActionResponseContent) HasDraftId() bool {
	if o != nil && !IsNil(o.DraftId) {
		return true
	}

	return false
}

// SetDraftId gets a reference to the given string and assigns it to the DraftId field.
func (o *ScheduledActionResponseContent) SetDraftId(v string) {
	o.DraftId = &v
}

func (o ScheduledActionResponseContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScheduledActionResponseContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.BackupOptions) {
		toSerialize["backupOptions"] = o.BackupOptions
	}
	if !IsNil(o.SourceBackupId) {
		toSerialize["sourceBackupId"] = o.SourceBackupId
	}
	if !IsNil(o.SourceTenant) {
		toSerialize["sourceTenant"] = o.SourceTenant
	}
	if !IsNil(o.DraftId) {
		toSerialize["draftId"] = o.DraftId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ScheduledActionResponseContent) UnmarshalJSON(data []byte) (err error) {
	varScheduledActionResponseContent := _ScheduledActionResponseContent{}

	err = json.Unmarshal(data, &varScheduledActionResponseContent)

	if err != nil {
		return err
	}

	*o = ScheduledActionResponseContent(varScheduledActionResponseContent)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "backupOptions")
		delete(additionalProperties, "sourceBackupId")
		delete(additionalProperties, "sourceTenant")
		delete(additionalProperties, "draftId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableScheduledActionResponseContent struct {
	value *ScheduledActionResponseContent
	isSet bool
}

func (v NullableScheduledActionResponseContent) Get() *ScheduledActionResponseContent {
	return v.value
}

func (v *NullableScheduledActionResponseContent) Set(val *ScheduledActionResponseContent) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledActionResponseContent) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledActionResponseContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledActionResponseContent(val *ScheduledActionResponseContent) *NullableScheduledActionResponseContent {
	return &NullableScheduledActionResponseContent{value: val, isSet: true}
}

func (v NullableScheduledActionResponseContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledActionResponseContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


