/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the AccessRequestAdminItemStatusSodViolationContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessRequestAdminItemStatusSodViolationContext{}

// AccessRequestAdminItemStatusSodViolationContext struct for AccessRequestAdminItemStatusSodViolationContext
type AccessRequestAdminItemStatusSodViolationContext struct {
	// The status of SOD violation check
	State NullableString `json:"state,omitempty"`
	// The id of the Violation check event
	Uuid NullableString `json:"uuid,omitempty"`
	ViolationCheckResult *SodViolationCheckResult1 `json:"violationCheckResult,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccessRequestAdminItemStatusSodViolationContext AccessRequestAdminItemStatusSodViolationContext

// NewAccessRequestAdminItemStatusSodViolationContext instantiates a new AccessRequestAdminItemStatusSodViolationContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessRequestAdminItemStatusSodViolationContext() *AccessRequestAdminItemStatusSodViolationContext {
	this := AccessRequestAdminItemStatusSodViolationContext{}
	return &this
}

// NewAccessRequestAdminItemStatusSodViolationContextWithDefaults instantiates a new AccessRequestAdminItemStatusSodViolationContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessRequestAdminItemStatusSodViolationContextWithDefaults() *AccessRequestAdminItemStatusSodViolationContext {
	this := AccessRequestAdminItemStatusSodViolationContext{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessRequestAdminItemStatusSodViolationContext) GetState() string {
	if o == nil || IsNil(o.State.Get()) {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessRequestAdminItemStatusSodViolationContext) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *AccessRequestAdminItemStatusSodViolationContext) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *AccessRequestAdminItemStatusSodViolationContext) SetState(v string) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *AccessRequestAdminItemStatusSodViolationContext) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *AccessRequestAdminItemStatusSodViolationContext) UnsetState() {
	o.State.Unset()
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessRequestAdminItemStatusSodViolationContext) GetUuid() string {
	if o == nil || IsNil(o.Uuid.Get()) {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessRequestAdminItemStatusSodViolationContext) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *AccessRequestAdminItemStatusSodViolationContext) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *AccessRequestAdminItemStatusSodViolationContext) SetUuid(v string) {
	o.Uuid.Set(&v)
}
// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *AccessRequestAdminItemStatusSodViolationContext) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *AccessRequestAdminItemStatusSodViolationContext) UnsetUuid() {
	o.Uuid.Unset()
}

// GetViolationCheckResult returns the ViolationCheckResult field value if set, zero value otherwise.
func (o *AccessRequestAdminItemStatusSodViolationContext) GetViolationCheckResult() SodViolationCheckResult1 {
	if o == nil || IsNil(o.ViolationCheckResult) {
		var ret SodViolationCheckResult1
		return ret
	}
	return *o.ViolationCheckResult
}

// GetViolationCheckResultOk returns a tuple with the ViolationCheckResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRequestAdminItemStatusSodViolationContext) GetViolationCheckResultOk() (*SodViolationCheckResult1, bool) {
	if o == nil || IsNil(o.ViolationCheckResult) {
		return nil, false
	}
	return o.ViolationCheckResult, true
}

// HasViolationCheckResult returns a boolean if a field has been set.
func (o *AccessRequestAdminItemStatusSodViolationContext) HasViolationCheckResult() bool {
	if o != nil && !IsNil(o.ViolationCheckResult) {
		return true
	}

	return false
}

// SetViolationCheckResult gets a reference to the given SodViolationCheckResult1 and assigns it to the ViolationCheckResult field.
func (o *AccessRequestAdminItemStatusSodViolationContext) SetViolationCheckResult(v SodViolationCheckResult1) {
	o.ViolationCheckResult = &v
}

func (o AccessRequestAdminItemStatusSodViolationContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessRequestAdminItemStatusSodViolationContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}
	if !IsNil(o.ViolationCheckResult) {
		toSerialize["violationCheckResult"] = o.ViolationCheckResult
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccessRequestAdminItemStatusSodViolationContext) UnmarshalJSON(data []byte) (err error) {
	varAccessRequestAdminItemStatusSodViolationContext := _AccessRequestAdminItemStatusSodViolationContext{}

	err = json.Unmarshal(data, &varAccessRequestAdminItemStatusSodViolationContext)

	if err != nil {
		return err
	}

	*o = AccessRequestAdminItemStatusSodViolationContext(varAccessRequestAdminItemStatusSodViolationContext)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "state")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "violationCheckResult")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccessRequestAdminItemStatusSodViolationContext struct {
	value *AccessRequestAdminItemStatusSodViolationContext
	isSet bool
}

func (v NullableAccessRequestAdminItemStatusSodViolationContext) Get() *AccessRequestAdminItemStatusSodViolationContext {
	return v.value
}

func (v *NullableAccessRequestAdminItemStatusSodViolationContext) Set(val *AccessRequestAdminItemStatusSodViolationContext) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessRequestAdminItemStatusSodViolationContext) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessRequestAdminItemStatusSodViolationContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessRequestAdminItemStatusSodViolationContext(val *AccessRequestAdminItemStatusSodViolationContext) *NullableAccessRequestAdminItemStatusSodViolationContext {
	return &NullableAccessRequestAdminItemStatusSodViolationContext{value: val, isSet: true}
}

func (v NullableAccessRequestAdminItemStatusSodViolationContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessRequestAdminItemStatusSodViolationContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


