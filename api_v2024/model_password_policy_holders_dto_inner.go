/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the PasswordPolicyHoldersDtoInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PasswordPolicyHoldersDtoInner{}

// PasswordPolicyHoldersDtoInner struct for PasswordPolicyHoldersDtoInner
type PasswordPolicyHoldersDtoInner struct {
	// The password policy Id.
	PolicyId *string `json:"policyId,omitempty"`
	// The name of the password policy.
	PolicyName *string `json:"policyName,omitempty"`
	Selectors PasswordPolicyHoldersDtoAttributes `json:"selectors,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PasswordPolicyHoldersDtoInner PasswordPolicyHoldersDtoInner

// NewPasswordPolicyHoldersDtoInner instantiates a new PasswordPolicyHoldersDtoInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPasswordPolicyHoldersDtoInner() *PasswordPolicyHoldersDtoInner {
	this := PasswordPolicyHoldersDtoInner{}
	return &this
}

// NewPasswordPolicyHoldersDtoInnerWithDefaults instantiates a new PasswordPolicyHoldersDtoInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPasswordPolicyHoldersDtoInnerWithDefaults() *PasswordPolicyHoldersDtoInner {
	this := PasswordPolicyHoldersDtoInner{}
	return &this
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *PasswordPolicyHoldersDtoInner) GetPolicyId() string {
	if o == nil || IsNil(o.PolicyId) {
		var ret string
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordPolicyHoldersDtoInner) GetPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *PasswordPolicyHoldersDtoInner) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given string and assigns it to the PolicyId field.
func (o *PasswordPolicyHoldersDtoInner) SetPolicyId(v string) {
	o.PolicyId = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *PasswordPolicyHoldersDtoInner) GetPolicyName() string {
	if o == nil || IsNil(o.PolicyName) {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordPolicyHoldersDtoInner) GetPolicyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyName) {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *PasswordPolicyHoldersDtoInner) HasPolicyName() bool {
	if o != nil && !IsNil(o.PolicyName) {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *PasswordPolicyHoldersDtoInner) SetPolicyName(v string) {
	o.PolicyName = &v
}

// GetSelectors returns the Selectors field value if set, zero value otherwise.
func (o *PasswordPolicyHoldersDtoInner) GetSelectors() PasswordPolicyHoldersDtoAttributes {
	if o == nil || IsNil(o.Selectors) {
		var ret PasswordPolicyHoldersDtoAttributes
		return ret
	}
	return o.Selectors
}

// GetSelectorsOk returns a tuple with the Selectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordPolicyHoldersDtoInner) GetSelectorsOk() (PasswordPolicyHoldersDtoAttributes, bool) {
	if o == nil || IsNil(o.Selectors) {
		return PasswordPolicyHoldersDtoAttributes{}, false
	}
	return o.Selectors, true
}

// HasSelectors returns a boolean if a field has been set.
func (o *PasswordPolicyHoldersDtoInner) HasSelectors() bool {
	if o != nil && !IsNil(o.Selectors) {
		return true
	}

	return false
}

// SetSelectors gets a reference to the given PasswordPolicyHoldersDtoAttributes and assigns it to the Selectors field.
func (o *PasswordPolicyHoldersDtoInner) SetSelectors(v PasswordPolicyHoldersDtoAttributes) {
	o.Selectors = v
}

func (o PasswordPolicyHoldersDtoInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PasswordPolicyHoldersDtoInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PolicyId) {
		toSerialize["policyId"] = o.PolicyId
	}
	if !IsNil(o.PolicyName) {
		toSerialize["policyName"] = o.PolicyName
	}
	if !IsNil(o.Selectors) {
		toSerialize["selectors"] = o.Selectors
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PasswordPolicyHoldersDtoInner) UnmarshalJSON(data []byte) (err error) {
	varPasswordPolicyHoldersDtoInner := _PasswordPolicyHoldersDtoInner{}

	err = json.Unmarshal(data, &varPasswordPolicyHoldersDtoInner)

	if err != nil {
		return err
	}

	*o = PasswordPolicyHoldersDtoInner(varPasswordPolicyHoldersDtoInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "policyId")
		delete(additionalProperties, "policyName")
		delete(additionalProperties, "selectors")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePasswordPolicyHoldersDtoInner struct {
	value *PasswordPolicyHoldersDtoInner
	isSet bool
}

func (v NullablePasswordPolicyHoldersDtoInner) Get() *PasswordPolicyHoldersDtoInner {
	return v.value
}

func (v *NullablePasswordPolicyHoldersDtoInner) Set(val *PasswordPolicyHoldersDtoInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePasswordPolicyHoldersDtoInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePasswordPolicyHoldersDtoInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePasswordPolicyHoldersDtoInner(val *PasswordPolicyHoldersDtoInner) *NullablePasswordPolicyHoldersDtoInner {
	return &NullablePasswordPolicyHoldersDtoInner{value: val, isSet: true}
}

func (v NullablePasswordPolicyHoldersDtoInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePasswordPolicyHoldersDtoInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


