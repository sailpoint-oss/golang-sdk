/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
	"time"
)

// checks if the VendorConnectorMapping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VendorConnectorMapping{}

// VendorConnectorMapping struct for VendorConnectorMapping
type VendorConnectorMapping struct {
	// The unique identifier for the vendor-connector mapping.
	Id *string `json:"id,omitempty"`
	// The name of the vendor.
	Vendor *string `json:"vendor,omitempty"`
	// The name of the connector.
	Connector *string `json:"connector,omitempty"`
	// The creation timestamp of the mapping.
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// The identifier of the user who created the mapping.
	CreatedBy *string `json:"createdBy,omitempty"`
	UpdatedAt NullableVendorConnectorMappingUpdatedAt `json:"updatedAt,omitempty"`
	UpdatedBy NullableVendorConnectorMappingUpdatedBy `json:"updatedBy,omitempty"`
	DeletedAt NullableVendorConnectorMappingDeletedAt `json:"deletedAt,omitempty"`
	DeletedBy NullableVendorConnectorMappingDeletedBy `json:"deletedBy,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VendorConnectorMapping VendorConnectorMapping

// NewVendorConnectorMapping instantiates a new VendorConnectorMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVendorConnectorMapping() *VendorConnectorMapping {
	this := VendorConnectorMapping{}
	return &this
}

// NewVendorConnectorMappingWithDefaults instantiates a new VendorConnectorMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVendorConnectorMappingWithDefaults() *VendorConnectorMapping {
	this := VendorConnectorMapping{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VendorConnectorMapping) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VendorConnectorMapping) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VendorConnectorMapping) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VendorConnectorMapping) SetId(v string) {
	o.Id = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *VendorConnectorMapping) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VendorConnectorMapping) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *VendorConnectorMapping) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *VendorConnectorMapping) SetVendor(v string) {
	o.Vendor = &v
}

// GetConnector returns the Connector field value if set, zero value otherwise.
func (o *VendorConnectorMapping) GetConnector() string {
	if o == nil || IsNil(o.Connector) {
		var ret string
		return ret
	}
	return *o.Connector
}

// GetConnectorOk returns a tuple with the Connector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VendorConnectorMapping) GetConnectorOk() (*string, bool) {
	if o == nil || IsNil(o.Connector) {
		return nil, false
	}
	return o.Connector, true
}

// HasConnector returns a boolean if a field has been set.
func (o *VendorConnectorMapping) HasConnector() bool {
	if o != nil && !IsNil(o.Connector) {
		return true
	}

	return false
}

// SetConnector gets a reference to the given string and assigns it to the Connector field.
func (o *VendorConnectorMapping) SetConnector(v string) {
	o.Connector = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VendorConnectorMapping) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VendorConnectorMapping) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VendorConnectorMapping) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *VendorConnectorMapping) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *VendorConnectorMapping) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VendorConnectorMapping) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *VendorConnectorMapping) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *VendorConnectorMapping) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VendorConnectorMapping) GetUpdatedAt() VendorConnectorMappingUpdatedAt {
	if o == nil || IsNil(o.UpdatedAt.Get()) {
		var ret VendorConnectorMappingUpdatedAt
		return ret
	}
	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VendorConnectorMapping) GetUpdatedAtOk() (*VendorConnectorMappingUpdatedAt, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *VendorConnectorMapping) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt.IsSet() {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given NullableVendorConnectorMappingUpdatedAt and assigns it to the UpdatedAt field.
func (o *VendorConnectorMapping) SetUpdatedAt(v VendorConnectorMappingUpdatedAt) {
	o.UpdatedAt.Set(&v)
}
// SetUpdatedAtNil sets the value for UpdatedAt to be an explicit nil
func (o *VendorConnectorMapping) SetUpdatedAtNil() {
	o.UpdatedAt.Set(nil)
}

// UnsetUpdatedAt ensures that no value is present for UpdatedAt, not even an explicit nil
func (o *VendorConnectorMapping) UnsetUpdatedAt() {
	o.UpdatedAt.Unset()
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VendorConnectorMapping) GetUpdatedBy() VendorConnectorMappingUpdatedBy {
	if o == nil || IsNil(o.UpdatedBy.Get()) {
		var ret VendorConnectorMappingUpdatedBy
		return ret
	}
	return *o.UpdatedBy.Get()
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VendorConnectorMapping) GetUpdatedByOk() (*VendorConnectorMappingUpdatedBy, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedBy.Get(), o.UpdatedBy.IsSet()
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *VendorConnectorMapping) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy.IsSet() {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given NullableVendorConnectorMappingUpdatedBy and assigns it to the UpdatedBy field.
func (o *VendorConnectorMapping) SetUpdatedBy(v VendorConnectorMappingUpdatedBy) {
	o.UpdatedBy.Set(&v)
}
// SetUpdatedByNil sets the value for UpdatedBy to be an explicit nil
func (o *VendorConnectorMapping) SetUpdatedByNil() {
	o.UpdatedBy.Set(nil)
}

// UnsetUpdatedBy ensures that no value is present for UpdatedBy, not even an explicit nil
func (o *VendorConnectorMapping) UnsetUpdatedBy() {
	o.UpdatedBy.Unset()
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VendorConnectorMapping) GetDeletedAt() VendorConnectorMappingDeletedAt {
	if o == nil || IsNil(o.DeletedAt.Get()) {
		var ret VendorConnectorMappingDeletedAt
		return ret
	}
	return *o.DeletedAt.Get()
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VendorConnectorMapping) GetDeletedAtOk() (*VendorConnectorMappingDeletedAt, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedAt.Get(), o.DeletedAt.IsSet()
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *VendorConnectorMapping) HasDeletedAt() bool {
	if o != nil && o.DeletedAt.IsSet() {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given NullableVendorConnectorMappingDeletedAt and assigns it to the DeletedAt field.
func (o *VendorConnectorMapping) SetDeletedAt(v VendorConnectorMappingDeletedAt) {
	o.DeletedAt.Set(&v)
}
// SetDeletedAtNil sets the value for DeletedAt to be an explicit nil
func (o *VendorConnectorMapping) SetDeletedAtNil() {
	o.DeletedAt.Set(nil)
}

// UnsetDeletedAt ensures that no value is present for DeletedAt, not even an explicit nil
func (o *VendorConnectorMapping) UnsetDeletedAt() {
	o.DeletedAt.Unset()
}

// GetDeletedBy returns the DeletedBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VendorConnectorMapping) GetDeletedBy() VendorConnectorMappingDeletedBy {
	if o == nil || IsNil(o.DeletedBy.Get()) {
		var ret VendorConnectorMappingDeletedBy
		return ret
	}
	return *o.DeletedBy.Get()
}

// GetDeletedByOk returns a tuple with the DeletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VendorConnectorMapping) GetDeletedByOk() (*VendorConnectorMappingDeletedBy, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedBy.Get(), o.DeletedBy.IsSet()
}

// HasDeletedBy returns a boolean if a field has been set.
func (o *VendorConnectorMapping) HasDeletedBy() bool {
	if o != nil && o.DeletedBy.IsSet() {
		return true
	}

	return false
}

// SetDeletedBy gets a reference to the given NullableVendorConnectorMappingDeletedBy and assigns it to the DeletedBy field.
func (o *VendorConnectorMapping) SetDeletedBy(v VendorConnectorMappingDeletedBy) {
	o.DeletedBy.Set(&v)
}
// SetDeletedByNil sets the value for DeletedBy to be an explicit nil
func (o *VendorConnectorMapping) SetDeletedByNil() {
	o.DeletedBy.Set(nil)
}

// UnsetDeletedBy ensures that no value is present for DeletedBy, not even an explicit nil
func (o *VendorConnectorMapping) UnsetDeletedBy() {
	o.DeletedBy.Unset()
}

func (o VendorConnectorMapping) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VendorConnectorMapping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.Connector) {
		toSerialize["connector"] = o.Connector
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.UpdatedAt.IsSet() {
		toSerialize["updatedAt"] = o.UpdatedAt.Get()
	}
	if o.UpdatedBy.IsSet() {
		toSerialize["updatedBy"] = o.UpdatedBy.Get()
	}
	if o.DeletedAt.IsSet() {
		toSerialize["deletedAt"] = o.DeletedAt.Get()
	}
	if o.DeletedBy.IsSet() {
		toSerialize["deletedBy"] = o.DeletedBy.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VendorConnectorMapping) UnmarshalJSON(data []byte) (err error) {
	varVendorConnectorMapping := _VendorConnectorMapping{}

	err = json.Unmarshal(data, &varVendorConnectorMapping)

	if err != nil {
		return err
	}

	*o = VendorConnectorMapping(varVendorConnectorMapping)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "vendor")
		delete(additionalProperties, "connector")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "createdBy")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "updatedBy")
		delete(additionalProperties, "deletedAt")
		delete(additionalProperties, "deletedBy")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVendorConnectorMapping struct {
	value *VendorConnectorMapping
	isSet bool
}

func (v NullableVendorConnectorMapping) Get() *VendorConnectorMapping {
	return v.value
}

func (v *NullableVendorConnectorMapping) Set(val *VendorConnectorMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableVendorConnectorMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableVendorConnectorMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVendorConnectorMapping(val *VendorConnectorMapping) *NullableVendorConnectorMapping {
	return &NullableVendorConnectorMapping{value: val, isSet: true}
}

func (v NullableVendorConnectorMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVendorConnectorMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


