/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the AccountsSelectionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountsSelectionResponse{}

// AccountsSelectionResponse struct for AccountsSelectionResponse
type AccountsSelectionResponse struct {
	// A list of available account selections per identity in the request, for all the requested items
	Identities []IdentityAccountSelections `json:"identities,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountsSelectionResponse AccountsSelectionResponse

// NewAccountsSelectionResponse instantiates a new AccountsSelectionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountsSelectionResponse() *AccountsSelectionResponse {
	this := AccountsSelectionResponse{}
	return &this
}

// NewAccountsSelectionResponseWithDefaults instantiates a new AccountsSelectionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountsSelectionResponseWithDefaults() *AccountsSelectionResponse {
	this := AccountsSelectionResponse{}
	return &this
}

// GetIdentities returns the Identities field value if set, zero value otherwise.
func (o *AccountsSelectionResponse) GetIdentities() []IdentityAccountSelections {
	if o == nil || IsNil(o.Identities) {
		var ret []IdentityAccountSelections
		return ret
	}
	return o.Identities
}

// GetIdentitiesOk returns a tuple with the Identities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountsSelectionResponse) GetIdentitiesOk() ([]IdentityAccountSelections, bool) {
	if o == nil || IsNil(o.Identities) {
		return nil, false
	}
	return o.Identities, true
}

// HasIdentities returns a boolean if a field has been set.
func (o *AccountsSelectionResponse) HasIdentities() bool {
	if o != nil && !IsNil(o.Identities) {
		return true
	}

	return false
}

// SetIdentities gets a reference to the given []IdentityAccountSelections and assigns it to the Identities field.
func (o *AccountsSelectionResponse) SetIdentities(v []IdentityAccountSelections) {
	o.Identities = v
}

func (o AccountsSelectionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountsSelectionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Identities) {
		toSerialize["identities"] = o.Identities
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountsSelectionResponse) UnmarshalJSON(data []byte) (err error) {
	varAccountsSelectionResponse := _AccountsSelectionResponse{}

	err = json.Unmarshal(data, &varAccountsSelectionResponse)

	if err != nil {
		return err
	}

	*o = AccountsSelectionResponse(varAccountsSelectionResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "identities")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountsSelectionResponse struct {
	value *AccountsSelectionResponse
	isSet bool
}

func (v NullableAccountsSelectionResponse) Get() *AccountsSelectionResponse {
	return v.value
}

func (v *NullableAccountsSelectionResponse) Set(val *AccountsSelectionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountsSelectionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountsSelectionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountsSelectionResponse(val *AccountsSelectionResponse) *NullableAccountsSelectionResponse {
	return &NullableAccountsSelectionResponse{value: val, isSet: true}
}

func (v NullableAccountsSelectionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountsSelectionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


