/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
	
	"fmt"
)

// checks if the SlimCampaign type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SlimCampaign{}

// SlimCampaign struct for SlimCampaign
type SlimCampaign struct {
	// Id of the campaign
	Id NullableString `json:"id,omitempty"`
	// The campaign name. If this object is part of a template, special formatting applies; see the `/campaign-templates/{id}/generate` endpoint documentation for details. 
	Name string `json:"name"`
	// The campaign description. If this object is part of a template, special formatting applies; see the `/campaign-templates/{id}/generate` endpoint documentation for details. 
	Description NullableString `json:"description"`
	// The campaign's completion deadline.  This date must be in the future in order to activate the campaign.  If you try to activate a campaign with a deadline of today or in the past, you will receive a 400 error response.
	Deadline NullableTime `json:"deadline,omitempty"`
	// The type of campaign. Could be extended in the future.
	Type string `json:"type"`
	// Enables email notification for this campaign
	EmailNotificationEnabled *bool `json:"emailNotificationEnabled,omitempty"`
	// Allows auto revoke for this campaign
	AutoRevokeAllowed *bool `json:"autoRevokeAllowed,omitempty"`
	// Enables IAI for this campaign. Accepts true even if the IAI product feature is off. If IAI is turned off then campaigns generated from this template will indicate false. The real value will then be returned if IAI is ever enabled for the org in the future.
	RecommendationsEnabled *bool `json:"recommendationsEnabled,omitempty"`
	// The campaign's current status.
	Status NullableString `json:"status,omitempty"`
	// The correlatedStatus of the campaign. Only SOURCE_OWNER campaigns can be Uncorrelated. An Uncorrelated certification campaign only includes Uncorrelated identities (An identity is uncorrelated if it has no accounts on an authoritative source).
	CorrelatedStatus *string `json:"correlatedStatus,omitempty"`
	// Created time of the campaign
	Created NullableTime `json:"created,omitempty"`
	// The total number of certifications in this campaign.
	TotalCertifications NullableInt32 `json:"totalCertifications,omitempty"`
	// The number of completed certifications in this campaign.
	CompletedCertifications NullableInt32 `json:"completedCertifications,omitempty"`
	// A list of errors and warnings that have accumulated.
	Alerts []CampaignAlert `json:"alerts,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SlimCampaign SlimCampaign

// NewSlimCampaign instantiates a new SlimCampaign object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSlimCampaign(name string, description NullableString, type_ string) *SlimCampaign {
	this := SlimCampaign{}
	this.Name = name
	this.Description = description
	this.Type = type_
	var emailNotificationEnabled bool = false
	this.EmailNotificationEnabled = &emailNotificationEnabled
	var autoRevokeAllowed bool = false
	this.AutoRevokeAllowed = &autoRevokeAllowed
	var recommendationsEnabled bool = false
	this.RecommendationsEnabled = &recommendationsEnabled
	return &this
}

// NewSlimCampaignWithDefaults instantiates a new SlimCampaign object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSlimCampaignWithDefaults() *SlimCampaign {
	this := SlimCampaign{}
	var emailNotificationEnabled bool = false
	this.EmailNotificationEnabled = &emailNotificationEnabled
	var autoRevokeAllowed bool = false
	this.AutoRevokeAllowed = &autoRevokeAllowed
	var recommendationsEnabled bool = false
	this.RecommendationsEnabled = &recommendationsEnabled
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlimCampaign) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlimCampaign) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *SlimCampaign) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *SlimCampaign) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *SlimCampaign) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *SlimCampaign) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value
func (o *SlimCampaign) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SlimCampaign) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SlimCampaign) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SlimCampaign) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlimCampaign) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *SlimCampaign) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetDeadline returns the Deadline field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlimCampaign) GetDeadline() SailPointTime {
	if o == nil || IsNil(o.Deadline.Get()) {
		var ret SailPointTime
		return ret
	}
	return *o.Deadline.Get()
}

// GetDeadlineOk returns a tuple with the Deadline field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlimCampaign) GetDeadlineOk() (*SailPointTime, bool) {
	if o == nil {
		return nil, false
	}
	return o.Deadline.Get(), o.Deadline.IsSet()
}

// HasDeadline returns a boolean if a field has been set.
func (o *SlimCampaign) HasDeadline() bool {
	if o != nil && o.Deadline.IsSet() {
		return true
	}

	return false
}

// SetDeadline gets a reference to the given NullableTime and assigns it to the Deadline field.
func (o *SlimCampaign) SetDeadline(v SailPointTime) {
	o.Deadline.Set(&v)
}
// SetDeadlineNil sets the value for Deadline to be an explicit nil
func (o *SlimCampaign) SetDeadlineNil() {
	o.Deadline.Set(nil)
}

// UnsetDeadline ensures that no value is present for Deadline, not even an explicit nil
func (o *SlimCampaign) UnsetDeadline() {
	o.Deadline.Unset()
}

// GetType returns the Type field value
func (o *SlimCampaign) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SlimCampaign) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SlimCampaign) SetType(v string) {
	o.Type = v
}

// GetEmailNotificationEnabled returns the EmailNotificationEnabled field value if set, zero value otherwise.
func (o *SlimCampaign) GetEmailNotificationEnabled() bool {
	if o == nil || IsNil(o.EmailNotificationEnabled) {
		var ret bool
		return ret
	}
	return *o.EmailNotificationEnabled
}

// GetEmailNotificationEnabledOk returns a tuple with the EmailNotificationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlimCampaign) GetEmailNotificationEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.EmailNotificationEnabled) {
		return nil, false
	}
	return o.EmailNotificationEnabled, true
}

// HasEmailNotificationEnabled returns a boolean if a field has been set.
func (o *SlimCampaign) HasEmailNotificationEnabled() bool {
	if o != nil && !IsNil(o.EmailNotificationEnabled) {
		return true
	}

	return false
}

// SetEmailNotificationEnabled gets a reference to the given bool and assigns it to the EmailNotificationEnabled field.
func (o *SlimCampaign) SetEmailNotificationEnabled(v bool) {
	o.EmailNotificationEnabled = &v
}

// GetAutoRevokeAllowed returns the AutoRevokeAllowed field value if set, zero value otherwise.
func (o *SlimCampaign) GetAutoRevokeAllowed() bool {
	if o == nil || IsNil(o.AutoRevokeAllowed) {
		var ret bool
		return ret
	}
	return *o.AutoRevokeAllowed
}

// GetAutoRevokeAllowedOk returns a tuple with the AutoRevokeAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlimCampaign) GetAutoRevokeAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoRevokeAllowed) {
		return nil, false
	}
	return o.AutoRevokeAllowed, true
}

// HasAutoRevokeAllowed returns a boolean if a field has been set.
func (o *SlimCampaign) HasAutoRevokeAllowed() bool {
	if o != nil && !IsNil(o.AutoRevokeAllowed) {
		return true
	}

	return false
}

// SetAutoRevokeAllowed gets a reference to the given bool and assigns it to the AutoRevokeAllowed field.
func (o *SlimCampaign) SetAutoRevokeAllowed(v bool) {
	o.AutoRevokeAllowed = &v
}

// GetRecommendationsEnabled returns the RecommendationsEnabled field value if set, zero value otherwise.
func (o *SlimCampaign) GetRecommendationsEnabled() bool {
	if o == nil || IsNil(o.RecommendationsEnabled) {
		var ret bool
		return ret
	}
	return *o.RecommendationsEnabled
}

// GetRecommendationsEnabledOk returns a tuple with the RecommendationsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlimCampaign) GetRecommendationsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.RecommendationsEnabled) {
		return nil, false
	}
	return o.RecommendationsEnabled, true
}

// HasRecommendationsEnabled returns a boolean if a field has been set.
func (o *SlimCampaign) HasRecommendationsEnabled() bool {
	if o != nil && !IsNil(o.RecommendationsEnabled) {
		return true
	}

	return false
}

// SetRecommendationsEnabled gets a reference to the given bool and assigns it to the RecommendationsEnabled field.
func (o *SlimCampaign) SetRecommendationsEnabled(v bool) {
	o.RecommendationsEnabled = &v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlimCampaign) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlimCampaign) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *SlimCampaign) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *SlimCampaign) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *SlimCampaign) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *SlimCampaign) UnsetStatus() {
	o.Status.Unset()
}

// GetCorrelatedStatus returns the CorrelatedStatus field value if set, zero value otherwise.
func (o *SlimCampaign) GetCorrelatedStatus() string {
	if o == nil || IsNil(o.CorrelatedStatus) {
		var ret string
		return ret
	}
	return *o.CorrelatedStatus
}

// GetCorrelatedStatusOk returns a tuple with the CorrelatedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SlimCampaign) GetCorrelatedStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CorrelatedStatus) {
		return nil, false
	}
	return o.CorrelatedStatus, true
}

// HasCorrelatedStatus returns a boolean if a field has been set.
func (o *SlimCampaign) HasCorrelatedStatus() bool {
	if o != nil && !IsNil(o.CorrelatedStatus) {
		return true
	}

	return false
}

// SetCorrelatedStatus gets a reference to the given string and assigns it to the CorrelatedStatus field.
func (o *SlimCampaign) SetCorrelatedStatus(v string) {
	o.CorrelatedStatus = &v
}

// GetCreated returns the Created field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlimCampaign) GetCreated() SailPointTime {
	if o == nil || IsNil(o.Created.Get()) {
		var ret SailPointTime
		return ret
	}
	return *o.Created.Get()
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlimCampaign) GetCreatedOk() (*SailPointTime, bool) {
	if o == nil {
		return nil, false
	}
	return o.Created.Get(), o.Created.IsSet()
}

// HasCreated returns a boolean if a field has been set.
func (o *SlimCampaign) HasCreated() bool {
	if o != nil && o.Created.IsSet() {
		return true
	}

	return false
}

// SetCreated gets a reference to the given NullableTime and assigns it to the Created field.
func (o *SlimCampaign) SetCreated(v SailPointTime) {
	o.Created.Set(&v)
}
// SetCreatedNil sets the value for Created to be an explicit nil
func (o *SlimCampaign) SetCreatedNil() {
	o.Created.Set(nil)
}

// UnsetCreated ensures that no value is present for Created, not even an explicit nil
func (o *SlimCampaign) UnsetCreated() {
	o.Created.Unset()
}

// GetTotalCertifications returns the TotalCertifications field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlimCampaign) GetTotalCertifications() int32 {
	if o == nil || IsNil(o.TotalCertifications.Get()) {
		var ret int32
		return ret
	}
	return *o.TotalCertifications.Get()
}

// GetTotalCertificationsOk returns a tuple with the TotalCertifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlimCampaign) GetTotalCertificationsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalCertifications.Get(), o.TotalCertifications.IsSet()
}

// HasTotalCertifications returns a boolean if a field has been set.
func (o *SlimCampaign) HasTotalCertifications() bool {
	if o != nil && o.TotalCertifications.IsSet() {
		return true
	}

	return false
}

// SetTotalCertifications gets a reference to the given NullableInt32 and assigns it to the TotalCertifications field.
func (o *SlimCampaign) SetTotalCertifications(v int32) {
	o.TotalCertifications.Set(&v)
}
// SetTotalCertificationsNil sets the value for TotalCertifications to be an explicit nil
func (o *SlimCampaign) SetTotalCertificationsNil() {
	o.TotalCertifications.Set(nil)
}

// UnsetTotalCertifications ensures that no value is present for TotalCertifications, not even an explicit nil
func (o *SlimCampaign) UnsetTotalCertifications() {
	o.TotalCertifications.Unset()
}

// GetCompletedCertifications returns the CompletedCertifications field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlimCampaign) GetCompletedCertifications() int32 {
	if o == nil || IsNil(o.CompletedCertifications.Get()) {
		var ret int32
		return ret
	}
	return *o.CompletedCertifications.Get()
}

// GetCompletedCertificationsOk returns a tuple with the CompletedCertifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlimCampaign) GetCompletedCertificationsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedCertifications.Get(), o.CompletedCertifications.IsSet()
}

// HasCompletedCertifications returns a boolean if a field has been set.
func (o *SlimCampaign) HasCompletedCertifications() bool {
	if o != nil && o.CompletedCertifications.IsSet() {
		return true
	}

	return false
}

// SetCompletedCertifications gets a reference to the given NullableInt32 and assigns it to the CompletedCertifications field.
func (o *SlimCampaign) SetCompletedCertifications(v int32) {
	o.CompletedCertifications.Set(&v)
}
// SetCompletedCertificationsNil sets the value for CompletedCertifications to be an explicit nil
func (o *SlimCampaign) SetCompletedCertificationsNil() {
	o.CompletedCertifications.Set(nil)
}

// UnsetCompletedCertifications ensures that no value is present for CompletedCertifications, not even an explicit nil
func (o *SlimCampaign) UnsetCompletedCertifications() {
	o.CompletedCertifications.Unset()
}

// GetAlerts returns the Alerts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SlimCampaign) GetAlerts() []CampaignAlert {
	if o == nil {
		var ret []CampaignAlert
		return ret
	}
	return o.Alerts
}

// GetAlertsOk returns a tuple with the Alerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SlimCampaign) GetAlertsOk() ([]CampaignAlert, bool) {
	if o == nil || IsNil(o.Alerts) {
		return nil, false
	}
	return o.Alerts, true
}

// HasAlerts returns a boolean if a field has been set.
func (o *SlimCampaign) HasAlerts() bool {
	if o != nil && !IsNil(o.Alerts) {
		return true
	}

	return false
}

// SetAlerts gets a reference to the given []CampaignAlert and assigns it to the Alerts field.
func (o *SlimCampaign) SetAlerts(v []CampaignAlert) {
	o.Alerts = v
}

func (o SlimCampaign) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SlimCampaign) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description.Get()
	if o.Deadline.IsSet() {
		toSerialize["deadline"] = o.Deadline.Get()
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.EmailNotificationEnabled) {
		toSerialize["emailNotificationEnabled"] = o.EmailNotificationEnabled
	}
	if !IsNil(o.AutoRevokeAllowed) {
		toSerialize["autoRevokeAllowed"] = o.AutoRevokeAllowed
	}
	if !IsNil(o.RecommendationsEnabled) {
		toSerialize["recommendationsEnabled"] = o.RecommendationsEnabled
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if !IsNil(o.CorrelatedStatus) {
		toSerialize["correlatedStatus"] = o.CorrelatedStatus
	}
	if o.Created.IsSet() {
		toSerialize["created"] = o.Created.Get()
	}
	if o.TotalCertifications.IsSet() {
		toSerialize["totalCertifications"] = o.TotalCertifications.Get()
	}
	if o.CompletedCertifications.IsSet() {
		toSerialize["completedCertifications"] = o.CompletedCertifications.Get()
	}
	if o.Alerts != nil {
		toSerialize["alerts"] = o.Alerts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SlimCampaign) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"description",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSlimCampaign := _SlimCampaign{}

	err = json.Unmarshal(data, &varSlimCampaign)

	if err != nil {
		return err
	}

	*o = SlimCampaign(varSlimCampaign)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "deadline")
		delete(additionalProperties, "type")
		delete(additionalProperties, "emailNotificationEnabled")
		delete(additionalProperties, "autoRevokeAllowed")
		delete(additionalProperties, "recommendationsEnabled")
		delete(additionalProperties, "status")
		delete(additionalProperties, "correlatedStatus")
		delete(additionalProperties, "created")
		delete(additionalProperties, "totalCertifications")
		delete(additionalProperties, "completedCertifications")
		delete(additionalProperties, "alerts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSlimCampaign struct {
	value *SlimCampaign
	isSet bool
}

func (v NullableSlimCampaign) Get() *SlimCampaign {
	return v.value
}

func (v *NullableSlimCampaign) Set(val *SlimCampaign) {
	v.value = val
	v.isSet = true
}

func (v NullableSlimCampaign) IsSet() bool {
	return v.isSet
}

func (v *NullableSlimCampaign) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSlimCampaign(val *SlimCampaign) *NullableSlimCampaign {
	return &NullableSlimCampaign{value: val, isSet: true}
}

func (v NullableSlimCampaign) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSlimCampaign) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


