/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the AttributeMappingsAllOfTarget type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttributeMappingsAllOfTarget{}

// AttributeMappingsAllOfTarget Targeted Entity
type AttributeMappingsAllOfTarget struct {
	// The type of target entity
	Type *string `json:"type,omitempty"`
	// Name of the targeted attribute
	AttributeName *string `json:"attributeName,omitempty"`
	// The ID of Source
	SourceId *string `json:"sourceId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AttributeMappingsAllOfTarget AttributeMappingsAllOfTarget

// NewAttributeMappingsAllOfTarget instantiates a new AttributeMappingsAllOfTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeMappingsAllOfTarget() *AttributeMappingsAllOfTarget {
	this := AttributeMappingsAllOfTarget{}
	return &this
}

// NewAttributeMappingsAllOfTargetWithDefaults instantiates a new AttributeMappingsAllOfTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeMappingsAllOfTargetWithDefaults() *AttributeMappingsAllOfTarget {
	this := AttributeMappingsAllOfTarget{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AttributeMappingsAllOfTarget) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeMappingsAllOfTarget) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AttributeMappingsAllOfTarget) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AttributeMappingsAllOfTarget) SetType(v string) {
	o.Type = &v
}

// GetAttributeName returns the AttributeName field value if set, zero value otherwise.
func (o *AttributeMappingsAllOfTarget) GetAttributeName() string {
	if o == nil || IsNil(o.AttributeName) {
		var ret string
		return ret
	}
	return *o.AttributeName
}

// GetAttributeNameOk returns a tuple with the AttributeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeMappingsAllOfTarget) GetAttributeNameOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeName) {
		return nil, false
	}
	return o.AttributeName, true
}

// HasAttributeName returns a boolean if a field has been set.
func (o *AttributeMappingsAllOfTarget) HasAttributeName() bool {
	if o != nil && !IsNil(o.AttributeName) {
		return true
	}

	return false
}

// SetAttributeName gets a reference to the given string and assigns it to the AttributeName field.
func (o *AttributeMappingsAllOfTarget) SetAttributeName(v string) {
	o.AttributeName = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *AttributeMappingsAllOfTarget) GetSourceId() string {
	if o == nil || IsNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeMappingsAllOfTarget) GetSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *AttributeMappingsAllOfTarget) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *AttributeMappingsAllOfTarget) SetSourceId(v string) {
	o.SourceId = &v
}

func (o AttributeMappingsAllOfTarget) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttributeMappingsAllOfTarget) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.AttributeName) {
		toSerialize["attributeName"] = o.AttributeName
	}
	if !IsNil(o.SourceId) {
		toSerialize["sourceId"] = o.SourceId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AttributeMappingsAllOfTarget) UnmarshalJSON(data []byte) (err error) {
	varAttributeMappingsAllOfTarget := _AttributeMappingsAllOfTarget{}

	err = json.Unmarshal(data, &varAttributeMappingsAllOfTarget)

	if err != nil {
		return err
	}

	*o = AttributeMappingsAllOfTarget(varAttributeMappingsAllOfTarget)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "attributeName")
		delete(additionalProperties, "sourceId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAttributeMappingsAllOfTarget struct {
	value *AttributeMappingsAllOfTarget
	isSet bool
}

func (v NullableAttributeMappingsAllOfTarget) Get() *AttributeMappingsAllOfTarget {
	return v.value
}

func (v *NullableAttributeMappingsAllOfTarget) Set(val *AttributeMappingsAllOfTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeMappingsAllOfTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeMappingsAllOfTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeMappingsAllOfTarget(val *AttributeMappingsAllOfTarget) *NullableAttributeMappingsAllOfTarget {
	return &NullableAttributeMappingsAllOfTarget{value: val, isSet: true}
}

func (v NullableAttributeMappingsAllOfTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeMappingsAllOfTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


