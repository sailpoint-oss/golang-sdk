/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the EntitlementDocumentAllOfPermissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitlementDocumentAllOfPermissions{}

// EntitlementDocumentAllOfPermissions struct for EntitlementDocumentAllOfPermissions
type EntitlementDocumentAllOfPermissions struct {
	// The target the permission would grants rights on.
	Target *string `json:"target,omitempty"`
	// All the rights (e.g. actions) that this permission allows on the target
	Rights []string `json:"rights,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EntitlementDocumentAllOfPermissions EntitlementDocumentAllOfPermissions

// NewEntitlementDocumentAllOfPermissions instantiates a new EntitlementDocumentAllOfPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitlementDocumentAllOfPermissions() *EntitlementDocumentAllOfPermissions {
	this := EntitlementDocumentAllOfPermissions{}
	return &this
}

// NewEntitlementDocumentAllOfPermissionsWithDefaults instantiates a new EntitlementDocumentAllOfPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitlementDocumentAllOfPermissionsWithDefaults() *EntitlementDocumentAllOfPermissions {
	this := EntitlementDocumentAllOfPermissions{}
	return &this
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *EntitlementDocumentAllOfPermissions) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementDocumentAllOfPermissions) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *EntitlementDocumentAllOfPermissions) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *EntitlementDocumentAllOfPermissions) SetTarget(v string) {
	o.Target = &v
}

// GetRights returns the Rights field value if set, zero value otherwise.
func (o *EntitlementDocumentAllOfPermissions) GetRights() []string {
	if o == nil || IsNil(o.Rights) {
		var ret []string
		return ret
	}
	return o.Rights
}

// GetRightsOk returns a tuple with the Rights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementDocumentAllOfPermissions) GetRightsOk() ([]string, bool) {
	if o == nil || IsNil(o.Rights) {
		return nil, false
	}
	return o.Rights, true
}

// HasRights returns a boolean if a field has been set.
func (o *EntitlementDocumentAllOfPermissions) HasRights() bool {
	if o != nil && !IsNil(o.Rights) {
		return true
	}

	return false
}

// SetRights gets a reference to the given []string and assigns it to the Rights field.
func (o *EntitlementDocumentAllOfPermissions) SetRights(v []string) {
	o.Rights = v
}

func (o EntitlementDocumentAllOfPermissions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitlementDocumentAllOfPermissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.Rights) {
		toSerialize["rights"] = o.Rights
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EntitlementDocumentAllOfPermissions) UnmarshalJSON(data []byte) (err error) {
	varEntitlementDocumentAllOfPermissions := _EntitlementDocumentAllOfPermissions{}

	err = json.Unmarshal(data, &varEntitlementDocumentAllOfPermissions)

	if err != nil {
		return err
	}

	*o = EntitlementDocumentAllOfPermissions(varEntitlementDocumentAllOfPermissions)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "target")
		delete(additionalProperties, "rights")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEntitlementDocumentAllOfPermissions struct {
	value *EntitlementDocumentAllOfPermissions
	isSet bool
}

func (v NullableEntitlementDocumentAllOfPermissions) Get() *EntitlementDocumentAllOfPermissions {
	return v.value
}

func (v *NullableEntitlementDocumentAllOfPermissions) Set(val *EntitlementDocumentAllOfPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitlementDocumentAllOfPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitlementDocumentAllOfPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitlementDocumentAllOfPermissions(val *EntitlementDocumentAllOfPermissions) *NullableEntitlementDocumentAllOfPermissions {
	return &NullableEntitlementDocumentAllOfPermissions{value: val, isSet: true}
}

func (v NullableEntitlementDocumentAllOfPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitlementDocumentAllOfPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


