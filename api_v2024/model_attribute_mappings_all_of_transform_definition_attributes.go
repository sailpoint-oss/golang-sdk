/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the AttributeMappingsAllOfTransformDefinitionAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttributeMappingsAllOfTransformDefinitionAttributes{}

// AttributeMappingsAllOfTransformDefinitionAttributes attributes object
type AttributeMappingsAllOfTransformDefinitionAttributes struct {
	Input *AttributeMappingsAllOfTransformDefinitionAttributesInput `json:"input,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AttributeMappingsAllOfTransformDefinitionAttributes AttributeMappingsAllOfTransformDefinitionAttributes

// NewAttributeMappingsAllOfTransformDefinitionAttributes instantiates a new AttributeMappingsAllOfTransformDefinitionAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeMappingsAllOfTransformDefinitionAttributes() *AttributeMappingsAllOfTransformDefinitionAttributes {
	this := AttributeMappingsAllOfTransformDefinitionAttributes{}
	return &this
}

// NewAttributeMappingsAllOfTransformDefinitionAttributesWithDefaults instantiates a new AttributeMappingsAllOfTransformDefinitionAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeMappingsAllOfTransformDefinitionAttributesWithDefaults() *AttributeMappingsAllOfTransformDefinitionAttributes {
	this := AttributeMappingsAllOfTransformDefinitionAttributes{}
	return &this
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *AttributeMappingsAllOfTransformDefinitionAttributes) GetInput() AttributeMappingsAllOfTransformDefinitionAttributesInput {
	if o == nil || IsNil(o.Input) {
		var ret AttributeMappingsAllOfTransformDefinitionAttributesInput
		return ret
	}
	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeMappingsAllOfTransformDefinitionAttributes) GetInputOk() (*AttributeMappingsAllOfTransformDefinitionAttributesInput, bool) {
	if o == nil || IsNil(o.Input) {
		return nil, false
	}
	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *AttributeMappingsAllOfTransformDefinitionAttributes) HasInput() bool {
	if o != nil && !IsNil(o.Input) {
		return true
	}

	return false
}

// SetInput gets a reference to the given AttributeMappingsAllOfTransformDefinitionAttributesInput and assigns it to the Input field.
func (o *AttributeMappingsAllOfTransformDefinitionAttributes) SetInput(v AttributeMappingsAllOfTransformDefinitionAttributesInput) {
	o.Input = &v
}

func (o AttributeMappingsAllOfTransformDefinitionAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttributeMappingsAllOfTransformDefinitionAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Input) {
		toSerialize["input"] = o.Input
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AttributeMappingsAllOfTransformDefinitionAttributes) UnmarshalJSON(data []byte) (err error) {
	varAttributeMappingsAllOfTransformDefinitionAttributes := _AttributeMappingsAllOfTransformDefinitionAttributes{}

	err = json.Unmarshal(data, &varAttributeMappingsAllOfTransformDefinitionAttributes)

	if err != nil {
		return err
	}

	*o = AttributeMappingsAllOfTransformDefinitionAttributes(varAttributeMappingsAllOfTransformDefinitionAttributes)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "input")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAttributeMappingsAllOfTransformDefinitionAttributes struct {
	value *AttributeMappingsAllOfTransformDefinitionAttributes
	isSet bool
}

func (v NullableAttributeMappingsAllOfTransformDefinitionAttributes) Get() *AttributeMappingsAllOfTransformDefinitionAttributes {
	return v.value
}

func (v *NullableAttributeMappingsAllOfTransformDefinitionAttributes) Set(val *AttributeMappingsAllOfTransformDefinitionAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeMappingsAllOfTransformDefinitionAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeMappingsAllOfTransformDefinitionAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeMappingsAllOfTransformDefinitionAttributes(val *AttributeMappingsAllOfTransformDefinitionAttributes) *NullableAttributeMappingsAllOfTransformDefinitionAttributes {
	return &NullableAttributeMappingsAllOfTransformDefinitionAttributes{value: val, isSet: true}
}

func (v NullableAttributeMappingsAllOfTransformDefinitionAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeMappingsAllOfTransformDefinitionAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


