/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the SedBatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SedBatchRequest{}

// SedBatchRequest Sed Batch Request
type SedBatchRequest struct {
	// list of entitlement ids
	Entitlements []string `json:"entitlements,omitempty"`
	// list of sed ids
	Seds []string `json:"seds,omitempty"`
	// Search criteria for the batch request.
	SearchCriteria map[string]SearchCriteria `json:"searchCriteria,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SedBatchRequest SedBatchRequest

// NewSedBatchRequest instantiates a new SedBatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSedBatchRequest() *SedBatchRequest {
	this := SedBatchRequest{}
	return &this
}

// NewSedBatchRequestWithDefaults instantiates a new SedBatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSedBatchRequestWithDefaults() *SedBatchRequest {
	this := SedBatchRequest{}
	return &this
}

// GetEntitlements returns the Entitlements field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SedBatchRequest) GetEntitlements() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Entitlements
}

// GetEntitlementsOk returns a tuple with the Entitlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SedBatchRequest) GetEntitlementsOk() ([]string, bool) {
	if o == nil || IsNil(o.Entitlements) {
		return nil, false
	}
	return o.Entitlements, true
}

// HasEntitlements returns a boolean if a field has been set.
func (o *SedBatchRequest) HasEntitlements() bool {
	if o != nil && !IsNil(o.Entitlements) {
		return true
	}

	return false
}

// SetEntitlements gets a reference to the given []string and assigns it to the Entitlements field.
func (o *SedBatchRequest) SetEntitlements(v []string) {
	o.Entitlements = v
}

// GetSeds returns the Seds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SedBatchRequest) GetSeds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Seds
}

// GetSedsOk returns a tuple with the Seds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SedBatchRequest) GetSedsOk() ([]string, bool) {
	if o == nil || IsNil(o.Seds) {
		return nil, false
	}
	return o.Seds, true
}

// HasSeds returns a boolean if a field has been set.
func (o *SedBatchRequest) HasSeds() bool {
	if o != nil && !IsNil(o.Seds) {
		return true
	}

	return false
}

// SetSeds gets a reference to the given []string and assigns it to the Seds field.
func (o *SedBatchRequest) SetSeds(v []string) {
	o.Seds = v
}

// GetSearchCriteria returns the SearchCriteria field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SedBatchRequest) GetSearchCriteria() map[string]SearchCriteria {
	if o == nil {
		var ret map[string]SearchCriteria
		return ret
	}
	return o.SearchCriteria
}

// GetSearchCriteriaOk returns a tuple with the SearchCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SedBatchRequest) GetSearchCriteriaOk() (*map[string]SearchCriteria, bool) {
	if o == nil || IsNil(o.SearchCriteria) {
		return nil, false
	}
	return &o.SearchCriteria, true
}

// HasSearchCriteria returns a boolean if a field has been set.
func (o *SedBatchRequest) HasSearchCriteria() bool {
	if o != nil && !IsNil(o.SearchCriteria) {
		return true
	}

	return false
}

// SetSearchCriteria gets a reference to the given map[string]SearchCriteria and assigns it to the SearchCriteria field.
func (o *SedBatchRequest) SetSearchCriteria(v map[string]SearchCriteria) {
	o.SearchCriteria = v
}

func (o SedBatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SedBatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Entitlements != nil {
		toSerialize["entitlements"] = o.Entitlements
	}
	if o.Seds != nil {
		toSerialize["seds"] = o.Seds
	}
	if o.SearchCriteria != nil {
		toSerialize["searchCriteria"] = o.SearchCriteria
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SedBatchRequest) UnmarshalJSON(data []byte) (err error) {
	varSedBatchRequest := _SedBatchRequest{}

	err = json.Unmarshal(data, &varSedBatchRequest)

	if err != nil {
		return err
	}

	*o = SedBatchRequest(varSedBatchRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "entitlements")
		delete(additionalProperties, "seds")
		delete(additionalProperties, "searchCriteria")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSedBatchRequest struct {
	value *SedBatchRequest
	isSet bool
}

func (v NullableSedBatchRequest) Get() *SedBatchRequest {
	return v.value
}

func (v *NullableSedBatchRequest) Set(val *SedBatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSedBatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSedBatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSedBatchRequest(val *SedBatchRequest) *NullableSedBatchRequest {
	return &NullableSedBatchRequest{value: val, isSet: true}
}

func (v NullableSedBatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSedBatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


