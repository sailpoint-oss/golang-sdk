/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the ClusterManualUpgrade type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterManualUpgrade{}

// ClusterManualUpgrade Manual Upgrade Job Response
type ClusterManualUpgrade struct {
	// List of job objects for the upgrade request.
	Jobs []ClusterManualUpgradeJobsInner `json:"jobs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClusterManualUpgrade ClusterManualUpgrade

// NewClusterManualUpgrade instantiates a new ClusterManualUpgrade object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterManualUpgrade() *ClusterManualUpgrade {
	this := ClusterManualUpgrade{}
	return &this
}

// NewClusterManualUpgradeWithDefaults instantiates a new ClusterManualUpgrade object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterManualUpgradeWithDefaults() *ClusterManualUpgrade {
	this := ClusterManualUpgrade{}
	return &this
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *ClusterManualUpgrade) GetJobs() []ClusterManualUpgradeJobsInner {
	if o == nil || IsNil(o.Jobs) {
		var ret []ClusterManualUpgradeJobsInner
		return ret
	}
	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterManualUpgrade) GetJobsOk() ([]ClusterManualUpgradeJobsInner, bool) {
	if o == nil || IsNil(o.Jobs) {
		return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *ClusterManualUpgrade) HasJobs() bool {
	if o != nil && !IsNil(o.Jobs) {
		return true
	}

	return false
}

// SetJobs gets a reference to the given []ClusterManualUpgradeJobsInner and assigns it to the Jobs field.
func (o *ClusterManualUpgrade) SetJobs(v []ClusterManualUpgradeJobsInner) {
	o.Jobs = v
}

func (o ClusterManualUpgrade) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterManualUpgrade) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Jobs) {
		toSerialize["jobs"] = o.Jobs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClusterManualUpgrade) UnmarshalJSON(data []byte) (err error) {
	varClusterManualUpgrade := _ClusterManualUpgrade{}

	err = json.Unmarshal(data, &varClusterManualUpgrade)

	if err != nil {
		return err
	}

	*o = ClusterManualUpgrade(varClusterManualUpgrade)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "jobs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClusterManualUpgrade struct {
	value *ClusterManualUpgrade
	isSet bool
}

func (v NullableClusterManualUpgrade) Get() *ClusterManualUpgrade {
	return v.value
}

func (v *NullableClusterManualUpgrade) Set(val *ClusterManualUpgrade) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterManualUpgrade) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterManualUpgrade) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterManualUpgrade(val *ClusterManualUpgrade) *NullableClusterManualUpgrade {
	return &NullableClusterManualUpgrade{value: val, isSet: true}
}

func (v NullableClusterManualUpgrade) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterManualUpgrade) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


