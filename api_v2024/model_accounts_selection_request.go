/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
	"fmt"
)

// checks if the AccountsSelectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountsSelectionRequest{}

// AccountsSelectionRequest struct for AccountsSelectionRequest
type AccountsSelectionRequest struct {
	// A list of Identity IDs for whom the Access is requested.
	RequestedFor []string `json:"requestedFor"`
	RequestType NullableAccessRequestType `json:"requestType,omitempty"`
	RequestedItems []AccessRequestItem `json:"requestedItems"`
	// Arbitrary key-value pairs. They will never be processed by the IdentityNow system but will be returned on associated APIs such as /account-activities.  
	ClientMetadata *map[string]string `json:"clientMetadata,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountsSelectionRequest AccountsSelectionRequest

// NewAccountsSelectionRequest instantiates a new AccountsSelectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountsSelectionRequest(requestedFor []string, requestedItems []AccessRequestItem) *AccountsSelectionRequest {
	this := AccountsSelectionRequest{}
	this.RequestedFor = requestedFor
	this.RequestedItems = requestedItems
	return &this
}

// NewAccountsSelectionRequestWithDefaults instantiates a new AccountsSelectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountsSelectionRequestWithDefaults() *AccountsSelectionRequest {
	this := AccountsSelectionRequest{}
	return &this
}

// GetRequestedFor returns the RequestedFor field value
func (o *AccountsSelectionRequest) GetRequestedFor() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RequestedFor
}

// GetRequestedForOk returns a tuple with the RequestedFor field value
// and a boolean to check if the value has been set.
func (o *AccountsSelectionRequest) GetRequestedForOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestedFor, true
}

// SetRequestedFor sets field value
func (o *AccountsSelectionRequest) SetRequestedFor(v []string) {
	o.RequestedFor = v
}

// GetRequestType returns the RequestType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountsSelectionRequest) GetRequestType() AccessRequestType {
	if o == nil || IsNil(o.RequestType.Get()) {
		var ret AccessRequestType
		return ret
	}
	return *o.RequestType.Get()
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountsSelectionRequest) GetRequestTypeOk() (*AccessRequestType, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestType.Get(), o.RequestType.IsSet()
}

// HasRequestType returns a boolean if a field has been set.
func (o *AccountsSelectionRequest) HasRequestType() bool {
	if o != nil && o.RequestType.IsSet() {
		return true
	}

	return false
}

// SetRequestType gets a reference to the given NullableAccessRequestType and assigns it to the RequestType field.
func (o *AccountsSelectionRequest) SetRequestType(v AccessRequestType) {
	o.RequestType.Set(&v)
}
// SetRequestTypeNil sets the value for RequestType to be an explicit nil
func (o *AccountsSelectionRequest) SetRequestTypeNil() {
	o.RequestType.Set(nil)
}

// UnsetRequestType ensures that no value is present for RequestType, not even an explicit nil
func (o *AccountsSelectionRequest) UnsetRequestType() {
	o.RequestType.Unset()
}

// GetRequestedItems returns the RequestedItems field value
func (o *AccountsSelectionRequest) GetRequestedItems() []AccessRequestItem {
	if o == nil {
		var ret []AccessRequestItem
		return ret
	}

	return o.RequestedItems
}

// GetRequestedItemsOk returns a tuple with the RequestedItems field value
// and a boolean to check if the value has been set.
func (o *AccountsSelectionRequest) GetRequestedItemsOk() ([]AccessRequestItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestedItems, true
}

// SetRequestedItems sets field value
func (o *AccountsSelectionRequest) SetRequestedItems(v []AccessRequestItem) {
	o.RequestedItems = v
}

// GetClientMetadata returns the ClientMetadata field value if set, zero value otherwise.
func (o *AccountsSelectionRequest) GetClientMetadata() map[string]string {
	if o == nil || IsNil(o.ClientMetadata) {
		var ret map[string]string
		return ret
	}
	return *o.ClientMetadata
}

// GetClientMetadataOk returns a tuple with the ClientMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountsSelectionRequest) GetClientMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ClientMetadata) {
		return nil, false
	}
	return o.ClientMetadata, true
}

// HasClientMetadata returns a boolean if a field has been set.
func (o *AccountsSelectionRequest) HasClientMetadata() bool {
	if o != nil && !IsNil(o.ClientMetadata) {
		return true
	}

	return false
}

// SetClientMetadata gets a reference to the given map[string]string and assigns it to the ClientMetadata field.
func (o *AccountsSelectionRequest) SetClientMetadata(v map[string]string) {
	o.ClientMetadata = &v
}

func (o AccountsSelectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountsSelectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestedFor"] = o.RequestedFor
	if o.RequestType.IsSet() {
		toSerialize["requestType"] = o.RequestType.Get()
	}
	toSerialize["requestedItems"] = o.RequestedItems
	if !IsNil(o.ClientMetadata) {
		toSerialize["clientMetadata"] = o.ClientMetadata
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountsSelectionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"requestedFor",
		"requestedItems",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountsSelectionRequest := _AccountsSelectionRequest{}

	err = json.Unmarshal(data, &varAccountsSelectionRequest)

	if err != nil {
		return err
	}

	*o = AccountsSelectionRequest(varAccountsSelectionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "requestedFor")
		delete(additionalProperties, "requestType")
		delete(additionalProperties, "requestedItems")
		delete(additionalProperties, "clientMetadata")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountsSelectionRequest struct {
	value *AccountsSelectionRequest
	isSet bool
}

func (v NullableAccountsSelectionRequest) Get() *AccountsSelectionRequest {
	return v.value
}

func (v *NullableAccountsSelectionRequest) Set(val *AccountsSelectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountsSelectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountsSelectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountsSelectionRequest(val *AccountsSelectionRequest) *NullableAccountsSelectionRequest {
	return &NullableAccountsSelectionRequest{value: val, isSet: true}
}

func (v NullableAccountsSelectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountsSelectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


