/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the CorrelationConfigAttributeAssignmentsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorrelationConfigAttributeAssignmentsInner{}

// CorrelationConfigAttributeAssignmentsInner The attribute assignment of the correlation configuration.
type CorrelationConfigAttributeAssignmentsInner struct {
	// The property of the attribute assignment.
	Property *string `json:"property,omitempty"`
	// The value of the attribute assignment.
	Value *string `json:"value,omitempty"`
	// The operation of the attribute assignment.
	Operation *string `json:"operation,omitempty"`
	// Whether or not the it's a complex attribute assignment.
	Complex *bool `json:"complex,omitempty"`
	// Whether or not the attribute assignment should ignore case.
	IgnoreCase *bool `json:"ignoreCase,omitempty"`
	// The match mode of the attribute assignment.
	MatchMode *string `json:"matchMode,omitempty"`
	// The filter string of the attribute assignment.
	FilterString *string `json:"filterString,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CorrelationConfigAttributeAssignmentsInner CorrelationConfigAttributeAssignmentsInner

// NewCorrelationConfigAttributeAssignmentsInner instantiates a new CorrelationConfigAttributeAssignmentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorrelationConfigAttributeAssignmentsInner() *CorrelationConfigAttributeAssignmentsInner {
	this := CorrelationConfigAttributeAssignmentsInner{}
	var complex bool = false
	this.Complex = &complex
	var ignoreCase bool = false
	this.IgnoreCase = &ignoreCase
	return &this
}

// NewCorrelationConfigAttributeAssignmentsInnerWithDefaults instantiates a new CorrelationConfigAttributeAssignmentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorrelationConfigAttributeAssignmentsInnerWithDefaults() *CorrelationConfigAttributeAssignmentsInner {
	this := CorrelationConfigAttributeAssignmentsInner{}
	var complex bool = false
	this.Complex = &complex
	var ignoreCase bool = false
	this.IgnoreCase = &ignoreCase
	return &this
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *CorrelationConfigAttributeAssignmentsInner) GetProperty() string {
	if o == nil || IsNil(o.Property) {
		var ret string
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) GetPropertyOk() (*string, bool) {
	if o == nil || IsNil(o.Property) {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) HasProperty() bool {
	if o != nil && !IsNil(o.Property) {
		return true
	}

	return false
}

// SetProperty gets a reference to the given string and assigns it to the Property field.
func (o *CorrelationConfigAttributeAssignmentsInner) SetProperty(v string) {
	o.Property = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CorrelationConfigAttributeAssignmentsInner) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *CorrelationConfigAttributeAssignmentsInner) SetValue(v string) {
	o.Value = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *CorrelationConfigAttributeAssignmentsInner) GetOperation() string {
	if o == nil || IsNil(o.Operation) {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) GetOperationOk() (*string, bool) {
	if o == nil || IsNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) HasOperation() bool {
	if o != nil && !IsNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *CorrelationConfigAttributeAssignmentsInner) SetOperation(v string) {
	o.Operation = &v
}

// GetComplex returns the Complex field value if set, zero value otherwise.
func (o *CorrelationConfigAttributeAssignmentsInner) GetComplex() bool {
	if o == nil || IsNil(o.Complex) {
		var ret bool
		return ret
	}
	return *o.Complex
}

// GetComplexOk returns a tuple with the Complex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) GetComplexOk() (*bool, bool) {
	if o == nil || IsNil(o.Complex) {
		return nil, false
	}
	return o.Complex, true
}

// HasComplex returns a boolean if a field has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) HasComplex() bool {
	if o != nil && !IsNil(o.Complex) {
		return true
	}

	return false
}

// SetComplex gets a reference to the given bool and assigns it to the Complex field.
func (o *CorrelationConfigAttributeAssignmentsInner) SetComplex(v bool) {
	o.Complex = &v
}

// GetIgnoreCase returns the IgnoreCase field value if set, zero value otherwise.
func (o *CorrelationConfigAttributeAssignmentsInner) GetIgnoreCase() bool {
	if o == nil || IsNil(o.IgnoreCase) {
		var ret bool
		return ret
	}
	return *o.IgnoreCase
}

// GetIgnoreCaseOk returns a tuple with the IgnoreCase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) GetIgnoreCaseOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreCase) {
		return nil, false
	}
	return o.IgnoreCase, true
}

// HasIgnoreCase returns a boolean if a field has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) HasIgnoreCase() bool {
	if o != nil && !IsNil(o.IgnoreCase) {
		return true
	}

	return false
}

// SetIgnoreCase gets a reference to the given bool and assigns it to the IgnoreCase field.
func (o *CorrelationConfigAttributeAssignmentsInner) SetIgnoreCase(v bool) {
	o.IgnoreCase = &v
}

// GetMatchMode returns the MatchMode field value if set, zero value otherwise.
func (o *CorrelationConfigAttributeAssignmentsInner) GetMatchMode() string {
	if o == nil || IsNil(o.MatchMode) {
		var ret string
		return ret
	}
	return *o.MatchMode
}

// GetMatchModeOk returns a tuple with the MatchMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) GetMatchModeOk() (*string, bool) {
	if o == nil || IsNil(o.MatchMode) {
		return nil, false
	}
	return o.MatchMode, true
}

// HasMatchMode returns a boolean if a field has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) HasMatchMode() bool {
	if o != nil && !IsNil(o.MatchMode) {
		return true
	}

	return false
}

// SetMatchMode gets a reference to the given string and assigns it to the MatchMode field.
func (o *CorrelationConfigAttributeAssignmentsInner) SetMatchMode(v string) {
	o.MatchMode = &v
}

// GetFilterString returns the FilterString field value if set, zero value otherwise.
func (o *CorrelationConfigAttributeAssignmentsInner) GetFilterString() string {
	if o == nil || IsNil(o.FilterString) {
		var ret string
		return ret
	}
	return *o.FilterString
}

// GetFilterStringOk returns a tuple with the FilterString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) GetFilterStringOk() (*string, bool) {
	if o == nil || IsNil(o.FilterString) {
		return nil, false
	}
	return o.FilterString, true
}

// HasFilterString returns a boolean if a field has been set.
func (o *CorrelationConfigAttributeAssignmentsInner) HasFilterString() bool {
	if o != nil && !IsNil(o.FilterString) {
		return true
	}

	return false
}

// SetFilterString gets a reference to the given string and assigns it to the FilterString field.
func (o *CorrelationConfigAttributeAssignmentsInner) SetFilterString(v string) {
	o.FilterString = &v
}

func (o CorrelationConfigAttributeAssignmentsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorrelationConfigAttributeAssignmentsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Property) {
		toSerialize["property"] = o.Property
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	if !IsNil(o.Complex) {
		toSerialize["complex"] = o.Complex
	}
	if !IsNil(o.IgnoreCase) {
		toSerialize["ignoreCase"] = o.IgnoreCase
	}
	if !IsNil(o.MatchMode) {
		toSerialize["matchMode"] = o.MatchMode
	}
	if !IsNil(o.FilterString) {
		toSerialize["filterString"] = o.FilterString
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CorrelationConfigAttributeAssignmentsInner) UnmarshalJSON(data []byte) (err error) {
	varCorrelationConfigAttributeAssignmentsInner := _CorrelationConfigAttributeAssignmentsInner{}

	err = json.Unmarshal(data, &varCorrelationConfigAttributeAssignmentsInner)

	if err != nil {
		return err
	}

	*o = CorrelationConfigAttributeAssignmentsInner(varCorrelationConfigAttributeAssignmentsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "property")
		delete(additionalProperties, "value")
		delete(additionalProperties, "operation")
		delete(additionalProperties, "complex")
		delete(additionalProperties, "ignoreCase")
		delete(additionalProperties, "matchMode")
		delete(additionalProperties, "filterString")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCorrelationConfigAttributeAssignmentsInner struct {
	value *CorrelationConfigAttributeAssignmentsInner
	isSet bool
}

func (v NullableCorrelationConfigAttributeAssignmentsInner) Get() *CorrelationConfigAttributeAssignmentsInner {
	return v.value
}

func (v *NullableCorrelationConfigAttributeAssignmentsInner) Set(val *CorrelationConfigAttributeAssignmentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCorrelationConfigAttributeAssignmentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCorrelationConfigAttributeAssignmentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorrelationConfigAttributeAssignmentsInner(val *CorrelationConfigAttributeAssignmentsInner) *NullableCorrelationConfigAttributeAssignmentsInner {
	return &NullableCorrelationConfigAttributeAssignmentsInner{value: val, isSet: true}
}

func (v NullableCorrelationConfigAttributeAssignmentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorrelationConfigAttributeAssignmentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


