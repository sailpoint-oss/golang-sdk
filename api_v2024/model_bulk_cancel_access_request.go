/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
	"fmt"
)

// checks if the BulkCancelAccessRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkCancelAccessRequest{}

// BulkCancelAccessRequest Request body payload for bulk cancel access request endpoint.
type BulkCancelAccessRequest struct {
	// List of access requests ids to cancel the pending requests
	AccessRequestIds []string `json:"accessRequestIds"`
	// Reason for cancelling the pending access request.
	Comment string `json:"comment"`
	AdditionalProperties map[string]interface{}
}

type _BulkCancelAccessRequest BulkCancelAccessRequest

// NewBulkCancelAccessRequest instantiates a new BulkCancelAccessRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkCancelAccessRequest(accessRequestIds []string, comment string) *BulkCancelAccessRequest {
	this := BulkCancelAccessRequest{}
	this.AccessRequestIds = accessRequestIds
	this.Comment = comment
	return &this
}

// NewBulkCancelAccessRequestWithDefaults instantiates a new BulkCancelAccessRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkCancelAccessRequestWithDefaults() *BulkCancelAccessRequest {
	this := BulkCancelAccessRequest{}
	return &this
}

// GetAccessRequestIds returns the AccessRequestIds field value
func (o *BulkCancelAccessRequest) GetAccessRequestIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AccessRequestIds
}

// GetAccessRequestIdsOk returns a tuple with the AccessRequestIds field value
// and a boolean to check if the value has been set.
func (o *BulkCancelAccessRequest) GetAccessRequestIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessRequestIds, true
}

// SetAccessRequestIds sets field value
func (o *BulkCancelAccessRequest) SetAccessRequestIds(v []string) {
	o.AccessRequestIds = v
}

// GetComment returns the Comment field value
func (o *BulkCancelAccessRequest) GetComment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Comment
}

// GetCommentOk returns a tuple with the Comment field value
// and a boolean to check if the value has been set.
func (o *BulkCancelAccessRequest) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comment, true
}

// SetComment sets field value
func (o *BulkCancelAccessRequest) SetComment(v string) {
	o.Comment = v
}

func (o BulkCancelAccessRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkCancelAccessRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accessRequestIds"] = o.AccessRequestIds
	toSerialize["comment"] = o.Comment

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BulkCancelAccessRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accessRequestIds",
		"comment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkCancelAccessRequest := _BulkCancelAccessRequest{}

	err = json.Unmarshal(data, &varBulkCancelAccessRequest)

	if err != nil {
		return err
	}

	*o = BulkCancelAccessRequest(varBulkCancelAccessRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accessRequestIds")
		delete(additionalProperties, "comment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBulkCancelAccessRequest struct {
	value *BulkCancelAccessRequest
	isSet bool
}

func (v NullableBulkCancelAccessRequest) Get() *BulkCancelAccessRequest {
	return v.value
}

func (v *NullableBulkCancelAccessRequest) Set(val *BulkCancelAccessRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkCancelAccessRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkCancelAccessRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkCancelAccessRequest(val *BulkCancelAccessRequest) *NullableBulkCancelAccessRequest {
	return &NullableBulkCancelAccessRequest{value: val, isSet: true}
}

func (v NullableBulkCancelAccessRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkCancelAccessRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


