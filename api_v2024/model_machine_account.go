/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the MachineAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineAccount{}

// MachineAccount struct for MachineAccount
type MachineAccount struct {
	// System-generated unique ID of the Object
	Id *string `json:"id,omitempty"`
	// Name of the Object
	Name NullableString `json:"name"`
	// Creation date of the Object
	Created *time.Time `json:"created,omitempty"`
	// Last modification date of the Object
	Modified *time.Time `json:"modified,omitempty"`
	// A description of the machine account
	Description NullableString `json:"description,omitempty"`
	// The unique ID of the machine account generated by the source system
	NativeIdentity string `json:"nativeIdentity"`
	// The unique ID of the account as determined by the account schema
	Uuid NullableString `json:"uuid,omitempty"`
	// Classification Method
	ClassificationMethod string `json:"classificationMethod"`
	// The machine identity this account is associated with
	MachineIdentity map[string]interface{} `json:"machineIdentity,omitempty"`
	// The identity who owns this account.
	OwnerIdentity map[string]interface{} `json:"ownerIdentity,omitempty"`
	// The connection type of the source this account is from
	AccessType *string `json:"accessType,omitempty"`
	// The sub-type
	Subtype NullableString `json:"subtype,omitempty"`
	// Environment
	Environment NullableString `json:"environment,omitempty"`
	// Custom attributes specific to the machine account
	Attributes map[string]interface{} `json:"attributes,omitempty"`
	// The connector attributes for the account
	ConnectorAttributes map[string]interface{} `json:"connectorAttributes"`
	// Indicates if the account has been manually correlated to an identity
	ManuallyCorrelated *bool `json:"manuallyCorrelated,omitempty"`
	// Indicates if the account has been manually edited
	ManuallyEdited bool `json:"manuallyEdited"`
	// Indicates if the account is currently locked
	Locked bool `json:"locked"`
	// Indicates if the account is enabled
	Enabled bool `json:"enabled"`
	// Indicates if the account has entitlements
	HasEntitlements bool `json:"hasEntitlements"`
	// The source this machine account belongs to.
	Source map[string]interface{} `json:"source"`
	AdditionalProperties map[string]interface{}
}

type _MachineAccount MachineAccount

// NewMachineAccount instantiates a new MachineAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineAccount(name NullableString, nativeIdentity string, classificationMethod string, connectorAttributes map[string]interface{}, manuallyEdited bool, locked bool, enabled bool, hasEntitlements bool, source map[string]interface{}) *MachineAccount {
	this := MachineAccount{}
	this.Name = name
	this.NativeIdentity = nativeIdentity
	this.ClassificationMethod = classificationMethod
	this.ConnectorAttributes = connectorAttributes
	var manuallyCorrelated bool = false
	this.ManuallyCorrelated = &manuallyCorrelated
	this.ManuallyEdited = manuallyEdited
	this.Locked = locked
	this.Enabled = enabled
	this.HasEntitlements = hasEntitlements
	this.Source = source
	return &this
}

// NewMachineAccountWithDefaults instantiates a new MachineAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineAccountWithDefaults() *MachineAccount {
	this := MachineAccount{}
	var manuallyCorrelated bool = false
	this.ManuallyCorrelated = &manuallyCorrelated
	var manuallyEdited bool = false
	this.ManuallyEdited = manuallyEdited
	var enabled bool = false
	this.Enabled = enabled
	var hasEntitlements bool = true
	this.HasEntitlements = hasEntitlements
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MachineAccount) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineAccount) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MachineAccount) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MachineAccount) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MachineAccount) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineAccount) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *MachineAccount) SetName(v string) {
	o.Name.Set(&v)
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *MachineAccount) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineAccount) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *MachineAccount) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *MachineAccount) SetCreated(v time.Time) {
	o.Created = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *MachineAccount) GetModified() time.Time {
	if o == nil || IsNil(o.Modified) {
		var ret time.Time
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineAccount) GetModifiedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *MachineAccount) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given time.Time and assigns it to the Modified field.
func (o *MachineAccount) SetModified(v time.Time) {
	o.Modified = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineAccount) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineAccount) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *MachineAccount) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *MachineAccount) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *MachineAccount) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *MachineAccount) UnsetDescription() {
	o.Description.Unset()
}

// GetNativeIdentity returns the NativeIdentity field value
func (o *MachineAccount) GetNativeIdentity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NativeIdentity
}

// GetNativeIdentityOk returns a tuple with the NativeIdentity field value
// and a boolean to check if the value has been set.
func (o *MachineAccount) GetNativeIdentityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NativeIdentity, true
}

// SetNativeIdentity sets field value
func (o *MachineAccount) SetNativeIdentity(v string) {
	o.NativeIdentity = v
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineAccount) GetUuid() string {
	if o == nil || IsNil(o.Uuid.Get()) {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineAccount) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *MachineAccount) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *MachineAccount) SetUuid(v string) {
	o.Uuid.Set(&v)
}
// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *MachineAccount) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *MachineAccount) UnsetUuid() {
	o.Uuid.Unset()
}

// GetClassificationMethod returns the ClassificationMethod field value
func (o *MachineAccount) GetClassificationMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClassificationMethod
}

// GetClassificationMethodOk returns a tuple with the ClassificationMethod field value
// and a boolean to check if the value has been set.
func (o *MachineAccount) GetClassificationMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClassificationMethod, true
}

// SetClassificationMethod sets field value
func (o *MachineAccount) SetClassificationMethod(v string) {
	o.ClassificationMethod = v
}

// GetMachineIdentity returns the MachineIdentity field value if set, zero value otherwise.
func (o *MachineAccount) GetMachineIdentity() map[string]interface{} {
	if o == nil || IsNil(o.MachineIdentity) {
		var ret map[string]interface{}
		return ret
	}
	return o.MachineIdentity
}

// GetMachineIdentityOk returns a tuple with the MachineIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineAccount) GetMachineIdentityOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MachineIdentity) {
		return map[string]interface{}{}, false
	}
	return o.MachineIdentity, true
}

// HasMachineIdentity returns a boolean if a field has been set.
func (o *MachineAccount) HasMachineIdentity() bool {
	if o != nil && !IsNil(o.MachineIdentity) {
		return true
	}

	return false
}

// SetMachineIdentity gets a reference to the given map[string]interface{} and assigns it to the MachineIdentity field.
func (o *MachineAccount) SetMachineIdentity(v map[string]interface{}) {
	o.MachineIdentity = v
}

// GetOwnerIdentity returns the OwnerIdentity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineAccount) GetOwnerIdentity() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.OwnerIdentity
}

// GetOwnerIdentityOk returns a tuple with the OwnerIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineAccount) GetOwnerIdentityOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.OwnerIdentity) {
		return map[string]interface{}{}, false
	}
	return o.OwnerIdentity, true
}

// HasOwnerIdentity returns a boolean if a field has been set.
func (o *MachineAccount) HasOwnerIdentity() bool {
	if o != nil && !IsNil(o.OwnerIdentity) {
		return true
	}

	return false
}

// SetOwnerIdentity gets a reference to the given map[string]interface{} and assigns it to the OwnerIdentity field.
func (o *MachineAccount) SetOwnerIdentity(v map[string]interface{}) {
	o.OwnerIdentity = v
}

// GetAccessType returns the AccessType field value if set, zero value otherwise.
func (o *MachineAccount) GetAccessType() string {
	if o == nil || IsNil(o.AccessType) {
		var ret string
		return ret
	}
	return *o.AccessType
}

// GetAccessTypeOk returns a tuple with the AccessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineAccount) GetAccessTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccessType) {
		return nil, false
	}
	return o.AccessType, true
}

// HasAccessType returns a boolean if a field has been set.
func (o *MachineAccount) HasAccessType() bool {
	if o != nil && !IsNil(o.AccessType) {
		return true
	}

	return false
}

// SetAccessType gets a reference to the given string and assigns it to the AccessType field.
func (o *MachineAccount) SetAccessType(v string) {
	o.AccessType = &v
}

// GetSubtype returns the Subtype field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineAccount) GetSubtype() string {
	if o == nil || IsNil(o.Subtype.Get()) {
		var ret string
		return ret
	}
	return *o.Subtype.Get()
}

// GetSubtypeOk returns a tuple with the Subtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineAccount) GetSubtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subtype.Get(), o.Subtype.IsSet()
}

// HasSubtype returns a boolean if a field has been set.
func (o *MachineAccount) HasSubtype() bool {
	if o != nil && o.Subtype.IsSet() {
		return true
	}

	return false
}

// SetSubtype gets a reference to the given NullableString and assigns it to the Subtype field.
func (o *MachineAccount) SetSubtype(v string) {
	o.Subtype.Set(&v)
}
// SetSubtypeNil sets the value for Subtype to be an explicit nil
func (o *MachineAccount) SetSubtypeNil() {
	o.Subtype.Set(nil)
}

// UnsetSubtype ensures that no value is present for Subtype, not even an explicit nil
func (o *MachineAccount) UnsetSubtype() {
	o.Subtype.Unset()
}

// GetEnvironment returns the Environment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineAccount) GetEnvironment() string {
	if o == nil || IsNil(o.Environment.Get()) {
		var ret string
		return ret
	}
	return *o.Environment.Get()
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineAccount) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Environment.Get(), o.Environment.IsSet()
}

// HasEnvironment returns a boolean if a field has been set.
func (o *MachineAccount) HasEnvironment() bool {
	if o != nil && o.Environment.IsSet() {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given NullableString and assigns it to the Environment field.
func (o *MachineAccount) SetEnvironment(v string) {
	o.Environment.Set(&v)
}
// SetEnvironmentNil sets the value for Environment to be an explicit nil
func (o *MachineAccount) SetEnvironmentNil() {
	o.Environment.Set(nil)
}

// UnsetEnvironment ensures that no value is present for Environment, not even an explicit nil
func (o *MachineAccount) UnsetEnvironment() {
	o.Environment.Unset()
}

// GetAttributes returns the Attributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineAccount) GetAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineAccount) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attributes) {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *MachineAccount) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *MachineAccount) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetConnectorAttributes returns the ConnectorAttributes field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *MachineAccount) GetConnectorAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ConnectorAttributes
}

// GetConnectorAttributesOk returns a tuple with the ConnectorAttributes field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineAccount) GetConnectorAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ConnectorAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ConnectorAttributes, true
}

// SetConnectorAttributes sets field value
func (o *MachineAccount) SetConnectorAttributes(v map[string]interface{}) {
	o.ConnectorAttributes = v
}

// GetManuallyCorrelated returns the ManuallyCorrelated field value if set, zero value otherwise.
func (o *MachineAccount) GetManuallyCorrelated() bool {
	if o == nil || IsNil(o.ManuallyCorrelated) {
		var ret bool
		return ret
	}
	return *o.ManuallyCorrelated
}

// GetManuallyCorrelatedOk returns a tuple with the ManuallyCorrelated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineAccount) GetManuallyCorrelatedOk() (*bool, bool) {
	if o == nil || IsNil(o.ManuallyCorrelated) {
		return nil, false
	}
	return o.ManuallyCorrelated, true
}

// HasManuallyCorrelated returns a boolean if a field has been set.
func (o *MachineAccount) HasManuallyCorrelated() bool {
	if o != nil && !IsNil(o.ManuallyCorrelated) {
		return true
	}

	return false
}

// SetManuallyCorrelated gets a reference to the given bool and assigns it to the ManuallyCorrelated field.
func (o *MachineAccount) SetManuallyCorrelated(v bool) {
	o.ManuallyCorrelated = &v
}

// GetManuallyEdited returns the ManuallyEdited field value
func (o *MachineAccount) GetManuallyEdited() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ManuallyEdited
}

// GetManuallyEditedOk returns a tuple with the ManuallyEdited field value
// and a boolean to check if the value has been set.
func (o *MachineAccount) GetManuallyEditedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ManuallyEdited, true
}

// SetManuallyEdited sets field value
func (o *MachineAccount) SetManuallyEdited(v bool) {
	o.ManuallyEdited = v
}

// GetLocked returns the Locked field value
func (o *MachineAccount) GetLocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Locked
}

// GetLockedOk returns a tuple with the Locked field value
// and a boolean to check if the value has been set.
func (o *MachineAccount) GetLockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locked, true
}

// SetLocked sets field value
func (o *MachineAccount) SetLocked(v bool) {
	o.Locked = v
}

// GetEnabled returns the Enabled field value
func (o *MachineAccount) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *MachineAccount) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *MachineAccount) SetEnabled(v bool) {
	o.Enabled = v
}

// GetHasEntitlements returns the HasEntitlements field value
func (o *MachineAccount) GetHasEntitlements() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasEntitlements
}

// GetHasEntitlementsOk returns a tuple with the HasEntitlements field value
// and a boolean to check if the value has been set.
func (o *MachineAccount) GetHasEntitlementsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasEntitlements, true
}

// SetHasEntitlements sets field value
func (o *MachineAccount) SetHasEntitlements(v bool) {
	o.HasEntitlements = v
}

// GetSource returns the Source field value
func (o *MachineAccount) GetSource() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *MachineAccount) GetSourceOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Source, true
}

// SetSource sets field value
func (o *MachineAccount) SetSource(v map[string]interface{}) {
	o.Source = v
}

func (o MachineAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name.Get()
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["nativeIdentity"] = o.NativeIdentity
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}
	toSerialize["classificationMethod"] = o.ClassificationMethod
	if !IsNil(o.MachineIdentity) {
		toSerialize["machineIdentity"] = o.MachineIdentity
	}
	if o.OwnerIdentity != nil {
		toSerialize["ownerIdentity"] = o.OwnerIdentity
	}
	if !IsNil(o.AccessType) {
		toSerialize["accessType"] = o.AccessType
	}
	if o.Subtype.IsSet() {
		toSerialize["subtype"] = o.Subtype.Get()
	}
	if o.Environment.IsSet() {
		toSerialize["environment"] = o.Environment.Get()
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	if o.ConnectorAttributes != nil {
		toSerialize["connectorAttributes"] = o.ConnectorAttributes
	}
	if !IsNil(o.ManuallyCorrelated) {
		toSerialize["manuallyCorrelated"] = o.ManuallyCorrelated
	}
	toSerialize["manuallyEdited"] = o.ManuallyEdited
	toSerialize["locked"] = o.Locked
	toSerialize["enabled"] = o.Enabled
	toSerialize["hasEntitlements"] = o.HasEntitlements
	toSerialize["source"] = o.Source

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MachineAccount) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"nativeIdentity",
		"classificationMethod",
		"connectorAttributes",
		"manuallyEdited",
		"locked",
		"enabled",
		"hasEntitlements",
		"source",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMachineAccount := _MachineAccount{}

	err = json.Unmarshal(data, &varMachineAccount)

	if err != nil {
		return err
	}

	*o = MachineAccount(varMachineAccount)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "created")
		delete(additionalProperties, "modified")
		delete(additionalProperties, "description")
		delete(additionalProperties, "nativeIdentity")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "classificationMethod")
		delete(additionalProperties, "machineIdentity")
		delete(additionalProperties, "ownerIdentity")
		delete(additionalProperties, "accessType")
		delete(additionalProperties, "subtype")
		delete(additionalProperties, "environment")
		delete(additionalProperties, "attributes")
		delete(additionalProperties, "connectorAttributes")
		delete(additionalProperties, "manuallyCorrelated")
		delete(additionalProperties, "manuallyEdited")
		delete(additionalProperties, "locked")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "hasEntitlements")
		delete(additionalProperties, "source")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMachineAccount struct {
	value *MachineAccount
	isSet bool
}

func (v NullableMachineAccount) Get() *MachineAccount {
	return v.value
}

func (v *NullableMachineAccount) Set(val *MachineAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineAccount(val *MachineAccount) *NullableMachineAccount {
	return &NullableMachineAccount{value: val, isSet: true}
}

func (v NullableMachineAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


