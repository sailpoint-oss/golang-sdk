/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the RequestedItemAccountSelections type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestedItemAccountSelections{}

// RequestedItemAccountSelections struct for RequestedItemAccountSelections
type RequestedItemAccountSelections struct {
	// The description for this requested item
	Description *string `json:"description,omitempty"`
	// This field indicates if account selections are not allowed for this requested item. * If true, this field indicates that account selections will not be available for this item and user combination. In this case, no account selections should be provided in the access request for this item and user combination, irrespective of whether the user has single or multiple accounts on a source. * An example is where a user is requesting an access profile that is already assigned to one of their accounts. 
	AccountsSelectionBlocked *bool `json:"accountsSelectionBlocked,omitempty"`
	// If account selections are not allowed for an item, this field will denote the reason.
	AccountsSelectionBlockedReason NullableString `json:"accountsSelectionBlockedReason,omitempty"`
	// The type of the item being requested.
	Type *string `json:"type,omitempty"`
	// The id of the requested item
	Id *string `json:"id,omitempty"`
	// The name of the requested item
	Name *string `json:"name,omitempty"`
	// The details for the sources and accounts for the requested item and identity combination
	Sources []SourceAccountSelections `json:"sources,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RequestedItemAccountSelections RequestedItemAccountSelections

// NewRequestedItemAccountSelections instantiates a new RequestedItemAccountSelections object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestedItemAccountSelections() *RequestedItemAccountSelections {
	this := RequestedItemAccountSelections{}
	var accountsSelectionBlocked bool = false
	this.AccountsSelectionBlocked = &accountsSelectionBlocked
	return &this
}

// NewRequestedItemAccountSelectionsWithDefaults instantiates a new RequestedItemAccountSelections object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestedItemAccountSelectionsWithDefaults() *RequestedItemAccountSelections {
	this := RequestedItemAccountSelections{}
	var accountsSelectionBlocked bool = false
	this.AccountsSelectionBlocked = &accountsSelectionBlocked
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RequestedItemAccountSelections) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestedItemAccountSelections) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RequestedItemAccountSelections) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RequestedItemAccountSelections) SetDescription(v string) {
	o.Description = &v
}

// GetAccountsSelectionBlocked returns the AccountsSelectionBlocked field value if set, zero value otherwise.
func (o *RequestedItemAccountSelections) GetAccountsSelectionBlocked() bool {
	if o == nil || IsNil(o.AccountsSelectionBlocked) {
		var ret bool
		return ret
	}
	return *o.AccountsSelectionBlocked
}

// GetAccountsSelectionBlockedOk returns a tuple with the AccountsSelectionBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestedItemAccountSelections) GetAccountsSelectionBlockedOk() (*bool, bool) {
	if o == nil || IsNil(o.AccountsSelectionBlocked) {
		return nil, false
	}
	return o.AccountsSelectionBlocked, true
}

// HasAccountsSelectionBlocked returns a boolean if a field has been set.
func (o *RequestedItemAccountSelections) HasAccountsSelectionBlocked() bool {
	if o != nil && !IsNil(o.AccountsSelectionBlocked) {
		return true
	}

	return false
}

// SetAccountsSelectionBlocked gets a reference to the given bool and assigns it to the AccountsSelectionBlocked field.
func (o *RequestedItemAccountSelections) SetAccountsSelectionBlocked(v bool) {
	o.AccountsSelectionBlocked = &v
}

// GetAccountsSelectionBlockedReason returns the AccountsSelectionBlockedReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestedItemAccountSelections) GetAccountsSelectionBlockedReason() string {
	if o == nil || IsNil(o.AccountsSelectionBlockedReason.Get()) {
		var ret string
		return ret
	}
	return *o.AccountsSelectionBlockedReason.Get()
}

// GetAccountsSelectionBlockedReasonOk returns a tuple with the AccountsSelectionBlockedReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestedItemAccountSelections) GetAccountsSelectionBlockedReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountsSelectionBlockedReason.Get(), o.AccountsSelectionBlockedReason.IsSet()
}

// HasAccountsSelectionBlockedReason returns a boolean if a field has been set.
func (o *RequestedItemAccountSelections) HasAccountsSelectionBlockedReason() bool {
	if o != nil && o.AccountsSelectionBlockedReason.IsSet() {
		return true
	}

	return false
}

// SetAccountsSelectionBlockedReason gets a reference to the given NullableString and assigns it to the AccountsSelectionBlockedReason field.
func (o *RequestedItemAccountSelections) SetAccountsSelectionBlockedReason(v string) {
	o.AccountsSelectionBlockedReason.Set(&v)
}
// SetAccountsSelectionBlockedReasonNil sets the value for AccountsSelectionBlockedReason to be an explicit nil
func (o *RequestedItemAccountSelections) SetAccountsSelectionBlockedReasonNil() {
	o.AccountsSelectionBlockedReason.Set(nil)
}

// UnsetAccountsSelectionBlockedReason ensures that no value is present for AccountsSelectionBlockedReason, not even an explicit nil
func (o *RequestedItemAccountSelections) UnsetAccountsSelectionBlockedReason() {
	o.AccountsSelectionBlockedReason.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RequestedItemAccountSelections) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestedItemAccountSelections) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RequestedItemAccountSelections) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RequestedItemAccountSelections) SetType(v string) {
	o.Type = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RequestedItemAccountSelections) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestedItemAccountSelections) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RequestedItemAccountSelections) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RequestedItemAccountSelections) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RequestedItemAccountSelections) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestedItemAccountSelections) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RequestedItemAccountSelections) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RequestedItemAccountSelections) SetName(v string) {
	o.Name = &v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *RequestedItemAccountSelections) GetSources() []SourceAccountSelections {
	if o == nil || IsNil(o.Sources) {
		var ret []SourceAccountSelections
		return ret
	}
	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestedItemAccountSelections) GetSourcesOk() ([]SourceAccountSelections, bool) {
	if o == nil || IsNil(o.Sources) {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *RequestedItemAccountSelections) HasSources() bool {
	if o != nil && !IsNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given []SourceAccountSelections and assigns it to the Sources field.
func (o *RequestedItemAccountSelections) SetSources(v []SourceAccountSelections) {
	o.Sources = v
}

func (o RequestedItemAccountSelections) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestedItemAccountSelections) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.AccountsSelectionBlocked) {
		toSerialize["accountsSelectionBlocked"] = o.AccountsSelectionBlocked
	}
	if o.AccountsSelectionBlockedReason.IsSet() {
		toSerialize["accountsSelectionBlockedReason"] = o.AccountsSelectionBlockedReason.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Sources) {
		toSerialize["sources"] = o.Sources
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RequestedItemAccountSelections) UnmarshalJSON(data []byte) (err error) {
	varRequestedItemAccountSelections := _RequestedItemAccountSelections{}

	err = json.Unmarshal(data, &varRequestedItemAccountSelections)

	if err != nil {
		return err
	}

	*o = RequestedItemAccountSelections(varRequestedItemAccountSelections)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "accountsSelectionBlocked")
		delete(additionalProperties, "accountsSelectionBlockedReason")
		delete(additionalProperties, "type")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "sources")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRequestedItemAccountSelections struct {
	value *RequestedItemAccountSelections
	isSet bool
}

func (v NullableRequestedItemAccountSelections) Get() *RequestedItemAccountSelections {
	return v.value
}

func (v *NullableRequestedItemAccountSelections) Set(val *RequestedItemAccountSelections) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestedItemAccountSelections) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestedItemAccountSelections) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestedItemAccountSelections(val *RequestedItemAccountSelections) *NullableRequestedItemAccountSelections {
	return &NullableRequestedItemAccountSelections{value: val, isSet: true}
}

func (v NullableRequestedItemAccountSelections) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestedItemAccountSelections) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


