/*
Identity Security Cloud V2024 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2024
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2024

import (
	"encoding/json"
)

// checks if the OutlierContributingFeature type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutlierContributingFeature{}

// OutlierContributingFeature struct for OutlierContributingFeature
type OutlierContributingFeature struct {
	// Contributing feature id
	Id *string `json:"id,omitempty"`
	// The name of the feature
	Name *string `json:"name,omitempty"`
	ValueType *OutlierValueType `json:"valueType,omitempty"`
	// The feature value
	Value *float32 `json:"value,omitempty"`
	// The importance of the feature. This can also be a negative value
	Importance *float32 `json:"importance,omitempty"`
	// The (translated if header is passed) displayName for the feature
	DisplayName *string `json:"displayName,omitempty"`
	// The (translated if header is passed) description for the feature
	Description *string `json:"description,omitempty"`
	TranslationMessages NullableOutlierFeatureTranslation `json:"translationMessages,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OutlierContributingFeature OutlierContributingFeature

// NewOutlierContributingFeature instantiates a new OutlierContributingFeature object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutlierContributingFeature() *OutlierContributingFeature {
	this := OutlierContributingFeature{}
	return &this
}

// NewOutlierContributingFeatureWithDefaults instantiates a new OutlierContributingFeature object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutlierContributingFeatureWithDefaults() *OutlierContributingFeature {
	this := OutlierContributingFeature{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OutlierContributingFeature) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlierContributingFeature) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OutlierContributingFeature) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OutlierContributingFeature) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OutlierContributingFeature) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlierContributingFeature) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OutlierContributingFeature) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OutlierContributingFeature) SetName(v string) {
	o.Name = &v
}

// GetValueType returns the ValueType field value if set, zero value otherwise.
func (o *OutlierContributingFeature) GetValueType() OutlierValueType {
	if o == nil || IsNil(o.ValueType) {
		var ret OutlierValueType
		return ret
	}
	return *o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlierContributingFeature) GetValueTypeOk() (*OutlierValueType, bool) {
	if o == nil || IsNil(o.ValueType) {
		return nil, false
	}
	return o.ValueType, true
}

// HasValueType returns a boolean if a field has been set.
func (o *OutlierContributingFeature) HasValueType() bool {
	if o != nil && !IsNil(o.ValueType) {
		return true
	}

	return false
}

// SetValueType gets a reference to the given OutlierValueType and assigns it to the ValueType field.
func (o *OutlierContributingFeature) SetValueType(v OutlierValueType) {
	o.ValueType = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *OutlierContributingFeature) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlierContributingFeature) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *OutlierContributingFeature) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *OutlierContributingFeature) SetValue(v float32) {
	o.Value = &v
}

// GetImportance returns the Importance field value if set, zero value otherwise.
func (o *OutlierContributingFeature) GetImportance() float32 {
	if o == nil || IsNil(o.Importance) {
		var ret float32
		return ret
	}
	return *o.Importance
}

// GetImportanceOk returns a tuple with the Importance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlierContributingFeature) GetImportanceOk() (*float32, bool) {
	if o == nil || IsNil(o.Importance) {
		return nil, false
	}
	return o.Importance, true
}

// HasImportance returns a boolean if a field has been set.
func (o *OutlierContributingFeature) HasImportance() bool {
	if o != nil && !IsNil(o.Importance) {
		return true
	}

	return false
}

// SetImportance gets a reference to the given float32 and assigns it to the Importance field.
func (o *OutlierContributingFeature) SetImportance(v float32) {
	o.Importance = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *OutlierContributingFeature) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlierContributingFeature) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *OutlierContributingFeature) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *OutlierContributingFeature) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OutlierContributingFeature) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutlierContributingFeature) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OutlierContributingFeature) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OutlierContributingFeature) SetDescription(v string) {
	o.Description = &v
}

// GetTranslationMessages returns the TranslationMessages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutlierContributingFeature) GetTranslationMessages() OutlierFeatureTranslation {
	if o == nil || IsNil(o.TranslationMessages.Get()) {
		var ret OutlierFeatureTranslation
		return ret
	}
	return *o.TranslationMessages.Get()
}

// GetTranslationMessagesOk returns a tuple with the TranslationMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutlierContributingFeature) GetTranslationMessagesOk() (*OutlierFeatureTranslation, bool) {
	if o == nil {
		return nil, false
	}
	return o.TranslationMessages.Get(), o.TranslationMessages.IsSet()
}

// HasTranslationMessages returns a boolean if a field has been set.
func (o *OutlierContributingFeature) HasTranslationMessages() bool {
	if o != nil && o.TranslationMessages.IsSet() {
		return true
	}

	return false
}

// SetTranslationMessages gets a reference to the given NullableOutlierFeatureTranslation and assigns it to the TranslationMessages field.
func (o *OutlierContributingFeature) SetTranslationMessages(v OutlierFeatureTranslation) {
	o.TranslationMessages.Set(&v)
}
// SetTranslationMessagesNil sets the value for TranslationMessages to be an explicit nil
func (o *OutlierContributingFeature) SetTranslationMessagesNil() {
	o.TranslationMessages.Set(nil)
}

// UnsetTranslationMessages ensures that no value is present for TranslationMessages, not even an explicit nil
func (o *OutlierContributingFeature) UnsetTranslationMessages() {
	o.TranslationMessages.Unset()
}

func (o OutlierContributingFeature) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutlierContributingFeature) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ValueType) {
		toSerialize["valueType"] = o.ValueType
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Importance) {
		toSerialize["importance"] = o.Importance
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if o.TranslationMessages.IsSet() {
		toSerialize["translationMessages"] = o.TranslationMessages.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OutlierContributingFeature) UnmarshalJSON(data []byte) (err error) {
	varOutlierContributingFeature := _OutlierContributingFeature{}

	err = json.Unmarshal(data, &varOutlierContributingFeature)

	if err != nil {
		return err
	}

	*o = OutlierContributingFeature(varOutlierContributingFeature)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "valueType")
		delete(additionalProperties, "value")
		delete(additionalProperties, "importance")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "description")
		delete(additionalProperties, "translationMessages")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOutlierContributingFeature struct {
	value *OutlierContributingFeature
	isSet bool
}

func (v NullableOutlierContributingFeature) Get() *OutlierContributingFeature {
	return v.value
}

func (v *NullableOutlierContributingFeature) Set(val *OutlierContributingFeature) {
	v.value = val
	v.isSet = true
}

func (v NullableOutlierContributingFeature) IsSet() bool {
	return v.isSet
}

func (v *NullableOutlierContributingFeature) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutlierContributingFeature(val *OutlierContributingFeature) *NullableOutlierContributingFeature {
	return &NullableOutlierContributingFeature{value: val, isSet: true}
}

func (v NullableOutlierContributingFeature) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutlierContributingFeature) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


