openapi: 3.0.1
info:
  contact:
    name: Developer Relations
    url: https://developer.sailpoint.com/discuss/api-help
  description: "Use these APIs to interact with the IdentityNow platform to achieve\
    \ repeatable, automated processes with greater scalability. We encourage you to\
    \ join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss\
    \ to connect with other developers using our APIs."
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://developer.sailpoint.com/discuss/tos
  title: IdentityNow V3 API
  version: 3.0.0
servers:
- description: This is the production API server.
  url: "https://{tenant}.api.identitynow.com/v3"
  variables:
    tenant:
      default: sailpoint
      description: "This is the name of your tenant, typically your company's name."
security:
- oauth2: []
tags:
- description: "Use this API to implement and customize access request approval functionality.\
    \ \nWith this functionality in place, administrators can delegate qualified users\
    \ to review users' requests for access or managers' requests to revoke team members'\
    \ access to applications, entitlements, or roles.      \nThis enables more qualified\
    \ users to review access requests and the others to spend their time on other\
    \ tasks.  \n\nIn IdentityNow, users can request access to applications, entitlements,\
    \ and roles, and managers can request that team members' access be revoked.  \
    \ \nFor applications and entitlements, administrators can set access profiles\
    \ to require approval from the access profile owner, the application owner, the\
    \ source owner, the requesting user's manager, or a governance group for access\
    \ to be granted or revoked.   \nFor roles, administrators can also set roles to\
    \ allow access requests and require approval from the role owner, the requesting\
    \ user's manager, or a governance group for access to be granted or revoked. \
    \  \nIf the administrator designates a governance group as the required approver,\
    \ any governance group member can approve the requests.\n   \nWhen a user submits\
    \ an access request, IdentityNow sends the first required approver in the queue\
    \ an email notification, based on the access request configuration's approval\
    \ and reminder escalation configuration.\n\nIn Approvals in IdentityNow, required\
    \ approvers can view pending access requests under the Requested tab and approve\
    \ or deny them, or the approvers can reassign the requests to different reviewers\
    \ for approval.   \nIf the required approver approves the request and is the only\
    \ reviewer required, IdentityNow grants or revokes access, based on the request.\
    \   \nIf multiple reviewers are required, IdentityNow sends the request to the\
    \ next reviewer in the queue, based on the access request configuration's approval\
    \ reminder and escalation configuration.   \nThe required approver can then view\
    \ any completed access requests under the Reviewed tab.   \n\nRefer to [Access\
    \ Requests](https://documentation.sailpoint.com/saas/help/requests/index.html)\
    \ for more information about access request approvals.\n"
  name: Access Request Approvals
- description: "Use this API to implement and customize access request functionality.\
    \ \nWith this functionality in place, users can request access to applications,\
    \ entitlements, or roles, and managers can request that team members' access be\
    \ revoked.\nThis allows users to get access to the tools they need quickly and\
    \ securely, and it allows managers to take away access to those tools. \n\nIdentityNow's\
    \ Access Request service allows end users to request access that requires approval\
    \ before it can be granted to users and enables qualified users to review those\
    \ requests and approve or deny them.\n\nIn the Request Center in IdentityNow,\
    \ users can view available applications, roles, and entitlements and request access\
    \ to them. \nIf the requested tools requires approval, the requests appear as\
    \ 'Pending' under the My Requests tab until the required approver approves, rejects,\
    \ or cancels them. \n\nUsers can use My Requests to track and/or cancel the requests.\n\
    \nIn My Team on the IdentityNow Home, managers can submit requests to revoke their\
    \ team members' access. \nThey can use the My Requests tab under Request Center\
    \ to track and/or cancel the requests.\n\nRefer to [Requesting Access](https://documentation.sailpoint.com/saas/user-help/requests/requesting_access.html)\
    \ for more information about access requests.\n"
  name: Access Requests
- description: "Use this API to implement and customize account functionality.\nWith\
    \ this functionality in place, administrators can manage users' access across\
    \ sources in IdentityNow. \n\nIn IdentityNow, an account refers to a user's account\
    \ on a supported source.\nThis typically includes a unique identifier for the\
    \ user, a unique password, a set of permissions associated with the source and\
    \ a set of attributes. IdentityNow loads accounts through the creation of sources\
    \ in IdentityNow.\n\nAdministrators can correlate users' identities with the users'\
    \ accounts on the different sources they use. \nThis allows IdentityNow to govern\
    \ the access of identities and all their correlated accounts securely and cohesively.\
    \ \n\nTo view the accounts on a source and their correlated identities, administrators\
    \ can use the Connections drop-down menu, select Sources, select the relevant\
    \ source, and select its Account tab. \n\nTo view and edit source account statuses\
    \ for an identity in IdentityNow, administrators can use the Identities drop-down\
    \ menu, select Identity List, select the relevant identity, and select its Accounts\
    \ tab. \nAdministrators can toggle an account's Actions to aggregate the account,\
    \ enable/disable it, unlock it, or remove it from the identity. \n\nAccounts can\
    \ have the following statuses: \n\n- Enabled: The account is enabled. The user\
    \ can access it.\n\n- Disabled: The account is disabled, and the user cannot access\
    \ it, but the identity is not disabled in IdentityNow. This can occur when an\
    \ administrator disables the account or when the user's lifecycle state changes.\
    \ \n\n- Locked: The account is locked. This may occur when someone has entered\
    \ an incorrect password for the account too many times.\n\n- Pending: The account\
    \ is currently updating. This status typically lasts seconds. \n\nAdministrators\
    \ can select the source account to view its attributes, entitlements, and the\
    \ last time the account's password was changed.\n\nRefer to [Managing User Accounts](https://documentation.sailpoint.com/saas/help/common/users/user_access.html#managing-user-accounts)\
    \ for more information about accounts.\n"
  name: Accounts
- description: "Use this API to implement account activity tracking functionality.\n\
    With this functionality in place, users can track source account activity in IdentityNow,\
    \ which greatly improves traceability in the system. \n\nAn account activity refers\
    \ to a log of each action performed on a source account. This is useful for auditing\
    \ the changes performed on an account throughout its life. \nIn IdentityNow's\
    \ Search, users can search for account activities and select the activity's row\
    \ to get an overview of the activity's account action and view its progress, its\
    \ involved sources, and its most basic metadata, such as the identity requesting\
    \ the option and the recipient. \n\nAccount activity includes most actions IdentityNow\
    \ completes on source accounts. Users can search in IdentityNow for the following\
    \ account action types: \n\n- Access Request: These include any access requests\
    \ the source account is involved in. \n\n- Account Attribute Updates: These include\
    \ updates to a single attribute on an account on a source. \n\n- Account State\
    \ Update: These include locking or unlocking actions on an account on a source.\
    \ \n\n- Certification: These include actions removing an entitlement from an account\
    \ on a source as a result of the entitlement's revocation during a certification.\n\
    \n- Cloud Automated `Lifecyclestate`: These include automated lifecycle state\
    \ changes that result in a source account's correlated identity being assigned\
    \ to a different lifecycle state. \nIdentityNow replaces the `Lifecyclestate`\
    \ variable with the name of the lifecycle state it has moved the account's identity\
    \ to. \n\n- Identity Attribute Update: These include updates to a source account's\
    \ correlated identity attributes as the result of a provisioning action. \nWhen\
    \ you update an identity attribute that also updates an identity's lifecycle state,\
    \ the cloud automated `Lifecyclestate` event also displays.\nAccount Activity\
    \ does not include attribute updates that occur as a result of aggregation.\n\n\
    - Identity Refresh: These include correlated identity refreshes that occur for\
    \ an account on a source whenever the account's correlated identity profile gets\
    \ a new role or updates. \nThese also include refreshes that occur whenever IdentityNow\
    \ assigns an application to the account's correlated identity based on the application's\
    \ being assigned to All Users From Source or Specific Users From Source. \n\n\
    - Lifecycle State Refresh: These include the actions that took place when a lifecycle\
    \ state changed. This event only occurs after a cloud automated `Lifecyclestate`\
    \ change or a lifecycle state change. \n\n- Lifecycle State Change: These include\
    \ the account activities that result from an identity's manual assignment to a\
    \ null lifecycle state.\n\n- Password Change: These include password changes on\
    \ sources.\n\nRefer to [Account Activity](https://documentation.sailpoint.com/saas/help/search/index.html#account-activity)\
    \ for more information about account activities.\n"
  name: Account Activities
- description: "Use this API to implement certification functionality. \nWith this\
    \ functionality in place, administrators and designated certification reviewers\
    \ can review users' access certifications and decide whether to approve access,\
    \ revoke it, or reassign the review to another reviewer. \nImplementing certifications\
    \ improves organizations' data security by reducing inappropriate access through\
    \ a distributed review process and helping them satisfy audit and regulatory requirements.\
    \ \n\nA certification refers to IdentityNow's mechanism for reviewing a user's\
    \ access to entitlements (sets of permissions) and approving or removing that\
    \ access. \nThese serve as a way of showing that a user's access has been reviewed\
    \ and approved. \nMultiple certifications by different reviewers are often required\
    \ to approve a user's access. \nA set of multiple certifications is called a certification\
    \ campaign.\n\nFor example, an organization may use a Manager Certification as\
    \ a way of showing that a user's access has been reviewed and approved by their\
    \ manager, or if the certification is part of a campaign, that the user's access\
    \ has been reviewed and approved by multiple managers. \nOnce this certification\
    \ has been completed, IdentityNow  would provision all the access the user needs,\
    \ nothing more. \n\nOrganization administrators or certification administrators\
    \ can designate other IdentityNow users as certification reviewers. \nThose reviewers\
    \ can select the 'Certifications' tab to view any of the certifications they either\
    \ need to review or have already reviewed under the 'Active' and 'Completed' tabs,\
    \ respectively. \n\nWhen a certification campaign is in progress, certification\
    \ reviewers will see certifications listed under 'Active,' where they can review\
    \ the involved identities. \nUnder the 'Decision' column on the right, next to\
    \ each access item, reviewers can select the checkmark to approve access, select\
    \ the 'X' to revoke access, or they can toggle the 'More Options' menu to reassign\
    \ the certification to another reviewer and provide a reason for reassignment\
    \ in the form of a comment. \n\nOnce a reviewer has made decisions on all the\
    \ certification's involved access items, he or she must select 'Sign Off' to complete\
    \ the review process.\nDoing so converts the certification into read-only status,\
    \ preventing any further changes to the review decisions and deleting the work\
    \ item (task) from the reviewer's list of work items. \n\nOnce all the reviewers\
    \ have signed off, the certification campaign either completes or, if any reviewers\
    \ decided to revoke access for any of the involved identities, it moves into a\
    \ remediation phase. In the remediation phase, identities' entitlements are altered\
    \ to remove any entitlements marked for revocation.\nIn this situation, the certification\
    \ campaign completes once all the remediation requests are completed. \n\nRefer\
    \ to [Certifications](https://documentation.sailpoint.com/saas/user-help/certifications.html)\
    \ for more information about certifications.\n"
  name: Certifications
- description: "Use this API to implement certification summary functionality. \n\
    With this functionality in place, administrators and designated certification\
    \ reviewers can review summaries of identity certification campaigns and draw\
    \ conclusions about the campaigns' scope, security, and effectiveness. \nImplementing\
    \ certification summary functionality improves organizations' ability to review\
    \ their [certifications](https://documentation.sailpoint.com/saas/user-help/certifications.html)\
    \ and helps them satisfy audit and regulatory requirements by enabling them to\
    \ trace access changes and the decisions made in their review processes. \n\n\
    A certification refers to IdentityNow's mechanism for reviewing a user's access\
    \ to entitlements (sets of permissions) and approving or removing that access.\
    \ \nThese certifications serve as a way of showing that a user's access has been\
    \ reviewed and approved. \nMultiple certifications by different reviewers are\
    \ often required to approve a user's access. \nA set of multiple certifications\
    \ is called a certification campaign. \n\nFor example, an organization may use\
    \ a Manager Certification as a way of showing that a user's access has been reviewed\
    \ and approved by their manager, or if the certification is part of a campaign,\
    \ that the user's access has been reviewed and approved by multiple managers.\
    \ \nOnce this certification has been completed, IdentityNow  would provision all\
    \ the access the user needs, nothing more. \n\nCertification summaries provide\
    \ information about identity certification campaigns such as the identities involved,\
    \ the number of decisions made, and the access changed. \nFor example, an administrator\
    \ or designated certification reviewer can examine the Manager Certification campaign\
    \ to get an overview of how many entitlement decisions are made in that campaign\
    \ as opposed to role decisions, which identities would be affected by changes\
    \ to the campaign, and how those identities' access would be affected.  \n"
  name: Certification Summaries
- description: "Use this API to implement and customize lifecycle state functionality.\n\
    With this functionality in place, administrators can create and configure custom\
    \ lifecycle states for use across their organizations, which is key to controlling\
    \ which users have access, when they have access, and the access they have.\n\n\
    A lifecycle state describes a user's status in a company. For example, two lifecycle\
    \ states come by default with IdentityNow: 'Active' and 'Inactive.' \nWhen an\
    \ active employee takes an extended leave of absence from a company, his or her\
    \ lifecycle state may change to 'Inactive,' for security purposes. \nThe inactive\
    \ employee would lose access to all the applications, sources, and sensitive data\
    \ during the leave of absence, but when the employee returns and becomes active\
    \ again, all that access would be restored. \nThis saves administrators the time\
    \ that would otherwise be spent provisioning the employee's access to each individual\
    \ tool, reviewing the employee's certification history, etc. \n\nAdministrators\
    \ can create a variety of custom lifecycle states. Refer to [Planning New Lifecycle\
    \ States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#planning-new-lifecycle-states)\
    \ for some custom lifecycle state ideas.\n\nAdministrators must define the criteria\
    \ for being in each lifecycle state, and they must define how IdentityNow manages\
    \ users' access to apps and sources for each lifecycle state.\n\nIn IdentityNow,\
    \ administrators can manage lifecycle states by going to Admin > Identities >\
    \ Identity Profile, selecting the identity profile whose lifecycle states they\
    \ want to manage, selecting the 'Provisioning' tab, and using the left panel to\
    \ either select the lifecycle state they want to modify or create a new lifecycle\
    \ state. \n\nIn the 'Provisioning' tab, administrators can make the following\
    \ access changes to an identity profile's lifecycle state: \n\n- Enable/disable\
    \ the lifecycle state for the identity profile.\n\n- Enable/disable source accounts\
    \ for the identity profile's lifecycle state.\n\n- Add existing access profiles\
    \ to grant to the identity profiles in that lifecycle state.\n\n- Create a new\
    \ access profile to grant to the identity profile in that lifecycle state.\n\n\
    Access profiles granted in a previous lifecycle state are automatically revoked\
    \ when the identity moves to a new lifecycle state. \nTo maintain access across\
    \ multiple lifecycle states, administrators must grant the access profiles in\
    \ each lifecycle state. \nFor example, if an administrator wants users with the\
    \ 'HR Employee' identity profile to maintain their building access in both the\
    \ 'Active' and 'Leave of Absence' lifecycle states, the administrator must grant\
    \ the access profile for that building access to both lifecycle states.\n\nDuring\
    \ scheduled refreshes, IdentityNow evaluates lifFecycle states to determine whether\
    \ their assigned identities have the access defined in the lifecycle states' access\
    \ profiles. \nIf the identities are missing access, IdentityNow provisions that\
    \ access. \n\nAdministrators can also use the 'Provisioning' tab to configure\
    \ email notifications for IdentityNow to send whenever an identity with that identity\
    \ profile has a lifecycle state change. \nRefer to [Configuring Lifecycle State\
    \ Notifications](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#configuring-lifecycle-state-notifications)\
    \ for more information on how to do so.\n\nAn identity's lifecycle state can have\
    \ four different statuses: the lifecycle state's status can be 'Active,' it can\
    \ be 'Not Set,' it can be 'Not Valid,' or it 'Does Not Match Technical Name Case.'\
    \ \nRefer to [Moving Identities into Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#moving-identities-into-lifecycle-states)\
    \ for more information about these different lifecycle state statuses. \n\nRefer\
    \ to [Setting Up Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html)\
    \ for more information about lifecycle states.\n"
  name: Lifecycle States
- description: "Use this API to implement identity profile functionality. \nWith this\
    \ functionality in place, administrators can view identity profiles and their\
    \ configurations. \n\nIdentity profiles represent the configurations that can\
    \ be applied to identities as a way of granting them a set of security and access,\
    \ as well as defining the mappings between their identity attributes and their\
    \ source attributes.  \n\nIn IdentityNow, administrators can use the Identities\
    \ drop-down menu and select Identity Profiles to view the list of identity profiles.\
    \ \nThis list shows some details about each identity profile, along with its status.\
    \ \nThey can select an identity profile to view its settings, its mappings between\
    \ identity attributes and correlating source account attributes, and its provisioning\
    \ settings. \n\nRefer to [Creating Identity Profiles](https://documentation.sailpoint.com/saas/help/setup/identity_profiles.html)\
    \ for more information about identity profiles.\n"
  name: Identity Profiles
- description: "Use this API to implement non-employee lifecycle management functionality.\
    \ \nWith this functionality in place, administrators can create non-employee records\
    \ and configure them for use in their organizations. \nThis allows organizations\
    \ to provide secure access to non-employees and control that access. \n\nThe 'non-employee'\
    \ term refers to any consultant, contractor, intern, or other user in an organization\
    \ who is not a full-time permanent employee. \nOrganizations can track non-employees'\
    \ access and activity in IdentityNow by creating and maintaining non-employee\
    \ sources. \nOrganizations can have a maximum of 50 non-employee sources. \n\n\
    By using SailPoint's Non-Employee Lifecycle Management functionality, you agree\
    \ to the following:\n\n- SailPoint is not responsible for storing sensitive data.\
    \ \nYou may only add account attributes to non-employee identities that are necessary\
    \ for business operations and are consistent with your contractual limitations\
    \ on data that may be sent or stored in IdentityNow.\n\n- You are responsible\
    \ for regularly downloading your list of non-employee accounts for all the sources\
    \ you create and storing this list of accounts in a managed location to maintain\
    \ an authoritative system of record and backup data for these accounts.\n\nTo\
    \ manage non-employees in IdentityNow, administrators must create a non-employee\
    \ source and add accounts to the source. \n\nTo create a non-employee source in\
    \ IdentityNow, administrators must use the Admin panel to go to Connections >\
    \ Sources.\nThey must then specify 'Non-Employee' in the 'Source Type' field.\
    \ \nRefer to [Creating a Non-Employee Source](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html#creating-a-non-employee-source)\
    \ for more details about how to create non-employee sources.\n\nTo add accounts\
    \ to a non-employee source in IdentityNow, administrators can select the non-employee\
    \ source and add the accounts. \nThey can also use the 'Manage Non-Employees'\
    \ widget on their user dashboards to reach the list of sources and then select\
    \ the non-employee source they want to add the accounts to. \n\nAdministrators\
    \ can either add accounts individually or in bulk. Each non-employee source can\
    \ have a maximum of 20,000 accounts. \nTo add accounts in bulk, they must select\
    \ the 'Bulk Upload' option and upload a CSV file. \nRefer to [Adding Accounts](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html#adding-accounts)\
    \ for more details about how to add accounts to non-employee sources.\n\nOnce\
    \ administrators have created the non-employee source and added accounts to it,\
    \ they can create identity profiles to generate identities for the non-employee\
    \ accounts and manage the non-employee identities the same way they would any\
    \ other identities. \n\nRefer to [Managing Non-Employee Sources and Accounts](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html)\
    \ for more information about non-employee lifecycle management.\n"
  name: Non-Employee Lifecycle Management
- description: "Use this API to implement OAuth client functionality.   \nWith this\
    \ functionality in place, users with the appropriate security scopes can create\
    \ and configure OAuth clients to use as a way to obtain authorization to use the\
    \ IdentityNow REST API.\nRefer to [Authentication](https://developer.sailpoint.com/idn/api/authentication)\
    \ for more information about OAuth and how it works with the IdentityNow REST\
    \ API. \n"
  name: OAuth Clients
- description: "Use this API to implement password management functionality.  \nWith\
    \ this functionality in place, users can manage their identity passwords for all\
    \ their applications.\n\nIn IdentityNow, users can select their names in the upper\
    \ right corner of the page and use the drop-down menu to select Password Manager.\
    \ \nPassword Manager lists the user's identity's applications, possibly grouped\
    \ to share passwords. \nUsers can then select 'Change Password' to update their\
    \ passwords. \n\nGrouping passwords allows users to update their passwords more\
    \ broadly, rather than requiring them to update each password individually. \n\
    Password Manager may list the applications and sources in the following groups:\n\
    \n- Password Group: This refers to a group of applications that share a password.\
    \ \nFor example, a user can use the same password for Google Drive, Google Mail,\
    \ and YouTube. \nUpdating the password for the password group updates the password\
    \ for all its included applications.\n\n- Multi-Application Source: This refers\
    \ to a source with multiple applications that share a password. \nFor example,\
    \ a user can have a source, G Suite, that includes the Google Calendar, Google\
    \ Drive, and Google Mail applications. \nUpdating the password for the multi-application\
    \ source updates the password for all its included applications. \n\n- Applications:\
    \ These are applications that do not share passwords with other applications.\n\
    \nAn organization may require some authentication for users to update their passwords.\
    \ \nUsers may be required to answer security questions or use a third-party authenticator\
    \ before they can confirm their updates. \n\nRefer to [Managing Passwords](https://documentation.sailpoint.com/saas/user-help/accounts/passwords.html)\
    \ for more information about password management.\n"
  name: Password Management
- description: "Use this API to implement personal access token (PAT) functionality.\
    \ \nWith this functionality in place, users can use PATs as an alternative to\
    \ passwords for authentication in IdentityNow. \n\nPATs embed user information\
    \ into the client ID and secret. \nThis replaces the API clients' need to store\
    \ and provide a username and password to establish a connection, improving IdentityNow\
    \ organizations' integration security. \n\nIn IdentityNow, users can do the following\
    \ to create and manage their PATs: Select the dropdown menu under their names,\
    \ select Preferences, and then select Personal Access Tokens. \nThey must then\
    \ provide a description about the token's purpose. \nThey can then select 'Create\
    \ Token' at the bottom of the page to generate and view the Secret and Client\
    \ ID. \n\nRefer to [Managing Personal Access Tokens](https://documentation.sailpoint.com/saas/help/common/generate_tokens.html)\
    \ for more information about PATs.\n"
  name: Personal Access Tokens
- description: "Use this API in conjunction with [Public Identites Config](https://developer.sailpoint.com/idn/api/v3/public-identities-config)\
    \ to enable non-administrators to view identities' publicly visible attributes.\
    \ \nWith this functionality in place, non-administrators can view identity attributes\
    \ other than the default attributes (email, lifecycle state, and manager), depending\
    \ on which identity attributes their organization administrators have made public.\
    \ \nThis can be helpful for access approvers, certification reviewers, managers\
    \ viewing their direct reports' access, and source owners viewing their tasks.\n"
  name: Public Identities
- description: "Use this API to implement public identity configuration functionality.\
    \ \nWith this functionality in place, administrators can make up to 5 identity\
    \ attributes publicly visible so other non-administrator users can see the relevant\
    \ information they need to make decisions. \nThis can be helpful for approvers\
    \ making approvals, certification reviewers, managers viewing their direct reports'\
    \ access, and source owners viewing their tasks.\n\nBy default, non-administrators\
    \ can select an identity and view the following attributes: email, lifecycle state,\
    \ and manager. \nHowever, it may be helpful for a non-administrator reviewer to\
    \ see other identity attributes like department, region, title, etc.\nAdministrators\
    \ can use this API to make those necessary identity attributes public to non-administrators.\
    \ \n\nFor example, a non-administrator deciding whether to approve another identity's\
    \ request for access to the Workday application, whose access may be restricted\
    \ to members of the HR department, would want to know whether the identity is\
    \ a member of the HR department. \nIf an administrator has used [Update Public\
    \ Identity Config](https://developer.sailpoint.com/idn/api/v3/update-public-identity-config)\
    \ to make the \"department\" attribute public, the approver can see the department\
    \ and make a decision without requesting any more information.\n"
  name: Public Identities Config
- description: "Use this API to implement requestable object functionality. \nWith\
    \ this functionality in place, administrators can determine which access items\
    \ can be requested with the [Access Request APIs](https://developer.sailpoint.com/idn/api/v3/access-requests),\
    \ along with their statuses. \nThis can be helpful for administrators who are\
    \ implementing and customizing access request functionality as a way of checking\
    \ which items are requestable as they are created, assigned, and made available.\n"
  name: Requestable Objects
- description: "Use this API to implement saved search functionality. \nWith saved\
    \ search functionality in place, users can save search queries and then view those\
    \ saved searches, as well as rerun them. \n\nSearch queries in IdentityNow can\
    \ grow very long and specific, which can make reconstructing them difficult or\
    \ tedious, so it can be especially helpful to save search queries. \nIt also opens\
    \ the possibility to configure IdentityNow to run the saved queries on a schedule,\
    \ which is essential to detecting user information and access changes throughout\
    \ an organization's tenant and across all its sources. \nRefer to [Scheduled Search](https://developer.sailpoint.com/idn/api/v3/scheduled-search)\
    \ for more information about running saved searches on a schedule. \n\nIn IdentityNow,\
    \ users can save searches under a name, and then they can access that saved search\
    \ and run it again when they want. \n\nRefer to [Managing Saved Searches](https://documentation.sailpoint.com/saas/help/search/saved-searches.html)\
    \ for more information about saving searches and using them. \n"
  name: Saved Search
- description: "Use this API to implement scheduled search functionality. \nWith scheduled\
    \ search functionality in place, users can run saved search queries on their tenants\
    \ on a schedule, and IdentityNow emails them the search results. \nUsers can also\
    \ share these search results with other users by email by adding those users as\
    \ subscribers, or those users can subscribe themselves. \n\nOne of the greatest\
    \ benefits of saving searches is the ability to run those searches on a schedule.\
    \ \nThis is essential for organizations to constantly detect any changes to user\
    \ information or access throughout their tenants and across all their sources.\
    \ \nFor example, the manager Amanda Ross can schedule a saved search \"manager.name:amanda.ross\
    \ AND attributes.location:austin\" on a schedule to regularly stay aware of changes\
    \ with the Austin employees reporting to her.\nIdentityNow emails her the search\
    \ results when the search runs, so she can work on other tasks instead of actively\
    \ running this search.\n\nIn IdentityNow, scheduling a search involves a subscription.\
    \ \nUsers can create a subscription for a saved search and schedule it to run\
    \ daily, weekly, or monthly (you can only use one schedule option at a time).\
    \ \nThe user can add other identities as subscribers so when the scheduled search\
    \ runs, the subscribers and the user all receive emails. \n\nBy default, subscriptions\
    \ exclude detailed results from the emails, for security purposes. \nIncluding\
    \ detailed results about user access in an email may expose sensitive information.\n\
    However, the subscription creator can choose to include the information in the\
    \ emails.  \n\nBy default, IdentityNow sends emails to the subscribers even when\
    \ the searches do not return new results. \nHowever, the subscription creator\
    \ can choose to suppress these empty emails. \n\nUsers can also subscribe to saved\
    \ searches that already have existing subscriptions so they receive emails when\
    \ the searches run. \nA saved search can have up to 10 subscriptions configured\
    \ at a time. \n\nThe subscription creator can enable, disable, or delete the subscription.\
    \ \n\nRefer to [Subscribing to Saved Searches](https://documentation.sailpoint.com/saas/help/search/saved-searches.html#subscribing-to-saved-searches)\
    \ for more information about scheduling searches and subscribing to them.\n"
  name: Scheduled Search
- description: "Use this API to implement search functionality. \nWith search functionality\
    \ in place, users can search their tenants for nearly any information from throughout\
    \ their organizations. \n\nIdentityNow enables organizations to store user data\
    \ from across all their connected sources and manage the users' access, so the\
    \ ability to query and filter that data is essential.  \nIts search goes through\
    \ all those sources and finds the results quickly and specifically. \n\nThe search\
    \ query is flexible - it can be very broad or very narrow. \nThe search only returns\
    \ results for searchable objects it is filtering for. \nThe following objects\
    \ are searchable: identities, roles, access profiles, entitlements, events, and\
    \ account activities. \nBy default, no filter is applied, so a search for \"Ad\"\
    \ returns both the identity \"Adam.Archer\" as well as the role \"Administrator.\"\
    \n\nUsers can further narrow their results by using IdentityNow's specific syntax\
    \ and punctuation to structure their queries. \nFor example, the query \"attributes.location:austin\
    \ AND NOT manager.name:amanda.ross\" returns all results associated with the Austin\
    \ location, but it excludes those associated with the manager Amanda Ross.\nRefer\
    \ to [Building a Search Query](https://documentation.sailpoint.com/saas/help/search/building-query.html)\
    \ for more information about how to construct specific search queries. \n\nRefer\
    \ to [Using Search](https://documentation.sailpoint.com/saas/help/search/index.html)\
    \ for more information about IdentityNow's search and its different possibilities.\
    \ \n\nThe search feature uses Elasticsearch as a datastore and query engine. \n\
    The power of Elasticsearch makes this feature suitable for ad-hoc reporting.\n\
    However, data from the operational databases (ex. identities, roles, events, etc)\
    \ has to be ingested into Elasticsearch. \nThis ingestion process introduces a\
    \ latency from when the operational data is created to when it is available in\
    \ search. \nDepending on the system load, this can take a few seconds to a few\
    \ minutes. \nPlease keep this latency in mind when you use search. \n"
  name: Search
- description: "Use this API to build an integration between IdentityNow and a service\
    \ desk ITSM (IT service management) solution. \nOnce an administrator builds this\
    \ integration between IdentityNow and a service desk, users can use IdentityNow\
    \ to raise and track tickets that are synchronized between IdentityNow and the\
    \ service desk. \n\nIn IdentityNow, administrators can create a service desk integration\
    \ (sometimes also called an SDIM, or Service Desk Integration Module) by going\
    \ to Admin > Connections > Service Desk and selecting 'Create.'\n\nTo create a\
    \ Generic Service Desk integration, for example, administrators must provide the\
    \ required information on the General Settings page, the Connectivity and Authentication\
    \ information, Ticket Creation information, Status Mapping information, and Requester\
    \ Source information on the Configure page. \nRefer to [Integrating SailPoint\
    \ with Generic Service Desk](https://documentation.sailpoint.com/connectors/generic_sd/help/integrating_generic_service_desk/intro.html)\
    \ for more information about the process of setting up a Generic Service Desk\
    \ in IdentityNow.\n\nAdministrators can create various service desk integrations,\
    \ all with their own nuances. \nThe following service desk integrations are available:\
    \ \n\n- [Atlassian Cloud Jira Service Management](https://documentation.sailpoint.com/connectors/atlassian/jira_cloud/help/integrating_jira_cloud/introduction.html)\n\
    \n- [Atlassian Server Jira Service Management](https://documentation.sailpoint.com/connectors/atlassian/jira_server/help/integrating_jira_server/introduction.html)\n\
    \n- [BMC Helix ITSM Service Desk](https://documentation.sailpoint.com/connectors/bmc/helix_ITSM_sd/help/integrating_bmc_helix_itsm_sd/intro.html)\n\
    \n- [BMC Helix Remedyforce Service Desk](https://documentation.sailpoint.com/connectors/bmc/helix_remedyforce_sd/help/integrating_bmc_helix_remedyforce_sd/intro.html)\n\
    \n- [Generic Service Desk](https://documentation.sailpoint.com/connectors/generic_sd/help/integrating_generic_service_desk/intro.html)\n\
    \n- [ServiceNow Service Desk](https://documentation.sailpoint.com/connectors/servicenow/sdim/help/integrating_servicenow_sdim/intro.html)\n\
    \n- [Zendesk Service Desk](https://documentation.sailpoint.com/connectors/zendesk/help/integrating_zendesk_sd/introduction.html)\
    \  \n"
  name: Service Desk Integration
- description: "Use this API to implement and customize source functionality. \nWith\
    \ source functionality in place, organizations can use IdentityNow to connect\
    \ their various sources and user data sets and manage access across all those\
    \ different sources in a secure, scalable way. \n\n[Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html)\
    \ refer to the IdentityNow representations for external applications, databases,\
    \ and directory management systems that maintain their own sets of users, like\
    \ Dropbox, GitHub, and Workday, for example.\nOrganizations may use hundreds,\
    \ if not thousands, of different source systems, and any one employee within an\
    \ organization likely has a different user record on each source, often with different\
    \ permissions on many of those records. \nConnecting these sources to IdentityNow\
    \ makes it possible to manage user access across them all.\nThen, if a new hire\
    \ starts at an organization, IdentityNow can grant the new hire access to all\
    \ the sources they need.\nIf an employee moves to a new department and needs access\
    \ to new sources but no longer needs access to others, IdentityNow can grant the\
    \ necessary access and revoke the unnecessary access for all the employee's various\
    \ sources. \nIf an employee leaves the company, IdentityNow can revoke access\
    \ to all the employee's various source accounts immediately. \nThese are just\
    \ a few examples of the many ways that source functionality makes identity governance\
    \ easier, more efficient, and more secure. \n\nIn IdentityNow, administrators\
    \ can create configure, manage, and edit sources, and they can designate other\
    \ users as source admins to be able to do so.\nThey can also designate users as\
    \ source sub-admins, who can perform the same source actions but only on sources\
    \ associated with their governance groups.\nAdmins go to Connections > Sources\
    \ to see a list of the existing source representations in their organizations.\
    \ \nThey can create new sources or select existing ones. \n\nTo create a new source,\
    \ the following must be specified: Source Name, Description, Source Owner, and\
    \ Connection Type.\nRefer to [Configuring a Source](https://documentation.sailpoint.com/saas/help/accounts/loading_data.html#configuring-a-source)\
    \ for more information about the source configuration process. \n\nIdentityNow\
    \ connects with its sources either by a direct communication with the source server\
    \ (connection information specific to the source must be provided) or a flat file\
    \ feed, a CSV file containing all the relevant information about the accounts\
    \ to be loaded in.\nDifferent sources use different connectors to share data with\
    \ IdentityNow, and each connector's setup process is specific to that connector.\
    \ \nSailPoint has built a number of connectors to come out of the box and connect\
    \ to the most common sources, and SailPoint actively maintains these connectors.\n\
    Refer to [IdentityNow Connectors](https://documentation.sailpoint.com/connectors/identitynow/landingpages/help/landingpages/identitynow_connectivity_landing.html)\
    \ for more information about these SailPoint supported connectors. \nRefer to\
    \ the following links for more information about two useful connectors: \n\n-\
    \ [JDBC Connector](https://documentation.sailpoint.com/connectors/jdbc/help/integrating_jdbc/introduction.html):\
    \ This customizable connector an directly connect to databases that support JDBC\
    \ (Java Database Connectivity).\n\n- [Web Services Connector](https://documentation.sailpoint.com/connectors/webservices/help/integrating_webservices/introduction.html):\
    \ This connector can directly connect to databases that support Web Services.\
    \ \n\nRefer to [SaaS Connectivity](https://developer.sailpoint.com/idn/docs/saas-connectivity)\
    \ for more information about SailPoint's new connectivity framework that makes\
    \ it easy to build and manage custom connectors to SaaS sources. \n\nWhen admins\
    \ select existing sources, they can view the following information about the source:\n\
    \n- Associated connections (any associated identity profiles, apps, or references\
    \ to the source in a transform).\n\n- Associated user accounts. These accounts\
    \ are linked to their identities - this provides a more complete picture of each\
    \ user's access across sources.\n\n- Associated entitlements (sets of access rights\
    \ on sources).\n\n- Associated access profiles (groupings of entitlements). \n\
    \nThe user account data and the entitlements update with each data aggregation\
    \ from the source. \nOrganizations generally run scheduled, automated data aggregations\
    \ to ensure that their data is always in sync between their sources and their\
    \ IdentityNow tenants so an access change on a source is detected quickly in IdentityNow.\n\
    Admins can view a history of these aggregations, and they can also run manual\
    \ imports. \nRefer to [Loading Account Data](https://documentation.sailpoint.com/saas/help/accounts/loading_data.html)\
    \ for more information about manual and scheduled aggregations. \n\nAdmins can\
    \ also make changes to determine which user account data IdentityNow collects\
    \ from the source and how it correlates that account data with identity data.\
    \ \nTo define which account attributes the source shares with IdentityNow, admins\
    \ can edit the account schema on the source.\nRefer to [Managing Source Account\
    \ Schemas](https://documentation.sailpoint.com/saas/help/accounts/schema.html)\
    \ for more information about source account schemas and how to edit them. \nTo\
    \ define the mapping between the source account attributes and their correlating\
    \ identity attributes, admins can edit the correlation configuration on the source.\
    \ \nRefer to [Assigning Source Accounts to Identities](https://documentation.sailpoint.com/saas/help/accounts/correlation.html)\
    \ for more information about this correlation process between source accounts\
    \ and identities.\n\nAdmins can also delete sources, but they must first ensure\
    \ that the sources no longer have any active connections: the source must not\
    \ be associated with any identity profile or any app, and it must not be referenced\
    \ by any transform.\nRefer to [Deleting Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html#deleting-sources)\
    \ for more information about deleting sources. \n\nWell organized, mappped out\
    \ connections between sources and IdentityNow are essential to achieving comprehensive\
    \ identity access governance across all the source systems organizations need.\
    \ \nRefer to [Managing Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html)\
    \ for more information about all the different things admins can do with sources\
    \ once they are connected. \n"
  name: Sources
- description: |
    The purpose of this API is to expose functionality for the manipulation of Transform objects.
    Transforms are a form of configurable objects which define an easy way to manipulate attribute data without having
    to write code. These endpoints don't require API calls to other resources, audit service is used for keeping track
    of which users have made changes to the Transforms.

    Refer to [Transforms](https://developer.sailpoint.com/idn/docs/transforms) for more information about transforms.
  name: Transforms
- description: "Use this API to implement work item functionality. \nWith this functionality\
    \ in place, users can manage their work items (tasks). \n\nWork items refer to\
    \ the tasks users see in IdentityNow's Task Manager. \nThey can see the pending\
    \ work items they need to complete, as well as the work items they have already\
    \ completed. \nTask Manager lists the work items along with the involved sources,\
    \ identities, accounts, and the timestamp when the work item was created. \nFor\
    \ example, a user may see a pending 'Create an Account' work item for the identity\
    \ Fred.Astaire in GitHub for Fred's GitHub account, fred-astaire-sp. \nOnce the\
    \ user completes the work item, the work item will be listed with his or her other\
    \ completed work items. \n\nTo complete work items, users can use their dashboards\
    \ and select the 'My Tasks' widget. \nThe widget will list any work items they\
    \ need to complete, and they can select the work item from the list to review\
    \ its details. \nWhen they complete the work item, they can select 'Mark Complete'\
    \ to add it to their list of completed work items. \n\nRefer to [Task Manager](https://documentation.sailpoint.com/saas/user-help/task_manager.html)\
    \ for more information about work items, including the different types of work\
    \ items users may need to complete.\n"
  name: Work Items
paths:
  /access-requests:
    post:
      description: "This submits the access request into IdentityNow, where it will\
        \ follow any IdentityNow approval processes.\n\nAccess requests are processed\
        \ asynchronously by IdentityNow.  A success response from this endpoint means\
        \ the request\nhas been submitted to IDN and is queued for processing.  Because\
        \ this endpoint is asynchronous, it will not return an error\nif you submit\
        \ duplicate access requests in quick succession, or you submit an access request\
        \ for access that is already in progress, approved, or rejected.\nIt is best\
        \ practice to check for any existing access requests that reference the same\
        \ access items before submitting a new access request.  This can\nbe accomplished\
        \ by using the [access request status](https://developer.sailpoint.com/idn/api/v3/list-access-request-status)\
        \ or the [pending access request approvals](https://developer.sailpoint.com/idn/api/v3/list-pending-approvals)\
        \ endpoints.  You can also\nuse the [search API](https://developer.sailpoint.com/idn/api/v3/search)\
        \ to check the existing access items that an identity has before submitting\n\
        an access request to ensure you are not requesting access that is already\
        \ granted.\n\nThere are two types of access request:\n\n__GRANT_ACCESS__\n\
        * Can be requested for multiple identities in a single request.\n* Supports\
        \ self request and request on behalf of other users, see '/beta/access-request-config'\
        \ endpoint for request configuration options.  \n* Allows any authenticated\
        \ token (except API) to call this endpoint to request to grant access to themselves.\
        \ Depending on the configuration, a user can request access for others.\n\
        * Roles, Access Profiles and Entitlements can be requested.\n* While requesting\
        \ entitlements, maximum of 25 entitlements and 10 recipients are allowed in\
        \ a request.\n \n__REVOKE_ACCESS__\n* Can only be requested for a single identity\
        \ at a time.\n* Does not support self request. Only manager can request to\
        \ revoke access for their directly managed employees.\n* If removeDate is\
        \ specified, then the access will be removed on that date and time.\n* Allows\
        \ a manager to request to revoke access for direct employees. A token with\
        \ ORG_ADMIN authority can also request to revoke access from anyone.\n* Roles\
        \ and Access Profiles can be requested for revocation. Revoke request for\
        \ entitlements are not supported currently.\n\nNOTE: There is no indication\
        \ to the approver in the IdentityNow UI that the approval request is for a\
        \ revoke action. Take this into consideration when calling this API.\n\nA\
        \ token with API authority cannot be used to call this endpoint. \n"
      operationId: createAccessRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Submit an Access Request
      tags:
      - Access Requests
  /access-requests/cancel:
    post:
      description: |-
        This API endpoint cancels a pending access request. An access request can be cancelled only if it has not passed the approval step.
        Any token with ORG_ADMIN authority or token of the user who originally requested the access request is required to cancel it.
      operationId: cancelAccessRequest
      requestBody:
        content:
          application/json:
            example:
              accountActivityId: 2c91808568c529c60168cca6f90c1313
              comment: I requested this role by mistake.
            schema:
              $ref: '#/components/schemas/CancelAccessRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Cancel Access Request
      tags:
      - Access Requests
  /access-request-config:
    get:
      description: This endpoint returns the current access-request configuration.
      operationId: getAccessRequestConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestConfig'
          description: Access Request Configuration Details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get Access Request Configuration
      tags:
      - Access Requests
    put:
      description: |-
        This endpoint replaces the current access-request configuration.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: updateAccessRequestConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequestConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestConfig'
          description: Access Request Configuration Details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update Access Request Configuration
      tags:
      - Access Requests
  /access-request-status:
    get:
      description: |-
        The Access Request Status API returns a list of access request statuses based on the specified query parameters.
        Any token with any authority can request their own status. A token with ORG_ADMIN authority is required to call this API to get a list of statuses for other users.
      operationId: listAccessRequestStatus
      parameters:
      - description: Filter the results by the identity for which the requests were
          made. *me* indicates the current user. Mutually exclusive with *regarding-identity*.
        example: 2c9180877b2b6ea4017b2c545f971429
        in: query
        name: requested-for
        required: false
        schema:
          type: string
      - description: Filter the results by the identity that made the requests. *me*
          indicates the current user. Mutually exclusive with *regarding-identity*.
        example: 2c9180877b2b6ea4017b2c545f971429
        in: query
        name: requested-by
        required: false
        schema:
          type: string
      - description: Filter the results by the specified identity which is either
          the requester or target of the requests. *me* indicates the current user.
          Mutually exclusive with *requested-for* and *requested-by*.
        example: 2c9180877b2b6ea4017b2c545f971429
        in: query
        name: regarding-identity
        required: false
        schema:
          type: string
      - description: If *true* it will populate the *X-Total-Count* response header
          with the number of results that would be returned if *limit* and *offset*
          were ignored.
        example: false
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: Max number of results to return.
        example: 100
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: Offset into the full result set. Usually specified with *limit*
          to paginate through the results. Defaults to 0 if not specified.
        example: 10
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **accountActivityItemId**: *eq, in*
        example: accountActivityItemId eq "2c918086771c86df0177401efcdf54c0"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, modified, accountActivityItemId**
        example: created
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RequestedItemStatus'
                type: array
          description: List of requested item status.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Access Request Status
      tags:
      - Access Requests
  /access-request-approvals/pending:
    get:
      description: This endpoint returns a list of pending approvals. See "owner-id"
        query parameter below for authorization info.
      operationId: listPendingApprovals
      parameters:
      - description: |-
          If present, the value returns only pending approvals for the specified identity.
             * ORG_ADMIN users can call this with any identity ID value.
             * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.
             * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value.
        example: 2c91808568c529c60168cca6f90c1313
        in: query
        name: owner-id
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **requestedFor.id**: *eq, in*

          **modified**: *gt, lt, ge, le*
        example: id eq "2c91808568c529c60168cca6f90c1313"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, modified**
        example: modified
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PendingApproval'
                type: array
          description: List of Pending Approvals.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Pending Access Request Approvals List
      tags:
      - Access Request Approvals
  /access-request-approvals/completed:
    get:
      description: This endpoint returns list of completed approvals. See *owner-id*
        query parameter below for authorization info.
      operationId: listCompletedApprovals
      parameters:
      - description: |-
          If present, the value returns only completed approvals for the specified identity.
             * ORG_ADMIN users can call this with any identity ID value.
             * ORG_ADMIN users can also fetch all the approvals in the org, when
          owner-id is not used.
             * Non-ORG_ADMIN users can only specify *me* or pass their own
          identity ID value.
        example: 2c91808568c529c60168cca6f90c1313
        in: query
        name: owner-id
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **requestedFor.id**: *eq, in*

          **modified**: *gt, lt, ge, le*
        example: id eq "2c91808568c529c60168cca6f90c1313"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, modified**
        example: modified
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CompletedApproval'
                type: array
          description: List of Completed Approvals.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Completed Access Request Approvals List
      tags:
      - Access Request Approvals
  /access-request-approvals/{approvalId}/approve:
    post:
      description: This endpoint approves an access request approval. Only the owner
        of the approval and ORG_ADMIN users are allowed to perform this action.
      operationId: approveRequest
      parameters:
      - description: The id of the approval.
        example: 2c91808b7294bea301729568c68c002e
        in: path
        name: approvalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        description: Reviewer's comment.
        required: false
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Approves an access request approval.
      tags:
      - Access Request Approvals
  /access-request-approvals/{approvalId}/reject:
    post:
      description: This endpoint rejects an access request approval. Only the owner
        of the approval and admin users are allowed to perform this action.
      operationId: rejectRequest
      parameters:
      - description: The id of the approval.
        example: 2c91808b7294bea301729568c68c002e
        in: path
        name: approvalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        description: Reviewer's comment.
        required: false
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Rejects an access request approval.
      tags:
      - Access Request Approvals
  /access-request-approvals/{approvalId}/forward:
    post:
      description: This endpoint forwards an access request approval to a new owner.
        Only the owner of the approval and ORG_ADMIN users are allowed to perform
        this action.
      operationId: forwardRequest
      parameters:
      - description: The id of the approval.
        example: 2c91808b7294bea301729568c68c002e
        in: path
        name: approvalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardApprovalDto'
        description: Information about the forwarded approval.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Forwards an access request approval.
      tags:
      - Access Request Approvals
  /access-request-approvals/approval-summary:
    get:
      description: "This endpoint returns the number of pending, approved and rejected\
        \ access requests approvals. See \"owner-id\" query parameter below for authorization\
        \ info."
      operationId: approvalSummary
      parameters:
      - description: |-
          The id of the owner or approver identity of the approvals. If present, the value returns approval summary for the specified identity.
             * ORG_ADMIN users can call this with any identity ID value.
             * ORG_ADMIN user can also fetch all the approvals in the org, when
          owner-id is not used.
             * Non ORG_ADMIN users can only specify *me* or pass their own
          identity ID value.
        example: 2c91808568c529c60168cca6f90c1313
        in: query
        name: owner-id
        required: false
        schema:
          type: string
      - description: From date is the date and time from which the results will be
          shown. It should be in a valid ISO-8601 format
        example: from-date=2020-03-19T19:59:11Z
        in: query
        name: from-date
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalSummary'
          description: "Number of pending, approved, rejected access request approvals."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the query parameter is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get the number of access-requests-approvals
      tags:
      - Access Request Approvals
  /accounts:
    get:
      description: "This returns a list of accounts.  \nA token with ORG_ADMIN authority\
        \ is required to call this API."
      operationId: listAccounts
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **identityId**: *eq*

          **name**: *eq, in*

          **nativeIdentity**: *eq, in*

          **sourceId**: *eq, in*

          **uncorrelated**: *eq*
        example: identityId eq "2c9180858082150f0180893dbaf44201"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: List of account objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:account-list:read
      summary: Accounts List
      tags:
      - Accounts
    post:
      description: "This API submits an account creation task and returns the task\
        \ ID.  \nA token with ORG_ADMIN authority is required to call this API."
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAttributesCreate'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:account:create
      summary: Create Account
      tags:
      - Accounts
  /accounts/{id}:
    delete:
      description: |-
        This API submits an account delete task and returns the task ID. This operation can only be used on Flat File Sources. Any attempt to execute this request on the source of other type will result in an error response with a status code of 400.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: deleteAccount
      parameters:
      - description: The account ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:account:delete
      summary: Delete Account
      tags:
      - Accounts
    get:
      description: "This API returns the details for a single account based on the\
        \ ID.  \nA token with ORG_ADMIN authority is required to call this API."
      operationId: getAccount
      parameters:
      - description: The account ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: An account object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:account:read
      summary: Account Details
      tags:
      - Accounts
    patch:
      description: |-
        Use this API to modify the following fields:
        * `identityId`

        * `manuallyCorrelated`

        >**NOTE: All other fields can not be modified.**

        The request must provide a JSONPatch payload.

        A token with ORG_ADMIN authority is required to call this API.
      operationId: updateAccount
      parameters:
      - description: The account ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /identityId
              value: 2c9180845d1edece015d27a975983e21
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of account update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902)\
          \ standard."
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:account:update
      summary: Update Account
      tags:
      - Accounts
    put:
      description: "This API submits an account update task and returns the task ID.\
        \  \nA token with ORG_ADMIN authority is required to call this API.\n>**NOTE:\
        \ The PUT Account API is designated only for Delimited File sources.**"
      operationId: putAccount
      parameters:
      - description: The account ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAttributes'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:account:update
      summary: Update Account
      tags:
      - Accounts
  /accounts/{id}/entitlements:
    get:
      description: "This API returns entitlements of the account.  \nA token with\
        \ ORG_ADMIN authority is required to call this API."
      operationId: getAccountEntitlements
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EntitlementDto'
                type: array
          description: An array of account entitlements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:account-entitlement:read
      summary: Account Entitlements
      tags:
      - Accounts
  /accounts/{id}/reload:
    post:
      description: "This API asynchronously reloads the account directly from the\
        \ connector and performs a one-time aggregation process.  \nA token with ORG_ADMIN\
        \ authority is required to call this API."
      operationId: reloadAccount
      parameters:
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:account:reload
      summary: Reload Account
      tags:
      - Accounts
  /accounts/{id}/enable:
    post:
      description: "This API submits a task to enable account and returns the task\
        \ ID.  \nA token with ORG_ADMIN authority is required to call this API."
      operationId: enableAccount
      parameters:
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountToggleRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:account:enable
      summary: Enable Account
      tags:
      - Accounts
  /accounts/{id}/disable:
    post:
      description: "This API submits a task to disable the account and returns the\
        \ task ID.  \nA token with ORG_ADMIN authority is required to call this API."
      operationId: disableAccount
      parameters:
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountToggleRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:account:disable
      summary: Disable Account
      tags:
      - Accounts
  /accounts/{id}/unlock:
    post:
      description: "This API submits a task to unlock an account and returns the task\
        \ ID.  \nA token with ORG_ADMIN authority is required to call this API."
      operationId: unlockAccount
      parameters:
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUnlockRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:account:unlock
      summary: Unlock Account
      tags:
      - Accounts
  /account-activities:
    get:
      description: This gets a collection of account activities that satisfy the given
        query parameters.
      operationId: listAccountActivities
      parameters:
      - description: The identity that the activity was requested for. *me* indicates
          the current user. Mutually exclusive with *regarding-identity*.
        example: 2c91808568c529c60168cca6f90c1313
        in: query
        name: requested-for
        required: false
        schema:
          type: string
      - description: The identity that requested the activity. *me* indicates the
          current user. Mutually exclusive with *regarding-identity*.
        example: 2c91808568c529c60168cca6f90c1313
        in: query
        name: requested-by
        required: false
        schema:
          type: string
      - description: The specified identity will be either the requester or target
          of the account activity. *me* indicates the current user. Mutually exclusive
          with *requested-for* and *requested-by*.
        example: 2c91808568c529c60168cca6f90c1313
        in: query
        name: regarding-identity
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results).

          Filtering is supported for the following fields and operators:

          **type**: *eq, in* (See the `type` property in the response schema for possible values)

          **created**: *gt, lt, ge, le*

          **modified**: *gt, lt, ge, le*
        example: type eq "Identity Refresh"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)
          Sorting is supported for the following fields: **type, created, modified**
        example: created
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccountActivity'
                type: array
          description: List of account activities
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List Account Activities
      tags:
      - Account Activities
  /account-activities/{id}:
    get:
      description: This gets a single account activity by its id.
      operationId: getAccountActivity
      parameters:
      - description: The account activity id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountActivity'
          description: An account activity object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get an Account Activity
      tags:
      - Account Activities
  /certifications:
    get:
      description: "This API returns a list of identity campaign certifications that\
        \ satisfy the given query parameters. Any authenticated token can call this\
        \ API, but only certifications you are authorized to review will be returned.\
        \ This API does not support requests for certifications assigned to Governance\
        \ Groups."
      operationId: listIdentityCertifications
      parameters:
      - description: The ID of reviewer identity. *me* indicates the current user.
        example: me
        in: query
        name: reviewer-identity
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)
          Filtering is supported for the following fields and operators:
          **id**: *eq, in*
          **campaign.id**: *eq, in*
          **phase**: *eq*
          **completed**: *eq, ne*
        example: id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)
          Sorting is supported for the following fields: **name, due, signed**
        example: "name,due"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityCertificationDto'
                type: array
          description: List of identity campaign certifications
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Identity Campaign Certifications by IDs
      tags:
      - Certifications
  /certifications/{id}:
    get:
      description: This API returns a single identity campaign certification by its
        ID. A token with ORG_ADMIN or CERT_ADMIN authority is required to call this
        API. Reviewers for this certification can also call this API. This API does
        not support requests for certifications assigned to Governance Groups.
      operationId: getIdentityCertification
      parameters:
      - description: The certification id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCertificationDto'
          description: An identity campaign certification object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Identity Certification by ID
      tags:
      - Certifications
  /certifications/{id}/access-review-items:
    get:
      description: This API returns a list of access review items for an identity
        campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is
        required to call this API. Reviewers for this certification can also call
        this API. This API does not support requests for certifications assigned to
        Governance Groups.
      operationId: listIdentityAccessReviewItems
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **type / access.type**: *eq*

          **completed**: *eq, ne*

          **identitySummary.id**: *eq, in*

          **identitySummary.name**: *eq, sw*

          **access.id**: *eq, in*

          **access.name**: *eq, sw*

          **entitlement.sourceName**: *eq, sw*

          **accessProfile.sourceName**: *eq, sw*
        example: id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **identitySummary.name, access.name, access.type, entitlement.sourceName, accessProfile.sourceName**
        example: "access.name,-accessProfile.sourceName"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: |-
          Filter results to view access review items that pertain to any of the specified comma-separated entitlement IDs.

          An error will occur if this param is used with **access-profiles** or **roles** as only one of these query params can be used at a time.
        example: identityEntitlement
        in: query
        name: entitlements
        required: false
        schema:
          type: string
      - description: |-
          Filter results to view access review items that pertain to any of the specified comma-separated access-profle IDs.

          An error will occur if this param is used with **entitlements** or **roles** as only one of these query params can be used at a time.
        example: accessProfile1
        in: query
        name: access-profiles
        required: false
        schema:
          type: string
      - description: |-
          Filter results to view access review items that pertain to any of the specified comma-separated role IDs.

          An error will occur if this param is used with **entitlements** or **access-profiles** as only one of these query params can be used at a time.
        example: userRole
        in: query
        name: roles
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessReviewItem'
                type: array
          description: A list of access review items
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List of Access Review Items
      tags:
      - Certifications
  /certifications/{id}/decide:
    post:
      description: The API makes a decision to approve or revoke one or more identity
        campaign certification items. A token with ORG_ADMIN or CERT_ADMIN authority
        is required to call this API. Reviewers for this certification can also call
        this API. This API does not support requests for certifications assigned to
        Governance Groups.
      operationId: makeIdentityDecision
      parameters:
      - description: The ID of the identity campaign certification on which to make
          decisions
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
            - id: ef38f94347e94562b5bb8424a56396b5
              decision: APPROVE
              bulk: true
              comments: This user still needs access to this source.
            - id: ef38f94347e94562b5bb8424a56397d8
              decision: APPROVE
              bulk: true
              comments: This user still needs access to this source too.
            schema:
              items:
                $ref: '#/components/schemas/ReviewDecision'
              maxItems: 250
              minItems: 1
              type: array
        description: A non-empty array of decisions to be made.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCertificationDto'
          description: An identity campaign certification object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Decide on a Certification Item
      tags:
      - Certifications
  /certifications/{id}/reassign:
    post:
      description: This API reassigns up to 50 identities or items in an identity
        campaign certification to another reviewer. A token with ORG_ADMIN or CERT_ADMIN
        authority is required to call this API. Reviewers for this certification can
        also call this API. This API does not support requests for certifications
        assigned to Governance Groups.
      operationId: reassignIdentityCertifications
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewReassign'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCertificationDto'
          description: An identity campaign certification details after completing
            the reassignment.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Reassign Identities or Items
      tags:
      - Certifications
  /certifications/{id}/sign-off:
    post:
      description: This API finalizes all decisions made on an identity campaign certification
        and initiates any remediations required. A token with ORG_ADMIN or CERT_ADMIN
        authority is required to call this API. Reviewers for this certification can
        also call this API. This API does not support requests for certifications
        assigned to Governance Groups.
      operationId: signOffIdentityCertification
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCertificationDto'
          description: An identity campaign certification object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Finalize Identity Certification Decisions
      tags:
      - Certifications
  /certifications/{id}/decision-summary:
    get:
      description: This API returns a summary of the decisions made on an identity
        campaign certification. The decisions are summarized by type. A token with
        ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers
        for this certification can also call this API.
      operationId: getIdentityDecisionSummary
      parameters:
      - description: The certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)

          Filtering is supported for the following fields and operators:

          **identitySummary.id**: *eq, in*
        example: identitySummary.id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCertDecisionSummary'
          description: Summary of the decisions made
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Summary of Certification Decisions
      tags:
      - Certification Summaries
  /certifications/{id}/identity-summaries:
    get:
      description: This API returns a list of the identity summaries for a specific
        identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority
        is required to call this API. Reviewers for this certification can also call
        this API.
      operationId: getIdentitySummaries
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **completed**: *eq, ne*

          **name**: *eq, sw*
        example: id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name**
        example: name
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 2c91808772a504f50172a9540e501ba7
                name: Aaron Grey
                identityId: 2c9180857182306001719937379633e4
                completed: false
              - id: 2c91808772a504f50172a9540e501ba8
                name: Aglae Wilson
                identityId: 2c9180857182306001719937377a33de
                completed: true
              schema:
                items:
                  $ref: '#/components/schemas/CertificationIdentitySummary'
                type: array
          description: List of identity summaries
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Identity Summaries for Campaign Certification
      tags:
      - Certification Summaries
  /certifications/{id}/access-summaries/{type}:
    get:
      description: This API returns a list of access summaries for the specified identity
        campaign certification and type. A token with ORG_ADMIN or CERT_ADMIN authority
        is required to call this API. Reviewers for this certification can also call
        this API.
      operationId: getIdentityAccessSummaries
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The type of access review item to retrieve summaries for
        example: ACCESS_PROFILE
        in: path
        name: type
        required: true
        schema:
          enum:
          - ROLE
          - ACCESS_PROFILE
          - ENTITLEMENT
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki-API-Standard-Collection-Parameters/ta-p/156407)

          Filtering is supported for the following fields and operators:

          **completed**: *eq, ne*

          **access.id**: *eq, in*

          **access.name**: *eq, sw*

          **entitlement.sourceName**: *eq, sw*

          **accessProfile.sourceName**: *eq, sw*
        example: access.id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **access.name**
        example: access.name
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - access:
                  type: ENTITLEMENT
                  id: 2c9180857182305e01719937429e2bad
                  name: CN=Engineering
                entitlement:
                  id: 2c9180857182305e01719937429e2bad
                  name: CN=Engineering
                  description: Access to the engineering database
                  privileged: false
                  owner:
                    email: brandon.gray@acme-solar.com
                    type: IDENTITY
                    id: 2c9180867160846801719932c5153fb7
                    name: Brandon Gray
                  attributeName: memberOf
                  attributeValue: CN=Engineering
                  sourceName: ODS-AD-Source
                  hasPermissions: true
                  revocable: true
              schema:
                items:
                  $ref: '#/components/schemas/AccessSummary'
                type: array
          description: List of access summaries
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Access Summaries
      tags:
      - Certification Summaries
  /certifications/{id}/identity-summary/{identitySummaryId}:
    get:
      description: This API returns the summary for an identity on a specified identity
        campaign certification. A token with ORG_ADMIN or CERT_ADMIN authority is
        required to call this API. Reviewers for this certification can also call
        this API.
      operationId: getIdentitySummary
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The identity summary ID
        example: 2c91808772a504f50172a9540e501ba8
        in: path
        name: identitySummaryId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificationIdentitySummary'
          description: An identity summary
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Summary for Identity
      tags:
      - Certification Summaries
  /identities/{identity-id}/set-lifecycle-state:
    post:
      description: |-
        This endpoint will set/update an identity's lifecycle state to the one provided and updates the corresponding Identity Profile.
        A token with ORG_ADMIN or API authority is required to call this API.
      operationId: setLifecycleState
      parameters:
      - description: The ID of the identity to update
        example: 2c9180857893f1290178944561990364
        in: path
        name: identity-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setLifecycleState_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setLifecycleState_200_response'
          description: The request was successfully accepted into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:identity-lifecycle-state:update
      summary: Set Lifecycle State
      tags:
      - Lifecycle States
  /identity-profiles/{identity-profile-id}/lifecycle-states:
    get:
      description: |-
        This end-point lists all the LifecycleStates associated with IdentityProfiles.
        A token with API, or ORG_ADMIN authority is required to call this API.
      operationId: listLifecycleStates
      parameters:
      - description: The IdentityProfile id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: identity-profile-id
        required: true
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, modified**
        example: "created,modified"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LifecycleState'
                type: array
          description: List of LifecycleState objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:identity-profile-lifecycle-state:read
      summary: Lists LifecycleStates
      tags:
      - Lifecycle States
    post:
      description: |-
        This API creates a new Lifecycle State.
        A token with ORG_ADMIN or API authority is required to call this API.
      operationId: createLifecycleState
      parameters:
      - description: Identity Profile ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: identity-profile-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LifecycleState'
        description: Lifecycle State
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleState'
          description: Created LifecycleState object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:identity-profile-lifecycle-state:create
      summary: Create Lifecycle State
      tags:
      - Lifecycle States
  /identity-profiles/{identity-profile-id}/lifecycle-states/{lifecycle-state-id}:
    delete:
      description: |-
        This endpoint deletes the Lifecycle State using it's ID.
        A token with API, or ORG_ADMIN authority is required to call this API.
      operationId: deleteLifecycleState
      parameters:
      - description: Identity Profile ID
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: identity-profile-id
        required: true
        schema:
          type: string
      - description: Lifecycle State ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: lifecycle-state-id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseReferenceDto'
          description: The request was successfully accepted into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:identity-profile-lifecycle-state:delete
      summary: Delete Lifecycle State by ID
      tags:
      - Lifecycle States
    get:
      description: |-
        This endpoint retrieves a Lifecycle State.
        A token with ORG_ADMIN or API authority is required to call this API.
      operationId: getLifecycleState
      parameters:
      - description: Identity Profile ID
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: identity-profile-id
        required: true
        schema:
          type: string
      - description: Lifecycle State ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: lifecycle-state-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleState'
          description: The requested LifecycleState was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:identity-profile-lifecycle-state:read
      summary: Retrieves Lifecycle State
      tags:
      - Lifecycle States
    patch:
      description: |-
        This endpoint updates individual Lifecycle State fields using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.
        A token with ORG_ADMIN or API authority is required to call this API.
      operationId: updateLifecycleStates
      parameters:
      - description: Identity Profile ID
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: identity-profile-id
        required: true
        schema:
          type: string
      - description: Lifecycle State ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: lifecycle-state-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /description
              value: Updated description!
            - op: replace
              path: /accessProfileIds
              value:
              - 2c918087742bab150174407a80f3125e
              - 2c918087742bab150174407a80f3124f
            - op: replace
              path: /accountActions
              value:
              - action: ENABLE
                sourceIds:
                - 2c9180846a2f82fb016a481c1b1560c5
                - 2c9180846a2f82fb016a481c1b1560cc
              - action: DISABLE
                sourceIds:
                - 2c91808869a0c9980169a207258513fb
            - op: replace
              path: /emailNotificationOption
              value:
                notifyManagers: true
                notifyAllAdmins: false
                notifySpecificUsers: false
                emailAddressList: []
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of lifecycle state update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields can be updated:
          * enabled
          * description
          * accountActions
          * accessProfileIds
          * emailNotificationOption
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleState'
          description: The LifecycleState was successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:identity-profile-lifecycle-state:update
      summary: Update Lifecycle State
      tags:
      - Lifecycle States
  /identity-profiles:
    get:
      description: |-
        This returns a list of Identity Profiles based on the specified query parameters.
        A token with ORG_ADMIN or API authority is required to call this API to get a list of Identity Profiles.
      operationId: listIdentityProfiles
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, ne*

          **name**: *eq, ne*

          **priority**: *eq, ne*
        example: id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id**, **name**, **priority**
        example: "id,name"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProfile'
                type: array
          description: List of identityProfiles.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:identity-profile:read
      summary: Identity Profiles List
      tags:
      - Identity Profiles
  /identity-profiles/export:
    get:
      description: This exports existing identity profiles in the format specified
        by the sp-config service.
      operationId: exportIdentityProfiles
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, ne*

          **name**: *eq, ne*

          **priority**: *eq, ne*
        example: id eq "ef38f94347e94562b5bb8424a56397d8"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id**, **name**, **priority**
        example: "id,name"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProfileExportedObject'
                type: array
          description: List of export objects with identity profiles.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:identity-profile:read
      summary: Export Identity Profiles
      tags:
      - Identity Profiles
  /identity-profiles/import:
    post:
      description: This imports previously exported identity profiles.
      operationId: importIdentityProfiles
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdentityProfileExportedObject'
              type: array
        description: Previously exported Identity Profiles.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectImportResult'
          description: The result of importing Identity Profiles.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:identity-profile:create
      summary: Import Identity Profiles
      tags:
      - Identity Profiles
  /identity-profiles/{identity-profile-id}:
    get:
      description: |-
        This returns a single Identity Profile based on ID.
        A token with ORG_ADMIN or API authority is required to call this API.
      operationId: getIdentityProfile
      parameters:
      - description: The Identity Profile ID.
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: identity-profile-id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProfile'
          description: An Identity Profile object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:identity-profile:read
      summary: Get single Identity Profile
      tags:
      - Identity Profiles
  /identity-profiles/{identity-profile-id}/default-identity-attribute-config:
    get:
      description: |-
        This returns the default identity attribute config.
        A token with ORG_ADMIN authority is required to call this API to get the default identity attribute config.
      operationId: getDefaultIdentityAttributeConfig
      parameters:
      - description: The Identity Profile ID.
        example: 2b838de9-db9b-abcf-e646-d4f274ad4238
        in: path
        name: identity-profile-id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAttributeConfig'
          description: An Identity Attribute Config object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:identity-profile-default-mapping:read
      summary: Get default Identity Attribute Config
      tags:
      - Identity Profiles
  /non-employee-records:
    get:
      description: |-
        This gets a list of non-employee records. There are two contextual uses for this endpoint:
          1. The user has the role context of `idn:nesr:read`, in which case they can get a list of all of the non-employees.
          2. The user is an account manager, in which case they can get a list of the non-employees that they manage.
      operationId: nonEmployeeRecordList
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: "Sort results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)\
          \ Sorting is supported for the following fields: **id, accountName, sourceId,\
          \ manager, firstName, lastName, email, phone, startDate, endDate, created,\
          \ modified**"
        example: "accountName,sourceId"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: "Filter results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)\
          \ Filtering is supported for the following fields and operators: **sourceId**:\
          \ *eq*  *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
        example: sourceId eq "2c91808568c529c60168cca6f90c1313"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeRecord'
                type: array
          description: Non-Employee record objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: List Non-Employee Records
      tags:
      - Non-Employee Lifecycle Management
    post:
      description: |-
        This request will create a non-employee record.
        Requires role context of `idn:nesr:create`
      operationId: nonEmployeeRecordCreation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeRequestBody'
        description: Non-Employee record creation request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRecord'
          description: Created non-employee record.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create Non-Employee Record
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-records/{id}:
    delete:
      description: |-
        This request will delete a non-employee record.
        Requires role context of `idn:nesr:delete`
      operationId: nonEmployeeRecordDelete
      parameters:
      - description: Non-Employee record id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete Non-Employee Record
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: |-
        This gets a non-employee record.
        Requires role context of `idn:nesr:read`
      operationId: nonEmployeeRecordGet
      parameters:
      - description: Non-Employee record id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRecord'
          description: Non-Employee record object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get a Non-Employee Record
      tags:
      - Non-Employee Lifecycle Management
    patch:
      description: |-
        This request will patch a non-employee record. There are two contextual uses for this endpoint:
          1. The user has the role context of `idn:nesr:update`, in which case they
        update all available fields.
          2. The user is owner of the source, in this case they can only update the
        end date.
      operationId: nonEmployeeRecordPatch
      parameters:
      - description: Non-employee record id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /endDate
              value: 2019-08-23T18:40:35.772Z
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of non-employee update operations according to the [JSON\
          \ Patch](https://tools.ietf.org/html/rfc6902) standard. Attributes are restricted\
          \ by user type. Owner of source can update end date. Organization admins\
          \ can update all available fields."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRecord'
          description: A patched non-employee record.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: Patch Non-Employee Record
      tags:
      - Non-Employee Lifecycle Management
    put:
      description: |-
        This request will update a non-employee record. There are two contextual uses for this endpoint:
          1. The user has the role context of `idn:nesr:update`, in which case they
        update all available fields.
          2. The user is owner of the source, in this case they can only update the
        end date.
      operationId: nonEmployeeRecordUpdate
      parameters:
      - description: Non-employee record id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeRequestBody'
        description: Non-employee record creation request body. Attributes are restricted
          by user type. Owner of source can update end date. Organization admins can
          update all available fields.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRecord'
          description: An updated non-employee record.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: Update Non-Employee Record
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-records/bulk-delete:
    post:
      description: This request will delete multiple non-employee records based on
        the non-employee ids provided. Requires role context of `idn:nesr:delete`
      operationId: nonEmployeeRecordBulkDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/nonEmployeeRecordBulkDelete_request'
        description: Non-Employee bulk delete request body.
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete Multiple Non-Employee Records
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-requests:
    get:
      description: |-
        This gets a list of non-employee requests. There are two contextual uses for the `requested-for` path parameter:
          1. The user has the role context of `idn:nesr:read`, in which case he or
        she may request a list non-employee requests assigned to a particular account manager by passing in that manager's id.
          2. The current user is an account manager, in which case "me" should be
        provided as the `requested-for` value. This will provide the user with a list of the non-employee requests in the source(s) he or she manages.
      operationId: nonEmployeeRequestList
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: The identity for whom the request was made. *me* indicates the
          current user.
        example: e136567de87e4d029e60b3c3c55db56d
        in: query
        name: requested-for
        required: true
        schema:
          type: string
      - description: "Sort results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)\
          \ Sorting is supported for the following fields: **created, approvalStatus,\
          \ firstName, lastName, email, phone, accountName, startDate, endDate**"
        example: "created,approvalStatus"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: "Filter results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)\
          \ Filtering is supported for the following fields and operators: **sourceId**:\
          \ *eq*  *Example:* sourceId eq \"2c91808568c529c60168cca6f90c1313\""
        example: sourceId eq "2c91808568c529c60168cca6f90c1313"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeRequest'
                type: array
          description: List of non-employee request objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: List Non-Employee Requests
      tags:
      - Non-Employee Lifecycle Management
    post:
      description: This request will create a non-employee request and notify the
        approver. Requires role context of `idn:nesr:create` or the user must own
        the source.
      operationId: nonEmployeeRequestCreation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeRequestBody'
        description: Non-Employee creation request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRequest'
          description: Non-Employee request creation object
        "400":
          content:
            application/json:
              examples:
                "400.1 Bad Request Content":
                  description: Response for bad request content
                  value:
                    detailCode: 400.1 Bad Request Content
                    trackingId: e7eab60924f64aa284175b9fa3309599
                    messages:
                    - locale: en
                      localeOrigin: REQUEST
                      text: firstName is required; accountName is required;
                "400.1.409 Reference conflict":
                  description: Response for reference conflict
                  value:
                    detailCode: 400.1.409 Reference conflict
                    trackingId: e7eab60924f64aa284175b9fa3309599
                    messages:
                    - locale: en
                      localeOrigin: REQUEST
                      text: Unable to create Non-Employee because the accountName
                        "existed" is already being used.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: Create Non-Employee Request
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-requests/{id}:
    delete:
      description: "This request will delete a non-employee request. \nRequires role\
        \ context of `idn:nesr:delete`"
      operationId: nonEmployeeRequestDeletion
      parameters:
      - description: Non-Employee request id in the UUID format
        example: ac110005-7156-1150-8171-5b292e3e0084
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete Non-Employee Request
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: |-
        This gets a non-employee request.
        There are two contextual uses for this endpoint:
          1. The user has the role context of `idn:nesr:read`, in this case the user
        can get the non-employee request for any user.
          2. The user must be the owner of the non-employee request.
      operationId: nonEmployeeRequestGet
      parameters:
      - description: Non-Employee request id (UUID)
        example: ac110005-7156-1150-8171-5b292e3e0084
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRequest'
          description: Non-Employee request object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: Get a Non-Employee Request
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-requests/summary/{requested-for}:
    get:
      description: |-
        This request will retrieve a summary of non-employee requests. There are two contextual uses for the `requested-for` path parameter:
          1. The user has the role context of `idn:nesr:read`, in which case he or
        she may request a summary of all non-employee approval requests assigned to a particular account manager by passing in that manager's id.
          2. The current user is an account manager, in which case "me" should be
        provided as the `requested-for` value. This will provide the user with a summary of the non-employee requests in the source(s) he or she manages.
      operationId: nonEmployeeRequestSummaryGet
      parameters:
      - description: The identity (UUID) of the non-employee account manager for whom
          the summary is being retrieved. Use "me" instead to indicate the current
          user.
        example: 2c91808280430dfb0180431a59440460
        in: path
        name: requested-for
        required: true
        schema:
          format: uuid (if user is Org Admin)
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRequestSummary'
          description: Non-Employee request summary object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: Get Summary of Non-Employee Requests
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources:
    get:
      description: "This gets a list of non-employee sources. There are two contextual\
        \ uses for the requested-for path parameter: \n  1. The user has the role\
        \ context of `idn:nesr:read`, in which case he or\nshe may request a list\
        \ sources assigned to a particular account manager by passing in that manager's\
        \ id.\n  2. The current user is an account manager, in which case \"me\" should\
        \ be\nprovided as the `requested-for` value. This will provide the user with\
        \ a list of the sources that he or she owns."
      operationId: nonEmployeeSourcesList
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: The identity for whom the request was made. *me* indicates the
          current user.
        example: me
        in: query
        name: requested-for
        required: true
        schema:
          type: string
      - description: The flag to determine whether return a non-employee count associate
          with source.
        example: true
        in: query
        name: non-employee-count
        required: false
        schema:
          type: boolean
      - description: "Sort results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)\
          \ Sorting is supported for the following fields: **name, created**"
        example: "name,created"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeSourceWithNECount'
                type: array
          description: List of non-employee sources objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: List Non-Employee Sources
      tags:
      - Non-Employee Lifecycle Management
    post:
      description: This request will create a non-employee source. Requires role context
        of `idn:nesr:create`
      operationId: nonEmployeeSourcesCreation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeSourceRequestBody'
        description: Non-Employee source creation request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSourceWithCloudExternalId'
          description: Created non-employee source.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{sourceId}:
    delete:
      description: This request will delete a non-employee source. Requires role context
        of `idn:nesr:delete`.
      operationId: nonEmployeeSourceDelete
      parameters:
      - description: Source Id
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: "This gets a non-employee source. There are two contextual uses\
        \ for the requested-for path parameter: \n  1. The user has the role context\
        \ of `idn:nesr:read`, in which case he or\nshe may request any source.\n \
        \ 2. The current user is an account manager, in which case the user can only\n\
        request sources that they own."
      operationId: nonEmployeeSourceGet
      parameters:
      - description: Source Id
        example: 2c91808b7c28b350017c2a2ec5790aa1
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSource'
          description: Non-Employee source object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: Get a Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
    patch:
      description: "patch a non-employee source. (partial update) <br/> Patchable\
        \ field: **name, description, approvers, accountManagers** Requires role context\
        \ of `idn:nesr:update`."
      operationId: nonEmployeeSourcePatch
      parameters:
      - description: Source Id
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /name
              value:
                new name: null
            - op: replace
              path: /approvers
              value:
              - 2c91809f703bb37a017040a2fe8748c7
              - 48b1f463c9e8427db5a5071bd81914b8
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of non-employee source update operations according to\
          \ the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSource'
          description: A patched non-employee source object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Patch a Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{id}/non-employees/download:
    get:
      description: This requests a CSV download for all non-employees from a provided
        source. Requires role context of `idn:nesr:read`
      operationId: nonEmployeeRecordsExport
      parameters:
      - description: Source Id (UUID)
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/csv:
              example: |
                accountName,firstName,lastName,phone,email,manager,startDate,endDate
                Jon.Smith, Jon, Smith, 555-555-5555, jon@jon.doe.nope.com, Jim Smith, 2020-04-05T08:00:00-10:00,2020-08-07T19:00:00-10:00
                William.Chaffin, William, Chaffin, 555-555-5555, william@chaffins.nope.com, Bertram Chaffin, 2020-04-05T08:00:00-10:00,2020-08-07T19:00:00-10:00
          description: Exported CSV
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Exports Non-Employee Records to CSV
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{id}/non-employee-bulk-upload:
    post:
      description: "This post will import, or update, Non-Employee records found in\
        \ the CSV. Requires role context of `idn:nesr:create`"
      operationId: nonEmployeeRecordsBulkUpload
      parameters:
      - description: Source Id (UUID)
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            example:
              data: "accountName,firstName,lastName,phone,email,manager,startDate,endDate\
                \ Jon.Smith, Jon, Smith, 555-555-5555, jon@jon.doe.nope.com, Jim Smith,\
                \ 2020-04-05T08:00:00-10:00, 2020-08-07T19:00:00-10:00 William.Chaffin,\
                \ William, Chaffin, 555-555-5555, william@chaffins.nope.com, Bertram\
                \ Chaffin, 2020-04-05T08:00:00-10:00, 2020-08-07T19:00:00-10:00"
            schema:
              $ref: '#/components/schemas/nonEmployeeRecordsBulkUpload_request'
        description: The form-data "name" attribute for the file content must be "data".
          See the schema specification.
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeBulkUploadJob'
          description: The CSV was accepted to be bulk inserted now or at a later
            time.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: |
            Client Error - Returned if the request body is invalid.
            The response body will contain the list of specific errors with one on each line.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: "Imports, or Updates, Non-Employee Records"
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{id}/non-employee-bulk-upload/status:
    get:
      description: |
        The nonEmployeeBulkUploadStatus API returns the status of the newest bulk upload job for the specified source.
        Requires role context of `idn:nesr:read`
      operationId: nonEmployeeBulkUploadStatus
      parameters:
      - description: Source ID (UUID)
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeBulkUploadStatus'
          description: "Status of the newest bulk-upload job, if any."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Obtain the status of bulk upload on the source
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{id}/schema-attributes-template/download:
    get:
      description: This requests a download for the Source Schema Template for a provided
        source. Requires role context of `idn:nesr:read`
      operationId: nonEmployeeExportSourceSchemaTemplate
      parameters:
      - description: Source Id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/csv:
              example: |
                accountName,firstName,lastName,phone,email,manager,startDate,endDate
          description: Exported Source Schema Template
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Exports Source Schema Template
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals:
    get:
      description: |-
        This gets a list of non-employee approval requests.
        There are two contextual uses for this endpoint:
          1. The user has the role context of `idn:nesr:read`, in which case they
        can list the approvals for any approver.
          2. The user owns the requested approval.
      operationId: nonEmployeeApprovalList
      parameters:
      - description: The identity for whom the request was made. *me* indicates the
          current user.
        example: 2c91808280430dfb0180431a59440460
        in: query
        name: requested-for
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: "Filter results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407)\
          \ Filtering is supported for the following fields and operators: **approvalStatus**:\
          \ *eq*  *Example:* approvalStatus eq \"PENDING\""
        example: approvalStatus eq "Pending"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: "Sort results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://community.sailpoint.com/t5/IdentityNow-Wiki/V3-API-Standard-Collection-Parameters/ta-p/156407#toc-hId-2058949)\
          \ Sorting is supported for the following fields: **created, modified**"
        example: created
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeApprovalItem'
                type: array
          description: List of approval items.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: Get List of Non-Employee Approval Requests
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals/{id}:
    get:
      description: |-
        Gets a non-employee approval item detail. There are two contextual uses for this endpoint:
          1. The user has the role context of `idn:nesr:read`, in which case they
        can get any approval.
          2. The user owns the requested approval.
      operationId: nonEmployeeApprovalGet
      parameters:
      - description: Non-Employee approval item id (UUID)
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The object nonEmployeeRequest will not be included detail when
          set to false. *Default value is true*
        example: true
        in: query
        name: include-detail
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeApprovalItemDetail'
          description: Non-Employee approval item object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: Get a non-employee approval item detail
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals/{id}/approve:
    post:
      description: Approves a non-employee approval request and notifies the next
        approver. The current user must be the requested approver.
      operationId: nonEmployeeApproveRequest
      parameters:
      - description: Non-Employee approval item id (UUID)
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeApprovalDecision'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeApprovalItem'
          description: Non-Employee approval item object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: Approve a Non-Employee Request
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals/{id}/reject:
    post:
      description: This endpoint will reject an approval item request and notify user.
        The current user must be the requested approver.
      operationId: nonEmployeeRejectRequest
      parameters:
      - description: Non-Employee approval item id (UUID)
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeRejectApprovalDecision'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeApprovalItem'
          description: Non-Employee approval item object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: Reject a Non-Employee Request
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals/summary/{requested-for}:
    get:
      description: |-
        This request will retrieve a summary of non-employee approval requests. There are two contextual uses for the `requested-for` path parameter:
          1. The user has the role context of `idn:nesr:read`, in which case he or
        she may request a summary of all non-employee approval requests assigned to a particular approver by passing in that approver's id.
          2. The current user is an approver, in which case "me" should be provided
        as the `requested-for` value. This will provide the approver with a summary of the approval items assigned to him or her.
      operationId: nonEmployeeApprovalSummary
      parameters:
      - description: The identity (UUID) of the approver for whom for whom the summary
          is being retrieved. Use "me" instead to indicate the current user.
        example: 2c91808280430dfb0180431a59440460
        in: path
        name: requested-for
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeApprovalSummary'
          description: summary of non-employee approval requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: Get Summary of Non-Employee Approval Requests
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{sourceId}/schema-attributes:
    delete:
      description: This end-point deletes all custom schema attributes for a non-employee
        source. Requires role context of `idn:nesr:delete`
      operationId: deleteSchemaAttributes
      parameters:
      - description: The Source id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete all custom schema attributes for Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: |-
        This API gets the list of schema attributes for the specified Non-Employee SourceId. There are 8 mandatory attributes added to each new Non-Employee Source automatically. Additionaly, user can add up to 10 custom attributes. This interface returns all the mandatory attributes followed by any custom attributes. At most, a total of 18 attributes will be returned.
        Requires role context of `idn:nesr:read` or the user must be an account manager of the source.
      operationId: getSchemaAttributes
      parameters:
      - description: The Source id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
                maxItems: 18
                type: array
          description: A list of Schema Attributes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: List Schema Attributes Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
    post:
      description: |-
        This API creates a new schema attribute for Non-Employee Source. The schema technical name must be unique in the source. Attempts to create a schema attribute with an existing name will result in a "400.1.409 Reference conflict" response. At most, 10 custom attributes can be created per schema. Attempts to create more than 10 will result in a "400.1.4 Limit violation" response.
        Requires role context of `idn:nesr:create`
      operationId: createSchemaAttribute
      parameters:
      - description: The Source id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeSchemaAttributeBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
          description: Schema Attribute created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create a new Schema Attribute for Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{sourceId}/schema-attributes/{attributeId}:
    delete:
      description: |
        This end-point deletes a specific schema attribute for a non-employee source.
        Requires role context of `idn:nesr:delete`
      operationId: deleteSchemaAttribute
      parameters:
      - description: The Schema Attribute Id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: attributeId
        required: true
        schema:
          type: string
      - description: The Source id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete a Schema Attribute for Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: This API gets a schema attribute by Id for the specified Non-Employee
        SourceId. Requires role context of `idn:nesr:read` or the user must be an
        account manager of the source.
      operationId: getSchemaAttribute
      parameters:
      - description: The Schema Attribute Id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: attributeId
        required: true
        schema:
          type: string
      - description: The Source id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
          description: The Schema Attribute
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2: []
      summary: Get Schema Attribute Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
    patch:
      description: |
        This end-point patches a specific schema attribute for a non-employee SourceId.
        Requires role context of `idn:nesr:update`
      operationId: patchSchemaAttribute
      parameters:
      - description: The Schema Attribute Id (UUID)
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: attributeId
        required: true
        schema:
          type: string
      - description: The Source id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /label
              value:
                new attribute label: null
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of schema attribute update operations according to the\
          \ [JSON Patch](https://tools.ietf.org/html/rfc6902) standard. The following\
          \ properties are allowed for update ':' 'label', 'helpText', 'placeholder',\
          \ 'required'."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
          description: The Schema Attribute was successfully patched.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Patch a Schema Attribute for Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
  /oauth-clients:
    get:
      description: This gets a list of OAuth clients.
      operationId: listOauthClients
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetOAuthClientResponse'
                type: array
          description: List of OAuth clients.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - sp:oauth-client:manage
      summary: List OAuth Clients
      tags:
      - OAuth Clients
    post:
      description: This creates an OAuth client.
      operationId: createOauthClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOAuthClientRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOAuthClientResponse'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - sp:oauth-client:manage
      summary: Create OAuth Client
      tags:
      - OAuth Clients
  /oauth-clients/{id}:
    delete:
      description: This deletes an OAuth client.
      operationId: deleteOauthClient
      parameters:
      - description: The OAuth client id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - sp:oauth-client:manage
      summary: Delete OAuth Client
      tags:
      - OAuth Clients
    get:
      description: This gets details of an OAuth client.
      operationId: getOauthClient
      parameters:
      - description: The OAuth client id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOAuthClientResponse'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - sp:oauth-client:manage
        - sp:oauth-client:read
      summary: Get OAuth Client
      tags:
      - OAuth Clients
    patch:
      description: This performs a targeted update to the field(s) of an OAuth client.
      operationId: patchOauthClient
      parameters:
      - description: The OAuth client id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /strongAuthSupported
              value: true
            - op: replace
              path: /businessName
              value: acme-solar
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of OAuth client update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields are patchable:
          * tenant
          * businessName
          * homepageUrl
          * name
          * description
          * accessTokenValiditySeconds
          * refreshTokenValiditySeconds
          * redirectUris
          * grantTypes
          * accessType
          * enabled
          * strongAuthSupported
          * claimsSupported
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOAuthClientResponse'
          description: "Indicates the PATCH operation succeeded, and returns the OAuth\
            \ client's new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - sp:oauth-client:manage
      summary: Patch OAuth Client
      tags:
      - OAuth Clients
  /personal-access-tokens:
    get:
      description: "This gets a collection of personal access tokens associated with\
        \ the optional `owner-id`.  query parameter. If the `owner-id` query parameter\
        \ is omitted, all personal access tokens  for a tenant will be retrieved,\
        \ but the caller must have the 'idn:all-personal-access-tokens:read' right."
      operationId: listPersonalAccessTokens
      parameters:
      - description: "The identity ID of the owner whose personal access tokens should\
          \ be listed.  If \"me\", the caller should have the following right: 'idn:my-personal-access-tokens:read'\n\
          If an actual owner ID or if the `owner-id` parameter is omitted in the request,\
          \  the caller should have the following right: 'idn:all-personal-access-tokens:read'.\
          \ \nIf the caller has the following right, then managed personal access\
          \ tokens associated with `owner-id`  will be retrieved: 'idn:managed-personal-access-tokens:read'"
        in: query
        name: owner-id
        required: false
        schema:
          example: 2c9180867b50d088017b554662fb281e
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetPersonalAccessTokenResponse'
                type: array
          description: List of personal access tokens.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - sp:my-personal-access-tokens:read
        - sp:my-personal-access-tokens:manage
        - sp:all-personal-access-tokens:read
        - sp:all-personal-access-tokens:manage
      summary: List Personal Access Tokens
      tags:
      - Personal Access Tokens
    post:
      description: This creates a personal access token.
      operationId: createPersonalAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonalAccessTokenRequest'
        description: Name and scope of personal access token.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePersonalAccessTokenResponse'
          description: Created. Note - this is the only time Personal Access Tokens'
            secret attribute will be displayed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - sp:my-personal-access-tokens:manage
        - sp:all-personal-access-tokens:manage
      summary: Create Personal Access Token
      tags:
      - Personal Access Tokens
  /personal-access-tokens/{id}:
    delete:
      description: This deletes a personal access token.
      operationId: deletePersonalAccessToken
      parameters:
      - description: The personal access token id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - sp:my-personal-access-tokens:manage
        - sp:all-personal-access-tokens:manage
      summary: Delete Personal Access Token
      tags:
      - Personal Access Tokens
    patch:
      description: This performs a targeted update to the field(s) of a Personal Access
        Token.
      operationId: patchPersonalAccessToken
      parameters:
      - description: The Personal Access Token id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /name
              value: New name
            - op: replace
              path: /scope
              value:
              - sp:scopes:all
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of OAuth client update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields are patchable:
          * name
          * scope
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonalAccessTokenResponse'
          description: "Indicates the PATCH operation succeeded, and returns the PAT's\
            \ new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - sp:my-personal-access-tokens:manage
      summary: Patch Personal Access Token
      tags:
      - Personal Access Tokens
  /public-identities:
    get:
      operationId: getPublicIdentities
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **alias**: *eq, sw*

          **email**: *eq, sw*

          **firstname**: *eq, sw*

          **lastname**: *eq, sw*
        example: firstname eq "John"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          If *true*, only get identities which satisfy ALL the following criteria in addition to any criteria specified by *filters*:
            - Should be either correlated or protected.
            - Should not be "spadmin" or "cloudadmin".
            - uid should not be null.
            - lastname should not be null.
            - email should not be null.
        example: false
        in: query
        name: add-core-filters
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name**
        example: name
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 2c9180857182305e0171993735622948
                name: Alison Ferguso
                alias: alison.ferguso
                email: alison.ferguso@acme-solar.com
                status: Active
                manager:
                  type: IDENTITY
                  id: 2c9180a46faadee4016fb4e018c20639
                  name: Thomas Edison
                attributes:
                - key: phone
                  name: Phone
                  value: "5125551234"
                - key: country
                  name: Country
                  value: US
              - id: 2c9180a46faadee4016fb4e018c20639
                name: Thomas Edison
                alias: thomas.edison
                email: thomas.edison@acme-solar.com
                status: Active
                manager:
                  type: IDENTITY
                  id: 2c918086676d3e0601677611dbde220f
                  name: Mister Manager
                attributes:
                - key: phone
                  name: Phone
                  value: "5125554321"
                - key: country
                  name: Country
                  value: US
              schema:
                items:
                  $ref: '#/components/schemas/PublicIdentity'
                type: array
          description: A list of public identity objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get a list of public identities
      tags:
      - Public Identities
  /public-identities-config:
    get:
      description: Returns the publicly visible attributes of an identity available
        to request approvers for Access Requests and Certification Campaigns. A token
        with ORG ADMIN authority is required to call this API.
      operationId: getPublicIdentityConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIdentityConfig'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get the Public Identities Configuration
      tags:
      - Public Identities Config
    put:
      description: Updates the publicly visible attributes of an identity available
        to request approvers for Access Requests and Certification Campaigns. A token
        with ORG ADMIN authority is required to call this API.
      operationId: updatePublicIdentityConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicIdentityConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIdentityConfig'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update the Public Identities Configuration
      tags:
      - Public Identities Config
  /requestable-objects:
    get:
      description: |-
        This endpoint returns a list of acccess items that that can be requested through the Access Request endpoints. Access items are marked with AVAILABLE, PENDING or ASSIGNED with respect to the identity provided using *identity-id* query param.
        Any authenticated token can call this endpoint to see their requestable access items. A token with ORG_ADMIN authority is required to call this endpoint to return a list of all of the requestable access items for the org or for another identity.
      operationId: listRequestableObjects
      parameters:
      - description: |-
          If present, the value returns only requestable objects for the specified identity.
           * Admin users can call this with any identity ID value.
           * Non-admin users can only specify *me* or pass their own identity ID value.
           * If absent, returns a list of all requestable objects for the tenant. Only admin users can make such a call. In this case, the available, pending, assigned accesses will not be annotated in the result.
        example: e7eab60924f64aa284175b9fa3309599
        in: query
        name: identity-id
        required: false
        schema:
          type: string
      - description: "Filters the results to the specified type/types, where each\
          \ type is one of ROLE or ACCESS_PROFILE. If absent, all types are returned.\
          \ Support for additional types may be added in the future without notice."
        example: "ROLE,ACCESS_PROFILE"
        explode: false
        in: query
        name: types
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RequestableObjectType'
          type: array
      - description: "It allows searching requestable access items with a partial\
          \ match on the name or description. If term is provided, then the *filter*\
          \ query parameter will be ignored."
        example: Finance Role
        in: query
        name: term
        required: false
        schema:
          type: string
      - description: "Filters the result to the specified status/statuses, where each\
          \ status is one of AVAILABLE, ASSIGNED, or PENDING. It is an error to specify\
          \ this parameter without also specifying an *identity-id* parameter. Additional\
          \ statuses may be added in the future without notice."
        example:
        - ASSIGNED
        - PENDING
        explode: false
        in: query
        name: statuses
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RequestableObjectRequestStatus'
          type: array
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, in, sw*
        example: name sw "bob"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name**
        example: name
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RequestableObject'
                type: array
          description: List of requestable objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Requestable Objects List
      tags:
      - Requestable Objects
  /saved-searches:
    get:
      description: |
        Returns a list of saved searches.
      operationId: savedSearchList
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |
          An expression used to constrain the result set using the filtering syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results).

          Allowed filter properties: *owner.id*, *public*

          Allowed filter operator: *eq*

          **Example filters**:

          ```owner.id eq "0de46054-fe90-434a-b84e-c6b3359d0c64"``` -- returns saved searches for the specified owner ID

          ```public eq true``` -- returns all public saved searches

          ```owner.id eq me or public eq true``` -- returns all of the current user's saved searches as well as all public saved searches belonging to other users in the current org
        example: public eq true
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SavedSearch'
                type: array
          description: The list of requested saved searches.
          headers:
            X-Total-Count:
              description: The total result count (returned only if the *count* parameter
                is specified as *true*).
              example: 5
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
      summary: Return a list of Saved Searches
      tags:
      - Saved Search
    post:
      description: |
        Creates a new saved search.
      operationId: savedSearchCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/savedSearchCreate_request'
        description: The saved search to persist.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearch'
          description: The persisted saved search.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
      summary: Create a saved search
      tags:
      - Saved Search
  /saved-searches/{id}:
    delete:
      description: |
        Deletes the specified saved search.
      operationId: savedSearchDelete
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content - Indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Delete a document by ID
      tags:
      - Saved Search
    get:
      description: |
        Returns the specified saved search.
      operationId: savedSearchGet
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearch'
          description: The requested saved search.
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Return a saved search by ID
      tags:
      - Saved Search
    put:
      description: |
        Updates an existing saved search.
      operationId: savedSearchUpdate
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavedSearch'
        description: The saved search to persist.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearch'
          description: The persisted saved search.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
      summary: |
        Updates an existing saved search
      tags:
      - Saved Search
  /saved-searches/{id}/execute:
    post:
      description: |
        Executes the specified saved search.
      operationId: savedSearchExecute
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              scheduled:
                $ref: '#/components/examples/execute-scheduled'
              test:
                $ref: '#/components/examples/execute-test'
            schema:
              $ref: '#/components/schemas/SearchArguments'
        description: |
          When saved search execution is triggered by a scheduled search, *scheduleId* will specify the ID of the triggering scheduled search.

          If *scheduleId* is not specified (when execution is triggered by a UI test), the *owner* and *recipients* arguments must be provided.
        required: true
      responses:
        "202":
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Execute a saved search by ID
      tags:
      - Saved Search
  /scheduled-searches:
    get:
      description: |
        Returns a list of scheduled searches.
      operationId: scheduledSearchList
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |
          An expression used to constrain the result set using the filtering syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results).

          Allowed filter properties: *owner.id*, *savedSearchId*

          Allowed filter operator: *eq*

          **Example filters**:

          ```owner.id eq "0de46054-fe90-434a-b84e-c6b3359d0c64"``` -- returns scheduled searches for the specified owner ID

          ```savedSearchId eq "6cc0945d-9eeb-4948-9033-72d066e1153e"``` -- returns scheduled searches that reference the specified saved search

          ```owner.id eq me or savedSearchId eq "6cc0945d-9eeb-4948-9033-72d066e1153e"``` -- returns all of the current user's scheduled searches as well as all scheduled searches that reference the specified saved search
        example: savedSearchId eq "6cc0945d-9eeb-4948-9033-72d066e1153e"
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduledSearch'
                type: array
          description: The list of requested scheduled searches.
          headers:
            X-Total-Count:
              description: The total result count (returned only if the *count* parameter
                is specified as *true*).
              example: 5
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List scheduled searches
      tags:
      - Scheduled Search
    post:
      description: |
        Creates a new scheduled search.
      operationId: scheduledSearchCreate
      requestBody:
        content:
          application/json:
            examples:
              Daily Search:
                description: A search that executes each day at a 9 AM
                value:
                  savedSearchId: 9c620e13-cd33-4804-a13d-403bd7bcdbad
                  schedule:
                    type: DAILY
                    hours:
                      type: LIST
                      values:
                      - "9"
                  recipients:
                  - type: IDENTITY
                    id: 2c9180867624cbd7017642d8c8c81f67
              Weekly Search:
                description: A search that executes each week on select days and times
                value:
                  savedSearchId: 9c620e13-cd33-4804-a13d-403bd7bcdbad
                  schedule:
                    type: WEEKLY
                    days:
                      type: LIST
                      values:
                      - MON
                      - TUE
                      - WED
                      - THU
                      - FRI
                      - SAT
                      - SUN
                    hours:
                      type: LIST
                      values:
                      - "9"
                  recipients:
                  - type: IDENTITY
                    id: 2c9180867624cbd7017642d8c8c81f67
              Monthly Search:
                description: A search that executes each month on select days and
                  times
                value:
                  savedSearchId: 9c620e13-cd33-4804-a13d-403bd7bcdbad
                  schedule:
                    type: MONTHLY
                    days:
                      type: LIST
                      values:
                      - "1"
                      - "7"
                      - "14"
                      - L
                    hours:
                      type: LIST
                      values:
                      - "9"
                  recipients:
                  - type: IDENTITY
                    id: 2c9180867624cbd7017642d8c8c81f67
              Calendar Search:
                description: A search that executes on specific calendar days
                value:
                  savedSearchId: 9c620e13-cd33-4804-a13d-403bd7bcdbad
                  schedule:
                    type: CALENDAR
                    days:
                      type: LIST
                      values:
                      - 2023-01-22
                      - 2023-02-22
                    hours:
                      type: LIST
                      values:
                      - "9"
                  recipients:
                  - type: IDENTITY
                    id: 2c9180867624cbd7017642d8c8c81f67
            schema:
              $ref: '#/components/schemas/scheduledSearchCreate_request'
        description: The scheduled search to persist.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledSearch'
          description: The persisted scheduled search.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create a new scheduled search
      tags:
      - Scheduled Search
  /scheduled-searches/{id}:
    delete:
      description: |
        Deletes the specified scheduled search.
      operationId: scheduledSearchDelete
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content - Indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete a Scheduled Search
      tags:
      - Scheduled Search
    get:
      description: Returns the specified scheduled search.
      operationId: scheduledSearchGet
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledSearch'
          description: The requested scheduled search.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get a Scheduled Search
      tags:
      - Scheduled Search
    put:
      description: |
        Updates an existing scheduled search.
      operationId: scheduledSearchUpdate
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledSearch'
        description: The scheduled search to persist.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledSearch'
          description: The persisted scheduled search.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update an existing Scheduled Search
      tags:
      - Scheduled Search
  /scheduled-searches/{id}/unsubscribe:
    post:
      description: |
        Unsubscribes a recipient from the specified scheduled search.
      operationId: scheduledSearchUnsubscribe
      parameters:
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypedReference'
        description: |
          The recipient to be removed from the scheduled search.
        required: true
      responses:
        "204":
          description: No Content - Indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Unsubscribe a recipient from Scheduled Search
      tags:
      - Scheduled Search
  /search:
    post:
      description: "Performs a search with the provided query and returns a matching\
        \ result collection. By default, you can page a maximum of 10,000 search result\
        \ records.  To page past 10,000 records, you can use searchAfter paging. \
        \ Refer to [Paginating Search Queries](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-search-queries)\
        \ for more information about how to implement searchAfter paging. "
      externalDocs:
        description: Learn more about search.
        url: https://documentation.sailpoint.com/saas/help/search/index.html
      operationId: searchPost
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            examples:
              query-fields:
                $ref: '#/components/examples/query-fields'
              query-timeZone:
                $ref: '#/components/examples/query-timeZone'
              query-innerHit:
                $ref: '#/components/examples/query-innerHit'
              typeAheadQuery:
                $ref: '#/components/examples/typeAheadQuery'
              typeAheadQuery-nestedType:
                $ref: '#/components/examples/typeAheadQuery-nestedType'
              filter-exists:
                $ref: '#/components/examples/filter-exists'
              filter-range:
                $ref: '#/components/examples/filter-range'
              filter-terms:
                $ref: '#/components/examples/filter-terms'
            schema:
              $ref: '#/components/schemas/Search'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                accessProfiles:
                  $ref: '#/components/examples/accessProfiles'
                entitlements:
                  $ref: '#/components/examples/entitlements'
                events:
                  $ref: '#/components/examples/events'
                identities:
                  $ref: '#/components/examples/identities'
                roles:
                  $ref: '#/components/examples/roles'
              schema:
                items:
                  $ref: '#/components/schemas/SearchDocument'
                type: array
          description: List of matching documents.
          headers:
            X-Total-Count:
              description: The total result count (returned only if the *count* parameter
                is specified as *true*).
              example: 30
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Perform Search
      tags:
      - Search
  /search/count:
    post:
      description: Performs a search with a provided query and returns the count of
        results in the X-Total-Count header.
      operationId: searchCount
      requestBody:
        content:
          application/json:
            examples:
              query-timeZone:
                $ref: '#/components/examples/query-timeZone'
            schema:
              $ref: '#/components/schemas/Search'
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
          headers:
            X-Total-Count:
              description: The total result count.
              example: 5
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Count Documents Satisfying a Query
      tags:
      - Search
  /search/aggregate:
    post:
      description: "Performs a search query aggregation and returns the aggregation\
        \ result. By default, you can page a maximum of 10,000 search result records.\
        \  To page past 10,000 records, you can use searchAfter paging.  Refer to\
        \ [Paginating Search Queries](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-search-queries)\
        \ for more information about how to implement searchAfter paging. "
      operationId: searchAggregate
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            examples:
              metricAggregation:
                $ref: '#/components/examples/metricAggregation'
              metricAggregation-dsl:
                $ref: '#/components/examples/metricAggregation-dsl'
              bucketAggregation:
                $ref: '#/components/examples/bucketAggregation'
              bucketAggregation-dsl:
                $ref: '#/components/examples/bucketAggregation-dsl'
              nestedAggregation-bucketAggregation:
                $ref: '#/components/examples/nestedAggregation-bucketAggregation'
              nestedAggregation-bucketAggregation-dsl:
                $ref: '#/components/examples/nestedAggregation-bucketAggregation-dsl'
              nestedAggregation-filterAggregation-bucketAggregation:
                $ref: '#/components/examples/nestedAggregation-filterAggregation-bucketAggregation'
              nestedAggregation-filterAggregation-bucketAggregation-dsl:
                $ref: '#/components/examples/nestedAggregation-filterAggregation-bucketAggregation-dsl'
              bucketAggregation-subAggregation:
                $ref: '#/components/examples/bucketAggregation-subAggregation'
              bucketAggregation-subAggregation-dsl:
                $ref: '#/components/examples/bucketAggregation-subAggregation-dsl'
            schema:
              $ref: '#/components/schemas/Search'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregationResult'
            text/csv:
              schema:
                $ref: '#/components/schemas/AggregationResult-csv'
          description: Aggregation results.
          headers:
            X-Total-Count:
              description: The total result count (returned only if the *count* parameter
                is specified as *true*).
              example: 5
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Perform a Search Query Aggregation
      tags:
      - Search
  /search/{index}/{id}:
    get:
      description: "Fetches a single document from the specified index, using the\
        \ specified document ID."
      operationId: searchGet
      parameters:
      - description: |
          The index from which to fetch the specified document.

          The currently supported index names are: *accessprofiles*, *accountactivities*, *accounts*, *aggregations*, *entitlements*, *events*, *identities*, and *roles*.
        example: accounts
        in: path
        name: index
        required: true
        schema:
          type: string
      - description: ID of the requested document.
        example: 2c91808568c529c60168cca6f90c1313
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                accessProfile:
                  $ref: '#/components/examples/accessProfile'
                entitlement:
                  $ref: '#/components/examples/entitlement'
                event:
                  $ref: '#/components/examples/event'
                identity:
                  $ref: '#/components/examples/identity'
                role:
                  $ref: '#/components/examples/role'
              schema:
                $ref: '#/components/schemas/SearchDocument'
          description: The requested document.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get a Document by ID
      tags:
      - Search
  /service-desk-integrations:
    get:
      description: Get a list of ServiceDeskIntegrationDto for existing Service Desk
        Integrations.  A token with Org Admin or Service Desk Admin authority is required
        to access this endpoint.
      operationId: getServiceDeskIntegrationList
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name**
        example: name
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq*

          **type**: *eq, in*

          **cluster**: *eq, in*
        example: name eq "John Doe"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          format: comma-separated
          type: string
        style: form
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceDeskIntegrationDto'
                type: array
          description: List of ServiceDeskIntegrationDto
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:service-desk-admin:read
        - idn:service-desk-integration:read
      summary: List existing Service Desk Integrations
      tags:
      - Service Desk Integration
    post:
      description: Create a new Service Desk Integrations.  A token with Org Admin
        or Service Desk Admin authority is required to access this endpoint.
      operationId: createServiceDeskIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDeskIntegrationDto'
        description: The specifics of a new integration to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationDto'
          description: details of the created integration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:service-desk-admin:write
        - idn:service-desk-integration:write
      summary: Create a new Service Desk integration
      tags:
      - Service Desk Integration
  /service-desk-integrations/{id}:
    delete:
      description: Delete an existing Service Desk integration by ID.  A token with
        Org Admin or Service Desk Admin authority is required to access this endpoint.
      operationId: deleteServiceDeskIntegration
      parameters:
      - description: ID of Service Desk integration to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
      responses:
        "204":
          description: Service Desk integration with the given ID successfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:service-desk-admin:write
        - idn:service-desk-integration:write
      summary: Delete a Service Desk integration by ID
      tags:
      - Service Desk Integration
    get:
      description: Get an existing Service Desk integration by ID.  A token with Org
        Admin or Service Desk Admin authority is required to access this endpoint.
      operationId: getServiceDeskIntegration
      parameters:
      - description: ID of the Service Desk integration to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationDto'
          description: ServiceDeskIntegrationDto with the given ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:service-desk-admin:read
        - idn:service-desk-integration:read
      summary: Get a Service Desk integration by ID
      tags:
      - Service Desk Integration
    patch:
      description: Update an existing ServiceDeskIntegration by ID with a PATCH request.
      operationId: patchServiceDeskIntegration
      parameters:
      - description: ID of the Service Desk integration to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
        description: |
          A list of SDIM update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          PATCH can only be applied to the following fields:
            *   "beforeProvisioningRule"

          A 403 Forbidden Error indicates that you attempted to PATCH a field that is not allowed.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationDto'
          description: ServiceDeskIntegrationDto as updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:service-desk-admin:write
        - idn:service-desk-integration:write
      summary: Service Desk Integration Update - PATCH
      tags:
      - Service Desk Integration
    put:
      description: Update an existing Service Desk integration by ID with updated
        value in JSON form as the request body.  A token with Org Admin or Service
        Desk Admin authority is required to access this endpoint.
      operationId: updateServiceDeskIntegration
      parameters:
      - description: ID of the Service Desk integration to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDeskIntegrationDto'
        description: The specifics of the integration to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationDto'
          description: ServiceDeskIntegrationDto as updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:service-desk-admin:write
        - idn:service-desk-integration:write
      summary: Update a Service Desk integration by ID
      tags:
      - Service Desk Integration
  /service-desk-integrations/types:
    get:
      description: This API endpoint returns the current list of supported Service
        Desk integration types.  A token with Org Admin or Service Desk Admin authority
        is required to access this endpoint.
      operationId: getServiceDeskIntegrationTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceDeskIntegrationTemplateType'
                type: array
          description: Responds with an array of the currently supported Service Desk
            integration types.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:service-desk-admin:read
        - idn:service-desk-integration:read
      summary: Service Desk Integration Types List.
      tags:
      - Service Desk Integration
  /service-desk-integrations/templates/{scriptName}:
    get:
      description: This API endpoint returns an existing Service Desk integration
        template by scriptName.  A token with Org Admin or Service Desk Admin authority
        is required to access this endpoint.
      operationId: getServiceDeskIntegrationTemplate
      parameters:
      - description: The scriptName value of the Service Desk integration template
          to get
        explode: false
        in: path
        name: scriptName
        required: true
        schema:
          example: aScriptName
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationTemplateDto'
          description: Responds with the ServiceDeskIntegrationTemplateDto with the
            specified scriptName.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:service-desk-admin:read
        - idn:service-desk-integration:read
      summary: Service Desk integration template by scriptName.
      tags:
      - Service Desk Integration
  /service-desk-integrations/status-check-configuration:
    get:
      description: Get the time check configuration of queued SDIM tickets.  A token
        with Org Admin or Service Desk Admin authority is required to access this
        endpoint.
      operationId: getStatusCheckDetails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueuedCheckConfigDetails'
          description: QueuedCheckConfigDetails containing the configured values
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:service-desk-admin:read
        - idn:service-desk-integration:read
      summary: Get the time check configuration of queued SDIM tickets
      tags:
      - Service Desk Integration
    put:
      description: Update the time check configuration of queued SDIM tickets.  A
        token with Org Admin or Service Desk Admin authority is required to access
        this endpoint.
      operationId: updateStatusCheckDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueuedCheckConfigDetails'
        description: the modified time check configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueuedCheckConfigDetails'
          description: QueuedCheckConfigDetails as updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:service-desk-admin:write
        - idn:service-desk-integration:write
      summary: Update the time check configuration of queued SDIM tickets
      tags:
      - Service Desk Integration
  /query-password-info:
    post:
      description: "This API is used to query password related information. \n\nA\
        \ token with [API authority](https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow)\
        \ \nis required to call this API.  \"API authority\" refers to a token that\
        \ only has the \"client_credentials\" \ngrant type, and therefore no user\
        \ context. A [personal access token](https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens)\
        \ \nor a token generated with the [authorization_code](https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow)\
        \ \ngrant type will **NOT** work on this endpoint, and a `403 Forbidden` response\
        \ \nwill be returned.\n"
      operationId: queryPasswordInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordInfoQueryDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordInfo'
          description: Reference to the password info.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Query Password Info
      tags:
      - Password Management
  /set-password:
    post:
      description: "This API is used to set a password for an identity. \n\nAn identity\
        \ can change their own password if they use a token generated by their IDN\
        \ user, such as a [personal access token](https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens)\
        \ or [\"authorization_code\" derived OAuth token](https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow).\n\
        \nA token with [API authority](https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow)\
        \ can be used to change **any** identity's password.  \"API authority\" refers\
        \ to a token that only has the \"client_credentials\" grant type.\n"
      operationId: setPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChangeResponse'
          description: Reference to the password change.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Set Identity's Password
      tags:
      - Password Management
  /password-change-status/{id}:
    get:
      description: This API returns the status of a password change request. A token
        with identity owner or trusted API client application authority is required
        to call this API.
      operationId: getPasswordChangeStatus
      parameters:
      - description: Password change request ID
        example: 089899f13a8f4da7824996191587bab9
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordStatus'
          description: Status of the password change request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get Password Change Request Status
      tags:
      - Password Management
  /sources:
    get:
      description: |-
        This end-point lists all the sources in IdentityNow.
        A token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or ROLE_SUBADMIN authority is required to call this API.
      operationId: listSources
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *co, eq, in, sw*

          **type**: *eq, in*

          **owner.id**: *eq, in*

          **features**: *ca, co*

          **created**: *eq*

          **modified**: *eq*

          **managementWorkgroup.id**: *eq*

          **description**: *eq*

          **authoritative**: *eq*

          **healthy**: *eq*

          **status**: *eq, in*

          **connectionType**: *eq*

          **connectorName**: *eq*
        example: name eq "#Employees"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status**
        example: name
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      - description: |-
          Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user.
          Subadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned.
        example: name
        in: query
        name: for-subadmin
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Source'
                type: array
          description: List of Source objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Lists all sources in IdentityNow.
      tags:
      - Sources
    post:
      description: |-
        This creates a specific source with a full source JSON representation. Any passwords are submitted as plain-text and encrypted upon receipt in IdentityNow.
        A token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: createSource
      parameters:
      - description: Configures the source as a DelimitedFile type of source.
        example: false
        in: query
        name: provisionAsCsv
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: "Created Source object. Any passwords will only show the the\
            \ encrypted cipher-text, as they are not decrypt-able in IdentityNow cloud-based\
            \ services, per IdentityNow security design."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Creates a source in IdentityNow.
      tags:
      - Sources
  /sources/{id}:
    delete:
      description: |-
        This end-point deletes a specific source in IdentityNow.
        A token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
        All of accounts on the source will be removed first, then the source will be deleted. Actual status of task execution can be retrieved via method GET `/task-status/{id}`
      operationId: deleteSource
      parameters:
      - description: The Source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              examples:
                deleteSource:
                  summary: Response returned when deleting a source
                  value:
                    type: TASK_RESULT
                    id: 2c91808779ecf55b0179f720942f181a
                    name: null
              schema:
                $ref: '#/components/schemas/deleteSource_202_response'
          description: Accepted - Returned if the request was successfully accepted
            into the system.
          links:
            GetTaskStatusById:
              description: |
                The `id` value returned in the response can be used as the `id` parameter in `GET /task-status/{id}`.
              operationId: getTaskStatus
              parameters:
                id: $response.body#/id
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete Source by ID
      tags:
      - Sources
    get:
      description: |-
        This end-point gets a specific source in IdentityNow.
        A token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: getSource
      parameters:
      - description: The Source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: A Source object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get Source by ID
      tags:
      - Sources
    patch:
      description: |
        This API partially updates a source in IdentityNow, using a list of patch operations according to the
        [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

        Some fields are immutable and cannot be changed, such as:

        * id
        * type
        * authoritative
        * created
        * modified
        * connector
        * connectorClass
        * passwordPolicies

        Attempts to modify these fields will result in a 400 error.

        A token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or API authority is required to call this API.
      operationId: updateSource
      parameters:
      - description: The Source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Edit the source description:
                description: This example shows how to edit a source description.
                value:
                - op: replace
                  path: /description
                  value: new description
              Edit the source cluster:
                description: This example shows how to edit a source cluster by id.
                value:
                - op: replace
                  path: /cluster/id
                  value: 2c918087813a902001813f3f85736b45
              Edit source features:
                description: This example illustrates how you can update source supported
                  features
                value:
                - op: replace
                  path: /features
                  value:
                  - PASSWORD
                  - PROVISIONING
                  - ENABLE
                  - AUTHENTICATE
              Change a source description and cluster in One Call:
                description: This example shows how multiple fields may be updated
                  with a single patch call.
                value:
                - op: replace
                  path: /description
                  value: new description
                - op: replace
                  path: /cluster/id
                  value: 2c918087813a902001813f3f85736b45
              Add a filter string to the connector:
                description: "This example shows how you can add a filter to incoming\
                  \ accounts during the account aggregation process. In the example\
                  \ below, any account that does not have an \"m\" or \"d\" in the\
                  \ id will be aggregated."
                value:
                - op: add
                  path: /connectorAttributes/filterString
                  value: '!( id.contains( "m" ) ) || !( id.contains( "d" ) )'
              Update connector attribute for specific operation type:
                description: This example shows how you can update the 3rd object
                  in the connection parameters operationType. This will change it
                  from a standard group aggregation to a group aggregation on the
                  "test" entitlement type
                value:
                - op: replace
                  path: /connectorAttributes/connectionParameters/2/operationType
                  value: Group Aggregation-test
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of account update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902)\
          \ standard. Any password changes are submitted as plain-text and encrypted\
          \ upon receipt in IdentityNow."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: "Updated Source object. Any passwords will only show the the\
            \ encrypted cipher-text, as they are not decrypt-able in IdentityNow cloud-based\
            \ services, per IdentityNow security design."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update Source (Partial)
      tags:
      - Sources
    put:
      description: |
        This API updates a source in IdentityNow, using a full object representation. In other words, the existing Source
        configuration is completely replaced.

        Some fields are immutable and cannot be changed, such as:

        * id
        * type
        * authoritative
        * connector
        * connectorClass
        * passwordPolicies

        Attempts to modify these fields will result in a 400 error.

        A token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: replaceSource
      parameters:
      - description: The Source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: "Updated Source object. Any passwords will only show the the\
            \ encrypted cipher-text, as they are not decrypt-able in IdentityNow cloud-based\
            \ services, per IdentityNow security design."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update Source (Full)
      tags:
      - Sources
  /sources/{sourceId}/provisioning-policies:
    get:
      description: |-
        This end-point lists all the ProvisioningPolicies in IdentityNow.
        A token with API, or ORG_ADMIN authority is required to call this API.
      operationId: listProvisioningPolicies
      parameters:
      - description: The Source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProvisioningPolicyDto'
                type: array
          description: List of ProvisioningPolicyDto objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:provisioning-policy-list:read
      summary: Lists ProvisioningPolicies
      tags:
      - Sources
    post:
      description: |-
        This API generates a create policy/template based on field value transforms. This API is intended for use when setting up JDBC Provisioning type sources, but it will also work on other source types.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: createProvisioningPolicy
      parameters:
      - description: The Source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              Create Account Provisioning Policy:
                value:
                  name: Account
                  description: Account Provisioning Policy
                  usageType: CREATE
                  fields:
                  - name: displayName
                    transform:
                      type: identityAttribute
                      attributes:
                        name: displayName
                    attributes: {}
                    isRequired: false
                    type: string
                    isMultiValued: false
                  - name: distinguishedName
                    transform:
                      type: usernameGenerator
                      attributes:
                        sourceCheck: true
                        patterns:
                        - "CN=$fi $ln,OU=zzUsers,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
                        - "CN=$fti $ln,OU=zzUsers,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
                        - "CN=$fn $ln,OU=zzUsers,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
                        - "CN=$fn$ln${uniqueCounter},OU=zzUsers,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
                        fn:
                          type: identityAttribute
                          attributes:
                            name: firstname
                        ln:
                          type: identityAttribute
                          attributes:
                            name: lastname
                        fi:
                          type: substring
                          attributes:
                            input:
                              type: identityAttribute
                              attributes:
                                name: firstname
                            begin: 0.0
                            end: 1.0
                        fti:
                          type: substring
                          attributes:
                            input:
                              type: identityAttribute
                              attributes:
                                name: firstname
                            begin: 0.0
                            end: 2.0
                    attributes:
                      cloudMaxUniqueChecks: "5"
                      cloudMaxSize: "100"
                      cloudRequired: "true"
                    isRequired: false
                    type: ""
                    isMultiValued: false
                  - name: description
                    transform:
                      type: static
                      attributes:
                        value: ""
                    attributes: {}
                    isRequired: false
                    type: string
                    isMultiValued: false
            schema:
              $ref: '#/components/schemas/ProvisioningPolicyDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
          description: Created ProvisioningPolicyDto object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:provisioning-policy:create
      summary: Create Provisioning Policy
      tags:
      - Sources
  /sources/{sourceId}/provisioning-policies/{usageType}:
    delete:
      description: |-
        Deletes the provisioning policy with the specified usage on an application.
        A token with API, or ORG_ADMIN authority is required to call this API.
      operationId: deleteProvisioningPolicy
      parameters:
      - description: The Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: The type of ProvisioningPolicy usage.
        in: path
        name: usageType
        required: true
        schema:
          $ref: '#/components/schemas/UsageType'
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:provisioning-policy:delete
      summary: Delete Provisioning Policy by UsageType
      tags:
      - Sources
    get:
      description: |-
        This end-point retrieves the ProvisioningPolicy with the specified usage on the specified Source in IdentityNow.
        A token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: getProvisioningPolicy
      parameters:
      - description: The Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: The type of ProvisioningPolicy usage.
        example: REGISTER
        in: path
        name: usageType
        required: true
        schema:
          $ref: '#/components/schemas/UsageType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
          description: The requested ProvisioningPolicyDto was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:provisioning-policy:read
      summary: Get Provisioning Policy by UsageType
      tags:
      - Sources
    patch:
      description: |-
        This API selectively updates an existing Provisioning Policy using a JSONPatch payload.
        A token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: updateProvisioningPolicy
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: The type of ProvisioningPolicy usage.
        in: path
        name: usageType
        required: true
        schema:
          $ref: '#/components/schemas/UsageType'
      requestBody:
        content:
          application/json-patch+json:
            examples:
              add-field:
                summary: Add a field to the beginning of the list
                value:
                - op: add
                  path: /fields/0
                  value:
                    name: email
                    transform:
                      type: identityAttribute
                      attributes:
                        name: email
                    attributes: {}
                    isRequired: false
                    type: string
                    isMultiValued: false
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: The JSONPatch payload used to update the schema.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
          description: The ProvisioningPolicyDto was successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:provisioning-policy:update
      summary: Partial update of Provisioning Policy
      tags:
      - Sources
    put:
      description: |-
        This end-point updates the provisioning policy with the specified usage on the specified source in IdentityNow.
        A token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: replaceProvisioningPolicy
      parameters:
      - description: The Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: The type of ProvisioningPolicy usage.
        in: path
        name: usageType
        required: true
        schema:
          $ref: '#/components/schemas/UsageType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningPolicyDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
          description: The ProvisioningPolicyDto was successfully replaced.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:provisioning-policy:update
      summary: Update Provisioning Policy by UsageType
      tags:
      - Sources
  /sources/{sourceId}/provisioning-policies/bulk-update:
    post:
      description: |-
        This end-point updates a list of provisioning policies on the specified source in IdentityNow.
        A token with API, or ORG_ADMIN authority is required to call this API.
      operationId: bulkUpdateProvisioningPolicies
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProvisioningPolicyDto'
                type: array
          description: A list of the ProvisioningPolicyDto was successfully replaced.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:provisioning-policy-bulk:update
      summary: Bulk Update Provisioning Policies
      tags:
      - Sources
  /sources/{sourceId}/schemas:
    get:
      description: |
        Lists the Schemas that exist on the specified Source in IdentityNow.
      operationId: listSchemas
      parameters:
      - description: The Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: "If set to 'group', then the account schema is filtered and only\
          \ group schemas are returned. Only a value of 'group' is recognized."
        example: group
        in: query
        name: include-types
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Schema'
                type: array
          description: The Schemas were successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List Schemas on a Source
      tags:
      - Sources
    post:
      description: |
        Creates a new Schema on the specified Source in IdentityNow.
      operationId: createSchema
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schema'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: The Schema was successfully created on the specified Source.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create Schema on a Source
      tags:
      - Sources
  /sources/{sourceId}/schemas/{schemaId}:
    delete:
      operationId: deleteSchema
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: The Schema id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: schemaId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete Source Schema by ID
      tags:
      - Sources
    get:
      description: |
        Get the Source Schema by ID in IdentityNow.
      operationId: getSchema
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: The Schema id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: schemaId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: The requested Schema was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get Source Schema by ID
      tags:
      - Sources
    patch:
      description: "Use this API to selectively update an existing Schema using a\
        \ JSONPatch payload. \n\nThe following schema fields are immutable and cannot\
        \ be updated:\n\n- id\n- name\n- created\n- modified\n\n\nTo switch an account\
        \ attribute to a group entitlement, you need to have the following in place:\n\
        \n- `isEntitlement: true`\n- Must define a schema for the group and [add it\
        \ to the source](https://developer.sailpoint.com/idn/api/v3/create-schema)\
        \ before updating the `isGroup` flag.  For example, here is the `group` account\
        \ attribute referencing a schema that defines the group:\n```json\n{\n   \
        \ \"name\": \"groups\",\n    \"type\": \"STRING\",\n    \"schema\": {\n  \
        \      \"type\": \"CONNECTOR_SCHEMA\",\n        \"id\": \"2c9180887671ff8c01767b4671fc7d60\"\
        ,\n        \"name\": \"group\"\n    },\n    \"description\": \"The groups,\
        \ roles etc. that reference account group objects\",\n    \"isMulti\": true,\n\
        \    \"isEntitlement\": true,\n    \"isGroup\": true\n}\n```\n"
      operationId: updateSchema
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: The Schema id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: schemaId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              add-attribute:
                summary: Add an attribute to the end of the list
                value:
                - op: add
                  path: /attributes/-
                  value:
                    name: location
                    type: STRING
                    schema: null
                    description: Employee location
                    isMulti: false
                    isEntitlement: false
                    isGroup: false
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: The JSONPatch payload used to update the schema.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: The Schema was successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update Source Schema (Partial)
      tags:
      - Sources
    put:
      description: |
        This API will completely replace an existing Schema with the submitted payload. Some fields of the Schema cannot be updated. These fields are listed below.

        * id
        * name
        * created
        * modified

        Any attempt to modify these fields will result in an error response with a status code of 400.

        > `id` must remain in the request body, but it cannot be changed.  If `id` is omitted from the request body, the result will be a 400 error.
      operationId: replaceSchema
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: The Schema id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: schemaId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: The Schema was successfully replaced.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update Source Schema (Full)
      tags:
      - Sources
  /sources/{sourceId}/source-health:
    get:
      description: This endpoint fetches source health by source's id
      operationId: getSourceHealth
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceHealthDto'
          description: Fetched source health successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: This API fetches source health by source's id
      tags:
      - Sources
  /sources/{id}/schemas/accounts:
    get:
      description: |-
        This API downloads the CSV schema that defines the account attributes on a source.
        >**NOTE: This API is designated only for Delimited File sources.**
      operationId: downloadSourceAccountsSchema
      parameters:
      - description: The Source id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/csv:
              example: "id,name,givenName,familyName,e-mail,location,manager,groups,startDate,endDate"
          description: Successfully downloaded the file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:source-schema:read
      summary: Downloads source accounts schema template
      tags:
      - Sources
    post:
      description: "This API uploads a source schema template file to configure a\
        \ source's account attributes.\n\nTo retrieve the file to modify and upload,\
        \ log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources**\
        \ -> **`<SourceName>`** -> **Import Data** -> **Account Schema** -> **Options**\
        \ -> **Download Schema**\n\n>**NOTE: This API is designated only for Delimited\
        \ File sources.**"
      operationId: uploadSourceAccountsSchema
      parameters:
      - description: The Source id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadSourceAccountsSchema_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: Successfully uploaded the file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:source-schema:update
      summary: Uploads source accounts schema template
      tags:
      - Sources
  /sources/{id}/schemas/entitlements:
    get:
      description: |-
        This API downloads the CSV schema that defines the entitlement attributes on a source.

        >**NOTE: This API is designated only for Delimited File sources.**
      operationId: downloadSourceEntitlementsSchema
      parameters:
      - description: The Source id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Name of entitlement schema
        example: ?schemaName=group
        in: query
        name: schemaName
        schema:
          type: string
      responses:
        "200":
          content:
            text/csv:
              example: "id,name,displayName,created,description,modified,entitlements,groups,permissions"
          description: Successfully downloaded the file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:source-schema:read
      summary: Downloads source entitlements schema template
      tags:
      - Sources
    post:
      description: "This API uploads a source schema template file to configure a\
        \ source's entitlement attributes.\n\nTo retrieve the file to modify and upload,\
        \ log into Identity Now. \n\nClick **Admin** -> **Connections** -> **Sources**\
        \ -> **`<SourceName>`** -> **Import Data** -> **Import Entitlements** -> **Download**\n\
        \n>**NOTE: This API is designated only for Delimited File sources.**"
      operationId: uploadSourceEntitlementsSchema
      parameters:
      - description: The Source id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Name of entitlement schema
        example: ?schemaName=group
        in: query
        name: schemaName
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadSourceAccountsSchema_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: Successfully uploaded the file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:source-schema:update
      summary: Uploads source entitlements schema template
      tags:
      - Sources
  /sources/{sourceId}/upload-connector-file:
    post:
      description: |-
        This uploads a supplemental source connector file (like jdbc driver jars) to a source's S3 bucket. This also sends ETS and Audit events.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: uploadConnectorFile
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadSourceAccountsSchema_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: Uploaded the file successfully and sent all post-upload events
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Upload connector file to source
      tags:
      - Sources
  /transforms:
    get:
      description: |-
        Gets a list of all saved transform objects.
        A token with transforms-list read authority is required to call this API.
      operationId: getTransformsList
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: Name of the transform to retrieve from the list.
        in: query
        name: name
        required: false
        schema:
          example: ExampleTransformName123
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)
          Filtering is supported for the following fields and operators:
          **internal**: *eq*
          **name**: *eq*, *sw*
        example: name eq "Uppercase"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 2cd78adghjkja34jh2b1hkjhasuecd
                name: Timestamp To Date
                type: dateFormat
                attributes:
                  inputFormat: "MMM-dd-yyyy, HH:mm:ss.SSS"
                  outputFormat: yyyy/dd/MM
                internal: false
              - id: 2lkas8dhj4bkuakja77giih7l4ashh
                name: PrefixSubstring
                type: substring
                attributes:
                  begin: 0
                  end: 3
                internal: true
              schema:
                items:
                  $ref: '#/components/schemas/Transform'
                type: array
          description: A list of transforms matching the given criteria.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:transforms-list:read
      summary: List transforms
      tags:
      - Transforms
    post:
      description: "Creates a new transform object immediately. By default, the internal\
        \ flag is set to false to indicate that this is a custom transform. Only SailPoint\
        \ employees have the ability to create a transform with internal set to true.\
        \ Newly created Transforms can be used in the Identity Profile mappings within\
        \ the UI. A token with transform write authority is required to call this\
        \ API."
      operationId: createTransform
      requestBody:
        content:
          application/json:
            example:
              name: Timestamp To Date
              type: dateFormat
              attributes:
                inputFormat: "MMM dd yyyy, HH:mm:ss.SSS"
                outputFormat: yyyy/dd/MM
            schema:
              $ref: '#/components/schemas/Transform'
        description: The transform to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transform'
          description: Indicates the transform was successfully created and returns
            its representation.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:transforms:write
      summary: Create transform
      tags:
      - Transforms
  /transforms/{id}:
    delete:
      description: |-
        Deletes the transform specified by the given ID. Attempting to delete a transform that is used in one or more Identity Profile mappings will result in an error. If this occurs, you must first remove the transform from all mappings before deleting the transform.
        A token with transform delete authority is required to call this API.
      operationId: deleteTransform
      parameters:
      - description: ID of the transform to delete
        example: 2cd78adghjkja34jh2b1hkjhasuecd
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:transforms:delete
      summary: Delete a transform
      tags:
      - Transforms
    get:
      description: |-
        This API returns the transform specified by the given ID.
        A token with transform read authority is required to call this API.
      operationId: getTransform
      parameters:
      - description: ID of the transform to retrieve
        example: 2cd78adghjkja34jh2b1hkjhasuecd
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transform'
          description: Transform with the given ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:transforms:read
      summary: Transform by ID
      tags:
      - Transforms
    put:
      description: |-
        Replaces the transform specified by the given ID with the transform provided in the request body. Only the "attributes" field is mutable. Attempting to change other properties (ex. "name" and "type") will result in an error.
        A token with transform write authority is required to call this API.
      operationId: updateTransform
      parameters:
      - description: ID of the transform to update
        example: 2cd78adghjkja34jh2b1hkjhasuecd
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: Timestamp To Date
              type: dateFormat
              attributes:
                inputFormat: "MMM-dd-yyyy, HH:mm:ss.SSS"
                outputFormat: yyyy/dd/MM
            schema:
              $ref: '#/components/schemas/Transform'
        description: "The updated transform object (must include \"name\", \"type\"\
          , and \"attributes\" fields)."
      responses:
        "200":
          content:
            application/json:
              example:
                id: 2cd78adghjkja34jh2b1hkjhasuecd
                name: Timestamp To Date
                type: dateFormat
                attributes:
                  inputFormat: "MMM-dd-yyyy, HH:mm:ss.SSS"
                  outputFormat: yyyy/dd/MM
                internal: false
              schema:
                $ref: '#/components/schemas/Transform'
          description: Indicates the transform was successfully updated and returns
            its new representation.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - oauth2:
        - idn:transforms:write
      summary: Update a transform
      tags:
      - Transforms
  /work-items:
    get:
      description: "This gets a collection of work items belonging to either the specified\
        \ user(admin required), or the current user."
      operationId: listWorkItems
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: ID of the work item owner.
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkItems'
                type: array
          description: List of work items
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List Work Items
      tags:
      - Work Items
  /work-items/completed:
    get:
      description: "This gets a collection of completed work items belonging to either\
        \ the specified user(admin required), or the current user."
      operationId: completedWorkItems
      parameters:
      - description: "The id of the owner of the work item list being requested. \
          \ Either an admin, or the owning/current user must make this request."
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkItems'
                type: array
          description: List of completed work items.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Completed Work Items
      tags:
      - Work Items
  /work-items/count:
    get:
      description: "This gets a count of work items belonging to either the specified\
        \ user(admin required), or the current user."
      operationId: countWorkItems
      parameters:
      - description: ID of the work item owner.
        example: ef38f94347e94562b5bb8424a56397d8
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemsCount'
          description: List of work items
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Count Work Items
      tags:
      - Work Items
  /work-items/completed/count:
    get:
      description: "This gets a count of completed work items belonging to either\
        \ the specified user(admin required), or the current user."
      operationId: countCompletedWorkItems
      parameters:
      - description: ID of the work item owner.
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemsCount'
          description: List of work items
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Count Completed Work Items
      tags:
      - Work Items
  /work-items/summary:
    get:
      description: "This gets a summary of work items belonging to either the specified\
        \ user(admin required), or the current user."
      operationId: summaryWorkItems
      parameters:
      - description: ID of the work item owner.
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItemsSummary'
          description: List of work items
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Work Items Summary
      tags:
      - Work Items
  /work-items/{id}:
    get:
      description: "This gets the details of a Work Item belonging to either the specified\
        \ user(admin required), or the current user."
      operationId: getWorkItems
      parameters:
      - description: ID of the work item.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: The work item with the given ID.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get a Work Item
      tags:
      - Work Items
    post:
      description: "This API completes a work item. Either an admin, or the owning/current\
        \ user must make this request."
      operationId: completeWorkItem
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A WorkItems object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Complete a Work Item
      tags:
      - Work Items
  /work-items/{id}/approve/{approvalItemId}:
    post:
      description: "This API approves an Approval Item. Either an admin, or the owning/current\
        \ user must make this request."
      operationId: approveApprovalItem
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the approval item.
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: path
        name: approvalItemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Approve an Approval Item
      tags:
      - Work Items
  /work-items/{id}/reject/{approvalItemId}:
    post:
      description: "This API rejects an Approval Item. Either an admin, or the owning/current\
        \ user must make this request."
      operationId: rejectApprovalItem
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the approval item.
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: path
        name: approvalItemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Reject an Approval Item
      tags:
      - Work Items
  /work-items/bulk-approve/{id}:
    post:
      description: "This API bulk approves Approval Items. Either an admin, or the\
        \ owning/current user must make this request."
      operationId: bulkApproveApprovalItem
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Bulk approve Approval Items
      tags:
      - Work Items
  /work-items/bulk-reject/{id}:
    post:
      description: "This API bulk rejects Approval Items. Either an admin, or the\
        \ owning/current user must make this request."
      operationId: bulkRejectApprovalItem
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Bulk reject Approval Items
      tags:
      - Work Items
  /work-items/{id}/submit-account-selection:
    post:
      description: "This API submits account selections. Either an admin, or the owning/current\
        \ user must make this request."
      operationId: submitAccountSelection
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              fieldName: fieldValue
            schema:
              additionalProperties: true
              type: object
        description: "Account Selection Data map, keyed on fieldName"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAccessRequest_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Submit Account Selections
      tags:
      - Work Items
components:
  examples:
    execute-scheduled:
      summary: Triggered by Scheduled Search
      value:
        scheduleId: 7a724640-0c17-4ce9-a8c3-4a89738459c8
    execute-test:
      summary: Triggered by UI Test
      value:
        owner:
          type: IDENTITY
          id: 2c91808568c529c60168cca6f90c1313
        recipients:
        - type: IDENTITY
          id: 2c91808568c529c60168cca6f90c1313
    query-fields:
      summary: Query with Fields
      value:
        indices:
        - identities
        query:
          query: '"John Doe"'
          fields:
          - name
    query-timeZone:
      summary: Query with TimeZone
      value:
        indices:
        - identities
        query:
          query: "created: [2022-05-19T19:26:03.351Z TO now]"
          timeZone: America/Los_Angeles
    query-innerHit:
      summary: Query with InnerHit
      value:
        indices:
        - identities
        query:
          query: '"John Doe"'
          innerHit:
            type: access
            query: source.name:\"Active Directory\"
    typeAheadQuery:
      summary: TypeAheadQuery
      value:
        indices:
        - identities
        queryType: TYPEAHEAD
        typeAheadQuery:
          field: name
          query: Jo
          maxExpansions: 50
    typeAheadQuery-nestedType:
      summary: TypeAheadQuery with NestedType
      value:
        indices:
        - identities
        queryType: TYPEAHEAD
        typeAheadQuery:
          field: source.name
          nestedType: access
          query: Work
          maxExpansions: 50
    filter-exists:
      summary: Filter with Exists
      value:
        indices:
        - identities
        query:
          query: attributes.city:London
        filters:
          attributes.cloudAuthoritativeSource:
            type: EXISTS
            exclude: true
    filter-range:
      summary: Filter with Range
      value:
        indices:
        - identities
        query:
          query: attributes.city:London
          timeZone: Europe/London
        filters:
          accessCount:
            type: RANGE
            range:
              lower:
                value: "3"
          created:
            type: RANGE
            range:
              lower:
                value: 2019-12-01
                inclusive: true
              upper:
                value: 2020-01-01
    filter-terms:
      summary: Filter with Terms
      value:
        indices:
        - identities
        query:
          query: attributes.city:London
        filters:
          source.name:
            type: TERMS
            terms:
            - HR Employees
            - Corporate Active Directory
            exclude: true
          protected:
            type: TERMS
            terms:
            - "true"
    accessProfiles:
      summary: A collection of AccessProfiles
      value:
      - id: 2c9180825a6c1adc015a71c9023f0818
        name: Cloud Eng
        _type: accessprofile
        description: Cloud Eng
        created: 2017-02-24T20:21:23.145Z
        modified: 2019-05-24T20:36:04.312Z
        synced: 2020-02-18T05:30:20.414Z
        enabled: true
        requestable: true
        requestCommentsRequired: false
        owner:
          id: ff8081815757d36a015757d42e56031e
          name: SailPoint Support
          type: IDENTITY
          email: cloud-support@sailpoint.com
        source:
          id: ff8081815757d4fb0157588f3d9d008f
          name: Employees
        entitlements:
        - id: 2c918084575812550157589064f33b89
          name: "CN=Cloud Engineering,DC=sailpoint,DC=COM"
          description: mull
          attribute: memberOf
          value: "CN=Cloud Engineering,DC=sailpoint,DC=COM"
        entitlementCount: 1
        tags:
        - TAG_1
        - TAG_2
    entitlements:
      summary: A collection of Entitlements
      value:
      - id: 2c9180946ed0c43d016eec1a80892fbd
        name: entitlement.aa415ae7
        _type: entitlement
        description: "null"
        attribute: groups
        value: entitlement.aa415ae7
        modified: 2019-12-09T19:19:50.154Z
        synced: 2020-02-19T04:30:32.906Z
        displayName: entitlement.aa415ae7
        source:
          id: 2c91808b6e9e6fb8016eec1a2b6f7b5f
          name: ODS-HR-Employees
        privileged: false
        identityCount: 68
        tags:
        - TAG_1
        - TAG_2
    events:
      summary: A collection of Events
      value:
      - id: e092842f-c904-4b59-aac8-2544abeeef4b
        name: Update Task Schedule Passed
        _type: event
        created: 2020-02-17T16:23:18.327Z
        synced: 2020-02-17T16:23:18.388Z
        action: TASK_SCHEDULE_UPDATE_PASSED
        type: SYSTEM_CONFIG
        actor:
          name: MantisTaskScheduler
        target:
          name: Perform provisioning activity search delete synchronization
        stack: tpe
        trackingNumber: c6b98bc39ece48b080826d16c76b166c
        ipAddress: 207.189.160.158
        details: "null"
        attributes:
          sourceName: SailPoint
        objects:
        - TASK
        - SCHEDULE
        operation: UPDATE
        status: PASSED
        technicalName: TASK_SCHEDULE_UPDATE_PASSED
    identities:
      summary: A collection of Identities
      value:
      - id: 2c9180865c45e7e3015c46c434a80622
        name: ad.admin
        _type: identity
        firstName: AD
        lastName: Admin
        displayName: AD Admin
        email: SLPT.CLOUD.SAILPOINT.TEST+AD-ADMIN@GMAIL.COM
        created: 2018-08-22T19:54:54.302Z
        modified: 2018-08-22T19:54:54.302Z
        synced: 2018-08-22T19:54:54.302Z
        phone: 512-942-7578
        inactive: false
        protected: false
        status: UNREGISTERED
        employeeNumber: O349804
        manager: null
        isManager: false
        identityProfile:
          id: 2c918085605c8d0601606f357cb231e6
          name: E2E AD
        source:
          id: 2c9180855c45b230015c46c19b9c0202
          name: EndToEnd-ADSource
        attributes:
          uid: ad.admin
          firstname: AD
          cloudAuthoritativeSource: 2c9180855c45b230015c46c19b9c0202
          cloudStatus: UNREGISTERED
          iplanet-am-user-alias-list: null
          displayName: AD Admin
          internalCloudStatus: UNREGISTERED
          workPhone: 512-942-7578
          email: SLPT.CLOUD.SAILPOINT.TEST+AD-ADMIN@GMAIL.COM
          lastname: Admin
        processingState: null
        processingDetails: null
        accounts:
        - id: 2c9180865c45e7e3015c46c434a80623
          name: ad.admin
          accountId: "CN=AD Admin,OU=slpt-automation,DC=TestAutomationAD,DC=local"
          source:
            id: 2c9180855c45b230015c46c19b9c0202
            name: EndToEnd-ADSource
            type: Active Directory - Direct
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          passwordLastSet: 2018-08-22T19:54:54.302Z
          entitlementAttributes:
            memberOf:
            - "CN=Group Policy Creator Owners,CN=Users,DC=TestAutomationAD,DC=local"
            - "CN=Domain Guests,CN=Users,DC=TestAutomationAD,DC=local"
            - "CN=Domain Admins,CN=Users,DC=TestAutomationAD,DC=local"
            - "CN=Enterprise Admins,CN=Users,DC=TestAutomationAD,DC=local"
            - "CN=Schema Admins,CN=Users,DC=TestAutomationAD,DC=local"
            - "CN=Guests,CN=Builtin,DC=TestAutomationAD,DC=local"
            - "CN=Administrators,CN=Builtin,DC=TestAutomationAD,DC=local"
          created: 2018-08-22T19:54:54.302Z
        - id: 2c918083606d670c01606f35a30a0349
          name: ad.admin
          accountId: ad.admin
          source:
            id: ff8081815c46b85b015c46b90c7c02a6
            name: IdentityNow
            type: IdentityNowConnector
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          passwordLastSet: null
          entitlementAttributes: null
          created: 2018-08-22T19:54:54.302Z
        accountCount: 2
        apps:
        - id: "22751"
          name: ADP Workforce Now
          source:
            id: 2c9180855c45b230015c46e2f6a8026a
            name: Corporate Active Directory
          account:
            id: 2c9180865c45efa4015c470be0de1606
            accountId: "CN=Bob Wilson,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
        appCount: 1
        access:
        - id: 2c918083634bc6cb01639808d40270ba
          name: "test [AccessProfile-1527264105448]"
          displayName: test
          type: ACCESS_PROFILE
          description: test
          source:
            id: 2c9180855c45b230015c46c19b9c0202
            name: EndToEnd-ADSource
          owner:
            id: 2c9180865c45e7e3015c46c434a80622
            name: ad.admin
            displayName: AD Admin
        - id: 2c9180865c45e7e3015c46c457c50755
          name: Administrators
          displayName: Administrators
          type: ENTITLEMENT
          description: null
          source:
            id: 2c9180855c45b230015c46c19b9c0202
            name: EndToEnd-ADSource
          privileged: false
          attribute: memberOf
          value: "CN=Administrators,CN=Builtin,DC=TestAutomationAD,DC=local"
          standalone: false
        - id: 2c9180865decdaa5015e06598b293108
          name: "test [cloudRole-1503345085223]"
          displayName: test
          type: ROLE
          description: test
          owner:
            id: 2c9180865c45e7e3015c46c5030707a0
            name: will.albin
            displayName: Albin Will
          disabled: false
        accessCount: 3
        accessProfileCount: 1
        entitlementCount: 1
        roleCount: 1
        tags:
        - TAG_1
        - TAG_2
    roles:
      summary: A collection of Roles
      value:
      - id: 2c91808c6faadea6016fb4f2bc69077b
        name: IT Role
        _type: role
        description: IT role
        created: 2020-01-17T19:20:15.040Z
        modified: null
        synced: 2020-02-18T05:30:20.145Z
        enabled: true
        requestable: false
        requestCommentsRequired: false
        owner:
          id: 2c9180a46faadee4016fb4e018c20639
          name: Cloud Support
          type: IDENTITY
          email: thomas.edison@acme-solar.com
        accessProfiles:
        - id: 2c91809c6faade77016fb4f0b63407ae
          name: Admin Access
        accessProfileCount: 1
        tags:
        - TAG_1
        - TAG_2
    metricAggregation:
      summary: MetricAggregation
      value:
        indices:
        - aggregations
        aggregationType: SAILPOINT
        aggregations:
          metric:
            name: How Many Locations
            type: UNIQUE_COUNT
            field: attributes.city
    metricAggregation-dsl:
      summary: MetricAggregation using DSL
      value:
        indices:
        - aggregations
        aggregationType: DSL
        aggregationsDsl:
          How Many Locations:
            cardinality:
              field: attributes.city.exact
    bucketAggregation:
      summary: BucketAggregation
      value:
        indices:
        - aggregations
        aggregationType: SAILPOINT
        aggregations:
          bucket:
            name: Identity Locations
            type: TERMS
            field: attributes.city
    bucketAggregation-dsl:
      summary: BucketAggregation using DSL
      value:
        indices:
        - aggregations
        aggregationType: DSL
        aggregationsDsl:
          Identity Locations:
            terms:
              field: attributes.city.exact
    nestedAggregation-bucketAggregation:
      summary: NestedAggregation with BucketAggregation
      value:
        indices:
        - aggregations
        aggregationType: SAILPOINT
        aggregations:
          nested:
            name: Access
            field: access
            type: TERMS
          bucket:
            name: Access Source Name
            type: TERMS
            field: access.source.name
    nestedAggregation-bucketAggregation-dsl:
      summary: NestedAggregation with BucketAggregation using DSL
      value:
        indices:
        - aggregations
        aggregationType: DSL
        aggregationsDsl:
          access:
            nested:
              path: access
            aggs:
              Access Source Name:
                terms:
                  field: access.source.name.exact
    nestedAggregation-filterAggregation-bucketAggregation:
      summary: NestedAggregation with FilterAggregation and BucketAggregation
      value:
        indices:
        - aggregations
        aggregationType: SAILPOINT
        aggregations:
          nested:
            name: Access
            field: access
            type: TERMS
          filter:
            name: Entitlements
            field: access.type
            value: ENTITLEMENT
          bucket:
            name: Access Name
            type: TERMS
            field: access.name
    nestedAggregation-filterAggregation-bucketAggregation-dsl:
      summary: NestedAggregation with FilterAggregation and BucketAggregation using
        DSL
      value:
        indices:
        - aggregations
        aggregationType: DSL
        aggregationsDsl:
          access:
            nested:
              path: access
            aggs:
              Entitlements:
                filter:
                  term:
                    access.type: ENTITLEMENT
                aggs:
                  Access Name:
                    terms:
                      field: access.name.exact
    bucketAggregation-subAggregation:
      summary: BucketAggregation with SubAggregation
      value:
        indices:
        - aggregations
        aggregationType: SAILPOINT
        aggregations:
          bucket:
            name: Identity Department
            type: TERMS
            field: attributes.department
          subAggregation:
            bucket:
              name: Identity Locations
              type: TERMS
              field: attributes.city
    bucketAggregation-subAggregation-dsl:
      summary: BucketAggregation with SubAggregation using DSL
      value:
        indices:
        - aggregations
        aggregationType: DSL
        aggregationsDsl:
          Identity Department:
            terms:
              field: attributes.department.exact
            aggs:
              Identity Locations:
                terms:
                  field: attributes.city.exact
    accessProfile:
      summary: AccessProfile
      value:
        id: 2c9180825a6c1adc015a71c9023f0818
        name: Cloud Eng
        _type: accessprofile
        description: Cloud Eng
        created: 2017-02-24T20:21:23.145Z
        modified: 2019-05-24T20:36:04.312Z
        synced: 2020-02-18T05:30:20.414Z
        enabled: true
        requestable: true
        requestCommentsRequired: false
        owner:
          id: ff8081815757d36a015757d42e56031e
          name: SailPoint Support
          type: IDENTITY
          email: cloud-support@sailpoint.com
        source:
          id: ff8081815757d4fb0157588f3d9d008f
          name: Employees
        entitlements:
        - id: 2c918084575812550157589064f33b89
          name: "CN=Cloud Engineering,DC=sailpoint,DC=COM"
          description: mull
          attribute: memberOf
          value: "CN=Cloud Engineering,DC=sailpoint,DC=COM"
        entitlementCount: 1
        tags:
        - TAG_1
        - TAG_2
    entitlement:
      summary: Entitlement
      value:
        id: 2c9180946ed0c43d016eec1a80892fbd
        name: entitlement.aa415ae7
        _type: entitlement
        description: "null"
        attribute: groups
        value: entitlement.aa415ae7
        modified: 2019-12-09T19:19:50.154Z
        synced: 2020-02-19T04:30:32.906Z
        displayName: entitlement.aa415ae7
        source:
          id: 2c91808b6e9e6fb8016eec1a2b6f7b5f
          name: ODS-HR-Employees
        privileged: false
        identityCount: 68
        tags:
        - TAG_1
        - TAG_2
    event:
      summary: Event
      value:
        id: e092842f-c904-4b59-aac8-2544abeeef4b
        name: Update Task Schedule Passed
        _type: event
        created: 2020-02-17T16:23:18.327Z
        synced: 2020-02-17T16:23:18.388Z
        action: TASK_SCHEDULE_UPDATE_PASSED
        type: SYSTEM_CONFIG
        actor:
          name: MantisTaskScheduler
        target:
          name: Perform provisioning activity search delete synchronization
        stack: tpe
        trackingNumber: c6b98bc39ece48b080826d16c76b166c
        ipAddress: 207.189.160.158
        details: "null"
        attributes:
          sourceName: SailPoint
        objects:
        - TASK
        - SCHEDULE
        operation: UPDATE
        status: PASSED
        technicalName: TASK_SCHEDULE_UPDATE_PASSED
    identity:
      summary: Identity
      value:
        id: 2c9180865c45e7e3015c46c434a80622
        name: ad.admin
        _type: identity
        firstName: AD
        lastName: Admin
        displayName: AD Admin
        email: SLPT.CLOUD.SAILPOINT.TEST+AD-ADMIN@GMAIL.COM
        created: 2018-08-22T19:54:54.302Z
        modified: 2018-08-22T19:54:54.302Z
        synced: 2018-08-22T19:54:54.302Z
        phone: 512-942-7578
        inactive: false
        protected: false
        status: UNREGISTERED
        employeeNumber: O349804
        manager: null
        isManager: false
        identityProfile:
          id: 2c918085605c8d0601606f357cb231e6
          name: E2E AD
        source:
          id: 2c9180855c45b230015c46c19b9c0202
          name: EndToEnd-ADSource
        attributes:
          uid: ad.admin
          firstname: AD
          cloudAuthoritativeSource: 2c9180855c45b230015c46c19b9c0202
          cloudStatus: UNREGISTERED
          iplanet-am-user-alias-list: null
          displayName: AD Admin
          internalCloudStatus: UNREGISTERED
          workPhone: 512-942-7578
          email: SLPT.CLOUD.SAILPOINT.TEST+AD-ADMIN@GMAIL.COM
          lastname: Admin
        processingState: null
        processingDetails: null
        accounts:
        - id: 2c9180865c45e7e3015c46c434a80623
          name: ad.admin
          accountId: "CN=AD Admin,OU=slpt-automation,DC=TestAutomationAD,DC=local"
          source:
            id: 2c9180855c45b230015c46c19b9c0202
            name: EndToEnd-ADSource
            type: Active Directory - Direct
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          passwordLastSet: 2018-08-22T19:54:54.302Z
          entitlementAttributes:
            memberOf:
            - "CN=Group Policy Creator Owners,CN=Users,DC=TestAutomationAD,DC=local"
            - "CN=Domain Guests,CN=Users,DC=TestAutomationAD,DC=local"
            - "CN=Domain Admins,CN=Users,DC=TestAutomationAD,DC=local"
            - "CN=Enterprise Admins,CN=Users,DC=TestAutomationAD,DC=local"
            - "CN=Schema Admins,CN=Users,DC=TestAutomationAD,DC=local"
            - "CN=Guests,CN=Builtin,DC=TestAutomationAD,DC=local"
            - "CN=Administrators,CN=Builtin,DC=TestAutomationAD,DC=local"
          created: 2018-08-22T19:54:54.302Z
        - id: 2c918083606d670c01606f35a30a0349
          name: ad.admin
          accountId: ad.admin
          source:
            id: ff8081815c46b85b015c46b90c7c02a6
            name: IdentityNow
            type: IdentityNowConnector
          disabled: false
          locked: false
          privileged: false
          manuallyCorrelated: false
          passwordLastSet: null
          entitlementAttributes: null
          created: 2018-08-22T19:54:54.302Z
        accountCount: 2
        apps:
        - id: "22751"
          name: ADP Workforce Now
          source:
            id: 2c9180855c45b230015c46e2f6a8026a
            name: Corporate Active Directory
          account:
            id: 2c9180865c45efa4015c470be0de1606
            accountId: "CN=Bob Wilson,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
        appCount: 1
        access:
        - id: 2c918083634bc6cb01639808d40270ba
          name: "test [AccessProfile-1527264105448]"
          displayName: test
          type: ACCESS_PROFILE
          description: test
          source:
            id: 2c9180855c45b230015c46c19b9c0202
            name: EndToEnd-ADSource
          owner:
            id: 2c9180865c45e7e3015c46c434a80622
            name: ad.admin
            displayName: AD Admin
        - id: 2c9180865c45e7e3015c46c457c50755
          name: Administrators
          displayName: Administrators
          type: ENTITLEMENT
          description: null
          source:
            id: 2c9180855c45b230015c46c19b9c0202
            name: EndToEnd-ADSource
          privileged: false
          attribute: memberOf
          value: "CN=Administrators,CN=Builtin,DC=TestAutomationAD,DC=local"
          standalone: false
        - id: 2c9180865decdaa5015e06598b293108
          name: "test [cloudRole-1503345085223]"
          displayName: test
          type: ROLE
          description: test
          owner:
            id: 2c9180865c45e7e3015c46c5030707a0
            name: will.albin
            displayName: Albin Will
          disabled: false
        accessCount: 3
        accessProfileCount: 1
        entitlementCount: 1
        roleCount: 1
        tags:
        - TAG_1
        - TAG_2
    role:
      summary: Role
      value:
        id: 2c91808c6faadea6016fb4f2bc69077b
        name: IT Role
        _type: role
        description: IT role
        created: 2020-01-17T19:20:15.040Z
        modified: null
        synced: 2020-02-18T05:30:20.145Z
        enabled: true
        requestable: false
        requestCommentsRequired: false
        owner:
          id: 2c9180a46faadee4016fb4e018c20639
          name: Cloud Support
          type: IDENTITY
          email: thomas.edison@acme-solar.com
        accessProfiles:
        - id: 2c91809c6faade77016fb4f0b63407ae
          name: Admin Access
        accessProfileCount: 1
        tags:
        - TAG_1
        - TAG_2
  parameters:
    limit:
      description: |-
        Max number of results to return.
        See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
      example: 250
      in: query
      name: limit
      required: false
      schema:
        default: 250
        format: int32
        maximum: 250
        minimum: 0
        type: integer
    offset:
      description: |-
        Offset into the full result set. Usually specified with *limit* to paginate through the results.
        See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
      example: 0
      in: query
      name: offset
      required: false
      schema:
        default: 0
        format: int32
        minimum: 0
        type: integer
    count:
      description: |-
        If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

        Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

        See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
      example: true
      in: query
      name: count
      required: false
      schema:
        default: false
        type: boolean
    id:
      description: ID of the requested document.
      example: 2c91808568c529c60168cca6f90c1313
      in: path
      name: id
      required: true
      schema:
        type: string
    index:
      description: |
        The index from which to fetch the specified document.

        The currently supported index names are: *accessprofiles*, *accountactivities*, *accounts*, *aggregations*, *entitlements*, *events*, *identities*, and *roles*.
      example: accounts
      in: path
      name: index
      required: true
      schema:
        type: string
  responses:
    "202":
      content:
        application/json:
          schema:
            type: object
      description: Accepted - Returned if the request was successfully accepted into
        the system.
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
      description: Client Error - Returned if the request body is invalid.
    "401":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAccessRequest_401_response'
      description: "Unauthorized - Returned if there is no authorization header, or\
        \ if the JWT token is expired."
    "403":
      content:
        application/json:
          examples:
            "403":
              summary: An example of a 403 response object
              value:
                detailCode: 403 Forbidden
                trackingId: b21b1f7ce4da4d639f2c62a57171b427
                messages:
                - locale: en-US
                  localeOrigin: DEFAULT
                  text: The server understood the request but refuses to authorize
                    it.
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
      description: "Forbidden - Returned if the user you are running as, doesn't have\
        \ access to this end-point."
    "429":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createAccessRequest_429_response'
      description: Too Many Requests - Returned in response to too many requests in
        a given period of time - rate limited. The Retry-After header in the response
        includes how long to wait before trying again.
    "500":
      content:
        application/json:
          examples:
            "500":
              summary: An example of a 500 response object
              value:
                detailCode: 500.0 Internal Fault
                trackingId: b21b1f7ce4da4d639f2c62a57171b427
                messages:
                - locale: en-US
                  localeOrigin: DEFAULT
                  text: An internal fault occurred.
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
      description: Internal Server Error - Returned if there is an unexpected error.
    "404":
      content:
        application/json:
          examples:
            "404":
              summary: An example of a 404 response object
              value:
                detailCode: 404 Not found
                trackingId: b21b1f7ce4da4d639f2c62a57171b427
                messages:
                - locale: en-US
                  localeOrigin: DEFAULT
                  text: The server did not find a current representation for the target
                    resource.
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
      description: Not Found - returned if the request URL refers to a resource or
        object that does not exist
    "204":
      description: No content - indicates the request was successful but there is
        no content to be returned in the response.
  schemas:
    AccessRequest:
      example:
        requestedFor:
        - 2c918084660f45d6016617daa9210584
        - 2c918084660f45d6016617daa9210584
        clientMetadata:
          requestedAppId: 2c91808f7892918f0178b78da4a305a1
          requestedAppName: test-app
        requestType: GRANT_ACCESS
        requestedItems:
        - clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          removeDate: 2020-07-11T21:23:15Z
          comment: Requesting access profile for John Doe
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
        - clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          removeDate: 2020-07-11T21:23:15Z
          comment: Requesting access profile for John Doe
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
      properties:
        requestedFor:
          description: "A list of Identity IDs for whom the Access is requested. If\
            \ it's a Revoke request, there can only be one Identity ID."
          items:
            example: 2c918084660f45d6016617daa9210584
            type: string
          type: array
        requestType:
          $ref: '#/components/schemas/AccessRequestType'
        requestedItems:
          items:
            $ref: '#/components/schemas/AccessRequestItem'
          type: array
        clientMetadata:
          additionalProperties:
            example: "{requestedAppId=2c91808f7892918f0178b78da4a305a1, requestedAppName=test-app}"
            type: string
          description: Arbitrary key-value pairs. They will never be processed by
            the IdentityNow system but will be returned on associated APIs such as
            /account-activities.
          example:
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
            requestedAppName: test-app
          type: object
      required:
      - requestedFor
      - requestedItems
      type: object
    AccessRequestItem:
      example:
        clientMetadata:
          requestedAppName: test-app
          requestedAppId: 2c91808f7892918f0178b78da4a305a1
        removeDate: 2020-07-11T21:23:15Z
        comment: Requesting access profile for John Doe
        id: 2c9180835d2e5168015d32f890ca1581
        type: ACCESS_PROFILE
      properties:
        type:
          description: The type of the item being requested.
          enum:
          - ACCESS_PROFILE
          - ROLE
          - ENTITLEMENT
          example: ACCESS_PROFILE
          type: string
        id:
          description: "ID of Role, Access Profile or Entitlement being requested."
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        comment:
          description: |
            Comment provided by requester.
            * Comment is required when the request is of type Revoke Access.
          example: Requesting access profile for John Doe
          type: string
        clientMetadata:
          additionalProperties:
            example: "{requestedAppId=2c91808f7892918f0178b78da4a305a1, requestedAppName=test-app}"
            type: string
          description: Arbitrary key-value pairs. They will never be processed by
            the IdentityNow system but will be returned on associated APIs such as
            /account-activities and /access-request-status.
          example:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          type: object
        removeDate:
          description: |
            The date the role or access profile is no longer assigned to the specified identity.
            * Specify a date in the future.
            * The current SLA for the deprovisioning is 24 hours.
            * This date can be modified to either extend or decrease the duration of access item assignments for the specified identity.
            * Currently it is not supported for entitlements.
          example: 2020-07-11T21:23:15Z
          format: date-time
          type: string
      required:
      - id
      - type
      type: object
    AccessProfileDocument:
      allOf:
      - $ref: '#/components/schemas/BaseDocument'
      - $ref: '#/components/schemas/BaseAccess'
      - $ref: '#/components/schemas/AccessProfileDocument_allOf'
      description: 'This is more of a complete representation of an access profile.  '
    AccessProfileSummary:
      allOf:
      - $ref: '#/components/schemas/Access'
      - $ref: '#/components/schemas/AccessProfileSummary_allOf'
      description: This is a summary representation of an access profile.
    AccessReviewReassignment:
      example:
        reason: reassigned for some reason
        reassignTo: ef38f94347e94562b5bb8424a56397d8
        reassign:
        - id: ef38f94347e94562b5bb8424a56397d8
          type: ITEM
        - id: ef38f94347e94562b5bb8424a56397d8
          type: ITEM
      properties:
        reassign:
          items:
            $ref: '#/components/schemas/ReassignReference'
          type: array
        reassignTo:
          description: The ID of the identity to which the certification is reassigned
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        reason:
          description: The reason comment for why the reassign was made
          example: reassigned for some reason
          type: string
      required:
      - reason
      - reassign
      - reassignTo
      type: object
    Account:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - $ref: '#/components/schemas/Account_allOf'
    AccountActivity:
      example:
        clientMetadata:
          customKey1: custom value 1
          customKey2: custom value 2
        created: 2017-07-11T18:45:37.098Z
        warnings:
        - "Some warning, another warning"
        executionStatus: COMPLETED
        completed: 2018-10-19T13:49:37.385Z
        type: appRequest
        targetIdentitySummary:
          identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
          name: SailPoint Services
          id: ff80818155fe8c080155fe8d925b0316
          completed: true
        name: 2c9180835d2e5168015d32f890ca1581
        requesterIdentitySummary:
          identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
          name: SailPoint Services
          id: ff80818155fe8c080155fe8d925b0316
          completed: true
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
        completionStatus: SUCCESS
        items:
        - approvalStatus: FINISHED
          reviewerComment:
            date: 2017-07-11T18:45:37.098Z
            commenterName: Adam Kennedy
            body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
              erat.
            commenterId: 2c918084660f45d6016617daa9210584
          sourceId: 2c91808363ef85290164000587130c0c
          clientMetadata:
            customKey1: custom value 1
            customKey2: custom value 2
          removeDate: 2020-07-11T00:00:00Z
          reviewerIdentitySummary:
            identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
            name: SailPoint Services
            id: ff80818155fe8c080155fe8d925b0316
            completed: true
          requesterComment:
            date: 2017-07-11T18:45:37.098Z
            commenterName: Adam Kennedy
            body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
              erat.
            commenterId: 2c918084660f45d6016617daa9210584
          accountRequestInfo:
            requestedObjectId: 2c91808563ef85690164001c31140c0c
            requestedObjectName: Treasury Analyst
            requestedObjectType: ACCESS_PROFILE
          nativeIdentity: Sandie.Camero
          requested: 2017-07-11T18:45:37.098Z
          provisioningStatus: PENDING
          name: 48c545831b264409a81befcabb0e3c5a
          id: 48c545831b264409a81befcabb0e3c5a
          attribute: detectedRoles
          operation: ADD
          value: "Treasury Analyst [AccessProfile-1529010191212]"
        - approvalStatus: FINISHED
          reviewerComment:
            date: 2017-07-11T18:45:37.098Z
            commenterName: Adam Kennedy
            body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
              erat.
            commenterId: 2c918084660f45d6016617daa9210584
          sourceId: 2c91808363ef85290164000587130c0c
          clientMetadata:
            customKey1: custom value 1
            customKey2: custom value 2
          removeDate: 2020-07-11T00:00:00Z
          reviewerIdentitySummary:
            identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
            name: SailPoint Services
            id: ff80818155fe8c080155fe8d925b0316
            completed: true
          requesterComment:
            date: 2017-07-11T18:45:37.098Z
            commenterName: Adam Kennedy
            body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
              erat.
            commenterId: 2c918084660f45d6016617daa9210584
          accountRequestInfo:
            requestedObjectId: 2c91808563ef85690164001c31140c0c
            requestedObjectName: Treasury Analyst
            requestedObjectType: ACCESS_PROFILE
          nativeIdentity: Sandie.Camero
          requested: 2017-07-11T18:45:37.098Z
          provisioningStatus: PENDING
          name: 48c545831b264409a81befcabb0e3c5a
          id: 48c545831b264409a81befcabb0e3c5a
          attribute: detectedRoles
          operation: ADD
          value: "Treasury Analyst [AccessProfile-1529010191212]"
        errors:
        - "sailpoint.connector.ConnectorException: java.lang.InterruptedException:\
          \ Timeout waiting for response to message 0 from client 57a4ab97-ab3f-4aef-9fe2-0eaf15c73d26\
          \ after 60 seconds."
      properties:
        id:
          description: Id of the account activity
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: The name of the activity
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        created:
          description: When the activity was first created
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: When the activity was last modified
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        completed:
          description: When the activity was completed
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          nullable: true
          type: string
        completionStatus:
          $ref: '#/components/schemas/CompletionStatus'
        type:
          description: |
            The type of action the activity performed.  Please see the following list of types.  This list may grow over time.

            - CloudAutomated
            - IdentityAttributeUpdate
            - appRequest
            - LifecycleStateChange
            - AccountStateUpdate
            - AccountAttributeUpdate
            - CloudPasswordRequest
            - Attribute Synchronization Refresh
            - Certification
            - Identity Refresh
            - Lifecycle Change Refresh


            [Learn more here](https://documentation.sailpoint.com/saas/help/search/searchable-fields.html#searching-account-activity-data).
          example: appRequest
          nullable: true
          type: string
        requesterIdentitySummary:
          $ref: '#/components/schemas/IdentitySummary'
        targetIdentitySummary:
          $ref: '#/components/schemas/IdentitySummary'
        errors:
          description: "A list of error messages, if any, that were encountered."
          example:
          - "sailpoint.connector.ConnectorException: java.lang.InterruptedException:\
            \ Timeout waiting for response to message 0 from client 57a4ab97-ab3f-4aef-9fe2-0eaf15c73d26\
            \ after 60 seconds."
          items:
            type: string
          nullable: true
          type: array
        warnings:
          description: "A list of warning messages, if any, that were encountered."
          example:
          - "Some warning, another warning"
          items:
            type: string
          nullable: true
          type: array
        items:
          description: Individual actions performed as part of this account activity
          items:
            $ref: '#/components/schemas/AccountActivityItem'
          type: array
        executionStatus:
          $ref: '#/components/schemas/ExecutionStatus'
        clientMetadata:
          additionalProperties:
            type: string
          description: "Arbitrary key-value pairs, if any were included in the corresponding\
            \ access request"
          example:
            customKey1: custom value 1
            customKey2: custom value 2
          nullable: true
          type: object
      type: object
    AccountActivitySearchedItem:
      allOf:
      - $ref: '#/components/schemas/BaseDocument'
      - $ref: '#/components/schemas/AccountActivitySearchedItem_allOf'
      description: AccountActivity
    AccountAttributes:
      example:
        attributes:
          city: Austin
          displayName: John Doe
          userName: jdoe
          sAMAccountName: jDoe
          mail: john.doe@sailpoint.com
      properties:
        attributes:
          additionalProperties: true
          description: The schema attribute values for the account
          example:
            city: Austin
            displayName: John Doe
            userName: jdoe
            sAMAccountName: jDoe
            mail: john.doe@sailpoint.com
          type: object
      required:
      - attributes
      type: object
    AccountDocument:
      allOf:
      - $ref: '#/components/schemas/BaseDocument'
      - $ref: '#/components/schemas/BaseAccount'
      - $ref: '#/components/schemas/AccountDocument_allOf'
      description: Account
    AccountsAsyncResult:
      description: Accounts async response containing details on started async process
      example:
        id: 2c91808474683da6017468693c260195
      properties:
        id:
          description: id of the task
          example: 2c91808474683da6017468693c260195
          type: string
      required:
      - id
      type: object
    AccountToggleRequest:
      description: Request used for account enable/disable
      example:
        forceProvisioning: false
        externalVerificationId: 3f9180835d2e5168015d32f890ca1581
      properties:
        externalVerificationId:
          description: "If set, an external process validates that the user wants\
            \ to proceed with this request."
          example: 3f9180835d2e5168015d32f890ca1581
          type: string
        forceProvisioning:
          description: "If set, provisioning updates the account attribute at the\
            \ source.   This option is used when the account is not synced to ensure\
            \ the attribute is updated. Providing 'true' for an unlocked account will\
            \ add and process 'Unlock' operation by the workflow."
          example: false
          type: boolean
      type: object
    AccountUnlockRequest:
      description: Request used for account unlock
      example:
        forceProvisioning: false
        externalVerificationId: 3f9180835d2e5168015d32f890ca1581
        unlockIDNAccount: false
      properties:
        externalVerificationId:
          description: "If set, an external process validates that the user wants\
            \ to proceed with this request."
          example: 3f9180835d2e5168015d32f890ca1581
          type: string
        unlockIDNAccount:
          description: "If set, the IDN account is unlocked after the workflow completes."
          example: false
          type: boolean
        forceProvisioning:
          description: "If set, provisioning updates the account attribute at the\
            \ source.   This option is used when the account is not synced to ensure\
            \ the attribute is updated."
          example: false
          type: boolean
      type: object
    Aggregation:
      allOf:
      - $ref: '#/components/schemas/BaseDocument'
      - $ref: '#/components/schemas/Aggregation_allOf'
      description: Aggregation
    ApprovalItems:
      example:
        application: Active Directory
        attributeValue: a@b.com
        attributeName: emailAddress
        id: 2c9180835d2e5168015d32f890ca1581
        state: FINISHED
        account: john.smith
        attributeOperation: update
      properties:
        id:
          description: ID of the approval item
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        account:
          description: The account referenced by the approval item
          example: john.smith
          type: string
        application:
          description: The name the application/source
          example: Active Directory
          type: string
        attributeName:
          description: The name of the attribute
          example: emailAddress
          type: string
        attributeOperation:
          description: The operation of the attribute
          example: update
          type: string
        attributeValue:
          description: The value of the attribute
          example: a@b.com
          type: string
        state:
          $ref: '#/components/schemas/WorkItemState'
      type: object
    Campaign:
      example:
        campaignType: MANAGER
        name: Campaign Name
        description: A description of the campaign
        id: ef38f94347e94562b5bb8424a56397d8
        type: CAMPAIGN
      properties:
        id:
          description: The unique ID of the campaign.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        name:
          description: The name of the campaign.
          example: Campaign Name
          type: string
        type:
          description: The type of object that is being referenced.
          enum:
          - CAMPAIGN
          example: CAMPAIGN
          type: string
        campaignType:
          description: The type of the campaign.
          enum:
          - MANAGER
          - SOURCE_OWNER
          - SEARCH
          example: MANAGER
          type: string
        description:
          description: The description of the campaign set by the admin who created
            it.
          example: A description of the campaign
          nullable: true
          type: string
      required:
      - campaignType
      - description
      - id
      - name
      - type
      type: object
    Certification:
      example:
        phase: ACTIVE
        reassignment:
          from:
            name: Certification Name
            id: ef38f94347e94562b5bb8424a56397d8
            reviewer:
              created: 2018-06-25T20:22:28.104Z
              name: Reviewer Name
              modified: 2018-06-25T20:22:28.104Z
              id: ef38f94347e94562b5bb8424a56397d8
              type: IDENTITY
              email: reviewer@test.com
            type: CERTIFICATION
          comment: Reassigned for a reason
        hasErrors: false
        identitiesTotal: 10
        created: 2018-06-25T20:22:28.104Z
        decisionsTotal: 40
        errorMessage: The certification has an error
        signed: 2018-10-19T13:49:37.385Z
        completed: true
        reviewer:
          created: 2018-06-25T20:22:28.104Z
          name: Reviewer Name
          modified: 2018-06-25T20:22:28.104Z
          id: ef38f94347e94562b5bb8424a56397d8
          type: IDENTITY
          email: reviewer@test.com
        identitiesCompleted: 5
        due: 2018-10-19T13:49:37.385Z
        name: "Source Owner Access Review for Employees [source]"
        campaign:
          campaignType: MANAGER
          name: Campaign Name
          description: A description of the campaign
          id: ef38f94347e94562b5bb8424a56397d8
          type: CAMPAIGN
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
        decisionsMade: 20
      properties:
        id:
          description: id of the certification
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: name of the certification
          example: "Source Owner Access Review for Employees [source]"
          type: string
        campaign:
          $ref: '#/components/schemas/CampaignReference'
        completed:
          description: Have all decisions been made?
          example: true
          type: boolean
        identitiesCompleted:
          description: The number of identities for whom all decisions have been made
            and are complete.
          example: 5
          format: int32
          type: integer
        identitiesTotal:
          description: "The total number of identities in the Certification, both\
            \ complete and incomplete."
          example: 10
          format: int32
          type: integer
        created:
          description: created date
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        modified:
          description: modified date
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        decisionsMade:
          description: The number of approve/revoke/acknowledge decisions that have
            been made.
          example: 20
          format: int32
          type: integer
        decisionsTotal:
          description: The total number of approve/revoke/acknowledge decisions.
          example: 40
          format: int32
          type: integer
        due:
          description: The due date of the certification.
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          type: string
        signed:
          description: The date the reviewer signed off on the Certification.
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          nullable: true
          type: string
        reviewer:
          $ref: '#/components/schemas/Reviewer'
        reassignment:
          $ref: '#/components/schemas/Reassignment'
        hasErrors:
          description: Identifies if the certification has an error
          example: false
          type: boolean
        errorMessage:
          description: Description of the certification error
          example: The certification has an error
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/CertificationPhase'
      type: object
    CertificationReference:
      example:
        name: Certification Name
        id: ef38f94347e94562b5bb8424a56397d8
        reviewer:
          created: 2018-06-25T20:22:28.104Z
          name: Reviewer Name
          modified: 2018-06-25T20:22:28.104Z
          id: ef38f94347e94562b5bb8424a56397d8
          type: IDENTITY
          email: reviewer@test.com
        type: CERTIFICATION
      properties:
        id:
          description: The id of the certification.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        name:
          description: The name of the certification.
          example: Certification Name
          type: string
        type:
          enum:
          - CERTIFICATION
          example: CERTIFICATION
          type: string
        reviewer:
          $ref: '#/components/schemas/Reviewer'
      type: object
    EntitlementDocument:
      allOf:
      - $ref: '#/components/schemas/BaseDocument'
      - $ref: '#/components/schemas/BaseEntitlement'
      - $ref: '#/components/schemas/EntitlementDocument_allOf'
      description: Entitlement
    EntitlementSummary:
      allOf:
      - $ref: '#/components/schemas/Access'
      - $ref: '#/components/schemas/EntitlementSummary_allOf'
      description: EntitlementReference
    Event:
      allOf:
      - $ref: '#/components/schemas/BaseDocument'
      - $ref: '#/components/schemas/Event_allOf'
      description: Event
    IdentityDocument:
      allOf:
      - $ref: '#/components/schemas/BaseDocument'
      - $ref: '#/components/schemas/DisplayReference'
      - $ref: '#/components/schemas/IdentityDocument_allOf'
      description: Identity
    IdentityProfile:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - $ref: '#/components/schemas/IdentityProfile_allOf'
    IdentityReferenceWithNameAndEmail:
      example:
        name: Alison Ferguso
        id: 5168015d32f890ca15812c9180835d2e
        type: IDENTITY
        email: alison.ferguso@identitysoon.com
      nullable: true
      properties:
        type:
          description: The type can only be IDENTITY. This is read-only
          example: IDENTITY
          type: string
        id:
          description: Identity id.
          example: 5168015d32f890ca15812c9180835d2e
          type: string
        name:
          description: Human-readable display name of identity. This is read-only
          example: Alison Ferguso
          type: string
        email:
          description: Email address of identity. This is read-only
          example: alison.ferguso@identitysoon.com
          type: string
      type: object
    ProvisioningConfig:
      description: Specification of a Service Desk integration provisioning configuration.
      properties:
        universalManager:
          description: "Specifies whether this configuration is used to manage provisioning\
            \ requests for all sources from the org.  If true, no managedResourceRefs\
            \ are allowed."
          example: true
          readOnly: true
          type: boolean
        managedResourceRefs:
          description: References to sources for the Service Desk integration template.  May
            only be specified if universalManager is false.
          example:
          - type: SOURCE
            id: 2c9180855d191c59015d291ceb051111
            name: My Source 1
          - type: SOURCE
            id: 2c9180855d191c59015d291ceb052222
            name: My Source 2
          items:
            $ref: '#/components/schemas/ProvisioningConfig_managedResourceRefs_inner'
          type: array
        planInitializerScript:
          $ref: '#/components/schemas/ProvisioningConfig_planInitializerScript'
      type: object
    ProvisioningPolicy:
      example:
        name: example provisioning policy for inactive identities
        description: this provisioning policy creates access based on an identity
          going inactive
        fields:
        - isRequired: false
          transform:
            type: rule
            attributes:
              name: Create Unique LDAP Attribute
          isMultiValued: false
          name: userName
          attributes:
            template: "${firstname}.${lastname}${uniqueCounter}"
            cloudMaxUniqueChecks: "50"
            cloudMaxSize: "20"
            cloudRequired: "true"
          type: string
        - isRequired: false
          transform:
            type: rule
            attributes:
              name: Create Unique LDAP Attribute
          isMultiValued: false
          name: userName
          attributes:
            template: "${firstname}.${lastname}${uniqueCounter}"
            cloudMaxUniqueChecks: "50"
            cloudMaxSize: "20"
            cloudRequired: "true"
          type: string
        usageType: CREATE
      properties:
        name:
          description: the provisioning policy name
          example: example provisioning policy for inactive identities
          type: string
        description:
          description: the description of the provisioning policy
          example: this provisioning policy creates access based on an identity going
            inactive
          type: string
        usageType:
          $ref: '#/components/schemas/UsageType'
        fields:
          items:
            $ref: '#/components/schemas/FieldDetailsDto'
          type: array
      required:
      - name
      type: object
    QueuedCheckConfigDetails:
      description: Configuration of maximum number days and interval for checking
        Service Desk integration queue status
      example:
        provisioningStatusCheckIntervalMinutes: "30"
        provisioningMaxStatusCheckDays: "2"
      properties:
        provisioningStatusCheckIntervalMinutes:
          description: interval in minutes between status checks
          example: "30"
          type: string
        provisioningMaxStatusCheckDays:
          description: maximum number of days to check
          example: "2"
          type: string
      required:
      - provisioningMaxStatusCheckDays
      - provisioningStatusCheckIntervalMinutes
      type: object
    Reassignment:
      example:
        from:
          name: Certification Name
          id: ef38f94347e94562b5bb8424a56397d8
          reviewer:
            created: 2018-06-25T20:22:28.104Z
            name: Reviewer Name
            modified: 2018-06-25T20:22:28.104Z
            id: ef38f94347e94562b5bb8424a56397d8
            type: IDENTITY
            email: reviewer@test.com
          type: CERTIFICATION
        comment: Reassigned for a reason
      nullable: true
      properties:
        from:
          $ref: '#/components/schemas/CertificationReference'
        comment:
          description: The comment entered when the Certification was reassigned
          example: Reassigned for a reason
          type: string
      type: object
    ReassignmentReference:
      example:
        id: ef38f94347e94562b5bb8424a56397d8
        type: ITEM
      properties:
        id:
          description: The ID of item or identity being reassigned.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        type:
          description: The type of item or identity being reassigned.
          enum:
          - TARGET_SUMMARY
          - ITEM
          - IDENTITY_SUMMARY
          example: ITEM
          type: string
      required:
      - id
      - type
      type: object
    RemediationItems:
      example:
        targetName: john.smith
        targetId: 2c9180835d2e5168015d32f890ca1581
        attributeValue: 512-555-1212
        targetDisplayName: emailAddress
        attributeName: phoneNumber
        id: 2c9180835d2e5168015d32f890ca1581
        applicationName: Active Directory
        attributeOperation: update
        nativeIdentity: jason.smith2
      properties:
        id:
          description: The ID of the certification
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        targetId:
          description: The ID of the certification target
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        targetName:
          description: The name of the certification target
          example: john.smith
          type: string
        targetDisplayName:
          description: The display name of the certification target
          example: emailAddress
          type: string
        applicationName:
          description: The name of the application/source
          example: Active Directory
          type: string
        attributeName:
          description: The name of the attribute being certified
          example: phoneNumber
          type: string
        attributeOperation:
          description: The operation of the certification on the attribute
          example: update
          type: string
        attributeValue:
          description: The value of the attribute being certified
          example: 512-555-1212
          type: string
        nativeIdentity:
          description: The native identity of the target
          example: jason.smith2
          type: string
      type: object
    RequestableObject:
      example:
        requestCommentsRequired: false
        ownerRef:
          name: Alison Ferguso
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
          email: alison.ferguso@identitysoon.com
        created: 2017-07-11T18:45:37.098Z
        name: Applied Research Access
        modified: 2018-06-25T20:22:28.104Z
        description: "Access to research information, lab results, and schematics."
        identityRequestId: identityRequestId
        id: 2c9180835d2e5168015d32f890ca1581
        type: ACCESS_PROFILE
        requestStatus: AVAILABLE
      properties:
        id:
          description: Id of the requestable object itself
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: Human-readable display name of the requestable object
          example: Applied Research Access
          type: string
        created:
          description: The time when the requestable object was created
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: The time when the requestable object was last modified
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        description:
          description: Description of the requestable object.
          example: "Access to research information, lab results, and schematics."
          type: string
        type:
          $ref: '#/components/schemas/RequestableObjectType'
        requestStatus:
          $ref: '#/components/schemas/RequestableObjectRequestStatus'
        identityRequestId:
          description: "If *requestStatus* is *PENDING*, indicates the id of the associated\
            \ account activity."
          nullable: true
          type: string
          example: null
        ownerRef:
          $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
        requestCommentsRequired:
          description: Whether the requester must provide comments when requesting
            the object.
          example: false
          type: boolean
      type: object
    RequestableObjectType:
      description: Enum represented the currently supported requestable object types.
        Additional values may be added in the future without notice.
      enum:
      - ACCESS_PROFILE
      - ROLE
      - ENTITLEMENT
      example: ACCESS_PROFILE
      type: string
    RequestableObjectRequestStatus:
      description: "Status indicating the ability of an access request for the object\
        \ to be made by or on behalf of the identity specified by *identity-id*. *AVAILABLE*\
        \ indicates the object is available to request. *PENDING* indicates the object\
        \ is unavailable because the identity has a pending request in flight. *ASSIGNED*\
        \ indicates the object is unavailable because the identity already has the\
        \ indicated role or access profile. If *identity-id* is not specified (allowed\
        \ only for admin users), then status will be *AVAILABLE* for all results."
      enum:
      - AVAILABLE
      - PENDING
      - ASSIGNED
      example: AVAILABLE
      type: string
    Reviewer:
      example:
        created: 2018-06-25T20:22:28.104Z
        name: Reviewer Name
        modified: 2018-06-25T20:22:28.104Z
        id: ef38f94347e94562b5bb8424a56397d8
        type: IDENTITY
        email: reviewer@test.com
      properties:
        id:
          description: The id of the reviewer.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        name:
          description: The name of the reviewer.
          example: Reviewer Name
          type: string
        email:
          description: The email of the reviewing identity.
          example: reviewer@test.com
          type: string
        type:
          description: The type of the reviewing identity.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        created:
          description: The created date of the reviewing identity.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: The modified date of the reviewing identity.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
      type: object
    RoleDocument:
      allOf:
      - $ref: '#/components/schemas/BaseDocument'
      - $ref: '#/components/schemas/BaseAccess'
      - $ref: '#/components/schemas/RoleDocument_allOf'
      description: Role
    RoleSummary:
      allOf:
      - $ref: '#/components/schemas/Access'
      - $ref: '#/components/schemas/RoleSummary_allOf'
      description: Role
    SearchDocument:
      type: object
    SavedSearch:
      allOf:
      - $ref: '#/components/schemas/SavedSearch_allOf'
      - $ref: '#/components/schemas/SavedSearchName'
      - $ref: '#/components/schemas/SavedSearchDetail'
      type: object
    Schedule:
      description: The schedule information.
      properties:
        type:
          $ref: '#/components/schemas/ScheduleType'
        days:
          $ref: '#/components/schemas/Schedule_days'
        hours:
          $ref: '#/components/schemas/Schedule_hours'
        expiration:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        timeZoneId:
          description: "The GMT formatted timezone the schedule will run in (ex. GMT-06:00).\
            \  If no timezone is specified, the org's default timezone is used."
          example: GMT-06:00
          nullable: true
          type: string
      required:
      - hours
      - type
      type: object
    ScheduledSearch:
      allOf:
      - $ref: '#/components/schemas/ScheduledSearch_allOf'
      - $ref: '#/components/schemas/ScheduledSearchName'
      - $ref: '#/components/schemas/SearchSchedule'
      required:
      - id
      - owner
      - ownerId
      type: object
    ServiceDeskIntegrationDto:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - $ref: '#/components/schemas/ServiceDeskIntegrationDto_allOf'
    ServiceDeskIntegrationTemplateDto:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - $ref: '#/components/schemas/ServiceDeskIntegrationTemplateDto_allOf'
    ServiceDeskIntegrationTemplateType:
      description: This represents a Service Desk Integration template type.
      example:
        name: aName
        scriptName: aScriptName
        type: aType
      properties:
        name:
          description: This is the name of the type.
          example: aName
          type: string
        type:
          description: This is the type value for the type.
          example: aType
          type: string
        scriptName:
          description: This is the scriptName attribute value for the type.
          example: aScriptName
          type: string
      required:
      - scriptName
      - type
      type: object
    Source:
      example:
        cluster:
          name: Corporate Cluster
          id: 2c9180866166b5b0016167c32ef31a66
          type: CLUSTER
        deleteThreshold: 10
        connectorId: active-directory
        description: This is the corporate directory.
        type: OpenLDAP - Direct
        connectorClass: sailpoint.connector.LDAPConnector
        connectionType: file
        features:
        - SYNC_PROVISIONING
        - MANAGER_LOOKUP
        - SEARCH
        - PROVISIONING
        - AUTHENTICATE
        - GROUP_PROVISIONING
        - PASSWORD
        passwordPolicies:
        - type: PASSWORD_POLICY
          id: 2c9180855d191c59015d291ceb053980
          name: Corporate Password Policy
        - type: PASSWORD_POLICY
          id: 2c9180855d191c59015d291ceb057777
          name: Vendor Password Policy
        id: 2c91808568c529c60168cca6f90c1324
        connectorImplementstionId: delimited-file
        managerCorrelationRule:
          name: Example Rule
          id: 2c918085708c274401708c2a8a760001
          type: RULE
        owner:
          name: MyName
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        managementWorkgroup:
          name: My Management Workgroup
          id: 2c91808568c529c60168cca6f90c2222
          type: GOVERNANCE_GROUP
        accountCorrelationRule:
          name: Example Rule
          id: 2c918085708c274401708c2a8a760001
          type: RULE
        authoritative: false
        connectorAttributes:
          healthCheckTimeout: 30
          authSearchAttributes:
          - cn
          - uid
          - mail
        managerCorrelationMapping:
          accountAttribute: manager
          identityAttribute: manager
        accountCorrelationConfig:
          name: "Directory [source-62867] Account Correlation"
          id: 2c9180855d191c59015d28583727245a
          type: ACCOUNT_CORRELATION_CONFIG
        connector: active-directory
        healthy: true
        schemas:
        - type: CONNECTOR_SCHEMA
          id: 2c9180835d191a86015d28455b4b232a
          name: account
        - type: CONNECTOR_SCHEMA
          id: 2c9180835d191a86015d28455b4b232b
          name: group
        connectorName: Active Directory
        beforeProvisioningRule:
          name: Example Rule
          id: 2c918085708c274401708c2a8a760001
          type: RULE
        status: SOURCE_STATE_HEALTHY
        since: 2021-09-28T15:48:29.3801666300Z
      properties:
        id:
          description: the id of the Source
          example: 2c91808568c529c60168cca6f90c1324
          readOnly: true
          type: string
        description:
          description: Human-readable description of the source
          example: This is the corporate directory.
          type: string
        owner:
          $ref: '#/components/schemas/Source_owner'
        cluster:
          $ref: '#/components/schemas/Source_cluster'
        accountCorrelationConfig:
          $ref: '#/components/schemas/Source_accountCorrelationConfig'
        accountCorrelationRule:
          $ref: '#/components/schemas/Source_accountCorrelationRule'
        managerCorrelationMapping:
          $ref: '#/components/schemas/ManagerCorrelationMapping'
        managerCorrelationRule:
          $ref: '#/components/schemas/Source_managerCorrelationRule'
        beforeProvisioningRule:
          $ref: '#/components/schemas/Source_beforeProvisioningRule'
        schemas:
          description: List of references to Schema objects
          example:
          - type: CONNECTOR_SCHEMA
            id: 2c9180835d191a86015d28455b4b232a
            name: account
          - type: CONNECTOR_SCHEMA
            id: 2c9180835d191a86015d28455b4b232b
            name: group
          items:
            $ref: '#/components/schemas/Source_schemas_inner'
          type: array
        passwordPolicies:
          description: List of references to the associated PasswordPolicy objects.
          example:
          - type: PASSWORD_POLICY
            id: 2c9180855d191c59015d291ceb053980
            name: Corporate Password Policy
          - type: PASSWORD_POLICY
            id: 2c9180855d191c59015d291ceb057777
            name: Vendor Password Policy
          items:
            $ref: '#/components/schemas/Source_passwordPolicies_inner'
          type: array
        features:
          description: Optional features that can be supported by a source.
          example:
          - SYNC_PROVISIONING
          - MANAGER_LOOKUP
          - SEARCH
          - PROVISIONING
          - AUTHENTICATE
          - GROUP_PROVISIONING
          - PASSWORD
          items:
            $ref: '#/components/schemas/SourceFeature'
          type: array
        type:
          description: "Specifies the type of system being managed e.g. Active Directory,\
            \ Workday, etc.."
          example: OpenLDAP - Direct
          type: string
        connector:
          description: Connector script name.
          example: active-directory
          type: string
        connectorClass:
          description: The fully qualified name of the Java class that implements
            the connector interface.
          example: sailpoint.connector.LDAPConnector
          type: string
        connectorAttributes:
          description: Connector specific configuration; will differ from type to
            type.
          example:
            healthCheckTimeout: 30
            authSearchAttributes:
            - cn
            - uid
            - mail
          type: object
        deleteThreshold:
          description: Number from 0 to 100 that specifies when to skip the delete
            phase.
          example: 10
          format: int32
          type: integer
        authoritative:
          description: When true indicates the source is referenced by an IdentityProfile.
          example: false
          type: boolean
        managementWorkgroup:
          $ref: '#/components/schemas/Source_managementWorkgroup'
        healthy:
          description: When true indicates a healthy source
          example: true
          type: boolean
        status:
          description: "A status identifier, giving specific information on why a\
            \ source is healthy or not"
          example: SOURCE_STATE_HEALTHY
          type: string
        since:
          description: Timestamp showing when a source health check was last performed
          example: 2021-09-28T15:48:29.3801666300Z
          type: string
        connectorId:
          description: The id of connector
          example: active-directory
          type: string
        connectorName:
          description: The name of the connector that was chosen on source creation
          example: Active Directory
          type: string
        connectionType:
          description: The type of connection (direct or file)
          example: file
          type: string
        connectorImplementstionId:
          description: The connector implementstion id
          example: delimited-file
          type: string
      type: object
    SourceHealthDto:
      description: Dto for source health data
      example:
        hostname: megapod-useast1-secret-hostname.sailpoint.com
        iqServiceVersion: iqVersion123
        pod: megapod-useast1
        org: denali-cjh
        name: Source1234
        isAuthoritative: false
        id: 2c91808568c529c60168cca6f90c1324
        type: OpenLDAP - Direct
        isCluster: false
        status: SOURCE_STATE_UNCHECKED_SOURCE
      properties:
        id:
          description: the id of the Source
          example: 2c91808568c529c60168cca6f90c1324
          readOnly: true
          type: string
        type:
          description: "Specifies the type of system being managed e.g. Active Directory,\
            \ Workday, etc.."
          example: OpenLDAP - Direct
          type: string
        name:
          description: the name of the source
          example: Source1234
          type: string
        org:
          description: source's org
          example: denali-cjh
          type: string
        isAuthoritative:
          description: Is the source authoritative
          example: false
          type: boolean
        isCluster:
          description: Is the source in a cluster
          example: false
          type: boolean
        hostname:
          description: source's hostname
          example: megapod-useast1-secret-hostname.sailpoint.com
          type: string
        pod:
          description: source's pod
          example: megapod-useast1
          type: string
        iqServiceVersion:
          description: The version of the iqService
          example: iqVersion123
          type: string
        status:
          description: connection test result
          enum:
          - SOURCE_STATE_ERROR_CLUSTER
          - SOURCE_STATE_ERROR_SOURCE
          - SOURCE_STATE_ERROR_VA
          - SOURCE_STATE_FAILURE_CLUSTER
          - SOURCE_STATE_FAILURE_SOURCE
          - SOURCE_STATE_HEALTHY
          - SOURCE_STATE_UNCHECKED_CLUSTER
          - SOURCE_STATE_UNCHECKED_CLUSTER_NO_SOURCES
          - SOURCE_STATE_UNCHECKED_SOURCE
          - SOURCE_STATE_UNCHECKED_SOURCE_NO_ACCOUNTS
          example: SOURCE_STATE_UNCHECKED_SOURCE
          type: string
      type: object
    Transform:
      description: The representation of an internally- or customer-defined transform.
      example:
        internal: false
        name: Timestamp To Date
        attributes: "{}"
        id: 2cd78adghjkja34jh2b1hkjhasuecd
        type: dateFormat
      properties:
        id:
          description: Unique ID of this transform
          example: 2cd78adghjkja34jh2b1hkjhasuecd
          readOnly: true
          type: string
        name:
          description: Unique name of this transform
          example: Timestamp To Date
          maxLength: 50
          minLength: 1
          type: string
        type:
          description: The type of transform operation
          enum:
          - accountAttribute
          - base64Decode
          - base64Encode
          - concat
          - conditional
          - dateCompare
          - dateFormat
          - dateMath
          - decomposeDiacriticalMarks
          - e164phone
          - firstValid
          - rule
          - identityAttribute
          - indexOf
          - iso3166
          - lastIndexOf
          - leftPad
          - lookup
          - lower
          - normalizeNames
          - randomAlphaNumeric
          - randomNumeric
          - reference
          - replaceAll
          - replace
          - rightPad
          - split
          - static
          - substring
          - trim
          - upper
          - usernameGenerator
          - uuid
          example: dateFormat
          externalDocs:
            description: Transform Operations
            url: https://developer.sailpoint.com/idn/docs/transforms/operations
          type: string
        attributes:
          description: Meta-data about the transform. Values in this list are specific
            to the type of transform to be executed.
          type: object
        internal:
          description: Indicates whether this is an internal SailPoint-created transform
            or a customer-created transform
          example: false
          readOnly: true
          type: boolean
      required:
      - attributes
      - name
      - type
      type: object
    WorkItems:
      example:
        requesterDisplayName: John Smith
        requesterId: 2c9180835d2e5168015d32f890ca1581
        created: 2017-07-11T18:45:37.098Z
        approvalItems:
          application: Active Directory
          attributeValue: a@b.com
          attributeName: emailAddress
          id: 2c9180835d2e5168015d32f890ca1581
          state: FINISHED
          account: john.smith
          attributeOperation: update
        description: Create account on source 'AD'
        completed: 2018-10-19T13:49:37.385Z
        ownerId: 2c9180835d2e5168015d32f890ca1581
        type: GENERIC
        numItems: 19
        ownerName: Jason Smith
        form:
          subtitle: Please select from the following
          name: AccountSelection Form
          id: 2c9180835d2e5168015d32f890ca1581
          title: Account Selection for John.Doe
          targetUser: Jane.Doe
          sections: null
        remediationItems:
          targetName: john.smith
          targetId: 2c9180835d2e5168015d32f890ca1581
          attributeValue: 512-555-1212
          targetDisplayName: emailAddress
          attributeName: phoneNumber
          id: 2c9180835d2e5168015d32f890ca1581
          applicationName: Active Directory
          attributeOperation: update
          nativeIdentity: jason.smith2
        name: Account Create
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
        state: FINISHED
        errors:
        - The work item ID that was specified was not found.
      properties:
        id:
          description: ID of the work item
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        requesterId:
          description: ID of the requester
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        requesterDisplayName:
          description: The displayname of the requester
          example: John Smith
          type: string
        ownerId:
          description: The ID of the owner
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        ownerName:
          description: The name of the owner
          example: Jason Smith
          type: string
        created:
          description: Time when the work item was created
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: Time when the work item was last updated
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        description:
          description: The description of the work item
          example: Create account on source 'AD'
          type: string
        state:
          $ref: '#/components/schemas/WorkItemState'
        type:
          $ref: '#/components/schemas/WorkItemType'
        remediationItems:
          $ref: '#/components/schemas/RemediationItemDetails'
        approvalItems:
          $ref: '#/components/schemas/ApprovalItemDetails'
        name:
          description: The work item name
          example: Account Create
          type: string
        completed:
          description: The time at which the work item completed
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          type: string
        numItems:
          description: The number of items in the work item
          example: 19
          format: int32
          type: integer
        form:
          $ref: '#/components/schemas/FormDetails'
        errors:
          description: An array of errors that ocurred during the work item
          example:
          - The work item ID that was specified was not found.
          items:
            type: string
          type: array
      type: object
    WorkItemsCount:
      example:
        count: 29
      properties:
        count:
          description: The count of work items
          example: 29
          type: integer
      type: object
    WorkItemsSummary:
      example:
        total: 30
        completed: 1
        open: 29
      properties:
        open:
          description: The count of open work items
          example: 29
          type: integer
        completed:
          description: The count of completed work items
          example: 1
          type: integer
        total:
          description: The count of total work items
          example: 30
          type: integer
      type: object
    ErrorResponseDto:
      properties:
        detailCode:
          description: Fine-grained error code providing more detail of the error.
          example: 400.1 Bad Request Content
          type: string
        trackingId:
          description: Unique tracking id for the error.
          example: e7eab60924f64aa284175b9fa3309599
          type: string
        messages:
          description: Generic localized reason for error
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
        causes:
          description: Plain-text descriptive reasons to provide additional detail
            to the text provided in the messages field
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
      type: object
    CancelAccessRequest:
      description: Request body payload for cancel access request endpoint.
      example:
        accountActivityId: 2c9180835d2e5168015d32f890ca1581
        comment: I requested this role by mistake.
      properties:
        accountActivityId:
          description: ID of the account activity object corresponding to the access
            request.
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        comment:
          description: Reason for cancelling the pending access request.
          example: I requested this role by mistake.
          type: string
      required:
      - accountActivityId
      - comment
      type: object
    AccessRequestConfig:
      example:
        requestOnBehalfOfConfig:
          allowRequestOnBehalfOfEmployeeByManager: true
          allowRequestOnBehalfOfAnyoneByAnyone: true
        approvalReminderAndEscalationConfig:
          fallbackApproverRef:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          maxReminders: 0
          daysUntilEscalation: 0
          daysBetweenReminders: 0
        autoApprovalEnabled: true
        entitlementRequestConfig:
          requestCommentsRequired: false
          deniedCommentsRequired: false
          allowEntitlementRequest: true
          grantRequestApprovalSchemes: "sourceOwner, manager, workgroup:2c918084660f45d6016617daa9210584"
        approvalsMustBeExternal: true
      properties:
        approvalsMustBeExternal:
          description: "If true, then approvals must be processed by external system."
          example: true
          type: boolean
        autoApprovalEnabled:
          description: "If true and requester and reviewer are the same, then automatically\
            \ approve the approval."
          example: true
          type: boolean
        requestOnBehalfOfConfig:
          $ref: '#/components/schemas/RequestOnBehalfOfConfig'
        approvalReminderAndEscalationConfig:
          $ref: '#/components/schemas/ApprovalReminderAndEscalationConfig'
        entitlementRequestConfig:
          $ref: '#/components/schemas/EntitlementRequestConfig'
      type: object
    RequestedItemStatus:
      example:
        requester:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        requestedFor:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        removeDate: 2019-10-23T00:00:00Z
        clientMetadata:
          key1: value1
          key2: value2
        approvalDetails:
        - errorMessages:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          removeDate: 2020-07-11T00:00:00Z
          originalOwner:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          scheme: MANAGER
          currentOwner:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          modified: 2019-08-23T18:52:57.398Z
          comment: I approve this request
          reviewedBy:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          forwarded: false
          status: PENDING
        - errorMessages:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          removeDate: 2020-07-11T00:00:00Z
          originalOwner:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          scheme: MANAGER
          currentOwner:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          modified: 2019-08-23T18:52:57.398Z
          comment: I approve this request
          reviewedBy:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          forwarded: false
          status: PENDING
        cancelable: true
        requestType: GRANT_ACCESS
        created: 2019-08-23T18:40:35.772Z
        requesterComment:
          author:
            name: Adam Kennedy
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          created: 2017-07-11T18:45:37.098Z
          comment: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat
        preApprovalTriggerDetails:
          decision: APPROVED
          comment: Access is Approved
          reviewer: John Doe
        description: This is the Engineering role that engineers are granted.
        type: ACCESS_PROFILE
        errorMessages:
        - null
        - null
        sodViolationContext:
          violationCheckResult:
            clientMetadata:
              requestedAppName: test-app
              requestedAppId: 2c91808f7892918f0178b78da4a305a1
            violationContexts:
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: William Wilson
                id: 2c91808568c529c60168cca6f90c1313
                type: IDENTITY
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: William Wilson
                id: 2c91808568c529c60168cca6f90c1313
                type: IDENTITY
            violatedPolicies:
            - name: William Wilson
              id: 2c91808568c529c60168cca6f90c1313
              type: IDENTITY
            - name: William Wilson
              id: 2c91808568c529c60168cca6f90c1313
              type: IDENTITY
            message:
              localeOrigin: DEFAULT
              text: The request was syntactically correct but its content is semantically
                invalid.
              locale: en-US
          state: SUCCESS
          uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
        cancelledRequestDetails:
          owner:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          modified: 2019-12-20T09:17:12.192Z
          comment: Nisl quis ipsum quam quisque condimentum nunc ut dolor nunc.
        accessRequestId: 2b838de9-db9b-abcf-e646-d4f274ad4238
        provisioningDetails:
          orderedSubPhaseReferences: manualWorkItemDetails
        accountActivityItemId: 2c9180926cbfbddd016cbfc7c3b10010
        name: AccessProfile1
        manualWorkItemDetails:
        - originalOwner:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          currentOwner:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          modified: 2019-08-23T18:52:57.398Z
          forwarded: true
          status: PENDING
        - originalOwner:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          currentOwner:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          modified: 2019-08-23T18:52:57.398Z
          forwarded: true
          status: PENDING
        modified: 2019-08-23T18:52:59.162Z
        state: EXECUTING
        accessRequestPhases:
        - result: SUCCESSFUL
          phaseReference: approvalDetails
          name: APPROVAL_PHASE
          started: 2020-07-11T00:00:00Z
          finished: 2020-07-12T00:00:00Z
          state: COMPLETED
        - result: SUCCESSFUL
          phaseReference: approvalDetails
          name: APPROVAL_PHASE
          started: 2020-07-11T00:00:00Z
          finished: 2020-07-12T00:00:00Z
          state: COMPLETED
      properties:
        name:
          description: Human-readable display name of the item being requested.
          example: AccessProfile1
          type: string
        type:
          description: Type of requested object.
          enum:
          - ACCESS_PROFILE
          - ROLE
          - ENTITLEMENT
          example: ACCESS_PROFILE
          type: string
        cancelledRequestDetails:
          $ref: '#/components/schemas/CancelledRequestDetails'
        errorMessages:
          description: "List of list of localized error messages, if any, encountered\
            \ during the approval/provisioning process."
          items:
            $ref: '#/components/schemas/ErrorMessageDtoList'
          nullable: true
          type: array
        state:
          $ref: '#/components/schemas/RequestedItemStatusRequestState'
        approvalDetails:
          description: Approval details for each item.
          items:
            $ref: '#/components/schemas/ApprovalStatusDto'
          type: array
        manualWorkItemDetails:
          description: Manual work items created for provisioning the item.
          items:
            $ref: '#/components/schemas/ManualWorkItemDetails'
          nullable: true
          type: array
        accountActivityItemId:
          description: Id of associated account activity item.
          example: 2c9180926cbfbddd016cbfc7c3b10010
          type: string
        requestType:
          $ref: '#/components/schemas/AccessRequestType'
        modified:
          description: When the request was last modified.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        created:
          description: When the request was created.
          example: 2019-08-23T18:40:35.772Z
          format: date-time
          type: string
        requester:
          $ref: '#/components/schemas/BaseReferenceDto'
        requestedFor:
          $ref: '#/components/schemas/BaseReferenceDto'
        requesterComment:
          $ref: '#/components/schemas/CommentDto'
        sodViolationContext:
          $ref: '#/components/schemas/SodViolationContextCheckCompleted'
        provisioningDetails:
          $ref: '#/components/schemas/ProvisioningDetails'
        preApprovalTriggerDetails:
          $ref: '#/components/schemas/PreApprovalTriggerDetails'
        accessRequestPhases:
          description: "A list of Phases that the Access Request has gone through\
            \ in order, to help determine the status of the request."
          items:
            $ref: '#/components/schemas/AccessRequestPhases'
          type: array
        description:
          description: Description associated to the requested object.
          example: This is the Engineering role that engineers are granted.
          type: string
        removeDate:
          description: When the role access is scheduled for removal.
          example: 2019-10-23T00:00:00Z
          format: date-time
          nullable: true
          type: string
        cancelable:
          description: True if the request can be canceled.
          example: true
          type: boolean
        accessRequestId:
          description: This is the account activity id.
          example: 2b838de9-db9b-abcf-e646-d4f274ad4238
          format: string
          type: string
        clientMetadata:
          additionalProperties:
            type: string
          description: "Arbitrary key-value pairs, if any were included in the corresponding\
            \ access request"
          example:
            key1: value1
            key2: value2
          nullable: true
          type: object
      type: object
    PendingApproval:
      example:
        requester:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        requestedFor:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        owner:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        removeDate: 2020-07-11T00:00:00Z
        requestType: GRANT_ACCESS
        commentRequiredWhenRejected: true
        created: 2017-07-11T18:45:37.098Z
        previousReviewersComments:
        - author:
            name: Adam Kennedy
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          created: 2017-07-11T18:45:37.098Z
          comment: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat
        - author:
            name: Adam Kennedy
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          created: 2017-07-11T18:45:37.098Z
          comment: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat
        requesterComment:
          author:
            name: Adam Kennedy
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          created: 2017-07-11T18:45:37.098Z
          comment: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat
        currentRemoveDate: 2020-07-11T00:00:00Z
        requestedObject:
          name: Applied Research Access
          description: "Access to research information, lab results, and schematics"
          id: 2c9180835d2e5168015d32f890ca1581
          type: ROLE
        sodViolationContext:
          violationCheckResult:
            clientMetadata:
              requestedAppName: test-app
              requestedAppId: 2c91808f7892918f0178b78da4a305a1
            violationContexts:
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: William Wilson
                id: 2c91808568c529c60168cca6f90c1313
                type: IDENTITY
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: William Wilson
                id: 2c91808568c529c60168cca6f90c1313
                type: IDENTITY
            violatedPolicies:
            - name: William Wilson
              id: 2c91808568c529c60168cca6f90c1313
              type: IDENTITY
            - name: William Wilson
              id: 2c91808568c529c60168cca6f90c1313
              type: IDENTITY
            message:
              localeOrigin: DEFAULT
              text: The request was syntactically correct but its content is semantically
                invalid.
              locale: en-US
          state: SUCCESS
          uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
        requestCreated: 2017-07-11T18:45:35.098Z
        actionInProcess: APPROVED
        name: aName
        modified: 2018-07-25T20:22:28.104Z
        id: id12345
        forwardHistory:
        - modified: 2019-08-23T18:52:57.398Z
          oldApproverName: frank.mir
          newApproverName: al.volta
          comment: Fusce id orci vel consectetur amet ipsum quam.
        - modified: 2019-08-23T18:52:57.398Z
          oldApproverName: frank.mir
          newApproverName: al.volta
          comment: Fusce id orci vel consectetur amet ipsum quam.
        removeDateUpdateRequested: true
      properties:
        id:
          description: The approval id.
          example: id12345
          type: string
        name:
          description: The name of the approval.
          example: aName
          type: string
        created:
          description: When the approval was created.
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: When the approval was modified last time.
          example: 2018-07-25T20:22:28.104Z
          format: date-time
          type: string
        requestCreated:
          description: When the access-request was created.
          example: 2017-07-11T18:45:35.098Z
          format: date-time
          type: string
        requestType:
          $ref: '#/components/schemas/AccessRequestType'
        requester:
          $ref: '#/components/schemas/BaseReferenceDto'
        requestedFor:
          $ref: '#/components/schemas/BaseReferenceDto'
        owner:
          $ref: '#/components/schemas/BaseReferenceDto'
        requestedObject:
          $ref: '#/components/schemas/RequestableObjectReference'
        requesterComment:
          $ref: '#/components/schemas/CommentDto'
        previousReviewersComments:
          description: The history of the previous reviewers comments.
          items:
            $ref: '#/components/schemas/CommentDto'
          type: array
        forwardHistory:
          description: The history of approval forward action.
          items:
            $ref: '#/components/schemas/ApprovalForwardHistory'
          type: array
        commentRequiredWhenRejected:
          description: When true the rejector has to provide comments when rejecting
          example: true
          type: boolean
        actionInProcess:
          $ref: '#/components/schemas/PendingApprovalAction'
        removeDate:
          description: The date the role or access profile is no longer assigned to
            the specified identity.
          example: 2020-07-11T00:00:00Z
          format: date-time
          type: string
        removeDateUpdateRequested:
          description: "If true, then the request is to change the remove date or\
            \ sunset date."
          example: true
          type: boolean
        currentRemoveDate:
          description: The remove date or sunset date that was assigned at the time
            of the request.
          example: 2020-07-11T00:00:00Z
          format: date-time
          type: string
        sodViolationContext:
          $ref: '#/components/schemas/SodViolationContextCheckCompleted'
      type: object
    CompletedApproval:
      example:
        requester:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        requestedFor:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        owner:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        reviewerComment:
          author:
            name: Adam Kennedy
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          created: 2017-07-11T18:45:37.098Z
          comment: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat
        removeDate: 2020-07-11T00:00:00Z
        requestType: GRANT_ACCESS
        commentRequiredWhenRejected: true
        created: 2017-07-11T18:45:37.098Z
        previousReviewersComments:
        - author:
            name: Adam Kennedy
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          created: 2017-07-11T18:45:37.098Z
          comment: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat
        - author:
            name: Adam Kennedy
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          created: 2017-07-11T18:45:37.098Z
          comment: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat
        requesterComment:
          author:
            name: Adam Kennedy
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          created: 2017-07-11T18:45:37.098Z
          comment: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat
        currentRemoveDate: 2020-07-11T00:00:00Z
        reviewedBy:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        requestedObject:
          name: Applied Research Access
          description: "Access to research information, lab results, and schematics"
          id: 2c9180835d2e5168015d32f890ca1581
          type: ROLE
        sodViolationContext:
          violationCheckResult:
            clientMetadata:
              requestedAppName: test-app
              requestedAppId: 2c91808f7892918f0178b78da4a305a1
            violationContexts:
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: William Wilson
                id: 2c91808568c529c60168cca6f90c1313
                type: IDENTITY
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: William Wilson
                id: 2c91808568c529c60168cca6f90c1313
                type: IDENTITY
            violatedPolicies:
            - name: William Wilson
              id: 2c91808568c529c60168cca6f90c1313
              type: IDENTITY
            - name: William Wilson
              id: 2c91808568c529c60168cca6f90c1313
              type: IDENTITY
            message:
              localeOrigin: DEFAULT
              text: The request was syntactically correct but its content is semantically
                invalid.
              locale: en-US
          state: SUCCESS
          uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
        requestCreated: 2017-07-11T18:45:35.098Z
        name: aName
        modified: 2018-07-25T20:22:28.104Z
        id: id12345
        forwardHistory:
        - modified: 2019-08-23T18:52:57.398Z
          oldApproverName: frank.mir
          newApproverName: al.volta
          comment: Fusce id orci vel consectetur amet ipsum quam.
        - modified: 2019-08-23T18:52:57.398Z
          oldApproverName: frank.mir
          newApproverName: al.volta
          comment: Fusce id orci vel consectetur amet ipsum quam.
        state: APPROVED
        removeDateUpdateRequested: true
      properties:
        id:
          description: The approval id.
          example: id12345
          type: string
        name:
          description: The name of the approval.
          example: aName
          type: string
        created:
          description: When the approval was created.
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: When the approval was modified last time.
          example: 2018-07-25T20:22:28.104Z
          format: date-time
          type: string
        requestCreated:
          description: When the access-request was created.
          example: 2017-07-11T18:45:35.098Z
          format: date-time
          type: string
        requestType:
          $ref: '#/components/schemas/AccessRequestType'
        requester:
          $ref: '#/components/schemas/BaseReferenceDto'
        requestedFor:
          $ref: '#/components/schemas/BaseReferenceDto'
        reviewedBy:
          $ref: '#/components/schemas/BaseReferenceDto'
        owner:
          $ref: '#/components/schemas/BaseReferenceDto'
        requestedObject:
          $ref: '#/components/schemas/RequestableObjectReference'
        requesterComment:
          $ref: '#/components/schemas/CommentDto'
        reviewerComment:
          $ref: '#/components/schemas/CommentDto'
        previousReviewersComments:
          description: The history of the previous reviewers comments.
          items:
            $ref: '#/components/schemas/CommentDto'
          type: array
        forwardHistory:
          description: The history of approval forward action.
          items:
            $ref: '#/components/schemas/ApprovalForwardHistory'
          type: array
        commentRequiredWhenRejected:
          description: When true the rejector has to provide comments when rejecting
          example: true
          type: boolean
        state:
          $ref: '#/components/schemas/CompletedApprovalState'
        removeDate:
          description: The date the role or access profile is no longer assigned to
            the specified identity.
          example: 2020-07-11T00:00:00Z
          format: date-time
          type: string
        removeDateUpdateRequested:
          description: "If true, then the request was to change the remove date or\
            \ sunset date."
          example: true
          type: boolean
        currentRemoveDate:
          description: The remove date or sunset date that was assigned at the time
            of the request.
          example: 2020-07-11T00:00:00Z
          format: date-time
          type: string
        sodViolationContext:
          $ref: '#/components/schemas/SodViolationContextCheckCompleted'
      type: object
    CommentDto:
      example:
        author:
          name: Adam Kennedy
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        created: 2017-07-11T18:45:37.098Z
        comment: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
          erat
      properties:
        comment:
          description: Content of the comment
          example: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat
          type: string
        author:
          $ref: '#/components/schemas/CommentDto_author'
        created:
          description: Date and time comment was created
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
      type: object
    ForwardApprovalDto:
      example:
        newOwnerId: 2c91808568c529c60168cca6f90c1314
        comment: 2c91808568c529c60168cca6f90c1313
      properties:
        newOwnerId:
          description: The Id of the new owner
          example: 2c91808568c529c60168cca6f90c1314
          maxLength: 255
          minLength: 1
          type: string
        comment:
          description: The comment provided by the forwarder
          example: 2c91808568c529c60168cca6f90c1313
          maxLength: 255
          minLength: 1
          type: string
      required:
      - comment
      - newOwnerId
      type: object
    ApprovalSummary:
      example:
        approved: 0
        rejected: 0
        pending: 0
      properties:
        pending:
          description: The number of pending access requests approvals.
          example: 0
          format: int32
          type: integer
        approved:
          description: The number of approved access requests approvals.
          example: 0
          format: int32
          type: integer
        rejected:
          description: The number of rejected access requests approvals.
          example: 0
          format: int32
          type: integer
      type: object
    AccountAttributesCreate:
      example:
        attributes:
          sourceId: 34bfcbe116c9407464af37acbaf7a4dc
          city: Austin
          displayName: John Doe
          userName: jdoe
          sAMAccountName: jDoe
          mail: john.doe@sailpoint.com
      properties:
        attributes:
          $ref: '#/components/schemas/AccountAttributesCreate_attributes'
      required:
      - attributes
      type: object
    JsonPatchOperation:
      description: "A JSONPatch Operation as defined by [RFC 6902 - JSON Patch](https://tools.ietf.org/html/rfc6902)"
      example:
        op: replace
        path: /description
        value: New description
      properties:
        op:
          description: The operation to be performed
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
          example: replace
          type: string
        path:
          description: A string JSON Pointer representing the target path to an element
            to be affected by the operation
          example: /description
          type: string
        value:
          $ref: '#/components/schemas/JsonPatchOperation_value'
      required:
      - op
      - path
      type: object
    EntitlementDto:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - $ref: '#/components/schemas/EntitlementDto_allOf'
    IdentityCertificationDto:
      example:
        phase: ACTIVE
        reassignment:
          from:
            name: Certification Name
            id: ef38f94347e94562b5bb8424a56397d8
            reviewer:
              created: 2018-06-25T20:22:28.104Z
              name: Reviewer Name
              modified: 2018-06-25T20:22:28.104Z
              id: ef38f94347e94562b5bb8424a56397d8
              type: IDENTITY
              email: reviewer@test.com
            type: CERTIFICATION
          comment: Reassigned for a reason
        hasErrors: false
        identitiesTotal: 10
        created: 2018-06-25T20:22:28.104Z
        decisionsTotal: 40
        errorMessage: The certification has an error
        signed: 2018-10-19T13:49:37.385Z
        completed: true
        reviewer:
          created: 2018-06-25T20:22:28.104Z
          name: Reviewer Name
          modified: 2018-06-25T20:22:28.104Z
          id: ef38f94347e94562b5bb8424a56397d8
          type: IDENTITY
          email: reviewer@test.com
        identitiesCompleted: 5
        due: 2018-10-19T13:49:37.385Z
        name: "Source Owner Access Review for Employees [source]"
        campaign:
          campaignType: MANAGER
          name: Campaign Name
          description: A description of the campaign
          id: ef38f94347e94562b5bb8424a56397d8
          type: CAMPAIGN
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
        decisionsMade: 20
      properties:
        id:
          description: id of the certification
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: name of the certification
          example: "Source Owner Access Review for Employees [source]"
          type: string
        campaign:
          $ref: '#/components/schemas/CampaignReference'
        completed:
          description: Have all decisions been made?
          example: true
          type: boolean
        identitiesCompleted:
          description: The number of identities for whom all decisions have been made
            and are complete.
          example: 5
          format: int32
          type: integer
        identitiesTotal:
          description: "The total number of identities in the Certification, both\
            \ complete and incomplete."
          example: 10
          format: int32
          type: integer
        created:
          description: created date
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        modified:
          description: modified date
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        decisionsMade:
          description: The number of approve/revoke/acknowledge decisions that have
            been made.
          example: 20
          format: int32
          type: integer
        decisionsTotal:
          description: The total number of approve/revoke/acknowledge decisions.
          example: 40
          format: int32
          type: integer
        due:
          description: The due date of the certification.
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          type: string
        signed:
          description: The date the reviewer signed off on the Certification.
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          nullable: true
          type: string
        reviewer:
          $ref: '#/components/schemas/Reviewer'
        reassignment:
          $ref: '#/components/schemas/Reassignment'
        hasErrors:
          description: Identifies if the certification has an error
          example: false
          type: boolean
        errorMessage:
          description: Description of the certification error
          example: The certification has an error
          nullable: true
          type: string
        phase:
          $ref: '#/components/schemas/CertificationPhase'
      type: object
    AccessReviewItem:
      example:
        identitySummary:
          identityId: 2c9180857182306001719937377a33de
          name: Alison Ferguso
          id: 2c91808772a504f50172a9540e501ba7
          completed: true
        comments: This user still needs access to this source
        newAccess: false
        decision: APPROVE
        accessSummary:
          access:
            name: Entitlement for Company Database
            id: 2c9180867160846801719932c5153fb7
            type: IDENTITY
          role:
            privileged: false
            owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            endDate: 2021-12-25T00:00:00Z
            accessProfiles:
            - privileged: false
              owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              entitlements:
              - owner:
                  name: Alison Ferguso
                  id: 5168015d32f890ca15812c9180835d2e
                  type: IDENTITY
                  email: alison.ferguso@identitysoon.com
                hasPermissions: false
                attributeValue: CN=entitlement.bbb7c650
                description: Gives read/write access to the company database
                isPermission: false
                revocable: true
                privileged: false
                sourceType: Active Directory - Direct
                name: CN=entitlement.bbb7c650
                attributeName: memberOf
                sourceSchemaObjectType: groups
                id: 2c918085718230600171993742c63558
                sourceName: ODS-AD-Source
                cloudGoverned: false
                account:
                  created: 2020-04-20T20:11:05.067Z
                  name: Alison Ferguso
                  modified: 2020-05-20T18:57:16.987Z
                  disabled: false
                  id: 2c9180857182305e0171993737eb29e6
                  locked: false
                  type: IDENTITY
                  nativeIdentity: CN=Alison Ferguso
              - owner:
                  name: Alison Ferguso
                  id: 5168015d32f890ca15812c9180835d2e
                  type: IDENTITY
                  email: alison.ferguso@identitysoon.com
                hasPermissions: false
                attributeValue: CN=entitlement.bbb7c650
                description: Gives read/write access to the company database
                isPermission: false
                revocable: true
                privileged: false
                sourceType: Active Directory - Direct
                name: CN=entitlement.bbb7c650
                attributeName: memberOf
                sourceSchemaObjectType: groups
                id: 2c918085718230600171993742c63558
                sourceName: ODS-AD-Source
                cloudGoverned: false
                account:
                  created: 2020-04-20T20:11:05.067Z
                  name: Alison Ferguso
                  modified: 2020-05-20T18:57:16.987Z
                  disabled: false
                  id: 2c9180857182305e0171993737eb29e6
                  locked: false
                  type: IDENTITY
                  nativeIdentity: CN=Alison Ferguso
              endDate: 2021-12-25T00:00:00Z
              created: 2021-01-01T22:32:58.104Z
              name: Employee-database-read-write
              description: Collection of entitlements to read/write the employee database
              modified: 2021-02-01T22:32:58.104Z
              id: 2c91808a7190d06e01719938fcd20792
              cloudGoverned: false
            - privileged: false
              owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              entitlements:
              - owner:
                  name: Alison Ferguso
                  id: 5168015d32f890ca15812c9180835d2e
                  type: IDENTITY
                  email: alison.ferguso@identitysoon.com
                hasPermissions: false
                attributeValue: CN=entitlement.bbb7c650
                description: Gives read/write access to the company database
                isPermission: false
                revocable: true
                privileged: false
                sourceType: Active Directory - Direct
                name: CN=entitlement.bbb7c650
                attributeName: memberOf
                sourceSchemaObjectType: groups
                id: 2c918085718230600171993742c63558
                sourceName: ODS-AD-Source
                cloudGoverned: false
                account:
                  created: 2020-04-20T20:11:05.067Z
                  name: Alison Ferguso
                  modified: 2020-05-20T18:57:16.987Z
                  disabled: false
                  id: 2c9180857182305e0171993737eb29e6
                  locked: false
                  type: IDENTITY
                  nativeIdentity: CN=Alison Ferguso
              - owner:
                  name: Alison Ferguso
                  id: 5168015d32f890ca15812c9180835d2e
                  type: IDENTITY
                  email: alison.ferguso@identitysoon.com
                hasPermissions: false
                attributeValue: CN=entitlement.bbb7c650
                description: Gives read/write access to the company database
                isPermission: false
                revocable: true
                privileged: false
                sourceType: Active Directory - Direct
                name: CN=entitlement.bbb7c650
                attributeName: memberOf
                sourceSchemaObjectType: groups
                id: 2c918085718230600171993742c63558
                sourceName: ODS-AD-Source
                cloudGoverned: false
                account:
                  created: 2020-04-20T20:11:05.067Z
                  name: Alison Ferguso
                  modified: 2020-05-20T18:57:16.987Z
                  disabled: false
                  id: 2c9180857182305e0171993737eb29e6
                  locked: false
                  type: IDENTITY
                  nativeIdentity: CN=Alison Ferguso
              endDate: 2021-12-25T00:00:00Z
              created: 2021-01-01T22:32:58.104Z
              name: Employee-database-read-write
              description: Collection of entitlements to read/write the employee database
              modified: 2021-02-01T22:32:58.104Z
              id: 2c91808a7190d06e01719938fcd20792
              cloudGoverned: false
            name: Accounting-Employees
            description: Role for members of the accounting department with the necessary
              Access Profiles
            id: 2c91808a7190d06e0171993907fd0794
            revocable: false
          entitlement:
            owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              disabled: false
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
          accessProfile:
            privileged: false
            owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            entitlements:
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                disabled: false
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                disabled: false
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
            endDate: 2021-12-25T00:00:00Z
            created: 2021-01-01T22:32:58.104Z
            name: Employee-database-read-write
            description: Collection of entitlements to read/write the employee database
            modified: 2021-02-01T22:32:58.104Z
            id: 2c91808a7190d06e01719938fcd20792
            cloudGoverned: false
        id: ef38f94347e94562b5bb8424a56397d8
        completed: false
      properties:
        accessSummary:
          $ref: '#/components/schemas/AccessSummary'
        identitySummary:
          $ref: '#/components/schemas/CertificationIdentitySummary'
        id:
          description: The review item's id
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        completed:
          description: Whether the review item is complete
          example: false
          type: boolean
        newAccess:
          description: Indicates whether the review item is for new access to a source
          example: false
          type: boolean
        decision:
          $ref: '#/components/schemas/CertificationDecision'
        comments:
          description: Comments for this review item
          example: This user still needs access to this source
          nullable: true
          type: string
      type: object
    ReviewDecision:
      example:
        comments: This user no longer needs access to this source
        decision: APPROVE
        proposedEndDate: 2017-07-11T18:45:37.098Z
        recommendation:
          reasons:
          - Reason 1
          - Reason 2
          recommendation: recommendation
          timestamp: 2020-06-01T13:49:37.385Z
        id: ef38f94347e94562b5bb8424a56397d8
        bulk: true
      properties:
        id:
          description: The id of the review decision
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        decision:
          $ref: '#/components/schemas/CertificationDecision'
        proposedEndDate:
          description: The date at which a user's access should be taken away. Should
            only be set for `REVOKE` decisions.
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        bulk:
          description: Indicates whether decision should be marked as part of a larger
            bulk decision
          example: true
          type: boolean
        recommendation:
          $ref: '#/components/schemas/ReviewRecommendation'
        comments:
          description: Comments recorded when the decision was made
          example: This user no longer needs access to this source
          type: string
      required:
      - bulk
      - decision
      - id
      type: object
    ReviewReassign:
      example:
        reason: reassigned for some reason
        reassignTo: ef38f94347e94562b5bb8424a56397d8
        reassign:
        - id: ef38f94347e94562b5bb8424a56397d8
          type: ITEM
        - id: ef38f94347e94562b5bb8424a56397d8
          type: ITEM
      properties:
        reassign:
          items:
            $ref: '#/components/schemas/ReassignReference'
          type: array
        reassignTo:
          description: The ID of the identity to which the certification is reassigned
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        reason:
          description: The reason comment for why the reassign was made
          example: reassigned for some reason
          type: string
      required:
      - reason
      - reassign
      - reassignTo
      type: object
    IdentityCertDecisionSummary:
      example:
        entitlementDecisionsMade: 3
        rolesApproved: 2
        roleDecisionsTotal: 4
        accessProfilesRevoked: 2
        accessProfileDecisionsTotal: 10
        accountDecisionsTotal: 8
        rolesRevoked: 0
        roleDecisionsMade: 2
        accountsApproved: 1
        entitlementsApproved: 2
        accessProfilesApproved: 3
        accessProfileDecisionsMade: 5
        accountDecisionsMade: 4
        entitlementDecisionsTotal: 6
        accountsRevoked: 3
        entitlementsRevoked: 1
      properties:
        entitlementDecisionsMade:
          description: Number of entitlement decisions that have been made
          example: 3
          format: int32
          type: integer
        accessProfileDecisionsMade:
          description: Number of access profile decisions that have been made
          example: 5
          format: int32
          type: integer
        roleDecisionsMade:
          description: Number of role decisions that have been made
          example: 2
          format: int32
          type: integer
        accountDecisionsMade:
          description: Number of account decisions that have been made
          example: 4
          format: int32
          type: integer
        entitlementDecisionsTotal:
          description: "The total number of entitlement decisions on the certification,\
            \ both complete and incomplete"
          example: 6
          format: int32
          type: integer
        accessProfileDecisionsTotal:
          description: "The total number of access profile decisions on the certification,\
            \ both complete and incomplete"
          example: 10
          format: int32
          type: integer
        roleDecisionsTotal:
          description: "The total number of role decisions on the certification, both\
            \ complete and incomplete"
          example: 4
          format: int32
          type: integer
        accountDecisionsTotal:
          description: "The total number of account decisions on the certification,\
            \ both complete and incomplete"
          example: 8
          format: int32
          type: integer
        entitlementsApproved:
          description: The number of entitlement decisions that have been made which
            were approved
          example: 2
          format: int32
          type: integer
        entitlementsRevoked:
          description: The number of entitlement decisions that have been made which
            were revoked
          example: 1
          format: int32
          type: integer
        accessProfilesApproved:
          description: The number of access profile decisions that have been made
            which were approved
          example: 3
          format: int32
          type: integer
        accessProfilesRevoked:
          description: The number of access profile decisions that have been made
            which were revoked
          example: 2
          format: int32
          type: integer
        rolesApproved:
          description: The number of role decisions that have been made which were
            approved
          example: 2
          format: int32
          type: integer
        rolesRevoked:
          description: The number of role decisions that have been made which were
            revoked
          example: 0
          format: int32
          type: integer
        accountsApproved:
          description: The number of account decisions that have been made which were
            approved
          example: 1
          format: int32
          type: integer
        accountsRevoked:
          description: The number of account decisions that have been made which were
            revoked
          example: 3
          format: int32
          type: integer
      type: object
    CertificationIdentitySummary:
      example:
        identityId: 2c9180857182306001719937377a33de
        name: Alison Ferguso
        id: 2c91808772a504f50172a9540e501ba7
        completed: true
      properties:
        id:
          description: The ID of the identity summary
          example: 2c91808772a504f50172a9540e501ba7
          type: string
        name:
          description: Name of the linked identity
          example: Alison Ferguso
          type: string
        identityId:
          description: The ID of the identity being certified
          example: 2c9180857182306001719937377a33de
          type: string
        completed:
          description: Indicates whether the review items for the linked identity's
            certification have been completed
          example: true
          type: boolean
      type: object
    AccessSummary:
      description: An object holding the access that is being reviewed
      example:
        access:
          name: Entitlement for Company Database
          id: 2c9180867160846801719932c5153fb7
          type: IDENTITY
        role:
          privileged: false
          owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          endDate: 2021-12-25T00:00:00Z
          accessProfiles:
          - privileged: false
            owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            entitlements:
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                disabled: false
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                disabled: false
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
            endDate: 2021-12-25T00:00:00Z
            created: 2021-01-01T22:32:58.104Z
            name: Employee-database-read-write
            description: Collection of entitlements to read/write the employee database
            modified: 2021-02-01T22:32:58.104Z
            id: 2c91808a7190d06e01719938fcd20792
            cloudGoverned: false
          - privileged: false
            owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            entitlements:
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                disabled: false
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
            - owner:
                name: Alison Ferguso
                id: 5168015d32f890ca15812c9180835d2e
                type: IDENTITY
                email: alison.ferguso@identitysoon.com
              hasPermissions: false
              attributeValue: CN=entitlement.bbb7c650
              description: Gives read/write access to the company database
              isPermission: false
              revocable: true
              privileged: false
              sourceType: Active Directory - Direct
              name: CN=entitlement.bbb7c650
              attributeName: memberOf
              sourceSchemaObjectType: groups
              id: 2c918085718230600171993742c63558
              sourceName: ODS-AD-Source
              cloudGoverned: false
              account:
                created: 2020-04-20T20:11:05.067Z
                name: Alison Ferguso
                modified: 2020-05-20T18:57:16.987Z
                disabled: false
                id: 2c9180857182305e0171993737eb29e6
                locked: false
                type: IDENTITY
                nativeIdentity: CN=Alison Ferguso
            endDate: 2021-12-25T00:00:00Z
            created: 2021-01-01T22:32:58.104Z
            name: Employee-database-read-write
            description: Collection of entitlements to read/write the employee database
            modified: 2021-02-01T22:32:58.104Z
            id: 2c91808a7190d06e01719938fcd20792
            cloudGoverned: false
          name: Accounting-Employees
          description: Role for members of the accounting department with the necessary
            Access Profiles
          id: 2c91808a7190d06e0171993907fd0794
          revocable: false
        entitlement:
          owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          hasPermissions: false
          attributeValue: CN=entitlement.bbb7c650
          description: Gives read/write access to the company database
          isPermission: false
          revocable: true
          privileged: false
          sourceType: Active Directory - Direct
          name: CN=entitlement.bbb7c650
          attributeName: memberOf
          sourceSchemaObjectType: groups
          id: 2c918085718230600171993742c63558
          sourceName: ODS-AD-Source
          cloudGoverned: false
          account:
            created: 2020-04-20T20:11:05.067Z
            name: Alison Ferguso
            modified: 2020-05-20T18:57:16.987Z
            disabled: false
            id: 2c9180857182305e0171993737eb29e6
            locked: false
            type: IDENTITY
            nativeIdentity: CN=Alison Ferguso
        accessProfile:
          privileged: false
          owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          entitlements:
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              disabled: false
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              disabled: false
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
          endDate: 2021-12-25T00:00:00Z
          created: 2021-01-01T22:32:58.104Z
          name: Employee-database-read-write
          description: Collection of entitlements to read/write the employee database
          modified: 2021-02-01T22:32:58.104Z
          id: 2c91808a7190d06e01719938fcd20792
          cloudGoverned: false
      properties:
        access:
          $ref: '#/components/schemas/AccessSummary_access'
        entitlement:
          $ref: '#/components/schemas/ReviewableEntitlement'
        accessProfile:
          $ref: '#/components/schemas/ReviewableAccessProfile'
        role:
          $ref: '#/components/schemas/ReviewableRole'
      type: object
    LifecycleState:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - $ref: '#/components/schemas/LifecycleState_allOf'
    BaseReferenceDto:
      example:
        name: William Wilson
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: ID of the object to which this reference applies
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: William Wilson
          type: string
      type: object
    IdentityProfileExportedObject:
      description: Identity Profile exported object
      example:
        self:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        version: 1
        object: null
      properties:
        version:
          description: Version or object from the target service.
          example: 1
          format: int32
          type: integer
        self:
          $ref: '#/components/schemas/BaseReferenceDto'
        object:
          $ref: '#/components/schemas/IdentityProfile'
      type: object
    ObjectImportResult:
      description: Response model for import of a single object.
      example:
        warnings:
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        importedObjects:
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        infos:
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        errors:
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
      properties:
        infos:
          description: Informational messages returned from the target service on
            import.
          items:
            $ref: '#/components/schemas/SpConfigMessage'
          type: array
        warnings:
          description: Warning messages returned from the target service on import.
          items:
            $ref: '#/components/schemas/SpConfigMessage'
          type: array
        errors:
          description: Error messages returned from the target service on import.
          items:
            $ref: '#/components/schemas/SpConfigMessage'
          type: array
        importedObjects:
          description: References to objects that were created or updated by the import.
          items:
            $ref: '#/components/schemas/BaseReferenceDto'
          type: array
      required:
      - errors
      - importedObjects
      - infos
      - warnings
      title: Import Object Response Body
      type: object
    IdentityAttributeConfig:
      description: Defines all the identity attribute mapping configurations. This
        defines how to generate or collect data for each identity attributes in identity
        refresh process.
      example:
        attributeTransforms:
        - transformDefinition:
            attributes:
              attributeName: e-mail
              sourceName: MySource
              sourceId: 2c9180877a826e68017a8c0b03da1a53
            type: accountAttribute
          identityAttributeName: email
        - transformDefinition:
            attributes:
              attributeName: e-mail
              sourceName: MySource
              sourceId: 2c9180877a826e68017a8c0b03da1a53
            type: accountAttribute
          identityAttributeName: email
        enabled: true
      properties:
        enabled:
          description: The backend will only promote values if the profile/mapping
            is enabled.
          example: true
          type: boolean
        attributeTransforms:
          items:
            $ref: '#/components/schemas/IdentityAttributeTransform'
          type: array
      type: object
    NonEmployeeRecord:
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        lastName: Smith
        manager: jane.doe
        data:
          description: Auditing
        accountName: Abby.Smith
        endDate: 2020-08-23T18:52:59.162Z
        created: 2019-08-23T18:40:35.772Z
        firstName: William
        phone: "5555555555"
        modified: 2019-08-23T18:52:59.162Z
        id: ef38f94347e94562b5bb8424a56397d8
        email: william.smith@example.com
        startDate: 2019-08-23T18:52:59.162Z
      properties:
        id:
          description: Non-Employee record id.
          example: ef38f94347e94562b5bb8424a56397d8
          format: UUID
          type: string
        accountName:
          description: Requested identity account name.
          example: Abby.Smith
          type: string
        firstName:
          description: Non-Employee's first name.
          example: William
          type: string
        lastName:
          description: Non-Employee's last name.
          example: Smith
          type: string
        email:
          description: Non-Employee's email.
          example: william.smith@example.com
          type: string
        phone:
          description: Non-Employee's phone.
          example: "5555555555"
          type: string
        manager:
          description: The account ID of a valid identity to serve as this non-employee's
            manager.
          example: jane.doe
          type: string
        sourceId:
          description: Non-Employee's source id.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        data:
          additionalProperties:
            type: string
          description: Attribute blob/bag for a non-employee.
          example:
            description: Auditing
          type: object
        startDate:
          description: Non-Employee employment start date.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        endDate:
          description: Non-Employee employment end date.
          example: 2020-08-23T18:52:59.162Z
          format: date-time
          type: string
        modified:
          description: When the request was last modified.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        created:
          description: When the request was created.
          example: 2019-08-23T18:40:35.772Z
          format: date-time
          type: string
      type: object
    NonEmployeeRequestBody:
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        firstName: William
        lastName: Smith
        manager: jane.doe
        data:
          description: Auditing
        accountName: william.smith
        phone: "5555555555"
        endDate: 2021-03-25T00:00:00-05:00
        email: william.smith@example.com
        startDate: 2020-03-24T00:00:00-05:00
      properties:
        accountName:
          description: Requested identity account name.
          example: william.smith
          type: string
        firstName:
          description: Non-Employee's first name.
          example: William
          type: string
        lastName:
          description: Non-Employee's last name.
          example: Smith
          type: string
        email:
          description: Non-Employee's email.
          example: william.smith@example.com
          type: string
        phone:
          description: Non-Employee's phone.
          example: "5555555555"
          type: string
        manager:
          description: The account ID of a valid identity to serve as this non-employee's
            manager.
          example: jane.doe
          type: string
        sourceId:
          description: Non-Employee's source id.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        data:
          additionalProperties:
            type: string
          description: "Attribute blob/bag for a non-employee, 10 attributes is the\
            \ maximum size supported."
          example:
            description: Auditing
          type: object
        startDate:
          description: Non-Employee employment start date.
          example: 2020-03-24T00:00:00-05:00
          format: date-time
          type: string
        endDate:
          description: Non-Employee employment end date.
          example: 2021-03-25T00:00:00-05:00
          format: date-time
          type: string
      required:
      - accountName
      - email
      - endDate
      - firstName
      - lastName
      - manager
      - phone
      - sourceId
      - startDate
      type: object
    NonEmployeeRequest:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSourceLite'
      - $ref: '#/components/schemas/NonEmployeeRequest_allOf'
    NonEmployeeRequestSummary:
      example:
        approved: 2
        rejected: 2
        pending: 2
        nonEmployeeCount: 2
      properties:
        approved:
          description: The number of approved non-employee requests on all sources
            that *requested-for* user manages.
          example: 2
          format: int32
          type: integer
        rejected:
          description: The number of rejected non-employee requests on all sources
            that *requested-for* user manages.
          example: 2
          format: int32
          type: integer
        pending:
          description: The number of pending non-employee requests on all sources
            that *requested-for* user manages.
          example: 2
          format: int32
          type: integer
        nonEmployeeCount:
          description: The number of non-employee records on all sources that *requested-for*
            user manages.
          example: 2
          format: int32
          type: integer
      type: object
    NonEmployeeSourceWithNECount:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSource'
      - $ref: '#/components/schemas/NonEmployeeSourceWithNECount_allOf'
    NonEmployeeSourceRequestBody:
      example:
        owner:
          id: 2c91808570313110017040b06f344ec9
        managementWorkgroup: "123299"
        accountManagers:
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        name: Retail
        description: Source description
        approvers:
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
      properties:
        name:
          description: Name of non-employee source.
          example: Retail
          type: string
        description:
          description: Description of non-employee source.
          example: Source description
          type: string
        owner:
          $ref: '#/components/schemas/NonEmployeeIdnUserRequest'
        managementWorkgroup:
          description: The ID for the management workgroup that contains source sub-admins
          example: "123299"
          type: string
        approvers:
          description: List of approvers.
          items:
            $ref: '#/components/schemas/NonEmployeeIdnUserRequest'
          maxItems: 3
          type: array
        accountManagers:
          description: List of account managers.
          items:
            $ref: '#/components/schemas/NonEmployeeIdnUserRequest'
          maxItems: 10
          type: array
      required:
      - description
      - name
      - owner
      type: object
    NonEmployeeSourceWithCloudExternalId:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSource'
      - $ref: '#/components/schemas/NonEmployeeSourceWithCloudExternalId_allOf'
    NonEmployeeSource:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSourceLite'
      - $ref: '#/components/schemas/NonEmployeeSource_allOf'
    NonEmployeeBulkUploadJob:
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        created: 2019-08-23T18:52:59.162Z
        modified: 2019-08-23T18:52:59.162Z
        id: 2c91808568c529c60168cca6f90cffff
        status: PENDING
      properties:
        id:
          description: The bulk upload job's ID. (UUID)
          example: 2c91808568c529c60168cca6f90cffff
          type: string
        sourceId:
          description: The ID of the source to bulk-upload non-employees to. (UUID)
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        created:
          description: The date-time the job was submitted.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        modified:
          description: The date-time that the job was last updated.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        status:
          description: |
            Returns the following values indicating the progress or result of the bulk upload job.
            "PENDING" means the job is queued and waiting to be processed.
            "IN_PROGRESS" means the job is currently being processed.
            "COMPLETED" means the job has been completed without any errors.
            "ERROR" means the job failed to process with errors.
          enum:
          - PENDING
          - IN_PROGRESS
          - COMPLETED
          - ERROR
          example: PENDING
          type: string
      type: object
    NonEmployeeBulkUploadStatus:
      example:
        status: PENDING
      properties:
        status:
          description: |
            Returns the following values indicating the progress or result of the bulk upload job.
            "PENDING" means the job is queued and waiting to be processed.
            "IN_PROGRESS" means the job is currently being processed.
            "COMPLETED" means the job has been completed without any errors.
            "ERROR" means the job failed to process with errors.
            null means job has been submitted to the source.
          enum:
          - PENDING
          - IN_PROGRESS
          - COMPLETED
          - ERROR
          example: PENDING
          type: string
      type: object
    NonEmployeeApprovalItem:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeApprovalItemBase'
      - $ref: '#/components/schemas/NonEmployeeApprovalItem_allOf'
    NonEmployeeApprovalItemDetail:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeApprovalItemBase'
      - $ref: '#/components/schemas/NonEmployeeApprovalItemDetail_allOf'
    NonEmployeeApprovalDecision:
      example:
        comment: Approved by manager
      properties:
        comment:
          description: Comment on the approval item.
          example: Approved by manager
          maxLength: 4000
          type: string
      type: object
    NonEmployeeRejectApprovalDecision:
      example:
        comment: approved
      properties:
        comment:
          description: Comment on the approval item.
          example: approved
          maxLength: 4000
          type: string
      required:
      - comment
      type: object
    NonEmployeeApprovalSummary:
      example:
        approved: 2
        rejected: 2
        pending: 2
      properties:
        approved:
          description: The number of approved non-employee approval requests.
          example: 2
          format: int32
          type: integer
        pending:
          description: The number of pending non-employee approval requests.
          example: 2
          format: int32
          type: integer
        rejected:
          description: The number of rejected non-employee approval requests.
          example: 2
          format: int32
          type: integer
      type: object
    NonEmployeeSchemaAttribute:
      example:
        system: true
        helpText: The unique identifier for the account
        created: 2019-08-23T18:40:35.772Z
        modified: 2019-08-23T18:52:59.162Z
        id: ac110005-7156-1150-8171-5b292e3e0084
        label: Account Name
        placeholder: Enter a unique user name for this account.
        type: TEXT
        technicalName: account.name
        required: true
      properties:
        id:
          description: Schema Attribute Id
          example: ac110005-7156-1150-8171-5b292e3e0084
          format: UUID
          type: string
        system:
          description: True if this schema attribute is mandatory on all non-employees
            sources.
          example: true
          type: boolean
        modified:
          description: When the schema attribute was last modified.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        created:
          description: When the schema attribute was created.
          example: 2019-08-23T18:40:35.772Z
          format: date-time
          type: string
        type:
          $ref: '#/components/schemas/NonEmployeeSchemaAttributeType'
        label:
          description: Label displayed on the UI for this schema attribute.
          example: Account Name
          type: string
        technicalName:
          description: The technical name of the attribute. Must be unique per source.
          example: account.name
          type: string
        helpText:
          description: help text displayed by UI.
          example: The unique identifier for the account
          type: string
        placeholder:
          description: Hint text that fills UI box.
          example: Enter a unique user name for this account.
          type: string
        required:
          description: "If true, the schema attribute is required for all non-employees\
            \ in the source"
          example: true
          type: boolean
      required:
      - label
      - technicalName
      - type
      type: object
    NonEmployeeSchemaAttributeBody:
      example:
        helpText: The unique identifier for the account
        label: Account Name
        placeholder: Enter a unique user name for this account.
        type: TEXT
        technicalName: account.name
        required: true
      properties:
        type:
          description: Type of the attribute. Only type 'TEXT' is supported for custom
            attributes.
          example: TEXT
          type: string
        label:
          description: Label displayed on the UI for this schema attribute.
          example: Account Name
          type: string
        technicalName:
          description: The technical name of the attribute. Must be unique per source.
          example: account.name
          type: string
        helpText:
          description: help text displayed by UI.
          example: The unique identifier for the account
          type: string
        placeholder:
          description: Hint text that fills UI box.
          example: Enter a unique user name for this account.
          type: string
        required:
          description: "If true, the schema attribute is required for all non-employees\
            \ in the source"
          example: true
          type: boolean
      required:
      - label
      - technicalName
      - type
      type: object
    GetOAuthClientResponse:
      example:
        internal: false
        created: 2017-07-11T18:45:37.098Z
        businessName: Acme-Solar
        description: "An API client used for the authorization_code, refresh_token,\
          \ and client_credentials flows"
        refreshTokenValiditySeconds: 86400
        type: CONFIDENTIAL
        redirectUris:
        - http://localhost:12345
        enabled: true
        accessType: OFFLINE
        lastUsed: 2017-07-11T18:45:37.098Z
        grantTypes:
        - AUTHORIZATION_CODE
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        strongAuthSupported: false
        homepageUrl: http://localhost:12345
        accessTokenValiditySeconds: 750
        scope:
        - demo:api-client-scope:first
        - demo:api-client-scope:second
        name: Demo API Client
        claimsSupported: false
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
      properties:
        id:
          description: ID of the OAuth client
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        businessName:
          description: The name of the business the API Client should belong to
          example: Acme-Solar
          nullable: true
          type: string
        homepageUrl:
          description: The homepage URL associated with the owner of the API Client
          example: http://localhost:12345
          nullable: true
          type: string
        name:
          description: A human-readable name for the API Client
          example: Demo API Client
          type: string
        description:
          description: A description of the API Client
          example: "An API client used for the authorization_code, refresh_token,\
            \ and client_credentials flows"
          nullable: true
          type: string
        accessTokenValiditySeconds:
          description: The number of seconds an access token generated for this API
            Client is valid for
          example: 750
          format: int32
          type: integer
        refreshTokenValiditySeconds:
          description: The number of seconds a refresh token generated for this API
            Client is valid for
          example: 86400
          format: int32
          type: integer
        redirectUris:
          description: A list of the approved redirect URIs used with the authorization_code
            flow
          example:
          - http://localhost:12345
          items:
            type: string
          nullable: true
          type: array
        grantTypes:
          description: A list of OAuth 2.0 grant types this API Client can be used
            with
          example:
          - AUTHORIZATION_CODE
          - CLIENT_CREDENTIALS
          - REFRESH_TOKEN
          items:
            $ref: '#/components/schemas/GrantType'
          type: array
        accessType:
          $ref: '#/components/schemas/AccessType'
        type:
          $ref: '#/components/schemas/ClientType'
        internal:
          description: An indicator of whether the API Client can be used for requests
            internal to IDN
          example: false
          type: boolean
        enabled:
          description: An indicator of whether the API Client is enabled for use
          example: true
          type: boolean
        strongAuthSupported:
          description: An indicator of whether the API Client supports strong authentication
          example: false
          type: boolean
        claimsSupported:
          description: An indicator of whether the API Client supports the serialization
            of SAML claims when used with the authorization_code flow
          example: false
          type: boolean
        created:
          description: "The date and time, down to the millisecond, when the API Client\
            \ was created"
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: "The date and time, down to the millisecond, when the API Client\
            \ was last updated"
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        lastUsed:
          description: "The date and time, down to the millisecond, when this API\
            \ Client was last used to generate an access token. This timestamp does\
            \ not get updated on every API Client usage, but only once a day. This\
            \ property can be useful for identifying which API Clients are no longer\
            \ actively used and can be removed."
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          nullable: true
          type: string
        scope:
          description: Scopes of the API Client.
          example:
          - demo:api-client-scope:first
          - demo:api-client-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
      required:
      - accessTokenValiditySeconds
      - accessType
      - businessName
      - claimsSupported
      - created
      - description
      - enabled
      - grantTypes
      - homepageUrl
      - id
      - internal
      - modified
      - name
      - redirectUris
      - refreshTokenValiditySeconds
      - scope
      - strongAuthSupported
      - type
      type: object
    CreateOAuthClientRequest:
      example:
        internal: false
        businessName: Acme-Solar
        description: "An API client used for the authorization_code, refresh_token,\
          \ and client_credentials flows"
        refreshTokenValiditySeconds: 86400
        type: CONFIDENTIAL
        redirectUris:
        - http://localhost:12345
        enabled: true
        accessType: OFFLINE
        grantTypes:
        - AUTHORIZATION_CODE
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        strongAuthSupported: false
        homepageUrl: http://localhost:12345
        accessTokenValiditySeconds: 750
        scope:
        - demo:api-client-scope:first
        - demo:api-client-scope:second
        name: Demo API Client
        claimsSupported: false
      properties:
        businessName:
          description: The name of the business the API Client should belong to
          example: Acme-Solar
          nullable: true
          type: string
        homepageUrl:
          description: The homepage URL associated with the owner of the API Client
          example: http://localhost:12345
          nullable: true
          type: string
        name:
          description: A human-readable name for the API Client
          example: Demo API Client
          nullable: true
          type: string
        description:
          description: A description of the API Client
          example: "An API client used for the authorization_code, refresh_token,\
            \ and client_credentials flows"
          nullable: true
          type: string
        accessTokenValiditySeconds:
          description: The number of seconds an access token generated for this API
            Client is valid for
          example: 750
          format: int32
          type: integer
        refreshTokenValiditySeconds:
          description: The number of seconds a refresh token generated for this API
            Client is valid for
          example: 86400
          format: int32
          type: integer
        redirectUris:
          description: A list of the approved redirect URIs. Provide one or more URIs
            when assigning the AUTHORIZATION_CODE grant type to a new OAuth Client.
          example:
          - http://localhost:12345
          items:
            type: string
          nullable: true
          type: array
        grantTypes:
          description: A list of OAuth 2.0 grant types this API Client can be used
            with
          example:
          - AUTHORIZATION_CODE
          - CLIENT_CREDENTIALS
          - REFRESH_TOKEN
          items:
            $ref: '#/components/schemas/GrantType'
          nullable: true
          type: array
        accessType:
          $ref: '#/components/schemas/AccessType'
        type:
          $ref: '#/components/schemas/ClientType'
        internal:
          description: An indicator of whether the API Client can be used for requests
            internal within the product.
          example: false
          type: boolean
        enabled:
          description: An indicator of whether the API Client is enabled for use
          example: true
          type: boolean
        strongAuthSupported:
          description: An indicator of whether the API Client supports strong authentication
          example: false
          type: boolean
        claimsSupported:
          description: An indicator of whether the API Client supports the serialization
            of SAML claims when used with the authorization_code flow
          example: false
          type: boolean
        scope:
          description: "Scopes of the API Client. If no scope is specified, the client\
            \ will be created with the default scope \"sp:scopes:all\". This means\
            \ the API Client will have all the rights of the owner who created it."
          example:
          - demo:api-client-scope:first
          - demo:api-client-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
      required:
      - accessTokenValiditySeconds
      - accessType
      - description
      - enabled
      - grantTypes
      - name
      type: object
    CreateOAuthClientResponse:
      example:
        internal: false
        created: 2017-07-11T18:45:37.098Z
        businessName: Acme-Solar
        description: "An API client used for the authorization_code, refresh_token,\
          \ and client_credentials flows"
        secret: 5c32dd9b21adb51c77794d46e71de117a1d0ddb36a7ff941fa28014ab7de2cf3
        refreshTokenValiditySeconds: 86400
        type: CONFIDENTIAL
        redirectUris:
        - http://localhost:12345
        enabled: true
        accessType: OFFLINE
        grantTypes:
        - AUTHORIZATION_CODE
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        strongAuthSupported: false
        homepageUrl: http://localhost:12345
        accessTokenValiditySeconds: 750
        scope:
        - demo:api-client-scope:first
        - demo:api-client-scope:second
        name: Demo API Client
        claimsSupported: false
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
      properties:
        id:
          description: ID of the OAuth client
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        secret:
          description: Secret of the OAuth client (This field is only returned on
            the intial create call.)
          example: 5c32dd9b21adb51c77794d46e71de117a1d0ddb36a7ff941fa28014ab7de2cf3
          type: string
        businessName:
          description: The name of the business the API Client should belong to
          example: Acme-Solar
          type: string
        homepageUrl:
          description: The homepage URL associated with the owner of the API Client
          example: http://localhost:12345
          type: string
        name:
          description: A human-readable name for the API Client
          example: Demo API Client
          type: string
        description:
          description: A description of the API Client
          example: "An API client used for the authorization_code, refresh_token,\
            \ and client_credentials flows"
          type: string
        accessTokenValiditySeconds:
          description: The number of seconds an access token generated for this API
            Client is valid for
          example: 750
          format: int32
          type: integer
        refreshTokenValiditySeconds:
          description: The number of seconds a refresh token generated for this API
            Client is valid for
          example: 86400
          format: int32
          type: integer
        redirectUris:
          description: A list of the approved redirect URIs used with the authorization_code
            flow
          example:
          - http://localhost:12345
          items:
            type: string
          type: array
        grantTypes:
          description: A list of OAuth 2.0 grant types this API Client can be used
            with
          example:
          - AUTHORIZATION_CODE
          - CLIENT_CREDENTIALS
          - REFRESH_TOKEN
          items:
            $ref: '#/components/schemas/GrantType'
          type: array
        accessType:
          $ref: '#/components/schemas/AccessType'
        type:
          $ref: '#/components/schemas/ClientType'
        internal:
          description: An indicator of whether the API Client can be used for requests
            internal to IDN
          example: false
          type: boolean
        enabled:
          description: An indicator of whether the API Client is enabled for use
          example: true
          type: boolean
        strongAuthSupported:
          description: An indicator of whether the API Client supports strong authentication
          example: false
          type: boolean
        claimsSupported:
          description: An indicator of whether the API Client supports the serialization
            of SAML claims when used with the authorization_code flow
          example: false
          type: boolean
        created:
          description: "The date and time, down to the millisecond, when the API Client\
            \ was created"
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: "The date and time, down to the millisecond, when the API Client\
            \ was last updated"
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        scope:
          description: Scopes of the API Client.
          example:
          - demo:api-client-scope:first
          - demo:api-client-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
      required:
      - accessTokenValiditySeconds
      - accessType
      - businessName
      - claimsSupported
      - created
      - description
      - enabled
      - grantTypes
      - homepageUrl
      - id
      - internal
      - modified
      - name
      - redirectUris
      - refreshTokenValiditySeconds
      - scope
      - secret
      - strongAuthSupported
      - type
      type: object
    GetPersonalAccessTokenResponse:
      example:
        owner:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        lastUsed: 2017-07-11T18:45:37.098Z
        created: 2017-07-11T18:45:37.098Z
        scope:
        - demo:personal-access-token-scope:first
        - demo:personal-access-token-scope:second
        name: NodeJS Integration
        id: 86f1dc6fe8f54414950454cbb11278fa
      properties:
        id:
          description: The ID of the personal access token (to be used as the username
            for Basic Auth).
          example: 86f1dc6fe8f54414950454cbb11278fa
          type: string
        name:
          description: The name of the personal access token. Cannot be the same as
            other personal access tokens owned by a user.
          example: NodeJS Integration
          type: string
        scope:
          description: Scopes of the personal  access token.
          example:
          - demo:personal-access-token-scope:first
          - demo:personal-access-token-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
        owner:
          $ref: '#/components/schemas/BaseReferenceDto'
        created:
          description: "The date and time, down to the millisecond, when this personal\
            \ access token was created."
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        lastUsed:
          description: "The date and time, down to the millisecond, when this personal\
            \ access token was last used to generate an access token. This timestamp\
            \ does not get updated on every PAT usage, but only once a day. This property\
            \ can be useful for identifying which PATs are no longer actively used\
            \ and can be removed."
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          nullable: true
          type: string
      required:
      - created
      - id
      - name
      - owner
      - scope
      type: object
    CreatePersonalAccessTokenRequest:
      description: Object for specifying the name of a personal access token to create
      example:
        scope:
        - demo:personal-access-token-scope:first
        - demo:personal-access-token-scope:second
        name: NodeJS Integration
      properties:
        name:
          description: The name of the personal access token (PAT) to be created.
            Cannot be the same as another PAT owned by the user for whom this PAT
            is being created.
          example: NodeJS Integration
          type: string
        scope:
          description: "Scopes of the personal  access token. If no scope is specified,\
            \ the token will be created with the default scope \"sp:scopes:all\".\
            \ This means the personal access token will have all the rights of the\
            \ owner who created it."
          example:
          - demo:personal-access-token-scope:first
          - demo:personal-access-token-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
      required:
      - name
      type: object
    CreatePersonalAccessTokenResponse:
      example:
        owner:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        created: 2017-07-11T18:45:37.098Z
        scope:
        - demo:personal-access-token-scope:first
        - demo:personal-access-token-scope:second
        name: NodeJS Integration
        id: 86f1dc6fe8f54414950454cbb11278fa
        secret: 1d1bef2b9f426383447f64f69349fc7cac176042578d205c256ba3f37c59adb9
      properties:
        id:
          description: The ID of the personal access token (to be used as the username
            for Basic Auth).
          example: 86f1dc6fe8f54414950454cbb11278fa
          type: string
        secret:
          description: The secret of the personal access token (to be used as the
            password for Basic Auth).
          example: 1d1bef2b9f426383447f64f69349fc7cac176042578d205c256ba3f37c59adb9
          type: string
        scope:
          description: Scopes of the personal  access token.
          example:
          - demo:personal-access-token-scope:first
          - demo:personal-access-token-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
        name:
          description: The name of the personal access token. Cannot be the same as
            other personal access tokens owned by a user.
          example: NodeJS Integration
          type: string
        owner:
          $ref: '#/components/schemas/BaseReferenceDto'
        created:
          description: "The date and time, down to the millisecond, when this personal\
            \ access token was created."
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
      required:
      - created
      - id
      - name
      - owner
      - scope
      - secret
      type: object
    PublicIdentity:
      description: Details about a public identity
      example:
        manager:
          name: Thomas Edison
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        name: Alison Ferguso
        alias: alison.ferguso
        attributes:
        - name: Country
          value: US
          key: country
        - name: Country
          value: US
          key: country
        id: 2c9180857182305e0171993735622948
        email: alison.ferguso@acme-solar.com
        status: Active
      properties:
        id:
          description: Identity id
          example: 2c9180857182305e0171993735622948
          type: string
        name:
          description: Human-readable display name of identity.
          example: Alison Ferguso
          type: string
        alias:
          description: Alternate unique identifier for the identity.
          example: alison.ferguso
          type: string
        email:
          description: Email address of identity.
          example: alison.ferguso@acme-solar.com
          nullable: true
          type: string
        status:
          description: The lifecycle status for the identity
          example: Active
          nullable: true
          type: string
        manager:
          $ref: '#/components/schemas/IdentityReference'
        attributes:
          description: The public identity attributes of the identity
          items:
            $ref: '#/components/schemas/IdentityAttribute'
          type: array
      title: Public Identity
      type: object
    PublicIdentityConfig:
      description: Details of up to 5 Identity attributes that will be publicly accessible
        for all Identities to anyone in the org.
      example:
        modified: 2018-06-25T20:22:28.104Z
        attributes:
        - name: Country
          key: country
        - name: Country
          key: country
        modifiedBy:
          name: Thomas Edison
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
      properties:
        attributes:
          description: Up to 5 identity attributes that will be available to everyone
            in the org for all users in the org.
          items:
            $ref: '#/components/schemas/PublicIdentityAttributeConfig'
          type: array
        modified:
          description: When this configuration was last modified.
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        modifiedBy:
          $ref: '#/components/schemas/IdentityReference'
      type: object
    SavedSearchName:
      properties:
        name:
          description: |
            The name of the saved search.
          example: Disabled accounts
          type: string
        description:
          description: |
            The description of the saved search.
          example: Disabled accounts
          nullable: true
          type: string
      type: object
    SavedSearchDetail:
      properties:
        public:
          default: false
          description: |
            Indicates if the saved search is public.
          example: false
          type: boolean
        created:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        indices:
          description: |
            The names of the Elasticsearch indices in which to search.
          example:
          - identities
          items:
            $ref: '#/components/schemas/Index'
          type: array
        columns:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Column'
            type: array
          description: |
            The columns to be returned (specifies the order in which they will be presented) for each document type.

            The currently supported document types are: _accessprofile_, _accountactivity_, _account_, _aggregation_, _entitlement_, _event_, _identity_, and _role_.
          example:
            identity:
            - field: displayName
              header: Display Name
            - field: e-mail
              header: Work Email
          type: object
        query:
          description: |
            The search query using Elasticsearch [Query String Query](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string) syntax from the Query DSL.
          example: '@accounts(disabled:true)'
          type: string
        fields:
          description: |
            The fields to be searched against in a multi-field query.
          example:
          - disabled
          items:
            type: string
          nullable: true
          type: array
        sort:
          description: |
            The fields to be used to sort the search results.
          example:
          - displayName
          items:
            type: string
          type: array
        filters:
          $ref: '#/components/schemas/SavedSearchDetail_filters'
      required:
      - indices
      - query
      type: object
    SearchArguments:
      example:
        owner: null
        recipients:
        - id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        - id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        scheduleId: 7a724640-0c17-4ce9-a8c3-4a89738459c8
      properties:
        scheduleId:
          description: |
            The ID of the scheduled search that triggered the saved search execution.
          example: 7a724640-0c17-4ce9-a8c3-4a89738459c8
          type: string
        owner:
          $ref: '#/components/schemas/SearchArguments_owner'
        recipients:
          description: |
            The email recipients of the scheduled search being tested.
          items:
            $ref: '#/components/schemas/TypedReference'
          type: array
      type: object
    ScheduledSearchName:
      properties:
        name:
          description: |
            The name of the scheduled search.
          example: Daily disabled accounts
          nullable: true
          type: string
        description:
          description: |
            The description of the scheduled search.
          example: Daily disabled accounts
          nullable: true
          type: string
      type: object
    SearchSchedule:
      properties:
        savedSearchId:
          description: The ID of the saved search that will be executed.
          example: 554f1511-f0a1-4744-ab14-599514d3e57c
          type: string
        created:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The date the scheduled search was initially created.
          readOnly: true
        modified:
          allOf:
          - $ref: '#/components/schemas/DateTime'
          description: The last date the scheduled search was modified.
          readOnly: true
        schedule:
          $ref: '#/components/schemas/Schedule'
        recipients:
          description: A list of identities that should receive the scheduled search
            report via email.
          items:
            $ref: '#/components/schemas/SearchSchedule_recipients_inner'
          type: array
        enabled:
          default: false
          description: |
            Indicates if the scheduled search is enabled.
          example: false
          type: boolean
        emailEmptyResults:
          default: false
          description: |
            Indicates if email generation should not be suppressed if search returns no results.
          example: false
          type: boolean
        displayQueryDetails:
          default: false
          description: |
            Indicates if the generated email should include the query and search results preview (which could include PII).
          example: false
          type: boolean
      required:
      - recipients
      - savedSearchId
      - schedule
      type: object
    TypedReference:
      description: |
        A typed reference to the object.
      example:
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: |
            The id of the object.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
      required:
      - id
      - type
      type: object
    Search:
      example:
        queryDsl:
          match:
            name: john.doe
        aggregationType: DSL
        aggregationsVersion: ""
        query:
          query: name:a*
          timeZone: America/Chicago
          fields:
          - name
          innerHit:
            query: source.name:\"Active Directory\"
            type: access
        aggregationsDsl: {}
        sort:
        - "[displayName, +id]"
        - "[displayName, +id]"
        filters: {}
        queryVersion: ""
        queryType: SAILPOINT
        includeNested: true
        queryResultFilter:
          excludes:
          - stacktrace
          includes:
          - name
          - displayName
        indices:
        - identities
        typeAheadQuery:
          field: source.name
          query: Work
          nestedType: access
          maxExpansions: 10
        searchAfter:
        - "[John Doe, 2c91808375d8e80a0175e1f88a575221]"
        - "[John Doe, 2c91808375d8e80a0175e1f88a575221]"
        aggregations: null
      properties:
        indices:
          description: "The names of the Elasticsearch indices in which to search.\
            \ If none are provided, then all indices will be searched."
          example:
          - identities
          externalDocs:
            description: Learn more about search indices here.
            url: https://documentation.sailpoint.com/saas/help/search/searchable-fields.html
          items:
            $ref: '#/components/schemas/Index'
          type: array
        queryType:
          $ref: '#/components/schemas/QueryType'
        queryVersion:
          allOf:
          - $ref: '#/components/schemas/ElasticVersion'
          - description: |-
              The version of the query object.
              This version number will map to the version of Elasticsearch for the query strings and objects being used.
            type: string
        query:
          $ref: '#/components/schemas/Query'
        queryDsl:
          description: "The search query using the Elasticsearch [Query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/7.10/query-dsl.html)\
            \ syntax."
          example:
            match:
              name: john.doe
          type: object
        typeAheadQuery:
          $ref: '#/components/schemas/TypeAheadQuery'
        includeNested:
          default: true
          description: Indicates whether nested objects from returned search results
            should be included.
          example: true
          type: boolean
        queryResultFilter:
          $ref: '#/components/schemas/QueryResultFilter'
        aggregationType:
          $ref: '#/components/schemas/AggregationType'
        aggregationsVersion:
          allOf:
          - $ref: '#/components/schemas/ElasticVersion'
          - description: |-
              The version of the language being used for aggregation queries.
              This version number will map to the version of Elasticsearch for the aggregation query object.
            type: string
        aggregationsDsl:
          description: "The aggregation search query using Elasticsearch [Aggregations](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/search-aggregations.html)\
            \ syntax."
          example: {}
          type: object
        aggregations:
          $ref: '#/components/schemas/SearchAggregationSpecification'
        sort:
          description: The fields to be used to sort the search results. Use + or
            - to specify the sort direction.
          items:
            example: "[displayName, +id]"
            type: string
          type: array
        searchAfter:
          description: "Used to begin the search window at the values specified.\n\
            This parameter consists of the last values of the sorted fields in the\
            \ current record set.\nThis is used to expand the Elasticsearch limit\
            \ of 10K records by shifting the 10K window to begin at this value.\n\
            It is recommended that you always include the ID of the object in addition\
            \ to any other fields on this parameter in order to ensure you don't get\
            \ duplicate results while paging.\nFor example, when searching for identities,\
            \ if you are sorting by displayName you will also want to include ID,\
            \ for example [\"displayName\", \"id\"]. \nIf the last identity ID in\
            \ the search result is 2c91808375d8e80a0175e1f88a575221 and the last displayName\
            \ is \"John Doe\", then using that displayName and ID will start a new\
            \ search after this identity.\nThe searchAfter value will look like [\"\
            John Doe\",\"2c91808375d8e80a0175e1f88a575221\"]"
          items:
            example: "[John Doe, 2c91808375d8e80a0175e1f88a575221]"
            type: string
          type: array
        filters:
          additionalProperties:
            $ref: '#/components/schemas/Filter'
          description: The filters to be applied for each filtered field name.
          example: {}
          type: object
      type: object
    AggregationResult:
      example:
        hits:
        - null
        - null
        aggregations:
          Identity Locations:
            buckets:
            - key: Austin
              doc_count: 109
            - key: London
              doc_count: 64
            - key: San Jose
              doc_count: 27
            - key: Brussels
              doc_count: 26
            - key: Sao Paulo
              doc_count: 24
            - key: Munich
              doc_count: 23
            - key: Singapore
              doc_count: 22
            - key: Tokyo
              doc_count: 20
            - key: Taipei
              doc_count: 16
      properties:
        aggregations:
          description: |
            The document containing the results of the aggregation. This document is controlled by Elasticsearch and depends on the type of aggregation query that is run.

            See Elasticsearch [Aggregations](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/search-aggregations.html) documentation for information.
          example:
            Identity Locations:
              buckets:
              - key: Austin
                doc_count: 109
              - key: London
                doc_count: 64
              - key: San Jose
                doc_count: 27
              - key: Brussels
                doc_count: 26
              - key: Sao Paulo
                doc_count: 24
              - key: Munich
                doc_count: 23
              - key: Singapore
                doc_count: 22
              - key: Tokyo
                doc_count: 20
              - key: Taipei
                doc_count: 16
          type: object
        hits:
          description: |
            The results of the aggregation search query.
          items:
            $ref: '#/components/schemas/SearchDocument'
          type: array
      type: object
    AggregationResult-csv:
      description: |
        If the *Accept:text/csv* header is specified and the *aggregationType* parameter in the request body is *SAILPOINT*,

        the aggregation result will be returned as a CSV document.
      example: "[Identity Locations,Count, Munich,23, Brussels,26, Singapore,22, Tokyo,20,\
        \ Taipei,16, London,64, Austin,109, Sao Paulo,24, San Jose,27]"
      type: string
    JsonPatch:
      description: "A JSONPatch document as defined by [RFC 6902 - JSON Patch](https://tools.ietf.org/html/rfc6902)"
      example:
        operations:
        - op: replace
          path: /description
          value: New description
        - op: replace
          path: /description
          value: New description
      properties:
        operations:
          description: Operations to be applied
          items:
            $ref: '#/components/schemas/JsonPatchOperation'
          type: array
      type: object
    PasswordInfoQueryDTO:
      example:
        sourceName: My-AD
        userName: Abby.Smith
      properties:
        userName:
          description: The login name of the user
          example: Abby.Smith
          type: string
        sourceName:
          description: The display name of the source
          example: My-AD
          type: string
      type: object
    PasswordInfo:
      example:
        sourceId: 2c918083746f642c01746f990884012a
        identityId: 2c918085744fec4301746f9a5bce4605
        policies:
        - passwordRepeatedChar is 3
        - passwordMinAlpha is 1
        - passwordMinLength is 5
        - passwordMinNumeric is 1
        publicKey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuGFkWi2J75TztpbaPKd36bJnIB3J8gZ6UcoS9oSDYsqBzPpTsfZXYaEf4Y4BKGgJIXmE/lwhwuj7mU1itdZ2qTSNFtnXA8Fn75c3UUkk+h+wdZbkuSmqlsJo3R1OnJkwkJggcAy9Jvk9jlcrNLWorpQ1w9raUvxtvfgkSdq153KxotenQ1HciSyZ0nA/Kw0UaucLnho8xdRowZs11afXGXA9IT9H6D8T6zUdtSxm0nAyH+mluma5LdTfaM50W3l/L8q56Vrqmx2pZIiwdx/0+g3Y++jV70zom0ZBkC1MmSoLMrQYG5OICNjr72f78B2PaGXfarQHqARLjKpMVt9YIQIDAQAB
        accounts:
        - accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          accountName: Abby.Smith
        - accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          accountName: Abby.Smith
        publicKeyId: N2M1OTJiMGEtMDJlZS00ZWU3LTkyYTEtNjA5YmI5NWE3ZWVh
      properties:
        identityId:
          description: Identity ID
          example: 2c918085744fec4301746f9a5bce4605
          type: string
        sourceId:
          description: source ID
          example: 2c918083746f642c01746f990884012a
          type: string
        publicKeyId:
          description: public key ID
          example: N2M1OTJiMGEtMDJlZS00ZWU3LTkyYTEtNjA5YmI5NWE3ZWVh
          type: string
        publicKey:
          description: User's public key with Base64 encoding
          example: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuGFkWi2J75TztpbaPKd36bJnIB3J8gZ6UcoS9oSDYsqBzPpTsfZXYaEf4Y4BKGgJIXmE/lwhwuj7mU1itdZ2qTSNFtnXA8Fn75c3UUkk+h+wdZbkuSmqlsJo3R1OnJkwkJggcAy9Jvk9jlcrNLWorpQ1w9raUvxtvfgkSdq153KxotenQ1HciSyZ0nA/Kw0UaucLnho8xdRowZs11afXGXA9IT9H6D8T6zUdtSxm0nAyH+mluma5LdTfaM50W3l/L8q56Vrqmx2pZIiwdx/0+g3Y++jV70zom0ZBkC1MmSoLMrQYG5OICNjr72f78B2PaGXfarQHqARLjKpMVt9YIQIDAQAB
          type: string
        accounts:
          description: Account info related to queried identity and source
          items:
            $ref: '#/components/schemas/PasswordInfoAccount'
          type: array
        policies:
          description: Password constraints
          example:
          - passwordRepeatedChar is 3
          - passwordMinAlpha is 1
          - passwordMinLength is 5
          - passwordMinNumeric is 1
          items:
            type: string
          type: array
      type: object
    PasswordChangeRequest:
      example:
        sourceId: 8a807d4c73c545510173c545d4b60246
        accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
        identityId: 8a807d4c73c545510173c545f0a002ff
        publicKeyId: YWQ2NjQ4MTItZjY0NC00MWExLWFjMjktOGNmMzU3Y2VlNjk2
        encryptedPassword: XzN+YwKgr2C+InkMYFMBG3UtjMEw5ZIql/XFlXo8cJNeslmkplx6vn4kd4/43IF9STBk5RnzR6XmjpEO+FwHDoiBwYZAkAZK/Iswxk4OdybG6Y4MStJCOCiK8osKr35IMMSV/mbO4wAeltoCk7daTWzTGLiI6UaT5tf+F2EgdjJZ7YqM8W8r7aUWsm3p2Xt01Y46ZRx0QaM91QruiIx2rECFT2pUO0wr+7oQ77jypATyGWRtADsu3YcvCk/6U5MqCnXMzKBcRas7NnZdSL/d5H1GglVGz3VLPMaivG4/oL4chOMmFCRl/zVsGxZ9RhN8rxsRGFFKn+rhExTi+bax3A==
      properties:
        identityId:
          description: The identity ID that requested the password change
          example: 8a807d4c73c545510173c545f0a002ff
          type: string
        encryptedPassword:
          description: The RSA encrypted password
          example: XzN+YwKgr2C+InkMYFMBG3UtjMEw5ZIql/XFlXo8cJNeslmkplx6vn4kd4/43IF9STBk5RnzR6XmjpEO+FwHDoiBwYZAkAZK/Iswxk4OdybG6Y4MStJCOCiK8osKr35IMMSV/mbO4wAeltoCk7daTWzTGLiI6UaT5tf+F2EgdjJZ7YqM8W8r7aUWsm3p2Xt01Y46ZRx0QaM91QruiIx2rECFT2pUO0wr+7oQ77jypATyGWRtADsu3YcvCk/6U5MqCnXMzKBcRas7NnZdSL/d5H1GglVGz3VLPMaivG4/oL4chOMmFCRl/zVsGxZ9RhN8rxsRGFFKn+rhExTi+bax3A==
          type: string
        publicKeyId:
          description: The encryption key ID
          example: YWQ2NjQ4MTItZjY0NC00MWExLWFjMjktOGNmMzU3Y2VlNjk2
          type: string
        accountId:
          description: Account ID of the account This is specified per account schema
            in the source configuration. It is used to distinguish accounts. More
            info can be found here https://community.sailpoint.com/t5/IdentityNow-Connectors/How-do-I-designate-an-account-attribute-as-the-Account-ID-for-a/ta-p/80350
          example: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          type: string
        sourceId:
          description: The ID of the source for which identity is requesting the password
            change
          example: 8a807d4c73c545510173c545d4b60246
          type: string
      type: object
    PasswordChangeResponse:
      example:
        requestId: 089899f13a8f4da7824996191587bab9
        state: IN_PROGRESS
      properties:
        requestId:
          description: The password change request ID
          example: 089899f13a8f4da7824996191587bab9
          nullable: true
          type: string
        state:
          description: Password change state
          enum:
          - IN_PROGRESS
          - FINISHED
          - FAILED
          example: IN_PROGRESS
          type: string
      type: object
    PasswordStatus:
      example:
        requestId: 089899f13a8f4da7824996191587bab9
        state: IN_PROGRESS
        errors:
        - The password change payload is invalid
        sourceIds:
        - 2c918083746f642c01746f990884012a
      properties:
        requestId:
          description: The password change request ID
          example: 089899f13a8f4da7824996191587bab9
          nullable: true
          type: string
        state:
          description: Password change state
          enum:
          - IN_PROGRESS
          - FINISHED
          - FAILED
          example: IN_PROGRESS
          type: string
        errors:
          description: The errors during the password change request
          example:
          - The password change payload is invalid
          items:
            type: string
          type: array
        sourceIds:
          description: List of source IDs in the password change request
          example:
          - 2c918083746f642c01746f990884012a
          items:
            type: string
          type: array
      type: object
    ProvisioningPolicyDto:
      example:
        name: example provisioning policy for inactive identities
        description: this provisioning policy creates access based on an identity
          going inactive
        fields:
        - isRequired: false
          transform:
            type: rule
            attributes:
              name: Create Unique LDAP Attribute
          isMultiValued: false
          name: userName
          attributes:
            template: "${firstname}.${lastname}${uniqueCounter}"
            cloudMaxUniqueChecks: "50"
            cloudMaxSize: "20"
            cloudRequired: "true"
          type: string
        - isRequired: false
          transform:
            type: rule
            attributes:
              name: Create Unique LDAP Attribute
          isMultiValued: false
          name: userName
          attributes:
            template: "${firstname}.${lastname}${uniqueCounter}"
            cloudMaxUniqueChecks: "50"
            cloudMaxSize: "20"
            cloudRequired: "true"
          type: string
        usageType: CREATE
      properties:
        name:
          description: the provisioning policy name
          example: example provisioning policy for inactive identities
          type: string
        description:
          description: the description of the provisioning policy
          example: this provisioning policy creates access based on an identity going
            inactive
          type: string
        usageType:
          $ref: '#/components/schemas/UsageType'
        fields:
          items:
            $ref: '#/components/schemas/FieldDetailsDto'
          type: array
      required:
      - name
      type: object
    UsageType:
      description: The type of ProvisioningPolicy usage.
      enum:
      - CREATE
      - UPDATE
      - DELETE
      - ASSIGN
      - UNASSIGN
      - CREATE_GROUP
      - UPDATE_GROUP
      - DELETE_GROUP
      - REGISTER
      - CREATE_IDENTITY
      - UPDATE_IDENTITY
      - EDIT_GROUP
      - ENABLE
      - DISABLE
      - UNLOCK
      - CHANGE_PASSWORD
      example: CREATE
      nullable: false
      type: string
    Schema:
      example:
        features:
        - PROVISIONING
        - NO_PERMISSIONS_PROVISIONING
        - GROUPS_HAVE_MEMBERS
        nativeObjectType: User
        configuration:
          groupMemberAttribute: member
        created: 2019-12-24T22:32:58.104Z
        includePermissions: false
        name: account
        hierarchyAttribute: memberOf
        modified: 2019-12-31T20:22:28.104Z
        attributes:
        - name: sAMAccountName
          type: STRING
          isMultiValued: false
          isEntitlement: false
          isGroup: false
        - name: memberOf
          type: STRING
          schema:
            type: CONNECTOR_SCHEMA
            id: 2c9180887671ff8c01767b4671fc7d60
            name: group
          description: Group membership
          isMultiValued: true
          isEntitlement: true
          isGroup: true
        id: 2c9180835d191a86015d28455b4a2329
        displayAttribute: distinguishedName
        identityAttribute: sAMAccountName
      properties:
        id:
          description: The id of the Schema.
          example: 2c9180835d191a86015d28455b4a2329
          type: string
        name:
          description: The name of the Schema.
          example: account
          type: string
        nativeObjectType:
          description: The name of the object type on the native system that the schema
            represents.
          example: User
          type: string
        identityAttribute:
          description: The name of the attribute used to calculate the unique identifier
            for an object in the schema.
          example: sAMAccountName
          type: string
        displayAttribute:
          description: The name of the attribute used to calculate the display value
            for an object in the schema.
          example: distinguishedName
          type: string
        hierarchyAttribute:
          description: The name of the attribute whose values represent other objects
            in a hierarchy. Only relevant to group schemas.
          example: memberOf
          type: string
        includePermissions:
          description: Flag indicating whether or not the include permissions with
            the object data when aggregating the schema.
          example: false
          type: boolean
        features:
          description: The features that the schema supports.
          example:
          - PROVISIONING
          - NO_PERMISSIONS_PROVISIONING
          - GROUPS_HAVE_MEMBERS
          items:
            $ref: '#/components/schemas/SourceFeature'
          type: array
        configuration:
          description: Holds any extra configuration data that the schema may require.
          example:
            groupMemberAttribute: member
          type: object
        attributes:
          description: The attribute definitions which form the schema.
          example:
          - name: sAMAccountName
            type: STRING
            isMultiValued: false
            isEntitlement: false
            isGroup: false
          - name: memberOf
            type: STRING
            schema:
              type: CONNECTOR_SCHEMA
              id: 2c9180887671ff8c01767b4671fc7d60
              name: group
            description: Group membership
            isMultiValued: true
            isEntitlement: true
            isGroup: true
          items:
            $ref: '#/components/schemas/AttributeDefinition'
          type: array
        created:
          description: The date the Schema was created.
          example: 2019-12-24T22:32:58.104Z
          format: date-time
          type: string
        modified:
          description: The date the Schema was last modified.
          example: 2019-12-31T20:22:28.104Z
          format: date-time
          type: string
      type: object
    AccessRequestType:
      description: Access request type. Defaults to GRANT_ACCESS. REVOKE_ACCESS type
        can only have a single Identity ID in the requestedFor field. Currently REVOKE_ACCESS
        is not supported for entitlements.
      enum:
      - GRANT_ACCESS
      - REVOKE_ACCESS
      example: GRANT_ACCESS
      type: string
    BaseCommonDto:
      properties:
        id:
          description: System-generated unique ID of the Object
          example: id12345
          readOnly: true
          type: string
        name:
          description: Name of the Object
          example: aName
          type: string
        created:
          description: Creation date of the Object
          example: 2015-05-28T14:07:17Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Last modification date of the Object
          example: 2015-05-28T14:07:17Z
          format: date-time
          readOnly: true
          type: string
      required:
      - name
      type: object
    CompletionStatus:
      description: The status after completion.
      enum:
      - SUCCESS
      - FAILURE
      - INCOMPLETE
      - PENDING
      example: SUCCESS
      nullable: true
      type: string
    IdentitySummary:
      example:
        identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
        name: SailPoint Services
        id: ff80818155fe8c080155fe8d925b0316
        completed: true
      nullable: true
      properties:
        id:
          description: ID of this identity summary
          example: ff80818155fe8c080155fe8d925b0316
          type: string
        name:
          description: Human-readable display name of identity
          example: SailPoint Services
          type: string
        identityId:
          description: ID of the identity that this summary represents
          example: c15b9f5cca5a4e9599eaa0e64fa921bd
          type: string
        completed:
          description: Indicates if all access items for this summary have been decided
            on
          example: true
          type: boolean
      type: object
    AccountActivityItem:
      example:
        approvalStatus: FINISHED
        reviewerComment:
          date: 2017-07-11T18:45:37.098Z
          commenterName: Adam Kennedy
          body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat.
          commenterId: 2c918084660f45d6016617daa9210584
        sourceId: 2c91808363ef85290164000587130c0c
        clientMetadata:
          customKey1: custom value 1
          customKey2: custom value 2
        removeDate: 2020-07-11T00:00:00Z
        reviewerIdentitySummary:
          identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
          name: SailPoint Services
          id: ff80818155fe8c080155fe8d925b0316
          completed: true
        requesterComment:
          date: 2017-07-11T18:45:37.098Z
          commenterName: Adam Kennedy
          body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat.
          commenterId: 2c918084660f45d6016617daa9210584
        accountRequestInfo:
          requestedObjectId: 2c91808563ef85690164001c31140c0c
          requestedObjectName: Treasury Analyst
          requestedObjectType: ACCESS_PROFILE
        nativeIdentity: Sandie.Camero
        requested: 2017-07-11T18:45:37.098Z
        provisioningStatus: PENDING
        name: 48c545831b264409a81befcabb0e3c5a
        id: 48c545831b264409a81befcabb0e3c5a
        attribute: detectedRoles
        operation: ADD
        value: "Treasury Analyst [AccessProfile-1529010191212]"
      properties:
        id:
          description: Item id
          example: 48c545831b264409a81befcabb0e3c5a
          type: string
        name:
          description: Human-readable display name of item
          example: 48c545831b264409a81befcabb0e3c5a
          type: string
        requested:
          description: Date and time item was requested
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        approvalStatus:
          $ref: '#/components/schemas/WorkItemState'
        provisioningStatus:
          $ref: '#/components/schemas/ProvisioningState'
        requesterComment:
          $ref: '#/components/schemas/Comment'
        reviewerIdentitySummary:
          $ref: '#/components/schemas/IdentitySummary'
        reviewerComment:
          $ref: '#/components/schemas/Comment'
        operation:
          $ref: '#/components/schemas/AccountActivityItemOperation'
        attribute:
          description: Attribute to which account activity applies
          example: detectedRoles
          nullable: true
          type: string
        value:
          description: Value of attribute
          example: "Treasury Analyst [AccessProfile-1529010191212]"
          nullable: true
          type: string
        nativeIdentity:
          description: Native identity in the target system to which the account activity
            applies
          example: Sandie.Camero
          nullable: true
          type: string
        sourceId:
          description: Id of Source to which account activity applies
          example: 2c91808363ef85290164000587130c0c
          type: string
        accountRequestInfo:
          $ref: '#/components/schemas/AccountRequestInfo'
        clientMetadata:
          additionalProperties:
            type: string
          description: "Arbitrary key-value pairs, if any were included in the corresponding\
            \ access request item"
          example:
            customKey1: custom value 1
            customKey2: custom value 2
          nullable: true
          type: object
        removeDate:
          description: The date the role or access profile is no longer assigned to
            the specified identity.
          example: 2020-07-11T00:00:00Z
          format: date-time
          nullable: true
          type: string
      type: object
    ExecutionStatus:
      description: The current state of execution.
      enum:
      - EXECUTING
      - VERIFYING
      - TERMINATED
      - COMPLETED
      example: COMPLETED
      type: string
    AccountActivityDocument:
      allOf:
      - $ref: '#/components/schemas/BaseDocument'
      - $ref: '#/components/schemas/AccountActivitySearchedItem_allOf'
      description: AccountActivity
    AggregationDocument:
      allOf:
      - $ref: '#/components/schemas/BaseDocument'
      - $ref: '#/components/schemas/Aggregation_allOf'
      description: Aggregation
    ApprovalItemDetails:
      example:
        application: Active Directory
        attributeValue: a@b.com
        attributeName: emailAddress
        id: 2c9180835d2e5168015d32f890ca1581
        state: FINISHED
        account: john.smith
        attributeOperation: update
      properties:
        id:
          description: ID of the approval item
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        account:
          description: The account referenced by the approval item
          example: john.smith
          type: string
        application:
          description: The name the application/source
          example: Active Directory
          type: string
        attributeName:
          description: The name of the attribute
          example: emailAddress
          type: string
        attributeOperation:
          description: The operation of the attribute
          example: update
          type: string
        attributeValue:
          description: The value of the attribute
          example: a@b.com
          type: string
        state:
          $ref: '#/components/schemas/WorkItemState'
      type: object
    CampaignReference:
      example:
        campaignType: MANAGER
        name: Campaign Name
        description: A description of the campaign
        id: ef38f94347e94562b5bb8424a56397d8
        type: CAMPAIGN
      properties:
        id:
          description: The unique ID of the campaign.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        name:
          description: The name of the campaign.
          example: Campaign Name
          type: string
        type:
          description: The type of object that is being referenced.
          enum:
          - CAMPAIGN
          example: CAMPAIGN
          type: string
        campaignType:
          description: The type of the campaign.
          enum:
          - MANAGER
          - SOURCE_OWNER
          - SEARCH
          example: MANAGER
          type: string
        description:
          description: The description of the campaign set by the admin who created
            it.
          example: A description of the campaign
          nullable: true
          type: string
      required:
      - campaignType
      - description
      - id
      - name
      - type
      type: object
    AccessProfileEntitlement:
      allOf:
      - $ref: '#/components/schemas/Access'
      - $ref: '#/components/schemas/EntitlementSummary_allOf'
      description: EntitlementReference
    EventDocument:
      allOf:
      - $ref: '#/components/schemas/BaseDocument'
      - $ref: '#/components/schemas/Event_allOf'
      description: Event
    IdentityExceptionReportReference:
      nullable: true
      properties:
        taskResultId:
          description: The id of the task result.
          example: 2b838de9-db9b-abcf-e646-d4f274ad4238
          format: uuid
          type: string
        reportName:
          description: The name of the report.
          example: My annual report
          type: string
      type: object
    ReassignReference:
      example:
        id: ef38f94347e94562b5bb8424a56397d8
        type: ITEM
      properties:
        id:
          description: The ID of item or identity being reassigned.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        type:
          description: The type of item or identity being reassigned.
          enum:
          - TARGET_SUMMARY
          - ITEM
          - IDENTITY_SUMMARY
          example: ITEM
          type: string
      required:
      - id
      - type
      type: object
    RemediationItemDetails:
      example:
        targetName: john.smith
        targetId: 2c9180835d2e5168015d32f890ca1581
        attributeValue: 512-555-1212
        targetDisplayName: emailAddress
        attributeName: phoneNumber
        id: 2c9180835d2e5168015d32f890ca1581
        applicationName: Active Directory
        attributeOperation: update
        nativeIdentity: jason.smith2
      properties:
        id:
          description: The ID of the certification
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        targetId:
          description: The ID of the certification target
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        targetName:
          description: The name of the certification target
          example: john.smith
          type: string
        targetDisplayName:
          description: The display name of the certification target
          example: emailAddress
          type: string
        applicationName:
          description: The name of the application/source
          example: Active Directory
          type: string
        attributeName:
          description: The name of the attribute being certified
          example: phoneNumber
          type: string
        attributeOperation:
          description: The operation of the certification on the attribute
          example: update
          type: string
        attributeValue:
          description: The value of the attribute being certified
          example: 512-555-1212
          type: string
        nativeIdentity:
          description: The native identity of the target
          example: jason.smith2
          type: string
      type: object
    AccessProfileRole:
      allOf:
      - $ref: '#/components/schemas/Access'
      - $ref: '#/components/schemas/RoleSummary_allOf'
      description: Role
    ManagerCorrelationMapping:
      example:
        accountAttribute: manager
        identityAttribute: manager
      properties:
        accountAttribute:
          description: Name of the attribute to use for manager correlation. The value
            found on the account attribute will be used to lookup the manager's identity.
          example: manager
          type: string
        identityAttribute:
          description: Name of the identity attribute to search when trying to find
            a manager using the value from the accountAttribute.
          example: manager
          type: string
      type: object
    SourceFeature:
      description: |-
        Optional features that can be supported by an source.
        * AUTHENTICATE: The source supports pass-through authentication.
        * COMPOSITE: The source supports composite source creation.
        * DIRECT_PERMISSIONS: The source supports returning DirectPermissions.
        * DISCOVER_SCHEMA: The source supports discovering schemas for users and groups.
        * ENABLE The source supports reading if an account is enabled or disabled.
        * MANAGER_LOOKUP: The source supports looking up managers as they are encountered in a feed. This is the opposite of NO_RANDOM_ACCESS.
        * NO_RANDOM_ACCESS: The source does not support random access and the getObject() methods should not be called and expected to perform.
        * PROXY: The source can serve as a proxy for another source. When an source has a proxy, all connector calls made with that source are redirected through the connector for the proxy source.
        * SEARCH
        * TEMPLATE
        * UNLOCK: The source supports reading if an account is locked or unlocked.
        * UNSTRUCTURED_TARGETS: The source supports returning unstructured Targets.
        * SHAREPOINT_TARGET: The source supports returning unstructured Target data for SharePoint. It will be typically used by AD, LDAP sources.
        * PROVISIONING: The source can both read and write accounts. Having this feature implies that the provision() method is implemented. It also means that direct and target permissions can also be provisioned if they can be returned by aggregation.
        * GROUP_PROVISIONING: The source can both read and write groups. Having this feature implies that the provision() method is implemented.
        * SYNC_PROVISIONING: The source can provision accounts synchronously.
        * PASSWORD: The source can provision password changes. Since sources can never read passwords, this is should only be used in conjunction with the PROVISIONING feature.
        * CURRENT_PASSWORD: Some source types support verification of the current password
        * ACCOUNT_ONLY_REQUEST: The source supports requesting accounts without entitlements.
        * ADDITIONAL_ACCOUNT_REQUEST: The source supports requesting additional accounts.
        * NO_AGGREGATION: A source that does not support aggregation.
        * GROUPS_HAVE_MEMBERS: The source models group memberships with a member attribute on the group object rather than a groups attribute on the account object. This effects the implementation of delta account aggregation.
        * NO_PERMISSIONS_PROVISIONING: Indicates that the connector cannot provision direct or target permissions for accounts. When DIRECT_PERMISSIONS and PROVISIONING features are present, it is assumed that the connector can also provision direct permissions. This feature disables that assumption and causes permission request to be converted to work items for accounts.
        * NO_GROUP_PERMISSIONS_PROVISIONING: Indicates that the connector cannot provision direct or target permissions for groups. When DIRECT_PERMISSIONS and PROVISIONING features are present, it is assumed that the connector can also provision direct permissions. This feature disables that assumption and causes permission request to be converted to work items for groups.
        * NO_UNSTRUCTURED_TARGETS_PROVISIONING: This string will be replaced by NO_GROUP_PERMISSIONS_PROVISIONING and NO_PERMISSIONS_PROVISIONING.
        * NO_DIRECT_PERMISSIONS_PROVISIONING: This string will be replaced by NO_GROUP_PERMISSIONS_PROVISIONING and NO_PERMISSIONS_PROVISIONING.
      enum:
      - AUTHENTICATE
      - COMPOSITE
      - DIRECT_PERMISSIONS
      - DISCOVER_SCHEMA
      - ENABLE
      - MANAGER_LOOKUP
      - NO_RANDOM_ACCESS
      - PROXY
      - SEARCH
      - TEMPLATE
      - UNLOCK
      - UNSTRUCTURED_TARGETS
      - SHAREPOINT_TARGET
      - PROVISIONING
      - GROUP_PROVISIONING
      - SYNC_PROVISIONING
      - PASSWORD
      - CURRENT_PASSWORD
      - ACCOUNT_ONLY_REQUEST
      - ADDITIONAL_ACCOUNT_REQUEST
      - NO_AGGREGATION
      - GROUPS_HAVE_MEMBERS
      - NO_PERMISSIONS_PROVISIONING
      - NO_GROUP_PERMISSIONS_PROVISIONING
      - NO_UNSTRUCTURED_TARGETS_PROVISIONING
      - NO_DIRECT_PERMISSIONS_PROVISIONING
      example: AUTHENTICATE
      type: string
    WorkItemState:
      description: The state of a work item
      enum:
      - FINISHED
      - REJECTED
      - RETURNED
      - EXPIRED
      - PENDING
      - CANCELED
      example: FINISHED
      type: string
    WorkItemType:
      description: The type of the work item
      enum:
      - UNKNOWN
      - GENERIC
      - CERTIFICATION
      - REMEDIATION
      - DELEGATION
      - APPROVAL
      - VIOLATIONREVIEW
      - FORM
      - POLICYVIOLATION
      - CHALLENGE
      - IMPACTANALYSIS
      - SIGNOFF
      - EVENT
      - MANUALACTION
      - TEST
      example: GENERIC
      type: string
    FormDetails:
      example:
        subtitle: Please select from the following
        name: AccountSelection Form
        id: 2c9180835d2e5168015d32f890ca1581
        title: Account Selection for John.Doe
        targetUser: Jane.Doe
        sections: null
      properties:
        id:
          description: ID of the form
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: Name of the form
          example: AccountSelection Form
          type: string
        title:
          description: The form title
          example: Account Selection for John.Doe
          type: string
        subtitle:
          description: The form subtitle.
          example: Please select from the following
          type: string
        targetUser:
          description: The name of the user that should be shown this form
          example: Jane.Doe
          type: string
        sections:
          $ref: '#/components/schemas/SectionDetails'
      type: object
    ErrorMessageDto:
      example:
        localeOrigin: DEFAULT
        text: The request was syntactically correct but its content is semantically
          invalid.
        locale: en-US
      properties:
        locale:
          description: "The locale for the message text, a BCP 47 language tag."
          example: en-US
          type: string
        localeOrigin:
          $ref: '#/components/schemas/LocaleOrigin'
        text:
          description: Actual text of the error message in the indicated locale.
          example: The request was syntactically correct but its content is semantically
            invalid.
          type: string
      type: object
    RequestOnBehalfOfConfig:
      example:
        allowRequestOnBehalfOfEmployeeByManager: true
        allowRequestOnBehalfOfAnyoneByAnyone: true
      properties:
        allowRequestOnBehalfOfAnyoneByAnyone:
          description: If anyone can request access for anyone.
          example: true
          type: boolean
        allowRequestOnBehalfOfEmployeeByManager:
          description: If a manager can request access for his/her direct reports.
          example: true
          type: boolean
      type: object
    ApprovalReminderAndEscalationConfig:
      example:
        fallbackApproverRef:
          name: Alison Ferguso
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
          email: alison.ferguso@identitysoon.com
        maxReminders: 0
        daysUntilEscalation: 0
        daysBetweenReminders: 0
      properties:
        daysUntilEscalation:
          description: "Number of days to wait before the first reminder. If no reminders\
            \ are configured, then this is the number of days to wait before escalation."
          example: 0
          format: int32
          type: integer
        daysBetweenReminders:
          description: Number of days to wait between reminder notifications.
          example: 0
          format: int32
          type: integer
        maxReminders:
          description: Maximum number of reminder notification to send to the reviewer
            before approval escalation.
          example: 0
          format: int32
          type: integer
        fallbackApproverRef:
          $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
      type: object
    EntitlementRequestConfig:
      example:
        requestCommentsRequired: false
        deniedCommentsRequired: false
        allowEntitlementRequest: true
        grantRequestApprovalSchemes: "sourceOwner, manager, workgroup:2c918084660f45d6016617daa9210584"
      properties:
        allowEntitlementRequest:
          description: Flag for allowing entitlement request.
          example: true
          type: boolean
        requestCommentsRequired:
          default: false
          description: Flag for requiring comments while submitting an entitlement
            request.
          example: false
          type: boolean
        deniedCommentsRequired:
          default: false
          description: Flag for requiring comments while rejecting an entitlement
            request.
          example: false
          type: boolean
        grantRequestApprovalSchemes:
          default: sourceOwner
          description: |
            Approval schemes for granting entitlement request. This can be empty if no approval is needed.
            Multiple schemes must be comma-separated. The valid schemes are "sourceOwner", "manager" and "workgroup:{id}".
            Multiple workgroups (governance groups) can be used.
          example: "sourceOwner, manager, workgroup:2c918084660f45d6016617daa9210584"
          type: string
      type: object
    CancelledRequestDetails:
      description: Provides additional details for a request that has been cancelled.
      example:
        owner:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        modified: 2019-12-20T09:17:12.192Z
        comment: Nisl quis ipsum quam quisque condimentum nunc ut dolor nunc.
      properties:
        comment:
          description: Comment made by the owner when cancelling the associated request.
          example: Nisl quis ipsum quam quisque condimentum nunc ut dolor nunc.
          type: string
        owner:
          $ref: '#/components/schemas/BaseReferenceDto'
        modified:
          description: Date comment was added by the owner when cancelling the associated
            request
          example: 2019-12-20T09:17:12.192Z
          format: date-time
          type: string
      type: object
    ErrorMessageDtoList:
      items:
        $ref: '#/components/schemas/ErrorMessageDto'
      type: array
    RequestedItemStatusRequestState:
      description: |-
        Indicates the state of an access request:
        * EXECUTING: The request is executing, which indicates the system is doing some processing.
        * REQUEST_COMPLETED: Indicates the request  has been completed.
        * CANCELLED: The request was cancelled with no user input.
        * TERMINATED: The request has been terminated before it was able to complete.
        * PROVISIONING_VERIFICATION_PENDING: The request has finished any approval steps and provisioning is waiting to be verified.
        * REJECTED: The request was rejected.
        * PROVISIONING_FAILED: The request has failed to complete.
        * NOT_ALL_ITEMS_PROVISIONED: One or more of the requested items failed to complete, but there were one or more  successes.
        * ERROR: An error occurred during request processing.
      enum:
      - EXECUTING
      - REQUEST_COMPLETED
      - CANCELLED
      - TERMINATED
      - PROVISIONING_VERIFICATION_PENDING
      - REJECTED
      - PROVISIONING_FAILED
      - NOT_ALL_ITEMS_PROVISIONED
      - ERROR
      example: EXECUTING
      type: string
    ApprovalStatusDto:
      example:
        errorMessages:
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        removeDate: 2020-07-11T00:00:00Z
        originalOwner:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        scheme: MANAGER
        currentOwner:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        modified: 2019-08-23T18:52:57.398Z
        comment: I approve this request
        reviewedBy:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        forwarded: false
        status: PENDING
      properties:
        forwarded:
          description: True if the request for this item was forwarded from one owner
            to another.
          example: false
          type: boolean
        originalOwner:
          $ref: '#/components/schemas/BaseReferenceDto'
        currentOwner:
          $ref: '#/components/schemas/BaseReferenceDto'
        reviewedBy:
          $ref: '#/components/schemas/BaseReferenceDto'
        modified:
          description: Time at which item was modified.
          example: 2019-08-23T18:52:57.398Z
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ManualWorkItemState'
        scheme:
          $ref: '#/components/schemas/ApprovalScheme'
        errorMessages:
          description: "If the request failed, includes any error messages that were\
            \ generated."
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
        comment:
          description: "Comment, if any, provided by the approver."
          example: I approve this request
          type: string
        removeDate:
          description: The date the role or access profile is no longer assigned to
            the specified identity.
          example: 2020-07-11T00:00:00Z
          format: date-time
          type: string
      type: object
    ManualWorkItemDetails:
      example:
        originalOwner:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        currentOwner:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        modified: 2019-08-23T18:52:57.398Z
        forwarded: true
        status: PENDING
      properties:
        forwarded:
          description: True if the request for this item was forwarded from one owner
            to another.
          example: true
          type: boolean
        originalOwner:
          $ref: '#/components/schemas/BaseReferenceDto'
        currentOwner:
          $ref: '#/components/schemas/BaseReferenceDto'
        modified:
          description: Time at which item was modified.
          example: 2019-08-23T18:52:57.398Z
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ManualWorkItemState'
      type: object
    SodViolationContextCheckCompleted:
      description: An object referencing a completed SOD violation check
      example:
        violationCheckResult:
          clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          violationContexts:
          - conflictingAccessCriteria:
              leftCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
              rightCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
            policy:
              name: William Wilson
              id: 2c91808568c529c60168cca6f90c1313
              type: IDENTITY
          - conflictingAccessCriteria:
              leftCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
              rightCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
            policy:
              name: William Wilson
              id: 2c91808568c529c60168cca6f90c1313
              type: IDENTITY
          violatedPolicies:
          - name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          - name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
          message:
            localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
        state: SUCCESS
        uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
      properties:
        state:
          description: The status of SOD violation check
          enum:
          - SUCCESS
          - ERROR
          example: SUCCESS
          type: string
        uuid:
          description: The id of the Violation check event
          example: f73d16e9-a038-46c5-b217-1246e15fdbdd
          type: string
        violationCheckResult:
          $ref: '#/components/schemas/SodViolationCheckResult'
      type: object
    ProvisioningDetails:
      description: Provides additional details about provisioning for this request.
      example:
        orderedSubPhaseReferences: manualWorkItemDetails
      properties:
        orderedSubPhaseReferences:
          description: "Ordered CSV of sub phase references to objects that contain\
            \ more information about provisioning. For example, this can contain \"\
            manualWorkItemDetails\" which indicate that there is further information\
            \ in that object for this phase."
          example: manualWorkItemDetails
          type: string
      type: object
    PreApprovalTriggerDetails:
      description: Provides additional details about the pre-approval trigger for
        this request.
      example:
        decision: APPROVED
        comment: Access is Approved
        reviewer: John Doe
      properties:
        comment:
          description: Comment left for the pre-approval decision
          example: Access is Approved
          type: string
        reviewer:
          description: The reviewer of the pre-approval decision
          example: John Doe
          type: string
        decision:
          description: The decision of the pre-approval trigger
          enum:
          - APPROVED
          - REJECTED
          example: APPROVED
          type: string
      type: object
    AccessRequestPhases:
      description: Provides additional details about this access request phase.
      example:
        result: SUCCESSFUL
        phaseReference: approvalDetails
        name: APPROVAL_PHASE
        started: 2020-07-11T00:00:00Z
        finished: 2020-07-12T00:00:00Z
        state: COMPLETED
      properties:
        started:
          description: The time that this phase started.
          example: 2020-07-11T00:00:00Z
          format: date-time
          type: string
        finished:
          description: The time that this phase finished.
          example: 2020-07-12T00:00:00Z
          format: date-time
          type: string
        name:
          description: The name of this phase.
          example: APPROVAL_PHASE
          type: string
        state:
          description: The state of this phase.
          enum:
          - PENDING
          - EXECUTING
          - COMPLETED
          - CANCELLED
          example: COMPLETED
          type: string
        result:
          description: The state of this phase.
          enum:
          - SUCCESSFUL
          - FAILED
          example: SUCCESSFUL
          type: string
        phaseReference:
          description: "A reference to another object on the RequestedItemStatus that\
            \ contains more details about the phase. Note that for the Provisioning\
            \ phase, this will be empty if there are no manual work items."
          example: approvalDetails
          type: string
      type: object
    RequestableObjectReference:
      example:
        name: Applied Research Access
        description: "Access to research information, lab results, and schematics"
        id: 2c9180835d2e5168015d32f890ca1581
        type: ROLE
      properties:
        id:
          description: Id of the object.
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: Name of the object.
          example: Applied Research Access
          type: string
        description:
          description: Description of the object.
          example: "Access to research information, lab results, and schematics"
          type: string
        type:
          description: Type of the object.
          enum:
          - ACCESS_PROFILE
          - ROLE
          - ENTITLEMENT
          example: ROLE
          type: string
      type: object
    ApprovalForwardHistory:
      example:
        modified: 2019-08-23T18:52:57.398Z
        oldApproverName: frank.mir
        newApproverName: al.volta
        comment: Fusce id orci vel consectetur amet ipsum quam.
      properties:
        oldApproverName:
          description: Display name of approver that forwarded the approval.
          example: frank.mir
          type: string
        newApproverName:
          description: Display name of approver to whom the approval was forwarded.
          example: al.volta
          type: string
        comment:
          description: Comment made by old approver when forwarding.
          example: Fusce id orci vel consectetur amet ipsum quam.
          type: string
        modified:
          description: Time at which approval was forwarded.
          example: 2019-08-23T18:52:57.398Z
          format: date-time
          type: string
      type: object
    PendingApprovalAction:
      description: Enum represents action that is being processed on an approval.
      enum:
      - APPROVED
      - REJECTED
      - FORWARDED
      example: APPROVED
      type: string
    CompletedApprovalState:
      description: Enum represents completed approval object's state.
      enum:
      - APPROVED
      - REJECTED
      example: APPROVED
      type: string
    DtoType:
      description: An enumeration of the types of DTOs supported within the IdentityNow
        infrastructure.
      enum:
      - ACCOUNT_CORRELATION_CONFIG
      - ACCESS_PROFILE
      - ACCESS_REQUEST_APPROVAL
      - ACCOUNT
      - APPLICATION
      - CAMPAIGN
      - CAMPAIGN_FILTER
      - CERTIFICATION
      - CLUSTER
      - CONNECTOR_SCHEMA
      - ENTITLEMENT
      - GOVERNANCE_GROUP
      - IDENTITY
      - IDENTITY_PROFILE
      - IDENTITY_REQUEST
      - LIFECYCLE_STATE
      - PASSWORD_POLICY
      - ROLE
      - RULE
      - SOD_POLICY
      - SOURCE
      - TAG_CATEGORY
      - TASK_RESULT
      - REPORT_RESULT
      - SOD_VIOLATION
      - ACCOUNT_ACTIVITY
      example: IDENTITY
      type: string
    CertificationPhase:
      description: |
        The current phase of the campaign.
        * `STAGED`: The campaign is waiting to be activated.
        * `ACTIVE`: The campaign is active.
        * `SIGNED`: The reviewer has signed off on the campaign, and it is considered complete.
      enum:
      - STAGED
      - ACTIVE
      - SIGNED
      example: ACTIVE
      type: string
    CertificationDecision:
      description: The decision to approve or revoke the review item
      enum:
      - APPROVE
      - REVOKE
      example: APPROVE
      type: string
    ReviewRecommendation:
      example:
        reasons:
        - Reason 1
        - Reason 2
        recommendation: recommendation
        timestamp: 2020-06-01T13:49:37.385Z
      properties:
        recommendation:
          description: The recommendation from IAI at the time of the decision. This
            field will be null if no recommendation was made.
          nullable: true
          type: string
          example: null
        reasons:
          description: A list of reasons for the recommendation.
          example:
          - Reason 1
          - Reason 2
          items:
            type: string
          type: array
        timestamp:
          description: The time at which the recommendation was recorded.
          example: 2020-06-01T13:49:37.385Z
          format: date-time
          type: string
      type: object
    ReviewableEntitlement:
      example:
        owner:
          name: Alison Ferguso
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
          email: alison.ferguso@identitysoon.com
        hasPermissions: false
        attributeValue: CN=entitlement.bbb7c650
        description: Gives read/write access to the company database
        isPermission: false
        revocable: true
        privileged: false
        sourceType: Active Directory - Direct
        name: CN=entitlement.bbb7c650
        attributeName: memberOf
        sourceSchemaObjectType: groups
        id: 2c918085718230600171993742c63558
        sourceName: ODS-AD-Source
        cloudGoverned: false
        account:
          created: 2020-04-20T20:11:05.067Z
          name: Alison Ferguso
          modified: 2020-05-20T18:57:16.987Z
          disabled: false
          id: 2c9180857182305e0171993737eb29e6
          locked: false
          type: IDENTITY
          nativeIdentity: CN=Alison Ferguso
      nullable: true
      properties:
        id:
          description: The id for the entitlement
          example: 2c918085718230600171993742c63558
          type: string
        name:
          description: The name of the entitlement
          example: CN=entitlement.bbb7c650
          type: string
        description:
          description: Information about the entitlement
          example: Gives read/write access to the company database
          nullable: true
          type: string
        privileged:
          description: Indicates if the entitlement is a privileged entitlement
          example: false
          type: boolean
        owner:
          $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
        attributeName:
          description: The name of the attribute on the source
          example: memberOf
          type: string
        attributeValue:
          description: The value of the attribute on the source
          example: CN=entitlement.bbb7c650
          type: string
        sourceSchemaObjectType:
          description: The schema object type on the source used to represent the
            entitlement and its attributes
          example: groups
          type: string
        sourceName:
          description: The name of the source for which this entitlement belongs
          example: ODS-AD-Source
          type: string
        sourceType:
          description: The type of the source for which the entitlement belongs
          example: Active Directory - Direct
          type: string
        hasPermissions:
          description: Indicates if the entitlement has permissions
          example: false
          type: boolean
        isPermission:
          description: Indicates if the entitlement is a representation of an account
            permission
          example: false
          type: boolean
        revocable:
          description: Indicates whether the entitlement can be revoked
          example: true
          type: boolean
        cloudGoverned:
          description: True if the entitlement is cloud governed
          example: false
          type: boolean
        account:
          $ref: '#/components/schemas/ReviewableEntitlement_account'
      type: object
    ReviewableAccessProfile:
      example:
        privileged: false
        owner:
          name: Alison Ferguso
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
          email: alison.ferguso@identitysoon.com
        entitlements:
        - owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          hasPermissions: false
          attributeValue: CN=entitlement.bbb7c650
          description: Gives read/write access to the company database
          isPermission: false
          revocable: true
          privileged: false
          sourceType: Active Directory - Direct
          name: CN=entitlement.bbb7c650
          attributeName: memberOf
          sourceSchemaObjectType: groups
          id: 2c918085718230600171993742c63558
          sourceName: ODS-AD-Source
          cloudGoverned: false
          account:
            created: 2020-04-20T20:11:05.067Z
            name: Alison Ferguso
            modified: 2020-05-20T18:57:16.987Z
            disabled: false
            id: 2c9180857182305e0171993737eb29e6
            locked: false
            type: IDENTITY
            nativeIdentity: CN=Alison Ferguso
        - owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          hasPermissions: false
          attributeValue: CN=entitlement.bbb7c650
          description: Gives read/write access to the company database
          isPermission: false
          revocable: true
          privileged: false
          sourceType: Active Directory - Direct
          name: CN=entitlement.bbb7c650
          attributeName: memberOf
          sourceSchemaObjectType: groups
          id: 2c918085718230600171993742c63558
          sourceName: ODS-AD-Source
          cloudGoverned: false
          account:
            created: 2020-04-20T20:11:05.067Z
            name: Alison Ferguso
            modified: 2020-05-20T18:57:16.987Z
            disabled: false
            id: 2c9180857182305e0171993737eb29e6
            locked: false
            type: IDENTITY
            nativeIdentity: CN=Alison Ferguso
        endDate: 2021-12-25T00:00:00Z
        created: 2021-01-01T22:32:58.104Z
        name: Employee-database-read-write
        description: Collection of entitlements to read/write the employee database
        modified: 2021-02-01T22:32:58.104Z
        id: 2c91808a7190d06e01719938fcd20792
        cloudGoverned: false
      properties:
        id:
          description: The id of the Access Profile
          example: 2c91808a7190d06e01719938fcd20792
          type: string
        name:
          description: Name of the Access Profile
          example: Employee-database-read-write
          type: string
        description:
          description: Information about the Access Profile
          example: Collection of entitlements to read/write the employee database
          type: string
        privileged:
          description: Indicates if the entitlement is a privileged entitlement
          example: false
          type: boolean
        cloudGoverned:
          description: True if the entitlement is cloud governed
          example: false
          type: boolean
        endDate:
          description: The date at which a user's access expires
          example: 2021-12-25T00:00:00Z
          format: date-time
          nullable: true
          type: string
        owner:
          $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
        entitlements:
          description: A list of entitlements associated with this Access Profile
          items:
            $ref: '#/components/schemas/ReviewableEntitlement'
          type: array
        created:
          description: Date the Access Profile was created.
          example: 2021-01-01T22:32:58.104Z
          format: date-time
          type: string
        modified:
          description: Date the Access Profile was last modified.
          example: 2021-02-01T22:32:58.104Z
          format: date-time
          type: string
      type: object
    ReviewableRole:
      example:
        privileged: false
        owner:
          name: Alison Ferguso
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
          email: alison.ferguso@identitysoon.com
        endDate: 2021-12-25T00:00:00Z
        accessProfiles:
        - privileged: false
          owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          entitlements:
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              disabled: false
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              disabled: false
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
          endDate: 2021-12-25T00:00:00Z
          created: 2021-01-01T22:32:58.104Z
          name: Employee-database-read-write
          description: Collection of entitlements to read/write the employee database
          modified: 2021-02-01T22:32:58.104Z
          id: 2c91808a7190d06e01719938fcd20792
          cloudGoverned: false
        - privileged: false
          owner:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          entitlements:
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              disabled: false
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
          - owner:
              name: Alison Ferguso
              id: 5168015d32f890ca15812c9180835d2e
              type: IDENTITY
              email: alison.ferguso@identitysoon.com
            hasPermissions: false
            attributeValue: CN=entitlement.bbb7c650
            description: Gives read/write access to the company database
            isPermission: false
            revocable: true
            privileged: false
            sourceType: Active Directory - Direct
            name: CN=entitlement.bbb7c650
            attributeName: memberOf
            sourceSchemaObjectType: groups
            id: 2c918085718230600171993742c63558
            sourceName: ODS-AD-Source
            cloudGoverned: false
            account:
              created: 2020-04-20T20:11:05.067Z
              name: Alison Ferguso
              modified: 2020-05-20T18:57:16.987Z
              disabled: false
              id: 2c9180857182305e0171993737eb29e6
              locked: false
              type: IDENTITY
              nativeIdentity: CN=Alison Ferguso
          endDate: 2021-12-25T00:00:00Z
          created: 2021-01-01T22:32:58.104Z
          name: Employee-database-read-write
          description: Collection of entitlements to read/write the employee database
          modified: 2021-02-01T22:32:58.104Z
          id: 2c91808a7190d06e01719938fcd20792
          cloudGoverned: false
        name: Accounting-Employees
        description: Role for members of the accounting department with the necessary
          Access Profiles
        id: 2c91808a7190d06e0171993907fd0794
        revocable: false
      nullable: true
      properties:
        id:
          description: The id for the Role
          example: 2c91808a7190d06e0171993907fd0794
          type: string
        name:
          description: The name of the Role
          example: Accounting-Employees
          type: string
        description:
          description: Information about the Role
          example: Role for members of the accounting department with the necessary
            Access Profiles
          type: string
        privileged:
          description: Indicates if the entitlement is a privileged entitlement
          example: false
          type: boolean
        owner:
          $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
        revocable:
          description: Indicates whether the Role can be revoked or requested
          example: false
          type: boolean
        endDate:
          description: The date when a user's access expires.
          example: 2021-12-25T00:00:00Z
          format: date-time
          type: string
        accessProfiles:
          description: The list of Access Profiles associated with this Role
          items:
            $ref: '#/components/schemas/ReviewableAccessProfile'
          type: array
      type: object
    EmailNotificationOption:
      description: This is used for representing email configuration for a lifecycle
        state
      properties:
        notifyManagers:
          description: "If true, then the manager is notified of the lifecycle state\
            \ change."
          example: true
          type: boolean
        notifyAllAdmins:
          description: "If true, then all the admins are notified of the lifecycle\
            \ state change."
          example: true
          type: boolean
        notifySpecificUsers:
          description: "If true, then the users specified in \"emailAddressList\"\
            \ below are notified of lifecycle state change."
          example: true
          type: boolean
        emailAddressList:
          description: "List of user email addresses. If \"notifySpecificUsers\" option\
            \ is true, then these users are notified of lifecycle state change."
          example:
          - test@test.com
          - test2@test.com
          items:
            type: string
          type: array
      type: object
    AccountAction:
      description: Object for specifying Actions to be performed on a specified list
        of sources' account.
      properties:
        action:
          description: Describes if action will be enabled or disabled
          enum:
          - ENABLE
          - DISABLE
          example: ENABLE
          type: string
        sourceIds:
          description: List of unique source IDs. The sources must have the ENABLE
            feature or flat file source. See "/sources" endpoint for source features.
          example:
          - 2c918084660f45d6016617daa9210584
          - 2c918084660f45d6016617daa9210500
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    SpConfigMessage:
      description: Message model for Config Import/Export.
      example:
        details:
          details: message details
        text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
          \ name: random identity]"
        key: UNKNOWN_REFERENCE_RESOLVER
      properties:
        key:
          description: Message key.
          example: UNKNOWN_REFERENCE_RESOLVER
          type: string
        text:
          description: Message text.
          example: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          type: string
        details:
          additionalProperties: true
          description: "Message details if any, in key:value pairs."
          example:
            details: message details
          type: object
      required:
      - details
      - key
      - text
      title: Config Import/Export Message
      type: object
    IdentityAttributeTransform:
      description: Defines a transformation definition for an identity attribute.
      example:
        transformDefinition:
          attributes:
            attributeName: e-mail
            sourceName: MySource
            sourceId: 2c9180877a826e68017a8c0b03da1a53
          type: accountAttribute
        identityAttributeName: email
      properties:
        identityAttributeName:
          description: Name of the identity attribute.
          example: email
          type: string
        transformDefinition:
          $ref: '#/components/schemas/TransformDefinition'
      type: object
    NonEmployeeSourceLite:
      properties:
        id:
          description: Non-Employee source id.
          example: a0303682-5e4a-44f7-bdc2-6ce6112549c1
          format: UUID
          type: string
        sourceId:
          description: Source Id associated with this non-employee source.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Source name associated with this non-employee source.
          example: Retail
          type: string
        description:
          description: Source description associated with this non-employee source.
          example: Source description
          type: string
      type: object
    NonEmployeeApprovalItemBase:
      properties:
        id:
          description: Non-Employee approval item id
          example: 2c1e388b-1e55-4b0a-ab5c-897f1204159c
          format: UUID
          type: string
        approver:
          $ref: '#/components/schemas/NonEmployeeIdentityReferenceWithId'
        accountName:
          description: Requested identity account name
          example: test.account
          type: string
        approvalStatus:
          $ref: '#/components/schemas/ApprovalStatus'
        approvalOrder:
          description: Approval order
          example: 1
          format: float
          type: number
        comment:
          description: comment of approver
          example: I approve
          type: string
        modified:
          description: When the request was last modified.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        created:
          description: When the request was created.
          example: 2019-08-23T18:40:35.772Z
          format: date-time
          type: string
      type: object
    ApprovalStatus:
      description: Enum representing the non-employee request approval status
      enum:
      - APPROVED
      - REJECTED
      - PENDING
      - NOT_READY
      - CANCELLED
      example: APPROVED
      type: string
    NonEmployeeIdnUserRequest:
      example:
        id: 2c91808570313110017040b06f344ec9
      properties:
        id:
          description: Identity id.
          example: 2c91808570313110017040b06f344ec9
          format: UUID
          type: string
      required:
      - id
      type: object
    NonEmployeeIdentityReferenceWithId:
      properties:
        type:
          $ref: '#/components/schemas/NonEmployeeIdentityDtoType'
        id:
          description: Identity id
          example: 5168015d32f890ca15812c9180835d2e
          type: string
      type: object
    NonEmployeeRequestLite:
      properties:
        id:
          description: Non-Employee request id.
          example: ac110005-7156-1150-8171-5b292e3e0084
          format: UUID
          type: string
        requester:
          $ref: '#/components/schemas/NonEmployeeIdentityReferenceWithId'
      type: object
    NonEmployeeRequestWithoutApprovalItem:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeRequestLite'
      - $ref: '#/components/schemas/NonEmployeeRequestWithoutApprovalItem_allOf'
    NonEmployeeSchemaAttributeType:
      description: Enum representing the type of data a schema attribute accepts.
      enum:
      - TEXT
      - DATE
      - IDENTITY
      example: TEXT
      type: string
    GrantType:
      description: OAuth2 Grant Type
      enum:
      - CLIENT_CREDENTIALS
      - AUTHORIZATION_CODE
      - REFRESH_TOKEN
      example: CLIENT_CREDENTIALS
      type: string
    AccessType:
      description: Access type of API Client indicating online or offline use
      enum:
      - ONLINE
      - OFFLINE
      example: OFFLINE
      type: string
    ClientType:
      description: Type of an API Client indicating public or confidentials use
      enum:
      - CONFIDENTIAL
      - PUBLIC
      example: CONFIDENTIAL
      type: string
    IdentityReference:
      description: The manager for the identity.
      example:
        name: Thomas Edison
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      nullable: true
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: Identity id
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Human-readable display name of identity.
          example: Thomas Edison
          type: string
      type: object
    IdentityAttribute:
      example:
        name: Country
        value: US
        key: country
      properties:
        key:
          description: The attribute key
          example: country
          type: string
        name:
          description: Human-readable display name of the attribute
          example: Country
          type: string
        value:
          description: The attribute value
          example: US
          type: string
      type: object
    PublicIdentityAttributeConfig:
      description: Used to map an attribute key for an Identity to its display name.
      example:
        name: Country
        key: country
      properties:
        key:
          description: The attribute key
          example: country
          type: string
        name:
          description: The attribute display name
          example: Country
          type: string
      type: object
    DateTime:
      description: A date-time in ISO-8601 format
      example: 2018-06-25T20:22:28.104Z
      format: date-time
      nullable: true
      type: string
    Index:
      description: |-
        Enum representing the currently supported indices.
        Additional values may be added in the future without notice.
      enum:
      - accessprofiles
      - accountactivities
      - entitlements
      - events
      - identities
      - roles
      - '*'
      example: identities
      type: string
    Column:
      properties:
        field:
          description: |
            The name of the field.
          example: email
          type: string
        header:
          description: |
            The value of the header.
          example: Work Email
          type: string
      required:
      - field
      type: object
    Filter:
      properties:
        type:
          $ref: '#/components/schemas/FilterType'
        range:
          $ref: '#/components/schemas/Range'
        terms:
          description: The terms to be filtered.
          items:
            example: account_count
            type: string
          type: array
        exclude:
          default: false
          description: Indicates if the filter excludes results.
          example: false
          type: boolean
      type: object
    QueryType:
      default: SAILPOINT
      description: |-
        The type of query to use.  By default, the `SAILPOINT` query type is used, which requires the `query` object to be defined in the request body.
        To use the `queryDsl` or `typeAheadQuery` objects in the request, you must set the type to `DSL` or `TYPEAHEAD` accordingly.
        Additional values may be added in the future without notice.
      enum:
      - DSL
      - SAILPOINT
      - TYPEAHEAD
      example: SAILPOINT
      type: string
    ElasticVersion:
      default: "5.2"
      description: The current Elasticserver version.
      example: "5.2"
      type: string
    Query:
      description: Query parameters used to construct an Elasticsearch query object.
      example:
        query: name:a*
        timeZone: America/Chicago
        fields:
        - name
        innerHit:
          query: source.name:\"Active Directory\"
          type: access
      properties:
        query:
          description: "The query using the Elasticsearch [Query String Query](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string)\
            \ syntax from the Query DSL extended by SailPoint to support Nested queries."
          example: name:a*
          type: string
        fields:
          description: The fields to which the specified query will be applied.  The
            available fields are dependent on the indice(s) being searched on.  Please
            refer to the response schema of this API for a list of available fields.
          example:
          - name
          items:
            type: string
          type: array
        timeZone:
          description: The time zone to be applied to any range query related to dates.
          example: America/Chicago
          type: string
        innerHit:
          $ref: '#/components/schemas/InnerHit'
      type: object
    TypeAheadQuery:
      description: "Query parameters used to construct an Elasticsearch type ahead\
        \ query object.  The typeAheadQuery performs a search for top values beginning\
        \ with the typed values. For example, typing \"Jo\" results in top hits matching\
        \ \"Jo.\" Typing \"Job\" results in top hits matching \"Job.\" "
      example:
        field: source.name
        query: Work
        nestedType: access
        maxExpansions: 10
      properties:
        query:
          description: The type ahead query string used to construct a phrase prefix
            match query.
          example: Work
          type: string
        field:
          description: The field on which to perform the type ahead search.
          example: source.name
          type: string
        nestedType:
          description: The nested type.
          example: access
          type: string
        maxExpansions:
          default: 10
          description: |-
            The number of suffixes the last term will be expanded into.
            Influences the performance of the query and the number results returned.
            Valid values: 1 to 1000.
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      required:
      - field
      - query
      type: object
    QueryResultFilter:
      description: Allows the query results to be filtered by specifying a list of
        fields to include and/or exclude from the result documents.
      example:
        excludes:
        - stacktrace
        includes:
        - name
        - displayName
      properties:
        includes:
          description: The list of field names to include in the result documents.
          example:
          - name
          - displayName
          items:
            type: string
          type: array
        excludes:
          description: The list of field names to exclude from the result documents.
          example:
          - stacktrace
          items:
            type: string
          type: array
      type: object
    AggregationType:
      default: DSL
      description: |
        Enum representing the currently available query languages for aggregations, which are used to perform calculations or groupings on search results.

        Additional values may be added in the future without notice.
      enum:
      - DSL
      - SAILPOINT
      example: DSL
      type: string
    SearchAggregationSpecification:
      allOf:
      - $ref: '#/components/schemas/Aggregations'
      - $ref: '#/components/schemas/SearchAggregationSpecification_allOf'
    PasswordInfoAccount:
      example:
        accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
        accountName: Abby.Smith
      properties:
        accountId:
          description: Account ID of the account. This is specified per account schema
            in the source configuration. It is used to distinguish accounts. More
            info can be found here https://community.sailpoint.com/t5/IdentityNow-Connectors/How-do-I-designate-an-account-attribute-as-the-Account-ID-for-a/ta-p/80350
          example: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          type: string
        accountName:
          description: Display name of the account. This is specified per account
            schema in the source configuration. It is used to display name of the
            account. More info can be found here https://community.sailpoint.com/t5/IdentityNow-Connectors/How-do-I-designate-an-account-attribute-as-the-Account-Name-for/ta-p/74008
          example: Abby.Smith
          type: string
      type: object
    FieldDetailsDto:
      example:
        isRequired: false
        transform:
          type: rule
          attributes:
            name: Create Unique LDAP Attribute
        isMultiValued: false
        name: userName
        attributes:
          template: "${firstname}.${lastname}${uniqueCounter}"
          cloudMaxUniqueChecks: "50"
          cloudMaxSize: "20"
          cloudRequired: "true"
        type: string
      properties:
        name:
          description: The name of the attribute.
          example: userName
          type: string
        transform:
          default: {}
          description: The transform to apply to the field
          example:
            type: rule
            attributes:
              name: Create Unique LDAP Attribute
          type: object
        attributes:
          description: Attributes required for the transform
          example:
            template: "${firstname}.${lastname}${uniqueCounter}"
            cloudMaxUniqueChecks: "50"
            cloudMaxSize: "20"
            cloudRequired: "true"
          type: object
        isRequired:
          default: false
          description: Flag indicating whether or not the attribute is required.
          example: false
          readOnly: true
          type: boolean
        type:
          description: The type of the attribute.
          example: string
          type: string
        isMultiValued:
          default: false
          description: Flag indicating whether or not the attribute is multi-valued.
          example: false
          type: boolean
      type: object
    AttributeDefinition:
      properties:
        name:
          description: The name of the attribute.
          example: sAMAccountName
          type: string
        type:
          $ref: '#/components/schemas/AttributeDefinitionType'
        schema:
          $ref: '#/components/schemas/AttributeDefinition_schema'
        description:
          description: A human-readable description of the attribute.
          example: SAM Account Name
          type: string
        isMultiValued:
          description: Flag indicating whether or not the attribute is multi-valued.
          example: false
          type: boolean
        isEntitlement:
          description: Flag indicating whether or not the attribute is an entitlement.
          example: false
          type: boolean
        isGroup:
          description: |
            Flag indicating whether or not the attribute represents a group.
            This can only be `true` if `isEntitlement` is also `true` **and** there is a schema defined for the attribute..
          example: false
          type: boolean
      type: object
    ScheduleType:
      description: |
        Enum representing the currently supported schedule types.

        Additional values may be added in the future without notice.
      enum:
      - DAILY
      - WEEKLY
      - MONTHLY
      - CALENDAR
      example: WEEKLY
      type: string
    Selector:
      properties:
        type:
          $ref: '#/components/schemas/SelectorType'
        values:
          description: |
            The selected values.
          example:
          - MON
          - WED
          items:
            type: string
          type: array
        interval:
          description: |
            The selected interval for RANGE selectors.
          example: 3
          format: int32
          nullable: true
          type: integer
      required:
      - type
      - values
      type: object
    BaseDocument:
      properties:
        id:
          example: 2c91808375d8e80a0175e1f88a575222
          type: string
        name:
          example: john.doe
          type: string
        _type:
          $ref: '#/components/schemas/DocumentType'
      required:
      - _type
      - id
      - name
      type: object
    BaseAccess:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - $ref: '#/components/schemas/BaseAccess_allOf'
    Reference:
      properties:
        id:
          description: The unique ID of the referenced object.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: The human readable name of the referenced object.
          example: John Doe
          type: string
      type: object
    BaseEntitlement:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - $ref: '#/components/schemas/BaseEntitlement_allOf'
    Tags:
      example:
      - TAG_1
      - TAG_2
      items:
        type: string
      type: array
    Access:
      allOf:
      - $ref: '#/components/schemas/DisplayReference'
      - $ref: '#/components/schemas/Access_allOf'
    DisplayReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - $ref: '#/components/schemas/DisplayReference_allOf'
    AccountSource:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - $ref: '#/components/schemas/AccountSource_allOf'
    Approval:
      properties:
        comments:
          items:
            $ref: '#/components/schemas/ApprovalComment'
          type: array
        created:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        owner:
          $ref: '#/components/schemas/AccountSource'
        result:
          description: The result of the approval
          example: Finished
          type: string
        type:
          nullable: true
          type: string
          example: null
      type: object
    OriginalRequest:
      properties:
        accountId:
          description: the account id
          example: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          type: string
        attributeRequests:
          items:
            $ref: '#/components/schemas/AttributeRequest'
          type: array
        op:
          description: the operation that was used
          example: add
          type: string
        source:
          $ref: '#/components/schemas/AccountSource'
      type: object
    ExpansionItem:
      properties:
        accountId:
          description: The ID of the account
          example: 2c91808981f58ea601821c3e93482e6f
          type: string
        cause:
          example: Role
          type: string
        name:
          description: The name of the item
          example: smartsheet-role
          type: string
        attributeRequests:
          items:
            $ref: '#/components/schemas/AttributeRequest'
          type: array
        source:
          $ref: '#/components/schemas/AccountSource'
      type: object
    AccountRequest:
      properties:
        accountId:
          description: Unique ID of the account
          example: John.Doe
          type: string
        attributeRequests:
          items:
            $ref: '#/components/schemas/AttributeRequest'
          type: array
        op:
          description: The operation that was performed
          example: Modify
          type: string
        provisioningTarget:
          $ref: '#/components/schemas/AccountSource'
        result:
          $ref: '#/components/schemas/AccountRequest_result'
        source:
          $ref: '#/components/schemas/AccountSource'
      type: object
    BaseAccount:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - $ref: '#/components/schemas/BaseAccount_allOf'
    NameType:
      properties:
        name:
          description: the actor or target name
          example: John Doe
          type: string
        type:
          $ref: '#/components/schemas/DtoType'
      type: object
    ProcessingDetails:
      properties:
        date:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        stage:
          example: In Process
          type: string
        retryCount:
          example: 0
          format: int32
          type: integer
        stackTrace:
          example: <stack trace>
          type: string
        message:
          example: <message>
          type: string
      type: object
    App:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - $ref: '#/components/schemas/App_allOf'
    IdentityAccess:
      discriminator:
        mapping:
          ACCESS_PROFILE: '#/components/schemas/AccessProfileSummary'
          ENTITLEMENT: '#/components/schemas/AccessProfileEntitlement'
          ROLE: '#/components/schemas/AccessProfileRole'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AccessProfileSummary'
      - $ref: '#/components/schemas/AccessProfileEntitlement'
      - $ref: '#/components/schemas/AccessProfileRole'
    Owns:
      properties:
        sources:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        entitlements:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        accessProfiles:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        roles:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        apps:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        governanceGroups:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        fallbackApprover:
          example: false
          type: boolean
      type: object
    ProvisioningState:
      description: Provisioning state of an account activity item
      enum:
      - PENDING
      - FINISHED
      - UNVERIFIABLE
      - COMMITED
      - FAILED
      - RETRY
      example: PENDING
      type: string
    Comment:
      example:
        date: 2017-07-11T18:45:37.098Z
        commenterName: Adam Kennedy
        body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
          erat.
        commenterId: 2c918084660f45d6016617daa9210584
      nullable: true
      properties:
        commenterId:
          description: Id of the identity making the comment
          example: 2c918084660f45d6016617daa9210584
          type: string
        commenterName:
          description: Human-readable display name of the identity making the comment
          example: Adam Kennedy
          type: string
        body:
          description: Content of the comment
          example: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat.
          type: string
        date:
          description: Date and time comment was made
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
      type: object
    AccountActivityItemOperation:
      description: Represents an operation in an account activity item
      enum:
      - ADD
      - CREATE
      - MODIFY
      - DELETE
      - DISABLE
      - ENABLE
      - UNLOCK
      - LOCK
      - REMOVE
      example: ADD
      type: string
    AccountRequestInfo:
      description: "If an account activity item is associated with an access request,\
        \ captures details of that request."
      example:
        requestedObjectId: 2c91808563ef85690164001c31140c0c
        requestedObjectName: Treasury Analyst
        requestedObjectType: ACCESS_PROFILE
      nullable: true
      properties:
        requestedObjectId:
          description: Id of requested object
          example: 2c91808563ef85690164001c31140c0c
          type: string
        requestedObjectName:
          description: Human-readable name of requested object
          example: Treasury Analyst
          type: string
        requestedObjectType:
          $ref: '#/components/schemas/RequestableObjectType'
      type: object
    SectionDetails:
      allOf:
      - $ref: '#/components/schemas/FormItemDetails'
      - $ref: '#/components/schemas/SectionDetails_allOf'
      type: object
    LocaleOrigin:
      description: "An indicator of how the locale was selected. *DEFAULT* means the\
        \ locale is the system default. *REQUEST* means the locale was selected from\
        \ the request context (i.e., best match based on the *Accept-Language* header).\
        \ Additional values may be added in the future without notice."
      enum:
      - DEFAULT
      - REQUEST
      example: DEFAULT
      type: string
    ManualWorkItemState:
      description: |-
        Indicates the state of the request processing for this item:
        * PENDING: The request for this item is awaiting processing.
        * APPROVED: The request for this item has been approved.
        * REJECTED: The request for this item was rejected.
        * EXPIRED: The request for this item expired with no action taken.
        * CANCELLED: The request for this item was cancelled with no user action.
        * ARCHIVED: The request for this item has been archived after completion.
      enum:
      - PENDING
      - APPROVED
      - REJECTED
      - EXPIRED
      - CANCELLED
      - ARCHIVED
      example: PENDING
      type: string
    ApprovalScheme:
      description: Describes the individual or group that is responsible for an approval
        step.
      enum:
      - APP_OWNER
      - SOURCE_OWNER
      - MANAGER
      - ROLE_OWNER
      - ACCESS_PROFILE_OWNER
      - GOVERNANCE_GROUP
      example: MANAGER
      type: string
    SodViolationCheckResult:
      description: The inner object representing the completed SOD Violation check
      example:
        clientMetadata:
          requestedAppName: test-app
          requestedAppId: 2c91808f7892918f0178b78da4a305a1
        violationContexts:
        - conflictingAccessCriteria:
            leftCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
            rightCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
          policy:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
        - conflictingAccessCriteria:
            leftCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
            rightCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
          policy:
            name: William Wilson
            id: 2c91808568c529c60168cca6f90c1313
            type: IDENTITY
        violatedPolicies:
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        message:
          localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessageDto'
        clientMetadata:
          additionalProperties:
            type: string
          description: Arbitrary key-value pairs. They will never be processed by
            the IdentityNow system but will be returned on completion of the violation
            check.
          example:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          type: object
        violationContexts:
          items:
            $ref: '#/components/schemas/SodViolationContext'
          type: array
        violatedPolicies:
          description: A list of the Policies that were violated
          items:
            $ref: '#/components/schemas/BaseReferenceDto'
          type: array
      type: object
    TransformDefinition:
      example:
        attributes:
          attributeName: e-mail
          sourceName: MySource
          sourceId: 2c9180877a826e68017a8c0b03da1a53
        type: accountAttribute
      properties:
        type:
          description: The type of the transform definition.
          example: accountAttribute
          type: string
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/TransformDefinition_attributes_value'
          description: Arbitrary key-value pairs to store any metadata for the object
          example:
            attributeName: e-mail
            sourceName: MySource
            sourceId: 2c9180877a826e68017a8c0b03da1a53
          type: object
      type: object
    NonEmployeeIdentityDtoType:
      description: Identifies if the identity is a normal identity or a governance
        group
      enum:
      - GOVERNANCE_GROUP
      - IDENTITY
      example: IDENTITY
      type: string
    NonEmployeeSourceLiteWithSchemaAttributes:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSourceLite'
      - $ref: '#/components/schemas/NonEmployeeSourceLiteWithSchemaAttributes_allOf'
    FilterType:
      description: |-
        Enum representing the currently supported filter types.
        Additional values may be added in the future without notice.
      enum:
      - EXISTS
      - RANGE
      - TERMS
      example: RANGE
      type: string
    Range:
      description: The range of values to be filtered.
      properties:
        lower:
          $ref: '#/components/schemas/Bound'
        upper:
          $ref: '#/components/schemas/Bound'
      type: object
    InnerHit:
      description: Inner Hit query object that will cause the specified nested type
        to be returned as the result matching the supplied query.
      example:
        query: source.name:\"Active Directory\"
        type: access
      properties:
        query:
          description: "The search query using the Elasticsearch [Query String Query](https://www.elastic.co/guide/en/elasticsearch/reference/5.2/query-dsl-query-string-query.html#query-string)\
            \ syntax from the Query DSL extended by SailPoint to support Nested queries."
          example: source.name:\"Active Directory\"
          type: string
        type:
          description: "The nested type to use in the inner hits query.  The nested\
            \ type [Nested Type](https://www.elastic.co/guide/en/elasticsearch/reference/current/nested.html)\
            \ refers to a document \"nested\" within another document. For example,\
            \ an identity can have nested documents for access, accounts, and apps."
          example: access
          type: string
      required:
      - query
      - type
      type: object
    Aggregations:
      properties:
        nested:
          $ref: '#/components/schemas/NestedAggregation'
        metric:
          $ref: '#/components/schemas/MetricAggregation'
        filter:
          $ref: '#/components/schemas/FilterAggregation'
        bucket:
          $ref: '#/components/schemas/BucketAggregation'
      type: object
    SubSearchAggregationSpecification:
      allOf:
      - $ref: '#/components/schemas/Aggregations'
      - $ref: '#/components/schemas/SubSearchAggregationSpecification_allOf'
    AttributeDefinitionType:
      description: The underlying type of the value which an AttributeDefinition represents.
      enum:
      - STRING
      - LONG
      - INT
      - BOOLEAN
      example: STRING
      type: string
    SelectorType:
      description: |
        Enum representing the currently supported selector types.

        LIST - the *values* array contains one or more distinct values.

        RANGE - the *values* array contains two values: the start and end of the range, inclusive.

        Additional values may be added in the future without notice.
      enum:
      - LIST
      - RANGE
      example: LIST
      type: string
    DocumentType:
      description: |-
        Enum representing the currently supported document types.

        Additional values may be added in the future without notice.
      enum:
      - accessprofile
      - accountactivity
      - account
      - aggregation
      - entitlement
      - event
      - identity
      - role
      example: identity
      type: string
    Owner:
      allOf:
      - $ref: '#/components/schemas/SearchIdentityReference'
      - $ref: '#/components/schemas/Owner_allOf'
    ApprovalComment:
      properties:
        comment:
          description: The comment text
          example: This request was autoapproved by our automated ETS subscriber.
          type: string
        commenter:
          description: The name of the commenter
          example: Automated AR Approval
          type: string
        date:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
      type: object
    AttributeRequest:
      properties:
        name:
          description: The attribute name
          example: groups
          type: string
        op:
          description: The operation to perform
          example: Add
          type: string
        value:
          description: The value of the attribute
          example: "3203537556531076"
          type: string
      type: object
    FormItemDetails:
      properties:
        name:
          description: Name of the FormItem
          example: Field1
          type: string
      type: object
    SodViolationContext:
      description: The contextual information of the violated criteria
      example:
        conflictingAccessCriteria:
          leftCriteria:
            criteriaList:
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
          rightCriteria:
            criteriaList:
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
        policy:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
      properties:
        policy:
          $ref: '#/components/schemas/BaseReferenceDto'
        conflictingAccessCriteria:
          $ref: '#/components/schemas/SodViolationContext_conflictingAccessCriteria'
      type: object
    Bound:
      properties:
        value:
          description: The value of the range's endpoint.
          example: "1"
          type: string
        inclusive:
          default: false
          description: Indicates if the endpoint is included in the range.
          example: false
          type: boolean
      required:
      - value
      type: object
    NestedAggregation:
      description: The nested aggregation object.
      properties:
        name:
          description: The name of the nested aggregate to be included in the result.
          example: id
          type: string
        type:
          description: The type of the nested object.
          example: access
          type: string
      required:
      - name
      - type
      type: object
    MetricAggregation:
      description: The calculation done on the results of the query
      properties:
        name:
          description: |-
            The name of the metric aggregate to be included in the result.
            If the metric aggregation is omitted, the resulting aggregation will be a count of the documents in the search results.
          example: Access Name Count
          type: string
        type:
          $ref: '#/components/schemas/MetricType'
        field:
          description: |
            The field the calculation is performed on.

            Prefix the field name with '@' to reference a nested object.
          example: '@access.name'
          type: string
      required:
      - field
      - name
      type: object
    FilterAggregation:
      description: An additional filter to constrain the results of the search query.
      properties:
        name:
          description: The name of the filter aggregate to be included in the result.
          example: Entitlements
          type: string
        type:
          $ref: '#/components/schemas/SearchFilterType'
        field:
          description: |
            The search field to apply the filter to.

            Prefix the field name with '@' to reference a nested object.
          example: access.type
          type: string
        value:
          description: The value to filter on.
          example: ENTITLEMENT
          type: string
      required:
      - field
      - name
      - value
      type: object
    BucketAggregation:
      description: The bucket to group the results of the aggregation query by.
      properties:
        name:
          description: The name of the bucket aggregate to be included in the result.
          example: Identity Locations
          type: string
        type:
          $ref: '#/components/schemas/BucketType'
        field:
          description: |-
            The field to bucket on.
            Prefix the field name with '@' to reference a nested object.
          example: attributes.city
          type: string
        size:
          description: Maximum number of buckets to include.
          example: 100
          format: int32
          type: integer
        minDocCount:
          description: Minimum number of documents a bucket should have.
          example: 2
          format: int32
          type: integer
      required:
      - field
      - name
      type: object
    SearchIdentityReference:
      allOf:
      - $ref: '#/components/schemas/Reference'
      - $ref: '#/components/schemas/SearchIdentityReference_allOf'
    SodExemptCriteria:
      description: Details of the Entitlement criteria
      example:
        existing: true
        name: My HR Entitlement
        id: 2c918085771e9d3301773b3cb66f6398
        type: IDENTITY
      properties:
        existing:
          description: If the entitlement already belonged to the user or not.
          example: true
          type: boolean
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: Entitlement ID
          example: 2c918085771e9d3301773b3cb66f6398
          type: string
        name:
          description: Entitlement name
          example: My HR Entitlement
          type: string
      type: object
    MetricType:
      default: UNIQUE_COUNT
      description: |-
        Enum representing the currently supported metric aggregation types.
        Additional values may be added in the future without notice.
      enum:
      - COUNT
      - UNIQUE_COUNT
      - AVG
      - SUM
      - MEDIAN
      - MIN
      - MAX
      example: COUNT
      type: string
    SearchFilterType:
      default: TERM
      description: |-
        Enum representing the currently supported filter aggregation types.
        Additional values may be added in the future without notice.
      enum:
      - TERM
      example: TERM
      type: string
    BucketType:
      default: TERMS
      description: |-
        Enum representing the currently supported bucket aggregation types.
        Additional values may be added in the future without notice.
      enum:
      - TERMS
      example: TERMS
      type: string
    createAccessRequest_401_response:
      properties:
        error:
          description: A message describing the error
          example: "JWT validation failed: JWT is expired"
          type: object
      type: object
    createAccessRequest_429_response:
      properties:
        message:
          description: A message describing the error
          example: ' Rate Limit Exceeded '
          type: object
      type: object
    setLifecycleState_request:
      properties:
        lifecycleStateId:
          description: The ID of the lifecycle state to set
          example: 2c9180877a86e408017a8c19fefe046c
          type: string
      type: object
    setLifecycleState_200_response:
      example:
        accountActivityId: 2c9180837ab5b716017ab7c6c9ef1e20
      properties:
        accountActivityId:
          description: The ID of the IdentityRequest object that was generated when
            the workflow launches
          example: 2c9180837ab5b716017ab7c6c9ef1e20
          type: string
      type: object
    nonEmployeeRecordBulkDelete_request:
      properties:
        ids:
          description: List of non-employee ids.
          example:
          - 2b838de9-db9b-abcf-e646-d4f274ad4238
          - 2d838de9-db9b-abcf-e646-d4f274ad4238
          items:
            format: uuid
            type: string
          type: array
      required:
      - ids
      type: object
    nonEmployeeRecordsBulkUpload_request:
      properties:
        data:
          format: base64
          type: string
      required:
      - data
      type: object
    savedSearchCreate_request:
      allOf:
      - $ref: '#/components/schemas/SavedSearchName'
      - $ref: '#/components/schemas/SavedSearchDetail'
    scheduledSearchCreate_request:
      allOf:
      - $ref: '#/components/schemas/ScheduledSearchName'
      - $ref: '#/components/schemas/SearchSchedule'
    deleteSource_202_response:
      example:
        name: name
        id: 2c91808779ecf55b0179f720942f181a
        type: TASK_RESULT
      properties:
        type:
          description: The type of object being referenced
          enum:
          - TASK_RESULT
          example: TASK_RESULT
          type: string
        id:
          description: ID of the task result
          example: 2c91808779ecf55b0179f720942f181a
          type: string
        name:
          description: Human-readable display name of the task result (should be null/empty)
          type: string
          example: null
      type: object
    uploadSourceAccountsSchema_request:
      properties:
        file:
          format: binary
          type: string
      type: object
    AccessProfileDocument_allOf:
      properties:
        source:
          $ref: '#/components/schemas/Reference'
        entitlements:
          items:
            $ref: '#/components/schemas/BaseEntitlement'
          type: array
        entitlementCount:
          example: 5
          type: integer
        tags:
          example:
          - TAG_1
          - TAG_2
          items:
            type: string
          type: array
      type: object
      example: null
    AccessProfileSummary_allOf:
      properties:
        source:
          $ref: '#/components/schemas/Reference'
        owner:
          $ref: '#/components/schemas/DisplayReference'
        revocable:
          example: true
          type: boolean
      type: object
      example: null
    Account_allOf:
      properties:
        sourceId:
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        identityId:
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        attributes:
          additionalProperties: true
          example:
            firstName: SailPoint
            lastName: Support
            displayName: SailPoint Support
          type: object
        authoritative:
          description: Indicates if this account is from an authoritative source
          example: false
          type: boolean
        description:
          description: A description of the account
          nullable: true
          type: string
          example: null
        disabled:
          description: Indicates if the account is currently disabled
          example: false
          type: boolean
        locked:
          description: Indicates if the account is currently locked
          example: false
          type: boolean
        nativeIdentity:
          example: "552775"
          type: string
        systemAccount:
          example: false
          type: boolean
        uncorrelated:
          description: Indicates if this account is not correlated to an identity
          example: false
          type: boolean
        uuid:
          description: The unique ID of the account as determined by the account schema
          example: slpt.support
          type: string
        manuallyCorrelated:
          description: Indicates if the account has been manually correlated to an
            identity
          example: false
          type: boolean
        hasEntitlements:
          description: Indicates if the account has entitlements
          example: true
          type: boolean
      type: object
      example: null
    AccountActivitySearchedItem_allOf:
      properties:
        action:
          description: The type of action that this activity performed
          example: Identity Refresh.
          externalDocs:
            description: Learn more about account activity action types
            url: https://documentation.sailpoint.com/saas/help/search/searchable-fields.html#searching-account-activity-data
          type: string
        created:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        stage:
          description: The current stage of the activity
          example: Completed
          type: string
        origin:
          nullable: true
          type: string
          example: null
        status:
          description: the current status of the activity
          example: Complete
          type: string
        requester:
          $ref: '#/components/schemas/AccountSource'
        recipient:
          $ref: '#/components/schemas/AccountSource'
        trackingNumber:
          example: 61aad0c9e8134eca89e76a35e0cabe3f
          type: string
        errors:
          items:
            type: string
          nullable: true
          type: array
          example: null
        warnings:
          items:
            type: string
          nullable: true
          type: array
          example: null
        approvals:
          items:
            $ref: '#/components/schemas/Approval'
          type: array
        originalRequests:
          items:
            $ref: '#/components/schemas/OriginalRequest'
          type: array
        expansionItems:
          items:
            $ref: '#/components/schemas/ExpansionItem'
          type: array
        accountRequests:
          items:
            $ref: '#/components/schemas/AccountRequest'
          type: array
        sources:
          example: "smartsheet-test, airtable-v4, IdentityNow"
          type: string
      type: object
      example: null
    AccountDocument_allOf:
      properties:
        modified:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        attributes:
          additionalProperties: true
          description: a map or dictionary of key/value pairs
          example:
            firstName: John
            lastName: Doe
            displayName: John.Doe
          type: object
        identity:
          $ref: '#/components/schemas/DisplayReference'
        access:
          items:
            $ref: '#/components/schemas/AccessProfileEntitlement'
          type: array
        entitlementCount:
          description: The number of entitlements assigned to the account
          example: 2
          format: int32
          type: integer
        uncorrelated:
          description: Indicates if the account is not correlated to an identity
          example: false
          type: boolean
        tags:
          example:
          - TAG_1
          - TAG_2
          items:
            type: string
          type: array
      type: object
      example: null
    Aggregation_allOf:
      properties:
        status:
          example: Success
          type: string
        duration:
          example: 20
          format: int32
          type: integer
        avgDuration:
          example: 20
          format: int32
          type: integer
        changedAccounts:
          example: 1
          format: int32
          type: integer
        nextScheduled:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        startTime:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        sourceOwner:
          description: John Doe
          type: string
      type: object
      example: null
    EntitlementDocument_allOf:
      properties:
        modified:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        synced:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        displayName:
          description: The display name of the entitlement
          example: Admin
          type: string
        source:
          $ref: '#/components/schemas/Reference'
        privileged:
          example: false
          type: boolean
        identityCount:
          example: 3
          format: int32
          type: integer
        tags:
          example:
          - TAG_1
          - TAG_2
          items:
            type: string
          type: array
      type: object
      example: null
    EntitlementSummary_allOf:
      properties:
        source:
          $ref: '#/components/schemas/Reference'
        privileged:
          example: false
          type: boolean
        attribute:
          example: memberOf
          type: string
        value:
          example: "CN=Buyer,OU=Groups,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          type: string
        standalone:
          example: false
          type: boolean
      type: object
      example: null
    Event_allOf:
      properties:
        created:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        synced:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        action:
          description: The action that was performed
          example: update
          type: string
        type:
          description: The type of event
          example: SYSTEM_CONFIG
          type: string
        actor:
          $ref: '#/components/schemas/NameType'
        target:
          $ref: '#/components/schemas/NameType'
        stack:
          example: tpe
          type: string
        trackingNumber:
          example: 63f891e0735f4cc8bf1968144a1e7440
          type: string
        ipAddress:
          example: 52.52.97.85
          type: string
        details:
          example: 73b65dfbed1842548c207432a18c84b0
          type: string
        attributes:
          additionalProperties: true
          example:
            pod: stg03-useast1
            org: acme
            sourceName: SailPoint
          type: object
        objects:
          items:
            example: AUTHENTICATION
            type: string
          type: array
        operation:
          example: REQUEST
          type: string
        status:
          example: PASSED
          type: string
        technicalName:
          example: AUTHENTICATION_REQUEST_PASSED
          type: string
      type: object
      example: null
    IdentityDocument_allOf:
      properties:
        firstName:
          description: The first name of the identity
          example: Carol
          type: string
        lastName:
          description: The last name of the identity
          example: Adams
          type: string
        displayName:
          description: The display name of the identity
          example: Carol.Adams
          type: string
        email:
          description: The identity's primary email address
          example: Carol.Adams@sailpointdemo.com
          type: string
        created:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        synced:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        phone:
          description: The phone number of the identity
          example: +1 440-527-3672
          type: string
        inactive:
          description: Indicates if the identity is inactive
          example: false
          type: boolean
        protected:
          example: false
          type: boolean
        status:
          description: The identity's status in SailPoint
          example: UNREGISTERED
          type: string
        employeeNumber:
          example: 1a2a3d4e
          type: string
        manager:
          $ref: '#/components/schemas/DisplayReference'
        isManager:
          description: Indicates if this identity is a manager of other identities
          example: false
          type: boolean
        identityProfile:
          $ref: '#/components/schemas/Reference'
        source:
          $ref: '#/components/schemas/Reference'
        attributes:
          additionalProperties: true
          description: a map or dictionary of key/value pairs
          example:
            country: US
            firstname: Carol
            cloudStatus: UNREGISTERED
          type: object
        processingState:
          nullable: true
          type: string
          example: null
        processingDetails:
          $ref: '#/components/schemas/ProcessingDetails'
        accounts:
          description: List of accounts associated with the identity
          items:
            $ref: '#/components/schemas/BaseAccount'
          type: array
        accountCount:
          description: Number of accounts associated with the identity
          example: 3
          format: int32
          type: integer
        apps:
          description: The list of applications the identity has access to
          items:
            $ref: '#/components/schemas/App'
          type: array
        appCount:
          description: The number of applications the identity has access to
          example: 2
          format: int32
          type: integer
        access:
          description: The list of access items assigned to the identity
          items:
            $ref: '#/components/schemas/IdentityAccess'
          type: array
        accessCount:
          description: The number of access items assigned to the identity
          example: 5
          format: int32
          type: integer
        accessProfileCount:
          description: The number of access profiles assigned to the identity
          example: 1
          type: integer
        entitlementCount:
          description: The number of entitlements assigned to the identity
          example: 10
          type: integer
        roleCount:
          description: The number of roles assigned to the identity
          example: 1
          type: integer
        owns:
          $ref: '#/components/schemas/Owns'
        tags:
          example:
          - TAG_1
          - TAG_2
          items:
            type: string
          type: array
      type: object
      example: null
    IdentityProfile_allOf_owner:
      description: The owner of the Identity Profile.
      nullable: true
      properties:
        type:
          description: Type of the object to which this reference applies
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of the object to which this reference applies
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: William Wilson
          type: string
      type: object
      example: null
    IdentityProfile_allOf_authoritativeSource:
      properties:
        type:
          description: Type of the object to which this reference applies
          enum:
          - SOURCE
          example: SOURCE
          type: string
        id:
          description: ID of the object to which this reference applies
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: HR Active Directory
          type: string
      type: object
      example: null
    IdentityProfile_allOf:
      properties:
        description:
          description: The description of the Identity Profile.
          example: My custom flat file profile
          nullable: true
          type: string
        owner:
          $ref: '#/components/schemas/IdentityProfile_allOf_owner'
        priority:
          description: The priority for an Identity Profile.
          example: 10
          format: int64
          type: integer
        authoritativeSource:
          $ref: '#/components/schemas/IdentityProfile_allOf_authoritativeSource'
        identityRefreshRequired:
          description: True if a identity refresh is needed. Typically triggered when
            a change on the source has been made.
          example: true
          type: boolean
        identityCount:
          description: The number of identities that belong to the Identity Profile.
          example: 8
          format: int32
          type: integer
        identityAttributeConfig:
          $ref: '#/components/schemas/IdentityAttributeConfig'
        identityExceptionReportReference:
          $ref: '#/components/schemas/IdentityExceptionReportReference'
        hasTimeBasedAttr:
          description: Indicates the value of requiresPeriodicRefresh attribute for
            the Identity Profile.
          example: true
          type: boolean
      required:
      - authoritativeSource
      type: object
      example: null
    ProvisioningConfig_managedResourceRefs_inner:
      properties:
        type:
          description: The type of object being referenced
          enum:
          - SOURCE
          example: SOURCE
          type: string
        id:
          description: ID of the source
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the source
          example: My Source
          type: string
      type: object
    ProvisioningConfig_planInitializerScript:
      description: This is a reference to a plan initializer script.
      properties:
        source:
          description: This is a Rule that allows provisioning instruction changes.
          example: |
            <?xml version='1.0' encoding='UTF-8'?>\r\n<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">\r\n<Rule name=\"Example Rule\" type=\"BeforeProvisioning\">\r\n  <Description>Before Provisioning Rule which changes disables and enables to a modify.</Description>\r\n  <Source><![CDATA[\r\nimport sailpoint.object.*;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest.Operation;\r\nimport sailpoint.object.ProvisioningPlan.AttributeRequest;\r\nimport sailpoint.object.ProvisioningPlan;\r\nimport sailpoint.object.ProvisioningPlan.Operation;\r\n\r\nfor ( AccountRequest accountRequest : plan.getAccountRequests() ) {\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Disable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Enable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n}\r\n\r\n  ]]></Source>
          type: string
      type: object
    RoleDocument_allOf:
      properties:
        accessProfiles:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        accessProfileCount:
          type: integer
        tags:
          example:
          - TAG_1
          - TAG_2
          items:
            type: string
          type: array
      type: object
      example: null
    RoleSummary_allOf:
      properties:
        owner:
          $ref: '#/components/schemas/DisplayReference'
        disabled:
          type: boolean
        revocable:
          type: boolean
      type: object
      example: null
    SavedSearch_allOf:
      properties:
        id:
          description: |
            The saved search ID.
          example: 0de46054-fe90-434a-b84e-c6b3359d0c64
          type: string
        owner:
          $ref: '#/components/schemas/TypedReference'
      type: object
      example: null
    Schedule_days:
      allOf:
      - $ref: '#/components/schemas/Selector'
      - description: |
          The days to execute the search.

          If `type` is `WEEKLY`, the values will be `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, and `SUN`.

          If `type` is `MONTHLY`, the values will be a number in double quotes, like `"1"`, `"10"`, or `"28"`.  Optionally, the value `"L"` can be used to refer to the last day of the month.
        example:
          type: LIST
          values:
          - MON
          - WED
          - FRI
        nullable: true
        type: object
    Schedule_hours:
      allOf:
      - $ref: '#/components/schemas/Selector'
      - description: The hours selected.
        example:
          type: RANGE
          values:
          - "9"
          - "18"
          interval: 3
        type: object
    ScheduledSearch_allOf_owner:
      description: The owner of the scheduled search
      properties:
        type:
          description: The type of object being referenced
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: The ID of the referenced object
          example: 2c9180867624cbd7017642d8c8c81f67
          type: string
      readOnly: true
      required:
      - id
      - type
      type: object
      example: null
    ScheduledSearch_allOf:
      properties:
        id:
          description: The scheduled search ID.
          example: 0de46054-fe90-434a-b84e-c6b3359d0c64
          readOnly: true
          type: string
        owner:
          $ref: '#/components/schemas/ScheduledSearch_allOf_owner'
        ownerId:
          deprecated: true
          description: |
            The ID of the scheduled search owner.

            Please use the `id` in the `owner` object instead.
          example: 2c9180867624cbd7017642d8c8c81f67
          readOnly: true
          type: string
      type: object
      example: null
    ServiceDeskIntegrationDto_allOf_ownerRef:
      description: Reference to the identity that is the owner of this Service Desk
        integration
      properties:
        type:
          description: The type of object being referenced
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of the identity
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the identity
          example: MyName
          type: string
      type: object
      example: null
    ServiceDeskIntegrationDto_allOf_clusterRef:
      description: Reference to the source cluster for this Service Desk integration
      properties:
        type:
          description: The type of object being referenced
          enum:
          - CLUSTER
          example: CLUSTER
          type: string
        id:
          description: ID of the cluster
          example: 2c9180866166b5b0016167c32ef31a66
          type: string
        name:
          description: Human-readable display name of the cluster
          example: Corporate Cluster
          type: string
      type: object
      example: null
    ServiceDeskIntegrationDto_allOf_beforeProvisioningRule:
      description: Reference to beforeProvisioningRule for this Service Desk integration
      properties:
        type:
          description: The type of object being referenced
          enum:
          - RULE
          example: RULE
          type: string
        id:
          description: ID of the rule
          example: 2c91808568c529c60168cca6f90c1333
          type: string
        name:
          description: Human-readable display name of the rule
          example: Example Rule
          type: string
      type: object
      example: null
    ServiceDeskIntegrationDto_allOf:
      description: Specification of a Service Desk integration
      properties:
        description:
          description: Description of the Service Desk integration
          example: A very nice Service Desk integration
          type: string
        type:
          default: ServiceNowSDIM
          description: |
            Service Desk integration types

            - ServiceNowSDIM
            - ServiceNow
          example: ServiceNowSDIM
          type: string
        ownerRef:
          $ref: '#/components/schemas/ServiceDeskIntegrationDto_allOf_ownerRef'
        clusterRef:
          $ref: '#/components/schemas/ServiceDeskIntegrationDto_allOf_clusterRef'
        cluster:
          deprecated: true
          description: "ID of the cluster for the Service Desk integration (replaced\
            \ by clusterRef, retained for backward compatibility)"
          example: xyzzy999
          type: string
        managedSources:
          deprecated: true
          description: "Source IDs for the Service Desk integration (replaced by provisioningConfig.managedSResourceRefs,\
            \ but retained here for backward compatibility)"
          example:
          - 2c9180835d191a86015d28455b4a2329
          - 2c5680835d191a85765d28455b4a9823
          items:
            type: string
          type: array
        provisioningConfig:
          $ref: '#/components/schemas/ProvisioningConfig'
        attributes:
          additionalProperties: true
          description: Attributes of the Service Desk integration.  Validation constraints
            enforced by the implementation.
          example:
            property: value
            key: value
          type: object
        beforeProvisioningRule:
          $ref: '#/components/schemas/ServiceDeskIntegrationDto_allOf_beforeProvisioningRule'
      required:
      - attributes
      - description
      - type
      type: object
      example: null
    ServiceDeskIntegrationTemplateDto_allOf:
      description: "This is the model for a Service Desk integration template, used\
        \ to create and edit Service Desk Integrations."
      properties:
        type:
          default: Web Service SDIM
          description: The 'type' property specifies the type of the Service Desk
            integration template.
          example: Web Service SDIM
          type: string
        attributes:
          additionalProperties: true
          description: The 'attributes' property value is a map of attributes available
            for integrations using this Service Desk integration template.
          example:
            property: value
            key: value
          type: object
        provisioningConfig:
          $ref: '#/components/schemas/ProvisioningConfig'
      required:
      - attributes
      - provisioningConfig
      - type
      type: object
      example: null
    Source_owner:
      description: Reference to an owning Identity Object
      example:
        name: MyName
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          description: The type of object being referenced
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of the identity
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the identity
          example: MyName
          type: string
      type: object
    Source_cluster:
      description: Reference to the associated Cluster
      example:
        name: Corporate Cluster
        id: 2c9180866166b5b0016167c32ef31a66
        type: CLUSTER
      properties:
        type:
          description: The type of object being referenced
          enum:
          - CLUSTER
          example: CLUSTER
          type: string
        id:
          description: ID of the cluster
          example: 2c9180866166b5b0016167c32ef31a66
          type: string
        name:
          description: Human-readable display name of the cluster
          example: Corporate Cluster
          type: string
      type: object
    Source_accountCorrelationConfig:
      description: Reference to an Account Correlation Config object
      example:
        name: "Directory [source-62867] Account Correlation"
        id: 2c9180855d191c59015d28583727245a
        type: ACCOUNT_CORRELATION_CONFIG
      properties:
        type:
          description: The type of object being referenced
          enum:
          - ACCOUNT_CORRELATION_CONFIG
          example: ACCOUNT_CORRELATION_CONFIG
          type: string
        id:
          description: ID of the account correlation config
          example: 2c9180855d191c59015d28583727245a
          type: string
        name:
          description: Human-readable display name of the account correlation config
          example: "Directory [source-62867] Account Correlation"
          type: string
      type: object
    Source_accountCorrelationRule:
      description: "Reference to a Rule that can do COMPLEX correlation, should only\
        \ be used when accountCorrelationConfig can't be used."
      example:
        name: Example Rule
        id: 2c918085708c274401708c2a8a760001
        type: RULE
      properties:
        type:
          description: The type of object being referenced
          enum:
          - RULE
          example: RULE
          type: string
        id:
          description: ID of the rule
          example: 2c918085708c274401708c2a8a760001
          type: string
        name:
          description: Human-readable display name of the rule
          example: Example Rule
          type: string
      type: object
    Source_managerCorrelationRule:
      description: "Reference to the ManagerCorrelationRule, only used when a simple\
        \ filter isn't sufficient."
      example:
        name: Example Rule
        id: 2c918085708c274401708c2a8a760001
        type: RULE
      properties:
        type:
          description: The type of object being referenced
          enum:
          - RULE
          example: RULE
          type: string
        id:
          description: ID of the rule
          example: 2c918085708c274401708c2a8a760001
          type: string
        name:
          description: Human-readable display name of the rule
          example: Example Rule
          type: string
      type: object
    Source_beforeProvisioningRule:
      description: Rule that runs on the CCG and allows for customization of provisioning
        plans before the connector is called.
      example:
        name: Example Rule
        id: 2c918085708c274401708c2a8a760001
        type: RULE
      properties:
        type:
          description: The type of object being referenced
          enum:
          - RULE
          example: RULE
          type: string
        id:
          description: ID of the rule
          example: 2c918085708c274401708c2a8a760001
          type: string
        name:
          description: Human-readable display name of the rule
          example: Example Rule
          type: string
      type: object
    Source_schemas_inner:
      properties:
        type:
          description: The type of object being referenced
          enum:
          - CONNECTOR_SCHEMA
          example: CONNECTOR_SCHEMA
          type: string
        id:
          description: ID of the schema
          example: 2c91808568c529c60168cca6f90c1777
          type: string
        name:
          description: Human-readable display name of the schema
          example: MySchema
          type: string
      type: object
    Source_passwordPolicies_inner:
      properties:
        type:
          description: The type of object being referenced
          enum:
          - PASSWORD_POLICY
          example: PASSWORD_POLICY
          type: string
        id:
          description: ID of the policy
          example: 2c91808568c529c60168cca6f90c1777
          type: string
        name:
          description: Human-readable display name of the policy
          example: My Password Policy
          type: string
      type: object
    Source_managementWorkgroup:
      description: Reference to Management Workgroup for this Source
      example:
        name: My Management Workgroup
        id: 2c91808568c529c60168cca6f90c2222
        type: GOVERNANCE_GROUP
      properties:
        type:
          description: The type of object being referenced
          enum:
          - GOVERNANCE_GROUP
          example: GOVERNANCE_GROUP
          type: string
        id:
          description: ID of the management workgroup
          example: 2c91808568c529c60168cca6f90c2222
          type: string
        name:
          description: Human-readable display name of the management workgroup
          example: My Management Workgroup
          type: string
      type: object
    CommentDto_author:
      example:
        name: Adam Kennedy
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: ID of the author
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the identity making the comment
          example: Adam Kennedy
          type: string
      type: object
    AccountAttributesCreate_attributes:
      additionalProperties:
        type: string
      description: The schema attribute values for the account
      example:
        sourceId: 34bfcbe116c9407464af37acbaf7a4dc
        city: Austin
        displayName: John Doe
        userName: jdoe
        sAMAccountName: jDoe
        mail: john.doe@sailpoint.com
      properties:
        sourceId:
          description: Target source to create an account
          example: 34bfcbe116c9407464af37acbaf7a4dc
          type: string
      required:
      - sourceId
      type: object
    JsonPatchOperation_value_anyOf_inner:
      anyOf:
      - type: string
      - type: integer
      - type: object
    JsonPatchOperation_value:
      anyOf:
      - type: string
      - type: integer
      - type: object
      - items:
          $ref: '#/components/schemas/JsonPatchOperation_value_anyOf_inner'
        type: array
      description: "The value to be used for the operation, required for \"add\" and\
        \ \"replace\" operations"
      example: New description
    EntitlementDto_allOf:
      description: Entitlement object that represents entitlement
      properties:
        attribute:
          description: Name of the entitlement attribute
          example: authorizationType
          type: string
        value:
          description: Raw value of the entitlement
          example: "CN=Users,dc=sailpoint,dc=com"
          type: string
        description:
          description: Entitlment description
          example: Active Directory DC
          type: string
        attributes:
          additionalProperties: true
          description: Entitlement attributes
          example:
            GroupType: Security
            sAMAccountName: Buyer
          type: object
        sourceSchemaObjectType:
          description: Schema objectType on the given application that maps to an
            Account Group
          example: group
          type: string
        privileged:
          description: Determines if this Entitlement is privileged.
          example: false
          type: boolean
        cloudGoverned:
          description: Determines if this Entitlement is goverened in the cloud.
          example: false
          type: boolean
        source:
          $ref: '#/components/schemas/BaseReferenceDto'
      type: object
      example: null
    AccessSummary_access:
      example:
        name: Entitlement for Company Database
        id: 2c9180867160846801719932c5153fb7
        type: IDENTITY
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: The ID of the item being certified
          example: 2c9180867160846801719932c5153fb7
          type: string
        name:
          description: The name of the item being certified
          example: Entitlement for Company Database
          type: string
      type: object
    LifecycleState_allOf:
      properties:
        enabled:
          description: Whether the lifecycle state is enabled or disabled.
          example: true
          type: boolean
        technicalName:
          description: The technical name for lifecycle state. This is for internal
            use.
          example: Technical Name
          type: string
        description:
          description: Lifecycle state description.
          example: Lifecycle description
          type: string
        identityCount:
          description: Number of identities that have the lifecycle state.
          example: 42
          format: int32
          readOnly: true
          type: integer
        emailNotificationOption:
          $ref: '#/components/schemas/EmailNotificationOption'
        accountActions:
          items:
            $ref: '#/components/schemas/AccountAction'
          type: array
        accessProfileIds:
          description: List of unique access-profile IDs that are associated with
            the lifecycle state.
          example:
          - 2c918084660f45d6016617daa9210584
          - 2c918084660f45d6016617daa9210500
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - technicalName
      type: object
      example: null
    NonEmployeeRequest_allOf:
      properties:
        accountName:
          description: Requested identity account name.
          example: william.smith
          type: string
        firstName:
          description: Non-Employee's first name.
          example: William
          type: string
        lastName:
          description: Non-Employee's last name.
          example: Smith
          type: string
        email:
          description: Non-Employee's email.
          example: william.smith@example.com
          type: string
        phone:
          description: Non-Employee's phone.
          example: "5555555555"
          type: string
        manager:
          description: The account ID of a valid identity to serve as this non-employee's
            manager.
          example: jane.doe
          type: string
        nonEmployeeSource:
          $ref: '#/components/schemas/NonEmployeeSourceLite'
        data:
          additionalProperties:
            type: string
          description: Attribute blob/bag for a non-employee.
          example:
            description: Auditing
          type: object
        approvalItems:
          description: List of approval item for the request
          items:
            $ref: '#/components/schemas/NonEmployeeApprovalItemBase'
          type: array
        approvalStatus:
          $ref: '#/components/schemas/ApprovalStatus'
        comment:
          description: comment of requester
          example: approved
          type: string
        completionDate:
          description: When the request was completely approved.
          example: 2020-03-24T11:11:41.139-05:00
          format: date-time
          type: string
        startDate:
          description: Non-Employee employment start date.
          example: 2020-03-24T00:00:00-05:00
          format: date-time
          type: string
        endDate:
          description: Non-Employee employment end date.
          example: 2021-03-25T00:00:00-05:00
          format: date-time
          type: string
        modified:
          description: When the request was last modified.
          example: 2020-03-24T11:11:41.139-05:00
          format: date-time
          type: string
        created:
          description: When the request was created.
          example: 2020-03-24T11:11:41.139-05:00
          format: date-time
          type: string
      type: object
      example: null
    NonEmployeeSourceWithNECount_allOf:
      properties:
        nonEmployeeCount:
          description: Number of non-employee records associated with this source.
          example: 120
          format: int32
          type: integer
      type: object
      example: null
    NonEmployeeSourceWithCloudExternalId_allOf:
      properties:
        cloudExternalId:
          description: Legacy ID used for sources from the V1 API. This attribute
            will be removed from a future version of the API and will not be considered
            a breaking change. No clients should rely on this ID always being present.
          example: "99999"
          type: string
      type: object
      example: null
    NonEmployeeSource_allOf:
      properties:
        approvers:
          description: List of approvers
          items:
            $ref: '#/components/schemas/NonEmployeeIdentityReferenceWithId'
          type: array
        accountManagers:
          description: List of account managers
          items:
            $ref: '#/components/schemas/NonEmployeeIdentityReferenceWithId'
          type: array
        modified:
          description: When the request was last modified.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        created:
          description: When the request was created.
          example: 2019-08-23T18:40:35.772Z
          format: date-time
          type: string
      type: object
      example: null
    NonEmployeeApprovalItem_allOf:
      properties:
        nonEmployeeRequest:
          $ref: '#/components/schemas/NonEmployeeRequestLite'
      type: object
      example: null
    NonEmployeeApprovalItemDetail_allOf:
      properties:
        nonEmployeeRequest:
          $ref: '#/components/schemas/NonEmployeeRequestWithoutApprovalItem'
      type: object
      example: null
    SavedSearchDetail_filters:
      allOf:
      - description: The filters to be applied for each filtered field name.
        example:
          attributes.cloudAuthoritativeSource:
            type: EXISTS
            exclude: true
          accessCount:
            type: RANGE
            range:
              lower:
                value: "3"
          created:
            type: RANGE
            range:
              lower:
                value: 2019-12-01
                inclusive: true
              upper:
                value: 2020-01-01
          source.name:
            type: TERMS
            terms:
            - HR Employees
            - Corporate Active Directory
            exclude: true
          protected:
            type: TERMS
            terms:
            - "true"
        type: object
      - $ref: '#/components/schemas/Filter'
      nullable: true
    SearchArguments_owner:
      allOf:
      - $ref: '#/components/schemas/TypedReference'
      description: |
        The owner of the scheduled search being tested.
    SearchSchedule_recipients_inner:
      properties:
        type:
          description: The type of object being referenced
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: The ID of the referenced object
          example: 2c9180867624cbd7017642d8c8c81f67
          type: string
      required:
      - id
      - type
      type: object
    ReviewableEntitlement_account:
      description: Information about the status of the entitlement
      example:
        created: 2020-04-20T20:11:05.067Z
        name: Alison Ferguso
        modified: 2020-05-20T18:57:16.987Z
        disabled: false
        id: 2c9180857182305e0171993737eb29e6
        locked: false
        type: IDENTITY
        nativeIdentity: CN=Alison Ferguso
      nullable: true
      properties:
        nativeIdentity:
          description: The native identity for this account
          example: CN=Alison Ferguso
          type: string
        disabled:
          description: Indicates whether this account is currently disabled
          example: false
          type: boolean
        locked:
          description: Indicates whether this account is currently locked
          example: false
          type: boolean
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: The id associated with the account
          example: 2c9180857182305e0171993737eb29e6
          nullable: true
          type: string
        name:
          description: The account name
          example: Alison Ferguso
          nullable: true
          type: string
        created:
          description: When the account was created
          example: 2020-04-20T20:11:05.067Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: When the account was last modified
          example: 2020-05-20T18:57:16.987Z
          format: date-time
          nullable: true
          type: string
      type: object
    NonEmployeeRequestWithoutApprovalItem_allOf:
      properties:
        accountName:
          description: Requested identity account name.
          example: william.smith
          type: string
        firstName:
          description: Non-Employee's first name.
          example: William
          type: string
        lastName:
          description: Non-Employee's last name.
          example: Smith
          type: string
        email:
          description: Non-Employee's email.
          example: william.smith@example.com
          type: string
        phone:
          description: Non-Employee's phone.
          example: "5555555555"
          type: string
        manager:
          description: The account ID of a valid identity to serve as this non-employee's
            manager.
          example: jane.doe
          type: string
        nonEmployeeSource:
          $ref: '#/components/schemas/NonEmployeeSourceLiteWithSchemaAttributes'
        data:
          additionalProperties:
            type: string
          description: Attribute blob/bag for a non-employee.
          example:
            description: Auditing
          type: object
        approvalStatus:
          $ref: '#/components/schemas/ApprovalStatus'
        comment:
          description: comment of requester
          example: approved
          type: string
        completionDate:
          description: When the request was completely approved.
          example: 2020-03-24T11:11:41.139-05:00
          format: date-time
          type: string
        startDate:
          description: Non-Employee employment start date.
          example: 2020-03-24
          format: date
          type: string
        endDate:
          description: Non-Employee employment end date.
          example: 2021-03-25
          format: date
          type: string
        modified:
          description: When the request was last modified.
          example: 2020-03-24T11:11:41.139-05:00
          format: date-time
          type: string
        created:
          description: When the request was created.
          example: 2020-03-24T11:11:41.139-05:00
          format: date-time
          type: string
      type: object
      example: null
    SearchAggregationSpecification_allOf:
      properties:
        subAggregation:
          $ref: '#/components/schemas/SubSearchAggregationSpecification'
      type: object
      example: null
    AttributeDefinition_schema:
      description: A reference to the schema on the source to the attribute values
        map to.
      properties:
        type:
          description: The type of object being referenced
          enum:
          - CONNECTOR_SCHEMA
          example: CONNECTOR_SCHEMA
          type: string
        id:
          description: The object ID this reference applies to.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: The human-readable display name of the object.
          example: group
          type: string
      type: object
    BaseAccess_allOf:
      properties:
        description:
          description: The description of the access item
          example: The admin role
          type: string
        created:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        modified:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        synced:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        enabled:
          example: true
          type: boolean
        requestable:
          description: Indicates if the access can be requested
          example: true
          type: boolean
        requestCommentsRequired:
          description: Indicates if comments are required when requesting access
          example: false
          type: boolean
        owner:
          $ref: '#/components/schemas/Owner'
      type: object
      example: null
    BaseEntitlement_allOf:
      properties:
        description:
          description: A description of the entitlement
          example: The admin privilege
          type: string
        attribute:
          description: The name of the entitlement attribute
          example: admin
          type: string
        value:
          description: The value of the entitlement
          example: "true"
          type: string
      type: object
      example: null
    Access_allOf:
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        description:
          nullable: true
          type: string
          example: null
      type: object
      example: null
    DisplayReference_allOf:
      properties:
        displayName:
          example: John Q. Doe
          type: string
      type: object
      example: null
    AccountSource_allOf:
      properties:
        type:
          description: the type of source returned
          example: Delimited File
          type: string
      type: object
      example: null
    AccountRequest_result:
      properties:
        errors:
          items:
            example: |-
              [ConnectorError] [
                {
                  "code": "unrecognized_keys",
                  "keys": [
                    "groups"
                  ],
                  "path": [],
                  "message": "Unrecognized key(s) in object: 'groups'"
                }
              ] (requestId: 5e9d6df5-9b1b-47d9-9bf1-dc3a2893299e)
            type: string
          type: array
        status:
          description: The status of the account request
          example: failed
          type: string
        ticketId:
          nullable: true
          type: string
          example: null
      type: object
    BaseAccount_allOf:
      properties:
        accountId:
          description: The ID of the account
          example: john.doe
          type: string
        source:
          $ref: '#/components/schemas/AccountSource'
        disabled:
          description: Indicates if the account is disabled
          example: false
          type: boolean
        locked:
          description: Indicates if the account is locked
          example: false
          type: boolean
        privileged:
          example: false
          type: boolean
        manuallyCorrelated:
          description: Indicates if the account has been manually correlated to an
            identity
          example: false
          type: boolean
        passwordLastSet:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        entitlementAttributes:
          additionalProperties: true
          description: a map or dictionary of key/value pairs
          example:
            moderator: true
            admin: true
            trust_level: "4"
          nullable: true
          type: object
        created:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
      type: object
      example: null
    App_allOf_account:
      properties:
        id:
          description: The SailPoint generated unique ID
          example: 2c9180837dfe6949017e21f3d8cd6d49
          type: string
        accountId:
          description: The account ID generated by the source
          example: "CN=Carol Adams,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
          type: string
      type: object
      example: null
    App_allOf:
      properties:
        source:
          $ref: '#/components/schemas/Reference'
        account:
          $ref: '#/components/schemas/App_allOf_account'
      type: object
      example: null
    SectionDetails_allOf:
      properties:
        label:
          description: Label of the section
          example: Section 1
          type: string
        formItems:
          description: List of FormItems. FormItems can be SectionDetails and/or FieldDetails
          example: []
          items:
            type: object
          type: array
      type: object
      example: null
    TransformDefinition_attributes_value:
      anyOf:
      - type: string
      - type: object
    NonEmployeeSourceLiteWithSchemaAttributes_allOf:
      properties:
        schemaAttributes:
          description: List of schema attributes associated with this non-employee
            source.
          items:
            $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
          type: array
      type: object
      example: null
    SubSearchAggregationSpecification_allOf:
      properties:
        subAggregation:
          $ref: '#/components/schemas/Aggregations'
      type: object
      example: null
    Owner_allOf:
      properties:
        email:
          description: The email of the identity
          example: john.doe@sailpoint.com
          type: string
      type: object
      example: null
    SodViolationContext_conflictingAccessCriteria_leftCriteria:
      example:
        criteriaList:
        - existing: true
          name: My HR Entitlement
          id: 2c918085771e9d3301773b3cb66f6398
          type: IDENTITY
        - existing: true
          name: My HR Entitlement
          id: 2c918085771e9d3301773b3cb66f6398
          type: IDENTITY
      properties:
        criteriaList:
          items:
            $ref: '#/components/schemas/SodExemptCriteria'
          type: array
      type: object
    SodViolationContext_conflictingAccessCriteria:
      description: The object which contains the left and right hand side of the entitlements
        that got violated according to the policy.
      example:
        leftCriteria:
          criteriaList:
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
        rightCriteria:
          criteriaList:
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
      properties:
        leftCriteria:
          $ref: '#/components/schemas/SodViolationContext_conflictingAccessCriteria_leftCriteria'
        rightCriteria:
          $ref: '#/components/schemas/SodViolationContext_conflictingAccessCriteria_leftCriteria'
      type: object
    SearchIdentityReference_allOf:
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
      type: object
      example: null
  securitySchemes:
    oauth2:
      description: |
        OAuth2 Bearer token (JWT). See [IdentityNow REST API Authentication](https://developer.sailpoint.com/idn/api/authentication) for more information.
        - Directions for generating a [personal access token](https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens)
        - Directions using [client credentials flow](https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow)
        - Directions for using [authorization code flow](https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow)

        Which authentication method should I choose?  See our [guide](https://developer.sailpoint.com/idn/api/authentication#which-oauth-20-grant-flow-should-i-use)

        Learn more about how to find your `tokenUrl` and `authorizationUrl` [in our docs](https://developer.sailpoint.com/idn/api/authentication#find-your-tenants-oauth-details)
      flows:
        authorizationCode:
          authorizationUrl: https://tenant.identitynow.com/oauth/authorize
          scopes:
            sp:scopes:default: default scope
            sp:scopes:all: access to all scopes
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
        clientCredentials:
          scopes:
            sp:scopes:default: default scope
            sp:scopes:all: access to all scopes
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
      type: oauth2
