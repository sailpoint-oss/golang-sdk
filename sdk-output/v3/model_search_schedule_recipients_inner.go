/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v3

import (
	"encoding/json"
)

// SearchScheduleRecipientsInner struct for SearchScheduleRecipientsInner
type SearchScheduleRecipientsInner struct {
	// The type of object being referenced
	Type string `json:"type"`
	// The ID of the referenced object
	Id string `json:"id"`
	AdditionalProperties map[string]interface{}
}

type _SearchScheduleRecipientsInner SearchScheduleRecipientsInner

// NewSearchScheduleRecipientsInner instantiates a new SearchScheduleRecipientsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchScheduleRecipientsInner(type_ string, id string) *SearchScheduleRecipientsInner {
	this := SearchScheduleRecipientsInner{}
	this.Type = type_
	this.Id = id
	return &this
}

// NewSearchScheduleRecipientsInnerWithDefaults instantiates a new SearchScheduleRecipientsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchScheduleRecipientsInnerWithDefaults() *SearchScheduleRecipientsInner {
	this := SearchScheduleRecipientsInner{}
	return &this
}

// GetType returns the Type field value
func (o *SearchScheduleRecipientsInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SearchScheduleRecipientsInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SearchScheduleRecipientsInner) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *SearchScheduleRecipientsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SearchScheduleRecipientsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SearchScheduleRecipientsInner) SetId(v string) {
	o.Id = v
}

func (o SearchScheduleRecipientsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["id"] = o.Id
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SearchScheduleRecipientsInner) UnmarshalJSON(bytes []byte) (err error) {
	varSearchScheduleRecipientsInner := _SearchScheduleRecipientsInner{}

	if err = json.Unmarshal(bytes, &varSearchScheduleRecipientsInner); err == nil {
		*o = SearchScheduleRecipientsInner(varSearchScheduleRecipientsInner)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSearchScheduleRecipientsInner struct {
	value *SearchScheduleRecipientsInner
	isSet bool
}

func (v NullableSearchScheduleRecipientsInner) Get() *SearchScheduleRecipientsInner {
	return v.value
}

func (v *NullableSearchScheduleRecipientsInner) Set(val *SearchScheduleRecipientsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchScheduleRecipientsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchScheduleRecipientsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchScheduleRecipientsInner(val *SearchScheduleRecipientsInner) *NullableSearchScheduleRecipientsInner {
	return &NullableSearchScheduleRecipientsInner{value: val, isSet: true}
}

func (v NullableSearchScheduleRecipientsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchScheduleRecipientsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


