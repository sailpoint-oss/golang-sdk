/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sailpointsdk

import (
	"encoding/json"
)

// RoleDocumentAllOf struct for RoleDocumentAllOf
type RoleDocumentAllOf struct {
	AccessProfiles []Reference `json:"accessProfiles,omitempty"`
	AccessProfileCount *int32 `json:"accessProfileCount,omitempty"`
	Tags []string `json:"tags,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RoleDocumentAllOf RoleDocumentAllOf

// NewRoleDocumentAllOf instantiates a new RoleDocumentAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleDocumentAllOf() *RoleDocumentAllOf {
	this := RoleDocumentAllOf{}
	return &this
}

// NewRoleDocumentAllOfWithDefaults instantiates a new RoleDocumentAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleDocumentAllOfWithDefaults() *RoleDocumentAllOf {
	this := RoleDocumentAllOf{}
	return &this
}

// GetAccessProfiles returns the AccessProfiles field value if set, zero value otherwise.
func (o *RoleDocumentAllOf) GetAccessProfiles() []Reference {
	if o == nil || isNil(o.AccessProfiles) {
		var ret []Reference
		return ret
	}
	return o.AccessProfiles
}

// GetAccessProfilesOk returns a tuple with the AccessProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleDocumentAllOf) GetAccessProfilesOk() ([]Reference, bool) {
	if o == nil || isNil(o.AccessProfiles) {
		return nil, false
	}
	return o.AccessProfiles, true
}

// HasAccessProfiles returns a boolean if a field has been set.
func (o *RoleDocumentAllOf) HasAccessProfiles() bool {
	if o != nil && !isNil(o.AccessProfiles) {
		return true
	}

	return false
}

// SetAccessProfiles gets a reference to the given []Reference and assigns it to the AccessProfiles field.
func (o *RoleDocumentAllOf) SetAccessProfiles(v []Reference) {
	o.AccessProfiles = v
}

// GetAccessProfileCount returns the AccessProfileCount field value if set, zero value otherwise.
func (o *RoleDocumentAllOf) GetAccessProfileCount() int32 {
	if o == nil || isNil(o.AccessProfileCount) {
		var ret int32
		return ret
	}
	return *o.AccessProfileCount
}

// GetAccessProfileCountOk returns a tuple with the AccessProfileCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleDocumentAllOf) GetAccessProfileCountOk() (*int32, bool) {
	if o == nil || isNil(o.AccessProfileCount) {
		return nil, false
	}
	return o.AccessProfileCount, true
}

// HasAccessProfileCount returns a boolean if a field has been set.
func (o *RoleDocumentAllOf) HasAccessProfileCount() bool {
	if o != nil && !isNil(o.AccessProfileCount) {
		return true
	}

	return false
}

// SetAccessProfileCount gets a reference to the given int32 and assigns it to the AccessProfileCount field.
func (o *RoleDocumentAllOf) SetAccessProfileCount(v int32) {
	o.AccessProfileCount = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *RoleDocumentAllOf) GetTags() []string {
	if o == nil || isNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleDocumentAllOf) GetTagsOk() ([]string, bool) {
	if o == nil || isNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *RoleDocumentAllOf) HasTags() bool {
	if o != nil && !isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *RoleDocumentAllOf) SetTags(v []string) {
	o.Tags = v
}

func (o RoleDocumentAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccessProfiles) {
		toSerialize["accessProfiles"] = o.AccessProfiles
	}
	if !isNil(o.AccessProfileCount) {
		toSerialize["accessProfileCount"] = o.AccessProfileCount
	}
	if !isNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *RoleDocumentAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varRoleDocumentAllOf := _RoleDocumentAllOf{}

	if err = json.Unmarshal(bytes, &varRoleDocumentAllOf); err == nil {
		*o = RoleDocumentAllOf(varRoleDocumentAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accessProfiles")
		delete(additionalProperties, "accessProfileCount")
		delete(additionalProperties, "tags")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRoleDocumentAllOf struct {
	value *RoleDocumentAllOf
	isSet bool
}

func (v NullableRoleDocumentAllOf) Get() *RoleDocumentAllOf {
	return v.value
}

func (v *NullableRoleDocumentAllOf) Set(val *RoleDocumentAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleDocumentAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleDocumentAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleDocumentAllOf(val *RoleDocumentAllOf) *NullableRoleDocumentAllOf {
	return &NullableRoleDocumentAllOf{value: val, isSet: true}
}

func (v NullableRoleDocumentAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleDocumentAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


