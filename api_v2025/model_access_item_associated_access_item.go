/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	"fmt"
)


// AccessItemAssociatedAccessItem struct for AccessItemAssociatedAccessItem
type AccessItemAssociatedAccessItem struct {
	AccessItemAccessProfileResponse *AccessItemAccessProfileResponse
	AccessItemAccountResponse *AccessItemAccountResponse
	AccessItemAppResponse *AccessItemAppResponse
	AccessItemEntitlementResponse *AccessItemEntitlementResponse
	AccessItemRoleResponse *AccessItemRoleResponse
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *AccessItemAssociatedAccessItem) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into AccessItemAccessProfileResponse
	err = json.Unmarshal(data, &dst.AccessItemAccessProfileResponse);
	if err == nil {
		jsonAccessItemAccessProfileResponse, _ := json.Marshal(dst.AccessItemAccessProfileResponse)
		if string(jsonAccessItemAccessProfileResponse) == "{}" { // empty struct
			dst.AccessItemAccessProfileResponse = nil
		} else {
			return nil // data stored in dst.AccessItemAccessProfileResponse, return on the first match
		}
	} else {
		dst.AccessItemAccessProfileResponse = nil
	}

	// try to unmarshal JSON data into AccessItemAccountResponse
	err = json.Unmarshal(data, &dst.AccessItemAccountResponse);
	if err == nil {
		jsonAccessItemAccountResponse, _ := json.Marshal(dst.AccessItemAccountResponse)
		if string(jsonAccessItemAccountResponse) == "{}" { // empty struct
			dst.AccessItemAccountResponse = nil
		} else {
			return nil // data stored in dst.AccessItemAccountResponse, return on the first match
		}
	} else {
		dst.AccessItemAccountResponse = nil
	}

	// try to unmarshal JSON data into AccessItemAppResponse
	err = json.Unmarshal(data, &dst.AccessItemAppResponse);
	if err == nil {
		jsonAccessItemAppResponse, _ := json.Marshal(dst.AccessItemAppResponse)
		if string(jsonAccessItemAppResponse) == "{}" { // empty struct
			dst.AccessItemAppResponse = nil
		} else {
			return nil // data stored in dst.AccessItemAppResponse, return on the first match
		}
	} else {
		dst.AccessItemAppResponse = nil
	}

	// try to unmarshal JSON data into AccessItemEntitlementResponse
	err = json.Unmarshal(data, &dst.AccessItemEntitlementResponse);
	if err == nil {
		jsonAccessItemEntitlementResponse, _ := json.Marshal(dst.AccessItemEntitlementResponse)
		if string(jsonAccessItemEntitlementResponse) == "{}" { // empty struct
			dst.AccessItemEntitlementResponse = nil
		} else {
			return nil // data stored in dst.AccessItemEntitlementResponse, return on the first match
		}
	} else {
		dst.AccessItemEntitlementResponse = nil
	}

	// try to unmarshal JSON data into AccessItemRoleResponse
	err = json.Unmarshal(data, &dst.AccessItemRoleResponse);
	if err == nil {
		jsonAccessItemRoleResponse, _ := json.Marshal(dst.AccessItemRoleResponse)
		if string(jsonAccessItemRoleResponse) == "{}" { // empty struct
			dst.AccessItemRoleResponse = nil
		} else {
			return nil // data stored in dst.AccessItemRoleResponse, return on the first match
		}
	} else {
		dst.AccessItemRoleResponse = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(AccessItemAssociatedAccessItem)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *AccessItemAssociatedAccessItem) MarshalJSON() ([]byte, error) {
	if src.AccessItemAccessProfileResponse != nil {
		return json.Marshal(&src.AccessItemAccessProfileResponse)
	}

	if src.AccessItemAccountResponse != nil {
		return json.Marshal(&src.AccessItemAccountResponse)
	}

	if src.AccessItemAppResponse != nil {
		return json.Marshal(&src.AccessItemAppResponse)
	}

	if src.AccessItemEntitlementResponse != nil {
		return json.Marshal(&src.AccessItemEntitlementResponse)
	}

	if src.AccessItemRoleResponse != nil {
		return json.Marshal(&src.AccessItemRoleResponse)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableAccessItemAssociatedAccessItem struct {
	value *AccessItemAssociatedAccessItem
	isSet bool
}

func (v NullableAccessItemAssociatedAccessItem) Get() *AccessItemAssociatedAccessItem {
	return v.value
}

func (v *NullableAccessItemAssociatedAccessItem) Set(val *AccessItemAssociatedAccessItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessItemAssociatedAccessItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessItemAssociatedAccessItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessItemAssociatedAccessItem(val *AccessItemAssociatedAccessItem) *NullableAccessItemAssociatedAccessItem {
	return &NullableAccessItemAssociatedAccessItem{value: val, isSet: true}
}

func (v NullableAccessItemAssociatedAccessItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessItemAssociatedAccessItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


