/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	"fmt"
)

// checks if the AccountAllOfRecommendation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountAllOfRecommendation{}

// AccountAllOfRecommendation struct for AccountAllOfRecommendation
type AccountAllOfRecommendation struct {
	// Recommended type of account.
	Type string `json:"type"`
	// Method used to produce the recommendation. DISCOVERY - suggested by AI, SOURCE - the account comes from a source flagged as containing machine accounts, CRITERIA - the account satisfies classification criteria.
	Method string `json:"method"`
	AdditionalProperties map[string]interface{}
}

type _AccountAllOfRecommendation AccountAllOfRecommendation

// NewAccountAllOfRecommendation instantiates a new AccountAllOfRecommendation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountAllOfRecommendation(type_ string, method string) *AccountAllOfRecommendation {
	this := AccountAllOfRecommendation{}
	this.Type = type_
	this.Method = method
	return &this
}

// NewAccountAllOfRecommendationWithDefaults instantiates a new AccountAllOfRecommendation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountAllOfRecommendationWithDefaults() *AccountAllOfRecommendation {
	this := AccountAllOfRecommendation{}
	return &this
}

// GetType returns the Type field value
func (o *AccountAllOfRecommendation) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AccountAllOfRecommendation) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AccountAllOfRecommendation) SetType(v string) {
	o.Type = v
}

// GetMethod returns the Method field value
func (o *AccountAllOfRecommendation) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *AccountAllOfRecommendation) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *AccountAllOfRecommendation) SetMethod(v string) {
	o.Method = v
}

func (o AccountAllOfRecommendation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountAllOfRecommendation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["method"] = o.Method

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountAllOfRecommendation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"method",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountAllOfRecommendation := _AccountAllOfRecommendation{}

	err = json.Unmarshal(data, &varAccountAllOfRecommendation)

	if err != nil {
		return err
	}

	*o = AccountAllOfRecommendation(varAccountAllOfRecommendation)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "method")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountAllOfRecommendation struct {
	value *AccountAllOfRecommendation
	isSet bool
}

func (v NullableAccountAllOfRecommendation) Get() *AccountAllOfRecommendation {
	return v.value
}

func (v *NullableAccountAllOfRecommendation) Set(val *AccountAllOfRecommendation) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountAllOfRecommendation) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountAllOfRecommendation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountAllOfRecommendation(val *AccountAllOfRecommendation) *NullableAccountAllOfRecommendation {
	return &NullableAccountAllOfRecommendation{value: val, isSet: true}
}

func (v NullableAccountAllOfRecommendation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountAllOfRecommendation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


