/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the SourceConnectionsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourceConnectionsDto{}

// SourceConnectionsDto struct for SourceConnectionsDto
type SourceConnectionsDto struct {
	// The IdentityProfile attached to this source
	IdentityProfiles []IdentityProfilesConnections `json:"identityProfiles,omitempty"`
	// Name of the CredentialProfile attached to this source
	CredentialProfiles []string `json:"credentialProfiles,omitempty"`
	// The attributes attached to this source
	SourceAttributes []string `json:"sourceAttributes,omitempty"`
	// The profiles attached to this source
	MappingProfiles []string `json:"mappingProfiles,omitempty"`
	// A list of custom transforms associated with this source. A transform will be considered associated with a source if any attributes of the transform specify the source as the sourceName.
	DependentCustomTransforms []TransformRead `json:"dependentCustomTransforms,omitempty"`
	DependentApps []DependantAppConnections `json:"dependentApps,omitempty"`
	MissingDependents []DependantConnectionsMissingDto `json:"missingDependents,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SourceConnectionsDto SourceConnectionsDto

// NewSourceConnectionsDto instantiates a new SourceConnectionsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceConnectionsDto() *SourceConnectionsDto {
	this := SourceConnectionsDto{}
	return &this
}

// NewSourceConnectionsDtoWithDefaults instantiates a new SourceConnectionsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceConnectionsDtoWithDefaults() *SourceConnectionsDto {
	this := SourceConnectionsDto{}
	return &this
}

// GetIdentityProfiles returns the IdentityProfiles field value if set, zero value otherwise.
func (o *SourceConnectionsDto) GetIdentityProfiles() []IdentityProfilesConnections {
	if o == nil || IsNil(o.IdentityProfiles) {
		var ret []IdentityProfilesConnections
		return ret
	}
	return o.IdentityProfiles
}

// GetIdentityProfilesOk returns a tuple with the IdentityProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionsDto) GetIdentityProfilesOk() ([]IdentityProfilesConnections, bool) {
	if o == nil || IsNil(o.IdentityProfiles) {
		return nil, false
	}
	return o.IdentityProfiles, true
}

// HasIdentityProfiles returns a boolean if a field has been set.
func (o *SourceConnectionsDto) HasIdentityProfiles() bool {
	if o != nil && !IsNil(o.IdentityProfiles) {
		return true
	}

	return false
}

// SetIdentityProfiles gets a reference to the given []IdentityProfilesConnections and assigns it to the IdentityProfiles field.
func (o *SourceConnectionsDto) SetIdentityProfiles(v []IdentityProfilesConnections) {
	o.IdentityProfiles = v
}

// GetCredentialProfiles returns the CredentialProfiles field value if set, zero value otherwise.
func (o *SourceConnectionsDto) GetCredentialProfiles() []string {
	if o == nil || IsNil(o.CredentialProfiles) {
		var ret []string
		return ret
	}
	return o.CredentialProfiles
}

// GetCredentialProfilesOk returns a tuple with the CredentialProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionsDto) GetCredentialProfilesOk() ([]string, bool) {
	if o == nil || IsNil(o.CredentialProfiles) {
		return nil, false
	}
	return o.CredentialProfiles, true
}

// HasCredentialProfiles returns a boolean if a field has been set.
func (o *SourceConnectionsDto) HasCredentialProfiles() bool {
	if o != nil && !IsNil(o.CredentialProfiles) {
		return true
	}

	return false
}

// SetCredentialProfiles gets a reference to the given []string and assigns it to the CredentialProfiles field.
func (o *SourceConnectionsDto) SetCredentialProfiles(v []string) {
	o.CredentialProfiles = v
}

// GetSourceAttributes returns the SourceAttributes field value if set, zero value otherwise.
func (o *SourceConnectionsDto) GetSourceAttributes() []string {
	if o == nil || IsNil(o.SourceAttributes) {
		var ret []string
		return ret
	}
	return o.SourceAttributes
}

// GetSourceAttributesOk returns a tuple with the SourceAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionsDto) GetSourceAttributesOk() ([]string, bool) {
	if o == nil || IsNil(o.SourceAttributes) {
		return nil, false
	}
	return o.SourceAttributes, true
}

// HasSourceAttributes returns a boolean if a field has been set.
func (o *SourceConnectionsDto) HasSourceAttributes() bool {
	if o != nil && !IsNil(o.SourceAttributes) {
		return true
	}

	return false
}

// SetSourceAttributes gets a reference to the given []string and assigns it to the SourceAttributes field.
func (o *SourceConnectionsDto) SetSourceAttributes(v []string) {
	o.SourceAttributes = v
}

// GetMappingProfiles returns the MappingProfiles field value if set, zero value otherwise.
func (o *SourceConnectionsDto) GetMappingProfiles() []string {
	if o == nil || IsNil(o.MappingProfiles) {
		var ret []string
		return ret
	}
	return o.MappingProfiles
}

// GetMappingProfilesOk returns a tuple with the MappingProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionsDto) GetMappingProfilesOk() ([]string, bool) {
	if o == nil || IsNil(o.MappingProfiles) {
		return nil, false
	}
	return o.MappingProfiles, true
}

// HasMappingProfiles returns a boolean if a field has been set.
func (o *SourceConnectionsDto) HasMappingProfiles() bool {
	if o != nil && !IsNil(o.MappingProfiles) {
		return true
	}

	return false
}

// SetMappingProfiles gets a reference to the given []string and assigns it to the MappingProfiles field.
func (o *SourceConnectionsDto) SetMappingProfiles(v []string) {
	o.MappingProfiles = v
}

// GetDependentCustomTransforms returns the DependentCustomTransforms field value if set, zero value otherwise.
func (o *SourceConnectionsDto) GetDependentCustomTransforms() []TransformRead {
	if o == nil || IsNil(o.DependentCustomTransforms) {
		var ret []TransformRead
		return ret
	}
	return o.DependentCustomTransforms
}

// GetDependentCustomTransformsOk returns a tuple with the DependentCustomTransforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionsDto) GetDependentCustomTransformsOk() ([]TransformRead, bool) {
	if o == nil || IsNil(o.DependentCustomTransforms) {
		return nil, false
	}
	return o.DependentCustomTransforms, true
}

// HasDependentCustomTransforms returns a boolean if a field has been set.
func (o *SourceConnectionsDto) HasDependentCustomTransforms() bool {
	if o != nil && !IsNil(o.DependentCustomTransforms) {
		return true
	}

	return false
}

// SetDependentCustomTransforms gets a reference to the given []TransformRead and assigns it to the DependentCustomTransforms field.
func (o *SourceConnectionsDto) SetDependentCustomTransforms(v []TransformRead) {
	o.DependentCustomTransforms = v
}

// GetDependentApps returns the DependentApps field value if set, zero value otherwise.
func (o *SourceConnectionsDto) GetDependentApps() []DependantAppConnections {
	if o == nil || IsNil(o.DependentApps) {
		var ret []DependantAppConnections
		return ret
	}
	return o.DependentApps
}

// GetDependentAppsOk returns a tuple with the DependentApps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionsDto) GetDependentAppsOk() ([]DependantAppConnections, bool) {
	if o == nil || IsNil(o.DependentApps) {
		return nil, false
	}
	return o.DependentApps, true
}

// HasDependentApps returns a boolean if a field has been set.
func (o *SourceConnectionsDto) HasDependentApps() bool {
	if o != nil && !IsNil(o.DependentApps) {
		return true
	}

	return false
}

// SetDependentApps gets a reference to the given []DependantAppConnections and assigns it to the DependentApps field.
func (o *SourceConnectionsDto) SetDependentApps(v []DependantAppConnections) {
	o.DependentApps = v
}

// GetMissingDependents returns the MissingDependents field value if set, zero value otherwise.
func (o *SourceConnectionsDto) GetMissingDependents() []DependantConnectionsMissingDto {
	if o == nil || IsNil(o.MissingDependents) {
		var ret []DependantConnectionsMissingDto
		return ret
	}
	return o.MissingDependents
}

// GetMissingDependentsOk returns a tuple with the MissingDependents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceConnectionsDto) GetMissingDependentsOk() ([]DependantConnectionsMissingDto, bool) {
	if o == nil || IsNil(o.MissingDependents) {
		return nil, false
	}
	return o.MissingDependents, true
}

// HasMissingDependents returns a boolean if a field has been set.
func (o *SourceConnectionsDto) HasMissingDependents() bool {
	if o != nil && !IsNil(o.MissingDependents) {
		return true
	}

	return false
}

// SetMissingDependents gets a reference to the given []DependantConnectionsMissingDto and assigns it to the MissingDependents field.
func (o *SourceConnectionsDto) SetMissingDependents(v []DependantConnectionsMissingDto) {
	o.MissingDependents = v
}

func (o SourceConnectionsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceConnectionsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdentityProfiles) {
		toSerialize["identityProfiles"] = o.IdentityProfiles
	}
	if !IsNil(o.CredentialProfiles) {
		toSerialize["credentialProfiles"] = o.CredentialProfiles
	}
	if !IsNil(o.SourceAttributes) {
		toSerialize["sourceAttributes"] = o.SourceAttributes
	}
	if !IsNil(o.MappingProfiles) {
		toSerialize["mappingProfiles"] = o.MappingProfiles
	}
	if !IsNil(o.DependentCustomTransforms) {
		toSerialize["dependentCustomTransforms"] = o.DependentCustomTransforms
	}
	if !IsNil(o.DependentApps) {
		toSerialize["dependentApps"] = o.DependentApps
	}
	if !IsNil(o.MissingDependents) {
		toSerialize["missingDependents"] = o.MissingDependents
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SourceConnectionsDto) UnmarshalJSON(data []byte) (err error) {
	varSourceConnectionsDto := _SourceConnectionsDto{}

	err = json.Unmarshal(data, &varSourceConnectionsDto)

	if err != nil {
		return err
	}

	*o = SourceConnectionsDto(varSourceConnectionsDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "identityProfiles")
		delete(additionalProperties, "credentialProfiles")
		delete(additionalProperties, "sourceAttributes")
		delete(additionalProperties, "mappingProfiles")
		delete(additionalProperties, "dependentCustomTransforms")
		delete(additionalProperties, "dependentApps")
		delete(additionalProperties, "missingDependents")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSourceConnectionsDto struct {
	value *SourceConnectionsDto
	isSet bool
}

func (v NullableSourceConnectionsDto) Get() *SourceConnectionsDto {
	return v.value
}

func (v *NullableSourceConnectionsDto) Set(val *SourceConnectionsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceConnectionsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceConnectionsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceConnectionsDto(val *SourceConnectionsDto) *NullableSourceConnectionsDto {
	return &NullableSourceConnectionsDto{value: val, isSet: true}
}

func (v NullableSourceConnectionsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceConnectionsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


