/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the InviteIdentitiesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InviteIdentitiesRequest{}

// InviteIdentitiesRequest struct for InviteIdentitiesRequest
type InviteIdentitiesRequest struct {
	// The list of Identities IDs to invite - required when 'uninvited' is false
	Ids []string `json:"ids,omitempty"`
	// indicator (optional) to invite all unregistered identities in the system within a limit 1000. This parameter makes sense only when 'ids' is empty.
	Uninvited *bool `json:"uninvited,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InviteIdentitiesRequest InviteIdentitiesRequest

// NewInviteIdentitiesRequest instantiates a new InviteIdentitiesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInviteIdentitiesRequest() *InviteIdentitiesRequest {
	this := InviteIdentitiesRequest{}
	var uninvited bool = false
	this.Uninvited = &uninvited
	return &this
}

// NewInviteIdentitiesRequestWithDefaults instantiates a new InviteIdentitiesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInviteIdentitiesRequestWithDefaults() *InviteIdentitiesRequest {
	this := InviteIdentitiesRequest{}
	var uninvited bool = false
	this.Uninvited = &uninvited
	return &this
}

// GetIds returns the Ids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InviteIdentitiesRequest) GetIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InviteIdentitiesRequest) GetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *InviteIdentitiesRequest) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []string and assigns it to the Ids field.
func (o *InviteIdentitiesRequest) SetIds(v []string) {
	o.Ids = v
}

// GetUninvited returns the Uninvited field value if set, zero value otherwise.
func (o *InviteIdentitiesRequest) GetUninvited() bool {
	if o == nil || IsNil(o.Uninvited) {
		var ret bool
		return ret
	}
	return *o.Uninvited
}

// GetUninvitedOk returns a tuple with the Uninvited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteIdentitiesRequest) GetUninvitedOk() (*bool, bool) {
	if o == nil || IsNil(o.Uninvited) {
		return nil, false
	}
	return o.Uninvited, true
}

// HasUninvited returns a boolean if a field has been set.
func (o *InviteIdentitiesRequest) HasUninvited() bool {
	if o != nil && !IsNil(o.Uninvited) {
		return true
	}

	return false
}

// SetUninvited gets a reference to the given bool and assigns it to the Uninvited field.
func (o *InviteIdentitiesRequest) SetUninvited(v bool) {
	o.Uninvited = &v
}

func (o InviteIdentitiesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InviteIdentitiesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Ids != nil {
		toSerialize["ids"] = o.Ids
	}
	if !IsNil(o.Uninvited) {
		toSerialize["uninvited"] = o.Uninvited
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InviteIdentitiesRequest) UnmarshalJSON(data []byte) (err error) {
	varInviteIdentitiesRequest := _InviteIdentitiesRequest{}

	err = json.Unmarshal(data, &varInviteIdentitiesRequest)

	if err != nil {
		return err
	}

	*o = InviteIdentitiesRequest(varInviteIdentitiesRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ids")
		delete(additionalProperties, "uninvited")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInviteIdentitiesRequest struct {
	value *InviteIdentitiesRequest
	isSet bool
}

func (v NullableInviteIdentitiesRequest) Get() *InviteIdentitiesRequest {
	return v.value
}

func (v *NullableInviteIdentitiesRequest) Set(val *InviteIdentitiesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteIdentitiesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteIdentitiesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteIdentitiesRequest(val *InviteIdentitiesRequest) *NullableInviteIdentitiesRequest {
	return &NullableInviteIdentitiesRequest{value: val, isSet: true}
}

func (v NullableInviteIdentitiesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteIdentitiesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


