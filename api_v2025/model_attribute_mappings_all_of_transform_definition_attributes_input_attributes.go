/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes{}

// AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes Attibute Mapping Object
type AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes struct {
	// The name of attribute
	AttributeName *string `json:"attributeName,omitempty"`
	// Name of the Source
	SourceName *string `json:"sourceName,omitempty"`
	// ID of the Source
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes

// NewAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes instantiates a new AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes() *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes {
	this := AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes{}
	return &this
}

// NewAttributeMappingsAllOfTransformDefinitionAttributesInputAttributesWithDefaults instantiates a new AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeMappingsAllOfTransformDefinitionAttributesInputAttributesWithDefaults() *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes {
	this := AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes{}
	return &this
}

// GetAttributeName returns the AttributeName field value if set, zero value otherwise.
func (o *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) GetAttributeName() string {
	if o == nil || IsNil(o.AttributeName) {
		var ret string
		return ret
	}
	return *o.AttributeName
}

// GetAttributeNameOk returns a tuple with the AttributeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) GetAttributeNameOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeName) {
		return nil, false
	}
	return o.AttributeName, true
}

// HasAttributeName returns a boolean if a field has been set.
func (o *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) HasAttributeName() bool {
	if o != nil && !IsNil(o.AttributeName) {
		return true
	}

	return false
}

// SetAttributeName gets a reference to the given string and assigns it to the AttributeName field.
func (o *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) SetAttributeName(v string) {
	o.AttributeName = &v
}

// GetSourceName returns the SourceName field value if set, zero value otherwise.
func (o *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) GetSourceName() string {
	if o == nil || IsNil(o.SourceName) {
		var ret string
		return ret
	}
	return *o.SourceName
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) GetSourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceName) {
		return nil, false
	}
	return o.SourceName, true
}

// HasSourceName returns a boolean if a field has been set.
func (o *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) HasSourceName() bool {
	if o != nil && !IsNil(o.SourceName) {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given string and assigns it to the SourceName field.
func (o *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) SetSourceName(v string) {
	o.SourceName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) SetName(v string) {
	o.Name = &v
}

func (o AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttributeName) {
		toSerialize["attributeName"] = o.AttributeName
	}
	if !IsNil(o.SourceName) {
		toSerialize["sourceName"] = o.SourceName
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) UnmarshalJSON(data []byte) (err error) {
	varAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes := _AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes{}

	err = json.Unmarshal(data, &varAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes)

	if err != nil {
		return err
	}

	*o = AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes(varAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "attributeName")
		delete(additionalProperties, "sourceName")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes struct {
	value *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes
	isSet bool
}

func (v NullableAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) Get() *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes {
	return v.value
}

func (v *NullableAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) Set(val *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes(val *AttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) *NullableAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes {
	return &NullableAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes{value: val, isSet: true}
}

func (v NullableAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeMappingsAllOfTransformDefinitionAttributesInputAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


