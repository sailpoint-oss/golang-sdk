/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the ApprovalAttributesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApprovalAttributesRequest{}

// ApprovalAttributesRequest Approval Attributes Request
type ApprovalAttributesRequest struct {
	// Additional attributes as key-value pairs that are not part of the standard schema but can be included for custom data.
	AdditionalAttributes *map[string]string `json:"additionalAttributes,omitempty"`
	// Comment associated with the request.
	Comment *string `json:"comment,omitempty"`
	// List of attribute keys to be removed.
	RemoveAttributeKeys []string `json:"removeAttributeKeys,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApprovalAttributesRequest ApprovalAttributesRequest

// NewApprovalAttributesRequest instantiates a new ApprovalAttributesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalAttributesRequest() *ApprovalAttributesRequest {
	this := ApprovalAttributesRequest{}
	return &this
}

// NewApprovalAttributesRequestWithDefaults instantiates a new ApprovalAttributesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalAttributesRequestWithDefaults() *ApprovalAttributesRequest {
	this := ApprovalAttributesRequest{}
	return &this
}

// GetAdditionalAttributes returns the AdditionalAttributes field value if set, zero value otherwise.
func (o *ApprovalAttributesRequest) GetAdditionalAttributes() map[string]string {
	if o == nil || IsNil(o.AdditionalAttributes) {
		var ret map[string]string
		return ret
	}
	return *o.AdditionalAttributes
}

// GetAdditionalAttributesOk returns a tuple with the AdditionalAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalAttributesRequest) GetAdditionalAttributesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.AdditionalAttributes) {
		return nil, false
	}
	return o.AdditionalAttributes, true
}

// HasAdditionalAttributes returns a boolean if a field has been set.
func (o *ApprovalAttributesRequest) HasAdditionalAttributes() bool {
	if o != nil && !IsNil(o.AdditionalAttributes) {
		return true
	}

	return false
}

// SetAdditionalAttributes gets a reference to the given map[string]string and assigns it to the AdditionalAttributes field.
func (o *ApprovalAttributesRequest) SetAdditionalAttributes(v map[string]string) {
	o.AdditionalAttributes = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ApprovalAttributesRequest) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalAttributesRequest) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ApprovalAttributesRequest) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ApprovalAttributesRequest) SetComment(v string) {
	o.Comment = &v
}

// GetRemoveAttributeKeys returns the RemoveAttributeKeys field value if set, zero value otherwise.
func (o *ApprovalAttributesRequest) GetRemoveAttributeKeys() []string {
	if o == nil || IsNil(o.RemoveAttributeKeys) {
		var ret []string
		return ret
	}
	return o.RemoveAttributeKeys
}

// GetRemoveAttributeKeysOk returns a tuple with the RemoveAttributeKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalAttributesRequest) GetRemoveAttributeKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.RemoveAttributeKeys) {
		return nil, false
	}
	return o.RemoveAttributeKeys, true
}

// HasRemoveAttributeKeys returns a boolean if a field has been set.
func (o *ApprovalAttributesRequest) HasRemoveAttributeKeys() bool {
	if o != nil && !IsNil(o.RemoveAttributeKeys) {
		return true
	}

	return false
}

// SetRemoveAttributeKeys gets a reference to the given []string and assigns it to the RemoveAttributeKeys field.
func (o *ApprovalAttributesRequest) SetRemoveAttributeKeys(v []string) {
	o.RemoveAttributeKeys = v
}

func (o ApprovalAttributesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApprovalAttributesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalAttributes) {
		toSerialize["additionalAttributes"] = o.AdditionalAttributes
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.RemoveAttributeKeys) {
		toSerialize["removeAttributeKeys"] = o.RemoveAttributeKeys
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApprovalAttributesRequest) UnmarshalJSON(data []byte) (err error) {
	varApprovalAttributesRequest := _ApprovalAttributesRequest{}

	err = json.Unmarshal(data, &varApprovalAttributesRequest)

	if err != nil {
		return err
	}

	*o = ApprovalAttributesRequest(varApprovalAttributesRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "additionalAttributes")
		delete(additionalProperties, "comment")
		delete(additionalProperties, "removeAttributeKeys")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApprovalAttributesRequest struct {
	value *ApprovalAttributesRequest
	isSet bool
}

func (v NullableApprovalAttributesRequest) Get() *ApprovalAttributesRequest {
	return v.value
}

func (v *NullableApprovalAttributesRequest) Set(val *ApprovalAttributesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalAttributesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalAttributesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalAttributesRequest(val *ApprovalAttributesRequest) *NullableApprovalAttributesRequest {
	return &NullableApprovalAttributesRequest{value: val, isSet: true}
}

func (v NullableApprovalAttributesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalAttributesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


