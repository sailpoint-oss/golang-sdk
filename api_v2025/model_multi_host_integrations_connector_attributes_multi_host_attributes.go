/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the MultiHostIntegrationsConnectorAttributesMultiHostAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiHostIntegrationsConnectorAttributesMultiHostAttributes{}

// MultiHostIntegrationsConnectorAttributesMultiHostAttributes Attributes of Multi-Host Integration
type MultiHostIntegrationsConnectorAttributesMultiHostAttributes struct {
	// Password.
	Password *string `json:"password,omitempty"`
	// Connector file.
	ConnectorFiles *string `json:"connector_files,omitempty"`
	// Authentication type.
	AuthType *string `json:"authType,omitempty"`
	// Username.
	User *string `json:"user,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MultiHostIntegrationsConnectorAttributesMultiHostAttributes MultiHostIntegrationsConnectorAttributesMultiHostAttributes

// NewMultiHostIntegrationsConnectorAttributesMultiHostAttributes instantiates a new MultiHostIntegrationsConnectorAttributesMultiHostAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiHostIntegrationsConnectorAttributesMultiHostAttributes() *MultiHostIntegrationsConnectorAttributesMultiHostAttributes {
	this := MultiHostIntegrationsConnectorAttributesMultiHostAttributes{}
	return &this
}

// NewMultiHostIntegrationsConnectorAttributesMultiHostAttributesWithDefaults instantiates a new MultiHostIntegrationsConnectorAttributesMultiHostAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiHostIntegrationsConnectorAttributesMultiHostAttributesWithDefaults() *MultiHostIntegrationsConnectorAttributesMultiHostAttributes {
	this := MultiHostIntegrationsConnectorAttributesMultiHostAttributes{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) SetPassword(v string) {
	o.Password = &v
}

// GetConnectorFiles returns the ConnectorFiles field value if set, zero value otherwise.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) GetConnectorFiles() string {
	if o == nil || IsNil(o.ConnectorFiles) {
		var ret string
		return ret
	}
	return *o.ConnectorFiles
}

// GetConnectorFilesOk returns a tuple with the ConnectorFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) GetConnectorFilesOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorFiles) {
		return nil, false
	}
	return o.ConnectorFiles, true
}

// HasConnectorFiles returns a boolean if a field has been set.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) HasConnectorFiles() bool {
	if o != nil && !IsNil(o.ConnectorFiles) {
		return true
	}

	return false
}

// SetConnectorFiles gets a reference to the given string and assigns it to the ConnectorFiles field.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) SetConnectorFiles(v string) {
	o.ConnectorFiles = &v
}

// GetAuthType returns the AuthType field value if set, zero value otherwise.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) GetAuthType() string {
	if o == nil || IsNil(o.AuthType) {
		var ret string
		return ret
	}
	return *o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) GetAuthTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthType) {
		return nil, false
	}
	return o.AuthType, true
}

// HasAuthType returns a boolean if a field has been set.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) HasAuthType() bool {
	if o != nil && !IsNil(o.AuthType) {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given string and assigns it to the AuthType field.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) SetAuthType(v string) {
	o.AuthType = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) SetUser(v string) {
	o.User = &v
}

func (o MultiHostIntegrationsConnectorAttributesMultiHostAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiHostIntegrationsConnectorAttributesMultiHostAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.ConnectorFiles) {
		toSerialize["connector_files"] = o.ConnectorFiles
	}
	if !IsNil(o.AuthType) {
		toSerialize["authType"] = o.AuthType
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) UnmarshalJSON(data []byte) (err error) {
	varMultiHostIntegrationsConnectorAttributesMultiHostAttributes := _MultiHostIntegrationsConnectorAttributesMultiHostAttributes{}

	err = json.Unmarshal(data, &varMultiHostIntegrationsConnectorAttributesMultiHostAttributes)

	if err != nil {
		return err
	}

	*o = MultiHostIntegrationsConnectorAttributesMultiHostAttributes(varMultiHostIntegrationsConnectorAttributesMultiHostAttributes)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "password")
		delete(additionalProperties, "connector_files")
		delete(additionalProperties, "authType")
		delete(additionalProperties, "user")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMultiHostIntegrationsConnectorAttributesMultiHostAttributes struct {
	value *MultiHostIntegrationsConnectorAttributesMultiHostAttributes
	isSet bool
}

func (v NullableMultiHostIntegrationsConnectorAttributesMultiHostAttributes) Get() *MultiHostIntegrationsConnectorAttributesMultiHostAttributes {
	return v.value
}

func (v *NullableMultiHostIntegrationsConnectorAttributesMultiHostAttributes) Set(val *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiHostIntegrationsConnectorAttributesMultiHostAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiHostIntegrationsConnectorAttributesMultiHostAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiHostIntegrationsConnectorAttributesMultiHostAttributes(val *MultiHostIntegrationsConnectorAttributesMultiHostAttributes) *NullableMultiHostIntegrationsConnectorAttributesMultiHostAttributes {
	return &NullableMultiHostIntegrationsConnectorAttributesMultiHostAttributes{value: val, isSet: true}
}

func (v NullableMultiHostIntegrationsConnectorAttributesMultiHostAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiHostIntegrationsConnectorAttributesMultiHostAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


