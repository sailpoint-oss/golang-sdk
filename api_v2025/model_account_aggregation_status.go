/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	
)

// checks if the AccountAggregationStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountAggregationStatus{}

// AccountAggregationStatus struct for AccountAggregationStatus
type AccountAggregationStatus struct {
	// When the aggregation started.
	Start NullableTime `json:"start,omitempty"`
	// STARTED - Aggregation started, but source account iteration has not completed.  ACCOUNTS_COLLECTED - Source account iteration completed, but all accounts have not yet been processed.  COMPLETED - Aggregation completed (*possibly with errors*).  CANCELLED - Aggregation cancelled by user.  RETRIED - Aggregation retried because of connectivity issues with the Virtual Appliance.  TERMINATED - Aggregation marked as failed after 3 tries after connectivity issues with the Virtual Appliance. 
	Status *string `json:"status,omitempty"`
	// The total number of *NEW, CHANGED and DELETED* accounts that need to be processed for this aggregation. This does not include accounts that were unchanged since the previous aggregation. This can be zero if there were no new, changed or deleted accounts since the previous aggregation. *Only available when status is ACCOUNTS_COLLECTED or COMPLETED.*
	TotalAccounts *int32 `json:"totalAccounts,omitempty"`
	// The number of *NEW, CHANGED and DELETED* accounts that have been processed so far. This reflects the number of accounts that have been processed at the time of the API call, and may increase on subsequent API calls while the status is ACCOUNTS_COLLECTED. *Only available when status is ACCOUNTS_COLLECTED or COMPLETED.*
	ProcessedAccounts *int32 `json:"processedAccounts,omitempty"`
	// The total number of accounts that have been marked for deletion during the aggregation. *Only available when status is ACCOUNTS_COLLECTED or COMPLETED.*
	TotalAccountsMarkedForDeletion *int32 `json:"totalAccountsMarkedForDeletion,omitempty"`
	// The number of accounts that have been deleted during the aggregation. *Only available when status is ACCOUNTS_COLLECTED or COMPLETED.*
	DeletedAccounts *int32 `json:"deletedAccounts,omitempty"`
	// The total number of unique identities that have been marked for refresh. *Only available when status is ACCOUNTS_COLLECTED or COMPLETED.*
	TotalIdentities *int32 `json:"totalIdentities,omitempty"`
	// The number of unique identities that have been refreshed at the time of the API call, and may increase on subsequent API calls while the status is ACCOUNTS_COLLECTED. *Only available when status is ACCOUNTS_COLLECTED or COMPLETED.*
	ProcessedIdentities *int32 `json:"processedIdentities,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountAggregationStatus AccountAggregationStatus

// NewAccountAggregationStatus instantiates a new AccountAggregationStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountAggregationStatus() *AccountAggregationStatus {
	this := AccountAggregationStatus{}
	return &this
}

// NewAccountAggregationStatusWithDefaults instantiates a new AccountAggregationStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountAggregationStatusWithDefaults() *AccountAggregationStatus {
	this := AccountAggregationStatus{}
	return &this
}

// GetStart returns the Start field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountAggregationStatus) GetStart() SailPointTime {
	if o == nil || IsNil(o.Start.Get()) {
		var ret SailPointTime
		return ret
	}
	return *o.Start.Get()
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountAggregationStatus) GetStartOk() (*SailPointTime, bool) {
	if o == nil {
		return nil, false
	}
	return o.Start.Get(), o.Start.IsSet()
}

// HasStart returns a boolean if a field has been set.
func (o *AccountAggregationStatus) HasStart() bool {
	if o != nil && o.Start.IsSet() {
		return true
	}

	return false
}

// SetStart gets a reference to the given NullableTime and assigns it to the Start field.
func (o *AccountAggregationStatus) SetStart(v SailPointTime) {
	o.Start.Set(&v)
}
// SetStartNil sets the value for Start to be an explicit nil
func (o *AccountAggregationStatus) SetStartNil() {
	o.Start.Set(nil)
}

// UnsetStart ensures that no value is present for Start, not even an explicit nil
func (o *AccountAggregationStatus) UnsetStart() {
	o.Start.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AccountAggregationStatus) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAggregationStatus) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AccountAggregationStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AccountAggregationStatus) SetStatus(v string) {
	o.Status = &v
}

// GetTotalAccounts returns the TotalAccounts field value if set, zero value otherwise.
func (o *AccountAggregationStatus) GetTotalAccounts() int32 {
	if o == nil || IsNil(o.TotalAccounts) {
		var ret int32
		return ret
	}
	return *o.TotalAccounts
}

// GetTotalAccountsOk returns a tuple with the TotalAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAggregationStatus) GetTotalAccountsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalAccounts) {
		return nil, false
	}
	return o.TotalAccounts, true
}

// HasTotalAccounts returns a boolean if a field has been set.
func (o *AccountAggregationStatus) HasTotalAccounts() bool {
	if o != nil && !IsNil(o.TotalAccounts) {
		return true
	}

	return false
}

// SetTotalAccounts gets a reference to the given int32 and assigns it to the TotalAccounts field.
func (o *AccountAggregationStatus) SetTotalAccounts(v int32) {
	o.TotalAccounts = &v
}

// GetProcessedAccounts returns the ProcessedAccounts field value if set, zero value otherwise.
func (o *AccountAggregationStatus) GetProcessedAccounts() int32 {
	if o == nil || IsNil(o.ProcessedAccounts) {
		var ret int32
		return ret
	}
	return *o.ProcessedAccounts
}

// GetProcessedAccountsOk returns a tuple with the ProcessedAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAggregationStatus) GetProcessedAccountsOk() (*int32, bool) {
	if o == nil || IsNil(o.ProcessedAccounts) {
		return nil, false
	}
	return o.ProcessedAccounts, true
}

// HasProcessedAccounts returns a boolean if a field has been set.
func (o *AccountAggregationStatus) HasProcessedAccounts() bool {
	if o != nil && !IsNil(o.ProcessedAccounts) {
		return true
	}

	return false
}

// SetProcessedAccounts gets a reference to the given int32 and assigns it to the ProcessedAccounts field.
func (o *AccountAggregationStatus) SetProcessedAccounts(v int32) {
	o.ProcessedAccounts = &v
}

// GetTotalAccountsMarkedForDeletion returns the TotalAccountsMarkedForDeletion field value if set, zero value otherwise.
func (o *AccountAggregationStatus) GetTotalAccountsMarkedForDeletion() int32 {
	if o == nil || IsNil(o.TotalAccountsMarkedForDeletion) {
		var ret int32
		return ret
	}
	return *o.TotalAccountsMarkedForDeletion
}

// GetTotalAccountsMarkedForDeletionOk returns a tuple with the TotalAccountsMarkedForDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAggregationStatus) GetTotalAccountsMarkedForDeletionOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalAccountsMarkedForDeletion) {
		return nil, false
	}
	return o.TotalAccountsMarkedForDeletion, true
}

// HasTotalAccountsMarkedForDeletion returns a boolean if a field has been set.
func (o *AccountAggregationStatus) HasTotalAccountsMarkedForDeletion() bool {
	if o != nil && !IsNil(o.TotalAccountsMarkedForDeletion) {
		return true
	}

	return false
}

// SetTotalAccountsMarkedForDeletion gets a reference to the given int32 and assigns it to the TotalAccountsMarkedForDeletion field.
func (o *AccountAggregationStatus) SetTotalAccountsMarkedForDeletion(v int32) {
	o.TotalAccountsMarkedForDeletion = &v
}

// GetDeletedAccounts returns the DeletedAccounts field value if set, zero value otherwise.
func (o *AccountAggregationStatus) GetDeletedAccounts() int32 {
	if o == nil || IsNil(o.DeletedAccounts) {
		var ret int32
		return ret
	}
	return *o.DeletedAccounts
}

// GetDeletedAccountsOk returns a tuple with the DeletedAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAggregationStatus) GetDeletedAccountsOk() (*int32, bool) {
	if o == nil || IsNil(o.DeletedAccounts) {
		return nil, false
	}
	return o.DeletedAccounts, true
}

// HasDeletedAccounts returns a boolean if a field has been set.
func (o *AccountAggregationStatus) HasDeletedAccounts() bool {
	if o != nil && !IsNil(o.DeletedAccounts) {
		return true
	}

	return false
}

// SetDeletedAccounts gets a reference to the given int32 and assigns it to the DeletedAccounts field.
func (o *AccountAggregationStatus) SetDeletedAccounts(v int32) {
	o.DeletedAccounts = &v
}

// GetTotalIdentities returns the TotalIdentities field value if set, zero value otherwise.
func (o *AccountAggregationStatus) GetTotalIdentities() int32 {
	if o == nil || IsNil(o.TotalIdentities) {
		var ret int32
		return ret
	}
	return *o.TotalIdentities
}

// GetTotalIdentitiesOk returns a tuple with the TotalIdentities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAggregationStatus) GetTotalIdentitiesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalIdentities) {
		return nil, false
	}
	return o.TotalIdentities, true
}

// HasTotalIdentities returns a boolean if a field has been set.
func (o *AccountAggregationStatus) HasTotalIdentities() bool {
	if o != nil && !IsNil(o.TotalIdentities) {
		return true
	}

	return false
}

// SetTotalIdentities gets a reference to the given int32 and assigns it to the TotalIdentities field.
func (o *AccountAggregationStatus) SetTotalIdentities(v int32) {
	o.TotalIdentities = &v
}

// GetProcessedIdentities returns the ProcessedIdentities field value if set, zero value otherwise.
func (o *AccountAggregationStatus) GetProcessedIdentities() int32 {
	if o == nil || IsNil(o.ProcessedIdentities) {
		var ret int32
		return ret
	}
	return *o.ProcessedIdentities
}

// GetProcessedIdentitiesOk returns a tuple with the ProcessedIdentities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAggregationStatus) GetProcessedIdentitiesOk() (*int32, bool) {
	if o == nil || IsNil(o.ProcessedIdentities) {
		return nil, false
	}
	return o.ProcessedIdentities, true
}

// HasProcessedIdentities returns a boolean if a field has been set.
func (o *AccountAggregationStatus) HasProcessedIdentities() bool {
	if o != nil && !IsNil(o.ProcessedIdentities) {
		return true
	}

	return false
}

// SetProcessedIdentities gets a reference to the given int32 and assigns it to the ProcessedIdentities field.
func (o *AccountAggregationStatus) SetProcessedIdentities(v int32) {
	o.ProcessedIdentities = &v
}

func (o AccountAggregationStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountAggregationStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Start.IsSet() {
		toSerialize["start"] = o.Start.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TotalAccounts) {
		toSerialize["totalAccounts"] = o.TotalAccounts
	}
	if !IsNil(o.ProcessedAccounts) {
		toSerialize["processedAccounts"] = o.ProcessedAccounts
	}
	if !IsNil(o.TotalAccountsMarkedForDeletion) {
		toSerialize["totalAccountsMarkedForDeletion"] = o.TotalAccountsMarkedForDeletion
	}
	if !IsNil(o.DeletedAccounts) {
		toSerialize["deletedAccounts"] = o.DeletedAccounts
	}
	if !IsNil(o.TotalIdentities) {
		toSerialize["totalIdentities"] = o.TotalIdentities
	}
	if !IsNil(o.ProcessedIdentities) {
		toSerialize["processedIdentities"] = o.ProcessedIdentities
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountAggregationStatus) UnmarshalJSON(data []byte) (err error) {
	varAccountAggregationStatus := _AccountAggregationStatus{}

	err = json.Unmarshal(data, &varAccountAggregationStatus)

	if err != nil {
		return err
	}

	*o = AccountAggregationStatus(varAccountAggregationStatus)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "start")
		delete(additionalProperties, "status")
		delete(additionalProperties, "totalAccounts")
		delete(additionalProperties, "processedAccounts")
		delete(additionalProperties, "totalAccountsMarkedForDeletion")
		delete(additionalProperties, "deletedAccounts")
		delete(additionalProperties, "totalIdentities")
		delete(additionalProperties, "processedIdentities")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountAggregationStatus struct {
	value *AccountAggregationStatus
	isSet bool
}

func (v NullableAccountAggregationStatus) Get() *AccountAggregationStatus {
	return v.value
}

func (v *NullableAccountAggregationStatus) Set(val *AccountAggregationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountAggregationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountAggregationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountAggregationStatus(val *AccountAggregationStatus) *NullableAccountAggregationStatus {
	return &NullableAccountAggregationStatus{value: val, isSet: true}
}

func (v NullableAccountAggregationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountAggregationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


