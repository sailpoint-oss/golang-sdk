/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the EntitlementAttributeBulkUpdateQueryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitlementAttributeBulkUpdateQueryRequest{}

// EntitlementAttributeBulkUpdateQueryRequest struct for EntitlementAttributeBulkUpdateQueryRequest
type EntitlementAttributeBulkUpdateQueryRequest struct {
	Query *Search `json:"query,omitempty"`
	// Operation to perform on the attributes in the bulk update request.
	Operation *string `json:"operation,omitempty"`
	// The choice of update scope.
	ReplaceScope *string `json:"replaceScope,omitempty"`
	// The metadata to be updated, including attribute and values.
	Values []RoleMetadataBulkUpdateByIdRequestValuesInner `json:"values,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EntitlementAttributeBulkUpdateQueryRequest EntitlementAttributeBulkUpdateQueryRequest

// NewEntitlementAttributeBulkUpdateQueryRequest instantiates a new EntitlementAttributeBulkUpdateQueryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitlementAttributeBulkUpdateQueryRequest() *EntitlementAttributeBulkUpdateQueryRequest {
	this := EntitlementAttributeBulkUpdateQueryRequest{}
	return &this
}

// NewEntitlementAttributeBulkUpdateQueryRequestWithDefaults instantiates a new EntitlementAttributeBulkUpdateQueryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitlementAttributeBulkUpdateQueryRequestWithDefaults() *EntitlementAttributeBulkUpdateQueryRequest {
	this := EntitlementAttributeBulkUpdateQueryRequest{}
	return &this
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *EntitlementAttributeBulkUpdateQueryRequest) GetQuery() Search {
	if o == nil || IsNil(o.Query) {
		var ret Search
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementAttributeBulkUpdateQueryRequest) GetQueryOk() (*Search, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *EntitlementAttributeBulkUpdateQueryRequest) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given Search and assigns it to the Query field.
func (o *EntitlementAttributeBulkUpdateQueryRequest) SetQuery(v Search) {
	o.Query = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *EntitlementAttributeBulkUpdateQueryRequest) GetOperation() string {
	if o == nil || IsNil(o.Operation) {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementAttributeBulkUpdateQueryRequest) GetOperationOk() (*string, bool) {
	if o == nil || IsNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *EntitlementAttributeBulkUpdateQueryRequest) HasOperation() bool {
	if o != nil && !IsNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *EntitlementAttributeBulkUpdateQueryRequest) SetOperation(v string) {
	o.Operation = &v
}

// GetReplaceScope returns the ReplaceScope field value if set, zero value otherwise.
func (o *EntitlementAttributeBulkUpdateQueryRequest) GetReplaceScope() string {
	if o == nil || IsNil(o.ReplaceScope) {
		var ret string
		return ret
	}
	return *o.ReplaceScope
}

// GetReplaceScopeOk returns a tuple with the ReplaceScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementAttributeBulkUpdateQueryRequest) GetReplaceScopeOk() (*string, bool) {
	if o == nil || IsNil(o.ReplaceScope) {
		return nil, false
	}
	return o.ReplaceScope, true
}

// HasReplaceScope returns a boolean if a field has been set.
func (o *EntitlementAttributeBulkUpdateQueryRequest) HasReplaceScope() bool {
	if o != nil && !IsNil(o.ReplaceScope) {
		return true
	}

	return false
}

// SetReplaceScope gets a reference to the given string and assigns it to the ReplaceScope field.
func (o *EntitlementAttributeBulkUpdateQueryRequest) SetReplaceScope(v string) {
	o.ReplaceScope = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *EntitlementAttributeBulkUpdateQueryRequest) GetValues() []RoleMetadataBulkUpdateByIdRequestValuesInner {
	if o == nil || IsNil(o.Values) {
		var ret []RoleMetadataBulkUpdateByIdRequestValuesInner
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementAttributeBulkUpdateQueryRequest) GetValuesOk() ([]RoleMetadataBulkUpdateByIdRequestValuesInner, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *EntitlementAttributeBulkUpdateQueryRequest) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []RoleMetadataBulkUpdateByIdRequestValuesInner and assigns it to the Values field.
func (o *EntitlementAttributeBulkUpdateQueryRequest) SetValues(v []RoleMetadataBulkUpdateByIdRequestValuesInner) {
	o.Values = v
}

func (o EntitlementAttributeBulkUpdateQueryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitlementAttributeBulkUpdateQueryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	if !IsNil(o.ReplaceScope) {
		toSerialize["replaceScope"] = o.ReplaceScope
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EntitlementAttributeBulkUpdateQueryRequest) UnmarshalJSON(data []byte) (err error) {
	varEntitlementAttributeBulkUpdateQueryRequest := _EntitlementAttributeBulkUpdateQueryRequest{}

	err = json.Unmarshal(data, &varEntitlementAttributeBulkUpdateQueryRequest)

	if err != nil {
		return err
	}

	*o = EntitlementAttributeBulkUpdateQueryRequest(varEntitlementAttributeBulkUpdateQueryRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "query")
		delete(additionalProperties, "operation")
		delete(additionalProperties, "replaceScope")
		delete(additionalProperties, "values")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEntitlementAttributeBulkUpdateQueryRequest struct {
	value *EntitlementAttributeBulkUpdateQueryRequest
	isSet bool
}

func (v NullableEntitlementAttributeBulkUpdateQueryRequest) Get() *EntitlementAttributeBulkUpdateQueryRequest {
	return v.value
}

func (v *NullableEntitlementAttributeBulkUpdateQueryRequest) Set(val *EntitlementAttributeBulkUpdateQueryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitlementAttributeBulkUpdateQueryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitlementAttributeBulkUpdateQueryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitlementAttributeBulkUpdateQueryRequest(val *EntitlementAttributeBulkUpdateQueryRequest) *NullableEntitlementAttributeBulkUpdateQueryRequest {
	return &NullableEntitlementAttributeBulkUpdateQueryRequest{value: val, isSet: true}
}

func (v NullableEntitlementAttributeBulkUpdateQueryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitlementAttributeBulkUpdateQueryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


