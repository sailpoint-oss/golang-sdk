/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the SendClassifyMachineAccountFromSource200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendClassifyMachineAccountFromSource200Response{}

// SendClassifyMachineAccountFromSource200Response struct for SendClassifyMachineAccountFromSource200Response
type SendClassifyMachineAccountFromSource200Response struct {
	// Returns the number of all the accounts from source submitted for processing.
	AccountsSubmittedForProcessing *int32 `json:"Accounts submitted for processing,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SendClassifyMachineAccountFromSource200Response SendClassifyMachineAccountFromSource200Response

// NewSendClassifyMachineAccountFromSource200Response instantiates a new SendClassifyMachineAccountFromSource200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendClassifyMachineAccountFromSource200Response() *SendClassifyMachineAccountFromSource200Response {
	this := SendClassifyMachineAccountFromSource200Response{}
	return &this
}

// NewSendClassifyMachineAccountFromSource200ResponseWithDefaults instantiates a new SendClassifyMachineAccountFromSource200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendClassifyMachineAccountFromSource200ResponseWithDefaults() *SendClassifyMachineAccountFromSource200Response {
	this := SendClassifyMachineAccountFromSource200Response{}
	return &this
}

// GetAccountsSubmittedForProcessing returns the AccountsSubmittedForProcessing field value if set, zero value otherwise.
func (o *SendClassifyMachineAccountFromSource200Response) GetAccountsSubmittedForProcessing() int32 {
	if o == nil || IsNil(o.AccountsSubmittedForProcessing) {
		var ret int32
		return ret
	}
	return *o.AccountsSubmittedForProcessing
}

// GetAccountsSubmittedForProcessingOk returns a tuple with the AccountsSubmittedForProcessing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendClassifyMachineAccountFromSource200Response) GetAccountsSubmittedForProcessingOk() (*int32, bool) {
	if o == nil || IsNil(o.AccountsSubmittedForProcessing) {
		return nil, false
	}
	return o.AccountsSubmittedForProcessing, true
}

// HasAccountsSubmittedForProcessing returns a boolean if a field has been set.
func (o *SendClassifyMachineAccountFromSource200Response) HasAccountsSubmittedForProcessing() bool {
	if o != nil && !IsNil(o.AccountsSubmittedForProcessing) {
		return true
	}

	return false
}

// SetAccountsSubmittedForProcessing gets a reference to the given int32 and assigns it to the AccountsSubmittedForProcessing field.
func (o *SendClassifyMachineAccountFromSource200Response) SetAccountsSubmittedForProcessing(v int32) {
	o.AccountsSubmittedForProcessing = &v
}

func (o SendClassifyMachineAccountFromSource200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendClassifyMachineAccountFromSource200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountsSubmittedForProcessing) {
		toSerialize["Accounts submitted for processing"] = o.AccountsSubmittedForProcessing
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SendClassifyMachineAccountFromSource200Response) UnmarshalJSON(data []byte) (err error) {
	varSendClassifyMachineAccountFromSource200Response := _SendClassifyMachineAccountFromSource200Response{}

	err = json.Unmarshal(data, &varSendClassifyMachineAccountFromSource200Response)

	if err != nil {
		return err
	}

	*o = SendClassifyMachineAccountFromSource200Response(varSendClassifyMachineAccountFromSource200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "Accounts submitted for processing")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSendClassifyMachineAccountFromSource200Response struct {
	value *SendClassifyMachineAccountFromSource200Response
	isSet bool
}

func (v NullableSendClassifyMachineAccountFromSource200Response) Get() *SendClassifyMachineAccountFromSource200Response {
	return v.value
}

func (v *NullableSendClassifyMachineAccountFromSource200Response) Set(val *SendClassifyMachineAccountFromSource200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSendClassifyMachineAccountFromSource200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSendClassifyMachineAccountFromSource200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendClassifyMachineAccountFromSource200Response(val *SendClassifyMachineAccountFromSource200Response) *NullableSendClassifyMachineAccountFromSource200Response {
	return &NullableSendClassifyMachineAccountFromSource200Response{value: val, isSet: true}
}

func (v NullableSendClassifyMachineAccountFromSource200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendClassifyMachineAccountFromSource200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


