/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the Schedule2Months type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Schedule2Months{}

// Schedule2Months struct for Schedule2Months
type Schedule2Months struct {
	// The application id
	ApplicationId *string `json:"applicationId,omitempty"`
	AccountMatchConfig *SelectorAccountMatchConfig `json:"accountMatchConfig,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Schedule2Months Schedule2Months

// NewSchedule2Months instantiates a new Schedule2Months object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedule2Months() *Schedule2Months {
	this := Schedule2Months{}
	return &this
}

// NewSchedule2MonthsWithDefaults instantiates a new Schedule2Months object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedule2MonthsWithDefaults() *Schedule2Months {
	this := Schedule2Months{}
	return &this
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *Schedule2Months) GetApplicationId() string {
	if o == nil || IsNil(o.ApplicationId) {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Schedule2Months) GetApplicationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationId) {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *Schedule2Months) HasApplicationId() bool {
	if o != nil && !IsNil(o.ApplicationId) {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *Schedule2Months) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetAccountMatchConfig returns the AccountMatchConfig field value if set, zero value otherwise.
func (o *Schedule2Months) GetAccountMatchConfig() SelectorAccountMatchConfig {
	if o == nil || IsNil(o.AccountMatchConfig) {
		var ret SelectorAccountMatchConfig
		return ret
	}
	return *o.AccountMatchConfig
}

// GetAccountMatchConfigOk returns a tuple with the AccountMatchConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Schedule2Months) GetAccountMatchConfigOk() (*SelectorAccountMatchConfig, bool) {
	if o == nil || IsNil(o.AccountMatchConfig) {
		return nil, false
	}
	return o.AccountMatchConfig, true
}

// HasAccountMatchConfig returns a boolean if a field has been set.
func (o *Schedule2Months) HasAccountMatchConfig() bool {
	if o != nil && !IsNil(o.AccountMatchConfig) {
		return true
	}

	return false
}

// SetAccountMatchConfig gets a reference to the given SelectorAccountMatchConfig and assigns it to the AccountMatchConfig field.
func (o *Schedule2Months) SetAccountMatchConfig(v SelectorAccountMatchConfig) {
	o.AccountMatchConfig = &v
}

func (o Schedule2Months) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Schedule2Months) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationId) {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if !IsNil(o.AccountMatchConfig) {
		toSerialize["accountMatchConfig"] = o.AccountMatchConfig
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Schedule2Months) UnmarshalJSON(data []byte) (err error) {
	varSchedule2Months := _Schedule2Months{}

	err = json.Unmarshal(data, &varSchedule2Months)

	if err != nil {
		return err
	}

	*o = Schedule2Months(varSchedule2Months)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "applicationId")
		delete(additionalProperties, "accountMatchConfig")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSchedule2Months struct {
	value *Schedule2Months
	isSet bool
}

func (v NullableSchedule2Months) Get() *Schedule2Months {
	return v.value
}

func (v *NullableSchedule2Months) Set(val *Schedule2Months) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedule2Months) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedule2Months) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedule2Months(val *Schedule2Months) *NullableSchedule2Months {
	return &NullableSchedule2Months{value: val, isSet: true}
}

func (v NullableSchedule2Months) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedule2Months) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


