/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the ManagedClientHealthIndicatorsBodyHealthIndicators type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedClientHealthIndicatorsBodyHealthIndicators{}

// ManagedClientHealthIndicatorsBodyHealthIndicators Health indicators grouped by category
type ManagedClientHealthIndicatorsBodyHealthIndicators struct {
	Container *HealthIndicatorCategory `json:"container,omitempty"`
	Memory *HealthIndicatorCategory `json:"memory,omitempty"`
	Cpu *HealthIndicatorCategory `json:"cpu,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ManagedClientHealthIndicatorsBodyHealthIndicators ManagedClientHealthIndicatorsBodyHealthIndicators

// NewManagedClientHealthIndicatorsBodyHealthIndicators instantiates a new ManagedClientHealthIndicatorsBodyHealthIndicators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedClientHealthIndicatorsBodyHealthIndicators() *ManagedClientHealthIndicatorsBodyHealthIndicators {
	this := ManagedClientHealthIndicatorsBodyHealthIndicators{}
	return &this
}

// NewManagedClientHealthIndicatorsBodyHealthIndicatorsWithDefaults instantiates a new ManagedClientHealthIndicatorsBodyHealthIndicators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedClientHealthIndicatorsBodyHealthIndicatorsWithDefaults() *ManagedClientHealthIndicatorsBodyHealthIndicators {
	this := ManagedClientHealthIndicatorsBodyHealthIndicators{}
	return &this
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *ManagedClientHealthIndicatorsBodyHealthIndicators) GetContainer() HealthIndicatorCategory {
	if o == nil || IsNil(o.Container) {
		var ret HealthIndicatorCategory
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClientHealthIndicatorsBodyHealthIndicators) GetContainerOk() (*HealthIndicatorCategory, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *ManagedClientHealthIndicatorsBodyHealthIndicators) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given HealthIndicatorCategory and assigns it to the Container field.
func (o *ManagedClientHealthIndicatorsBodyHealthIndicators) SetContainer(v HealthIndicatorCategory) {
	o.Container = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *ManagedClientHealthIndicatorsBodyHealthIndicators) GetMemory() HealthIndicatorCategory {
	if o == nil || IsNil(o.Memory) {
		var ret HealthIndicatorCategory
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClientHealthIndicatorsBodyHealthIndicators) GetMemoryOk() (*HealthIndicatorCategory, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *ManagedClientHealthIndicatorsBodyHealthIndicators) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given HealthIndicatorCategory and assigns it to the Memory field.
func (o *ManagedClientHealthIndicatorsBodyHealthIndicators) SetMemory(v HealthIndicatorCategory) {
	o.Memory = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *ManagedClientHealthIndicatorsBodyHealthIndicators) GetCpu() HealthIndicatorCategory {
	if o == nil || IsNil(o.Cpu) {
		var ret HealthIndicatorCategory
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClientHealthIndicatorsBodyHealthIndicators) GetCpuOk() (*HealthIndicatorCategory, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *ManagedClientHealthIndicatorsBodyHealthIndicators) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given HealthIndicatorCategory and assigns it to the Cpu field.
func (o *ManagedClientHealthIndicatorsBodyHealthIndicators) SetCpu(v HealthIndicatorCategory) {
	o.Cpu = &v
}

func (o ManagedClientHealthIndicatorsBodyHealthIndicators) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedClientHealthIndicatorsBodyHealthIndicators) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Container) {
		toSerialize["container"] = o.Container
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ManagedClientHealthIndicatorsBodyHealthIndicators) UnmarshalJSON(data []byte) (err error) {
	varManagedClientHealthIndicatorsBodyHealthIndicators := _ManagedClientHealthIndicatorsBodyHealthIndicators{}

	err = json.Unmarshal(data, &varManagedClientHealthIndicatorsBodyHealthIndicators)

	if err != nil {
		return err
	}

	*o = ManagedClientHealthIndicatorsBodyHealthIndicators(varManagedClientHealthIndicatorsBodyHealthIndicators)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "container")
		delete(additionalProperties, "memory")
		delete(additionalProperties, "cpu")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableManagedClientHealthIndicatorsBodyHealthIndicators struct {
	value *ManagedClientHealthIndicatorsBodyHealthIndicators
	isSet bool
}

func (v NullableManagedClientHealthIndicatorsBodyHealthIndicators) Get() *ManagedClientHealthIndicatorsBodyHealthIndicators {
	return v.value
}

func (v *NullableManagedClientHealthIndicatorsBodyHealthIndicators) Set(val *ManagedClientHealthIndicatorsBodyHealthIndicators) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedClientHealthIndicatorsBodyHealthIndicators) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedClientHealthIndicatorsBodyHealthIndicators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedClientHealthIndicatorsBodyHealthIndicators(val *ManagedClientHealthIndicatorsBodyHealthIndicators) *NullableManagedClientHealthIndicatorsBodyHealthIndicators {
	return &NullableManagedClientHealthIndicatorsBodyHealthIndicators{value: val, isSet: true}
}

func (v NullableManagedClientHealthIndicatorsBodyHealthIndicators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedClientHealthIndicatorsBodyHealthIndicators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


