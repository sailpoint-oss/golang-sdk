/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the AccessActionConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessActionConfiguration{}

// AccessActionConfiguration This is used for access configuration for a lifecycle state
type AccessActionConfiguration struct {
	// If true, then all accesses are marked for removal.
	RemoveAllAccessEnabled *bool `json:"removeAllAccessEnabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccessActionConfiguration AccessActionConfiguration

// NewAccessActionConfiguration instantiates a new AccessActionConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessActionConfiguration() *AccessActionConfiguration {
	this := AccessActionConfiguration{}
	var removeAllAccessEnabled bool = false
	this.RemoveAllAccessEnabled = &removeAllAccessEnabled
	return &this
}

// NewAccessActionConfigurationWithDefaults instantiates a new AccessActionConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessActionConfigurationWithDefaults() *AccessActionConfiguration {
	this := AccessActionConfiguration{}
	var removeAllAccessEnabled bool = false
	this.RemoveAllAccessEnabled = &removeAllAccessEnabled
	return &this
}

// GetRemoveAllAccessEnabled returns the RemoveAllAccessEnabled field value if set, zero value otherwise.
func (o *AccessActionConfiguration) GetRemoveAllAccessEnabled() bool {
	if o == nil || IsNil(o.RemoveAllAccessEnabled) {
		var ret bool
		return ret
	}
	return *o.RemoveAllAccessEnabled
}

// GetRemoveAllAccessEnabledOk returns a tuple with the RemoveAllAccessEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessActionConfiguration) GetRemoveAllAccessEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.RemoveAllAccessEnabled) {
		return nil, false
	}
	return o.RemoveAllAccessEnabled, true
}

// HasRemoveAllAccessEnabled returns a boolean if a field has been set.
func (o *AccessActionConfiguration) HasRemoveAllAccessEnabled() bool {
	if o != nil && !IsNil(o.RemoveAllAccessEnabled) {
		return true
	}

	return false
}

// SetRemoveAllAccessEnabled gets a reference to the given bool and assigns it to the RemoveAllAccessEnabled field.
func (o *AccessActionConfiguration) SetRemoveAllAccessEnabled(v bool) {
	o.RemoveAllAccessEnabled = &v
}

func (o AccessActionConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessActionConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RemoveAllAccessEnabled) {
		toSerialize["removeAllAccessEnabled"] = o.RemoveAllAccessEnabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccessActionConfiguration) UnmarshalJSON(data []byte) (err error) {
	varAccessActionConfiguration := _AccessActionConfiguration{}

	err = json.Unmarshal(data, &varAccessActionConfiguration)

	if err != nil {
		return err
	}

	*o = AccessActionConfiguration(varAccessActionConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "removeAllAccessEnabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccessActionConfiguration struct {
	value *AccessActionConfiguration
	isSet bool
}

func (v NullableAccessActionConfiguration) Get() *AccessActionConfiguration {
	return v.value
}

func (v *NullableAccessActionConfiguration) Set(val *AccessActionConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessActionConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessActionConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessActionConfiguration(val *AccessActionConfiguration) *NullableAccessActionConfiguration {
	return &NullableAccessActionConfiguration{value: val, isSet: true}
}

func (v NullableAccessActionConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessActionConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


