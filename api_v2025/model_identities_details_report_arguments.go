/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	"fmt"
)

// checks if the IdentitiesDetailsReportArguments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentitiesDetailsReportArguments{}

// IdentitiesDetailsReportArguments Arguments for Identities Details report (IDENTITIES_DETAILS)
type IdentitiesDetailsReportArguments struct {
	// Flag to specify if only correlated identities are included in report.
	CorrelatedOnly bool `json:"correlatedOnly"`
	AdditionalProperties map[string]interface{}
}

type _IdentitiesDetailsReportArguments IdentitiesDetailsReportArguments

// NewIdentitiesDetailsReportArguments instantiates a new IdentitiesDetailsReportArguments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentitiesDetailsReportArguments(correlatedOnly bool) *IdentitiesDetailsReportArguments {
	this := IdentitiesDetailsReportArguments{}
	this.CorrelatedOnly = correlatedOnly
	return &this
}

// NewIdentitiesDetailsReportArgumentsWithDefaults instantiates a new IdentitiesDetailsReportArguments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentitiesDetailsReportArgumentsWithDefaults() *IdentitiesDetailsReportArguments {
	this := IdentitiesDetailsReportArguments{}
	var correlatedOnly bool = false
	this.CorrelatedOnly = correlatedOnly
	return &this
}

// GetCorrelatedOnly returns the CorrelatedOnly field value
func (o *IdentitiesDetailsReportArguments) GetCorrelatedOnly() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CorrelatedOnly
}

// GetCorrelatedOnlyOk returns a tuple with the CorrelatedOnly field value
// and a boolean to check if the value has been set.
func (o *IdentitiesDetailsReportArguments) GetCorrelatedOnlyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CorrelatedOnly, true
}

// SetCorrelatedOnly sets field value
func (o *IdentitiesDetailsReportArguments) SetCorrelatedOnly(v bool) {
	o.CorrelatedOnly = v
}

func (o IdentitiesDetailsReportArguments) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentitiesDetailsReportArguments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["correlatedOnly"] = o.CorrelatedOnly

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IdentitiesDetailsReportArguments) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"correlatedOnly",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIdentitiesDetailsReportArguments := _IdentitiesDetailsReportArguments{}

	err = json.Unmarshal(data, &varIdentitiesDetailsReportArguments)

	if err != nil {
		return err
	}

	*o = IdentitiesDetailsReportArguments(varIdentitiesDetailsReportArguments)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "correlatedOnly")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIdentitiesDetailsReportArguments struct {
	value *IdentitiesDetailsReportArguments
	isSet bool
}

func (v NullableIdentitiesDetailsReportArguments) Get() *IdentitiesDetailsReportArguments {
	return v.value
}

func (v *NullableIdentitiesDetailsReportArguments) Set(val *IdentitiesDetailsReportArguments) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentitiesDetailsReportArguments) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentitiesDetailsReportArguments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentitiesDetailsReportArguments(val *IdentitiesDetailsReportArguments) *NullableIdentitiesDetailsReportArguments {
	return &NullableIdentitiesDetailsReportArguments{value: val, isSet: true}
}

func (v NullableIdentitiesDetailsReportArguments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentitiesDetailsReportArguments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


