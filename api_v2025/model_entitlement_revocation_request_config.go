/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the EntitlementRevocationRequestConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitlementRevocationRequestConfig{}

// EntitlementRevocationRequestConfig struct for EntitlementRevocationRequestConfig
type EntitlementRevocationRequestConfig struct {
	// Ordered list of approval steps for the access request. Empty when no approval is required.
	ApprovalSchemes []EntitlementApprovalScheme `json:"approvalSchemes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EntitlementRevocationRequestConfig EntitlementRevocationRequestConfig

// NewEntitlementRevocationRequestConfig instantiates a new EntitlementRevocationRequestConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitlementRevocationRequestConfig() *EntitlementRevocationRequestConfig {
	this := EntitlementRevocationRequestConfig{}
	return &this
}

// NewEntitlementRevocationRequestConfigWithDefaults instantiates a new EntitlementRevocationRequestConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitlementRevocationRequestConfigWithDefaults() *EntitlementRevocationRequestConfig {
	this := EntitlementRevocationRequestConfig{}
	return &this
}

// GetApprovalSchemes returns the ApprovalSchemes field value if set, zero value otherwise.
func (o *EntitlementRevocationRequestConfig) GetApprovalSchemes() []EntitlementApprovalScheme {
	if o == nil || IsNil(o.ApprovalSchemes) {
		var ret []EntitlementApprovalScheme
		return ret
	}
	return o.ApprovalSchemes
}

// GetApprovalSchemesOk returns a tuple with the ApprovalSchemes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementRevocationRequestConfig) GetApprovalSchemesOk() ([]EntitlementApprovalScheme, bool) {
	if o == nil || IsNil(o.ApprovalSchemes) {
		return nil, false
	}
	return o.ApprovalSchemes, true
}

// HasApprovalSchemes returns a boolean if a field has been set.
func (o *EntitlementRevocationRequestConfig) HasApprovalSchemes() bool {
	if o != nil && !IsNil(o.ApprovalSchemes) {
		return true
	}

	return false
}

// SetApprovalSchemes gets a reference to the given []EntitlementApprovalScheme and assigns it to the ApprovalSchemes field.
func (o *EntitlementRevocationRequestConfig) SetApprovalSchemes(v []EntitlementApprovalScheme) {
	o.ApprovalSchemes = v
}

func (o EntitlementRevocationRequestConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitlementRevocationRequestConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApprovalSchemes) {
		toSerialize["approvalSchemes"] = o.ApprovalSchemes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EntitlementRevocationRequestConfig) UnmarshalJSON(data []byte) (err error) {
	varEntitlementRevocationRequestConfig := _EntitlementRevocationRequestConfig{}

	err = json.Unmarshal(data, &varEntitlementRevocationRequestConfig)

	if err != nil {
		return err
	}

	*o = EntitlementRevocationRequestConfig(varEntitlementRevocationRequestConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "approvalSchemes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEntitlementRevocationRequestConfig struct {
	value *EntitlementRevocationRequestConfig
	isSet bool
}

func (v NullableEntitlementRevocationRequestConfig) Get() *EntitlementRevocationRequestConfig {
	return v.value
}

func (v *NullableEntitlementRevocationRequestConfig) Set(val *EntitlementRevocationRequestConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitlementRevocationRequestConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitlementRevocationRequestConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitlementRevocationRequestConfig(val *EntitlementRevocationRequestConfig) *NullableEntitlementRevocationRequestConfig {
	return &NullableEntitlementRevocationRequestConfig{value: val, isSet: true}
}

func (v NullableEntitlementRevocationRequestConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitlementRevocationRequestConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


