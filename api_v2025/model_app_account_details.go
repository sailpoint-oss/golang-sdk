/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the AppAccountDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppAccountDetails{}

// AppAccountDetails struct for AppAccountDetails
type AppAccountDetails struct {
	// The source app ID
	AppId *string `json:"appId,omitempty"`
	// The source app display name
	AppDisplayName *string `json:"appDisplayName,omitempty"`
	SourceAccount *AppAccountDetailsSourceAccount `json:"sourceAccount,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AppAccountDetails AppAccountDetails

// NewAppAccountDetails instantiates a new AppAccountDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppAccountDetails() *AppAccountDetails {
	this := AppAccountDetails{}
	return &this
}

// NewAppAccountDetailsWithDefaults instantiates a new AppAccountDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppAccountDetailsWithDefaults() *AppAccountDetails {
	this := AppAccountDetails{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *AppAccountDetails) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAccountDetails) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *AppAccountDetails) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *AppAccountDetails) SetAppId(v string) {
	o.AppId = &v
}

// GetAppDisplayName returns the AppDisplayName field value if set, zero value otherwise.
func (o *AppAccountDetails) GetAppDisplayName() string {
	if o == nil || IsNil(o.AppDisplayName) {
		var ret string
		return ret
	}
	return *o.AppDisplayName
}

// GetAppDisplayNameOk returns a tuple with the AppDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAccountDetails) GetAppDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppDisplayName) {
		return nil, false
	}
	return o.AppDisplayName, true
}

// HasAppDisplayName returns a boolean if a field has been set.
func (o *AppAccountDetails) HasAppDisplayName() bool {
	if o != nil && !IsNil(o.AppDisplayName) {
		return true
	}

	return false
}

// SetAppDisplayName gets a reference to the given string and assigns it to the AppDisplayName field.
func (o *AppAccountDetails) SetAppDisplayName(v string) {
	o.AppDisplayName = &v
}

// GetSourceAccount returns the SourceAccount field value if set, zero value otherwise.
func (o *AppAccountDetails) GetSourceAccount() AppAccountDetailsSourceAccount {
	if o == nil || IsNil(o.SourceAccount) {
		var ret AppAccountDetailsSourceAccount
		return ret
	}
	return *o.SourceAccount
}

// GetSourceAccountOk returns a tuple with the SourceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppAccountDetails) GetSourceAccountOk() (*AppAccountDetailsSourceAccount, bool) {
	if o == nil || IsNil(o.SourceAccount) {
		return nil, false
	}
	return o.SourceAccount, true
}

// HasSourceAccount returns a boolean if a field has been set.
func (o *AppAccountDetails) HasSourceAccount() bool {
	if o != nil && !IsNil(o.SourceAccount) {
		return true
	}

	return false
}

// SetSourceAccount gets a reference to the given AppAccountDetailsSourceAccount and assigns it to the SourceAccount field.
func (o *AppAccountDetails) SetSourceAccount(v AppAccountDetailsSourceAccount) {
	o.SourceAccount = &v
}

func (o AppAccountDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppAccountDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.AppDisplayName) {
		toSerialize["appDisplayName"] = o.AppDisplayName
	}
	if !IsNil(o.SourceAccount) {
		toSerialize["sourceAccount"] = o.SourceAccount
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AppAccountDetails) UnmarshalJSON(data []byte) (err error) {
	varAppAccountDetails := _AppAccountDetails{}

	err = json.Unmarshal(data, &varAppAccountDetails)

	if err != nil {
		return err
	}

	*o = AppAccountDetails(varAppAccountDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "appId")
		delete(additionalProperties, "appDisplayName")
		delete(additionalProperties, "sourceAccount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAppAccountDetails struct {
	value *AppAccountDetails
	isSet bool
}

func (v NullableAppAccountDetails) Get() *AppAccountDetails {
	return v.value
}

func (v *NullableAppAccountDetails) Set(val *AppAccountDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableAppAccountDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableAppAccountDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppAccountDetails(val *AppAccountDetails) *NullableAppAccountDetails {
	return &NullableAppAccountDetails{value: val, isSet: true}
}

func (v NullableAppAccountDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppAccountDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


