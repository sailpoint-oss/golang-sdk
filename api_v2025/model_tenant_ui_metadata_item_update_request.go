/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the TenantUiMetadataItemUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantUiMetadataItemUpdateRequest{}

// TenantUiMetadataItemUpdateRequest struct for TenantUiMetadataItemUpdateRequest
type TenantUiMetadataItemUpdateRequest struct {
	// Parameter that organizational administrators can adjust to permit another domain to encapsulate IDN within an iframe. If you would like to reset the value use \"null\". It will only allow include into iframe non authenticated portions of the product, such as password reset.
	IframeWhiteList NullableString `json:"iframeWhiteList,omitempty"`
	// Descriptor for the username input field. If you would like to reset the value use \"null\".
	UsernameLabel NullableString `json:"usernameLabel,omitempty"`
	// Placeholder text displayed in the username input field. If you would like to reset the value use \"null\".
	UsernameEmptyText NullableString `json:"usernameEmptyText,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TenantUiMetadataItemUpdateRequest TenantUiMetadataItemUpdateRequest

// NewTenantUiMetadataItemUpdateRequest instantiates a new TenantUiMetadataItemUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantUiMetadataItemUpdateRequest() *TenantUiMetadataItemUpdateRequest {
	this := TenantUiMetadataItemUpdateRequest{}
	return &this
}

// NewTenantUiMetadataItemUpdateRequestWithDefaults instantiates a new TenantUiMetadataItemUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantUiMetadataItemUpdateRequestWithDefaults() *TenantUiMetadataItemUpdateRequest {
	this := TenantUiMetadataItemUpdateRequest{}
	return &this
}

// GetIframeWhiteList returns the IframeWhiteList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUiMetadataItemUpdateRequest) GetIframeWhiteList() string {
	if o == nil || IsNil(o.IframeWhiteList.Get()) {
		var ret string
		return ret
	}
	return *o.IframeWhiteList.Get()
}

// GetIframeWhiteListOk returns a tuple with the IframeWhiteList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUiMetadataItemUpdateRequest) GetIframeWhiteListOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IframeWhiteList.Get(), o.IframeWhiteList.IsSet()
}

// HasIframeWhiteList returns a boolean if a field has been set.
func (o *TenantUiMetadataItemUpdateRequest) HasIframeWhiteList() bool {
	if o != nil && o.IframeWhiteList.IsSet() {
		return true
	}

	return false
}

// SetIframeWhiteList gets a reference to the given NullableString and assigns it to the IframeWhiteList field.
func (o *TenantUiMetadataItemUpdateRequest) SetIframeWhiteList(v string) {
	o.IframeWhiteList.Set(&v)
}
// SetIframeWhiteListNil sets the value for IframeWhiteList to be an explicit nil
func (o *TenantUiMetadataItemUpdateRequest) SetIframeWhiteListNil() {
	o.IframeWhiteList.Set(nil)
}

// UnsetIframeWhiteList ensures that no value is present for IframeWhiteList, not even an explicit nil
func (o *TenantUiMetadataItemUpdateRequest) UnsetIframeWhiteList() {
	o.IframeWhiteList.Unset()
}

// GetUsernameLabel returns the UsernameLabel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUiMetadataItemUpdateRequest) GetUsernameLabel() string {
	if o == nil || IsNil(o.UsernameLabel.Get()) {
		var ret string
		return ret
	}
	return *o.UsernameLabel.Get()
}

// GetUsernameLabelOk returns a tuple with the UsernameLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUiMetadataItemUpdateRequest) GetUsernameLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UsernameLabel.Get(), o.UsernameLabel.IsSet()
}

// HasUsernameLabel returns a boolean if a field has been set.
func (o *TenantUiMetadataItemUpdateRequest) HasUsernameLabel() bool {
	if o != nil && o.UsernameLabel.IsSet() {
		return true
	}

	return false
}

// SetUsernameLabel gets a reference to the given NullableString and assigns it to the UsernameLabel field.
func (o *TenantUiMetadataItemUpdateRequest) SetUsernameLabel(v string) {
	o.UsernameLabel.Set(&v)
}
// SetUsernameLabelNil sets the value for UsernameLabel to be an explicit nil
func (o *TenantUiMetadataItemUpdateRequest) SetUsernameLabelNil() {
	o.UsernameLabel.Set(nil)
}

// UnsetUsernameLabel ensures that no value is present for UsernameLabel, not even an explicit nil
func (o *TenantUiMetadataItemUpdateRequest) UnsetUsernameLabel() {
	o.UsernameLabel.Unset()
}

// GetUsernameEmptyText returns the UsernameEmptyText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TenantUiMetadataItemUpdateRequest) GetUsernameEmptyText() string {
	if o == nil || IsNil(o.UsernameEmptyText.Get()) {
		var ret string
		return ret
	}
	return *o.UsernameEmptyText.Get()
}

// GetUsernameEmptyTextOk returns a tuple with the UsernameEmptyText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TenantUiMetadataItemUpdateRequest) GetUsernameEmptyTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UsernameEmptyText.Get(), o.UsernameEmptyText.IsSet()
}

// HasUsernameEmptyText returns a boolean if a field has been set.
func (o *TenantUiMetadataItemUpdateRequest) HasUsernameEmptyText() bool {
	if o != nil && o.UsernameEmptyText.IsSet() {
		return true
	}

	return false
}

// SetUsernameEmptyText gets a reference to the given NullableString and assigns it to the UsernameEmptyText field.
func (o *TenantUiMetadataItemUpdateRequest) SetUsernameEmptyText(v string) {
	o.UsernameEmptyText.Set(&v)
}
// SetUsernameEmptyTextNil sets the value for UsernameEmptyText to be an explicit nil
func (o *TenantUiMetadataItemUpdateRequest) SetUsernameEmptyTextNil() {
	o.UsernameEmptyText.Set(nil)
}

// UnsetUsernameEmptyText ensures that no value is present for UsernameEmptyText, not even an explicit nil
func (o *TenantUiMetadataItemUpdateRequest) UnsetUsernameEmptyText() {
	o.UsernameEmptyText.Unset()
}

func (o TenantUiMetadataItemUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantUiMetadataItemUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.IframeWhiteList.IsSet() {
		toSerialize["iframeWhiteList"] = o.IframeWhiteList.Get()
	}
	if o.UsernameLabel.IsSet() {
		toSerialize["usernameLabel"] = o.UsernameLabel.Get()
	}
	if o.UsernameEmptyText.IsSet() {
		toSerialize["usernameEmptyText"] = o.UsernameEmptyText.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TenantUiMetadataItemUpdateRequest) UnmarshalJSON(data []byte) (err error) {
	varTenantUiMetadataItemUpdateRequest := _TenantUiMetadataItemUpdateRequest{}

	err = json.Unmarshal(data, &varTenantUiMetadataItemUpdateRequest)

	if err != nil {
		return err
	}

	*o = TenantUiMetadataItemUpdateRequest(varTenantUiMetadataItemUpdateRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "iframeWhiteList")
		delete(additionalProperties, "usernameLabel")
		delete(additionalProperties, "usernameEmptyText")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTenantUiMetadataItemUpdateRequest struct {
	value *TenantUiMetadataItemUpdateRequest
	isSet bool
}

func (v NullableTenantUiMetadataItemUpdateRequest) Get() *TenantUiMetadataItemUpdateRequest {
	return v.value
}

func (v *NullableTenantUiMetadataItemUpdateRequest) Set(val *TenantUiMetadataItemUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantUiMetadataItemUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantUiMetadataItemUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantUiMetadataItemUpdateRequest(val *TenantUiMetadataItemUpdateRequest) *NullableTenantUiMetadataItemUpdateRequest {
	return &NullableTenantUiMetadataItemUpdateRequest{value: val, isSet: true}
}

func (v NullableTenantUiMetadataItemUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantUiMetadataItemUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


