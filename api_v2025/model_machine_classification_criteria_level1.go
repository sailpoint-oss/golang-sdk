/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the MachineClassificationCriteriaLevel1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineClassificationCriteriaLevel1{}

// MachineClassificationCriteriaLevel1 struct for MachineClassificationCriteriaLevel1
type MachineClassificationCriteriaLevel1 struct {
	Operation *MachineClassificationCriteriaOperation `json:"operation,omitempty"`
	// Indicates whether case matters when evaluating the criteria
	CaseSensitive *bool `json:"caseSensitive,omitempty"`
	// The data type of the attribute being evaluated
	DataType NullableString `json:"dataType,omitempty"`
	// The attribute to evaluate in the classification criteria
	Attribute NullableString `json:"attribute,omitempty"`
	// The value to compare against the attribute in the classification criteria
	Value NullableString `json:"value,omitempty"`
	// An array of child classification criteria objects
	Children []MachineClassificationCriteriaLevel2 `json:"children,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MachineClassificationCriteriaLevel1 MachineClassificationCriteriaLevel1

// NewMachineClassificationCriteriaLevel1 instantiates a new MachineClassificationCriteriaLevel1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineClassificationCriteriaLevel1() *MachineClassificationCriteriaLevel1 {
	this := MachineClassificationCriteriaLevel1{}
	var caseSensitive bool = false
	this.CaseSensitive = &caseSensitive
	return &this
}

// NewMachineClassificationCriteriaLevel1WithDefaults instantiates a new MachineClassificationCriteriaLevel1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineClassificationCriteriaLevel1WithDefaults() *MachineClassificationCriteriaLevel1 {
	this := MachineClassificationCriteriaLevel1{}
	var caseSensitive bool = false
	this.CaseSensitive = &caseSensitive
	return &this
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *MachineClassificationCriteriaLevel1) GetOperation() MachineClassificationCriteriaOperation {
	if o == nil || IsNil(o.Operation) {
		var ret MachineClassificationCriteriaOperation
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineClassificationCriteriaLevel1) GetOperationOk() (*MachineClassificationCriteriaOperation, bool) {
	if o == nil || IsNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *MachineClassificationCriteriaLevel1) HasOperation() bool {
	if o != nil && !IsNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given MachineClassificationCriteriaOperation and assigns it to the Operation field.
func (o *MachineClassificationCriteriaLevel1) SetOperation(v MachineClassificationCriteriaOperation) {
	o.Operation = &v
}

// GetCaseSensitive returns the CaseSensitive field value if set, zero value otherwise.
func (o *MachineClassificationCriteriaLevel1) GetCaseSensitive() bool {
	if o == nil || IsNil(o.CaseSensitive) {
		var ret bool
		return ret
	}
	return *o.CaseSensitive
}

// GetCaseSensitiveOk returns a tuple with the CaseSensitive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineClassificationCriteriaLevel1) GetCaseSensitiveOk() (*bool, bool) {
	if o == nil || IsNil(o.CaseSensitive) {
		return nil, false
	}
	return o.CaseSensitive, true
}

// HasCaseSensitive returns a boolean if a field has been set.
func (o *MachineClassificationCriteriaLevel1) HasCaseSensitive() bool {
	if o != nil && !IsNil(o.CaseSensitive) {
		return true
	}

	return false
}

// SetCaseSensitive gets a reference to the given bool and assigns it to the CaseSensitive field.
func (o *MachineClassificationCriteriaLevel1) SetCaseSensitive(v bool) {
	o.CaseSensitive = &v
}

// GetDataType returns the DataType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineClassificationCriteriaLevel1) GetDataType() string {
	if o == nil || IsNil(o.DataType.Get()) {
		var ret string
		return ret
	}
	return *o.DataType.Get()
}

// GetDataTypeOk returns a tuple with the DataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineClassificationCriteriaLevel1) GetDataTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DataType.Get(), o.DataType.IsSet()
}

// HasDataType returns a boolean if a field has been set.
func (o *MachineClassificationCriteriaLevel1) HasDataType() bool {
	if o != nil && o.DataType.IsSet() {
		return true
	}

	return false
}

// SetDataType gets a reference to the given NullableString and assigns it to the DataType field.
func (o *MachineClassificationCriteriaLevel1) SetDataType(v string) {
	o.DataType.Set(&v)
}
// SetDataTypeNil sets the value for DataType to be an explicit nil
func (o *MachineClassificationCriteriaLevel1) SetDataTypeNil() {
	o.DataType.Set(nil)
}

// UnsetDataType ensures that no value is present for DataType, not even an explicit nil
func (o *MachineClassificationCriteriaLevel1) UnsetDataType() {
	o.DataType.Unset()
}

// GetAttribute returns the Attribute field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineClassificationCriteriaLevel1) GetAttribute() string {
	if o == nil || IsNil(o.Attribute.Get()) {
		var ret string
		return ret
	}
	return *o.Attribute.Get()
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineClassificationCriteriaLevel1) GetAttributeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attribute.Get(), o.Attribute.IsSet()
}

// HasAttribute returns a boolean if a field has been set.
func (o *MachineClassificationCriteriaLevel1) HasAttribute() bool {
	if o != nil && o.Attribute.IsSet() {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given NullableString and assigns it to the Attribute field.
func (o *MachineClassificationCriteriaLevel1) SetAttribute(v string) {
	o.Attribute.Set(&v)
}
// SetAttributeNil sets the value for Attribute to be an explicit nil
func (o *MachineClassificationCriteriaLevel1) SetAttributeNil() {
	o.Attribute.Set(nil)
}

// UnsetAttribute ensures that no value is present for Attribute, not even an explicit nil
func (o *MachineClassificationCriteriaLevel1) UnsetAttribute() {
	o.Attribute.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineClassificationCriteriaLevel1) GetValue() string {
	if o == nil || IsNil(o.Value.Get()) {
		var ret string
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineClassificationCriteriaLevel1) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *MachineClassificationCriteriaLevel1) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableString and assigns it to the Value field.
func (o *MachineClassificationCriteriaLevel1) SetValue(v string) {
	o.Value.Set(&v)
}
// SetValueNil sets the value for Value to be an explicit nil
func (o *MachineClassificationCriteriaLevel1) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *MachineClassificationCriteriaLevel1) UnsetValue() {
	o.Value.Unset()
}

// GetChildren returns the Children field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineClassificationCriteriaLevel1) GetChildren() []MachineClassificationCriteriaLevel2 {
	if o == nil {
		var ret []MachineClassificationCriteriaLevel2
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineClassificationCriteriaLevel1) GetChildrenOk() ([]MachineClassificationCriteriaLevel2, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *MachineClassificationCriteriaLevel1) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []MachineClassificationCriteriaLevel2 and assigns it to the Children field.
func (o *MachineClassificationCriteriaLevel1) SetChildren(v []MachineClassificationCriteriaLevel2) {
	o.Children = v
}

func (o MachineClassificationCriteriaLevel1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineClassificationCriteriaLevel1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	if !IsNil(o.CaseSensitive) {
		toSerialize["caseSensitive"] = o.CaseSensitive
	}
	if o.DataType.IsSet() {
		toSerialize["dataType"] = o.DataType.Get()
	}
	if o.Attribute.IsSet() {
		toSerialize["attribute"] = o.Attribute.Get()
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	if o.Children != nil {
		toSerialize["children"] = o.Children
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MachineClassificationCriteriaLevel1) UnmarshalJSON(data []byte) (err error) {
	varMachineClassificationCriteriaLevel1 := _MachineClassificationCriteriaLevel1{}

	err = json.Unmarshal(data, &varMachineClassificationCriteriaLevel1)

	if err != nil {
		return err
	}

	*o = MachineClassificationCriteriaLevel1(varMachineClassificationCriteriaLevel1)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "operation")
		delete(additionalProperties, "caseSensitive")
		delete(additionalProperties, "dataType")
		delete(additionalProperties, "attribute")
		delete(additionalProperties, "value")
		delete(additionalProperties, "children")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMachineClassificationCriteriaLevel1 struct {
	value *MachineClassificationCriteriaLevel1
	isSet bool
}

func (v NullableMachineClassificationCriteriaLevel1) Get() *MachineClassificationCriteriaLevel1 {
	return v.value
}

func (v *NullableMachineClassificationCriteriaLevel1) Set(val *MachineClassificationCriteriaLevel1) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineClassificationCriteriaLevel1) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineClassificationCriteriaLevel1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineClassificationCriteriaLevel1(val *MachineClassificationCriteriaLevel1) *NullableMachineClassificationCriteriaLevel1 {
	return &NullableMachineClassificationCriteriaLevel1{value: val, isSet: true}
}

func (v NullableMachineClassificationCriteriaLevel1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineClassificationCriteriaLevel1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


