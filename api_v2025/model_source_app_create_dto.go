/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	"fmt"
)

// checks if the SourceAppCreateDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourceAppCreateDto{}

// SourceAppCreateDto struct for SourceAppCreateDto
type SourceAppCreateDto struct {
	// The source app name
	Name string `json:"name"`
	// The description of the source app
	Description string `json:"description"`
	// True if the source app match all accounts
	MatchAllAccounts *bool `json:"matchAllAccounts,omitempty"`
	AccountSource SourceAppCreateDtoAccountSource `json:"accountSource"`
	AdditionalProperties map[string]interface{}
}

type _SourceAppCreateDto SourceAppCreateDto

// NewSourceAppCreateDto instantiates a new SourceAppCreateDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceAppCreateDto(name string, description string, accountSource SourceAppCreateDtoAccountSource) *SourceAppCreateDto {
	this := SourceAppCreateDto{}
	this.Name = name
	this.Description = description
	var matchAllAccounts bool = false
	this.MatchAllAccounts = &matchAllAccounts
	this.AccountSource = accountSource
	return &this
}

// NewSourceAppCreateDtoWithDefaults instantiates a new SourceAppCreateDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceAppCreateDtoWithDefaults() *SourceAppCreateDto {
	this := SourceAppCreateDto{}
	var matchAllAccounts bool = false
	this.MatchAllAccounts = &matchAllAccounts
	return &this
}

// GetName returns the Name field value
func (o *SourceAppCreateDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SourceAppCreateDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SourceAppCreateDto) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *SourceAppCreateDto) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *SourceAppCreateDto) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *SourceAppCreateDto) SetDescription(v string) {
	o.Description = v
}

// GetMatchAllAccounts returns the MatchAllAccounts field value if set, zero value otherwise.
func (o *SourceAppCreateDto) GetMatchAllAccounts() bool {
	if o == nil || IsNil(o.MatchAllAccounts) {
		var ret bool
		return ret
	}
	return *o.MatchAllAccounts
}

// GetMatchAllAccountsOk returns a tuple with the MatchAllAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceAppCreateDto) GetMatchAllAccountsOk() (*bool, bool) {
	if o == nil || IsNil(o.MatchAllAccounts) {
		return nil, false
	}
	return o.MatchAllAccounts, true
}

// HasMatchAllAccounts returns a boolean if a field has been set.
func (o *SourceAppCreateDto) HasMatchAllAccounts() bool {
	if o != nil && !IsNil(o.MatchAllAccounts) {
		return true
	}

	return false
}

// SetMatchAllAccounts gets a reference to the given bool and assigns it to the MatchAllAccounts field.
func (o *SourceAppCreateDto) SetMatchAllAccounts(v bool) {
	o.MatchAllAccounts = &v
}

// GetAccountSource returns the AccountSource field value
func (o *SourceAppCreateDto) GetAccountSource() SourceAppCreateDtoAccountSource {
	if o == nil {
		var ret SourceAppCreateDtoAccountSource
		return ret
	}

	return o.AccountSource
}

// GetAccountSourceOk returns a tuple with the AccountSource field value
// and a boolean to check if the value has been set.
func (o *SourceAppCreateDto) GetAccountSourceOk() (*SourceAppCreateDtoAccountSource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountSource, true
}

// SetAccountSource sets field value
func (o *SourceAppCreateDto) SetAccountSource(v SourceAppCreateDtoAccountSource) {
	o.AccountSource = v
}

func (o SourceAppCreateDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceAppCreateDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	if !IsNil(o.MatchAllAccounts) {
		toSerialize["matchAllAccounts"] = o.MatchAllAccounts
	}
	toSerialize["accountSource"] = o.AccountSource

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SourceAppCreateDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"description",
		"accountSource",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSourceAppCreateDto := _SourceAppCreateDto{}

	err = json.Unmarshal(data, &varSourceAppCreateDto)

	if err != nil {
		return err
	}

	*o = SourceAppCreateDto(varSourceAppCreateDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "matchAllAccounts")
		delete(additionalProperties, "accountSource")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSourceAppCreateDto struct {
	value *SourceAppCreateDto
	isSet bool
}

func (v NullableSourceAppCreateDto) Get() *SourceAppCreateDto {
	return v.value
}

func (v *NullableSourceAppCreateDto) Set(val *SourceAppCreateDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceAppCreateDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceAppCreateDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceAppCreateDto(val *SourceAppCreateDto) *NullableSourceAppCreateDto {
	return &NullableSourceAppCreateDto{value: val, isSet: true}
}

func (v NullableSourceAppCreateDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceAppCreateDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


