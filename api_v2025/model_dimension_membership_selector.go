/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the DimensionMembershipSelector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DimensionMembershipSelector{}

// DimensionMembershipSelector When present, specifies that the Dimension is to be granted to Identities which either satisfy specific criteria.
type DimensionMembershipSelector struct {
	Type *DimensionMembershipSelectorType `json:"type,omitempty"`
	Criteria NullableDimensionCriteriaLevel1 `json:"criteria,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DimensionMembershipSelector DimensionMembershipSelector

// NewDimensionMembershipSelector instantiates a new DimensionMembershipSelector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDimensionMembershipSelector() *DimensionMembershipSelector {
	this := DimensionMembershipSelector{}
	return &this
}

// NewDimensionMembershipSelectorWithDefaults instantiates a new DimensionMembershipSelector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDimensionMembershipSelectorWithDefaults() *DimensionMembershipSelector {
	this := DimensionMembershipSelector{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DimensionMembershipSelector) GetType() DimensionMembershipSelectorType {
	if o == nil || IsNil(o.Type) {
		var ret DimensionMembershipSelectorType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DimensionMembershipSelector) GetTypeOk() (*DimensionMembershipSelectorType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DimensionMembershipSelector) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given DimensionMembershipSelectorType and assigns it to the Type field.
func (o *DimensionMembershipSelector) SetType(v DimensionMembershipSelectorType) {
	o.Type = &v
}

// GetCriteria returns the Criteria field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DimensionMembershipSelector) GetCriteria() DimensionCriteriaLevel1 {
	if o == nil || IsNil(o.Criteria.Get()) {
		var ret DimensionCriteriaLevel1
		return ret
	}
	return *o.Criteria.Get()
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DimensionMembershipSelector) GetCriteriaOk() (*DimensionCriteriaLevel1, bool) {
	if o == nil {
		return nil, false
	}
	return o.Criteria.Get(), o.Criteria.IsSet()
}

// HasCriteria returns a boolean if a field has been set.
func (o *DimensionMembershipSelector) HasCriteria() bool {
	if o != nil && o.Criteria.IsSet() {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given NullableDimensionCriteriaLevel1 and assigns it to the Criteria field.
func (o *DimensionMembershipSelector) SetCriteria(v DimensionCriteriaLevel1) {
	o.Criteria.Set(&v)
}
// SetCriteriaNil sets the value for Criteria to be an explicit nil
func (o *DimensionMembershipSelector) SetCriteriaNil() {
	o.Criteria.Set(nil)
}

// UnsetCriteria ensures that no value is present for Criteria, not even an explicit nil
func (o *DimensionMembershipSelector) UnsetCriteria() {
	o.Criteria.Unset()
}

func (o DimensionMembershipSelector) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DimensionMembershipSelector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.Criteria.IsSet() {
		toSerialize["criteria"] = o.Criteria.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DimensionMembershipSelector) UnmarshalJSON(data []byte) (err error) {
	varDimensionMembershipSelector := _DimensionMembershipSelector{}

	err = json.Unmarshal(data, &varDimensionMembershipSelector)

	if err != nil {
		return err
	}

	*o = DimensionMembershipSelector(varDimensionMembershipSelector)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "criteria")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDimensionMembershipSelector struct {
	value *DimensionMembershipSelector
	isSet bool
}

func (v NullableDimensionMembershipSelector) Get() *DimensionMembershipSelector {
	return v.value
}

func (v *NullableDimensionMembershipSelector) Set(val *DimensionMembershipSelector) {
	v.value = val
	v.isSet = true
}

func (v NullableDimensionMembershipSelector) IsSet() bool {
	return v.isSet
}

func (v *NullableDimensionMembershipSelector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDimensionMembershipSelector(val *DimensionMembershipSelector) *NullableDimensionMembershipSelector {
	return &NullableDimensionMembershipSelector{value: val, isSet: true}
}

func (v NullableDimensionMembershipSelector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDimensionMembershipSelector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


