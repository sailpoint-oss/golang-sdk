/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the AuthUserSlimResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthUserSlimResponse{}

// AuthUserSlimResponse struct for AuthUserSlimResponse
type AuthUserSlimResponse struct {
	// Identity ID.
	Id *string `json:"id,omitempty"`
	// Identity unique identifier.
	Uid *string `json:"uid,omitempty"`
	// Identity alias.
	Alias *string `json:"alias,omitempty"`
	// Identity name in display format.
	DisplayName *string `json:"displayName,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AuthUserSlimResponse AuthUserSlimResponse

// NewAuthUserSlimResponse instantiates a new AuthUserSlimResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthUserSlimResponse() *AuthUserSlimResponse {
	this := AuthUserSlimResponse{}
	return &this
}

// NewAuthUserSlimResponseWithDefaults instantiates a new AuthUserSlimResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthUserSlimResponseWithDefaults() *AuthUserSlimResponse {
	this := AuthUserSlimResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthUserSlimResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthUserSlimResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthUserSlimResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AuthUserSlimResponse) SetId(v string) {
	o.Id = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *AuthUserSlimResponse) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthUserSlimResponse) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *AuthUserSlimResponse) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *AuthUserSlimResponse) SetUid(v string) {
	o.Uid = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *AuthUserSlimResponse) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthUserSlimResponse) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *AuthUserSlimResponse) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *AuthUserSlimResponse) SetAlias(v string) {
	o.Alias = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AuthUserSlimResponse) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthUserSlimResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AuthUserSlimResponse) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AuthUserSlimResponse) SetDisplayName(v string) {
	o.DisplayName = &v
}

func (o AuthUserSlimResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthUserSlimResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AuthUserSlimResponse) UnmarshalJSON(data []byte) (err error) {
	varAuthUserSlimResponse := _AuthUserSlimResponse{}

	err = json.Unmarshal(data, &varAuthUserSlimResponse)

	if err != nil {
		return err
	}

	*o = AuthUserSlimResponse(varAuthUserSlimResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "uid")
		delete(additionalProperties, "alias")
		delete(additionalProperties, "displayName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAuthUserSlimResponse struct {
	value *AuthUserSlimResponse
	isSet bool
}

func (v NullableAuthUserSlimResponse) Get() *AuthUserSlimResponse {
	return v.value
}

func (v *NullableAuthUserSlimResponse) Set(val *AuthUserSlimResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthUserSlimResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthUserSlimResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthUserSlimResponse(val *AuthUserSlimResponse) *NullableAuthUserSlimResponse {
	return &NullableAuthUserSlimResponse{value: val, isSet: true}
}

func (v NullableAuthUserSlimResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthUserSlimResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


