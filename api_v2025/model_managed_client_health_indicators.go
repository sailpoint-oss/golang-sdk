/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	
	"fmt"
)

// checks if the ManagedClientHealthIndicators type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedClientHealthIndicators{}

// ManagedClientHealthIndicators Health Indicators for a Managed Client
type ManagedClientHealthIndicators struct {
	Body ManagedClientHealthIndicatorsBody `json:"body"`
	// Top-level status of the Managed Client
	Status string `json:"status"`
	// Type of the Managed Client
	Type string `json:"type"`
	// Timestamp when this report was generated
	Timestamp SailPointTime `json:"timestamp"`
	AdditionalProperties map[string]interface{}
}

type _ManagedClientHealthIndicators ManagedClientHealthIndicators

// NewManagedClientHealthIndicators instantiates a new ManagedClientHealthIndicators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedClientHealthIndicators(body ManagedClientHealthIndicatorsBody, status string, type_ string, timestamp SailPointTime) *ManagedClientHealthIndicators {
	this := ManagedClientHealthIndicators{}
	this.Body = body
	this.Status = status
	this.Type = type_
	this.Timestamp = timestamp
	return &this
}

// NewManagedClientHealthIndicatorsWithDefaults instantiates a new ManagedClientHealthIndicators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedClientHealthIndicatorsWithDefaults() *ManagedClientHealthIndicators {
	this := ManagedClientHealthIndicators{}
	return &this
}

// GetBody returns the Body field value
func (o *ManagedClientHealthIndicators) GetBody() ManagedClientHealthIndicatorsBody {
	if o == nil {
		var ret ManagedClientHealthIndicatorsBody
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *ManagedClientHealthIndicators) GetBodyOk() (*ManagedClientHealthIndicatorsBody, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *ManagedClientHealthIndicators) SetBody(v ManagedClientHealthIndicatorsBody) {
	o.Body = v
}

// GetStatus returns the Status field value
func (o *ManagedClientHealthIndicators) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ManagedClientHealthIndicators) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ManagedClientHealthIndicators) SetStatus(v string) {
	o.Status = v
}

// GetType returns the Type field value
func (o *ManagedClientHealthIndicators) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ManagedClientHealthIndicators) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ManagedClientHealthIndicators) SetType(v string) {
	o.Type = v
}

// GetTimestamp returns the Timestamp field value
func (o *ManagedClientHealthIndicators) GetTimestamp() SailPointTime {
	if o == nil {
		var ret SailPointTime
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *ManagedClientHealthIndicators) GetTimestampOk() (*SailPointTime, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *ManagedClientHealthIndicators) SetTimestamp(v SailPointTime) {
	o.Timestamp = v
}

func (o ManagedClientHealthIndicators) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedClientHealthIndicators) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["body"] = o.Body
	toSerialize["status"] = o.Status
	toSerialize["type"] = o.Type
	toSerialize["timestamp"] = o.Timestamp

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ManagedClientHealthIndicators) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"body",
		"status",
		"type",
		"timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManagedClientHealthIndicators := _ManagedClientHealthIndicators{}

	err = json.Unmarshal(data, &varManagedClientHealthIndicators)

	if err != nil {
		return err
	}

	*o = ManagedClientHealthIndicators(varManagedClientHealthIndicators)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "body")
		delete(additionalProperties, "status")
		delete(additionalProperties, "type")
		delete(additionalProperties, "timestamp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableManagedClientHealthIndicators struct {
	value *ManagedClientHealthIndicators
	isSet bool
}

func (v NullableManagedClientHealthIndicators) Get() *ManagedClientHealthIndicators {
	return v.value
}

func (v *NullableManagedClientHealthIndicators) Set(val *ManagedClientHealthIndicators) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedClientHealthIndicators) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedClientHealthIndicators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedClientHealthIndicators(val *ManagedClientHealthIndicators) *NullableManagedClientHealthIndicators {
	return &NullableManagedClientHealthIndicators{value: val, isSet: true}
}

func (v NullableManagedClientHealthIndicators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedClientHealthIndicators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


