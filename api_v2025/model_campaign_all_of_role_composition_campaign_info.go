/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	"fmt"
)

// checks if the CampaignAllOfRoleCompositionCampaignInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignAllOfRoleCompositionCampaignInfo{}

// CampaignAllOfRoleCompositionCampaignInfo Optional configuration options for role composition campaigns.
type CampaignAllOfRoleCompositionCampaignInfo struct {
	// The ID of the identity or governance group reviewing this campaign. Deprecated in favor of the \"reviewer\" object.
	// Deprecated
	ReviewerId NullableString `json:"reviewerId,omitempty"`
	Reviewer NullableCampaignAllOfRoleCompositionCampaignInfoReviewer `json:"reviewer,omitempty"`
	// Optional list of roles to include in this campaign. Only one of `roleIds` and `query` may be set; if neither are set, all roles are included.
	RoleIds []string `json:"roleIds,omitempty"`
	RemediatorRef CampaignAllOfRoleCompositionCampaignInfoRemediatorRef `json:"remediatorRef"`
	// Optional search query to scope this campaign to a set of roles. Only one of `roleIds` and `query` may be set; if neither are set, all roles are included.
	Query NullableString `json:"query,omitempty"`
	// Describes this role composition campaign. Intended for storing the query used, and possibly the number of roles selected/available.
	Description NullableString `json:"description,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CampaignAllOfRoleCompositionCampaignInfo CampaignAllOfRoleCompositionCampaignInfo

// NewCampaignAllOfRoleCompositionCampaignInfo instantiates a new CampaignAllOfRoleCompositionCampaignInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignAllOfRoleCompositionCampaignInfo(remediatorRef CampaignAllOfRoleCompositionCampaignInfoRemediatorRef) *CampaignAllOfRoleCompositionCampaignInfo {
	this := CampaignAllOfRoleCompositionCampaignInfo{}
	this.RemediatorRef = remediatorRef
	return &this
}

// NewCampaignAllOfRoleCompositionCampaignInfoWithDefaults instantiates a new CampaignAllOfRoleCompositionCampaignInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignAllOfRoleCompositionCampaignInfoWithDefaults() *CampaignAllOfRoleCompositionCampaignInfo {
	this := CampaignAllOfRoleCompositionCampaignInfo{}
	return &this
}

// GetReviewerId returns the ReviewerId field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *CampaignAllOfRoleCompositionCampaignInfo) GetReviewerId() string {
	if o == nil || IsNil(o.ReviewerId.Get()) {
		var ret string
		return ret
	}
	return *o.ReviewerId.Get()
}

// GetReviewerIdOk returns a tuple with the ReviewerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *CampaignAllOfRoleCompositionCampaignInfo) GetReviewerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReviewerId.Get(), o.ReviewerId.IsSet()
}

// HasReviewerId returns a boolean if a field has been set.
func (o *CampaignAllOfRoleCompositionCampaignInfo) HasReviewerId() bool {
	if o != nil && o.ReviewerId.IsSet() {
		return true
	}

	return false
}

// SetReviewerId gets a reference to the given NullableString and assigns it to the ReviewerId field.
// Deprecated
func (o *CampaignAllOfRoleCompositionCampaignInfo) SetReviewerId(v string) {
	o.ReviewerId.Set(&v)
}
// SetReviewerIdNil sets the value for ReviewerId to be an explicit nil
func (o *CampaignAllOfRoleCompositionCampaignInfo) SetReviewerIdNil() {
	o.ReviewerId.Set(nil)
}

// UnsetReviewerId ensures that no value is present for ReviewerId, not even an explicit nil
func (o *CampaignAllOfRoleCompositionCampaignInfo) UnsetReviewerId() {
	o.ReviewerId.Unset()
}

// GetReviewer returns the Reviewer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CampaignAllOfRoleCompositionCampaignInfo) GetReviewer() CampaignAllOfRoleCompositionCampaignInfoReviewer {
	if o == nil || IsNil(o.Reviewer.Get()) {
		var ret CampaignAllOfRoleCompositionCampaignInfoReviewer
		return ret
	}
	return *o.Reviewer.Get()
}

// GetReviewerOk returns a tuple with the Reviewer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CampaignAllOfRoleCompositionCampaignInfo) GetReviewerOk() (*CampaignAllOfRoleCompositionCampaignInfoReviewer, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reviewer.Get(), o.Reviewer.IsSet()
}

// HasReviewer returns a boolean if a field has been set.
func (o *CampaignAllOfRoleCompositionCampaignInfo) HasReviewer() bool {
	if o != nil && o.Reviewer.IsSet() {
		return true
	}

	return false
}

// SetReviewer gets a reference to the given NullableCampaignAllOfRoleCompositionCampaignInfoReviewer and assigns it to the Reviewer field.
func (o *CampaignAllOfRoleCompositionCampaignInfo) SetReviewer(v CampaignAllOfRoleCompositionCampaignInfoReviewer) {
	o.Reviewer.Set(&v)
}
// SetReviewerNil sets the value for Reviewer to be an explicit nil
func (o *CampaignAllOfRoleCompositionCampaignInfo) SetReviewerNil() {
	o.Reviewer.Set(nil)
}

// UnsetReviewer ensures that no value is present for Reviewer, not even an explicit nil
func (o *CampaignAllOfRoleCompositionCampaignInfo) UnsetReviewer() {
	o.Reviewer.Unset()
}

// GetRoleIds returns the RoleIds field value if set, zero value otherwise.
func (o *CampaignAllOfRoleCompositionCampaignInfo) GetRoleIds() []string {
	if o == nil || IsNil(o.RoleIds) {
		var ret []string
		return ret
	}
	return o.RoleIds
}

// GetRoleIdsOk returns a tuple with the RoleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignAllOfRoleCompositionCampaignInfo) GetRoleIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RoleIds) {
		return nil, false
	}
	return o.RoleIds, true
}

// HasRoleIds returns a boolean if a field has been set.
func (o *CampaignAllOfRoleCompositionCampaignInfo) HasRoleIds() bool {
	if o != nil && !IsNil(o.RoleIds) {
		return true
	}

	return false
}

// SetRoleIds gets a reference to the given []string and assigns it to the RoleIds field.
func (o *CampaignAllOfRoleCompositionCampaignInfo) SetRoleIds(v []string) {
	o.RoleIds = v
}

// GetRemediatorRef returns the RemediatorRef field value
func (o *CampaignAllOfRoleCompositionCampaignInfo) GetRemediatorRef() CampaignAllOfRoleCompositionCampaignInfoRemediatorRef {
	if o == nil {
		var ret CampaignAllOfRoleCompositionCampaignInfoRemediatorRef
		return ret
	}

	return o.RemediatorRef
}

// GetRemediatorRefOk returns a tuple with the RemediatorRef field value
// and a boolean to check if the value has been set.
func (o *CampaignAllOfRoleCompositionCampaignInfo) GetRemediatorRefOk() (*CampaignAllOfRoleCompositionCampaignInfoRemediatorRef, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemediatorRef, true
}

// SetRemediatorRef sets field value
func (o *CampaignAllOfRoleCompositionCampaignInfo) SetRemediatorRef(v CampaignAllOfRoleCompositionCampaignInfoRemediatorRef) {
	o.RemediatorRef = v
}

// GetQuery returns the Query field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CampaignAllOfRoleCompositionCampaignInfo) GetQuery() string {
	if o == nil || IsNil(o.Query.Get()) {
		var ret string
		return ret
	}
	return *o.Query.Get()
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CampaignAllOfRoleCompositionCampaignInfo) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Query.Get(), o.Query.IsSet()
}

// HasQuery returns a boolean if a field has been set.
func (o *CampaignAllOfRoleCompositionCampaignInfo) HasQuery() bool {
	if o != nil && o.Query.IsSet() {
		return true
	}

	return false
}

// SetQuery gets a reference to the given NullableString and assigns it to the Query field.
func (o *CampaignAllOfRoleCompositionCampaignInfo) SetQuery(v string) {
	o.Query.Set(&v)
}
// SetQueryNil sets the value for Query to be an explicit nil
func (o *CampaignAllOfRoleCompositionCampaignInfo) SetQueryNil() {
	o.Query.Set(nil)
}

// UnsetQuery ensures that no value is present for Query, not even an explicit nil
func (o *CampaignAllOfRoleCompositionCampaignInfo) UnsetQuery() {
	o.Query.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CampaignAllOfRoleCompositionCampaignInfo) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CampaignAllOfRoleCompositionCampaignInfo) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CampaignAllOfRoleCompositionCampaignInfo) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CampaignAllOfRoleCompositionCampaignInfo) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CampaignAllOfRoleCompositionCampaignInfo) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CampaignAllOfRoleCompositionCampaignInfo) UnsetDescription() {
	o.Description.Unset()
}

func (o CampaignAllOfRoleCompositionCampaignInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignAllOfRoleCompositionCampaignInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ReviewerId.IsSet() {
		toSerialize["reviewerId"] = o.ReviewerId.Get()
	}
	if o.Reviewer.IsSet() {
		toSerialize["reviewer"] = o.Reviewer.Get()
	}
	if !IsNil(o.RoleIds) {
		toSerialize["roleIds"] = o.RoleIds
	}
	toSerialize["remediatorRef"] = o.RemediatorRef
	if o.Query.IsSet() {
		toSerialize["query"] = o.Query.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CampaignAllOfRoleCompositionCampaignInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"remediatorRef",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCampaignAllOfRoleCompositionCampaignInfo := _CampaignAllOfRoleCompositionCampaignInfo{}

	err = json.Unmarshal(data, &varCampaignAllOfRoleCompositionCampaignInfo)

	if err != nil {
		return err
	}

	*o = CampaignAllOfRoleCompositionCampaignInfo(varCampaignAllOfRoleCompositionCampaignInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "reviewerId")
		delete(additionalProperties, "reviewer")
		delete(additionalProperties, "roleIds")
		delete(additionalProperties, "remediatorRef")
		delete(additionalProperties, "query")
		delete(additionalProperties, "description")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCampaignAllOfRoleCompositionCampaignInfo struct {
	value *CampaignAllOfRoleCompositionCampaignInfo
	isSet bool
}

func (v NullableCampaignAllOfRoleCompositionCampaignInfo) Get() *CampaignAllOfRoleCompositionCampaignInfo {
	return v.value
}

func (v *NullableCampaignAllOfRoleCompositionCampaignInfo) Set(val *CampaignAllOfRoleCompositionCampaignInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignAllOfRoleCompositionCampaignInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignAllOfRoleCompositionCampaignInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignAllOfRoleCompositionCampaignInfo(val *CampaignAllOfRoleCompositionCampaignInfo) *NullableCampaignAllOfRoleCompositionCampaignInfo {
	return &NullableCampaignAllOfRoleCompositionCampaignInfo{value: val, isSet: true}
}

func (v NullableCampaignAllOfRoleCompositionCampaignInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignAllOfRoleCompositionCampaignInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


