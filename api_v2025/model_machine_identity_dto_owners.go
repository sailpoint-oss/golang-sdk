/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	"fmt"
)

// checks if the MachineIdentityDtoOwners type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineIdentityDtoOwners{}

// MachineIdentityDtoOwners The owner configuration associated to the machine identity
type MachineIdentityDtoOwners struct {
	// Defines the identity which is selected as the primary owner
	PrimaryIdentity map[string]interface{} `json:"primaryIdentity"`
	// Defines the identities which are selected as secondary owners
	SecondaryIdentities []BaseReferenceDto `json:"secondaryIdentities"`
	AdditionalProperties map[string]interface{}
}

type _MachineIdentityDtoOwners MachineIdentityDtoOwners

// NewMachineIdentityDtoOwners instantiates a new MachineIdentityDtoOwners object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineIdentityDtoOwners(primaryIdentity map[string]interface{}, secondaryIdentities []BaseReferenceDto) *MachineIdentityDtoOwners {
	this := MachineIdentityDtoOwners{}
	this.PrimaryIdentity = primaryIdentity
	this.SecondaryIdentities = secondaryIdentities
	return &this
}

// NewMachineIdentityDtoOwnersWithDefaults instantiates a new MachineIdentityDtoOwners object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineIdentityDtoOwnersWithDefaults() *MachineIdentityDtoOwners {
	this := MachineIdentityDtoOwners{}
	return &this
}

// GetPrimaryIdentity returns the PrimaryIdentity field value
func (o *MachineIdentityDtoOwners) GetPrimaryIdentity() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.PrimaryIdentity
}

// GetPrimaryIdentityOk returns a tuple with the PrimaryIdentity field value
// and a boolean to check if the value has been set.
func (o *MachineIdentityDtoOwners) GetPrimaryIdentityOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.PrimaryIdentity, true
}

// SetPrimaryIdentity sets field value
func (o *MachineIdentityDtoOwners) SetPrimaryIdentity(v map[string]interface{}) {
	o.PrimaryIdentity = v
}

// GetSecondaryIdentities returns the SecondaryIdentities field value
func (o *MachineIdentityDtoOwners) GetSecondaryIdentities() []BaseReferenceDto {
	if o == nil {
		var ret []BaseReferenceDto
		return ret
	}

	return o.SecondaryIdentities
}

// GetSecondaryIdentitiesOk returns a tuple with the SecondaryIdentities field value
// and a boolean to check if the value has been set.
func (o *MachineIdentityDtoOwners) GetSecondaryIdentitiesOk() ([]BaseReferenceDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecondaryIdentities, true
}

// SetSecondaryIdentities sets field value
func (o *MachineIdentityDtoOwners) SetSecondaryIdentities(v []BaseReferenceDto) {
	o.SecondaryIdentities = v
}

func (o MachineIdentityDtoOwners) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineIdentityDtoOwners) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["primaryIdentity"] = o.PrimaryIdentity
	toSerialize["secondaryIdentities"] = o.SecondaryIdentities

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MachineIdentityDtoOwners) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"primaryIdentity",
		"secondaryIdentities",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMachineIdentityDtoOwners := _MachineIdentityDtoOwners{}

	err = json.Unmarshal(data, &varMachineIdentityDtoOwners)

	if err != nil {
		return err
	}

	*o = MachineIdentityDtoOwners(varMachineIdentityDtoOwners)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "primaryIdentity")
		delete(additionalProperties, "secondaryIdentities")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMachineIdentityDtoOwners struct {
	value *MachineIdentityDtoOwners
	isSet bool
}

func (v NullableMachineIdentityDtoOwners) Get() *MachineIdentityDtoOwners {
	return v.value
}

func (v *NullableMachineIdentityDtoOwners) Set(val *MachineIdentityDtoOwners) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineIdentityDtoOwners) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineIdentityDtoOwners) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineIdentityDtoOwners(val *MachineIdentityDtoOwners) *NullableMachineIdentityDtoOwners {
	return &NullableMachineIdentityDtoOwners{value: val, isSet: true}
}

func (v NullableMachineIdentityDtoOwners) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineIdentityDtoOwners) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


