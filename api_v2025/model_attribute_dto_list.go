/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the AttributeDTOList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttributeDTOList{}

// AttributeDTOList struct for AttributeDTOList
type AttributeDTOList struct {
	Attributes []AttributeDTO `json:"attributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AttributeDTOList AttributeDTOList

// NewAttributeDTOList instantiates a new AttributeDTOList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeDTOList() *AttributeDTOList {
	this := AttributeDTOList{}
	return &this
}

// NewAttributeDTOListWithDefaults instantiates a new AttributeDTOList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeDTOListWithDefaults() *AttributeDTOList {
	this := AttributeDTOList{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AttributeDTOList) GetAttributes() []AttributeDTO {
	if o == nil {
		var ret []AttributeDTO
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AttributeDTOList) GetAttributesOk() ([]AttributeDTO, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *AttributeDTOList) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []AttributeDTO and assigns it to the Attributes field.
func (o *AttributeDTOList) SetAttributes(v []AttributeDTO) {
	o.Attributes = v
}

func (o AttributeDTOList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttributeDTOList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AttributeDTOList) UnmarshalJSON(data []byte) (err error) {
	varAttributeDTOList := _AttributeDTOList{}

	err = json.Unmarshal(data, &varAttributeDTOList)

	if err != nil {
		return err
	}

	*o = AttributeDTOList(varAttributeDTOList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAttributeDTOList struct {
	value *AttributeDTOList
	isSet bool
}

func (v NullableAttributeDTOList) Get() *AttributeDTOList {
	return v.value
}

func (v *NullableAttributeDTOList) Set(val *AttributeDTOList) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeDTOList) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeDTOList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeDTOList(val *AttributeDTOList) *NullableAttributeDTOList {
	return &NullableAttributeDTOList{value: val, isSet: true}
}

func (v NullableAttributeDTOList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeDTOList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


