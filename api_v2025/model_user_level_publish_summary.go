/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	
)

// checks if the UserLevelPublishSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserLevelPublishSummary{}

// UserLevelPublishSummary It represents a summary of a user level publish operation, including its metadata and status.
type UserLevelPublishSummary struct {
	// The unique identifier of the UserLevel.
	UserLevelId *string `json:"userLevelId,omitempty"`
	// Indicates whether the API call triggered a publish operation.
	Publish *bool `json:"publish,omitempty"`
	// The status of the UserLevel publish operation.
	Status *string `json:"status,omitempty"`
	// The last modification timestamp of the UserLevel.
	Modified *SailPointTime `json:"modified,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UserLevelPublishSummary UserLevelPublishSummary

// NewUserLevelPublishSummary instantiates a new UserLevelPublishSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserLevelPublishSummary() *UserLevelPublishSummary {
	this := UserLevelPublishSummary{}
	var publish bool = false
	this.Publish = &publish
	return &this
}

// NewUserLevelPublishSummaryWithDefaults instantiates a new UserLevelPublishSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserLevelPublishSummaryWithDefaults() *UserLevelPublishSummary {
	this := UserLevelPublishSummary{}
	var publish bool = false
	this.Publish = &publish
	return &this
}

// GetUserLevelId returns the UserLevelId field value if set, zero value otherwise.
func (o *UserLevelPublishSummary) GetUserLevelId() string {
	if o == nil || IsNil(o.UserLevelId) {
		var ret string
		return ret
	}
	return *o.UserLevelId
}

// GetUserLevelIdOk returns a tuple with the UserLevelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLevelPublishSummary) GetUserLevelIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserLevelId) {
		return nil, false
	}
	return o.UserLevelId, true
}

// HasUserLevelId returns a boolean if a field has been set.
func (o *UserLevelPublishSummary) HasUserLevelId() bool {
	if o != nil && !IsNil(o.UserLevelId) {
		return true
	}

	return false
}

// SetUserLevelId gets a reference to the given string and assigns it to the UserLevelId field.
func (o *UserLevelPublishSummary) SetUserLevelId(v string) {
	o.UserLevelId = &v
}

// GetPublish returns the Publish field value if set, zero value otherwise.
func (o *UserLevelPublishSummary) GetPublish() bool {
	if o == nil || IsNil(o.Publish) {
		var ret bool
		return ret
	}
	return *o.Publish
}

// GetPublishOk returns a tuple with the Publish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLevelPublishSummary) GetPublishOk() (*bool, bool) {
	if o == nil || IsNil(o.Publish) {
		return nil, false
	}
	return o.Publish, true
}

// HasPublish returns a boolean if a field has been set.
func (o *UserLevelPublishSummary) HasPublish() bool {
	if o != nil && !IsNil(o.Publish) {
		return true
	}

	return false
}

// SetPublish gets a reference to the given bool and assigns it to the Publish field.
func (o *UserLevelPublishSummary) SetPublish(v bool) {
	o.Publish = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UserLevelPublishSummary) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLevelPublishSummary) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UserLevelPublishSummary) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UserLevelPublishSummary) SetStatus(v string) {
	o.Status = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *UserLevelPublishSummary) GetModified() SailPointTime {
	if o == nil || IsNil(o.Modified) {
		var ret SailPointTime
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLevelPublishSummary) GetModifiedOk() (*SailPointTime, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *UserLevelPublishSummary) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given SailPointTime and assigns it to the Modified field.
func (o *UserLevelPublishSummary) SetModified(v SailPointTime) {
	o.Modified = &v
}

func (o UserLevelPublishSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserLevelPublishSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserLevelId) {
		toSerialize["userLevelId"] = o.UserLevelId
	}
	if !IsNil(o.Publish) {
		toSerialize["publish"] = o.Publish
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UserLevelPublishSummary) UnmarshalJSON(data []byte) (err error) {
	varUserLevelPublishSummary := _UserLevelPublishSummary{}

	err = json.Unmarshal(data, &varUserLevelPublishSummary)

	if err != nil {
		return err
	}

	*o = UserLevelPublishSummary(varUserLevelPublishSummary)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "userLevelId")
		delete(additionalProperties, "publish")
		delete(additionalProperties, "status")
		delete(additionalProperties, "modified")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUserLevelPublishSummary struct {
	value *UserLevelPublishSummary
	isSet bool
}

func (v NullableUserLevelPublishSummary) Get() *UserLevelPublishSummary {
	return v.value
}

func (v *NullableUserLevelPublishSummary) Set(val *UserLevelPublishSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableUserLevelPublishSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableUserLevelPublishSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserLevelPublishSummary(val *UserLevelPublishSummary) *NullableUserLevelPublishSummary {
	return &NullableUserLevelPublishSummary{value: val, isSet: true}
}

func (v NullableUserLevelPublishSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserLevelPublishSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


