/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	"fmt"
)

// ManagedClientStatusCode Status of a Managed Client
type ManagedClientStatusCode string

// List of ManagedClientStatusCode
const (
	MANAGEDCLIENTSTATUSCODE_NORMAL ManagedClientStatusCode = "NORMAL"
	MANAGEDCLIENTSTATUSCODE_UNDEFINED ManagedClientStatusCode = "UNDEFINED"
	MANAGEDCLIENTSTATUSCODE_NOT_CONFIGURED ManagedClientStatusCode = "NOT_CONFIGURED"
	MANAGEDCLIENTSTATUSCODE_CONFIGURING ManagedClientStatusCode = "CONFIGURING"
	MANAGEDCLIENTSTATUSCODE_WARNING ManagedClientStatusCode = "WARNING"
	MANAGEDCLIENTSTATUSCODE_ERROR ManagedClientStatusCode = "ERROR"
	MANAGEDCLIENTSTATUSCODE_FAILED ManagedClientStatusCode = "FAILED"
)

// All allowed values of ManagedClientStatusCode enum
var AllowedManagedClientStatusCodeEnumValues = []ManagedClientStatusCode{
	"NORMAL",
	"UNDEFINED",
	"NOT_CONFIGURED",
	"CONFIGURING",
	"WARNING",
	"ERROR",
	"FAILED",
}

func (v *ManagedClientStatusCode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ManagedClientStatusCode(value)
	for _, existing := range AllowedManagedClientStatusCodeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ManagedClientStatusCode", value)
}

// NewManagedClientStatusCodeFromValue returns a pointer to a valid ManagedClientStatusCode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewManagedClientStatusCodeFromValue(v string) (*ManagedClientStatusCode, error) {
	ev := ManagedClientStatusCode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ManagedClientStatusCode: valid values are %v", v, AllowedManagedClientStatusCodeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ManagedClientStatusCode) IsValid() bool {
	for _, existing := range AllowedManagedClientStatusCodeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ManagedClientStatusCode value
func (v ManagedClientStatusCode) Ptr() *ManagedClientStatusCode {
	return &v
}

type NullableManagedClientStatusCode struct {
	value *ManagedClientStatusCode
	isSet bool
}

func (v NullableManagedClientStatusCode) Get() *ManagedClientStatusCode {
	return v.value
}

func (v *NullableManagedClientStatusCode) Set(val *ManagedClientStatusCode) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedClientStatusCode) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedClientStatusCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedClientStatusCode(val *ManagedClientStatusCode) *NullableManagedClientStatusCode {
	return &NullableManagedClientStatusCode{value: val, isSet: true}
}

func (v NullableManagedClientStatusCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedClientStatusCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

