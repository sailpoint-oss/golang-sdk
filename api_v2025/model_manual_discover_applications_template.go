/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the ManualDiscoverApplicationsTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManualDiscoverApplicationsTemplate{}

// ManualDiscoverApplicationsTemplate struct for ManualDiscoverApplicationsTemplate
type ManualDiscoverApplicationsTemplate struct {
	// Name of the application.
	ApplicationName *string `json:"application_name,omitempty"`
	// Description of the application.
	Description *string `json:"description,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ManualDiscoverApplicationsTemplate ManualDiscoverApplicationsTemplate

// NewManualDiscoverApplicationsTemplate instantiates a new ManualDiscoverApplicationsTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManualDiscoverApplicationsTemplate() *ManualDiscoverApplicationsTemplate {
	this := ManualDiscoverApplicationsTemplate{}
	return &this
}

// NewManualDiscoverApplicationsTemplateWithDefaults instantiates a new ManualDiscoverApplicationsTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManualDiscoverApplicationsTemplateWithDefaults() *ManualDiscoverApplicationsTemplate {
	this := ManualDiscoverApplicationsTemplate{}
	return &this
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *ManualDiscoverApplicationsTemplate) GetApplicationName() string {
	if o == nil || IsNil(o.ApplicationName) {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualDiscoverApplicationsTemplate) GetApplicationNameOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationName) {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *ManualDiscoverApplicationsTemplate) HasApplicationName() bool {
	if o != nil && !IsNil(o.ApplicationName) {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *ManualDiscoverApplicationsTemplate) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ManualDiscoverApplicationsTemplate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManualDiscoverApplicationsTemplate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ManualDiscoverApplicationsTemplate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ManualDiscoverApplicationsTemplate) SetDescription(v string) {
	o.Description = &v
}

func (o ManualDiscoverApplicationsTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManualDiscoverApplicationsTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationName) {
		toSerialize["application_name"] = o.ApplicationName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ManualDiscoverApplicationsTemplate) UnmarshalJSON(data []byte) (err error) {
	varManualDiscoverApplicationsTemplate := _ManualDiscoverApplicationsTemplate{}

	err = json.Unmarshal(data, &varManualDiscoverApplicationsTemplate)

	if err != nil {
		return err
	}

	*o = ManualDiscoverApplicationsTemplate(varManualDiscoverApplicationsTemplate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "application_name")
		delete(additionalProperties, "description")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableManualDiscoverApplicationsTemplate struct {
	value *ManualDiscoverApplicationsTemplate
	isSet bool
}

func (v NullableManualDiscoverApplicationsTemplate) Get() *ManualDiscoverApplicationsTemplate {
	return v.value
}

func (v *NullableManualDiscoverApplicationsTemplate) Set(val *ManualDiscoverApplicationsTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableManualDiscoverApplicationsTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableManualDiscoverApplicationsTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManualDiscoverApplicationsTemplate(val *ManualDiscoverApplicationsTemplate) *NullableManualDiscoverApplicationsTemplate {
	return &NullableManualDiscoverApplicationsTemplate{value: val, isSet: true}
}

func (v NullableManualDiscoverApplicationsTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManualDiscoverApplicationsTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


