/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the ApprovalRejectRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApprovalRejectRequest{}

// ApprovalRejectRequest Request body for rejecting an approval request.
type ApprovalRejectRequest struct {
	// Comment associated with the reject request.
	Comment *string `json:"comment,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApprovalRejectRequest ApprovalRejectRequest

// NewApprovalRejectRequest instantiates a new ApprovalRejectRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalRejectRequest() *ApprovalRejectRequest {
	this := ApprovalRejectRequest{}
	return &this
}

// NewApprovalRejectRequestWithDefaults instantiates a new ApprovalRejectRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalRejectRequestWithDefaults() *ApprovalRejectRequest {
	this := ApprovalRejectRequest{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ApprovalRejectRequest) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalRejectRequest) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ApprovalRejectRequest) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ApprovalRejectRequest) SetComment(v string) {
	o.Comment = &v
}

func (o ApprovalRejectRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApprovalRejectRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApprovalRejectRequest) UnmarshalJSON(data []byte) (err error) {
	varApprovalRejectRequest := _ApprovalRejectRequest{}

	err = json.Unmarshal(data, &varApprovalRejectRequest)

	if err != nil {
		return err
	}

	*o = ApprovalRejectRequest(varApprovalRejectRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "comment")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApprovalRejectRequest struct {
	value *ApprovalRejectRequest
	isSet bool
}

func (v NullableApprovalRejectRequest) Get() *ApprovalRejectRequest {
	return v.value
}

func (v *NullableApprovalRejectRequest) Set(val *ApprovalRejectRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalRejectRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalRejectRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalRejectRequest(val *ApprovalRejectRequest) *NullableApprovalRejectRequest {
	return &NullableApprovalRejectRequest{value: val, isSet: true}
}

func (v NullableApprovalRejectRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalRejectRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


