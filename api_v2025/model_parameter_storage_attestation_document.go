/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the ParameterStorageAttestationDocument type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParameterStorageAttestationDocument{}

// ParameterStorageAttestationDocument The attestation document. This is Base64Url encoded binary data containing the attestation document. This has a cert with a public key that needs to be used to encrypt the private fields of the parameter on creation or update.
type ParameterStorageAttestationDocument struct {
	// The Base64Url encoded attestation document.
	AttestationDocument *string `json:"attestationDocument,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ParameterStorageAttestationDocument ParameterStorageAttestationDocument

// NewParameterStorageAttestationDocument instantiates a new ParameterStorageAttestationDocument object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameterStorageAttestationDocument() *ParameterStorageAttestationDocument {
	this := ParameterStorageAttestationDocument{}
	return &this
}

// NewParameterStorageAttestationDocumentWithDefaults instantiates a new ParameterStorageAttestationDocument object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameterStorageAttestationDocumentWithDefaults() *ParameterStorageAttestationDocument {
	this := ParameterStorageAttestationDocument{}
	return &this
}

// GetAttestationDocument returns the AttestationDocument field value if set, zero value otherwise.
func (o *ParameterStorageAttestationDocument) GetAttestationDocument() string {
	if o == nil || IsNil(o.AttestationDocument) {
		var ret string
		return ret
	}
	return *o.AttestationDocument
}

// GetAttestationDocumentOk returns a tuple with the AttestationDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterStorageAttestationDocument) GetAttestationDocumentOk() (*string, bool) {
	if o == nil || IsNil(o.AttestationDocument) {
		return nil, false
	}
	return o.AttestationDocument, true
}

// HasAttestationDocument returns a boolean if a field has been set.
func (o *ParameterStorageAttestationDocument) HasAttestationDocument() bool {
	if o != nil && !IsNil(o.AttestationDocument) {
		return true
	}

	return false
}

// SetAttestationDocument gets a reference to the given string and assigns it to the AttestationDocument field.
func (o *ParameterStorageAttestationDocument) SetAttestationDocument(v string) {
	o.AttestationDocument = &v
}

func (o ParameterStorageAttestationDocument) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParameterStorageAttestationDocument) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttestationDocument) {
		toSerialize["attestationDocument"] = o.AttestationDocument
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ParameterStorageAttestationDocument) UnmarshalJSON(data []byte) (err error) {
	varParameterStorageAttestationDocument := _ParameterStorageAttestationDocument{}

	err = json.Unmarshal(data, &varParameterStorageAttestationDocument)

	if err != nil {
		return err
	}

	*o = ParameterStorageAttestationDocument(varParameterStorageAttestationDocument)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "attestationDocument")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableParameterStorageAttestationDocument struct {
	value *ParameterStorageAttestationDocument
	isSet bool
}

func (v NullableParameterStorageAttestationDocument) Get() *ParameterStorageAttestationDocument {
	return v.value
}

func (v *NullableParameterStorageAttestationDocument) Set(val *ParameterStorageAttestationDocument) {
	v.value = val
	v.isSet = true
}

func (v NullableParameterStorageAttestationDocument) IsSet() bool {
	return v.isSet
}

func (v *NullableParameterStorageAttestationDocument) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameterStorageAttestationDocument(val *ParameterStorageAttestationDocument) *NullableParameterStorageAttestationDocument {
	return &NullableParameterStorageAttestationDocument{value: val, isSet: true}
}

func (v NullableParameterStorageAttestationDocument) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameterStorageAttestationDocument) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


