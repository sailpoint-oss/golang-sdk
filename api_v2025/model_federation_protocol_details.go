/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the FederationProtocolDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FederationProtocolDetails{}

// FederationProtocolDetails struct for FederationProtocolDetails
type FederationProtocolDetails struct {
	// Federation protocol role
	Role *string `json:"role,omitempty"`
	// An entity ID is a globally unique name for a SAML entity, either an Identity Provider (IDP) or a Service Provider (SP).
	EntityId *string `json:"entityId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FederationProtocolDetails FederationProtocolDetails

// NewFederationProtocolDetails instantiates a new FederationProtocolDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFederationProtocolDetails() *FederationProtocolDetails {
	this := FederationProtocolDetails{}
	return &this
}

// NewFederationProtocolDetailsWithDefaults instantiates a new FederationProtocolDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFederationProtocolDetailsWithDefaults() *FederationProtocolDetails {
	this := FederationProtocolDetails{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *FederationProtocolDetails) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederationProtocolDetails) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *FederationProtocolDetails) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *FederationProtocolDetails) SetRole(v string) {
	o.Role = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *FederationProtocolDetails) GetEntityId() string {
	if o == nil || IsNil(o.EntityId) {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FederationProtocolDetails) GetEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *FederationProtocolDetails) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *FederationProtocolDetails) SetEntityId(v string) {
	o.EntityId = &v
}

func (o FederationProtocolDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FederationProtocolDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.EntityId) {
		toSerialize["entityId"] = o.EntityId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FederationProtocolDetails) UnmarshalJSON(data []byte) (err error) {
	varFederationProtocolDetails := _FederationProtocolDetails{}

	err = json.Unmarshal(data, &varFederationProtocolDetails)

	if err != nil {
		return err
	}

	*o = FederationProtocolDetails(varFederationProtocolDetails)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "role")
		delete(additionalProperties, "entityId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFederationProtocolDetails struct {
	value *FederationProtocolDetails
	isSet bool
}

func (v NullableFederationProtocolDetails) Get() *FederationProtocolDetails {
	return v.value
}

func (v *NullableFederationProtocolDetails) Set(val *FederationProtocolDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableFederationProtocolDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableFederationProtocolDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFederationProtocolDetails(val *FederationProtocolDetails) *NullableFederationProtocolDetails {
	return &NullableFederationProtocolDetails{value: val, isSet: true}
}

func (v NullableFederationProtocolDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFederationProtocolDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


