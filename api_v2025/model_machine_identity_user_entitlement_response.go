/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	
)

// checks if the MachineIdentityUserEntitlementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineIdentityUserEntitlementResponse{}

// MachineIdentityUserEntitlementResponse struct for MachineIdentityUserEntitlementResponse
type MachineIdentityUserEntitlementResponse struct {
	// System-generated unique ID of the Object
	Id *string `json:"id,omitempty"`
	// System-generated unique ID of the Machine Identity
	MachineIdentityId *string `json:"machineIdentityId,omitempty"`
	Source *MachineIdentityUserEntitlementResponseSource `json:"source,omitempty"`
	Entitlement *MachineIdentityUserEntitlementResponseEntitlement `json:"entitlement,omitempty"`
	// Creation date of the Object
	Created *SailPointTime `json:"created,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MachineIdentityUserEntitlementResponse MachineIdentityUserEntitlementResponse

// NewMachineIdentityUserEntitlementResponse instantiates a new MachineIdentityUserEntitlementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineIdentityUserEntitlementResponse() *MachineIdentityUserEntitlementResponse {
	this := MachineIdentityUserEntitlementResponse{}
	return &this
}

// NewMachineIdentityUserEntitlementResponseWithDefaults instantiates a new MachineIdentityUserEntitlementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineIdentityUserEntitlementResponseWithDefaults() *MachineIdentityUserEntitlementResponse {
	this := MachineIdentityUserEntitlementResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MachineIdentityUserEntitlementResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityUserEntitlementResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MachineIdentityUserEntitlementResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MachineIdentityUserEntitlementResponse) SetId(v string) {
	o.Id = &v
}

// GetMachineIdentityId returns the MachineIdentityId field value if set, zero value otherwise.
func (o *MachineIdentityUserEntitlementResponse) GetMachineIdentityId() string {
	if o == nil || IsNil(o.MachineIdentityId) {
		var ret string
		return ret
	}
	return *o.MachineIdentityId
}

// GetMachineIdentityIdOk returns a tuple with the MachineIdentityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityUserEntitlementResponse) GetMachineIdentityIdOk() (*string, bool) {
	if o == nil || IsNil(o.MachineIdentityId) {
		return nil, false
	}
	return o.MachineIdentityId, true
}

// HasMachineIdentityId returns a boolean if a field has been set.
func (o *MachineIdentityUserEntitlementResponse) HasMachineIdentityId() bool {
	if o != nil && !IsNil(o.MachineIdentityId) {
		return true
	}

	return false
}

// SetMachineIdentityId gets a reference to the given string and assigns it to the MachineIdentityId field.
func (o *MachineIdentityUserEntitlementResponse) SetMachineIdentityId(v string) {
	o.MachineIdentityId = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *MachineIdentityUserEntitlementResponse) GetSource() MachineIdentityUserEntitlementResponseSource {
	if o == nil || IsNil(o.Source) {
		var ret MachineIdentityUserEntitlementResponseSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityUserEntitlementResponse) GetSourceOk() (*MachineIdentityUserEntitlementResponseSource, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *MachineIdentityUserEntitlementResponse) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given MachineIdentityUserEntitlementResponseSource and assigns it to the Source field.
func (o *MachineIdentityUserEntitlementResponse) SetSource(v MachineIdentityUserEntitlementResponseSource) {
	o.Source = &v
}

// GetEntitlement returns the Entitlement field value if set, zero value otherwise.
func (o *MachineIdentityUserEntitlementResponse) GetEntitlement() MachineIdentityUserEntitlementResponseEntitlement {
	if o == nil || IsNil(o.Entitlement) {
		var ret MachineIdentityUserEntitlementResponseEntitlement
		return ret
	}
	return *o.Entitlement
}

// GetEntitlementOk returns a tuple with the Entitlement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityUserEntitlementResponse) GetEntitlementOk() (*MachineIdentityUserEntitlementResponseEntitlement, bool) {
	if o == nil || IsNil(o.Entitlement) {
		return nil, false
	}
	return o.Entitlement, true
}

// HasEntitlement returns a boolean if a field has been set.
func (o *MachineIdentityUserEntitlementResponse) HasEntitlement() bool {
	if o != nil && !IsNil(o.Entitlement) {
		return true
	}

	return false
}

// SetEntitlement gets a reference to the given MachineIdentityUserEntitlementResponseEntitlement and assigns it to the Entitlement field.
func (o *MachineIdentityUserEntitlementResponse) SetEntitlement(v MachineIdentityUserEntitlementResponseEntitlement) {
	o.Entitlement = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *MachineIdentityUserEntitlementResponse) GetCreated() SailPointTime {
	if o == nil || IsNil(o.Created) {
		var ret SailPointTime
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityUserEntitlementResponse) GetCreatedOk() (*SailPointTime, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *MachineIdentityUserEntitlementResponse) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given SailPointTime and assigns it to the Created field.
func (o *MachineIdentityUserEntitlementResponse) SetCreated(v SailPointTime) {
	o.Created = &v
}

func (o MachineIdentityUserEntitlementResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineIdentityUserEntitlementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MachineIdentityId) {
		toSerialize["machineIdentityId"] = o.MachineIdentityId
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Entitlement) {
		toSerialize["entitlement"] = o.Entitlement
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MachineIdentityUserEntitlementResponse) UnmarshalJSON(data []byte) (err error) {
	varMachineIdentityUserEntitlementResponse := _MachineIdentityUserEntitlementResponse{}

	err = json.Unmarshal(data, &varMachineIdentityUserEntitlementResponse)

	if err != nil {
		return err
	}

	*o = MachineIdentityUserEntitlementResponse(varMachineIdentityUserEntitlementResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "machineIdentityId")
		delete(additionalProperties, "source")
		delete(additionalProperties, "entitlement")
		delete(additionalProperties, "created")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMachineIdentityUserEntitlementResponse struct {
	value *MachineIdentityUserEntitlementResponse
	isSet bool
}

func (v NullableMachineIdentityUserEntitlementResponse) Get() *MachineIdentityUserEntitlementResponse {
	return v.value
}

func (v *NullableMachineIdentityUserEntitlementResponse) Set(val *MachineIdentityUserEntitlementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineIdentityUserEntitlementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineIdentityUserEntitlementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineIdentityUserEntitlementResponse(val *MachineIdentityUserEntitlementResponse) *NullableMachineIdentityUserEntitlementResponse {
	return &NullableMachineIdentityUserEntitlementResponse{value: val, isSet: true}
}

func (v NullableMachineIdentityUserEntitlementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineIdentityUserEntitlementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


