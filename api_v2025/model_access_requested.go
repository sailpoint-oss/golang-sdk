/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the AccessRequested type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessRequested{}

// AccessRequested struct for AccessRequested
type AccessRequested struct {
	AccessRequest *AccessRequestResponse1 `json:"accessRequest,omitempty"`
	// the identity id
	IdentityId *string `json:"identityId,omitempty"`
	// the event type
	EventType *string `json:"eventType,omitempty"`
	// the date of event
	Dt *string `json:"dt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccessRequested AccessRequested

// NewAccessRequested instantiates a new AccessRequested object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessRequested() *AccessRequested {
	this := AccessRequested{}
	return &this
}

// NewAccessRequestedWithDefaults instantiates a new AccessRequested object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessRequestedWithDefaults() *AccessRequested {
	this := AccessRequested{}
	return &this
}

// GetAccessRequest returns the AccessRequest field value if set, zero value otherwise.
func (o *AccessRequested) GetAccessRequest() AccessRequestResponse1 {
	if o == nil || IsNil(o.AccessRequest) {
		var ret AccessRequestResponse1
		return ret
	}
	return *o.AccessRequest
}

// GetAccessRequestOk returns a tuple with the AccessRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRequested) GetAccessRequestOk() (*AccessRequestResponse1, bool) {
	if o == nil || IsNil(o.AccessRequest) {
		return nil, false
	}
	return o.AccessRequest, true
}

// HasAccessRequest returns a boolean if a field has been set.
func (o *AccessRequested) HasAccessRequest() bool {
	if o != nil && !IsNil(o.AccessRequest) {
		return true
	}

	return false
}

// SetAccessRequest gets a reference to the given AccessRequestResponse1 and assigns it to the AccessRequest field.
func (o *AccessRequested) SetAccessRequest(v AccessRequestResponse1) {
	o.AccessRequest = &v
}

// GetIdentityId returns the IdentityId field value if set, zero value otherwise.
func (o *AccessRequested) GetIdentityId() string {
	if o == nil || IsNil(o.IdentityId) {
		var ret string
		return ret
	}
	return *o.IdentityId
}

// GetIdentityIdOk returns a tuple with the IdentityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRequested) GetIdentityIdOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityId) {
		return nil, false
	}
	return o.IdentityId, true
}

// HasIdentityId returns a boolean if a field has been set.
func (o *AccessRequested) HasIdentityId() bool {
	if o != nil && !IsNil(o.IdentityId) {
		return true
	}

	return false
}

// SetIdentityId gets a reference to the given string and assigns it to the IdentityId field.
func (o *AccessRequested) SetIdentityId(v string) {
	o.IdentityId = &v
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *AccessRequested) GetEventType() string {
	if o == nil || IsNil(o.EventType) {
		var ret string
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRequested) GetEventTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EventType) {
		return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *AccessRequested) HasEventType() bool {
	if o != nil && !IsNil(o.EventType) {
		return true
	}

	return false
}

// SetEventType gets a reference to the given string and assigns it to the EventType field.
func (o *AccessRequested) SetEventType(v string) {
	o.EventType = &v
}

// GetDt returns the Dt field value if set, zero value otherwise.
func (o *AccessRequested) GetDt() string {
	if o == nil || IsNil(o.Dt) {
		var ret string
		return ret
	}
	return *o.Dt
}

// GetDtOk returns a tuple with the Dt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRequested) GetDtOk() (*string, bool) {
	if o == nil || IsNil(o.Dt) {
		return nil, false
	}
	return o.Dt, true
}

// HasDt returns a boolean if a field has been set.
func (o *AccessRequested) HasDt() bool {
	if o != nil && !IsNil(o.Dt) {
		return true
	}

	return false
}

// SetDt gets a reference to the given string and assigns it to the Dt field.
func (o *AccessRequested) SetDt(v string) {
	o.Dt = &v
}

func (o AccessRequested) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessRequested) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessRequest) {
		toSerialize["accessRequest"] = o.AccessRequest
	}
	if !IsNil(o.IdentityId) {
		toSerialize["identityId"] = o.IdentityId
	}
	if !IsNil(o.EventType) {
		toSerialize["eventType"] = o.EventType
	}
	if !IsNil(o.Dt) {
		toSerialize["dt"] = o.Dt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccessRequested) UnmarshalJSON(data []byte) (err error) {
	varAccessRequested := _AccessRequested{}

	err = json.Unmarshal(data, &varAccessRequested)

	if err != nil {
		return err
	}

	*o = AccessRequested(varAccessRequested)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accessRequest")
		delete(additionalProperties, "identityId")
		delete(additionalProperties, "eventType")
		delete(additionalProperties, "dt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccessRequested struct {
	value *AccessRequested
	isSet bool
}

func (v NullableAccessRequested) Get() *AccessRequested {
	return v.value
}

func (v *NullableAccessRequested) Set(val *AccessRequested) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessRequested) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessRequested) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessRequested(val *AccessRequested) *NullableAccessRequested {
	return &NullableAccessRequested{value: val, isSet: true}
}

func (v NullableAccessRequested) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessRequested) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


