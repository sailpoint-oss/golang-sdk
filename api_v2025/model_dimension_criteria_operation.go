/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	"fmt"
)

// DimensionCriteriaOperation An operation
type DimensionCriteriaOperation string

// List of DimensionCriteriaOperation
const (
	DIMENSIONCRITERIAOPERATION_EQUALS DimensionCriteriaOperation = "EQUALS"
	DIMENSIONCRITERIAOPERATION_AND DimensionCriteriaOperation = "AND"
	DIMENSIONCRITERIAOPERATION_OR DimensionCriteriaOperation = "OR"
)

// All allowed values of DimensionCriteriaOperation enum
var AllowedDimensionCriteriaOperationEnumValues = []DimensionCriteriaOperation{
	"EQUALS",
	"AND",
	"OR",
}

func (v *DimensionCriteriaOperation) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DimensionCriteriaOperation(value)
	for _, existing := range AllowedDimensionCriteriaOperationEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DimensionCriteriaOperation", value)
}

// NewDimensionCriteriaOperationFromValue returns a pointer to a valid DimensionCriteriaOperation
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDimensionCriteriaOperationFromValue(v string) (*DimensionCriteriaOperation, error) {
	ev := DimensionCriteriaOperation(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DimensionCriteriaOperation: valid values are %v", v, AllowedDimensionCriteriaOperationEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DimensionCriteriaOperation) IsValid() bool {
	for _, existing := range AllowedDimensionCriteriaOperationEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DimensionCriteriaOperation value
func (v DimensionCriteriaOperation) Ptr() *DimensionCriteriaOperation {
	return &v
}

type NullableDimensionCriteriaOperation struct {
	value *DimensionCriteriaOperation
	isSet bool
}

func (v NullableDimensionCriteriaOperation) Get() *DimensionCriteriaOperation {
	return v.value
}

func (v *NullableDimensionCriteriaOperation) Set(val *DimensionCriteriaOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableDimensionCriteriaOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableDimensionCriteriaOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDimensionCriteriaOperation(val *DimensionCriteriaOperation) *NullableDimensionCriteriaOperation {
	return &NullableDimensionCriteriaOperation{value: val, isSet: true}
}

func (v NullableDimensionCriteriaOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDimensionCriteriaOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

