/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the SearchCriteriaQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCriteriaQuery{}

// SearchCriteriaQuery struct for SearchCriteriaQuery
type SearchCriteriaQuery struct {
	// A structured query for advanced search.
	Query *string `json:"query,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SearchCriteriaQuery SearchCriteriaQuery

// NewSearchCriteriaQuery instantiates a new SearchCriteriaQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCriteriaQuery() *SearchCriteriaQuery {
	this := SearchCriteriaQuery{}
	return &this
}

// NewSearchCriteriaQueryWithDefaults instantiates a new SearchCriteriaQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCriteriaQueryWithDefaults() *SearchCriteriaQuery {
	this := SearchCriteriaQuery{}
	return &this
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *SearchCriteriaQuery) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCriteriaQuery) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *SearchCriteriaQuery) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *SearchCriteriaQuery) SetQuery(v string) {
	o.Query = &v
}

func (o SearchCriteriaQuery) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCriteriaQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SearchCriteriaQuery) UnmarshalJSON(data []byte) (err error) {
	varSearchCriteriaQuery := _SearchCriteriaQuery{}

	err = json.Unmarshal(data, &varSearchCriteriaQuery)

	if err != nil {
		return err
	}

	*o = SearchCriteriaQuery(varSearchCriteriaQuery)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "query")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSearchCriteriaQuery struct {
	value *SearchCriteriaQuery
	isSet bool
}

func (v NullableSearchCriteriaQuery) Get() *SearchCriteriaQuery {
	return v.value
}

func (v *NullableSearchCriteriaQuery) Set(val *SearchCriteriaQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCriteriaQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCriteriaQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCriteriaQuery(val *SearchCriteriaQuery) *NullableSearchCriteriaQuery {
	return &NullableSearchCriteriaQuery{value: val, isSet: true}
}

func (v NullableSearchCriteriaQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCriteriaQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


