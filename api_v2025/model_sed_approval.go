/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the SedApproval type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SedApproval{}

// SedApproval Sed Approval Request Body
type SedApproval struct {
	// List of SED id's
	Items []string `json:"items,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SedApproval SedApproval

// NewSedApproval instantiates a new SedApproval object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSedApproval() *SedApproval {
	this := SedApproval{}
	return &this
}

// NewSedApprovalWithDefaults instantiates a new SedApproval object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSedApprovalWithDefaults() *SedApproval {
	this := SedApproval{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *SedApproval) GetItems() []string {
	if o == nil || IsNil(o.Items) {
		var ret []string
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SedApproval) GetItemsOk() ([]string, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *SedApproval) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []string and assigns it to the Items field.
func (o *SedApproval) SetItems(v []string) {
	o.Items = v
}

func (o SedApproval) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SedApproval) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SedApproval) UnmarshalJSON(data []byte) (err error) {
	varSedApproval := _SedApproval{}

	err = json.Unmarshal(data, &varSedApproval)

	if err != nil {
		return err
	}

	*o = SedApproval(varSedApproval)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "items")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSedApproval struct {
	value *SedApproval
	isSet bool
}

func (v NullableSedApproval) Get() *SedApproval {
	return v.value
}

func (v *NullableSedApproval) Set(val *SedApproval) {
	v.value = val
	v.isSet = true
}

func (v NullableSedApproval) IsSet() bool {
	return v.isSet
}

func (v *NullableSedApproval) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSedApproval(val *SedApproval) *NullableSedApproval {
	return &NullableSedApproval{value: val, isSet: true}
}

func (v NullableSedApproval) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSedApproval) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


