/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the LoadAccountsTaskTaskAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadAccountsTaskTaskAttributes{}

// LoadAccountsTaskTaskAttributes Extra attributes map(dictionary) for the task.
type LoadAccountsTaskTaskAttributes struct {
	// The id of the source
	AppId *string `json:"appId,omitempty"`
	// The indicator if the aggregation process was enabled/disabled for the aggregation job
	OptimizedAggregation *string `json:"optimizedAggregation,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _LoadAccountsTaskTaskAttributes LoadAccountsTaskTaskAttributes

// NewLoadAccountsTaskTaskAttributes instantiates a new LoadAccountsTaskTaskAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadAccountsTaskTaskAttributes() *LoadAccountsTaskTaskAttributes {
	this := LoadAccountsTaskTaskAttributes{}
	return &this
}

// NewLoadAccountsTaskTaskAttributesWithDefaults instantiates a new LoadAccountsTaskTaskAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadAccountsTaskTaskAttributesWithDefaults() *LoadAccountsTaskTaskAttributes {
	this := LoadAccountsTaskTaskAttributes{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *LoadAccountsTaskTaskAttributes) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadAccountsTaskTaskAttributes) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *LoadAccountsTaskTaskAttributes) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *LoadAccountsTaskTaskAttributes) SetAppId(v string) {
	o.AppId = &v
}

// GetOptimizedAggregation returns the OptimizedAggregation field value if set, zero value otherwise.
func (o *LoadAccountsTaskTaskAttributes) GetOptimizedAggregation() string {
	if o == nil || IsNil(o.OptimizedAggregation) {
		var ret string
		return ret
	}
	return *o.OptimizedAggregation
}

// GetOptimizedAggregationOk returns a tuple with the OptimizedAggregation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadAccountsTaskTaskAttributes) GetOptimizedAggregationOk() (*string, bool) {
	if o == nil || IsNil(o.OptimizedAggregation) {
		return nil, false
	}
	return o.OptimizedAggregation, true
}

// HasOptimizedAggregation returns a boolean if a field has been set.
func (o *LoadAccountsTaskTaskAttributes) HasOptimizedAggregation() bool {
	if o != nil && !IsNil(o.OptimizedAggregation) {
		return true
	}

	return false
}

// SetOptimizedAggregation gets a reference to the given string and assigns it to the OptimizedAggregation field.
func (o *LoadAccountsTaskTaskAttributes) SetOptimizedAggregation(v string) {
	o.OptimizedAggregation = &v
}

func (o LoadAccountsTaskTaskAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadAccountsTaskTaskAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.OptimizedAggregation) {
		toSerialize["optimizedAggregation"] = o.OptimizedAggregation
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *LoadAccountsTaskTaskAttributes) UnmarshalJSON(data []byte) (err error) {
	varLoadAccountsTaskTaskAttributes := _LoadAccountsTaskTaskAttributes{}

	err = json.Unmarshal(data, &varLoadAccountsTaskTaskAttributes)

	if err != nil {
		return err
	}

	*o = LoadAccountsTaskTaskAttributes(varLoadAccountsTaskTaskAttributes)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "appId")
		delete(additionalProperties, "optimizedAggregation")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableLoadAccountsTaskTaskAttributes struct {
	value *LoadAccountsTaskTaskAttributes
	isSet bool
}

func (v NullableLoadAccountsTaskTaskAttributes) Get() *LoadAccountsTaskTaskAttributes {
	return v.value
}

func (v *NullableLoadAccountsTaskTaskAttributes) Set(val *LoadAccountsTaskTaskAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadAccountsTaskTaskAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadAccountsTaskTaskAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadAccountsTaskTaskAttributes(val *LoadAccountsTaskTaskAttributes) *NullableLoadAccountsTaskTaskAttributes {
	return &NullableLoadAccountsTaskTaskAttributes{value: val, isSet: true}
}

func (v NullableLoadAccountsTaskTaskAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadAccountsTaskTaskAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


