/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the DependantAppConnections type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DependantAppConnections{}

// DependantAppConnections struct for DependantAppConnections
type DependantAppConnections struct {
	// Id of the connected Application
	CloudAppId *string `json:"cloudAppId,omitempty"`
	// Description of the connected Application
	Description *string `json:"description,omitempty"`
	// Is the Application enabled
	Enabled *bool `json:"enabled,omitempty"`
	// Is Provisioning enabled for connected Application
	ProvisionRequestEnabled *bool `json:"provisionRequestEnabled,omitempty"`
	AccountSource *DependantAppConnectionsAccountSource `json:"accountSource,omitempty"`
	// The amount of launchers for connected Application (long type)
	LauncherCount *int64 `json:"launcherCount,omitempty"`
	// Is Provisioning enabled for connected Application
	MatchAllAccount *bool `json:"matchAllAccount,omitempty"`
	// The owner of the connected Application
	Owner []BaseReferenceDto `json:"owner,omitempty"`
	// Is App Center enabled for connected Application
	AppCenterEnabled *bool `json:"appCenterEnabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DependantAppConnections DependantAppConnections

// NewDependantAppConnections instantiates a new DependantAppConnections object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDependantAppConnections() *DependantAppConnections {
	this := DependantAppConnections{}
	var enabled bool = true
	this.Enabled = &enabled
	var provisionRequestEnabled bool = true
	this.ProvisionRequestEnabled = &provisionRequestEnabled
	var matchAllAccount bool = false
	this.MatchAllAccount = &matchAllAccount
	var appCenterEnabled bool = false
	this.AppCenterEnabled = &appCenterEnabled
	return &this
}

// NewDependantAppConnectionsWithDefaults instantiates a new DependantAppConnections object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDependantAppConnectionsWithDefaults() *DependantAppConnections {
	this := DependantAppConnections{}
	var enabled bool = true
	this.Enabled = &enabled
	var provisionRequestEnabled bool = true
	this.ProvisionRequestEnabled = &provisionRequestEnabled
	var matchAllAccount bool = false
	this.MatchAllAccount = &matchAllAccount
	var appCenterEnabled bool = false
	this.AppCenterEnabled = &appCenterEnabled
	return &this
}

// GetCloudAppId returns the CloudAppId field value if set, zero value otherwise.
func (o *DependantAppConnections) GetCloudAppId() string {
	if o == nil || IsNil(o.CloudAppId) {
		var ret string
		return ret
	}
	return *o.CloudAppId
}

// GetCloudAppIdOk returns a tuple with the CloudAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DependantAppConnections) GetCloudAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.CloudAppId) {
		return nil, false
	}
	return o.CloudAppId, true
}

// HasCloudAppId returns a boolean if a field has been set.
func (o *DependantAppConnections) HasCloudAppId() bool {
	if o != nil && !IsNil(o.CloudAppId) {
		return true
	}

	return false
}

// SetCloudAppId gets a reference to the given string and assigns it to the CloudAppId field.
func (o *DependantAppConnections) SetCloudAppId(v string) {
	o.CloudAppId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DependantAppConnections) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DependantAppConnections) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DependantAppConnections) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DependantAppConnections) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *DependantAppConnections) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DependantAppConnections) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *DependantAppConnections) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *DependantAppConnections) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetProvisionRequestEnabled returns the ProvisionRequestEnabled field value if set, zero value otherwise.
func (o *DependantAppConnections) GetProvisionRequestEnabled() bool {
	if o == nil || IsNil(o.ProvisionRequestEnabled) {
		var ret bool
		return ret
	}
	return *o.ProvisionRequestEnabled
}

// GetProvisionRequestEnabledOk returns a tuple with the ProvisionRequestEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DependantAppConnections) GetProvisionRequestEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ProvisionRequestEnabled) {
		return nil, false
	}
	return o.ProvisionRequestEnabled, true
}

// HasProvisionRequestEnabled returns a boolean if a field has been set.
func (o *DependantAppConnections) HasProvisionRequestEnabled() bool {
	if o != nil && !IsNil(o.ProvisionRequestEnabled) {
		return true
	}

	return false
}

// SetProvisionRequestEnabled gets a reference to the given bool and assigns it to the ProvisionRequestEnabled field.
func (o *DependantAppConnections) SetProvisionRequestEnabled(v bool) {
	o.ProvisionRequestEnabled = &v
}

// GetAccountSource returns the AccountSource field value if set, zero value otherwise.
func (o *DependantAppConnections) GetAccountSource() DependantAppConnectionsAccountSource {
	if o == nil || IsNil(o.AccountSource) {
		var ret DependantAppConnectionsAccountSource
		return ret
	}
	return *o.AccountSource
}

// GetAccountSourceOk returns a tuple with the AccountSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DependantAppConnections) GetAccountSourceOk() (*DependantAppConnectionsAccountSource, bool) {
	if o == nil || IsNil(o.AccountSource) {
		return nil, false
	}
	return o.AccountSource, true
}

// HasAccountSource returns a boolean if a field has been set.
func (o *DependantAppConnections) HasAccountSource() bool {
	if o != nil && !IsNil(o.AccountSource) {
		return true
	}

	return false
}

// SetAccountSource gets a reference to the given DependantAppConnectionsAccountSource and assigns it to the AccountSource field.
func (o *DependantAppConnections) SetAccountSource(v DependantAppConnectionsAccountSource) {
	o.AccountSource = &v
}

// GetLauncherCount returns the LauncherCount field value if set, zero value otherwise.
func (o *DependantAppConnections) GetLauncherCount() int64 {
	if o == nil || IsNil(o.LauncherCount) {
		var ret int64
		return ret
	}
	return *o.LauncherCount
}

// GetLauncherCountOk returns a tuple with the LauncherCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DependantAppConnections) GetLauncherCountOk() (*int64, bool) {
	if o == nil || IsNil(o.LauncherCount) {
		return nil, false
	}
	return o.LauncherCount, true
}

// HasLauncherCount returns a boolean if a field has been set.
func (o *DependantAppConnections) HasLauncherCount() bool {
	if o != nil && !IsNil(o.LauncherCount) {
		return true
	}

	return false
}

// SetLauncherCount gets a reference to the given int64 and assigns it to the LauncherCount field.
func (o *DependantAppConnections) SetLauncherCount(v int64) {
	o.LauncherCount = &v
}

// GetMatchAllAccount returns the MatchAllAccount field value if set, zero value otherwise.
func (o *DependantAppConnections) GetMatchAllAccount() bool {
	if o == nil || IsNil(o.MatchAllAccount) {
		var ret bool
		return ret
	}
	return *o.MatchAllAccount
}

// GetMatchAllAccountOk returns a tuple with the MatchAllAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DependantAppConnections) GetMatchAllAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.MatchAllAccount) {
		return nil, false
	}
	return o.MatchAllAccount, true
}

// HasMatchAllAccount returns a boolean if a field has been set.
func (o *DependantAppConnections) HasMatchAllAccount() bool {
	if o != nil && !IsNil(o.MatchAllAccount) {
		return true
	}

	return false
}

// SetMatchAllAccount gets a reference to the given bool and assigns it to the MatchAllAccount field.
func (o *DependantAppConnections) SetMatchAllAccount(v bool) {
	o.MatchAllAccount = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *DependantAppConnections) GetOwner() []BaseReferenceDto {
	if o == nil || IsNil(o.Owner) {
		var ret []BaseReferenceDto
		return ret
	}
	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DependantAppConnections) GetOwnerOk() ([]BaseReferenceDto, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *DependantAppConnections) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given []BaseReferenceDto and assigns it to the Owner field.
func (o *DependantAppConnections) SetOwner(v []BaseReferenceDto) {
	o.Owner = v
}

// GetAppCenterEnabled returns the AppCenterEnabled field value if set, zero value otherwise.
func (o *DependantAppConnections) GetAppCenterEnabled() bool {
	if o == nil || IsNil(o.AppCenterEnabled) {
		var ret bool
		return ret
	}
	return *o.AppCenterEnabled
}

// GetAppCenterEnabledOk returns a tuple with the AppCenterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DependantAppConnections) GetAppCenterEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AppCenterEnabled) {
		return nil, false
	}
	return o.AppCenterEnabled, true
}

// HasAppCenterEnabled returns a boolean if a field has been set.
func (o *DependantAppConnections) HasAppCenterEnabled() bool {
	if o != nil && !IsNil(o.AppCenterEnabled) {
		return true
	}

	return false
}

// SetAppCenterEnabled gets a reference to the given bool and assigns it to the AppCenterEnabled field.
func (o *DependantAppConnections) SetAppCenterEnabled(v bool) {
	o.AppCenterEnabled = &v
}

func (o DependantAppConnections) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DependantAppConnections) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudAppId) {
		toSerialize["cloudAppId"] = o.CloudAppId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.ProvisionRequestEnabled) {
		toSerialize["provisionRequestEnabled"] = o.ProvisionRequestEnabled
	}
	if !IsNil(o.AccountSource) {
		toSerialize["accountSource"] = o.AccountSource
	}
	if !IsNil(o.LauncherCount) {
		toSerialize["launcherCount"] = o.LauncherCount
	}
	if !IsNil(o.MatchAllAccount) {
		toSerialize["matchAllAccount"] = o.MatchAllAccount
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.AppCenterEnabled) {
		toSerialize["appCenterEnabled"] = o.AppCenterEnabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DependantAppConnections) UnmarshalJSON(data []byte) (err error) {
	varDependantAppConnections := _DependantAppConnections{}

	err = json.Unmarshal(data, &varDependantAppConnections)

	if err != nil {
		return err
	}

	*o = DependantAppConnections(varDependantAppConnections)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cloudAppId")
		delete(additionalProperties, "description")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "provisionRequestEnabled")
		delete(additionalProperties, "accountSource")
		delete(additionalProperties, "launcherCount")
		delete(additionalProperties, "matchAllAccount")
		delete(additionalProperties, "owner")
		delete(additionalProperties, "appCenterEnabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDependantAppConnections struct {
	value *DependantAppConnections
	isSet bool
}

func (v NullableDependantAppConnections) Get() *DependantAppConnections {
	return v.value
}

func (v *NullableDependantAppConnections) Set(val *DependantAppConnections) {
	v.value = val
	v.isSet = true
}

func (v NullableDependantAppConnections) IsSet() bool {
	return v.isSet
}

func (v *NullableDependantAppConnections) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDependantAppConnections(val *DependantAppConnections) *NullableDependantAppConnections {
	return &NullableDependantAppConnections{value: val, isSet: true}
}

func (v NullableDependantAppConnections) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDependantAppConnections) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


