/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	"fmt"
)

// checks if the ParameterStorageParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParameterStorageParameter{}

// ParameterStorageParameter A parameter that has been retrieved from the store.
type ParameterStorageParameter struct {
	// The ID of the reference
	Id string `json:"id"`
	// The ID of the user who owns the parameter.
	OwnerId string `json:"ownerId"`
	// The type of the parameter. This cannot be changed after being set. Please see the types document for more information.
	Type *string `json:"type,omitempty"`
	// The human-readable name of the parameter.
	Name string `json:"name"`
	// The name of the primary field in the public fields.
	PrimaryField *string `json:"primaryField,omitempty"`
	// The public fields stored for this parameter. See the types document for information about what can be stored.
	PublicFields map[string]interface{} `json:"publicFields"`
	// Describe the parameter
	Description *string `json:"description,omitempty"`
	// ISO8606 format datetime of the last time any field of the parameter was changed.
	LastModifiedAt *string `json:"lastModifiedAt,omitempty"`
	// The ID of the user who last modified the parameter. Empty when identity is not known.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`
	// ISO8606 format datetime of the time the secret fields were changed on the parameter.
	PrivateFieldsLastModifiedAt *string `json:"privateFieldsLastModifiedAt,omitempty"`
	// The ID of the user who last modified the private fields. Empty when identity is not known.
	PrivateFieldsLastModifiedBy *string `json:"privateFieldsLastModifiedBy,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ParameterStorageParameter ParameterStorageParameter

// NewParameterStorageParameter instantiates a new ParameterStorageParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameterStorageParameter(id string, ownerId string, name string, publicFields map[string]interface{}) *ParameterStorageParameter {
	this := ParameterStorageParameter{}
	this.Id = id
	this.OwnerId = ownerId
	this.Name = name
	this.PublicFields = publicFields
	return &this
}

// NewParameterStorageParameterWithDefaults instantiates a new ParameterStorageParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameterStorageParameterWithDefaults() *ParameterStorageParameter {
	this := ParameterStorageParameter{}
	return &this
}

// GetId returns the Id field value
func (o *ParameterStorageParameter) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ParameterStorageParameter) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ParameterStorageParameter) SetId(v string) {
	o.Id = v
}

// GetOwnerId returns the OwnerId field value
func (o *ParameterStorageParameter) GetOwnerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value
// and a boolean to check if the value has been set.
func (o *ParameterStorageParameter) GetOwnerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerId, true
}

// SetOwnerId sets field value
func (o *ParameterStorageParameter) SetOwnerId(v string) {
	o.OwnerId = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ParameterStorageParameter) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterStorageParameter) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ParameterStorageParameter) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ParameterStorageParameter) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value
func (o *ParameterStorageParameter) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ParameterStorageParameter) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ParameterStorageParameter) SetName(v string) {
	o.Name = v
}

// GetPrimaryField returns the PrimaryField field value if set, zero value otherwise.
func (o *ParameterStorageParameter) GetPrimaryField() string {
	if o == nil || IsNil(o.PrimaryField) {
		var ret string
		return ret
	}
	return *o.PrimaryField
}

// GetPrimaryFieldOk returns a tuple with the PrimaryField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterStorageParameter) GetPrimaryFieldOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryField) {
		return nil, false
	}
	return o.PrimaryField, true
}

// HasPrimaryField returns a boolean if a field has been set.
func (o *ParameterStorageParameter) HasPrimaryField() bool {
	if o != nil && !IsNil(o.PrimaryField) {
		return true
	}

	return false
}

// SetPrimaryField gets a reference to the given string and assigns it to the PrimaryField field.
func (o *ParameterStorageParameter) SetPrimaryField(v string) {
	o.PrimaryField = &v
}

// GetPublicFields returns the PublicFields field value
func (o *ParameterStorageParameter) GetPublicFields() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.PublicFields
}

// GetPublicFieldsOk returns a tuple with the PublicFields field value
// and a boolean to check if the value has been set.
func (o *ParameterStorageParameter) GetPublicFieldsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.PublicFields, true
}

// SetPublicFields sets field value
func (o *ParameterStorageParameter) SetPublicFields(v map[string]interface{}) {
	o.PublicFields = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ParameterStorageParameter) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterStorageParameter) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ParameterStorageParameter) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ParameterStorageParameter) SetDescription(v string) {
	o.Description = &v
}

// GetLastModifiedAt returns the LastModifiedAt field value if set, zero value otherwise.
func (o *ParameterStorageParameter) GetLastModifiedAt() string {
	if o == nil || IsNil(o.LastModifiedAt) {
		var ret string
		return ret
	}
	return *o.LastModifiedAt
}

// GetLastModifiedAtOk returns a tuple with the LastModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterStorageParameter) GetLastModifiedAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedAt) {
		return nil, false
	}
	return o.LastModifiedAt, true
}

// HasLastModifiedAt returns a boolean if a field has been set.
func (o *ParameterStorageParameter) HasLastModifiedAt() bool {
	if o != nil && !IsNil(o.LastModifiedAt) {
		return true
	}

	return false
}

// SetLastModifiedAt gets a reference to the given string and assigns it to the LastModifiedAt field.
func (o *ParameterStorageParameter) SetLastModifiedAt(v string) {
	o.LastModifiedAt = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *ParameterStorageParameter) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterStorageParameter) GetLastModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedBy) {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *ParameterStorageParameter) HasLastModifiedBy() bool {
	if o != nil && !IsNil(o.LastModifiedBy) {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given string and assigns it to the LastModifiedBy field.
func (o *ParameterStorageParameter) SetLastModifiedBy(v string) {
	o.LastModifiedBy = &v
}

// GetPrivateFieldsLastModifiedAt returns the PrivateFieldsLastModifiedAt field value if set, zero value otherwise.
func (o *ParameterStorageParameter) GetPrivateFieldsLastModifiedAt() string {
	if o == nil || IsNil(o.PrivateFieldsLastModifiedAt) {
		var ret string
		return ret
	}
	return *o.PrivateFieldsLastModifiedAt
}

// GetPrivateFieldsLastModifiedAtOk returns a tuple with the PrivateFieldsLastModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterStorageParameter) GetPrivateFieldsLastModifiedAtOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateFieldsLastModifiedAt) {
		return nil, false
	}
	return o.PrivateFieldsLastModifiedAt, true
}

// HasPrivateFieldsLastModifiedAt returns a boolean if a field has been set.
func (o *ParameterStorageParameter) HasPrivateFieldsLastModifiedAt() bool {
	if o != nil && !IsNil(o.PrivateFieldsLastModifiedAt) {
		return true
	}

	return false
}

// SetPrivateFieldsLastModifiedAt gets a reference to the given string and assigns it to the PrivateFieldsLastModifiedAt field.
func (o *ParameterStorageParameter) SetPrivateFieldsLastModifiedAt(v string) {
	o.PrivateFieldsLastModifiedAt = &v
}

// GetPrivateFieldsLastModifiedBy returns the PrivateFieldsLastModifiedBy field value if set, zero value otherwise.
func (o *ParameterStorageParameter) GetPrivateFieldsLastModifiedBy() string {
	if o == nil || IsNil(o.PrivateFieldsLastModifiedBy) {
		var ret string
		return ret
	}
	return *o.PrivateFieldsLastModifiedBy
}

// GetPrivateFieldsLastModifiedByOk returns a tuple with the PrivateFieldsLastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterStorageParameter) GetPrivateFieldsLastModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateFieldsLastModifiedBy) {
		return nil, false
	}
	return o.PrivateFieldsLastModifiedBy, true
}

// HasPrivateFieldsLastModifiedBy returns a boolean if a field has been set.
func (o *ParameterStorageParameter) HasPrivateFieldsLastModifiedBy() bool {
	if o != nil && !IsNil(o.PrivateFieldsLastModifiedBy) {
		return true
	}

	return false
}

// SetPrivateFieldsLastModifiedBy gets a reference to the given string and assigns it to the PrivateFieldsLastModifiedBy field.
func (o *ParameterStorageParameter) SetPrivateFieldsLastModifiedBy(v string) {
	o.PrivateFieldsLastModifiedBy = &v
}

func (o ParameterStorageParameter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParameterStorageParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["ownerId"] = o.OwnerId
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.PrimaryField) {
		toSerialize["primaryField"] = o.PrimaryField
	}
	toSerialize["publicFields"] = o.PublicFields
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.LastModifiedAt) {
		toSerialize["lastModifiedAt"] = o.LastModifiedAt
	}
	if !IsNil(o.LastModifiedBy) {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if !IsNil(o.PrivateFieldsLastModifiedAt) {
		toSerialize["privateFieldsLastModifiedAt"] = o.PrivateFieldsLastModifiedAt
	}
	if !IsNil(o.PrivateFieldsLastModifiedBy) {
		toSerialize["privateFieldsLastModifiedBy"] = o.PrivateFieldsLastModifiedBy
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ParameterStorageParameter) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"ownerId",
		"name",
		"publicFields",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParameterStorageParameter := _ParameterStorageParameter{}

	err = json.Unmarshal(data, &varParameterStorageParameter)

	if err != nil {
		return err
	}

	*o = ParameterStorageParameter(varParameterStorageParameter)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "ownerId")
		delete(additionalProperties, "type")
		delete(additionalProperties, "name")
		delete(additionalProperties, "primaryField")
		delete(additionalProperties, "publicFields")
		delete(additionalProperties, "description")
		delete(additionalProperties, "lastModifiedAt")
		delete(additionalProperties, "lastModifiedBy")
		delete(additionalProperties, "privateFieldsLastModifiedAt")
		delete(additionalProperties, "privateFieldsLastModifiedBy")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableParameterStorageParameter struct {
	value *ParameterStorageParameter
	isSet bool
}

func (v NullableParameterStorageParameter) Get() *ParameterStorageParameter {
	return v.value
}

func (v *NullableParameterStorageParameter) Set(val *ParameterStorageParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableParameterStorageParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableParameterStorageParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameterStorageParameter(val *ParameterStorageParameter) *NullableParameterStorageParameter {
	return &NullableParameterStorageParameter{value: val, isSet: true}
}

func (v NullableParameterStorageParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameterStorageParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


