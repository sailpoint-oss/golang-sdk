/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the AccessRequestContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessRequestContext{}

// AccessRequestContext struct for AccessRequestContext
type AccessRequestContext struct {
	ContextAttributes []ContextAttributeDto `json:"contextAttributes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccessRequestContext AccessRequestContext

// NewAccessRequestContext instantiates a new AccessRequestContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessRequestContext() *AccessRequestContext {
	this := AccessRequestContext{}
	return &this
}

// NewAccessRequestContextWithDefaults instantiates a new AccessRequestContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessRequestContextWithDefaults() *AccessRequestContext {
	this := AccessRequestContext{}
	return &this
}

// GetContextAttributes returns the ContextAttributes field value if set, zero value otherwise.
func (o *AccessRequestContext) GetContextAttributes() []ContextAttributeDto {
	if o == nil || IsNil(o.ContextAttributes) {
		var ret []ContextAttributeDto
		return ret
	}
	return o.ContextAttributes
}

// GetContextAttributesOk returns a tuple with the ContextAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRequestContext) GetContextAttributesOk() ([]ContextAttributeDto, bool) {
	if o == nil || IsNil(o.ContextAttributes) {
		return nil, false
	}
	return o.ContextAttributes, true
}

// HasContextAttributes returns a boolean if a field has been set.
func (o *AccessRequestContext) HasContextAttributes() bool {
	if o != nil && !IsNil(o.ContextAttributes) {
		return true
	}

	return false
}

// SetContextAttributes gets a reference to the given []ContextAttributeDto and assigns it to the ContextAttributes field.
func (o *AccessRequestContext) SetContextAttributes(v []ContextAttributeDto) {
	o.ContextAttributes = v
}

func (o AccessRequestContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessRequestContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContextAttributes) {
		toSerialize["contextAttributes"] = o.ContextAttributes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccessRequestContext) UnmarshalJSON(data []byte) (err error) {
	varAccessRequestContext := _AccessRequestContext{}

	err = json.Unmarshal(data, &varAccessRequestContext)

	if err != nil {
		return err
	}

	*o = AccessRequestContext(varAccessRequestContext)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "contextAttributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccessRequestContext struct {
	value *AccessRequestContext
	isSet bool
}

func (v NullableAccessRequestContext) Get() *AccessRequestContext {
	return v.value
}

func (v *NullableAccessRequestContext) Set(val *AccessRequestContext) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessRequestContext) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessRequestContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessRequestContext(val *AccessRequestContext) *NullableAccessRequestContext {
	return &NullableAccessRequestContext{value: val, isSet: true}
}

func (v NullableAccessRequestContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessRequestContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


