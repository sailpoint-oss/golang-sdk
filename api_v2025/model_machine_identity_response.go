/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	
	"fmt"
)

// checks if the MachineIdentityResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineIdentityResponse{}

// MachineIdentityResponse struct for MachineIdentityResponse
type MachineIdentityResponse struct {
	// System-generated unique ID of the Object
	Id *string `json:"id,omitempty"`
	// Name of the Object
	Name NullableString `json:"name"`
	// Creation date of the Object
	Created *SailPointTime `json:"created,omitempty"`
	// Last modification date of the Object
	Modified *SailPointTime `json:"modified,omitempty"`
	// The business application that the identity represents
	BusinessApplication string `json:"businessApplication"`
	// Description of machine identity
	Description *string `json:"description,omitempty"`
	// A map of custom machine identity attributes
	Attributes map[string]interface{} `json:"attributes,omitempty"`
	// The subtype value associated to the machine identity
	Subtype string `json:"subtype"`
	Owners *MachineIdentityDtoOwners `json:"owners,omitempty"`
	// The source id associated to the machine identity
	SourceId *string `json:"sourceId,omitempty"`
	// The UUID associated to the machine identity directly aggregated from a source
	Uuid *string `json:"uuid,omitempty"`
	// The native identity associated to the machine identity directly aggregated from a source
	NativeIdentity *string `json:"nativeIdentity,omitempty"`
	// Indicates if the machine identity has been manually edited
	ManuallyEdited *bool `json:"manuallyEdited,omitempty"`
	// Indicates if the machine identity has been manually created
	ManuallyCreated *bool `json:"manuallyCreated,omitempty"`
	// The source of the machine identity
	Source map[string]interface{} `json:"source,omitempty"`
	// The dataset id associated to the source in which the identity was retrieved from
	DatasetId *string `json:"datasetId,omitempty"`
	// The user entitlements associated to the machine identity
	UserEntitlements []MachineIdentityResponseUserEntitlements `json:"userEntitlements,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MachineIdentityResponse MachineIdentityResponse

// NewMachineIdentityResponse instantiates a new MachineIdentityResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineIdentityResponse(name NullableString, businessApplication string, subtype string) *MachineIdentityResponse {
	this := MachineIdentityResponse{}
	this.Name = name
	this.BusinessApplication = businessApplication
	this.Subtype = subtype
	var manuallyEdited bool = false
	this.ManuallyEdited = &manuallyEdited
	var manuallyCreated bool = false
	this.ManuallyCreated = &manuallyCreated
	return &this
}

// NewMachineIdentityResponseWithDefaults instantiates a new MachineIdentityResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineIdentityResponseWithDefaults() *MachineIdentityResponse {
	this := MachineIdentityResponse{}
	var manuallyEdited bool = false
	this.ManuallyEdited = &manuallyEdited
	var manuallyCreated bool = false
	this.ManuallyCreated = &manuallyCreated
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MachineIdentityResponse) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MachineIdentityResponse) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineIdentityResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *MachineIdentityResponse) SetName(v string) {
	o.Name.Set(&v)
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetCreated() SailPointTime {
	if o == nil || IsNil(o.Created) {
		var ret SailPointTime
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetCreatedOk() (*SailPointTime, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given SailPointTime and assigns it to the Created field.
func (o *MachineIdentityResponse) SetCreated(v SailPointTime) {
	o.Created = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetModified() SailPointTime {
	if o == nil || IsNil(o.Modified) {
		var ret SailPointTime
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetModifiedOk() (*SailPointTime, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given SailPointTime and assigns it to the Modified field.
func (o *MachineIdentityResponse) SetModified(v SailPointTime) {
	o.Modified = &v
}

// GetBusinessApplication returns the BusinessApplication field value
func (o *MachineIdentityResponse) GetBusinessApplication() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BusinessApplication
}

// GetBusinessApplicationOk returns a tuple with the BusinessApplication field value
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetBusinessApplicationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BusinessApplication, true
}

// SetBusinessApplication sets field value
func (o *MachineIdentityResponse) SetBusinessApplication(v string) {
	o.BusinessApplication = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MachineIdentityResponse) SetDescription(v string) {
	o.Description = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetAttributes() map[string]interface{} {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attributes) {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *MachineIdentityResponse) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetSubtype returns the Subtype field value
func (o *MachineIdentityResponse) GetSubtype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetSubtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subtype, true
}

// SetSubtype sets field value
func (o *MachineIdentityResponse) SetSubtype(v string) {
	o.Subtype = v
}

// GetOwners returns the Owners field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetOwners() MachineIdentityDtoOwners {
	if o == nil || IsNil(o.Owners) {
		var ret MachineIdentityDtoOwners
		return ret
	}
	return *o.Owners
}

// GetOwnersOk returns a tuple with the Owners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetOwnersOk() (*MachineIdentityDtoOwners, bool) {
	if o == nil || IsNil(o.Owners) {
		return nil, false
	}
	return o.Owners, true
}

// HasOwners returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasOwners() bool {
	if o != nil && !IsNil(o.Owners) {
		return true
	}

	return false
}

// SetOwners gets a reference to the given MachineIdentityDtoOwners and assigns it to the Owners field.
func (o *MachineIdentityResponse) SetOwners(v MachineIdentityDtoOwners) {
	o.Owners = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetSourceId() string {
	if o == nil || IsNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *MachineIdentityResponse) SetSourceId(v string) {
	o.SourceId = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *MachineIdentityResponse) SetUuid(v string) {
	o.Uuid = &v
}

// GetNativeIdentity returns the NativeIdentity field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetNativeIdentity() string {
	if o == nil || IsNil(o.NativeIdentity) {
		var ret string
		return ret
	}
	return *o.NativeIdentity
}

// GetNativeIdentityOk returns a tuple with the NativeIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetNativeIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.NativeIdentity) {
		return nil, false
	}
	return o.NativeIdentity, true
}

// HasNativeIdentity returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasNativeIdentity() bool {
	if o != nil && !IsNil(o.NativeIdentity) {
		return true
	}

	return false
}

// SetNativeIdentity gets a reference to the given string and assigns it to the NativeIdentity field.
func (o *MachineIdentityResponse) SetNativeIdentity(v string) {
	o.NativeIdentity = &v
}

// GetManuallyEdited returns the ManuallyEdited field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetManuallyEdited() bool {
	if o == nil || IsNil(o.ManuallyEdited) {
		var ret bool
		return ret
	}
	return *o.ManuallyEdited
}

// GetManuallyEditedOk returns a tuple with the ManuallyEdited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetManuallyEditedOk() (*bool, bool) {
	if o == nil || IsNil(o.ManuallyEdited) {
		return nil, false
	}
	return o.ManuallyEdited, true
}

// HasManuallyEdited returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasManuallyEdited() bool {
	if o != nil && !IsNil(o.ManuallyEdited) {
		return true
	}

	return false
}

// SetManuallyEdited gets a reference to the given bool and assigns it to the ManuallyEdited field.
func (o *MachineIdentityResponse) SetManuallyEdited(v bool) {
	o.ManuallyEdited = &v
}

// GetManuallyCreated returns the ManuallyCreated field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetManuallyCreated() bool {
	if o == nil || IsNil(o.ManuallyCreated) {
		var ret bool
		return ret
	}
	return *o.ManuallyCreated
}

// GetManuallyCreatedOk returns a tuple with the ManuallyCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetManuallyCreatedOk() (*bool, bool) {
	if o == nil || IsNil(o.ManuallyCreated) {
		return nil, false
	}
	return o.ManuallyCreated, true
}

// HasManuallyCreated returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasManuallyCreated() bool {
	if o != nil && !IsNil(o.ManuallyCreated) {
		return true
	}

	return false
}

// SetManuallyCreated gets a reference to the given bool and assigns it to the ManuallyCreated field.
func (o *MachineIdentityResponse) SetManuallyCreated(v bool) {
	o.ManuallyCreated = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetSource() map[string]interface{} {
	if o == nil || IsNil(o.Source) {
		var ret map[string]interface{}
		return ret
	}
	return o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetSourceOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Source) {
		return map[string]interface{}{}, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given map[string]interface{} and assigns it to the Source field.
func (o *MachineIdentityResponse) SetSource(v map[string]interface{}) {
	o.Source = v
}

// GetDatasetId returns the DatasetId field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetDatasetId() string {
	if o == nil || IsNil(o.DatasetId) {
		var ret string
		return ret
	}
	return *o.DatasetId
}

// GetDatasetIdOk returns a tuple with the DatasetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetDatasetIdOk() (*string, bool) {
	if o == nil || IsNil(o.DatasetId) {
		return nil, false
	}
	return o.DatasetId, true
}

// HasDatasetId returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasDatasetId() bool {
	if o != nil && !IsNil(o.DatasetId) {
		return true
	}

	return false
}

// SetDatasetId gets a reference to the given string and assigns it to the DatasetId field.
func (o *MachineIdentityResponse) SetDatasetId(v string) {
	o.DatasetId = &v
}

// GetUserEntitlements returns the UserEntitlements field value if set, zero value otherwise.
func (o *MachineIdentityResponse) GetUserEntitlements() []MachineIdentityResponseUserEntitlements {
	if o == nil || IsNil(o.UserEntitlements) {
		var ret []MachineIdentityResponseUserEntitlements
		return ret
	}
	return o.UserEntitlements
}

// GetUserEntitlementsOk returns a tuple with the UserEntitlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineIdentityResponse) GetUserEntitlementsOk() ([]MachineIdentityResponseUserEntitlements, bool) {
	if o == nil || IsNil(o.UserEntitlements) {
		return nil, false
	}
	return o.UserEntitlements, true
}

// HasUserEntitlements returns a boolean if a field has been set.
func (o *MachineIdentityResponse) HasUserEntitlements() bool {
	if o != nil && !IsNil(o.UserEntitlements) {
		return true
	}

	return false
}

// SetUserEntitlements gets a reference to the given []MachineIdentityResponseUserEntitlements and assigns it to the UserEntitlements field.
func (o *MachineIdentityResponse) SetUserEntitlements(v []MachineIdentityResponseUserEntitlements) {
	o.UserEntitlements = v
}

func (o MachineIdentityResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineIdentityResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name.Get()
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	toSerialize["businessApplication"] = o.BusinessApplication
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	toSerialize["subtype"] = o.Subtype
	if !IsNil(o.Owners) {
		toSerialize["owners"] = o.Owners
	}
	if !IsNil(o.SourceId) {
		toSerialize["sourceId"] = o.SourceId
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.NativeIdentity) {
		toSerialize["nativeIdentity"] = o.NativeIdentity
	}
	if !IsNil(o.ManuallyEdited) {
		toSerialize["manuallyEdited"] = o.ManuallyEdited
	}
	if !IsNil(o.ManuallyCreated) {
		toSerialize["manuallyCreated"] = o.ManuallyCreated
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.DatasetId) {
		toSerialize["datasetId"] = o.DatasetId
	}
	if !IsNil(o.UserEntitlements) {
		toSerialize["userEntitlements"] = o.UserEntitlements
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MachineIdentityResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"businessApplication",
		"subtype",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMachineIdentityResponse := _MachineIdentityResponse{}

	err = json.Unmarshal(data, &varMachineIdentityResponse)

	if err != nil {
		return err
	}

	*o = MachineIdentityResponse(varMachineIdentityResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "created")
		delete(additionalProperties, "modified")
		delete(additionalProperties, "businessApplication")
		delete(additionalProperties, "description")
		delete(additionalProperties, "attributes")
		delete(additionalProperties, "subtype")
		delete(additionalProperties, "owners")
		delete(additionalProperties, "sourceId")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "nativeIdentity")
		delete(additionalProperties, "manuallyEdited")
		delete(additionalProperties, "manuallyCreated")
		delete(additionalProperties, "source")
		delete(additionalProperties, "datasetId")
		delete(additionalProperties, "userEntitlements")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMachineIdentityResponse struct {
	value *MachineIdentityResponse
	isSet bool
}

func (v NullableMachineIdentityResponse) Get() *MachineIdentityResponse {
	return v.value
}

func (v *NullableMachineIdentityResponse) Set(val *MachineIdentityResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineIdentityResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineIdentityResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineIdentityResponse(val *MachineIdentityResponse) *NullableMachineIdentityResponse {
	return &NullableMachineIdentityResponse{value: val, isSet: true}
}

func (v NullableMachineIdentityResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineIdentityResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


