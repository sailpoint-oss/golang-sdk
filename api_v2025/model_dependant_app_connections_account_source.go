/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the DependantAppConnectionsAccountSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DependantAppConnectionsAccountSource{}

// DependantAppConnectionsAccountSource The Account Source of the connected Application
type DependantAppConnectionsAccountSource struct {
	// Use this Account Source for password management
	UseForPasswordManagement *bool `json:"useForPasswordManagement,omitempty"`
	// A list of Password Policies for this Account Source
	PasswordPolicies []DependantAppConnectionsAccountSourcePasswordPoliciesInner `json:"passwordPolicies,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DependantAppConnectionsAccountSource DependantAppConnectionsAccountSource

// NewDependantAppConnectionsAccountSource instantiates a new DependantAppConnectionsAccountSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDependantAppConnectionsAccountSource() *DependantAppConnectionsAccountSource {
	this := DependantAppConnectionsAccountSource{}
	var useForPasswordManagement bool = false
	this.UseForPasswordManagement = &useForPasswordManagement
	return &this
}

// NewDependantAppConnectionsAccountSourceWithDefaults instantiates a new DependantAppConnectionsAccountSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDependantAppConnectionsAccountSourceWithDefaults() *DependantAppConnectionsAccountSource {
	this := DependantAppConnectionsAccountSource{}
	var useForPasswordManagement bool = false
	this.UseForPasswordManagement = &useForPasswordManagement
	return &this
}

// GetUseForPasswordManagement returns the UseForPasswordManagement field value if set, zero value otherwise.
func (o *DependantAppConnectionsAccountSource) GetUseForPasswordManagement() bool {
	if o == nil || IsNil(o.UseForPasswordManagement) {
		var ret bool
		return ret
	}
	return *o.UseForPasswordManagement
}

// GetUseForPasswordManagementOk returns a tuple with the UseForPasswordManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DependantAppConnectionsAccountSource) GetUseForPasswordManagementOk() (*bool, bool) {
	if o == nil || IsNil(o.UseForPasswordManagement) {
		return nil, false
	}
	return o.UseForPasswordManagement, true
}

// HasUseForPasswordManagement returns a boolean if a field has been set.
func (o *DependantAppConnectionsAccountSource) HasUseForPasswordManagement() bool {
	if o != nil && !IsNil(o.UseForPasswordManagement) {
		return true
	}

	return false
}

// SetUseForPasswordManagement gets a reference to the given bool and assigns it to the UseForPasswordManagement field.
func (o *DependantAppConnectionsAccountSource) SetUseForPasswordManagement(v bool) {
	o.UseForPasswordManagement = &v
}

// GetPasswordPolicies returns the PasswordPolicies field value if set, zero value otherwise.
func (o *DependantAppConnectionsAccountSource) GetPasswordPolicies() []DependantAppConnectionsAccountSourcePasswordPoliciesInner {
	if o == nil || IsNil(o.PasswordPolicies) {
		var ret []DependantAppConnectionsAccountSourcePasswordPoliciesInner
		return ret
	}
	return o.PasswordPolicies
}

// GetPasswordPoliciesOk returns a tuple with the PasswordPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DependantAppConnectionsAccountSource) GetPasswordPoliciesOk() ([]DependantAppConnectionsAccountSourcePasswordPoliciesInner, bool) {
	if o == nil || IsNil(o.PasswordPolicies) {
		return nil, false
	}
	return o.PasswordPolicies, true
}

// HasPasswordPolicies returns a boolean if a field has been set.
func (o *DependantAppConnectionsAccountSource) HasPasswordPolicies() bool {
	if o != nil && !IsNil(o.PasswordPolicies) {
		return true
	}

	return false
}

// SetPasswordPolicies gets a reference to the given []DependantAppConnectionsAccountSourcePasswordPoliciesInner and assigns it to the PasswordPolicies field.
func (o *DependantAppConnectionsAccountSource) SetPasswordPolicies(v []DependantAppConnectionsAccountSourcePasswordPoliciesInner) {
	o.PasswordPolicies = v
}

func (o DependantAppConnectionsAccountSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DependantAppConnectionsAccountSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UseForPasswordManagement) {
		toSerialize["useForPasswordManagement"] = o.UseForPasswordManagement
	}
	if !IsNil(o.PasswordPolicies) {
		toSerialize["passwordPolicies"] = o.PasswordPolicies
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DependantAppConnectionsAccountSource) UnmarshalJSON(data []byte) (err error) {
	varDependantAppConnectionsAccountSource := _DependantAppConnectionsAccountSource{}

	err = json.Unmarshal(data, &varDependantAppConnectionsAccountSource)

	if err != nil {
		return err
	}

	*o = DependantAppConnectionsAccountSource(varDependantAppConnectionsAccountSource)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "useForPasswordManagement")
		delete(additionalProperties, "passwordPolicies")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDependantAppConnectionsAccountSource struct {
	value *DependantAppConnectionsAccountSource
	isSet bool
}

func (v NullableDependantAppConnectionsAccountSource) Get() *DependantAppConnectionsAccountSource {
	return v.value
}

func (v *NullableDependantAppConnectionsAccountSource) Set(val *DependantAppConnectionsAccountSource) {
	v.value = val
	v.isSet = true
}

func (v NullableDependantAppConnectionsAccountSource) IsSet() bool {
	return v.isSet
}

func (v *NullableDependantAppConnectionsAccountSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDependantAppConnectionsAccountSource(val *DependantAppConnectionsAccountSource) *NullableDependantAppConnectionsAccountSource {
	return &NullableDependantAppConnectionsAccountSource{value: val, isSet: true}
}

func (v NullableDependantAppConnectionsAccountSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDependantAppConnectionsAccountSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


