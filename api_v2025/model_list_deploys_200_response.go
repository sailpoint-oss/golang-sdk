/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the ListDeploys200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDeploys200Response{}

// ListDeploys200Response struct for ListDeploys200Response
type ListDeploys200Response struct {
	// list of deployments
	Items []DeployResponse `json:"items,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListDeploys200Response ListDeploys200Response

// NewListDeploys200Response instantiates a new ListDeploys200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDeploys200Response() *ListDeploys200Response {
	this := ListDeploys200Response{}
	return &this
}

// NewListDeploys200ResponseWithDefaults instantiates a new ListDeploys200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDeploys200ResponseWithDefaults() *ListDeploys200Response {
	this := ListDeploys200Response{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ListDeploys200Response) GetItems() []DeployResponse {
	if o == nil || IsNil(o.Items) {
		var ret []DeployResponse
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListDeploys200Response) GetItemsOk() ([]DeployResponse, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ListDeploys200Response) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []DeployResponse and assigns it to the Items field.
func (o *ListDeploys200Response) SetItems(v []DeployResponse) {
	o.Items = v
}

func (o ListDeploys200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDeploys200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListDeploys200Response) UnmarshalJSON(data []byte) (err error) {
	varListDeploys200Response := _ListDeploys200Response{}

	err = json.Unmarshal(data, &varListDeploys200Response)

	if err != nil {
		return err
	}

	*o = ListDeploys200Response(varListDeploys200Response)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "items")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListDeploys200Response struct {
	value *ListDeploys200Response
	isSet bool
}

func (v NullableListDeploys200Response) Get() *ListDeploys200Response {
	return v.value
}

func (v *NullableListDeploys200Response) Set(val *ListDeploys200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListDeploys200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListDeploys200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDeploys200Response(val *ListDeploys200Response) *NullableListDeploys200Response {
	return &NullableListDeploys200Response{value: val, isSet: true}
}

func (v NullableListDeploys200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDeploys200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


