/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the RoleListFilterDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleListFilterDTO{}

// RoleListFilterDTO AMMFilterValues
type RoleListFilterDTO struct {
	// Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results) Filtering is supported for the following fields and operators:  **id**: *eq, in*  **name**: *eq, sw*  **created**: *gt, lt, ge, le*  **modified**: *gt, lt, ge, le*  **owner.id**: *eq, in*  **requestable**: *eq*
	Filters NullableString `json:"filters,omitempty"`
	AmmKeyValues []RoleListFilterDTOAmmKeyValuesInner `json:"ammKeyValues,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RoleListFilterDTO RoleListFilterDTO

// NewRoleListFilterDTO instantiates a new RoleListFilterDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleListFilterDTO() *RoleListFilterDTO {
	this := RoleListFilterDTO{}
	return &this
}

// NewRoleListFilterDTOWithDefaults instantiates a new RoleListFilterDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleListFilterDTOWithDefaults() *RoleListFilterDTO {
	this := RoleListFilterDTO{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleListFilterDTO) GetFilters() string {
	if o == nil || IsNil(o.Filters.Get()) {
		var ret string
		return ret
	}
	return *o.Filters.Get()
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleListFilterDTO) GetFiltersOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Filters.Get(), o.Filters.IsSet()
}

// HasFilters returns a boolean if a field has been set.
func (o *RoleListFilterDTO) HasFilters() bool {
	if o != nil && o.Filters.IsSet() {
		return true
	}

	return false
}

// SetFilters gets a reference to the given NullableString and assigns it to the Filters field.
func (o *RoleListFilterDTO) SetFilters(v string) {
	o.Filters.Set(&v)
}
// SetFiltersNil sets the value for Filters to be an explicit nil
func (o *RoleListFilterDTO) SetFiltersNil() {
	o.Filters.Set(nil)
}

// UnsetFilters ensures that no value is present for Filters, not even an explicit nil
func (o *RoleListFilterDTO) UnsetFilters() {
	o.Filters.Unset()
}

// GetAmmKeyValues returns the AmmKeyValues field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleListFilterDTO) GetAmmKeyValues() []RoleListFilterDTOAmmKeyValuesInner {
	if o == nil {
		var ret []RoleListFilterDTOAmmKeyValuesInner
		return ret
	}
	return o.AmmKeyValues
}

// GetAmmKeyValuesOk returns a tuple with the AmmKeyValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleListFilterDTO) GetAmmKeyValuesOk() ([]RoleListFilterDTOAmmKeyValuesInner, bool) {
	if o == nil || IsNil(o.AmmKeyValues) {
		return nil, false
	}
	return o.AmmKeyValues, true
}

// HasAmmKeyValues returns a boolean if a field has been set.
func (o *RoleListFilterDTO) HasAmmKeyValues() bool {
	if o != nil && !IsNil(o.AmmKeyValues) {
		return true
	}

	return false
}

// SetAmmKeyValues gets a reference to the given []RoleListFilterDTOAmmKeyValuesInner and assigns it to the AmmKeyValues field.
func (o *RoleListFilterDTO) SetAmmKeyValues(v []RoleListFilterDTOAmmKeyValuesInner) {
	o.AmmKeyValues = v
}

func (o RoleListFilterDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleListFilterDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Filters.IsSet() {
		toSerialize["filters"] = o.Filters.Get()
	}
	if o.AmmKeyValues != nil {
		toSerialize["ammKeyValues"] = o.AmmKeyValues
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RoleListFilterDTO) UnmarshalJSON(data []byte) (err error) {
	varRoleListFilterDTO := _RoleListFilterDTO{}

	err = json.Unmarshal(data, &varRoleListFilterDTO)

	if err != nil {
		return err
	}

	*o = RoleListFilterDTO(varRoleListFilterDTO)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "filters")
		delete(additionalProperties, "ammKeyValues")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRoleListFilterDTO struct {
	value *RoleListFilterDTO
	isSet bool
}

func (v NullableRoleListFilterDTO) Get() *RoleListFilterDTO {
	return v.value
}

func (v *NullableRoleListFilterDTO) Set(val *RoleListFilterDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleListFilterDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleListFilterDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleListFilterDTO(val *RoleListFilterDTO) *NullableRoleListFilterDTO {
	return &NullableRoleListFilterDTO{value: val, isSet: true}
}

func (v NullableRoleListFilterDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleListFilterDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


