/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	
)

// checks if the MachineClassificationConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MachineClassificationConfig{}

// MachineClassificationConfig struct for MachineClassificationConfig
type MachineClassificationConfig struct {
	// Indicates whether Classification is enabled for a Source
	Enabled *bool `json:"enabled,omitempty"`
	// Classification Method
	ClassificationMethod *string `json:"classificationMethod,omitempty"`
	Criteria *MachineClassificationCriteriaLevel1 `json:"criteria,omitempty"`
	// Date the config was created
	Created *SailPointTime `json:"created,omitempty"`
	// Date the config was last updated
	Modified NullableTime `json:"modified,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MachineClassificationConfig MachineClassificationConfig

// NewMachineClassificationConfig instantiates a new MachineClassificationConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineClassificationConfig() *MachineClassificationConfig {
	this := MachineClassificationConfig{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// NewMachineClassificationConfigWithDefaults instantiates a new MachineClassificationConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineClassificationConfigWithDefaults() *MachineClassificationConfig {
	this := MachineClassificationConfig{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *MachineClassificationConfig) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineClassificationConfig) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *MachineClassificationConfig) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *MachineClassificationConfig) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetClassificationMethod returns the ClassificationMethod field value if set, zero value otherwise.
func (o *MachineClassificationConfig) GetClassificationMethod() string {
	if o == nil || IsNil(o.ClassificationMethod) {
		var ret string
		return ret
	}
	return *o.ClassificationMethod
}

// GetClassificationMethodOk returns a tuple with the ClassificationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineClassificationConfig) GetClassificationMethodOk() (*string, bool) {
	if o == nil || IsNil(o.ClassificationMethod) {
		return nil, false
	}
	return o.ClassificationMethod, true
}

// HasClassificationMethod returns a boolean if a field has been set.
func (o *MachineClassificationConfig) HasClassificationMethod() bool {
	if o != nil && !IsNil(o.ClassificationMethod) {
		return true
	}

	return false
}

// SetClassificationMethod gets a reference to the given string and assigns it to the ClassificationMethod field.
func (o *MachineClassificationConfig) SetClassificationMethod(v string) {
	o.ClassificationMethod = &v
}

// GetCriteria returns the Criteria field value if set, zero value otherwise.
func (o *MachineClassificationConfig) GetCriteria() MachineClassificationCriteriaLevel1 {
	if o == nil || IsNil(o.Criteria) {
		var ret MachineClassificationCriteriaLevel1
		return ret
	}
	return *o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineClassificationConfig) GetCriteriaOk() (*MachineClassificationCriteriaLevel1, bool) {
	if o == nil || IsNil(o.Criteria) {
		return nil, false
	}
	return o.Criteria, true
}

// HasCriteria returns a boolean if a field has been set.
func (o *MachineClassificationConfig) HasCriteria() bool {
	if o != nil && !IsNil(o.Criteria) {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given MachineClassificationCriteriaLevel1 and assigns it to the Criteria field.
func (o *MachineClassificationConfig) SetCriteria(v MachineClassificationCriteriaLevel1) {
	o.Criteria = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *MachineClassificationConfig) GetCreated() SailPointTime {
	if o == nil || IsNil(o.Created) {
		var ret SailPointTime
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MachineClassificationConfig) GetCreatedOk() (*SailPointTime, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *MachineClassificationConfig) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given SailPointTime and assigns it to the Created field.
func (o *MachineClassificationConfig) SetCreated(v SailPointTime) {
	o.Created = &v
}

// GetModified returns the Modified field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MachineClassificationConfig) GetModified() SailPointTime {
	if o == nil || IsNil(o.Modified.Get()) {
		var ret SailPointTime
		return ret
	}
	return *o.Modified.Get()
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MachineClassificationConfig) GetModifiedOk() (*SailPointTime, bool) {
	if o == nil {
		return nil, false
	}
	return o.Modified.Get(), o.Modified.IsSet()
}

// HasModified returns a boolean if a field has been set.
func (o *MachineClassificationConfig) HasModified() bool {
	if o != nil && o.Modified.IsSet() {
		return true
	}

	return false
}

// SetModified gets a reference to the given NullableTime and assigns it to the Modified field.
func (o *MachineClassificationConfig) SetModified(v SailPointTime) {
	o.Modified.Set(&v)
}
// SetModifiedNil sets the value for Modified to be an explicit nil
func (o *MachineClassificationConfig) SetModifiedNil() {
	o.Modified.Set(nil)
}

// UnsetModified ensures that no value is present for Modified, not even an explicit nil
func (o *MachineClassificationConfig) UnsetModified() {
	o.Modified.Unset()
}

func (o MachineClassificationConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MachineClassificationConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.ClassificationMethod) {
		toSerialize["classificationMethod"] = o.ClassificationMethod
	}
	if !IsNil(o.Criteria) {
		toSerialize["criteria"] = o.Criteria
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if o.Modified.IsSet() {
		toSerialize["modified"] = o.Modified.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MachineClassificationConfig) UnmarshalJSON(data []byte) (err error) {
	varMachineClassificationConfig := _MachineClassificationConfig{}

	err = json.Unmarshal(data, &varMachineClassificationConfig)

	if err != nil {
		return err
	}

	*o = MachineClassificationConfig(varMachineClassificationConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "classificationMethod")
		delete(additionalProperties, "criteria")
		delete(additionalProperties, "created")
		delete(additionalProperties, "modified")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMachineClassificationConfig struct {
	value *MachineClassificationConfig
	isSet bool
}

func (v NullableMachineClassificationConfig) Get() *MachineClassificationConfig {
	return v.value
}

func (v *NullableMachineClassificationConfig) Set(val *MachineClassificationConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineClassificationConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineClassificationConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineClassificationConfig(val *MachineClassificationConfig) *NullableMachineClassificationConfig {
	return &NullableMachineClassificationConfig{value: val, isSet: true}
}

func (v NullableMachineClassificationConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineClassificationConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


