/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the SummaryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SummaryResponse{}

// SummaryResponse struct for SummaryResponse
type SummaryResponse struct {
	// The endpoint of a SailPoint API
	RequestedUri *string `json:"RequestedUri,omitempty"`
	// Number of calls made to a specific SailPoint API
	NumberOfCalls *int64 `json:"NumberOfCalls,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SummaryResponse SummaryResponse

// NewSummaryResponse instantiates a new SummaryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSummaryResponse() *SummaryResponse {
	this := SummaryResponse{}
	return &this
}

// NewSummaryResponseWithDefaults instantiates a new SummaryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSummaryResponseWithDefaults() *SummaryResponse {
	this := SummaryResponse{}
	return &this
}

// GetRequestedUri returns the RequestedUri field value if set, zero value otherwise.
func (o *SummaryResponse) GetRequestedUri() string {
	if o == nil || IsNil(o.RequestedUri) {
		var ret string
		return ret
	}
	return *o.RequestedUri
}

// GetRequestedUriOk returns a tuple with the RequestedUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryResponse) GetRequestedUriOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedUri) {
		return nil, false
	}
	return o.RequestedUri, true
}

// HasRequestedUri returns a boolean if a field has been set.
func (o *SummaryResponse) HasRequestedUri() bool {
	if o != nil && !IsNil(o.RequestedUri) {
		return true
	}

	return false
}

// SetRequestedUri gets a reference to the given string and assigns it to the RequestedUri field.
func (o *SummaryResponse) SetRequestedUri(v string) {
	o.RequestedUri = &v
}

// GetNumberOfCalls returns the NumberOfCalls field value if set, zero value otherwise.
func (o *SummaryResponse) GetNumberOfCalls() int64 {
	if o == nil || IsNil(o.NumberOfCalls) {
		var ret int64
		return ret
	}
	return *o.NumberOfCalls
}

// GetNumberOfCallsOk returns a tuple with the NumberOfCalls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SummaryResponse) GetNumberOfCallsOk() (*int64, bool) {
	if o == nil || IsNil(o.NumberOfCalls) {
		return nil, false
	}
	return o.NumberOfCalls, true
}

// HasNumberOfCalls returns a boolean if a field has been set.
func (o *SummaryResponse) HasNumberOfCalls() bool {
	if o != nil && !IsNil(o.NumberOfCalls) {
		return true
	}

	return false
}

// SetNumberOfCalls gets a reference to the given int64 and assigns it to the NumberOfCalls field.
func (o *SummaryResponse) SetNumberOfCalls(v int64) {
	o.NumberOfCalls = &v
}

func (o SummaryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SummaryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestedUri) {
		toSerialize["RequestedUri"] = o.RequestedUri
	}
	if !IsNil(o.NumberOfCalls) {
		toSerialize["NumberOfCalls"] = o.NumberOfCalls
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SummaryResponse) UnmarshalJSON(data []byte) (err error) {
	varSummaryResponse := _SummaryResponse{}

	err = json.Unmarshal(data, &varSummaryResponse)

	if err != nil {
		return err
	}

	*o = SummaryResponse(varSummaryResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "RequestedUri")
		delete(additionalProperties, "NumberOfCalls")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSummaryResponse struct {
	value *SummaryResponse
	isSet bool
}

func (v NullableSummaryResponse) Get() *SummaryResponse {
	return v.value
}

func (v *NullableSummaryResponse) Set(val *SummaryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSummaryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSummaryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSummaryResponse(val *SummaryResponse) *NullableSummaryResponse {
	return &NullableSummaryResponse{value: val, isSet: true}
}

func (v NullableSummaryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSummaryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


