/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
	
)

// checks if the ConnectorCustomizersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectorCustomizersResponse{}

// ConnectorCustomizersResponse struct for ConnectorCustomizersResponse
type ConnectorCustomizersResponse struct {
	// Connector customizer ID.
	Id *string `json:"id,omitempty"`
	// Connector customizer name.
	Name *string `json:"name,omitempty"`
	// Connector customizer image version.
	ImageVersion *int64 `json:"imageVersion,omitempty"`
	// Connector customizer image id.
	ImageID *string `json:"imageID,omitempty"`
	// Connector customizer tenant id.
	TenantID *string `json:"tenantID,omitempty"`
	// Date-time when the connector customizer was created
	Created *SailPointTime `json:"created,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConnectorCustomizersResponse ConnectorCustomizersResponse

// NewConnectorCustomizersResponse instantiates a new ConnectorCustomizersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorCustomizersResponse() *ConnectorCustomizersResponse {
	this := ConnectorCustomizersResponse{}
	return &this
}

// NewConnectorCustomizersResponseWithDefaults instantiates a new ConnectorCustomizersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorCustomizersResponseWithDefaults() *ConnectorCustomizersResponse {
	this := ConnectorCustomizersResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ConnectorCustomizersResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorCustomizersResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ConnectorCustomizersResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ConnectorCustomizersResponse) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConnectorCustomizersResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorCustomizersResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConnectorCustomizersResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConnectorCustomizersResponse) SetName(v string) {
	o.Name = &v
}

// GetImageVersion returns the ImageVersion field value if set, zero value otherwise.
func (o *ConnectorCustomizersResponse) GetImageVersion() int64 {
	if o == nil || IsNil(o.ImageVersion) {
		var ret int64
		return ret
	}
	return *o.ImageVersion
}

// GetImageVersionOk returns a tuple with the ImageVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorCustomizersResponse) GetImageVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.ImageVersion) {
		return nil, false
	}
	return o.ImageVersion, true
}

// HasImageVersion returns a boolean if a field has been set.
func (o *ConnectorCustomizersResponse) HasImageVersion() bool {
	if o != nil && !IsNil(o.ImageVersion) {
		return true
	}

	return false
}

// SetImageVersion gets a reference to the given int64 and assigns it to the ImageVersion field.
func (o *ConnectorCustomizersResponse) SetImageVersion(v int64) {
	o.ImageVersion = &v
}

// GetImageID returns the ImageID field value if set, zero value otherwise.
func (o *ConnectorCustomizersResponse) GetImageID() string {
	if o == nil || IsNil(o.ImageID) {
		var ret string
		return ret
	}
	return *o.ImageID
}

// GetImageIDOk returns a tuple with the ImageID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorCustomizersResponse) GetImageIDOk() (*string, bool) {
	if o == nil || IsNil(o.ImageID) {
		return nil, false
	}
	return o.ImageID, true
}

// HasImageID returns a boolean if a field has been set.
func (o *ConnectorCustomizersResponse) HasImageID() bool {
	if o != nil && !IsNil(o.ImageID) {
		return true
	}

	return false
}

// SetImageID gets a reference to the given string and assigns it to the ImageID field.
func (o *ConnectorCustomizersResponse) SetImageID(v string) {
	o.ImageID = &v
}

// GetTenantID returns the TenantID field value if set, zero value otherwise.
func (o *ConnectorCustomizersResponse) GetTenantID() string {
	if o == nil || IsNil(o.TenantID) {
		var ret string
		return ret
	}
	return *o.TenantID
}

// GetTenantIDOk returns a tuple with the TenantID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorCustomizersResponse) GetTenantIDOk() (*string, bool) {
	if o == nil || IsNil(o.TenantID) {
		return nil, false
	}
	return o.TenantID, true
}

// HasTenantID returns a boolean if a field has been set.
func (o *ConnectorCustomizersResponse) HasTenantID() bool {
	if o != nil && !IsNil(o.TenantID) {
		return true
	}

	return false
}

// SetTenantID gets a reference to the given string and assigns it to the TenantID field.
func (o *ConnectorCustomizersResponse) SetTenantID(v string) {
	o.TenantID = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ConnectorCustomizersResponse) GetCreated() SailPointTime {
	if o == nil || IsNil(o.Created) {
		var ret SailPointTime
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorCustomizersResponse) GetCreatedOk() (*SailPointTime, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ConnectorCustomizersResponse) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given SailPointTime and assigns it to the Created field.
func (o *ConnectorCustomizersResponse) SetCreated(v SailPointTime) {
	o.Created = &v
}

func (o ConnectorCustomizersResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectorCustomizersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ImageVersion) {
		toSerialize["imageVersion"] = o.ImageVersion
	}
	if !IsNil(o.ImageID) {
		toSerialize["imageID"] = o.ImageID
	}
	if !IsNil(o.TenantID) {
		toSerialize["tenantID"] = o.TenantID
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConnectorCustomizersResponse) UnmarshalJSON(data []byte) (err error) {
	varConnectorCustomizersResponse := _ConnectorCustomizersResponse{}

	err = json.Unmarshal(data, &varConnectorCustomizersResponse)

	if err != nil {
		return err
	}

	*o = ConnectorCustomizersResponse(varConnectorCustomizersResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "imageVersion")
		delete(additionalProperties, "imageID")
		delete(additionalProperties, "tenantID")
		delete(additionalProperties, "created")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConnectorCustomizersResponse struct {
	value *ConnectorCustomizersResponse
	isSet bool
}

func (v NullableConnectorCustomizersResponse) Get() *ConnectorCustomizersResponse {
	return v.value
}

func (v *NullableConnectorCustomizersResponse) Set(val *ConnectorCustomizersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorCustomizersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorCustomizersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorCustomizersResponse(val *ConnectorCustomizersResponse) *NullableConnectorCustomizersResponse {
	return &NullableConnectorCustomizersResponse{value: val, isSet: true}
}

func (v NullableConnectorCustomizersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorCustomizersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


