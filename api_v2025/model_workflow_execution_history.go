/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the WorkflowExecutionHistory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowExecutionHistory{}

// WorkflowExecutionHistory struct for WorkflowExecutionHistory
type WorkflowExecutionHistory struct {
	// The workflow definition for the workflow execution
	Definition map[string]interface{} `json:"definition,omitempty"`
	// List of workflow execution events for the given workflow execution
	History map[string]interface{} `json:"history,omitempty"`
	// The trigger that initiated the workflow execution
	Trigger map[string]interface{} `json:"trigger,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WorkflowExecutionHistory WorkflowExecutionHistory

// NewWorkflowExecutionHistory instantiates a new WorkflowExecutionHistory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowExecutionHistory() *WorkflowExecutionHistory {
	this := WorkflowExecutionHistory{}
	return &this
}

// NewWorkflowExecutionHistoryWithDefaults instantiates a new WorkflowExecutionHistory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowExecutionHistoryWithDefaults() *WorkflowExecutionHistory {
	this := WorkflowExecutionHistory{}
	return &this
}

// GetDefinition returns the Definition field value if set, zero value otherwise.
func (o *WorkflowExecutionHistory) GetDefinition() map[string]interface{} {
	if o == nil || IsNil(o.Definition) {
		var ret map[string]interface{}
		return ret
	}
	return o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowExecutionHistory) GetDefinitionOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Definition) {
		return map[string]interface{}{}, false
	}
	return o.Definition, true
}

// HasDefinition returns a boolean if a field has been set.
func (o *WorkflowExecutionHistory) HasDefinition() bool {
	if o != nil && !IsNil(o.Definition) {
		return true
	}

	return false
}

// SetDefinition gets a reference to the given map[string]interface{} and assigns it to the Definition field.
func (o *WorkflowExecutionHistory) SetDefinition(v map[string]interface{}) {
	o.Definition = v
}

// GetHistory returns the History field value if set, zero value otherwise.
func (o *WorkflowExecutionHistory) GetHistory() map[string]interface{} {
	if o == nil || IsNil(o.History) {
		var ret map[string]interface{}
		return ret
	}
	return o.History
}

// GetHistoryOk returns a tuple with the History field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowExecutionHistory) GetHistoryOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.History) {
		return map[string]interface{}{}, false
	}
	return o.History, true
}

// HasHistory returns a boolean if a field has been set.
func (o *WorkflowExecutionHistory) HasHistory() bool {
	if o != nil && !IsNil(o.History) {
		return true
	}

	return false
}

// SetHistory gets a reference to the given map[string]interface{} and assigns it to the History field.
func (o *WorkflowExecutionHistory) SetHistory(v map[string]interface{}) {
	o.History = v
}

// GetTrigger returns the Trigger field value if set, zero value otherwise.
func (o *WorkflowExecutionHistory) GetTrigger() map[string]interface{} {
	if o == nil || IsNil(o.Trigger) {
		var ret map[string]interface{}
		return ret
	}
	return o.Trigger
}

// GetTriggerOk returns a tuple with the Trigger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowExecutionHistory) GetTriggerOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Trigger) {
		return map[string]interface{}{}, false
	}
	return o.Trigger, true
}

// HasTrigger returns a boolean if a field has been set.
func (o *WorkflowExecutionHistory) HasTrigger() bool {
	if o != nil && !IsNil(o.Trigger) {
		return true
	}

	return false
}

// SetTrigger gets a reference to the given map[string]interface{} and assigns it to the Trigger field.
func (o *WorkflowExecutionHistory) SetTrigger(v map[string]interface{}) {
	o.Trigger = v
}

func (o WorkflowExecutionHistory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowExecutionHistory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Definition) {
		toSerialize["definition"] = o.Definition
	}
	if !IsNil(o.History) {
		toSerialize["history"] = o.History
	}
	if !IsNil(o.Trigger) {
		toSerialize["trigger"] = o.Trigger
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WorkflowExecutionHistory) UnmarshalJSON(data []byte) (err error) {
	varWorkflowExecutionHistory := _WorkflowExecutionHistory{}

	err = json.Unmarshal(data, &varWorkflowExecutionHistory)

	if err != nil {
		return err
	}

	*o = WorkflowExecutionHistory(varWorkflowExecutionHistory)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "definition")
		delete(additionalProperties, "history")
		delete(additionalProperties, "trigger")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWorkflowExecutionHistory struct {
	value *WorkflowExecutionHistory
	isSet bool
}

func (v NullableWorkflowExecutionHistory) Get() *WorkflowExecutionHistory {
	return v.value
}

func (v *NullableWorkflowExecutionHistory) Set(val *WorkflowExecutionHistory) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowExecutionHistory) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowExecutionHistory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowExecutionHistory(val *WorkflowExecutionHistory) *NullableWorkflowExecutionHistory {
	return &NullableWorkflowExecutionHistory{value: val, isSet: true}
}

func (v NullableWorkflowExecutionHistory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowExecutionHistory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


