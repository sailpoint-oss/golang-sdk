/*
Identity Security Cloud V2025 API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: v2025
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2025

import (
	"encoding/json"
)

// checks if the EntitlementAttributeBulkUpdateIdsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitlementAttributeBulkUpdateIdsRequest{}

// EntitlementAttributeBulkUpdateIdsRequest struct for EntitlementAttributeBulkUpdateIdsRequest
type EntitlementAttributeBulkUpdateIdsRequest struct {
	// List of entitlement IDs to update.
	Entitlements []string `json:"entitlements,omitempty"`
	// Operation to perform on the attributes in the bulk update request.
	Operation *string `json:"operation,omitempty"`
	// The choice of update scope.
	ReplaceScope *string `json:"replaceScope,omitempty"`
	// The metadata to be updated, including attribute and values.
	Values []RoleMetadataBulkUpdateByIdRequestValuesInner `json:"values,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EntitlementAttributeBulkUpdateIdsRequest EntitlementAttributeBulkUpdateIdsRequest

// NewEntitlementAttributeBulkUpdateIdsRequest instantiates a new EntitlementAttributeBulkUpdateIdsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitlementAttributeBulkUpdateIdsRequest() *EntitlementAttributeBulkUpdateIdsRequest {
	this := EntitlementAttributeBulkUpdateIdsRequest{}
	return &this
}

// NewEntitlementAttributeBulkUpdateIdsRequestWithDefaults instantiates a new EntitlementAttributeBulkUpdateIdsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitlementAttributeBulkUpdateIdsRequestWithDefaults() *EntitlementAttributeBulkUpdateIdsRequest {
	this := EntitlementAttributeBulkUpdateIdsRequest{}
	return &this
}

// GetEntitlements returns the Entitlements field value if set, zero value otherwise.
func (o *EntitlementAttributeBulkUpdateIdsRequest) GetEntitlements() []string {
	if o == nil || IsNil(o.Entitlements) {
		var ret []string
		return ret
	}
	return o.Entitlements
}

// GetEntitlementsOk returns a tuple with the Entitlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementAttributeBulkUpdateIdsRequest) GetEntitlementsOk() ([]string, bool) {
	if o == nil || IsNil(o.Entitlements) {
		return nil, false
	}
	return o.Entitlements, true
}

// HasEntitlements returns a boolean if a field has been set.
func (o *EntitlementAttributeBulkUpdateIdsRequest) HasEntitlements() bool {
	if o != nil && !IsNil(o.Entitlements) {
		return true
	}

	return false
}

// SetEntitlements gets a reference to the given []string and assigns it to the Entitlements field.
func (o *EntitlementAttributeBulkUpdateIdsRequest) SetEntitlements(v []string) {
	o.Entitlements = v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *EntitlementAttributeBulkUpdateIdsRequest) GetOperation() string {
	if o == nil || IsNil(o.Operation) {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementAttributeBulkUpdateIdsRequest) GetOperationOk() (*string, bool) {
	if o == nil || IsNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *EntitlementAttributeBulkUpdateIdsRequest) HasOperation() bool {
	if o != nil && !IsNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *EntitlementAttributeBulkUpdateIdsRequest) SetOperation(v string) {
	o.Operation = &v
}

// GetReplaceScope returns the ReplaceScope field value if set, zero value otherwise.
func (o *EntitlementAttributeBulkUpdateIdsRequest) GetReplaceScope() string {
	if o == nil || IsNil(o.ReplaceScope) {
		var ret string
		return ret
	}
	return *o.ReplaceScope
}

// GetReplaceScopeOk returns a tuple with the ReplaceScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementAttributeBulkUpdateIdsRequest) GetReplaceScopeOk() (*string, bool) {
	if o == nil || IsNil(o.ReplaceScope) {
		return nil, false
	}
	return o.ReplaceScope, true
}

// HasReplaceScope returns a boolean if a field has been set.
func (o *EntitlementAttributeBulkUpdateIdsRequest) HasReplaceScope() bool {
	if o != nil && !IsNil(o.ReplaceScope) {
		return true
	}

	return false
}

// SetReplaceScope gets a reference to the given string and assigns it to the ReplaceScope field.
func (o *EntitlementAttributeBulkUpdateIdsRequest) SetReplaceScope(v string) {
	o.ReplaceScope = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *EntitlementAttributeBulkUpdateIdsRequest) GetValues() []RoleMetadataBulkUpdateByIdRequestValuesInner {
	if o == nil || IsNil(o.Values) {
		var ret []RoleMetadataBulkUpdateByIdRequestValuesInner
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementAttributeBulkUpdateIdsRequest) GetValuesOk() ([]RoleMetadataBulkUpdateByIdRequestValuesInner, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *EntitlementAttributeBulkUpdateIdsRequest) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []RoleMetadataBulkUpdateByIdRequestValuesInner and assigns it to the Values field.
func (o *EntitlementAttributeBulkUpdateIdsRequest) SetValues(v []RoleMetadataBulkUpdateByIdRequestValuesInner) {
	o.Values = v
}

func (o EntitlementAttributeBulkUpdateIdsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitlementAttributeBulkUpdateIdsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entitlements) {
		toSerialize["entitlements"] = o.Entitlements
	}
	if !IsNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	if !IsNil(o.ReplaceScope) {
		toSerialize["replaceScope"] = o.ReplaceScope
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EntitlementAttributeBulkUpdateIdsRequest) UnmarshalJSON(data []byte) (err error) {
	varEntitlementAttributeBulkUpdateIdsRequest := _EntitlementAttributeBulkUpdateIdsRequest{}

	err = json.Unmarshal(data, &varEntitlementAttributeBulkUpdateIdsRequest)

	if err != nil {
		return err
	}

	*o = EntitlementAttributeBulkUpdateIdsRequest(varEntitlementAttributeBulkUpdateIdsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "entitlements")
		delete(additionalProperties, "operation")
		delete(additionalProperties, "replaceScope")
		delete(additionalProperties, "values")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEntitlementAttributeBulkUpdateIdsRequest struct {
	value *EntitlementAttributeBulkUpdateIdsRequest
	isSet bool
}

func (v NullableEntitlementAttributeBulkUpdateIdsRequest) Get() *EntitlementAttributeBulkUpdateIdsRequest {
	return v.value
}

func (v *NullableEntitlementAttributeBulkUpdateIdsRequest) Set(val *EntitlementAttributeBulkUpdateIdsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitlementAttributeBulkUpdateIdsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitlementAttributeBulkUpdateIdsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitlementAttributeBulkUpdateIdsRequest(val *EntitlementAttributeBulkUpdateIdsRequest) *NullableEntitlementAttributeBulkUpdateIdsRequest {
	return &NullableEntitlementAttributeBulkUpdateIdsRequest{value: val, isSet: true}
}

func (v NullableEntitlementAttributeBulkUpdateIdsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitlementAttributeBulkUpdateIdsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


