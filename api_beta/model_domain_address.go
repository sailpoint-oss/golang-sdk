/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the DomainAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainAddress{}

// DomainAddress struct for DomainAddress
type DomainAddress struct {
	// A domain address
	Domain *string `json:"domain,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DomainAddress DomainAddress

// NewDomainAddress instantiates a new DomainAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainAddress() *DomainAddress {
	this := DomainAddress{}
	return &this
}

// NewDomainAddressWithDefaults instantiates a new DomainAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainAddressWithDefaults() *DomainAddress {
	this := DomainAddress{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *DomainAddress) GetDomain() string {
	if o == nil || isNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainAddress) GetDomainOk() (*string, bool) {
	if o == nil || isNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *DomainAddress) HasDomain() bool {
	if o != nil && !isNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *DomainAddress) SetDomain(v string) {
	o.Domain = &v
}

func (o DomainAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DomainAddress) UnmarshalJSON(bytes []byte) (err error) {
	varDomainAddress := _DomainAddress{}

	if err = json.Unmarshal(bytes, &varDomainAddress); err == nil {
	*o = DomainAddress(varDomainAddress)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "domain")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDomainAddress struct {
	value *DomainAddress
	isSet bool
}

func (v NullableDomainAddress) Get() *DomainAddress {
	return v.value
}

func (v *NullableDomainAddress) Set(val *DomainAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainAddress(val *DomainAddress) *NullableDomainAddress {
	return &NullableDomainAddress{value: val, isSet: true}
}

func (v NullableDomainAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


