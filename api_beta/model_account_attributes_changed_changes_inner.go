/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	"fmt"
)

// checks if the AccountAttributesChangedChangesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountAttributesChangedChangesInner{}

// AccountAttributesChangedChangesInner struct for AccountAttributesChangedChangesInner
type AccountAttributesChangedChangesInner struct {
	// The name of the attribute.
	Attribute string `json:"attribute"`
	OldValue NullableAccountAttributesChangedChangesInnerOldValue `json:"oldValue"`
	NewValue NullableAccountAttributesChangedChangesInnerNewValue `json:"newValue"`
	AdditionalProperties map[string]interface{}
}

type _AccountAttributesChangedChangesInner AccountAttributesChangedChangesInner

// NewAccountAttributesChangedChangesInner instantiates a new AccountAttributesChangedChangesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountAttributesChangedChangesInner(attribute string, oldValue NullableAccountAttributesChangedChangesInnerOldValue, newValue NullableAccountAttributesChangedChangesInnerNewValue) *AccountAttributesChangedChangesInner {
	this := AccountAttributesChangedChangesInner{}
	this.Attribute = attribute
	this.OldValue = oldValue
	this.NewValue = newValue
	return &this
}

// NewAccountAttributesChangedChangesInnerWithDefaults instantiates a new AccountAttributesChangedChangesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountAttributesChangedChangesInnerWithDefaults() *AccountAttributesChangedChangesInner {
	this := AccountAttributesChangedChangesInner{}
	return &this
}

// GetAttribute returns the Attribute field value
func (o *AccountAttributesChangedChangesInner) GetAttribute() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value
// and a boolean to check if the value has been set.
func (o *AccountAttributesChangedChangesInner) GetAttributeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attribute, true
}

// SetAttribute sets field value
func (o *AccountAttributesChangedChangesInner) SetAttribute(v string) {
	o.Attribute = v
}

// GetOldValue returns the OldValue field value
// If the value is explicit nil, the zero value for AccountAttributesChangedChangesInnerOldValue will be returned
func (o *AccountAttributesChangedChangesInner) GetOldValue() AccountAttributesChangedChangesInnerOldValue {
	if o == nil || o.OldValue.Get() == nil {
		var ret AccountAttributesChangedChangesInnerOldValue
		return ret
	}

	return *o.OldValue.Get()
}

// GetOldValueOk returns a tuple with the OldValue field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountAttributesChangedChangesInner) GetOldValueOk() (*AccountAttributesChangedChangesInnerOldValue, bool) {
	if o == nil {
		return nil, false
	}
	return o.OldValue.Get(), o.OldValue.IsSet()
}

// SetOldValue sets field value
func (o *AccountAttributesChangedChangesInner) SetOldValue(v AccountAttributesChangedChangesInnerOldValue) {
	o.OldValue.Set(&v)
}

// GetNewValue returns the NewValue field value
// If the value is explicit nil, the zero value for AccountAttributesChangedChangesInnerNewValue will be returned
func (o *AccountAttributesChangedChangesInner) GetNewValue() AccountAttributesChangedChangesInnerNewValue {
	if o == nil || o.NewValue.Get() == nil {
		var ret AccountAttributesChangedChangesInnerNewValue
		return ret
	}

	return *o.NewValue.Get()
}

// GetNewValueOk returns a tuple with the NewValue field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountAttributesChangedChangesInner) GetNewValueOk() (*AccountAttributesChangedChangesInnerNewValue, bool) {
	if o == nil {
		return nil, false
	}
	return o.NewValue.Get(), o.NewValue.IsSet()
}

// SetNewValue sets field value
func (o *AccountAttributesChangedChangesInner) SetNewValue(v AccountAttributesChangedChangesInnerNewValue) {
	o.NewValue.Set(&v)
}

func (o AccountAttributesChangedChangesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountAttributesChangedChangesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attribute"] = o.Attribute
	toSerialize["oldValue"] = o.OldValue.Get()
	toSerialize["newValue"] = o.NewValue.Get()

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountAttributesChangedChangesInner) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attribute",
		"oldValue",
		"newValue",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountAttributesChangedChangesInner := _AccountAttributesChangedChangesInner{}

	if err = json.Unmarshal(bytes, &varAccountAttributesChangedChangesInner); err == nil {
	*o = AccountAttributesChangedChangesInner(varAccountAttributesChangedChangesInner)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "attribute")
		delete(additionalProperties, "oldValue")
		delete(additionalProperties, "newValue")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountAttributesChangedChangesInner struct {
	value *AccountAttributesChangedChangesInner
	isSet bool
}

func (v NullableAccountAttributesChangedChangesInner) Get() *AccountAttributesChangedChangesInner {
	return v.value
}

func (v *NullableAccountAttributesChangedChangesInner) Set(val *AccountAttributesChangedChangesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountAttributesChangedChangesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountAttributesChangedChangesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountAttributesChangedChangesInner(val *AccountAttributesChangedChangesInner) *NullableAccountAttributesChangedChangesInner {
	return &NullableAccountAttributesChangedChangesInner{value: val, isSet: true}
}

func (v NullableAccountAttributesChangedChangesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountAttributesChangedChangesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


