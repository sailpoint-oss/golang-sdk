/*
Identity Security Cloud Beta API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the EntitlementManuallyUpdatedFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitlementManuallyUpdatedFields{}

// EntitlementManuallyUpdatedFields struct for EntitlementManuallyUpdatedFields
type EntitlementManuallyUpdatedFields struct {
	// True if the entitlements name was updated manually via entitlement import csv or patch endpoint.  False means that property value has not been change after first entitlement aggregation. Field refers to [Entitlement response schema](https://developer.sailpoint.com/idn/api/beta/get-entitlement) > `name` property.
	DISPLAY_NAME *bool `json:"DISPLAY_NAME,omitempty"`
	// True if the entitlement description was updated manually via entitlement import csv or patch endpoint.  False means that property value has not been change after first entitlement aggregation. Field refers to [Entitlement response schema](https://developer.sailpoint.com/idn/api/beta/get-entitlement) > `description` property.
	DESCRIPTION *bool `json:"DESCRIPTION,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EntitlementManuallyUpdatedFields EntitlementManuallyUpdatedFields

// NewEntitlementManuallyUpdatedFields instantiates a new EntitlementManuallyUpdatedFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitlementManuallyUpdatedFields() *EntitlementManuallyUpdatedFields {
	this := EntitlementManuallyUpdatedFields{}
	var dISPLAYNAME bool = false
	this.DISPLAY_NAME = &dISPLAYNAME
	var dESCRIPTION bool = false
	this.DESCRIPTION = &dESCRIPTION
	return &this
}

// NewEntitlementManuallyUpdatedFieldsWithDefaults instantiates a new EntitlementManuallyUpdatedFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitlementManuallyUpdatedFieldsWithDefaults() *EntitlementManuallyUpdatedFields {
	this := EntitlementManuallyUpdatedFields{}
	var dISPLAYNAME bool = false
	this.DISPLAY_NAME = &dISPLAYNAME
	var dESCRIPTION bool = false
	this.DESCRIPTION = &dESCRIPTION
	return &this
}

// GetDISPLAY_NAME returns the DISPLAY_NAME field value if set, zero value otherwise.
func (o *EntitlementManuallyUpdatedFields) GetDISPLAY_NAME() bool {
	if o == nil || isNil(o.DISPLAY_NAME) {
		var ret bool
		return ret
	}
	return *o.DISPLAY_NAME
}

// GetDISPLAY_NAMEOk returns a tuple with the DISPLAY_NAME field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementManuallyUpdatedFields) GetDISPLAY_NAMEOk() (*bool, bool) {
	if o == nil || isNil(o.DISPLAY_NAME) {
		return nil, false
	}
	return o.DISPLAY_NAME, true
}

// HasDISPLAY_NAME returns a boolean if a field has been set.
func (o *EntitlementManuallyUpdatedFields) HasDISPLAY_NAME() bool {
	if o != nil && !isNil(o.DISPLAY_NAME) {
		return true
	}

	return false
}

// SetDISPLAY_NAME gets a reference to the given bool and assigns it to the DISPLAY_NAME field.
func (o *EntitlementManuallyUpdatedFields) SetDISPLAY_NAME(v bool) {
	o.DISPLAY_NAME = &v
}

// GetDESCRIPTION returns the DESCRIPTION field value if set, zero value otherwise.
func (o *EntitlementManuallyUpdatedFields) GetDESCRIPTION() bool {
	if o == nil || isNil(o.DESCRIPTION) {
		var ret bool
		return ret
	}
	return *o.DESCRIPTION
}

// GetDESCRIPTIONOk returns a tuple with the DESCRIPTION field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitlementManuallyUpdatedFields) GetDESCRIPTIONOk() (*bool, bool) {
	if o == nil || isNil(o.DESCRIPTION) {
		return nil, false
	}
	return o.DESCRIPTION, true
}

// HasDESCRIPTION returns a boolean if a field has been set.
func (o *EntitlementManuallyUpdatedFields) HasDESCRIPTION() bool {
	if o != nil && !isNil(o.DESCRIPTION) {
		return true
	}

	return false
}

// SetDESCRIPTION gets a reference to the given bool and assigns it to the DESCRIPTION field.
func (o *EntitlementManuallyUpdatedFields) SetDESCRIPTION(v bool) {
	o.DESCRIPTION = &v
}

func (o EntitlementManuallyUpdatedFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitlementManuallyUpdatedFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DISPLAY_NAME) {
		toSerialize["DISPLAY_NAME"] = o.DISPLAY_NAME
	}
	if !isNil(o.DESCRIPTION) {
		toSerialize["DESCRIPTION"] = o.DESCRIPTION
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EntitlementManuallyUpdatedFields) UnmarshalJSON(bytes []byte) (err error) {
	varEntitlementManuallyUpdatedFields := _EntitlementManuallyUpdatedFields{}

	if err = json.Unmarshal(bytes, &varEntitlementManuallyUpdatedFields); err == nil {
			*o = EntitlementManuallyUpdatedFields(varEntitlementManuallyUpdatedFields)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "DISPLAY_NAME")
		delete(additionalProperties, "DESCRIPTION")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEntitlementManuallyUpdatedFields struct {
	value *EntitlementManuallyUpdatedFields
	isSet bool
}

func (v NullableEntitlementManuallyUpdatedFields) Get() *EntitlementManuallyUpdatedFields {
	return v.value
}

func (v *NullableEntitlementManuallyUpdatedFields) Set(val *EntitlementManuallyUpdatedFields) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitlementManuallyUpdatedFields) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitlementManuallyUpdatedFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitlementManuallyUpdatedFields(val *EntitlementManuallyUpdatedFields) *NullableEntitlementManuallyUpdatedFields {
	return &NullableEntitlementManuallyUpdatedFields{value: val, isSet: true}
}

func (v NullableEntitlementManuallyUpdatedFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitlementManuallyUpdatedFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


