/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the ProvisioningCriteriaLevel3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisioningCriteriaLevel3{}

// ProvisioningCriteriaLevel3 Defines matching criteria for an Account to be provisioned with a specific Access Profile
type ProvisioningCriteriaLevel3 struct {
	Operation *ProvisioningCriteriaOperation `json:"operation,omitempty"`
	// Name of the Account attribute to be tested. If **operation** is one of EQUALS, NOT_EQUALS, CONTAINS, or HAS, this field is required. Otherwise, specifying it is an error.
	Attribute NullableString `json:"attribute,omitempty"`
	// String value to test the Account attribute w/r/t the specified operation. If the operation is one of EQUALS, NOT_EQUALS, or CONTAINS, this field is required. Otherwise, specifying it is an error. If the Attribute is not String-typed, it will be converted to the appropriate type.
	Value *string `json:"value,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ProvisioningCriteriaLevel3 ProvisioningCriteriaLevel3

// NewProvisioningCriteriaLevel3 instantiates a new ProvisioningCriteriaLevel3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningCriteriaLevel3() *ProvisioningCriteriaLevel3 {
	this := ProvisioningCriteriaLevel3{}
	return &this
}

// NewProvisioningCriteriaLevel3WithDefaults instantiates a new ProvisioningCriteriaLevel3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningCriteriaLevel3WithDefaults() *ProvisioningCriteriaLevel3 {
	this := ProvisioningCriteriaLevel3{}
	return &this
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *ProvisioningCriteriaLevel3) GetOperation() ProvisioningCriteriaOperation {
	if o == nil || isNil(o.Operation) {
		var ret ProvisioningCriteriaOperation
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningCriteriaLevel3) GetOperationOk() (*ProvisioningCriteriaOperation, bool) {
	if o == nil || isNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *ProvisioningCriteriaLevel3) HasOperation() bool {
	if o != nil && !isNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given ProvisioningCriteriaOperation and assigns it to the Operation field.
func (o *ProvisioningCriteriaLevel3) SetOperation(v ProvisioningCriteriaOperation) {
	o.Operation = &v
}

// GetAttribute returns the Attribute field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningCriteriaLevel3) GetAttribute() string {
	if o == nil || isNil(o.Attribute.Get()) {
		var ret string
		return ret
	}
	return *o.Attribute.Get()
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningCriteriaLevel3) GetAttributeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attribute.Get(), o.Attribute.IsSet()
}

// HasAttribute returns a boolean if a field has been set.
func (o *ProvisioningCriteriaLevel3) HasAttribute() bool {
	if o != nil && o.Attribute.IsSet() {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given NullableString and assigns it to the Attribute field.
func (o *ProvisioningCriteriaLevel3) SetAttribute(v string) {
	o.Attribute.Set(&v)
}
// SetAttributeNil sets the value for Attribute to be an explicit nil
func (o *ProvisioningCriteriaLevel3) SetAttributeNil() {
	o.Attribute.Set(nil)
}

// UnsetAttribute ensures that no value is present for Attribute, not even an explicit nil
func (o *ProvisioningCriteriaLevel3) UnsetAttribute() {
	o.Attribute.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ProvisioningCriteriaLevel3) GetValue() string {
	if o == nil || isNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningCriteriaLevel3) GetValueOk() (*string, bool) {
	if o == nil || isNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ProvisioningCriteriaLevel3) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ProvisioningCriteriaLevel3) SetValue(v string) {
	o.Value = &v
}

func (o ProvisioningCriteriaLevel3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisioningCriteriaLevel3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	if o.Attribute.IsSet() {
		toSerialize["attribute"] = o.Attribute.Get()
	}
	if !isNil(o.Value) {
		toSerialize["value"] = o.Value
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProvisioningCriteriaLevel3) UnmarshalJSON(bytes []byte) (err error) {
	varProvisioningCriteriaLevel3 := _ProvisioningCriteriaLevel3{}

	if err = json.Unmarshal(bytes, &varProvisioningCriteriaLevel3); err == nil {
	*o = ProvisioningCriteriaLevel3(varProvisioningCriteriaLevel3)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "operation")
		delete(additionalProperties, "attribute")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProvisioningCriteriaLevel3 struct {
	value *ProvisioningCriteriaLevel3
	isSet bool
}

func (v NullableProvisioningCriteriaLevel3) Get() *ProvisioningCriteriaLevel3 {
	return v.value
}

func (v *NullableProvisioningCriteriaLevel3) Set(val *ProvisioningCriteriaLevel3) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningCriteriaLevel3) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningCriteriaLevel3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningCriteriaLevel3(val *ProvisioningCriteriaLevel3) *NullableProvisioningCriteriaLevel3 {
	return &NullableProvisioningCriteriaLevel3{value: val, isSet: true}
}

func (v NullableProvisioningCriteriaLevel3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningCriteriaLevel3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


