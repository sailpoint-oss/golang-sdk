/*
Identity Security Cloud Beta API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	
	"fmt"
)

// checks if the MultiHostIntegrationsAggScheduleUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiHostIntegrationsAggScheduleUpdate{}

// MultiHostIntegrationsAggScheduleUpdate struct for MultiHostIntegrationsAggScheduleUpdate
type MultiHostIntegrationsAggScheduleUpdate struct {
	// Multi-Host Integration ID. The ID must be unique
	MultihostId string `json:"multihostId"`
	// Multi-Host Integration aggregation group ID
	AggregationGrpId string `json:"aggregation_grp_id"`
	// Multi-Host Integration name
	AggregationGrpName string `json:"aggregation_grp_name"`
	// Cron expression to schedule aggregation
	AggregationCronSchedule string `json:"aggregation_cron_schedule"`
	// Boolean value for Multi-Host Integration aggregation schedule.  This specifies if scheduled aggregation is enabled or disabled.
	EnableSchedule bool `json:"enableSchedule"`
	// Source IDs of the Multi-Host Integration
	SourceIdList []string `json:"source_id_list"`
	// Created date of Multi-Host Integration aggregation schedule
	Created *SailPointTime `json:"created,omitempty"`
	// Modified date of Multi-Host Integration aggregation schedule
	Modified *SailPointTime `json:"modified,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MultiHostIntegrationsAggScheduleUpdate MultiHostIntegrationsAggScheduleUpdate

// NewMultiHostIntegrationsAggScheduleUpdate instantiates a new MultiHostIntegrationsAggScheduleUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiHostIntegrationsAggScheduleUpdate(multihostId string, aggregationGrpId string, aggregationGrpName string, aggregationCronSchedule string, enableSchedule bool, sourceIdList []string) *MultiHostIntegrationsAggScheduleUpdate {
	this := MultiHostIntegrationsAggScheduleUpdate{}
	this.MultihostId = multihostId
	this.AggregationGrpId = aggregationGrpId
	this.AggregationGrpName = aggregationGrpName
	this.AggregationCronSchedule = aggregationCronSchedule
	this.EnableSchedule = enableSchedule
	this.SourceIdList = sourceIdList
	return &this
}

// NewMultiHostIntegrationsAggScheduleUpdateWithDefaults instantiates a new MultiHostIntegrationsAggScheduleUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiHostIntegrationsAggScheduleUpdateWithDefaults() *MultiHostIntegrationsAggScheduleUpdate {
	this := MultiHostIntegrationsAggScheduleUpdate{}
	var enableSchedule bool = false
	this.EnableSchedule = enableSchedule
	return &this
}

// GetMultihostId returns the MultihostId field value
func (o *MultiHostIntegrationsAggScheduleUpdate) GetMultihostId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MultihostId
}

// GetMultihostIdOk returns a tuple with the MultihostId field value
// and a boolean to check if the value has been set.
func (o *MultiHostIntegrationsAggScheduleUpdate) GetMultihostIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MultihostId, true
}

// SetMultihostId sets field value
func (o *MultiHostIntegrationsAggScheduleUpdate) SetMultihostId(v string) {
	o.MultihostId = v
}

// GetAggregationGrpId returns the AggregationGrpId field value
func (o *MultiHostIntegrationsAggScheduleUpdate) GetAggregationGrpId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AggregationGrpId
}

// GetAggregationGrpIdOk returns a tuple with the AggregationGrpId field value
// and a boolean to check if the value has been set.
func (o *MultiHostIntegrationsAggScheduleUpdate) GetAggregationGrpIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregationGrpId, true
}

// SetAggregationGrpId sets field value
func (o *MultiHostIntegrationsAggScheduleUpdate) SetAggregationGrpId(v string) {
	o.AggregationGrpId = v
}

// GetAggregationGrpName returns the AggregationGrpName field value
func (o *MultiHostIntegrationsAggScheduleUpdate) GetAggregationGrpName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AggregationGrpName
}

// GetAggregationGrpNameOk returns a tuple with the AggregationGrpName field value
// and a boolean to check if the value has been set.
func (o *MultiHostIntegrationsAggScheduleUpdate) GetAggregationGrpNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregationGrpName, true
}

// SetAggregationGrpName sets field value
func (o *MultiHostIntegrationsAggScheduleUpdate) SetAggregationGrpName(v string) {
	o.AggregationGrpName = v
}

// GetAggregationCronSchedule returns the AggregationCronSchedule field value
func (o *MultiHostIntegrationsAggScheduleUpdate) GetAggregationCronSchedule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AggregationCronSchedule
}

// GetAggregationCronScheduleOk returns a tuple with the AggregationCronSchedule field value
// and a boolean to check if the value has been set.
func (o *MultiHostIntegrationsAggScheduleUpdate) GetAggregationCronScheduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregationCronSchedule, true
}

// SetAggregationCronSchedule sets field value
func (o *MultiHostIntegrationsAggScheduleUpdate) SetAggregationCronSchedule(v string) {
	o.AggregationCronSchedule = v
}

// GetEnableSchedule returns the EnableSchedule field value
func (o *MultiHostIntegrationsAggScheduleUpdate) GetEnableSchedule() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableSchedule
}

// GetEnableScheduleOk returns a tuple with the EnableSchedule field value
// and a boolean to check if the value has been set.
func (o *MultiHostIntegrationsAggScheduleUpdate) GetEnableScheduleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableSchedule, true
}

// SetEnableSchedule sets field value
func (o *MultiHostIntegrationsAggScheduleUpdate) SetEnableSchedule(v bool) {
	o.EnableSchedule = v
}

// GetSourceIdList returns the SourceIdList field value
func (o *MultiHostIntegrationsAggScheduleUpdate) GetSourceIdList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SourceIdList
}

// GetSourceIdListOk returns a tuple with the SourceIdList field value
// and a boolean to check if the value has been set.
func (o *MultiHostIntegrationsAggScheduleUpdate) GetSourceIdListOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceIdList, true
}

// SetSourceIdList sets field value
func (o *MultiHostIntegrationsAggScheduleUpdate) SetSourceIdList(v []string) {
	o.SourceIdList = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *MultiHostIntegrationsAggScheduleUpdate) GetCreated() SailPointTime {
	if o == nil || IsNil(o.Created) {
		var ret SailPointTime
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiHostIntegrationsAggScheduleUpdate) GetCreatedOk() (*SailPointTime, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *MultiHostIntegrationsAggScheduleUpdate) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given SailPointTime and assigns it to the Created field.
func (o *MultiHostIntegrationsAggScheduleUpdate) SetCreated(v SailPointTime) {
	o.Created = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *MultiHostIntegrationsAggScheduleUpdate) GetModified() SailPointTime {
	if o == nil || IsNil(o.Modified) {
		var ret SailPointTime
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiHostIntegrationsAggScheduleUpdate) GetModifiedOk() (*SailPointTime, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *MultiHostIntegrationsAggScheduleUpdate) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given SailPointTime and assigns it to the Modified field.
func (o *MultiHostIntegrationsAggScheduleUpdate) SetModified(v SailPointTime) {
	o.Modified = &v
}

func (o MultiHostIntegrationsAggScheduleUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiHostIntegrationsAggScheduleUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["multihostId"] = o.MultihostId
	toSerialize["aggregation_grp_id"] = o.AggregationGrpId
	toSerialize["aggregation_grp_name"] = o.AggregationGrpName
	toSerialize["aggregation_cron_schedule"] = o.AggregationCronSchedule
	toSerialize["enableSchedule"] = o.EnableSchedule
	toSerialize["source_id_list"] = o.SourceIdList
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MultiHostIntegrationsAggScheduleUpdate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"multihostId",
		"aggregation_grp_id",
		"aggregation_grp_name",
		"aggregation_cron_schedule",
		"enableSchedule",
		"source_id_list",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMultiHostIntegrationsAggScheduleUpdate := _MultiHostIntegrationsAggScheduleUpdate{}

	err = json.Unmarshal(data, &varMultiHostIntegrationsAggScheduleUpdate)

	if err != nil {
		return err
	}

	*o = MultiHostIntegrationsAggScheduleUpdate(varMultiHostIntegrationsAggScheduleUpdate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "multihostId")
		delete(additionalProperties, "aggregation_grp_id")
		delete(additionalProperties, "aggregation_grp_name")
		delete(additionalProperties, "aggregation_cron_schedule")
		delete(additionalProperties, "enableSchedule")
		delete(additionalProperties, "source_id_list")
		delete(additionalProperties, "created")
		delete(additionalProperties, "modified")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMultiHostIntegrationsAggScheduleUpdate struct {
	value *MultiHostIntegrationsAggScheduleUpdate
	isSet bool
}

func (v NullableMultiHostIntegrationsAggScheduleUpdate) Get() *MultiHostIntegrationsAggScheduleUpdate {
	return v.value
}

func (v *NullableMultiHostIntegrationsAggScheduleUpdate) Set(val *MultiHostIntegrationsAggScheduleUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiHostIntegrationsAggScheduleUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiHostIntegrationsAggScheduleUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiHostIntegrationsAggScheduleUpdate(val *MultiHostIntegrationsAggScheduleUpdate) *NullableMultiHostIntegrationsAggScheduleUpdate {
	return &NullableMultiHostIntegrationsAggScheduleUpdate{value: val, isSet: true}
}

func (v NullableMultiHostIntegrationsAggScheduleUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiHostIntegrationsAggScheduleUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


