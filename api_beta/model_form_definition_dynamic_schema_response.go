/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the FormDefinitionDynamicSchemaResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormDefinitionDynamicSchemaResponse{}

// FormDefinitionDynamicSchemaResponse struct for FormDefinitionDynamicSchemaResponse
type FormDefinitionDynamicSchemaResponse struct {
	// OutputSchema holds a JSON schema generated dynamically
	OutputSchema map[string]map[string]interface{} `json:"outputSchema,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FormDefinitionDynamicSchemaResponse FormDefinitionDynamicSchemaResponse

// NewFormDefinitionDynamicSchemaResponse instantiates a new FormDefinitionDynamicSchemaResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormDefinitionDynamicSchemaResponse() *FormDefinitionDynamicSchemaResponse {
	this := FormDefinitionDynamicSchemaResponse{}
	return &this
}

// NewFormDefinitionDynamicSchemaResponseWithDefaults instantiates a new FormDefinitionDynamicSchemaResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormDefinitionDynamicSchemaResponseWithDefaults() *FormDefinitionDynamicSchemaResponse {
	this := FormDefinitionDynamicSchemaResponse{}
	return &this
}

// GetOutputSchema returns the OutputSchema field value if set, zero value otherwise.
func (o *FormDefinitionDynamicSchemaResponse) GetOutputSchema() map[string]map[string]interface{} {
	if o == nil || isNil(o.OutputSchema) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.OutputSchema
}

// GetOutputSchemaOk returns a tuple with the OutputSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormDefinitionDynamicSchemaResponse) GetOutputSchemaOk() (map[string]map[string]interface{}, bool) {
	if o == nil || isNil(o.OutputSchema) {
		return map[string]map[string]interface{}{}, false
	}
	return o.OutputSchema, true
}

// HasOutputSchema returns a boolean if a field has been set.
func (o *FormDefinitionDynamicSchemaResponse) HasOutputSchema() bool {
	if o != nil && !isNil(o.OutputSchema) {
		return true
	}

	return false
}

// SetOutputSchema gets a reference to the given map[string]map[string]interface{} and assigns it to the OutputSchema field.
func (o *FormDefinitionDynamicSchemaResponse) SetOutputSchema(v map[string]map[string]interface{}) {
	o.OutputSchema = v
}

func (o FormDefinitionDynamicSchemaResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormDefinitionDynamicSchemaResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.OutputSchema) {
		toSerialize["outputSchema"] = o.OutputSchema
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FormDefinitionDynamicSchemaResponse) UnmarshalJSON(bytes []byte) (err error) {
	varFormDefinitionDynamicSchemaResponse := _FormDefinitionDynamicSchemaResponse{}

	if err = json.Unmarshal(bytes, &varFormDefinitionDynamicSchemaResponse); err == nil {
	*o = FormDefinitionDynamicSchemaResponse(varFormDefinitionDynamicSchemaResponse)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "outputSchema")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFormDefinitionDynamicSchemaResponse struct {
	value *FormDefinitionDynamicSchemaResponse
	isSet bool
}

func (v NullableFormDefinitionDynamicSchemaResponse) Get() *FormDefinitionDynamicSchemaResponse {
	return v.value
}

func (v *NullableFormDefinitionDynamicSchemaResponse) Set(val *FormDefinitionDynamicSchemaResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFormDefinitionDynamicSchemaResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFormDefinitionDynamicSchemaResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormDefinitionDynamicSchemaResponse(val *FormDefinitionDynamicSchemaResponse) *NullableFormDefinitionDynamicSchemaResponse {
	return &NullableFormDefinitionDynamicSchemaResponse{value: val, isSet: true}
}

func (v NullableFormDefinitionDynamicSchemaResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormDefinitionDynamicSchemaResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


