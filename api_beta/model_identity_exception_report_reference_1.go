/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the IdentityExceptionReportReference1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityExceptionReportReference1{}

// IdentityExceptionReportReference1 struct for IdentityExceptionReportReference1
type IdentityExceptionReportReference1 struct {
	// The id of the task result.
	TaskResultId *string `json:"taskResultId,omitempty"`
	// The name of the report.
	ReportName *string `json:"reportName,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IdentityExceptionReportReference1 IdentityExceptionReportReference1

// NewIdentityExceptionReportReference1 instantiates a new IdentityExceptionReportReference1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityExceptionReportReference1() *IdentityExceptionReportReference1 {
	this := IdentityExceptionReportReference1{}
	return &this
}

// NewIdentityExceptionReportReference1WithDefaults instantiates a new IdentityExceptionReportReference1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityExceptionReportReference1WithDefaults() *IdentityExceptionReportReference1 {
	this := IdentityExceptionReportReference1{}
	return &this
}

// GetTaskResultId returns the TaskResultId field value if set, zero value otherwise.
func (o *IdentityExceptionReportReference1) GetTaskResultId() string {
	if o == nil || isNil(o.TaskResultId) {
		var ret string
		return ret
	}
	return *o.TaskResultId
}

// GetTaskResultIdOk returns a tuple with the TaskResultId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityExceptionReportReference1) GetTaskResultIdOk() (*string, bool) {
	if o == nil || isNil(o.TaskResultId) {
		return nil, false
	}
	return o.TaskResultId, true
}

// HasTaskResultId returns a boolean if a field has been set.
func (o *IdentityExceptionReportReference1) HasTaskResultId() bool {
	if o != nil && !isNil(o.TaskResultId) {
		return true
	}

	return false
}

// SetTaskResultId gets a reference to the given string and assigns it to the TaskResultId field.
func (o *IdentityExceptionReportReference1) SetTaskResultId(v string) {
	o.TaskResultId = &v
}

// GetReportName returns the ReportName field value if set, zero value otherwise.
func (o *IdentityExceptionReportReference1) GetReportName() string {
	if o == nil || isNil(o.ReportName) {
		var ret string
		return ret
	}
	return *o.ReportName
}

// GetReportNameOk returns a tuple with the ReportName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityExceptionReportReference1) GetReportNameOk() (*string, bool) {
	if o == nil || isNil(o.ReportName) {
		return nil, false
	}
	return o.ReportName, true
}

// HasReportName returns a boolean if a field has been set.
func (o *IdentityExceptionReportReference1) HasReportName() bool {
	if o != nil && !isNil(o.ReportName) {
		return true
	}

	return false
}

// SetReportName gets a reference to the given string and assigns it to the ReportName field.
func (o *IdentityExceptionReportReference1) SetReportName(v string) {
	o.ReportName = &v
}

func (o IdentityExceptionReportReference1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityExceptionReportReference1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TaskResultId) {
		toSerialize["taskResultId"] = o.TaskResultId
	}
	if !isNil(o.ReportName) {
		toSerialize["reportName"] = o.ReportName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IdentityExceptionReportReference1) UnmarshalJSON(bytes []byte) (err error) {
	varIdentityExceptionReportReference1 := _IdentityExceptionReportReference1{}

	if err = json.Unmarshal(bytes, &varIdentityExceptionReportReference1); err == nil {
	*o = IdentityExceptionReportReference1(varIdentityExceptionReportReference1)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "taskResultId")
		delete(additionalProperties, "reportName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIdentityExceptionReportReference1 struct {
	value *IdentityExceptionReportReference1
	isSet bool
}

func (v NullableIdentityExceptionReportReference1) Get() *IdentityExceptionReportReference1 {
	return v.value
}

func (v *NullableIdentityExceptionReportReference1) Set(val *IdentityExceptionReportReference1) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityExceptionReportReference1) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityExceptionReportReference1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityExceptionReportReference1(val *IdentityExceptionReportReference1) *NullableIdentityExceptionReportReference1 {
	return &NullableIdentityExceptionReportReference1{value: val, isSet: true}
}

func (v NullableIdentityExceptionReportReference1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityExceptionReportReference1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


