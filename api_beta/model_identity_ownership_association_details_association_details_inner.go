/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the IdentityOwnershipAssociationDetailsAssociationDetailsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityOwnershipAssociationDetailsAssociationDetailsInner{}

// IdentityOwnershipAssociationDetailsAssociationDetailsInner struct for IdentityOwnershipAssociationDetailsAssociationDetailsInner
type IdentityOwnershipAssociationDetailsAssociationDetailsInner struct {
	// association type with the identity
	AssociationType *string `json:"associationType,omitempty"`
	// the specific resource this identity has ownership on
	Entities []IdentityEntities `json:"entities,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IdentityOwnershipAssociationDetailsAssociationDetailsInner IdentityOwnershipAssociationDetailsAssociationDetailsInner

// NewIdentityOwnershipAssociationDetailsAssociationDetailsInner instantiates a new IdentityOwnershipAssociationDetailsAssociationDetailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityOwnershipAssociationDetailsAssociationDetailsInner() *IdentityOwnershipAssociationDetailsAssociationDetailsInner {
	this := IdentityOwnershipAssociationDetailsAssociationDetailsInner{}
	return &this
}

// NewIdentityOwnershipAssociationDetailsAssociationDetailsInnerWithDefaults instantiates a new IdentityOwnershipAssociationDetailsAssociationDetailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityOwnershipAssociationDetailsAssociationDetailsInnerWithDefaults() *IdentityOwnershipAssociationDetailsAssociationDetailsInner {
	this := IdentityOwnershipAssociationDetailsAssociationDetailsInner{}
	return &this
}

// GetAssociationType returns the AssociationType field value if set, zero value otherwise.
func (o *IdentityOwnershipAssociationDetailsAssociationDetailsInner) GetAssociationType() string {
	if o == nil || isNil(o.AssociationType) {
		var ret string
		return ret
	}
	return *o.AssociationType
}

// GetAssociationTypeOk returns a tuple with the AssociationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOwnershipAssociationDetailsAssociationDetailsInner) GetAssociationTypeOk() (*string, bool) {
	if o == nil || isNil(o.AssociationType) {
		return nil, false
	}
	return o.AssociationType, true
}

// HasAssociationType returns a boolean if a field has been set.
func (o *IdentityOwnershipAssociationDetailsAssociationDetailsInner) HasAssociationType() bool {
	if o != nil && !isNil(o.AssociationType) {
		return true
	}

	return false
}

// SetAssociationType gets a reference to the given string and assigns it to the AssociationType field.
func (o *IdentityOwnershipAssociationDetailsAssociationDetailsInner) SetAssociationType(v string) {
	o.AssociationType = &v
}

// GetEntities returns the Entities field value if set, zero value otherwise.
func (o *IdentityOwnershipAssociationDetailsAssociationDetailsInner) GetEntities() []IdentityEntities {
	if o == nil || isNil(o.Entities) {
		var ret []IdentityEntities
		return ret
	}
	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityOwnershipAssociationDetailsAssociationDetailsInner) GetEntitiesOk() ([]IdentityEntities, bool) {
	if o == nil || isNil(o.Entities) {
		return nil, false
	}
	return o.Entities, true
}

// HasEntities returns a boolean if a field has been set.
func (o *IdentityOwnershipAssociationDetailsAssociationDetailsInner) HasEntities() bool {
	if o != nil && !isNil(o.Entities) {
		return true
	}

	return false
}

// SetEntities gets a reference to the given []IdentityEntities and assigns it to the Entities field.
func (o *IdentityOwnershipAssociationDetailsAssociationDetailsInner) SetEntities(v []IdentityEntities) {
	o.Entities = v
}

func (o IdentityOwnershipAssociationDetailsAssociationDetailsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityOwnershipAssociationDetailsAssociationDetailsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AssociationType) {
		toSerialize["associationType"] = o.AssociationType
	}
	if !isNil(o.Entities) {
		toSerialize["entities"] = o.Entities
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IdentityOwnershipAssociationDetailsAssociationDetailsInner) UnmarshalJSON(bytes []byte) (err error) {
	varIdentityOwnershipAssociationDetailsAssociationDetailsInner := _IdentityOwnershipAssociationDetailsAssociationDetailsInner{}

	if err = json.Unmarshal(bytes, &varIdentityOwnershipAssociationDetailsAssociationDetailsInner); err == nil {
	*o = IdentityOwnershipAssociationDetailsAssociationDetailsInner(varIdentityOwnershipAssociationDetailsAssociationDetailsInner)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "associationType")
		delete(additionalProperties, "entities")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIdentityOwnershipAssociationDetailsAssociationDetailsInner struct {
	value *IdentityOwnershipAssociationDetailsAssociationDetailsInner
	isSet bool
}

func (v NullableIdentityOwnershipAssociationDetailsAssociationDetailsInner) Get() *IdentityOwnershipAssociationDetailsAssociationDetailsInner {
	return v.value
}

func (v *NullableIdentityOwnershipAssociationDetailsAssociationDetailsInner) Set(val *IdentityOwnershipAssociationDetailsAssociationDetailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityOwnershipAssociationDetailsAssociationDetailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityOwnershipAssociationDetailsAssociationDetailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityOwnershipAssociationDetailsAssociationDetailsInner(val *IdentityOwnershipAssociationDetailsAssociationDetailsInner) *NullableIdentityOwnershipAssociationDetailsAssociationDetailsInner {
	return &NullableIdentityOwnershipAssociationDetailsAssociationDetailsInner{value: val, isSet: true}
}

func (v NullableIdentityOwnershipAssociationDetailsAssociationDetailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityOwnershipAssociationDetailsAssociationDetailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


