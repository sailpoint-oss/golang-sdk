/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the AccessProfileBulkDeleteResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessProfileBulkDeleteResponse{}

// AccessProfileBulkDeleteResponse struct for AccessProfileBulkDeleteResponse
type AccessProfileBulkDeleteResponse struct {
	// ID of the task which is executing the bulk deletion. This can be passed to the **_/task-status** API to track status.
	TaskId *string `json:"taskId,omitempty"`
	// List of IDs of Access Profiles which are pending deletion.
	Pending []string `json:"pending,omitempty"`
	// List of usages of Access Profiles targeted for deletion.
	InUse []AccessProfileUsage `json:"inUse,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccessProfileBulkDeleteResponse AccessProfileBulkDeleteResponse

// NewAccessProfileBulkDeleteResponse instantiates a new AccessProfileBulkDeleteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessProfileBulkDeleteResponse() *AccessProfileBulkDeleteResponse {
	this := AccessProfileBulkDeleteResponse{}
	return &this
}

// NewAccessProfileBulkDeleteResponseWithDefaults instantiates a new AccessProfileBulkDeleteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessProfileBulkDeleteResponseWithDefaults() *AccessProfileBulkDeleteResponse {
	this := AccessProfileBulkDeleteResponse{}
	return &this
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *AccessProfileBulkDeleteResponse) GetTaskId() string {
	if o == nil || isNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfileBulkDeleteResponse) GetTaskIdOk() (*string, bool) {
	if o == nil || isNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *AccessProfileBulkDeleteResponse) HasTaskId() bool {
	if o != nil && !isNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *AccessProfileBulkDeleteResponse) SetTaskId(v string) {
	o.TaskId = &v
}

// GetPending returns the Pending field value if set, zero value otherwise.
func (o *AccessProfileBulkDeleteResponse) GetPending() []string {
	if o == nil || isNil(o.Pending) {
		var ret []string
		return ret
	}
	return o.Pending
}

// GetPendingOk returns a tuple with the Pending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfileBulkDeleteResponse) GetPendingOk() ([]string, bool) {
	if o == nil || isNil(o.Pending) {
		return nil, false
	}
	return o.Pending, true
}

// HasPending returns a boolean if a field has been set.
func (o *AccessProfileBulkDeleteResponse) HasPending() bool {
	if o != nil && !isNil(o.Pending) {
		return true
	}

	return false
}

// SetPending gets a reference to the given []string and assigns it to the Pending field.
func (o *AccessProfileBulkDeleteResponse) SetPending(v []string) {
	o.Pending = v
}

// GetInUse returns the InUse field value if set, zero value otherwise.
func (o *AccessProfileBulkDeleteResponse) GetInUse() []AccessProfileUsage {
	if o == nil || isNil(o.InUse) {
		var ret []AccessProfileUsage
		return ret
	}
	return o.InUse
}

// GetInUseOk returns a tuple with the InUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfileBulkDeleteResponse) GetInUseOk() ([]AccessProfileUsage, bool) {
	if o == nil || isNil(o.InUse) {
		return nil, false
	}
	return o.InUse, true
}

// HasInUse returns a boolean if a field has been set.
func (o *AccessProfileBulkDeleteResponse) HasInUse() bool {
	if o != nil && !isNil(o.InUse) {
		return true
	}

	return false
}

// SetInUse gets a reference to the given []AccessProfileUsage and assigns it to the InUse field.
func (o *AccessProfileBulkDeleteResponse) SetInUse(v []AccessProfileUsage) {
	o.InUse = v
}

func (o AccessProfileBulkDeleteResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessProfileBulkDeleteResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TaskId) {
		toSerialize["taskId"] = o.TaskId
	}
	if !isNil(o.Pending) {
		toSerialize["pending"] = o.Pending
	}
	if !isNil(o.InUse) {
		toSerialize["inUse"] = o.InUse
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccessProfileBulkDeleteResponse) UnmarshalJSON(bytes []byte) (err error) {
	varAccessProfileBulkDeleteResponse := _AccessProfileBulkDeleteResponse{}

	if err = json.Unmarshal(bytes, &varAccessProfileBulkDeleteResponse); err == nil {
	*o = AccessProfileBulkDeleteResponse(varAccessProfileBulkDeleteResponse)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "taskId")
		delete(additionalProperties, "pending")
		delete(additionalProperties, "inUse")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccessProfileBulkDeleteResponse struct {
	value *AccessProfileBulkDeleteResponse
	isSet bool
}

func (v NullableAccessProfileBulkDeleteResponse) Get() *AccessProfileBulkDeleteResponse {
	return v.value
}

func (v *NullableAccessProfileBulkDeleteResponse) Set(val *AccessProfileBulkDeleteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessProfileBulkDeleteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessProfileBulkDeleteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessProfileBulkDeleteResponse(val *AccessProfileBulkDeleteResponse) *NullableAccessProfileBulkDeleteResponse {
	return &NullableAccessProfileBulkDeleteResponse{value: val, isSet: true}
}

func (v NullableAccessProfileBulkDeleteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessProfileBulkDeleteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


