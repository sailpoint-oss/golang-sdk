/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the FormDefinitionFileUploadResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FormDefinitionFileUploadResponse{}

// FormDefinitionFileUploadResponse struct for FormDefinitionFileUploadResponse
type FormDefinitionFileUploadResponse struct {
	// Created is the date the file was uploaded
	Created *string `json:"created,omitempty"`
	// fileId is a unique ULID that serves as an identifier for the form definition file
	FileId *string `json:"fileId,omitempty"`
	// FormDefinitionID is a unique guid identifying this form definition
	FormDefinitionId *string `json:"formDefinitionId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FormDefinitionFileUploadResponse FormDefinitionFileUploadResponse

// NewFormDefinitionFileUploadResponse instantiates a new FormDefinitionFileUploadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFormDefinitionFileUploadResponse() *FormDefinitionFileUploadResponse {
	this := FormDefinitionFileUploadResponse{}
	return &this
}

// NewFormDefinitionFileUploadResponseWithDefaults instantiates a new FormDefinitionFileUploadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFormDefinitionFileUploadResponseWithDefaults() *FormDefinitionFileUploadResponse {
	this := FormDefinitionFileUploadResponse{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *FormDefinitionFileUploadResponse) GetCreated() string {
	if o == nil || isNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormDefinitionFileUploadResponse) GetCreatedOk() (*string, bool) {
	if o == nil || isNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *FormDefinitionFileUploadResponse) HasCreated() bool {
	if o != nil && !isNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *FormDefinitionFileUploadResponse) SetCreated(v string) {
	o.Created = &v
}

// GetFileId returns the FileId field value if set, zero value otherwise.
func (o *FormDefinitionFileUploadResponse) GetFileId() string {
	if o == nil || isNil(o.FileId) {
		var ret string
		return ret
	}
	return *o.FileId
}

// GetFileIdOk returns a tuple with the FileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormDefinitionFileUploadResponse) GetFileIdOk() (*string, bool) {
	if o == nil || isNil(o.FileId) {
		return nil, false
	}
	return o.FileId, true
}

// HasFileId returns a boolean if a field has been set.
func (o *FormDefinitionFileUploadResponse) HasFileId() bool {
	if o != nil && !isNil(o.FileId) {
		return true
	}

	return false
}

// SetFileId gets a reference to the given string and assigns it to the FileId field.
func (o *FormDefinitionFileUploadResponse) SetFileId(v string) {
	o.FileId = &v
}

// GetFormDefinitionId returns the FormDefinitionId field value if set, zero value otherwise.
func (o *FormDefinitionFileUploadResponse) GetFormDefinitionId() string {
	if o == nil || isNil(o.FormDefinitionId) {
		var ret string
		return ret
	}
	return *o.FormDefinitionId
}

// GetFormDefinitionIdOk returns a tuple with the FormDefinitionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FormDefinitionFileUploadResponse) GetFormDefinitionIdOk() (*string, bool) {
	if o == nil || isNil(o.FormDefinitionId) {
		return nil, false
	}
	return o.FormDefinitionId, true
}

// HasFormDefinitionId returns a boolean if a field has been set.
func (o *FormDefinitionFileUploadResponse) HasFormDefinitionId() bool {
	if o != nil && !isNil(o.FormDefinitionId) {
		return true
	}

	return false
}

// SetFormDefinitionId gets a reference to the given string and assigns it to the FormDefinitionId field.
func (o *FormDefinitionFileUploadResponse) SetFormDefinitionId(v string) {
	o.FormDefinitionId = &v
}

func (o FormDefinitionFileUploadResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FormDefinitionFileUploadResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !isNil(o.FileId) {
		toSerialize["fileId"] = o.FileId
	}
	if !isNil(o.FormDefinitionId) {
		toSerialize["formDefinitionId"] = o.FormDefinitionId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FormDefinitionFileUploadResponse) UnmarshalJSON(bytes []byte) (err error) {
	varFormDefinitionFileUploadResponse := _FormDefinitionFileUploadResponse{}

	if err = json.Unmarshal(bytes, &varFormDefinitionFileUploadResponse); err == nil {
	*o = FormDefinitionFileUploadResponse(varFormDefinitionFileUploadResponse)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "created")
		delete(additionalProperties, "fileId")
		delete(additionalProperties, "formDefinitionId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFormDefinitionFileUploadResponse struct {
	value *FormDefinitionFileUploadResponse
	isSet bool
}

func (v NullableFormDefinitionFileUploadResponse) Get() *FormDefinitionFileUploadResponse {
	return v.value
}

func (v *NullableFormDefinitionFileUploadResponse) Set(val *FormDefinitionFileUploadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFormDefinitionFileUploadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFormDefinitionFileUploadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFormDefinitionFileUploadResponse(val *FormDefinitionFileUploadResponse) *NullableFormDefinitionFileUploadResponse {
	return &NullableFormDefinitionFileUploadResponse{value: val, isSet: true}
}

func (v NullableFormDefinitionFileUploadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFormDefinitionFileUploadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


