/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	"fmt"
)

// IdentityAttributesChangedChangesInnerNewValue - The value of the identity attribute after it changed.
type IdentityAttributesChangedChangesInnerNewValue struct {
	ArrayOfString *[]string
	Bool *bool
	MapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue *map[string]IdentityAttributesChangedChangesInnerOldValueOneOfValue
	String *string
}

// []stringAsIdentityAttributesChangedChangesInnerNewValue is a convenience function that returns []string wrapped in IdentityAttributesChangedChangesInnerNewValue
func ArrayOfStringAsIdentityAttributesChangedChangesInnerNewValue(v *[]string) IdentityAttributesChangedChangesInnerNewValue {
	return IdentityAttributesChangedChangesInnerNewValue{
		ArrayOfString: v,
	}
}

// boolAsIdentityAttributesChangedChangesInnerNewValue is a convenience function that returns bool wrapped in IdentityAttributesChangedChangesInnerNewValue
func BoolAsIdentityAttributesChangedChangesInnerNewValue(v *bool) IdentityAttributesChangedChangesInnerNewValue {
	return IdentityAttributesChangedChangesInnerNewValue{
		Bool: v,
	}
}

// map[string]IdentityAttributesChangedChangesInnerOldValueOneOfValueAsIdentityAttributesChangedChangesInnerNewValue is a convenience function that returns map[string]IdentityAttributesChangedChangesInnerOldValueOneOfValue wrapped in IdentityAttributesChangedChangesInnerNewValue
func MapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValueAsIdentityAttributesChangedChangesInnerNewValue(v *map[string]IdentityAttributesChangedChangesInnerOldValueOneOfValue) IdentityAttributesChangedChangesInnerNewValue {
	return IdentityAttributesChangedChangesInnerNewValue{
		MapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue: v,
	}
}

// stringAsIdentityAttributesChangedChangesInnerNewValue is a convenience function that returns string wrapped in IdentityAttributesChangedChangesInnerNewValue
func StringAsIdentityAttributesChangedChangesInnerNewValue(v *string) IdentityAttributesChangedChangesInnerNewValue {
	return IdentityAttributesChangedChangesInnerNewValue{
		String: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *IdentityAttributesChangedChangesInnerNewValue) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ArrayOfString
	err = newStrictDecoder(data).Decode(&dst.ArrayOfString)
	if err == nil {
		jsonArrayOfString, _ := json.Marshal(dst.ArrayOfString)
		if string(jsonArrayOfString) == "{}" { // empty struct
			dst.ArrayOfString = nil
		} else {
			match++
		}
	} else {
		dst.ArrayOfString = nil
	}

	// try to unmarshal data into Bool
	err = newStrictDecoder(data).Decode(&dst.Bool)
	if err == nil {
		jsonBool, _ := json.Marshal(dst.Bool)
		if string(jsonBool) == "{}" { // empty struct
			dst.Bool = nil
		} else {
			match++
		}
	} else {
		dst.Bool = nil
	}

	// try to unmarshal data into MapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue
	err = newStrictDecoder(data).Decode(&dst.MapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue)
	if err == nil {
		jsonMapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue, _ := json.Marshal(dst.MapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue)
		if string(jsonMapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue) == "{}" { // empty struct
			dst.MapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue = nil
		} else {
			match++
		}
	} else {
		dst.MapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue = nil
	}

	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			match++
		}
	} else {
		dst.String = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ArrayOfString = nil
		dst.Bool = nil
		dst.MapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue = nil
		dst.String = nil

		return fmt.Errorf("data matches more than one schema in oneOf(IdentityAttributesChangedChangesInnerNewValue)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(IdentityAttributesChangedChangesInnerNewValue)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src IdentityAttributesChangedChangesInnerNewValue) MarshalJSON() ([]byte, error) {
	if src.ArrayOfString != nil {
		return json.Marshal(&src.ArrayOfString)
	}

	if src.Bool != nil {
		return json.Marshal(&src.Bool)
	}

	if src.MapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue != nil {
		return json.Marshal(&src.MapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *IdentityAttributesChangedChangesInnerNewValue) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ArrayOfString != nil {
		return obj.ArrayOfString
	}

	if obj.Bool != nil {
		return obj.Bool
	}

	if obj.MapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue != nil {
		return obj.MapmapOfStringIdentityAttributesChangedChangesInnerOldValueOneOfValue
	}

	if obj.String != nil {
		return obj.String
	}

	// all schemas are nil
	return nil
}

type NullableIdentityAttributesChangedChangesInnerNewValue struct {
	value *IdentityAttributesChangedChangesInnerNewValue
	isSet bool
}

func (v NullableIdentityAttributesChangedChangesInnerNewValue) Get() *IdentityAttributesChangedChangesInnerNewValue {
	return v.value
}

func (v *NullableIdentityAttributesChangedChangesInnerNewValue) Set(val *IdentityAttributesChangedChangesInnerNewValue) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityAttributesChangedChangesInnerNewValue) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityAttributesChangedChangesInnerNewValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityAttributesChangedChangesInnerNewValue(val *IdentityAttributesChangedChangesInnerNewValue) *NullableIdentityAttributesChangedChangesInnerNewValue {
	return &NullableIdentityAttributesChangedChangesInnerNewValue{value: val, isSet: true}
}

func (v NullableIdentityAttributesChangedChangesInnerNewValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityAttributesChangedChangesInnerNewValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


