/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the ListPredefinedSelectOptionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPredefinedSelectOptionsResponse{}

// ListPredefinedSelectOptionsResponse struct for ListPredefinedSelectOptionsResponse
type ListPredefinedSelectOptionsResponse struct {
	// Results holds a list of PreDefinedSelectOption items
	Results []string `json:"results,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListPredefinedSelectOptionsResponse ListPredefinedSelectOptionsResponse

// NewListPredefinedSelectOptionsResponse instantiates a new ListPredefinedSelectOptionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPredefinedSelectOptionsResponse() *ListPredefinedSelectOptionsResponse {
	this := ListPredefinedSelectOptionsResponse{}
	return &this
}

// NewListPredefinedSelectOptionsResponseWithDefaults instantiates a new ListPredefinedSelectOptionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPredefinedSelectOptionsResponseWithDefaults() *ListPredefinedSelectOptionsResponse {
	this := ListPredefinedSelectOptionsResponse{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *ListPredefinedSelectOptionsResponse) GetResults() []string {
	if o == nil || isNil(o.Results) {
		var ret []string
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPredefinedSelectOptionsResponse) GetResultsOk() ([]string, bool) {
	if o == nil || isNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *ListPredefinedSelectOptionsResponse) HasResults() bool {
	if o != nil && !isNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []string and assigns it to the Results field.
func (o *ListPredefinedSelectOptionsResponse) SetResults(v []string) {
	o.Results = v
}

func (o ListPredefinedSelectOptionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPredefinedSelectOptionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Results) {
		toSerialize["results"] = o.Results
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListPredefinedSelectOptionsResponse) UnmarshalJSON(bytes []byte) (err error) {
	varListPredefinedSelectOptionsResponse := _ListPredefinedSelectOptionsResponse{}

	if err = json.Unmarshal(bytes, &varListPredefinedSelectOptionsResponse); err == nil {
	*o = ListPredefinedSelectOptionsResponse(varListPredefinedSelectOptionsResponse)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "results")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListPredefinedSelectOptionsResponse struct {
	value *ListPredefinedSelectOptionsResponse
	isSet bool
}

func (v NullableListPredefinedSelectOptionsResponse) Get() *ListPredefinedSelectOptionsResponse {
	return v.value
}

func (v *NullableListPredefinedSelectOptionsResponse) Set(val *ListPredefinedSelectOptionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListPredefinedSelectOptionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListPredefinedSelectOptionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPredefinedSelectOptionsResponse(val *ListPredefinedSelectOptionsResponse) *NullableListPredefinedSelectOptionsResponse {
	return &NullableListPredefinedSelectOptionsResponse{value: val, isSet: true}
}

func (v NullableListPredefinedSelectOptionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPredefinedSelectOptionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


