/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the AccessRequestResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessRequestResponse{}

// AccessRequestResponse struct for AccessRequestResponse
type AccessRequestResponse struct {
	// the requester Id
	RequesterId *string `json:"requesterId,omitempty"`
	// the requesterName
	RequesterName *string `json:"requesterName,omitempty"`
	Items []AccessRequestItemResponse `json:"items,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccessRequestResponse AccessRequestResponse

// NewAccessRequestResponse instantiates a new AccessRequestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessRequestResponse() *AccessRequestResponse {
	this := AccessRequestResponse{}
	return &this
}

// NewAccessRequestResponseWithDefaults instantiates a new AccessRequestResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessRequestResponseWithDefaults() *AccessRequestResponse {
	this := AccessRequestResponse{}
	return &this
}

// GetRequesterId returns the RequesterId field value if set, zero value otherwise.
func (o *AccessRequestResponse) GetRequesterId() string {
	if o == nil || isNil(o.RequesterId) {
		var ret string
		return ret
	}
	return *o.RequesterId
}

// GetRequesterIdOk returns a tuple with the RequesterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRequestResponse) GetRequesterIdOk() (*string, bool) {
	if o == nil || isNil(o.RequesterId) {
		return nil, false
	}
	return o.RequesterId, true
}

// HasRequesterId returns a boolean if a field has been set.
func (o *AccessRequestResponse) HasRequesterId() bool {
	if o != nil && !isNil(o.RequesterId) {
		return true
	}

	return false
}

// SetRequesterId gets a reference to the given string and assigns it to the RequesterId field.
func (o *AccessRequestResponse) SetRequesterId(v string) {
	o.RequesterId = &v
}

// GetRequesterName returns the RequesterName field value if set, zero value otherwise.
func (o *AccessRequestResponse) GetRequesterName() string {
	if o == nil || isNil(o.RequesterName) {
		var ret string
		return ret
	}
	return *o.RequesterName
}

// GetRequesterNameOk returns a tuple with the RequesterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRequestResponse) GetRequesterNameOk() (*string, bool) {
	if o == nil || isNil(o.RequesterName) {
		return nil, false
	}
	return o.RequesterName, true
}

// HasRequesterName returns a boolean if a field has been set.
func (o *AccessRequestResponse) HasRequesterName() bool {
	if o != nil && !isNil(o.RequesterName) {
		return true
	}

	return false
}

// SetRequesterName gets a reference to the given string and assigns it to the RequesterName field.
func (o *AccessRequestResponse) SetRequesterName(v string) {
	o.RequesterName = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *AccessRequestResponse) GetItems() []AccessRequestItemResponse {
	if o == nil || isNil(o.Items) {
		var ret []AccessRequestItemResponse
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRequestResponse) GetItemsOk() ([]AccessRequestItemResponse, bool) {
	if o == nil || isNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *AccessRequestResponse) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []AccessRequestItemResponse and assigns it to the Items field.
func (o *AccessRequestResponse) SetItems(v []AccessRequestItemResponse) {
	o.Items = v
}

func (o AccessRequestResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessRequestResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RequesterId) {
		toSerialize["requesterId"] = o.RequesterId
	}
	if !isNil(o.RequesterName) {
		toSerialize["requesterName"] = o.RequesterName
	}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccessRequestResponse) UnmarshalJSON(bytes []byte) (err error) {
	varAccessRequestResponse := _AccessRequestResponse{}

	if err = json.Unmarshal(bytes, &varAccessRequestResponse); err == nil {
	*o = AccessRequestResponse(varAccessRequestResponse)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "requesterId")
		delete(additionalProperties, "requesterName")
		delete(additionalProperties, "items")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccessRequestResponse struct {
	value *AccessRequestResponse
	isSet bool
}

func (v NullableAccessRequestResponse) Get() *AccessRequestResponse {
	return v.value
}

func (v *NullableAccessRequestResponse) Set(val *AccessRequestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessRequestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessRequestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessRequestResponse(val *AccessRequestResponse) *NullableAccessRequestResponse {
	return &NullableAccessRequestResponse{value: val, isSet: true}
}

func (v NullableAccessRequestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessRequestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


