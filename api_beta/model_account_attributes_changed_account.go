/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	"fmt"
)

// checks if the AccountAttributesChangedAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountAttributesChangedAccount{}

// AccountAttributesChangedAccount Details of the account where the attributes changed.
type AccountAttributesChangedAccount struct {
	// SailPoint generated unique identifier.
	Id string `json:"id"`
	// The source's unique identifier for the account. UUID is generated by the source system.
	Uuid NullableString `json:"uuid"`
	// Name of the account.
	Name string `json:"name"`
	// Unique ID of the account on the source.
	NativeIdentity string `json:"nativeIdentity"`
	// The type of the account
	Type map[string]interface{} `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _AccountAttributesChangedAccount AccountAttributesChangedAccount

// NewAccountAttributesChangedAccount instantiates a new AccountAttributesChangedAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountAttributesChangedAccount(id string, uuid NullableString, name string, nativeIdentity string, type_ map[string]interface{}) *AccountAttributesChangedAccount {
	this := AccountAttributesChangedAccount{}
	this.Id = id
	this.Uuid = uuid
	this.Name = name
	this.NativeIdentity = nativeIdentity
	this.Type = type_
	return &this
}

// NewAccountAttributesChangedAccountWithDefaults instantiates a new AccountAttributesChangedAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountAttributesChangedAccountWithDefaults() *AccountAttributesChangedAccount {
	this := AccountAttributesChangedAccount{}
	return &this
}

// GetId returns the Id field value
func (o *AccountAttributesChangedAccount) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccountAttributesChangedAccount) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccountAttributesChangedAccount) SetId(v string) {
	o.Id = v
}

// GetUuid returns the Uuid field value
// If the value is explicit nil, the zero value for string will be returned
func (o *AccountAttributesChangedAccount) GetUuid() string {
	if o == nil || o.Uuid.Get() == nil {
		var ret string
		return ret
	}

	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountAttributesChangedAccount) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// SetUuid sets field value
func (o *AccountAttributesChangedAccount) SetUuid(v string) {
	o.Uuid.Set(&v)
}

// GetName returns the Name field value
func (o *AccountAttributesChangedAccount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AccountAttributesChangedAccount) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AccountAttributesChangedAccount) SetName(v string) {
	o.Name = v
}

// GetNativeIdentity returns the NativeIdentity field value
func (o *AccountAttributesChangedAccount) GetNativeIdentity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NativeIdentity
}

// GetNativeIdentityOk returns a tuple with the NativeIdentity field value
// and a boolean to check if the value has been set.
func (o *AccountAttributesChangedAccount) GetNativeIdentityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NativeIdentity, true
}

// SetNativeIdentity sets field value
func (o *AccountAttributesChangedAccount) SetNativeIdentity(v string) {
	o.NativeIdentity = v
}

// GetType returns the Type field value
func (o *AccountAttributesChangedAccount) GetType() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AccountAttributesChangedAccount) GetTypeOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Type, true
}

// SetType sets field value
func (o *AccountAttributesChangedAccount) SetType(v map[string]interface{}) {
	o.Type = v
}

func (o AccountAttributesChangedAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountAttributesChangedAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["uuid"] = o.Uuid.Get()
	toSerialize["name"] = o.Name
	toSerialize["nativeIdentity"] = o.NativeIdentity
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountAttributesChangedAccount) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"uuid",
		"name",
		"nativeIdentity",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountAttributesChangedAccount := _AccountAttributesChangedAccount{}

	if err = json.Unmarshal(bytes, &varAccountAttributesChangedAccount); err == nil {
	*o = AccountAttributesChangedAccount(varAccountAttributesChangedAccount)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "name")
		delete(additionalProperties, "nativeIdentity")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountAttributesChangedAccount struct {
	value *AccountAttributesChangedAccount
	isSet bool
}

func (v NullableAccountAttributesChangedAccount) Get() *AccountAttributesChangedAccount {
	return v.value
}

func (v *NullableAccountAttributesChangedAccount) Set(val *AccountAttributesChangedAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountAttributesChangedAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountAttributesChangedAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountAttributesChangedAccount(val *AccountAttributesChangedAccount) *NullableAccountAttributesChangedAccount {
	return &NullableAccountAttributesChangedAccount{value: val, isSet: true}
}

func (v NullableAccountAttributesChangedAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountAttributesChangedAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


