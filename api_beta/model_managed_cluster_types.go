/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	"fmt"
)

// ManagedClusterTypes The Type of Cluster
type ManagedClusterTypes string

// List of ManagedClusterTypes
const (
	MANAGEDCLUSTERTYPES_IDN ManagedClusterTypes = "idn"
	MANAGEDCLUSTERTYPES_IAI ManagedClusterTypes = "iai"
)

// All allowed values of ManagedClusterTypes enum
var AllowedManagedClusterTypesEnumValues = []ManagedClusterTypes{
	"idn",
	"iai",
}

func (v *ManagedClusterTypes) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ManagedClusterTypes(value)
	for _, existing := range AllowedManagedClusterTypesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ManagedClusterTypes", value)
}

// NewManagedClusterTypesFromValue returns a pointer to a valid ManagedClusterTypes
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewManagedClusterTypesFromValue(v string) (*ManagedClusterTypes, error) {
	ev := ManagedClusterTypes(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ManagedClusterTypes: valid values are %v", v, AllowedManagedClusterTypesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ManagedClusterTypes) IsValid() bool {
	for _, existing := range AllowedManagedClusterTypesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ManagedClusterTypes value
func (v ManagedClusterTypes) Ptr() *ManagedClusterTypes {
	return &v
}

type NullableManagedClusterTypes struct {
	value *ManagedClusterTypes
	isSet bool
}

func (v NullableManagedClusterTypes) Get() *ManagedClusterTypes {
	return v.value
}

func (v *NullableManagedClusterTypes) Set(val *ManagedClusterTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedClusterTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedClusterTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedClusterTypes(val *ManagedClusterTypes) *NullableManagedClusterTypes {
	return &NullableManagedClusterTypes{value: val, isSet: true}
}

func (v NullableManagedClusterTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedClusterTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

