/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the IdentityAssociationDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityAssociationDetails{}

// IdentityAssociationDetails struct for IdentityAssociationDetails
type IdentityAssociationDetails struct {
	// any additional context information of the http call result
	Message *string `json:"message,omitempty"`
	// list of all the resource associations for the identity
	AssociationDetails []IdentityAssociationDetailsAssociationDetailsInner `json:"associationDetails,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IdentityAssociationDetails IdentityAssociationDetails

// NewIdentityAssociationDetails instantiates a new IdentityAssociationDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityAssociationDetails() *IdentityAssociationDetails {
	this := IdentityAssociationDetails{}
	return &this
}

// NewIdentityAssociationDetailsWithDefaults instantiates a new IdentityAssociationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityAssociationDetailsWithDefaults() *IdentityAssociationDetails {
	this := IdentityAssociationDetails{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *IdentityAssociationDetails) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityAssociationDetails) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *IdentityAssociationDetails) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *IdentityAssociationDetails) SetMessage(v string) {
	o.Message = &v
}

// GetAssociationDetails returns the AssociationDetails field value if set, zero value otherwise.
func (o *IdentityAssociationDetails) GetAssociationDetails() []IdentityAssociationDetailsAssociationDetailsInner {
	if o == nil || isNil(o.AssociationDetails) {
		var ret []IdentityAssociationDetailsAssociationDetailsInner
		return ret
	}
	return o.AssociationDetails
}

// GetAssociationDetailsOk returns a tuple with the AssociationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityAssociationDetails) GetAssociationDetailsOk() ([]IdentityAssociationDetailsAssociationDetailsInner, bool) {
	if o == nil || isNil(o.AssociationDetails) {
		return nil, false
	}
	return o.AssociationDetails, true
}

// HasAssociationDetails returns a boolean if a field has been set.
func (o *IdentityAssociationDetails) HasAssociationDetails() bool {
	if o != nil && !isNil(o.AssociationDetails) {
		return true
	}

	return false
}

// SetAssociationDetails gets a reference to the given []IdentityAssociationDetailsAssociationDetailsInner and assigns it to the AssociationDetails field.
func (o *IdentityAssociationDetails) SetAssociationDetails(v []IdentityAssociationDetailsAssociationDetailsInner) {
	o.AssociationDetails = v
}

func (o IdentityAssociationDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityAssociationDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !isNil(o.AssociationDetails) {
		toSerialize["associationDetails"] = o.AssociationDetails
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IdentityAssociationDetails) UnmarshalJSON(bytes []byte) (err error) {
	varIdentityAssociationDetails := _IdentityAssociationDetails{}

	if err = json.Unmarshal(bytes, &varIdentityAssociationDetails); err == nil {
	*o = IdentityAssociationDetails(varIdentityAssociationDetails)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "message")
		delete(additionalProperties, "associationDetails")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIdentityAssociationDetails struct {
	value *IdentityAssociationDetails
	isSet bool
}

func (v NullableIdentityAssociationDetails) Get() *IdentityAssociationDetails {
	return v.value
}

func (v *NullableIdentityAssociationDetails) Set(val *IdentityAssociationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityAssociationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityAssociationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityAssociationDetails(val *IdentityAssociationDetails) *NullableIdentityAssociationDetails {
	return &NullableIdentityAssociationDetails{value: val, isSet: true}
}

func (v NullableIdentityAssociationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityAssociationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


