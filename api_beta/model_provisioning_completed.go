/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	"fmt"
)

// checks if the ProvisioningCompleted type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisioningCompleted{}

// ProvisioningCompleted struct for ProvisioningCompleted
type ProvisioningCompleted struct {
	// The reference number of the provisioning request. Useful for tracking status in the Account Activity search interface.
	TrackingNumber string `json:"trackingNumber"`
	// One or more sources that the provisioning transaction(s) were done against.  Sources are comma separated.
	Sources string `json:"sources"`
	// Origin of where the provisioning request came from.
	Action NullableString `json:"action,omitempty"`
	// A list of any accumulated error messages that occurred during provisioning.
	Errors []string `json:"errors,omitempty"`
	// A list of any accumulated warning messages that occurred during provisioning.
	Warnings []string `json:"warnings,omitempty"`
	Recipient ProvisioningCompletedRecipient `json:"recipient"`
	Requester NullableProvisioningCompletedRequester `json:"requester,omitempty"`
	// A list of provisioning instructions to perform on an account-by-account basis.
	AccountRequests []ProvisioningCompletedAccountRequestsInner `json:"accountRequests"`
	AdditionalProperties map[string]interface{}
}

type _ProvisioningCompleted ProvisioningCompleted

// NewProvisioningCompleted instantiates a new ProvisioningCompleted object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningCompleted(trackingNumber string, sources string, recipient ProvisioningCompletedRecipient, accountRequests []ProvisioningCompletedAccountRequestsInner) *ProvisioningCompleted {
	this := ProvisioningCompleted{}
	this.TrackingNumber = trackingNumber
	this.Sources = sources
	this.Recipient = recipient
	this.AccountRequests = accountRequests
	return &this
}

// NewProvisioningCompletedWithDefaults instantiates a new ProvisioningCompleted object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningCompletedWithDefaults() *ProvisioningCompleted {
	this := ProvisioningCompleted{}
	return &this
}

// GetTrackingNumber returns the TrackingNumber field value
func (o *ProvisioningCompleted) GetTrackingNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TrackingNumber
}

// GetTrackingNumberOk returns a tuple with the TrackingNumber field value
// and a boolean to check if the value has been set.
func (o *ProvisioningCompleted) GetTrackingNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrackingNumber, true
}

// SetTrackingNumber sets field value
func (o *ProvisioningCompleted) SetTrackingNumber(v string) {
	o.TrackingNumber = v
}

// GetSources returns the Sources field value
func (o *ProvisioningCompleted) GetSources() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value
// and a boolean to check if the value has been set.
func (o *ProvisioningCompleted) GetSourcesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sources, true
}

// SetSources sets field value
func (o *ProvisioningCompleted) SetSources(v string) {
	o.Sources = v
}

// GetAction returns the Action field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningCompleted) GetAction() string {
	if o == nil || isNil(o.Action.Get()) {
		var ret string
		return ret
	}
	return *o.Action.Get()
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningCompleted) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Action.Get(), o.Action.IsSet()
}

// HasAction returns a boolean if a field has been set.
func (o *ProvisioningCompleted) HasAction() bool {
	if o != nil && o.Action.IsSet() {
		return true
	}

	return false
}

// SetAction gets a reference to the given NullableString and assigns it to the Action field.
func (o *ProvisioningCompleted) SetAction(v string) {
	o.Action.Set(&v)
}
// SetActionNil sets the value for Action to be an explicit nil
func (o *ProvisioningCompleted) SetActionNil() {
	o.Action.Set(nil)
}

// UnsetAction ensures that no value is present for Action, not even an explicit nil
func (o *ProvisioningCompleted) UnsetAction() {
	o.Action.Unset()
}

// GetErrors returns the Errors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningCompleted) GetErrors() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningCompleted) GetErrorsOk() ([]string, bool) {
	if o == nil || isNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ProvisioningCompleted) HasErrors() bool {
	if o != nil && isNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *ProvisioningCompleted) SetErrors(v []string) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningCompleted) GetWarnings() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningCompleted) GetWarningsOk() ([]string, bool) {
	if o == nil || isNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ProvisioningCompleted) HasWarnings() bool {
	if o != nil && isNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []string and assigns it to the Warnings field.
func (o *ProvisioningCompleted) SetWarnings(v []string) {
	o.Warnings = v
}

// GetRecipient returns the Recipient field value
func (o *ProvisioningCompleted) GetRecipient() ProvisioningCompletedRecipient {
	if o == nil {
		var ret ProvisioningCompletedRecipient
		return ret
	}

	return o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value
// and a boolean to check if the value has been set.
func (o *ProvisioningCompleted) GetRecipientOk() (*ProvisioningCompletedRecipient, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recipient, true
}

// SetRecipient sets field value
func (o *ProvisioningCompleted) SetRecipient(v ProvisioningCompletedRecipient) {
	o.Recipient = v
}

// GetRequester returns the Requester field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProvisioningCompleted) GetRequester() ProvisioningCompletedRequester {
	if o == nil || isNil(o.Requester.Get()) {
		var ret ProvisioningCompletedRequester
		return ret
	}
	return *o.Requester.Get()
}

// GetRequesterOk returns a tuple with the Requester field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProvisioningCompleted) GetRequesterOk() (*ProvisioningCompletedRequester, bool) {
	if o == nil {
		return nil, false
	}
	return o.Requester.Get(), o.Requester.IsSet()
}

// HasRequester returns a boolean if a field has been set.
func (o *ProvisioningCompleted) HasRequester() bool {
	if o != nil && o.Requester.IsSet() {
		return true
	}

	return false
}

// SetRequester gets a reference to the given NullableProvisioningCompletedRequester and assigns it to the Requester field.
func (o *ProvisioningCompleted) SetRequester(v ProvisioningCompletedRequester) {
	o.Requester.Set(&v)
}
// SetRequesterNil sets the value for Requester to be an explicit nil
func (o *ProvisioningCompleted) SetRequesterNil() {
	o.Requester.Set(nil)
}

// UnsetRequester ensures that no value is present for Requester, not even an explicit nil
func (o *ProvisioningCompleted) UnsetRequester() {
	o.Requester.Unset()
}

// GetAccountRequests returns the AccountRequests field value
func (o *ProvisioningCompleted) GetAccountRequests() []ProvisioningCompletedAccountRequestsInner {
	if o == nil {
		var ret []ProvisioningCompletedAccountRequestsInner
		return ret
	}

	return o.AccountRequests
}

// GetAccountRequestsOk returns a tuple with the AccountRequests field value
// and a boolean to check if the value has been set.
func (o *ProvisioningCompleted) GetAccountRequestsOk() ([]ProvisioningCompletedAccountRequestsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountRequests, true
}

// SetAccountRequests sets field value
func (o *ProvisioningCompleted) SetAccountRequests(v []ProvisioningCompletedAccountRequestsInner) {
	o.AccountRequests = v
}

func (o ProvisioningCompleted) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisioningCompleted) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["trackingNumber"] = o.TrackingNumber
	toSerialize["sources"] = o.Sources
	if o.Action.IsSet() {
		toSerialize["action"] = o.Action.Get()
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	toSerialize["recipient"] = o.Recipient
	if o.Requester.IsSet() {
		toSerialize["requester"] = o.Requester.Get()
	}
	toSerialize["accountRequests"] = o.AccountRequests

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ProvisioningCompleted) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"trackingNumber",
		"sources",
		"recipient",
		"accountRequests",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProvisioningCompleted := _ProvisioningCompleted{}

	if err = json.Unmarshal(bytes, &varProvisioningCompleted); err == nil {
	*o = ProvisioningCompleted(varProvisioningCompleted)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "trackingNumber")
		delete(additionalProperties, "sources")
		delete(additionalProperties, "action")
		delete(additionalProperties, "errors")
		delete(additionalProperties, "warnings")
		delete(additionalProperties, "recipient")
		delete(additionalProperties, "requester")
		delete(additionalProperties, "accountRequests")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableProvisioningCompleted struct {
	value *ProvisioningCompleted
	isSet bool
}

func (v NullableProvisioningCompleted) Get() *ProvisioningCompleted {
	return v.value
}

func (v *NullableProvisioningCompleted) Set(val *ProvisioningCompleted) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningCompleted) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningCompleted) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningCompleted(val *ProvisioningCompleted) *NullableProvisioningCompleted {
	return &NullableProvisioningCompleted{value: val, isSet: true}
}

func (v NullableProvisioningCompleted) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningCompleted) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


