/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the KbaAuthResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KbaAuthResponse{}

// KbaAuthResponse struct for KbaAuthResponse
type KbaAuthResponse struct {
	KbaAuthResponseItems []KbaAuthResponseItem `json:"kbaAuthResponseItems,omitempty"`
	// MFA Authentication status
	Status *string `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _KbaAuthResponse KbaAuthResponse

// NewKbaAuthResponse instantiates a new KbaAuthResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKbaAuthResponse() *KbaAuthResponse {
	this := KbaAuthResponse{}
	return &this
}

// NewKbaAuthResponseWithDefaults instantiates a new KbaAuthResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKbaAuthResponseWithDefaults() *KbaAuthResponse {
	this := KbaAuthResponse{}
	return &this
}

// GetKbaAuthResponseItems returns the KbaAuthResponseItems field value if set, zero value otherwise.
func (o *KbaAuthResponse) GetKbaAuthResponseItems() []KbaAuthResponseItem {
	if o == nil || isNil(o.KbaAuthResponseItems) {
		var ret []KbaAuthResponseItem
		return ret
	}
	return o.KbaAuthResponseItems
}

// GetKbaAuthResponseItemsOk returns a tuple with the KbaAuthResponseItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KbaAuthResponse) GetKbaAuthResponseItemsOk() ([]KbaAuthResponseItem, bool) {
	if o == nil || isNil(o.KbaAuthResponseItems) {
		return nil, false
	}
	return o.KbaAuthResponseItems, true
}

// HasKbaAuthResponseItems returns a boolean if a field has been set.
func (o *KbaAuthResponse) HasKbaAuthResponseItems() bool {
	if o != nil && !isNil(o.KbaAuthResponseItems) {
		return true
	}

	return false
}

// SetKbaAuthResponseItems gets a reference to the given []KbaAuthResponseItem and assigns it to the KbaAuthResponseItems field.
func (o *KbaAuthResponse) SetKbaAuthResponseItems(v []KbaAuthResponseItem) {
	o.KbaAuthResponseItems = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KbaAuthResponse) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KbaAuthResponse) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KbaAuthResponse) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *KbaAuthResponse) SetStatus(v string) {
	o.Status = &v
}

func (o KbaAuthResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KbaAuthResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.KbaAuthResponseItems) {
		toSerialize["kbaAuthResponseItems"] = o.KbaAuthResponseItems
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KbaAuthResponse) UnmarshalJSON(bytes []byte) (err error) {
	varKbaAuthResponse := _KbaAuthResponse{}

	if err = json.Unmarshal(bytes, &varKbaAuthResponse); err == nil {
	*o = KbaAuthResponse(varKbaAuthResponse)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "kbaAuthResponseItems")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKbaAuthResponse struct {
	value *KbaAuthResponse
	isSet bool
}

func (v NullableKbaAuthResponse) Get() *KbaAuthResponse {
	return v.value
}

func (v *NullableKbaAuthResponse) Set(val *KbaAuthResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKbaAuthResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKbaAuthResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKbaAuthResponse(val *KbaAuthResponse) *NullableKbaAuthResponse {
	return &NullableKbaAuthResponse{value: val, isSet: true}
}

func (v NullableKbaAuthResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKbaAuthResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


