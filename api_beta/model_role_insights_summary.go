/*
Identity Security Cloud Beta API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	"time"
)

// checks if the RoleInsightsSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleInsightsSummary{}

// RoleInsightsSummary struct for RoleInsightsSummary
type RoleInsightsSummary struct {
	// Total number of roles with updates
	NumberOfUpdates *int32 `json:"numberOfUpdates,omitempty"`
	// The date-time role insights were last found.
	LastGenerated *time.Time `json:"lastGenerated,omitempty"`
	// The number of entitlements included in roles (vs free radicals).
	EntitlementsIncludedInRoles *int32 `json:"entitlementsIncludedInRoles,omitempty"`
	// The total number of entitlements.
	TotalNumberOfEntitlements *int32 `json:"totalNumberOfEntitlements,omitempty"`
	// The number of identities in roles vs. identities with just entitlements and not in roles.
	IdentitiesWithAccessViaRoles *int32 `json:"identitiesWithAccessViaRoles,omitempty"`
	// The total number of identities.
	TotalNumberOfIdentities *int32 `json:"totalNumberOfIdentities,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RoleInsightsSummary RoleInsightsSummary

// NewRoleInsightsSummary instantiates a new RoleInsightsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleInsightsSummary() *RoleInsightsSummary {
	this := RoleInsightsSummary{}
	return &this
}

// NewRoleInsightsSummaryWithDefaults instantiates a new RoleInsightsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleInsightsSummaryWithDefaults() *RoleInsightsSummary {
	this := RoleInsightsSummary{}
	return &this
}

// GetNumberOfUpdates returns the NumberOfUpdates field value if set, zero value otherwise.
func (o *RoleInsightsSummary) GetNumberOfUpdates() int32 {
	if o == nil || IsNil(o.NumberOfUpdates) {
		var ret int32
		return ret
	}
	return *o.NumberOfUpdates
}

// GetNumberOfUpdatesOk returns a tuple with the NumberOfUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleInsightsSummary) GetNumberOfUpdatesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfUpdates) {
		return nil, false
	}
	return o.NumberOfUpdates, true
}

// HasNumberOfUpdates returns a boolean if a field has been set.
func (o *RoleInsightsSummary) HasNumberOfUpdates() bool {
	if o != nil && !IsNil(o.NumberOfUpdates) {
		return true
	}

	return false
}

// SetNumberOfUpdates gets a reference to the given int32 and assigns it to the NumberOfUpdates field.
func (o *RoleInsightsSummary) SetNumberOfUpdates(v int32) {
	o.NumberOfUpdates = &v
}

// GetLastGenerated returns the LastGenerated field value if set, zero value otherwise.
func (o *RoleInsightsSummary) GetLastGenerated() time.Time {
	if o == nil || IsNil(o.LastGenerated) {
		var ret time.Time
		return ret
	}
	return *o.LastGenerated
}

// GetLastGeneratedOk returns a tuple with the LastGenerated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleInsightsSummary) GetLastGeneratedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastGenerated) {
		return nil, false
	}
	return o.LastGenerated, true
}

// HasLastGenerated returns a boolean if a field has been set.
func (o *RoleInsightsSummary) HasLastGenerated() bool {
	if o != nil && !IsNil(o.LastGenerated) {
		return true
	}

	return false
}

// SetLastGenerated gets a reference to the given time.Time and assigns it to the LastGenerated field.
func (o *RoleInsightsSummary) SetLastGenerated(v time.Time) {
	o.LastGenerated = &v
}

// GetEntitlementsIncludedInRoles returns the EntitlementsIncludedInRoles field value if set, zero value otherwise.
func (o *RoleInsightsSummary) GetEntitlementsIncludedInRoles() int32 {
	if o == nil || IsNil(o.EntitlementsIncludedInRoles) {
		var ret int32
		return ret
	}
	return *o.EntitlementsIncludedInRoles
}

// GetEntitlementsIncludedInRolesOk returns a tuple with the EntitlementsIncludedInRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleInsightsSummary) GetEntitlementsIncludedInRolesOk() (*int32, bool) {
	if o == nil || IsNil(o.EntitlementsIncludedInRoles) {
		return nil, false
	}
	return o.EntitlementsIncludedInRoles, true
}

// HasEntitlementsIncludedInRoles returns a boolean if a field has been set.
func (o *RoleInsightsSummary) HasEntitlementsIncludedInRoles() bool {
	if o != nil && !IsNil(o.EntitlementsIncludedInRoles) {
		return true
	}

	return false
}

// SetEntitlementsIncludedInRoles gets a reference to the given int32 and assigns it to the EntitlementsIncludedInRoles field.
func (o *RoleInsightsSummary) SetEntitlementsIncludedInRoles(v int32) {
	o.EntitlementsIncludedInRoles = &v
}

// GetTotalNumberOfEntitlements returns the TotalNumberOfEntitlements field value if set, zero value otherwise.
func (o *RoleInsightsSummary) GetTotalNumberOfEntitlements() int32 {
	if o == nil || IsNil(o.TotalNumberOfEntitlements) {
		var ret int32
		return ret
	}
	return *o.TotalNumberOfEntitlements
}

// GetTotalNumberOfEntitlementsOk returns a tuple with the TotalNumberOfEntitlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleInsightsSummary) GetTotalNumberOfEntitlementsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalNumberOfEntitlements) {
		return nil, false
	}
	return o.TotalNumberOfEntitlements, true
}

// HasTotalNumberOfEntitlements returns a boolean if a field has been set.
func (o *RoleInsightsSummary) HasTotalNumberOfEntitlements() bool {
	if o != nil && !IsNil(o.TotalNumberOfEntitlements) {
		return true
	}

	return false
}

// SetTotalNumberOfEntitlements gets a reference to the given int32 and assigns it to the TotalNumberOfEntitlements field.
func (o *RoleInsightsSummary) SetTotalNumberOfEntitlements(v int32) {
	o.TotalNumberOfEntitlements = &v
}

// GetIdentitiesWithAccessViaRoles returns the IdentitiesWithAccessViaRoles field value if set, zero value otherwise.
func (o *RoleInsightsSummary) GetIdentitiesWithAccessViaRoles() int32 {
	if o == nil || IsNil(o.IdentitiesWithAccessViaRoles) {
		var ret int32
		return ret
	}
	return *o.IdentitiesWithAccessViaRoles
}

// GetIdentitiesWithAccessViaRolesOk returns a tuple with the IdentitiesWithAccessViaRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleInsightsSummary) GetIdentitiesWithAccessViaRolesOk() (*int32, bool) {
	if o == nil || IsNil(o.IdentitiesWithAccessViaRoles) {
		return nil, false
	}
	return o.IdentitiesWithAccessViaRoles, true
}

// HasIdentitiesWithAccessViaRoles returns a boolean if a field has been set.
func (o *RoleInsightsSummary) HasIdentitiesWithAccessViaRoles() bool {
	if o != nil && !IsNil(o.IdentitiesWithAccessViaRoles) {
		return true
	}

	return false
}

// SetIdentitiesWithAccessViaRoles gets a reference to the given int32 and assigns it to the IdentitiesWithAccessViaRoles field.
func (o *RoleInsightsSummary) SetIdentitiesWithAccessViaRoles(v int32) {
	o.IdentitiesWithAccessViaRoles = &v
}

// GetTotalNumberOfIdentities returns the TotalNumberOfIdentities field value if set, zero value otherwise.
func (o *RoleInsightsSummary) GetTotalNumberOfIdentities() int32 {
	if o == nil || IsNil(o.TotalNumberOfIdentities) {
		var ret int32
		return ret
	}
	return *o.TotalNumberOfIdentities
}

// GetTotalNumberOfIdentitiesOk returns a tuple with the TotalNumberOfIdentities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleInsightsSummary) GetTotalNumberOfIdentitiesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalNumberOfIdentities) {
		return nil, false
	}
	return o.TotalNumberOfIdentities, true
}

// HasTotalNumberOfIdentities returns a boolean if a field has been set.
func (o *RoleInsightsSummary) HasTotalNumberOfIdentities() bool {
	if o != nil && !IsNil(o.TotalNumberOfIdentities) {
		return true
	}

	return false
}

// SetTotalNumberOfIdentities gets a reference to the given int32 and assigns it to the TotalNumberOfIdentities field.
func (o *RoleInsightsSummary) SetTotalNumberOfIdentities(v int32) {
	o.TotalNumberOfIdentities = &v
}

func (o RoleInsightsSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleInsightsSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NumberOfUpdates) {
		toSerialize["numberOfUpdates"] = o.NumberOfUpdates
	}
	if !IsNil(o.LastGenerated) {
		toSerialize["lastGenerated"] = o.LastGenerated
	}
	if !IsNil(o.EntitlementsIncludedInRoles) {
		toSerialize["entitlementsIncludedInRoles"] = o.EntitlementsIncludedInRoles
	}
	if !IsNil(o.TotalNumberOfEntitlements) {
		toSerialize["totalNumberOfEntitlements"] = o.TotalNumberOfEntitlements
	}
	if !IsNil(o.IdentitiesWithAccessViaRoles) {
		toSerialize["identitiesWithAccessViaRoles"] = o.IdentitiesWithAccessViaRoles
	}
	if !IsNil(o.TotalNumberOfIdentities) {
		toSerialize["totalNumberOfIdentities"] = o.TotalNumberOfIdentities
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RoleInsightsSummary) UnmarshalJSON(data []byte) (err error) {
	varRoleInsightsSummary := _RoleInsightsSummary{}

	err = json.Unmarshal(data, &varRoleInsightsSummary)

	if err != nil {
		return err
	}

	*o = RoleInsightsSummary(varRoleInsightsSummary)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "numberOfUpdates")
		delete(additionalProperties, "lastGenerated")
		delete(additionalProperties, "entitlementsIncludedInRoles")
		delete(additionalProperties, "totalNumberOfEntitlements")
		delete(additionalProperties, "identitiesWithAccessViaRoles")
		delete(additionalProperties, "totalNumberOfIdentities")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRoleInsightsSummary struct {
	value *RoleInsightsSummary
	isSet bool
}

func (v NullableRoleInsightsSummary) Get() *RoleInsightsSummary {
	return v.value
}

func (v *NullableRoleInsightsSummary) Set(val *RoleInsightsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleInsightsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleInsightsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleInsightsSummary(val *RoleInsightsSummary) *NullableRoleInsightsSummary {
	return &NullableRoleInsightsSummary{value: val, isSet: true}
}

func (v NullableRoleInsightsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleInsightsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


