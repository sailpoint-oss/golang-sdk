/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the ManagedClusterKeyPair type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedClusterKeyPair{}

// ManagedClusterKeyPair Managed Cluster key pair for Cluster
type ManagedClusterKeyPair struct {
	// ManagedCluster publicKey
	PublicKey NullableString `json:"publicKey,omitempty"`
	// ManagedCluster publicKeyThumbprint
	PublicKeyThumbprint NullableString `json:"publicKeyThumbprint,omitempty"`
	// ManagedCluster publicKeyCertificate
	PublicKeyCertificate NullableString `json:"publicKeyCertificate,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ManagedClusterKeyPair ManagedClusterKeyPair

// NewManagedClusterKeyPair instantiates a new ManagedClusterKeyPair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedClusterKeyPair() *ManagedClusterKeyPair {
	this := ManagedClusterKeyPair{}
	return &this
}

// NewManagedClusterKeyPairWithDefaults instantiates a new ManagedClusterKeyPair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedClusterKeyPairWithDefaults() *ManagedClusterKeyPair {
	this := ManagedClusterKeyPair{}
	return &this
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedClusterKeyPair) GetPublicKey() string {
	if o == nil || isNil(o.PublicKey.Get()) {
		var ret string
		return ret
	}
	return *o.PublicKey.Get()
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedClusterKeyPair) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicKey.Get(), o.PublicKey.IsSet()
}

// HasPublicKey returns a boolean if a field has been set.
func (o *ManagedClusterKeyPair) HasPublicKey() bool {
	if o != nil && o.PublicKey.IsSet() {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given NullableString and assigns it to the PublicKey field.
func (o *ManagedClusterKeyPair) SetPublicKey(v string) {
	o.PublicKey.Set(&v)
}
// SetPublicKeyNil sets the value for PublicKey to be an explicit nil
func (o *ManagedClusterKeyPair) SetPublicKeyNil() {
	o.PublicKey.Set(nil)
}

// UnsetPublicKey ensures that no value is present for PublicKey, not even an explicit nil
func (o *ManagedClusterKeyPair) UnsetPublicKey() {
	o.PublicKey.Unset()
}

// GetPublicKeyThumbprint returns the PublicKeyThumbprint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedClusterKeyPair) GetPublicKeyThumbprint() string {
	if o == nil || isNil(o.PublicKeyThumbprint.Get()) {
		var ret string
		return ret
	}
	return *o.PublicKeyThumbprint.Get()
}

// GetPublicKeyThumbprintOk returns a tuple with the PublicKeyThumbprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedClusterKeyPair) GetPublicKeyThumbprintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicKeyThumbprint.Get(), o.PublicKeyThumbprint.IsSet()
}

// HasPublicKeyThumbprint returns a boolean if a field has been set.
func (o *ManagedClusterKeyPair) HasPublicKeyThumbprint() bool {
	if o != nil && o.PublicKeyThumbprint.IsSet() {
		return true
	}

	return false
}

// SetPublicKeyThumbprint gets a reference to the given NullableString and assigns it to the PublicKeyThumbprint field.
func (o *ManagedClusterKeyPair) SetPublicKeyThumbprint(v string) {
	o.PublicKeyThumbprint.Set(&v)
}
// SetPublicKeyThumbprintNil sets the value for PublicKeyThumbprint to be an explicit nil
func (o *ManagedClusterKeyPair) SetPublicKeyThumbprintNil() {
	o.PublicKeyThumbprint.Set(nil)
}

// UnsetPublicKeyThumbprint ensures that no value is present for PublicKeyThumbprint, not even an explicit nil
func (o *ManagedClusterKeyPair) UnsetPublicKeyThumbprint() {
	o.PublicKeyThumbprint.Unset()
}

// GetPublicKeyCertificate returns the PublicKeyCertificate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedClusterKeyPair) GetPublicKeyCertificate() string {
	if o == nil || isNil(o.PublicKeyCertificate.Get()) {
		var ret string
		return ret
	}
	return *o.PublicKeyCertificate.Get()
}

// GetPublicKeyCertificateOk returns a tuple with the PublicKeyCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedClusterKeyPair) GetPublicKeyCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicKeyCertificate.Get(), o.PublicKeyCertificate.IsSet()
}

// HasPublicKeyCertificate returns a boolean if a field has been set.
func (o *ManagedClusterKeyPair) HasPublicKeyCertificate() bool {
	if o != nil && o.PublicKeyCertificate.IsSet() {
		return true
	}

	return false
}

// SetPublicKeyCertificate gets a reference to the given NullableString and assigns it to the PublicKeyCertificate field.
func (o *ManagedClusterKeyPair) SetPublicKeyCertificate(v string) {
	o.PublicKeyCertificate.Set(&v)
}
// SetPublicKeyCertificateNil sets the value for PublicKeyCertificate to be an explicit nil
func (o *ManagedClusterKeyPair) SetPublicKeyCertificateNil() {
	o.PublicKeyCertificate.Set(nil)
}

// UnsetPublicKeyCertificate ensures that no value is present for PublicKeyCertificate, not even an explicit nil
func (o *ManagedClusterKeyPair) UnsetPublicKeyCertificate() {
	o.PublicKeyCertificate.Unset()
}

func (o ManagedClusterKeyPair) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedClusterKeyPair) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PublicKey.IsSet() {
		toSerialize["publicKey"] = o.PublicKey.Get()
	}
	if o.PublicKeyThumbprint.IsSet() {
		toSerialize["publicKeyThumbprint"] = o.PublicKeyThumbprint.Get()
	}
	if o.PublicKeyCertificate.IsSet() {
		toSerialize["publicKeyCertificate"] = o.PublicKeyCertificate.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ManagedClusterKeyPair) UnmarshalJSON(bytes []byte) (err error) {
	varManagedClusterKeyPair := _ManagedClusterKeyPair{}

	if err = json.Unmarshal(bytes, &varManagedClusterKeyPair); err == nil {
	*o = ManagedClusterKeyPair(varManagedClusterKeyPair)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "publicKey")
		delete(additionalProperties, "publicKeyThumbprint")
		delete(additionalProperties, "publicKeyCertificate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableManagedClusterKeyPair struct {
	value *ManagedClusterKeyPair
	isSet bool
}

func (v NullableManagedClusterKeyPair) Get() *ManagedClusterKeyPair {
	return v.value
}

func (v *NullableManagedClusterKeyPair) Set(val *ManagedClusterKeyPair) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedClusterKeyPair) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedClusterKeyPair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedClusterKeyPair(val *ManagedClusterKeyPair) *NullableManagedClusterKeyPair {
	return &NullableManagedClusterKeyPair{value: val, isSet: true}
}

func (v NullableManagedClusterKeyPair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedClusterKeyPair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


