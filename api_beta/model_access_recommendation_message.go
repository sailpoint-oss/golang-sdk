/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the AccessRecommendationMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessRecommendationMessage{}

// AccessRecommendationMessage struct for AccessRecommendationMessage
type AccessRecommendationMessage struct {
	// Information about why the access item was recommended.
	Interpretation *string `json:"interpretation,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccessRecommendationMessage AccessRecommendationMessage

// NewAccessRecommendationMessage instantiates a new AccessRecommendationMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessRecommendationMessage() *AccessRecommendationMessage {
	this := AccessRecommendationMessage{}
	return &this
}

// NewAccessRecommendationMessageWithDefaults instantiates a new AccessRecommendationMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessRecommendationMessageWithDefaults() *AccessRecommendationMessage {
	this := AccessRecommendationMessage{}
	return &this
}

// GetInterpretation returns the Interpretation field value if set, zero value otherwise.
func (o *AccessRecommendationMessage) GetInterpretation() string {
	if o == nil || isNil(o.Interpretation) {
		var ret string
		return ret
	}
	return *o.Interpretation
}

// GetInterpretationOk returns a tuple with the Interpretation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRecommendationMessage) GetInterpretationOk() (*string, bool) {
	if o == nil || isNil(o.Interpretation) {
		return nil, false
	}
	return o.Interpretation, true
}

// HasInterpretation returns a boolean if a field has been set.
func (o *AccessRecommendationMessage) HasInterpretation() bool {
	if o != nil && !isNil(o.Interpretation) {
		return true
	}

	return false
}

// SetInterpretation gets a reference to the given string and assigns it to the Interpretation field.
func (o *AccessRecommendationMessage) SetInterpretation(v string) {
	o.Interpretation = &v
}

func (o AccessRecommendationMessage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessRecommendationMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Interpretation) {
		toSerialize["interpretation"] = o.Interpretation
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccessRecommendationMessage) UnmarshalJSON(bytes []byte) (err error) {
	varAccessRecommendationMessage := _AccessRecommendationMessage{}

	if err = json.Unmarshal(bytes, &varAccessRecommendationMessage); err == nil {
	*o = AccessRecommendationMessage(varAccessRecommendationMessage)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "interpretation")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccessRecommendationMessage struct {
	value *AccessRecommendationMessage
	isSet bool
}

func (v NullableAccessRecommendationMessage) Get() *AccessRecommendationMessage {
	return v.value
}

func (v *NullableAccessRecommendationMessage) Set(val *AccessRecommendationMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessRecommendationMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessRecommendationMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessRecommendationMessage(val *AccessRecommendationMessage) *NullableAccessRecommendationMessage {
	return &NullableAccessRecommendationMessage{value: val, isSet: true}
}

func (v NullableAccessRecommendationMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessRecommendationMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


