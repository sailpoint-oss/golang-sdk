/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the RecommendationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecommendationResponse{}

// RecommendationResponse struct for RecommendationResponse
type RecommendationResponse struct {
	Request *RecommendationRequest `json:"request,omitempty"`
	// The recommendation - YES if the access is recommended, NO if not recommended, MAYBE if there is not enough information to make a recommendation, NOT_FOUND if the identity is not found in the system
	Recommendation *string `json:"recommendation,omitempty"`
	// The list of interpretations explaining the recommendation. The array is empty if includeInterpretations is false or not present in the request. e.g. - [ \"Not approved in the last 6 months.\" ]. Interpretations will be translated using the client's locale as found in the Accept-Language header. If a translation for the client's locale cannot be found, the US English translation will be returned.
	Interpretations []string `json:"interpretations,omitempty"`
	// The list of translation messages, if they have been requested.
	TranslationMessages []TranslationMessage `json:"translationMessages,omitempty"`
	RecommenderCalculations *RecommenderCalculations `json:"recommenderCalculations,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RecommendationResponse RecommendationResponse

// NewRecommendationResponse instantiates a new RecommendationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecommendationResponse() *RecommendationResponse {
	this := RecommendationResponse{}
	return &this
}

// NewRecommendationResponseWithDefaults instantiates a new RecommendationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecommendationResponseWithDefaults() *RecommendationResponse {
	this := RecommendationResponse{}
	return &this
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *RecommendationResponse) GetRequest() RecommendationRequest {
	if o == nil || isNil(o.Request) {
		var ret RecommendationRequest
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationResponse) GetRequestOk() (*RecommendationRequest, bool) {
	if o == nil || isNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *RecommendationResponse) HasRequest() bool {
	if o != nil && !isNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given RecommendationRequest and assigns it to the Request field.
func (o *RecommendationResponse) SetRequest(v RecommendationRequest) {
	o.Request = &v
}

// GetRecommendation returns the Recommendation field value if set, zero value otherwise.
func (o *RecommendationResponse) GetRecommendation() string {
	if o == nil || isNil(o.Recommendation) {
		var ret string
		return ret
	}
	return *o.Recommendation
}

// GetRecommendationOk returns a tuple with the Recommendation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationResponse) GetRecommendationOk() (*string, bool) {
	if o == nil || isNil(o.Recommendation) {
		return nil, false
	}
	return o.Recommendation, true
}

// HasRecommendation returns a boolean if a field has been set.
func (o *RecommendationResponse) HasRecommendation() bool {
	if o != nil && !isNil(o.Recommendation) {
		return true
	}

	return false
}

// SetRecommendation gets a reference to the given string and assigns it to the Recommendation field.
func (o *RecommendationResponse) SetRecommendation(v string) {
	o.Recommendation = &v
}

// GetInterpretations returns the Interpretations field value if set, zero value otherwise.
func (o *RecommendationResponse) GetInterpretations() []string {
	if o == nil || isNil(o.Interpretations) {
		var ret []string
		return ret
	}
	return o.Interpretations
}

// GetInterpretationsOk returns a tuple with the Interpretations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationResponse) GetInterpretationsOk() ([]string, bool) {
	if o == nil || isNil(o.Interpretations) {
		return nil, false
	}
	return o.Interpretations, true
}

// HasInterpretations returns a boolean if a field has been set.
func (o *RecommendationResponse) HasInterpretations() bool {
	if o != nil && !isNil(o.Interpretations) {
		return true
	}

	return false
}

// SetInterpretations gets a reference to the given []string and assigns it to the Interpretations field.
func (o *RecommendationResponse) SetInterpretations(v []string) {
	o.Interpretations = v
}

// GetTranslationMessages returns the TranslationMessages field value if set, zero value otherwise.
func (o *RecommendationResponse) GetTranslationMessages() []TranslationMessage {
	if o == nil || isNil(o.TranslationMessages) {
		var ret []TranslationMessage
		return ret
	}
	return o.TranslationMessages
}

// GetTranslationMessagesOk returns a tuple with the TranslationMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationResponse) GetTranslationMessagesOk() ([]TranslationMessage, bool) {
	if o == nil || isNil(o.TranslationMessages) {
		return nil, false
	}
	return o.TranslationMessages, true
}

// HasTranslationMessages returns a boolean if a field has been set.
func (o *RecommendationResponse) HasTranslationMessages() bool {
	if o != nil && !isNil(o.TranslationMessages) {
		return true
	}

	return false
}

// SetTranslationMessages gets a reference to the given []TranslationMessage and assigns it to the TranslationMessages field.
func (o *RecommendationResponse) SetTranslationMessages(v []TranslationMessage) {
	o.TranslationMessages = v
}

// GetRecommenderCalculations returns the RecommenderCalculations field value if set, zero value otherwise.
func (o *RecommendationResponse) GetRecommenderCalculations() RecommenderCalculations {
	if o == nil || isNil(o.RecommenderCalculations) {
		var ret RecommenderCalculations
		return ret
	}
	return *o.RecommenderCalculations
}

// GetRecommenderCalculationsOk returns a tuple with the RecommenderCalculations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationResponse) GetRecommenderCalculationsOk() (*RecommenderCalculations, bool) {
	if o == nil || isNil(o.RecommenderCalculations) {
		return nil, false
	}
	return o.RecommenderCalculations, true
}

// HasRecommenderCalculations returns a boolean if a field has been set.
func (o *RecommendationResponse) HasRecommenderCalculations() bool {
	if o != nil && !isNil(o.RecommenderCalculations) {
		return true
	}

	return false
}

// SetRecommenderCalculations gets a reference to the given RecommenderCalculations and assigns it to the RecommenderCalculations field.
func (o *RecommendationResponse) SetRecommenderCalculations(v RecommenderCalculations) {
	o.RecommenderCalculations = &v
}

func (o RecommendationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecommendationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !isNil(o.Recommendation) {
		toSerialize["recommendation"] = o.Recommendation
	}
	if !isNil(o.Interpretations) {
		toSerialize["interpretations"] = o.Interpretations
	}
	if !isNil(o.TranslationMessages) {
		toSerialize["translationMessages"] = o.TranslationMessages
	}
	if !isNil(o.RecommenderCalculations) {
		toSerialize["recommenderCalculations"] = o.RecommenderCalculations
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RecommendationResponse) UnmarshalJSON(bytes []byte) (err error) {
	varRecommendationResponse := _RecommendationResponse{}

	if err = json.Unmarshal(bytes, &varRecommendationResponse); err == nil {
	*o = RecommendationResponse(varRecommendationResponse)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "request")
		delete(additionalProperties, "recommendation")
		delete(additionalProperties, "interpretations")
		delete(additionalProperties, "translationMessages")
		delete(additionalProperties, "recommenderCalculations")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRecommendationResponse struct {
	value *RecommendationResponse
	isSet bool
}

func (v NullableRecommendationResponse) Get() *RecommendationResponse {
	return v.value
}

func (v *NullableRecommendationResponse) Set(val *RecommendationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRecommendationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRecommendationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecommendationResponse(val *RecommendationResponse) *NullableRecommendationResponse {
	return &NullableRecommendationResponse{value: val, isSet: true}
}

func (v NullableRecommendationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecommendationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


