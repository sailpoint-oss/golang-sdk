/*
Identity Security Cloud Beta API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ManagedClient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedClient{}

// ManagedClient Managed Client
type ManagedClient struct {
	// ManagedClient ID
	Id *string `json:"id,omitempty"`
	// ManagedClient alert key
	AlertKey *string `json:"alertKey,omitempty"`
	// ManagedClient gateway base url
	ApiGatewayBaseUrl *string `json:"apiGatewayBaseUrl,omitempty"`
	// Previous CC ID to be used in data migration. (This field will be deleted after CC migration!)
	CcId *int64 `json:"ccId,omitempty"`
	// The client ID used in API management
	ClientId string `json:"clientId"`
	// Cluster ID that the ManagedClient is linked to
	ClusterId string `json:"clusterId"`
	// VA cookbook
	Cookbook *string `json:"cookbook,omitempty"`
	// ManagedClient description
	Description string `json:"description"`
	// The public IP address of the ManagedClient
	IpAddress *string `json:"ipAddress,omitempty"`
	// When the ManagedClient was last seen by the server
	LastSeen *time.Time `json:"lastSeen,omitempty"`
	// ManagedClient name
	Name *string `json:"name,omitempty"`
	// Milliseconds since the ManagedClient has polled the server
	SinceLastSeen *string `json:"sinceLastSeen,omitempty"`
	// Status of the ManagedClient
	Status *ManagedClientStatusEnum `json:"status,omitempty"`
	// Type of the ManagedClient (VA, CCG)
	Type string `json:"type"`
	// ManagedClient VA download URL
	VaDownloadUrl *string `json:"vaDownloadUrl,omitempty"`
	// Version that the ManagedClient's VA is running
	VaVersion *string `json:"vaVersion,omitempty"`
	// Client's apiKey
	Secret *string `json:"secret,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ManagedClient ManagedClient

// NewManagedClient instantiates a new ManagedClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedClient(clientId string, clusterId string, description string, type_ string) *ManagedClient {
	this := ManagedClient{}
	this.ClientId = clientId
	this.ClusterId = clusterId
	this.Description = description
	this.Type = type_
	return &this
}

// NewManagedClientWithDefaults instantiates a new ManagedClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedClientWithDefaults() *ManagedClient {
	this := ManagedClient{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ManagedClient) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ManagedClient) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ManagedClient) SetId(v string) {
	o.Id = &v
}

// GetAlertKey returns the AlertKey field value if set, zero value otherwise.
func (o *ManagedClient) GetAlertKey() string {
	if o == nil || IsNil(o.AlertKey) {
		var ret string
		return ret
	}
	return *o.AlertKey
}

// GetAlertKeyOk returns a tuple with the AlertKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetAlertKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AlertKey) {
		return nil, false
	}
	return o.AlertKey, true
}

// HasAlertKey returns a boolean if a field has been set.
func (o *ManagedClient) HasAlertKey() bool {
	if o != nil && !IsNil(o.AlertKey) {
		return true
	}

	return false
}

// SetAlertKey gets a reference to the given string and assigns it to the AlertKey field.
func (o *ManagedClient) SetAlertKey(v string) {
	o.AlertKey = &v
}

// GetApiGatewayBaseUrl returns the ApiGatewayBaseUrl field value if set, zero value otherwise.
func (o *ManagedClient) GetApiGatewayBaseUrl() string {
	if o == nil || IsNil(o.ApiGatewayBaseUrl) {
		var ret string
		return ret
	}
	return *o.ApiGatewayBaseUrl
}

// GetApiGatewayBaseUrlOk returns a tuple with the ApiGatewayBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetApiGatewayBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApiGatewayBaseUrl) {
		return nil, false
	}
	return o.ApiGatewayBaseUrl, true
}

// HasApiGatewayBaseUrl returns a boolean if a field has been set.
func (o *ManagedClient) HasApiGatewayBaseUrl() bool {
	if o != nil && !IsNil(o.ApiGatewayBaseUrl) {
		return true
	}

	return false
}

// SetApiGatewayBaseUrl gets a reference to the given string and assigns it to the ApiGatewayBaseUrl field.
func (o *ManagedClient) SetApiGatewayBaseUrl(v string) {
	o.ApiGatewayBaseUrl = &v
}

// GetCcId returns the CcId field value if set, zero value otherwise.
func (o *ManagedClient) GetCcId() int64 {
	if o == nil || IsNil(o.CcId) {
		var ret int64
		return ret
	}
	return *o.CcId
}

// GetCcIdOk returns a tuple with the CcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetCcIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CcId) {
		return nil, false
	}
	return o.CcId, true
}

// HasCcId returns a boolean if a field has been set.
func (o *ManagedClient) HasCcId() bool {
	if o != nil && !IsNil(o.CcId) {
		return true
	}

	return false
}

// SetCcId gets a reference to the given int64 and assigns it to the CcId field.
func (o *ManagedClient) SetCcId(v int64) {
	o.CcId = &v
}

// GetClientId returns the ClientId field value
func (o *ManagedClient) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *ManagedClient) SetClientId(v string) {
	o.ClientId = v
}

// GetClusterId returns the ClusterId field value
func (o *ManagedClient) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *ManagedClient) SetClusterId(v string) {
	o.ClusterId = v
}

// GetCookbook returns the Cookbook field value if set, zero value otherwise.
func (o *ManagedClient) GetCookbook() string {
	if o == nil || IsNil(o.Cookbook) {
		var ret string
		return ret
	}
	return *o.Cookbook
}

// GetCookbookOk returns a tuple with the Cookbook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetCookbookOk() (*string, bool) {
	if o == nil || IsNil(o.Cookbook) {
		return nil, false
	}
	return o.Cookbook, true
}

// HasCookbook returns a boolean if a field has been set.
func (o *ManagedClient) HasCookbook() bool {
	if o != nil && !IsNil(o.Cookbook) {
		return true
	}

	return false
}

// SetCookbook gets a reference to the given string and assigns it to the Cookbook field.
func (o *ManagedClient) SetCookbook(v string) {
	o.Cookbook = &v
}

// GetDescription returns the Description field value
func (o *ManagedClient) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ManagedClient) SetDescription(v string) {
	o.Description = v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *ManagedClient) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *ManagedClient) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *ManagedClient) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetLastSeen returns the LastSeen field value if set, zero value otherwise.
func (o *ManagedClient) GetLastSeen() time.Time {
	if o == nil || IsNil(o.LastSeen) {
		var ret time.Time
		return ret
	}
	return *o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetLastSeenOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSeen) {
		return nil, false
	}
	return o.LastSeen, true
}

// HasLastSeen returns a boolean if a field has been set.
func (o *ManagedClient) HasLastSeen() bool {
	if o != nil && !IsNil(o.LastSeen) {
		return true
	}

	return false
}

// SetLastSeen gets a reference to the given time.Time and assigns it to the LastSeen field.
func (o *ManagedClient) SetLastSeen(v time.Time) {
	o.LastSeen = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ManagedClient) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ManagedClient) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ManagedClient) SetName(v string) {
	o.Name = &v
}

// GetSinceLastSeen returns the SinceLastSeen field value if set, zero value otherwise.
func (o *ManagedClient) GetSinceLastSeen() string {
	if o == nil || IsNil(o.SinceLastSeen) {
		var ret string
		return ret
	}
	return *o.SinceLastSeen
}

// GetSinceLastSeenOk returns a tuple with the SinceLastSeen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetSinceLastSeenOk() (*string, bool) {
	if o == nil || IsNil(o.SinceLastSeen) {
		return nil, false
	}
	return o.SinceLastSeen, true
}

// HasSinceLastSeen returns a boolean if a field has been set.
func (o *ManagedClient) HasSinceLastSeen() bool {
	if o != nil && !IsNil(o.SinceLastSeen) {
		return true
	}

	return false
}

// SetSinceLastSeen gets a reference to the given string and assigns it to the SinceLastSeen field.
func (o *ManagedClient) SetSinceLastSeen(v string) {
	o.SinceLastSeen = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ManagedClient) GetStatus() ManagedClientStatusEnum {
	if o == nil || IsNil(o.Status) {
		var ret ManagedClientStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetStatusOk() (*ManagedClientStatusEnum, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ManagedClient) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ManagedClientStatusEnum and assigns it to the Status field.
func (o *ManagedClient) SetStatus(v ManagedClientStatusEnum) {
	o.Status = &v
}

// GetType returns the Type field value
func (o *ManagedClient) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ManagedClient) SetType(v string) {
	o.Type = v
}

// GetVaDownloadUrl returns the VaDownloadUrl field value if set, zero value otherwise.
func (o *ManagedClient) GetVaDownloadUrl() string {
	if o == nil || IsNil(o.VaDownloadUrl) {
		var ret string
		return ret
	}
	return *o.VaDownloadUrl
}

// GetVaDownloadUrlOk returns a tuple with the VaDownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetVaDownloadUrlOk() (*string, bool) {
	if o == nil || IsNil(o.VaDownloadUrl) {
		return nil, false
	}
	return o.VaDownloadUrl, true
}

// HasVaDownloadUrl returns a boolean if a field has been set.
func (o *ManagedClient) HasVaDownloadUrl() bool {
	if o != nil && !IsNil(o.VaDownloadUrl) {
		return true
	}

	return false
}

// SetVaDownloadUrl gets a reference to the given string and assigns it to the VaDownloadUrl field.
func (o *ManagedClient) SetVaDownloadUrl(v string) {
	o.VaDownloadUrl = &v
}

// GetVaVersion returns the VaVersion field value if set, zero value otherwise.
func (o *ManagedClient) GetVaVersion() string {
	if o == nil || IsNil(o.VaVersion) {
		var ret string
		return ret
	}
	return *o.VaVersion
}

// GetVaVersionOk returns a tuple with the VaVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetVaVersionOk() (*string, bool) {
	if o == nil || IsNil(o.VaVersion) {
		return nil, false
	}
	return o.VaVersion, true
}

// HasVaVersion returns a boolean if a field has been set.
func (o *ManagedClient) HasVaVersion() bool {
	if o != nil && !IsNil(o.VaVersion) {
		return true
	}

	return false
}

// SetVaVersion gets a reference to the given string and assigns it to the VaVersion field.
func (o *ManagedClient) SetVaVersion(v string) {
	o.VaVersion = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *ManagedClient) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClient) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *ManagedClient) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *ManagedClient) SetSecret(v string) {
	o.Secret = &v
}

func (o ManagedClient) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedClient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.AlertKey) {
		toSerialize["alertKey"] = o.AlertKey
	}
	if !IsNil(o.ApiGatewayBaseUrl) {
		toSerialize["apiGatewayBaseUrl"] = o.ApiGatewayBaseUrl
	}
	if !IsNil(o.CcId) {
		toSerialize["ccId"] = o.CcId
	}
	toSerialize["clientId"] = o.ClientId
	toSerialize["clusterId"] = o.ClusterId
	if !IsNil(o.Cookbook) {
		toSerialize["cookbook"] = o.Cookbook
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.LastSeen) {
		toSerialize["lastSeen"] = o.LastSeen
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SinceLastSeen) {
		toSerialize["sinceLastSeen"] = o.SinceLastSeen
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.VaDownloadUrl) {
		toSerialize["vaDownloadUrl"] = o.VaDownloadUrl
	}
	if !IsNil(o.VaVersion) {
		toSerialize["vaVersion"] = o.VaVersion
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ManagedClient) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clientId",
		"clusterId",
		"description",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManagedClient := _ManagedClient{}

	err = json.Unmarshal(data, &varManagedClient)

	if err != nil {
		return err
	}

	*o = ManagedClient(varManagedClient)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "alertKey")
		delete(additionalProperties, "apiGatewayBaseUrl")
		delete(additionalProperties, "ccId")
		delete(additionalProperties, "clientId")
		delete(additionalProperties, "clusterId")
		delete(additionalProperties, "cookbook")
		delete(additionalProperties, "description")
		delete(additionalProperties, "ipAddress")
		delete(additionalProperties, "lastSeen")
		delete(additionalProperties, "name")
		delete(additionalProperties, "sinceLastSeen")
		delete(additionalProperties, "status")
		delete(additionalProperties, "type")
		delete(additionalProperties, "vaDownloadUrl")
		delete(additionalProperties, "vaVersion")
		delete(additionalProperties, "secret")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableManagedClient struct {
	value *ManagedClient
	isSet bool
}

func (v NullableManagedClient) Get() *ManagedClient {
	return v.value
}

func (v *NullableManagedClient) Set(val *ManagedClient) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedClient) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedClient(val *ManagedClient) *NullableManagedClient {
	return &NullableManagedClient{value: val, isSet: true}
}

func (v NullableManagedClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


