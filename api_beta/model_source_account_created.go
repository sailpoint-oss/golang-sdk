/*
Identity Security Cloud Beta API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	"fmt"
)

// checks if the SourceAccountCreated type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SourceAccountCreated{}

// SourceAccountCreated struct for SourceAccountCreated
type SourceAccountCreated struct {
	// Identity's universal unique identifier (UUID) on the source. The source system generates the UUID.
	Uuid string `json:"uuid"`
	// SailPoint generated unique identifier.
	Id string `json:"id"`
	// Account's unique ID on the source.
	NativeIdentifier string `json:"nativeIdentifier"`
	// Source ID.
	SourceId string `json:"sourceId"`
	// Source name.
	SourceName string `json:"sourceName"`
	// ID of the identity correlated with the account.
	IdentityId string `json:"identityId"`
	// Name of the identity correlated with the account.
	IdentityName string `json:"identityName"`
	// Account attributes. The attributes' contents depend on the source's account schema.
	Attributes map[string]interface{} `json:"attributes"`
	AdditionalProperties map[string]interface{}
}

type _SourceAccountCreated SourceAccountCreated

// NewSourceAccountCreated instantiates a new SourceAccountCreated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceAccountCreated(uuid string, id string, nativeIdentifier string, sourceId string, sourceName string, identityId string, identityName string, attributes map[string]interface{}) *SourceAccountCreated {
	this := SourceAccountCreated{}
	this.Uuid = uuid
	this.Id = id
	this.NativeIdentifier = nativeIdentifier
	this.SourceId = sourceId
	this.SourceName = sourceName
	this.IdentityId = identityId
	this.IdentityName = identityName
	this.Attributes = attributes
	return &this
}

// NewSourceAccountCreatedWithDefaults instantiates a new SourceAccountCreated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceAccountCreatedWithDefaults() *SourceAccountCreated {
	this := SourceAccountCreated{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *SourceAccountCreated) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *SourceAccountCreated) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *SourceAccountCreated) SetUuid(v string) {
	o.Uuid = v
}

// GetId returns the Id field value
func (o *SourceAccountCreated) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SourceAccountCreated) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SourceAccountCreated) SetId(v string) {
	o.Id = v
}

// GetNativeIdentifier returns the NativeIdentifier field value
func (o *SourceAccountCreated) GetNativeIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NativeIdentifier
}

// GetNativeIdentifierOk returns a tuple with the NativeIdentifier field value
// and a boolean to check if the value has been set.
func (o *SourceAccountCreated) GetNativeIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NativeIdentifier, true
}

// SetNativeIdentifier sets field value
func (o *SourceAccountCreated) SetNativeIdentifier(v string) {
	o.NativeIdentifier = v
}

// GetSourceId returns the SourceId field value
func (o *SourceAccountCreated) GetSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value
// and a boolean to check if the value has been set.
func (o *SourceAccountCreated) GetSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceId, true
}

// SetSourceId sets field value
func (o *SourceAccountCreated) SetSourceId(v string) {
	o.SourceId = v
}

// GetSourceName returns the SourceName field value
func (o *SourceAccountCreated) GetSourceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceName
}

// GetSourceNameOk returns a tuple with the SourceName field value
// and a boolean to check if the value has been set.
func (o *SourceAccountCreated) GetSourceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceName, true
}

// SetSourceName sets field value
func (o *SourceAccountCreated) SetSourceName(v string) {
	o.SourceName = v
}

// GetIdentityId returns the IdentityId field value
func (o *SourceAccountCreated) GetIdentityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityId
}

// GetIdentityIdOk returns a tuple with the IdentityId field value
// and a boolean to check if the value has been set.
func (o *SourceAccountCreated) GetIdentityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityId, true
}

// SetIdentityId sets field value
func (o *SourceAccountCreated) SetIdentityId(v string) {
	o.IdentityId = v
}

// GetIdentityName returns the IdentityName field value
func (o *SourceAccountCreated) GetIdentityName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentityName
}

// GetIdentityNameOk returns a tuple with the IdentityName field value
// and a boolean to check if the value has been set.
func (o *SourceAccountCreated) GetIdentityNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentityName, true
}

// SetIdentityName sets field value
func (o *SourceAccountCreated) SetIdentityName(v string) {
	o.IdentityName = v
}

// GetAttributes returns the Attributes field value
func (o *SourceAccountCreated) GetAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *SourceAccountCreated) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// SetAttributes sets field value
func (o *SourceAccountCreated) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

func (o SourceAccountCreated) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SourceAccountCreated) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["uuid"] = o.Uuid
	toSerialize["id"] = o.Id
	toSerialize["nativeIdentifier"] = o.NativeIdentifier
	toSerialize["sourceId"] = o.SourceId
	toSerialize["sourceName"] = o.SourceName
	toSerialize["identityId"] = o.IdentityId
	toSerialize["identityName"] = o.IdentityName
	toSerialize["attributes"] = o.Attributes

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SourceAccountCreated) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"uuid",
		"id",
		"nativeIdentifier",
		"sourceId",
		"sourceName",
		"identityId",
		"identityName",
		"attributes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSourceAccountCreated := _SourceAccountCreated{}

	err = json.Unmarshal(data, &varSourceAccountCreated)

	if err != nil {
		return err
	}

	*o = SourceAccountCreated(varSourceAccountCreated)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "id")
		delete(additionalProperties, "nativeIdentifier")
		delete(additionalProperties, "sourceId")
		delete(additionalProperties, "sourceName")
		delete(additionalProperties, "identityId")
		delete(additionalProperties, "identityName")
		delete(additionalProperties, "attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSourceAccountCreated struct {
	value *SourceAccountCreated
	isSet bool
}

func (v NullableSourceAccountCreated) Get() *SourceAccountCreated {
	return v.value
}

func (v *NullableSourceAccountCreated) Set(val *SourceAccountCreated) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceAccountCreated) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceAccountCreated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceAccountCreated(val *SourceAccountCreated) *NullableSourceAccountCreated {
	return &NullableSourceAccountCreated{value: val, isSet: true}
}

func (v NullableSourceAccountCreated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceAccountCreated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


