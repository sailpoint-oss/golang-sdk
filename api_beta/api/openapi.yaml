openapi: 3.0.1
info:
  contact:
    name: Developer Relations
    url: https://developer.sailpoint.com/discuss/api-help
  description: "Use these APIs to interact with the IdentityNow platform to achieve\
    \ repeatable, automated processes with greater scalability. These APIs are in\
    \ beta and are subject to change. We encourage you to join the SailPoint Developer\
    \ Community forum at https://developer.sailpoint.com/discuss to connect with other\
    \ developers using our APIs."
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://developer.sailpoint.com/discuss/tos
  title: IdentityNow Beta API
  version: 3.1.0-beta
servers:
- description: This is the beta API server.
  url: "https://{tenant}.api.identitynow.com/beta"
  variables:
    tenant:
      default: sailpoint
      description: "This is the name of your tenant, typically your company's name."
- description: This is the beta API server.
  url: "https://{apiUrl}/beta"
  variables:
    apiUrl:
      default: sailpoint.api.identitynow.com
      description: This is the api url of your tenant
security:
- UserContextAuth: []
tags:
- description: |
    Use this API to implement and customize access profile functionality.
    With this functionality in place, administrators can create access profiles and configure them for use throughout IdentityNow, enabling users to get the access they need quickly and securely.

    Access profiles group entitlements, which represent access rights on sources.

    For example, an Active Directory source in IdentityNow can have multiple entitlements: the first, 'Employees,' may represent the access all employees have at the organization, and a second, 'Developers,' may represent the access all developers have at the organization.

    An administrator can then create a broader set of access in the form of an access profile, 'AD Developers' grouping the 'Employees' entitlement with the 'Developers' entitlement.

    When users only need Active Directory employee access, they can request access to the 'Employees' entitlement.

    When users need both Active Directory employee and developer access, they can request access to the 'AD Developers' access profile.

    Access profiles are the most important units of access in IdentityNow. IdentityNow uses access profiles in many features, including the following:

    - Provisioning: When you use the Provisioning Service, lifecycle states and roles both grant access to users in the form of access profiles.

    - Certifications: You can approve or revoke access profiles in certification campaigns, just like entitlements.

    - Access Requests: You can assign access profiles to applications, and when a user requests access to the app associated with an access profile and someone approves the request, access is granted to both the application and its associated access profile.

    - Roles: You can group one or more access profiles into a role to quickly assign access items based on an identity's role.

    In IdentityNow, administrators can use the Access drop-down menu and select Access Profiles to view, configure, and delete existing access profiles, as well as create new ones.
    Administrators can enable and disable an access profile, and they can also make the following configurations:

    - Manage Entitlements: Manage the profile's access by adding and removing entitlements.

    - Access Requests: Configure access profiles to be requestable and establish an approval process for any requests that the access profile be granted or revoked.
    Do not configure an access profile to be requestable without first establishing a secure access request approval process for the access profile.

    - Multiple Account Options: Define the logic IdentityNow uses to provision access to an identity with multiple accounts on the source.

    Refer to [Managing Access Profiles](https://documentation.sailpoint.com/saas/help/access/access-profiles.html) for more information about access profiles.
  name: Access Profiles
- description: |
    Use this API to implement and customize access request approval functionality.
    With this functionality in place, administrators can delegate qualified users to review users' requests for access or managers' requests to revoke team members' access to applications, entitlements, or roles.
    This enables more qualified users to review access requests and the others to spend their time on other tasks.

    In IdentityNow, users can request access to applications, entitlements, and roles, and managers can request that team members' access be revoked.
    For applications and entitlements, administrators can set access profiles to require approval from the access profile owner, the application owner, the source owner, the requesting user's manager, or a governance group for access to be granted or revoked.
    For roles, administrators can also set roles to allow access requests and require approval from the role owner, the requesting user's manager, or a governance group for access to be granted or revoked.
    If the administrator designates a governance group as the required approver, any governance group member can approve the requests.

    When a user submits an access request, IdentityNow sends the first required approver in the queue an email notification, based on the access request configuration's approval and reminder escalation configuration.

    In Approvals in IdentityNow, required approvers can view pending access requests under the Requested tab and approve or deny them, or the approvers can reassign the requests to different reviewers for approval.
    If the required approver approves the request and is the only reviewer required, IdentityNow grants or revokes access, based on the request.
    If multiple reviewers are required, IdentityNow sends the request to the next reviewer in the queue, based on the access request configuration's approval reminder and escalation configuration.
    The required approver can then view any completed access requests under the Reviewed tab.

    Refer to [Access Requests](https://documentation.sailpoint.com/saas/help/requests/index.html) for more information about access request approvals.
  name: Access Request Approvals
- description: |
    Use this API to implement and customize access request functionality.
    With this functionality in place, users can request access to applications, entitlements, or roles, and managers can request that team members' access be revoked.
    This allows users to get access to the tools they need quickly and securely, and it allows managers to take away access to those tools.

    IdentityNow's Access Request service allows end users to request access that requires approval before it can be granted to users and enables qualified users to review those requests and approve or deny them.

    In the Request Center in IdentityNow, users can view available applications, roles, and entitlements and request access to them.
    If the requested tools requires approval, the requests appear as 'Pending' under the My Requests tab until the required approver approves, rejects, or cancels them.

    Users can use My Requests to track and/or cancel the requests.

    In My Team on the IdentityNow Home, managers can submit requests to revoke their team members' access.
    They can use the My Requests tab under Request Center to track and/or cancel the requests.

    Refer to [Requesting Access](https://documentation.sailpoint.com/saas/user-help/requests/requesting_access.html) for more information about access requests.
  name: Access Requests
- description: |
    Use this API to implement account activity tracking functionality.
    With this functionality in place, users can track source account activity in IdentityNow, which greatly improves traceability in the system.

    An account activity refers to a log of each action performed on a source account. This is useful for auditing the changes that occur on an account throughout its life.
    In IdentityNow's Search, users can search for account activities and select the activity's row to get an overview of the activity's account action and view its progress, its involved sources, and its most basic metadata, such as the identity requesting the option and the recipient.

    Account activity includes most actions IdentityNow completes on source accounts. Users can search in IdentityNow for the following account action types:

    - Access Request: These include any access requests the source account is involved in.

    - Account Attribute Updates: These include updates to a single attribute on an account on a source.

    - Account State Update: These include locking or unlocking actions on an account on a source.

    - Certification: These include actions removing an entitlement from an account on a source as a result of the entitlement's revocation during a certification.

    - Cloud Automated `Lifecyclestate`: These include automated lifecycle state changes that result in a source account's correlated identity being assigned to a different lifecycle state.
    IdentityNow replaces the `Lifecyclestate` variable with the name of the lifecycle state it has moved the account's identity to.

    - Identity Attribute Update: These include updates to a source account's correlated identity attributes as the result of a provisioning action.
    When you update an identity attribute that also updates an identity's lifecycle state, the cloud automated `Lifecyclestate` event also displays.
    Account Activity does not include attribute updates that occur as a result of aggregation.

    - Identity Refresh: These include correlated identity refreshes that occur for an account on a source whenever the account's correlated identity profile gets a new role or updates.
    These also include refreshes that occur whenever IdentityNow assigns an application to the account's correlated identity based on the application's being assigned to All Users From Source or Specific Users From Source.

    - Lifecycle State Refresh: These include the actions that took place when a lifecycle state changed. This event only occurs after a cloud automated `Lifecyclestate` change or a lifecycle state change.

    - Lifecycle State Change: These include the account activities that result from an identity's manual assignment to a null lifecycle state.

    - Password Change: These include password changes on sources.

    Refer to [Account Activity](https://documentation.sailpoint.com/saas/help/search/index.html#account-activity) for more information about account activities.
  name: Account Activities
- description: |
    Use this API to implement account aggregation progress tracking functionality.
    With this functionality in place, administrators can view in-progress account aggregations, their statuses, and their relevant details.

    An account aggregation refers to the process IdentityNow uses to gather and load account data from a source into IdentityNow.

    Whenever IdentityNow is in the process of aggregating a source, it adds an entry to the Aggregation Activity Log, along with its relevant details.
    To view aggregation activity, administrators can select the Connections drop-down menu, select Sources, and select the relevant source, select its Import Data tab, and select Account Aggregation.
    In Account Aggregation, administrators can view the account aggregations' statuses and details in the Account Activity Log.

    Refer to [Loading Account Data](https://documentation.sailpoint.com/saas/help/accounts/loading_data.html) for more information about account aggregations.
  name: Account Aggregations
- description: |
    Use this API to implement account usage insight functionality.
    With this functionality in place, administrators can gather information and insights about how their tenants' source accounts are being used.
    This allows organizations to get the information they need to start optimizing and securing source account usage.
  name: Account Usages
- description: |
    Use this API to implement and customize account functionality.
    With this functionality in place, administrators can manage users' access across sources in IdentityNow.

    In IdentityNow, an account refers to a user's account on a supported source.
    This typically includes a unique identifier for the user, a unique password, a set of permissions associated with the source and a set of attributes. IdentityNow loads accounts through the creation of sources in IdentityNow.

    Administrators can correlate users' identities with the users' accounts on the different sources they use.
    This allows IdentityNow to govern the access of identities and all their correlated accounts securely and cohesively.

    To view the accounts on a source and their correlated identities, administrators can use the Connections drop-down menu, select Sources, select the relevant source, and select its Account tab.

    To view and edit source account statuses for an identity in IdentityNow, administrators can use the Identities drop-down menu, select Identity List, select the relevant identity, and select its Accounts tab.
    Administrators can toggle an account's Actions to aggregate the account, enable/disable it, unlock it, or remove it from the identity.

    Accounts can have the following statuses:

    - Enabled: The account is enabled. The user can access it.

    - Disabled: The account is disabled, and the user cannot access it, but the identity is not disabled in IdentityNow. This can occur when an administrator disables the account or when the user's lifecycle state changes.

    - Locked: The account is locked. This may occur when someone has entered an incorrect password for the account too many times.

    - Pending: The account is currently updating. This status typically lasts seconds.

    Administrators can select the source account to view its attributes, entitlements, and the last time the account's password was changed.

    Refer to [Managing User Accounts](https://documentation.sailpoint.com/saas/help/common/users/user_access.html#managing-user-accounts) for more information about accounts.
  name: Accounts
- description: |
    Use this API to implement certification campaign functionality.
    With this functionality in place, administrators can create, customize, and manage certification campaigns for their organizations' use.
    Certification campaigns provide IdentityNow users with an interactive review process they can use to identify and verify access to systems.
    Campaigns help organizations reduce risk of inappropriate access and satisfy audit requirements.

    A certification refers to IdentityNow's mechanism for reviewing a user's access to entitlements (sets of permissions) and approving or removing that access.
    These certifications serve as a way of showing that a user's access has been reviewed and approved.
    Multiple certifications by different reviewers are often required to approve a user's access.
    A set of multiple certifications is called a certification campaign.

    For example, an organization may use a Manager Certification campaign as a way of showing that a user's access has been reviewed and approved by multiple managers.
    Once this campaign has been completed, IdentityNow would provision all the access the user needs, nothing more.

    IdentityNow provides two simple campaign types users can create without using search queries, Manager and Source Owner campaigns:

    You can create these types of campaigns without using any search queries in IdentityNow:

    - ManagerCampaign: IdentityNow provides this campaign type as a way to ensure that an identity's access is certified by their managers.
    You only need to provide a name and description to create one.

    - Source Owner Campaign: IdentityNow provides this campaign type as a way to ensure that an identity's access to a source is certified by its source owners.
    You only need to provide a name and description to create one.
    You can specify the sources whose owners you want involved or just run it across all sources.

    For more information about these campaign types, refer to [Starting a Manager or Source Owner Campaign](https://documentation.sailpoint.com/saas/help/certs/starting_campaign.html).

    One useful way to create certification campaigns in IdentityNow is to use a specific search and then run a campaign on the results returned by that search.
    This allows you to be much more specific about whom you are certifying in your campaigns and what access you are certifying in your campaigns.
    For example, you can search for all identities who are managed by "Amanda.Ross" and also have the access to the "Accounting" role and then run a certification campaign based on that search to ensure that the returned identities are appropriately certified.

    You can use IdentityNow search queries to create these types of campaigns:

    - Identities: Use this campaign type to review and revoke access items for specific identities.
    You can either build a search query and create a campaign certifying all identities returned by that query, or you can search for individual identities and add those identities to the certification campaign.

    - Access Items: Use this campaign type to review and revoke a set of roles, access profiles, or entitlements from the identities that have them.
    You can either build a search query and create a campaign certifying all access items returned by that query, or you can search for individual access items and add those items to the certification campaign.

    - Role Composition: Use this campaign type to review a role's composition, including its title, description, and membership criteria.
    You can either build a search query and create a campaign certifying all roles returned by that query, or you can search for individual roles and add those roles to the certification campaign.

    - Uncorrelated Accounts: Use this campaign type to certify source accounts that aren't linked to an authoritative identity in IdentityNow.
    You can use this campaign type to view all the uncorrelated accounts for a source and certify them.

    For more information about search-based campaigns, refer to [Starting a Campaign from Search](https://documentation.sailpoint.com/saas/help/certs/starting_search_campaign.html).

    Once you have generated your campaign, it becomes available for preview.
    An administrator can review the campaign and make changes, or if it's ready and accurate, activate it.

    Once the campaign is active, organization administrators or certification administrators can designate other IdentityNow users as certification reviewers.
    Those reviewers can view any of the certifications they either need to review (active) or have already reviewed (completed).

    When a certification campaign is in progress, certification reviewers see the listed active certifications whose involved identities they can review.
    Reviewers can then make decisions to grant or revoke access, as well as reassign the ceritifcation to another reviewer. If the reviewer chooses this option, they must provide a reason for reassignment in the form of a comment.

    Once a reviewer has made decisions on all the certification's involved access items, he or she must "Sign Off" to complete the review process.
    Doing so converts the certification into read-only status, preventing any further changes to the review decisions and deleting the work item (task) from the reviewer's list of work items.

    Once all the reviewers have signed off, the certification campaign either completes or, if any reviewers decided to revoke access for any of the involved identities, it moves into a remediation phase.
    In the remediation phase, identities' entitlements are altered to remove any entitlements marked for revocation.
    In this situation, the certification campaign completes once all the remediation requests are completed.

    The end of a certification campaign is determined by its deadline, its completion status, or by an administrator's decision.

    For more information about certifications and certification campaigns, refer to [Certifications](https://documentation.sailpoint.com/saas/user-help/certifications.html).
  name: Certification Campaigns
- description: |
    Use this API to implement certification functionality.
    This API provides specific functionality that improves an organization's ability to manage its certification process.

    A certification refers to IdentityNow's mechanism for reviewing a user's access to entitlements (sets of permissions) and approving or removing that access.
    These certifications serve as a way of showing that a user's access has been reviewed and approved.
    Multiple certifications by different reviewers are often required to approve a user's access.
    A set of multiple certifications is called a certification campaign.

    For example, an organization may use a Manager Certification as a way of showing that a user's access has been reviewed and approved by their manager, or if the certification is part of a campaign, that the user's access has been reviewed and approved by multiple managers.
    Once this certification has been completed, IdentityNow  would provision all the access the user needs, nothing more.

    This API enables administrators and reviewers to get useful information about certifications at a high level, such as the reviewers involved, and at a more granular level, such as the permissions affected by changes to entitlements within those certifications.
    It also provides the useful ability to reassign identities and items within certifications to other reviewers, rather than [reassigning the entire certifications themselves](https://developer.sailpoint.com/idn/api/beta/submit-reassign-certs-async/).
  name: Certifications
- name: Connector Rule Management
- description: |
    Use this API to implement connector functionality.
    With this functionality in place, administrators can view available connectors.

    Connectors are the bridges IdentityNow uses to communicate with and aggregate data from sources.
    For example, if it is necessary to set up a connection between IdentityNow and the Active Directory source, a connector can bridge the two and enable IdentityNow to synchronize data between the systems.
    This ensures account entitlements and states are correct throughout the organization.

    In IdentityNow, administrators can use the Connections drop-down menu and select Sources to view the available source connectors.

    Refer to [IdentityNow Connectors](https://documentation.sailpoint.com/connectors/identitynow/landingpages/help/landingpages/identitynow_connectivity_landing.html) for more information about the connectors available in IdentityNow.

    Refer to [SaaS Connectivity](https://developer.sailpoint.com/idn/docs/saas-connectivity) for more information about the SaaS custom connectors that do not need VAs (virtual appliances) to communicate with their sources.

    Refer to [Managing Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html) for more information about using connectors in IdentityNow.
  name: Connectors
- description: |
    Use this API to build and manage custom forms.
    With this functionality in place, administrators can create and view form definitions and form instances.

    Forms are composed of sections and fields. Sections split the form into logical groups of fields and fields are the data collection points within the form. Configure conditions to modify elements of the form as the responder provides input. Create form inputs to pass information from a calling feature, like a workflow, to your form.

    Forms can be used within workflows as an action or as a trigger. The Form Action allows you to assign a form as a step in a running workflow, suspending the workflow until the form is submitted or times out, and the workflow resumes. The Form Submitted Trigger initiates a workflow when a form is submitted. The trigger can be configured to initiate on submission of a full form, a form element with any value, or a form element with a particular value.

    Refer to [Forms](https://documentation.sailpoint.com/saas/help/forms/index.html) for more information about using forms in IdentityNow.
  name: Custom Forms
- description: |
    Use this API to implement custom password instruction functionality.
    With this functionality in place, administrators can create custom password instructions to help users reset their passwords, change them, unlock their accounts, or recover their usernames.
    This allows administrators to emphasize password policies or provide organization-specific instructions.

    Administrators must first use [Update Password Org Config](https://developer.sailpoint.com/idn/api/beta/put-password-org-config) to set `customInstructionsEnabled` to `true`.

    Once they have enabled custom instructions, they can use [Create Custom Password Instructions](https://developer.sailpoint.com/idn/api/beta/create-custom-password-instructions) to create custom page content for the specific pageId they select.

    For example, an administrator can use the pageId forget-username:user-email to set the custom text for the case when users forget their usernames and must enter their emails.

    Refer to [Creating Custom Instruction Text](https://documentation.sailpoint.com/saas/help/pwd/pwd_reset.html#creating-custom-instruction-text) for more information about creating custom password instructions.
  name: Custom Password Instructions
- description: |
    Use this API to implement and customize entitlement functionality.
    With this functionality in place, administrators can view entitlements and configure them for use throughout IdentityNow in certifications, access profiles, and roles.
    Administrators in IdentityNow can then grant users access to the entitlements or configure them so users themselves can request access to the entitlements whenever they need them.
    With a good approval process, this entitlement functionality allows users to gain the specific access they need on sources quickly and securely.

    Entitlements represent access rights on sources.
    Entitlements are the most granular form of access in IdentityNow.
    Entitlements are often grouped into access profiles, and access profiles themselves are often grouped into roles, the broadest form of access in IdentityNow.

    For example, an Active Directory source in IdentityNow can have multiple entitlements: the first, 'Employees,' may represent the access all employees have at the organization, and a second, 'Developers,' may represent the access all developers have at the organization.

    An administrator can then create a broader set of access in the form of an access profile, 'AD Developers' grouping the 'Employees' entitlement with the 'Developers' entitlement.

    An administrator can then create an even broader set of access in the form of a role grouping the 'AD Developers' access profile with another profile, 'GitHub Developers,' grouping entitlements for the GitHub source.

    When users only need Active Directory employee access, they can request access to the 'Employees' entitlement.

    When users need both Active Directory employee and developer access, they can request access to the 'AD Developers' access profile.

    When users need both the 'AD Developers' access profile and the 'GitHub Developers' access profile, they can request access to the role grouping both.

    Administrators often use roles and access profiles within those roles to manage access so that users can gain access more quickly, but the hierarchy of access all starts with entitlements.

    Anywhere entitlements appear, you can select them to find more information about the following:

    - Cloud Access Details: These provide details about the cloud access entitlements on cloud-enabled sources.

    - Permissions: Permissions represent individual units of read/write/admin access to a system.

    - Relationships: These list each entitlement's parent and child relationships.

    - Type: This is the entitlement's type. Some sources support multiple types, each with a different attribute schema.

    IdentityNow uses entitlements in many features, including the following:

    - Certifications: Entitlements can be revoked from an identity that no longer needs them.

    - Roles: Roles can group access profiles which themselves group entitlements. You can grant and revoke access on a broad level with roles. Role membership criteria can grant roles to identities based on whether they have certain entitlements or attributes.

    - Access Profiles: Access profiles group entitlements.
    They are the most important units of access in IdentityNow.
    IdentityNow uses them in provisioning, certifications, and access requests, and administrators can configure them to grant very broad or very granular access.

    You cannot delete entitlements directly from IdentityNow.
    Entitlements are deleted based on their inclusion in aggregations.

    Refer to [Deleting Entitlements](https://documentation.sailpoint.com/saas/help/access/entitlements.html#deleting-entitlements) more information about deleting entitlements.

    Refer to [Entitlements](https://documentation.sailpoint.com/saas/help/access/entitlements.html) for more information about entitlements.
  name: Entitlements
- description: |
    Use this API to implement and customize Governance Group functionality. With this functionality in place, administrators can create Governance Groups and configure them for use throughout IdentityNow.

    A governance group is a group of users that can make governance decisions about access. If your organization has the Access Request or Certifications service, you can configure governance groups to review access requests or certifications. A governance group can determine whether specific access is appropriate for a user.

    Refer to [Creating and Managing Governance Groups](https://documentation.sailpoint.com/saas/help/common/users/governance_groups.html) for more information about how to build Governance Groups in the visual builder in the IdentityNow UI.
  name: Governance Groups
- name: IAI Message Catalogs
- name: IAI Access Request Recommendations
- name: IAI Common Access
- name: IAI Outliers
- name: IAI Peer Group Strategies
- name: IAI Recommendations
- name: IAI Role Mining
- description: |
    Use this API to implement identity functionality.
    With this functionality in place, administrators can synchronize an identity's attributes with its various source attributes.

    IdentityNow uses identities as users' authoritative accounts. Identities can own other accounts, entitlements, and attributes.

    An identity has a variety of attributes, such as an account name, an email address, a job title, and more.
    These identity attributes can be correlated with different attributes on different sources.
    For example, the identity John.Smith can own an account in the GitHub source with the account name John-Smith-Org, and IdentityNow knows they are the same person with the same access and attributes.

    In IdentityNow, administrators often set up these synchronizations to get triggered automatically with a change or to run on a schedule.
    To manually synchronize attributes for an identity, administrators can use the Identities drop-down menu and select Identity List to view the list of identities.
    They can then select the identity they want to manually synchronize and use the hamburger menu to select 'Synchronize Attributes.'
    Doing so immediately begins the attribute synchronization and analyzes all accounts for the selected identity.

    Refer to [Synchronizing Attributes](https://documentation.sailpoint.com/saas/help/provisioning/attr_sync.html) for more information about synchronizing attributes.
  name: Identities
- name: Identity Attributes
- name: Identity History
- description: |
    Use this API to implement and customize identity profile functionality.
    With this functionality in place, administrators can manage identity profiles and configure them for use by identities throughout IdentityNow.

    Identity profiles represent the configurations that can be applied to identities as a way of granting them a set of security and access, as well as defining the mappings between their identity attributes and their source attributes.
    This allows administrators to save time by applying identity profiles to any number of similar identities rather than configuring each one individually.

    In IdentityNow, administrators can use the Identities drop-down menu and select Identity Profiles to view the list of identity profiles.
    This list shows some details about each identity profile, along with its status. They can select an identity profile to view and modify its settings, its mappings between identity attributes and correlating source account attributes, and its provisioning settings.
    Administrators can also use this page to create new identity profiles or delete existing ones.

    Refer to [Creating Identity Profiles](https://documentation.sailpoint.com/saas/help/setup/identity_profiles.html) for more information about identity profiles.
  name: Identity Profiles
- description: |
    Use this API to implement and customize lifecycle state functionality.
    With this functionality in place, administrators can view and configure custom lifecycle states for use across their organizations, which is key to controlling which users have access, when they have access, and the access they have.

    A lifecycle state describes a user's status in a company. For example, two lifecycle states come by default with IdentityNow: 'Active' and 'Inactive.'
    When an active employee takes an extended leave of absence from a company, his or her lifecycle state may change to 'Inactive,' for security purposes.
    The inactive employee would lose access to all the applications, sources, and sensitive data during the leave of absence, but when the employee returns and becomes active again, all that access would be restored.
    This saves administrators the time that would otherwise be spent provisioning the employee's access to each individual tool, reviewing the employee's certification history, etc.

    Administrators must define the criteria for being in each lifecycle state, and they must define how IdentityNow manages users' access to apps and sources for each lifecycle state.

    In IdentityNow, administrators can manage lifecycle states by going to Admin > Identities > Identity Profile, selecting the identity profile whose lifecycle states they want to manage, selecting the 'Provisioning' tab, and using the left panel to select the lifecycle state they want to modify.

    In the 'Provisioning' tab, administrators can make the following access changes to an identity profile's lifecycle state:

    - Enable/disable the lifecycle state for the identity profile.

    - Enable/disable source accounts for the identity profile's lifecycle state.

    - Add existing access profiles to grant to the identity profiles in that lifecycle state.

    - Create a new access profile to grant to the identity profile in that lifecycle state.

    Access profiles granted in a previous lifecycle state are automatically revoked when the identity moves to a new lifecycle state.
    To maintain access across multiple lifecycle states, administrators must grant the access profiles in each lifecycle state.
    For example, if an administrator wants users with the 'HR Employee' identity profile to maintain their building access in both the 'Active' and 'Leave of Absence' lifecycle states, the administrator must grant the access profile for that building access to both lifecycle states.

    During scheduled refreshes, IdentityNow evaluates lifecycle states to determine whether their assigned identities have the access defined in the lifecycle states' access profiles.
    If the identities are missing access, IdentityNow provisions that access.

    Administrators can also use the 'Provisioning' tab to configure email notifications for IdentityNow to send whenever an identity with that identity profile has a lifecycle state change.
    Refer to [Configuring Lifecycle State Notifications](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#configuring-lifecycle-state-notifications) for more information on how to do so.

    An identity's lifecycle state can have four different statuses: the lifecycle state's status can be 'Active,' it can be 'Not Set,' it can be 'Not Valid,' or it 'Does Not Match Technical Name Case.'
    Refer to [Moving Identities into Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html#moving-identities-into-lifecycle-states) for more information about these different lifecycle state statuses.

    Refer to [Setting Up Lifecycle States](https://documentation.sailpoint.com/saas/help/provisioning/lifecycle.html) for more information about lifecycle states.
  name: Lifecycle States
- description: Read and write operations for managing client data and statuses
  name: Managed Clients
- description: "Operations for accessing and managing client Clusters, including Log\
    \ Configuration"
  name: Managed Clusters
- description: Configure and test multifactor authentication (MFA) methods
  name: MFA Configuration
- description: This API used for multifactor authentication functionality belong to
    gov-multi-auth service. This controller allow you to verify authentication by
    specified method
  name: MFA Controller
- description: |
    Use this API to implement non-employee lifecycle management functionality.
    With this functionality in place, administrators can create non-employee records and configure them for use in their organizations.
    This allows organizations to provide secure access to non-employees and control that access.

    The 'non-employee' term refers to any consultant, contractor, intern, or other user in an organization who is not a full-time permanent employee.
    Organizations can track non-employees' access and activity in IdentityNow by creating and maintaining non-employee sources.
    Organizations can have a maximum of 50 non-employee sources.

    By using SailPoint's Non-Employee Lifecycle Management functionality, you agree to the following:

    - SailPoint is not responsible for storing sensitive data.
    You may only add account attributes to non-employee identities that are necessary for business operations and are consistent with your contractual limitations on data that may be sent or stored in IdentityNow.

    - You are responsible for regularly downloading your list of non-employee accounts for all the sources you create and storing this list of accounts in a managed location to maintain an authoritative system of record and backup data for these accounts.

    To manage non-employees in IdentityNow, administrators must create a non-employee source and add accounts to the source.

    To create a non-employee source in IdentityNow, administrators must use the Admin panel to go to Connections > Sources.
    They must then specify 'Non-Employee' in the 'Source Type' field.
    Refer to [Creating a Non-Employee Source](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html#creating-a-non-employee-source) for more details about how to create non-employee sources.

    To add accounts to a non-employee source in IdentityNow, administrators can select the non-employee source and add the accounts.
    They can also use the 'Manage Non-Employees' widget on their user dashboards to reach the list of sources and then select the non-employee source they want to add the accounts to.

    Administrators can either add accounts individually or in bulk. Each non-employee source can have a maximum of 20,000 accounts.
    To add accounts in bulk, they must select the 'Bulk Upload' option and upload a CSV file.
    Refer to [Adding Accounts](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html#adding-accounts) for more details about how to add accounts to non-employee sources.

    Once administrators have created the non-employee source and added accounts to it, they can create identity profiles to generate identities for the non-employee accounts and manage the non-employee identities the same way they would any other identities.

    Refer to [Managing Non-Employee Sources and Accounts](https://documentation.sailpoint.com/saas/help/common/non-employee-mgmt.html) for more information about non-employee lifecycle management.
  name: Non-Employee Lifecycle Management
- name: Notifications
- description: |
    Use this API to implement OAuth client functionality.
    With this functionality in place, users with the appropriate security scopes can create and configure OAuth clients to use as a way to obtain authorization to use the IdentityNow REST API.
    Refer to [Authentication](https://developer.sailpoint.com/idn/api/authentication) for more information about OAuth and how it works with the IdentityNow REST API.
  name: OAuth Clients
- description: Operations for managing org configuration settings (eg. time zone)
  name: Org Config
- description: |
    Use this API to implement organization password configuration functionality.
    With this functionality in place, organization administrators can create organization-specific password configurations.

    These configurations include details like custom password instructions, as well as digit token length and duration.

    Refer to [Configuring User Authentication for Password Resets](https://documentation.sailpoint.com/saas/help/pwd/pwd_reset.html) for more information about organization password configuration functionality.
  name: Password Configuration
- description: |
    Use this API to implement password dictionary functionality.
    With this functionality in place, administrators can create password dictionaries to prevent users from using certain words or characters in their passwords.

    A password dictionary is a list of words or characters that users are prevented from including in their passwords.
    This can help protect users from themselves and force them to create passwords that are not easy to break.

    A password dictionary must meet the following requirements to for the API to handle them correctly:

    - It must be in .txt format.

    - All characters must be UTF-8 characters.

    - Each line must contain a single word or character with no spaces or whitespace characters.

    - It must contain at least one line other than the locale string.

    - Each line must not exceed 128 characters.

    - The file must not exceed 2500 lines.

    Administrators should also consider the following when they create their dictionaries:

    - Lines starting with a # represent comments.

    - All words in the password dictionary are case-insensitive.
    For example, adding the word "password" to the dictionary also disallows the following: PASSWORD, Password, and PassWord.

    - The dictionary uses substring matching.
    For example, adding the word "spring" to the dictionary also disallows the following: Spring124, 345SprinG, and 8spring.
    Users can then select 'Change Password' to update their passwords.

    Administrators must do the following to create a password dictionary:

    - Create the text file that will contain the prohibited password values.

    - If the dictionary is not in English, they must add a locale string to the top line: locale:`languageCode`_`countryCode`

    The languageCode value refers to the language's 2-letter ISO 639-1 code.
    The countryCode value refers to the country's 2-letter ISO 3166-1 code.

    Refer to this list https://docs.oracle.com/cd/E13214_01/wli/docs92/xref/xqisocodes.html to see all the available ISO 639-1 language codes and ISO 3166-1 country codes.

    - Upload the .txt file to IdentityNow with [Update Password Dictionary](https://developer.sailpoint.com/idn/api/beta/update-password-dictionary). Uploading a new file always overwrites the previous dictionary file.

    Administrators can then specify which password policies check new passwords against the password dictionary by doing the following: In the Admin panel, they can use the Password Mgmt dropdown menu to select Policies, select the policy, and select the 'Prevent use of words in this site's password dictionary' checkbox beside it.

    Refer to [Configuring Advanced Password Management Options](https://documentation.sailpoint.com/saas/help/pwd/adv_config.html) for more information about password dictionaries.
  name: Password Dictionary
- description: |
    Use this API to implement password management functionality.
    With this functionality in place, users can manage their identity passwords for all their applications.

    In IdentityNow, users can select their names in the upper right corner of the page and use the drop-down menu to select Password Manager.
    Password Manager lists the user's identity's applications, possibly grouped to share passwords.
    Users can then select 'Change Password' to update their passwords.

    Grouping passwords allows users to update their passwords more broadly, rather than requiring them to update each password individually.
    Password Manager may list the applications and sources in the following groups:

    - Password Group: This refers to a group of applications that share a password.
    For example, a user can use the same password for Google Drive, Google Mail, and YouTube.
    Updating the password for the password group updates the password for all its included applications.

    - Multi-Application Source: This refers to a source with multiple applications that share a password.
    For example, a user can have a source, G Suite, that includes the Google Calendar, Google Drive, and Google Mail applications.
    Updating the password for the multi-application source updates the password for all its included applications.

    - Applications: These are applications that do not share passwords with other applications.

    An organization may require some authentication for users to update their passwords.
    Users may be required to answer security questions or use a third-party authenticator before they can confirm their updates.

    Refer to [Managing Passwords](https://documentation.sailpoint.com/saas/user-help/accounts/passwords.html) for more information about password management.
  name: Password Management
- description: |
    Use this API to implement password sync group functionality.
    With this functionality in place, administrators can group sources into password sync groups so that all their applications share the same password.
    This allows users to update the password for all the applications in a sync group if they want, rather than updating each password individually.

    A password sync group is a group of applications that shares a password.
    Administrators create these groups by grouping the applications' sources.
    For example, an administrator can group the ActiveDirectory, GitHub, and G Suite sources together so that all those sources' applications can also be grouped to share a password.
    A user can then update his or her password for ActiveDirectory, GitHub, Gmail, Google Drive, and Google Calendar all at once, rather then updating each one individually.

    The following are required for administrators to create a password sync group in IdentityNow:

    - At least two direct connect sources connected to IdentityNow and configured for Password Management.

    - Each authentication source in a sync group must have at least one application. Refer to [Adding and Resetting Application Passwords](https://documentation.sailpoint.com/saas/help/pwd/adv_config.html#adding-and-resetting-application-passwords) for more information about adding applications to sources.

    - At least one password policy. Refer to [Managing Password Policies](https://documentation.sailpoint.com/saas/help/pwd/policies.html) for more information about password policies.

    In the Admin panel in IdentityNow, administrators can use the Password Mgmt dropdown menu to select Sync Groups.
    To create a sync group, administrators must provide a name, choose a password policy to be enforced across the sources in the sync group, and select the sources to include in the sync group.

    Administrators can also delete sync groups in IdentityNow, but they should know the following before they do:

    - Passwords related to the associated sources will become independent, so changing one will not change the others anymore.

    - Passwords for the sources' connected applications will also become independent.

    - Password policies assigned to the sync group are then assigned directly to the associated sources.
    To change the password policy for a source, administrators must edit it directly.

    Once the password sync group has been created, users can update the password for the group in Password Manager.

    Refer to [Managing Password Sync Groups](https://documentation.sailpoint.com/saas/help/pwd/sync_grps.html) for more information about password sync groups.
  name: Password Sync Groups
- description: |
    Use this API to implement personal access token (PAT) functionality.
    With this functionality in place, users can use PATs as an alternative to passwords for authentication in IdentityNow.

    PATs embed user information into the client ID and secret.
    This replaces the API clients' need to store and provide a username and password to establish a connection, improving IdentityNow organizations' integration security.

    In IdentityNow, users can do the following to create and manage their PATs: Select the dropdown menu under their names, select Preferences, and then select Personal Access Tokens.
    They must then provide a description about the token's purpose.
    They can then select 'Create Token' at the bottom of the page to generate and view the Secret and Client ID.

    Refer to [Managing Personal Access Tokens](https://documentation.sailpoint.com/saas/help/common/generate_tokens.html) for more information about PATs.
  name: Personal Access Tokens
- description: |
    Use this API to implement public identity configuration functionality.
    With this functionality in place, administrators can make up to 5 identity attributes publicly visible so other non-administrator users can see the relevant information they need to make decisions.
    This can be helpful for access approvers, certification reviewers, managers viewing their direct reports' access, and source owners viewing their tasks.

    By default, non-administrators can select an identity and view the following attributes: email, lifecycle state, and manager.
    However, it may be helpful for a non-administrator reviewer to see other identity attributes like department, region, title, etc.
    Administrators can use this API to make those necessary identity attributes public to non-administrators.

    For example, a non-administrator deciding whether to approve another identity's request for access to the Workday application, whose access may be restricted to members of the HR department, would want to know whether the identity is a member of the HR department.
    If an administrator has used [Update Public Identity Config](https://developer.sailpoint.com/idn/api/beta/update-public-identity-config) to make the "department" attribute public, the approver can see the department and make a decision without requesting any more information.
  name: Public Identities Config
- description: |
    Use this API to implement requestable object functionality.
    With this functionality in place, administrators can determine which access items can be requested with the [Access Request APIs](https://developer.sailpoint.com/idn/api/beta/access-requests), along with their statuses.
    This can be helpful for administrators who are implementing and customizing access request functionality as a way of checking which items are requestable as they are created, assigned, and made available.
  name: Requestable Objects
- name: Role Insights
- description: |
    Use this API to implement and customize role functionality.
    With this functionality in place, administrators can create roles and configure them for use throughout IdentityNow.
    IdentityNow can use established criteria to automatically assign the roles to qualified users. This enables users to get all the access they need quickly and securely and administrators to spend their time on other tasks.

    Entitlements represent the most granular level of access in IdentityNow.
    Access profiles represent the next level and often group entitlements.
    Roles represent the broadest level of access and often group access profiles.

    For example, an Active Directory source in IdentityNow can have multiple entitlements: the first, 'Employees,' may represent the access all employees have at the organization, and a second, 'Developers,' may represent the access all developers have at the organization.

    An administrator can then create a broader set of access in the form of an access profile, 'AD Developers' grouping the 'Employees' entitlement with the 'Developers' entitlement.

    An administrator can then create an even broader set of access in the form of a role grouping the 'AD Developers' access profile with another profile, 'GitHub Developers,' grouping entitlements for the GitHub source.

    When users only need Active Directory employee access, they can request access to the 'Employees' entitlement.

    When users need both Active Directory employee and developer access, they can request access to the 'AD Developers' access profile.

    When users need both the 'AD Developers' access profile and the 'GitHub Developers' access profile, they can request access to the role grouping both.

    Roles often represent positions within organizations.
    For example, an organization's accountant can access all the tools the organization's accountants need with the 'Accountant' role.
    If the accountant switches to engineering, a qualified member of the organization can quickly revoke the accountant's 'Accountant' access and grant access to the 'Engineer' role instead, granting access to all the tools the organization's engineers need.

    In IdentityNow, adminstrators can use the Access drop-down menu and select Roles to view, configure, and delete existing roles, as well as create new ones.
    Administrators can enable and disable the role, and they can also make the following configurations:

    - Manage Access: Manage the role's access by adding or removing access profiles.

    - Define Assignment: Define the criteria IdentityNow uses to assign the role to identities.
    Use the first option, 'Standard Criteria,' to provide specific criteria for assignment like specific account attributes, entitlements, or identity attributes.
    Use the second, 'Identity List,' to specify the identities for assignment.

    - Access Requests: Configure roles to be requestable and establish an approval process for any requests that the role be granted or revoked.
    Do not configure a role to be requestable without establishing a secure access request approval process for that role first.

    Refer to [Working with Roles](https://documentation.sailpoint.com/saas/help/access/roles.html) for more information about roles.
  name: Roles
- name: Search Attribute Configuration
- description: "Use this API to implement and customize access request segment functionality.\
    \ \nWith this functionality in place, administrators can create and manage access\
    \ request segments. \nSegments provide organizations with a way to make the access\
    \ their users have even more granular - this can simply the access request process\
    \ for the organization's users and improves security by reducing the risk of overprovisoning\
    \ access. \n\nSegments represent sets of identities, all grouped by specified\
    \ identity attributes, who are only able to see and access the access items associated\
    \ with their segments.\nFor example, administrators could group all their organization's\
    \ London office employees into one segment, \"London Office Employees,\" by their\
    \ shared location. \nThe administrators could then define the access items the\
    \ London employees would need, and the identities in the \"London Office Employees\"\
    \ would then only be able to see and access those items.\n\nIn IdentityNow, administrators\
    \ can use the 'Access' drop-down menu and select 'Segments' to reach the 'Access\
    \ Requests Segments' page. \nThis page lists all the existing access request segments,\
    \ along with their statuses, enabled or disabled. \nAdministrators can use this\
    \ page to create, edit, enable, disable, and delete segments. \nTo create a segment,\
    \ an administrator must provide a name, define the identities grouped in the segment,\
    \ and define the items the identities in the segment can access.\nThese items\
    \ can be access profiles, roles, or entitlements. \n\nWhen administrators use\
    \ the API to create and manage segments, they use a JSON expression in the `visibilityCriteria`\
    \ object to define the segment's identities and access items. \n\nRefer to [Managing\
    \ Access Request Segments](https://documentation.sailpoint.com/saas/help/requests/segments.html)\
    \ for more information about segments in IdentityNow. \n"
  name: Segments
- description: |
    Use this API to build an integration between IdentityNow and a service desk ITSM (IT service management) solution.
    Once an administrator builds this integration between IdentityNow and a service desk, users can use IdentityNow to raise and track tickets that are synchronized between IdentityNow and the service desk.

    In IdentityNow, administrators can create a service desk integration (sometimes also called an SDIM, or Service Desk Integration Module) by going to Admin > Connections > Service Desk and selecting 'Create.'

    To create a Generic Service Desk integration, for example, administrators must provide the required information on the General Settings page, the Connectivity and Authentication information, Ticket Creation information, Status Mapping information, and Requester Source information on the Configure page.
    Refer to [Integrating SailPoint with Generic Service Desk](https://documentation.sailpoint.com/connectors/generic_sd/help/integrating_generic_service_desk/intro.html) for more information about the process of setting up a Generic Service Desk in IdentityNow.

    Administrators can create various service desk integrations, all with their own nuances.
    The following service desk integrations are available:

    - [Atlassian Cloud Jira Service Management](https://documentation.sailpoint.com/connectors/atlassian/jira_cloud/help/integrating_jira_cloud_sd/introduction.html)

    - [Atlassian Server Jira Service Management](https://documentation.sailpoint.com/connectors/atlassian/jira_server/help/integrating_jira_server_sd/introduction.html)

    - [BMC Helix ITSM Service Desk](https://documentation.sailpoint.com/connectors/bmc/helix_ITSM_sd/help/integrating_bmc_helix_itsm_sd/intro.html)

    - [BMC Helix Remedyforce Service Desk](https://documentation.sailpoint.com/connectors/bmc/helix_remedyforce_sd/help/integrating_bmc_helix_remedyforce_sd/intro.html)

    - [Generic Service Desk](https://documentation.sailpoint.com/connectors/generic_sd/help/integrating_generic_service_desk/intro.html)

    - [ServiceNow Service Desk](https://documentation.sailpoint.com/connectors/servicenow/sdim/help/integrating_servicenow_sdim/intro.html)

    - [Zendesk Service Desk](https://documentation.sailpoint.com/connectors/zendesk/help/integrating_zendesk_sd/introduction.html)
  name: Service Desk Integration
- description: "Use this API to implement and manage \"separation of duties\" (SOD)\
    \ policies. \nWith SOD policy functionality in place, administrators can organize\
    \ the access in their tenants to prevent individuals from gaining conflicting\
    \ or excessive access. \n\n\"Separation of duties\" refers to the concept that\
    \ people shouldn't have conflicting sets of access - all their access should be\
    \ configured in a way that protects your organization's assets and data.  \nFor\
    \ example, people who record monetary transactions shouldn't be able to issue\
    \ payment for those transactions.\nAny changes to major system configurations\
    \ should be approved by someone other than the person requesting the change. \n\
    \nOrganizations can use \"separation of duties\" (SOD) policies to enforce and\
    \ track their internal security rules throughout their tenants.\nThese SOD policies\
    \ limit each user's involvement in important processes and protects the organization\
    \ from individuals gaining excessive access. \n\nTo create SOD policies in IdentityNow,\
    \ administrators use 'Search' and then access 'Policies'.\nTo create a policy,\
    \ they must configure two lists of access items. Each access item can only be\
    \ added to one of the two lists.\nThey can search for the entitlements they want\
    \ to add to these access lists.\n\n>Note: You can have a maximum of 500 policies\
    \ of any type (including general policies) in your organization. In each access-based\
    \ SOD policy, you can have a maximum of 50 entitlements in each access list.\n\
    \nOnce a SOD policy is in place, if an identity has access items on both lists,\
    \ a SOD violation will trigger. \nThese violations are included in SOD violation\
    \ reports that other users will see in emails at regular intervals if they're\
    \ subscribed to the SOD policy.\nThe other users can then better help to enforce\
    \ these SOD policies. \n\nTo create a subscription to a SOD policy in IdentityNow,\
    \ administrators use 'Search' and then access 'Layers'.\nThey can create a subscription\
    \ to the policy and schedule it to run at a regular interval. \n\nRefer to [Managing\
    \ Policies](https://documentation.sailpoint.com/saas/help/sod/manage-policies.html)\
    \ for more information about SOD policies. \n\nRefer to [Subscribe to a SOD Policy](https://documentation.sailpoint.com/saas/help/sod/policy-violations.html#subscribe-to-an-sod-policy)\
    \ for more information about SOD policy subscriptions. \n"
  name: SOD Policy
- description: "Use this API to check for current \"separation of duties\" (SOD) policy\
    \ violations as well as potential future SOD policy violations. \nWith SOD violation\
    \ functionality in place, administrators can get information about current SOD\
    \ policy violations and predict whether an access change will trigger new violations,\
    \ which helps to prevent them from occurring at all. \n\n\"Separation of duties\"\
    \ refers to the concept that people shouldn't have conflicting sets of access\
    \ - all their access should be configured in a way that protects your organization's\
    \ assets and data.  \nFor example, people who record monetary transactions shouldn't\
    \ be able to issue payment for those transactions.\nAny changes to major system\
    \ configurations should be approved by someone other than the person requesting\
    \ the change. \n\nOrganizations can use \"separation of duties\" (SOD) policies\
    \ to enforce and track their internal security rules throughout their tenants.\n\
    These SOD policies limit each user's involvement in important processes and protects\
    \ the organization from individuals gaining excessive access. \n\nOnce a SOD policy\
    \ is in place, if an identity has conflicting access items, a SOD violation will\
    \ trigger. \nThese violations are included in SOD violation reports that other\
    \ users will see in emails at regular intervals if they're subscribed to the SOD\
    \ policy.\nThe other users can then better help to enforce these SOD policies.\n\
    \nAdministrators can use the SOD violations APIs to check a set of identities\
    \ for any current SOD violations, and they can use them to check whether adding\
    \ an access item would potentially trigger a SOD violation. \nThis second option\
    \ is a good way to prevent SOD violations from triggering at all. \n\nRefer to\
    \ [Handling Policy Violations](https://documentation.sailpoint.com/saas/help/sod/policy-violations.html)\
    \ for more information about SOD policy violations. \n"
  name: SOD Violations
- description: |
    Use this API to implement source usage insight functionality.
    With this functionality in place, administrators can gather information and insights about how their tenants' sources are being used.
    This allows organizations to get the information they need to start optimizing and securing source usage.
  name: Source Usages
- description: |
    Use this API to implement and customize source functionality.
    With source functionality in place, organizations can use IdentityNow to connect their various sources and user data sets and manage access across all those different sources in a secure, scalable way.

    [Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html) refer to the IdentityNow representations for external applications, databases, and directory management systems that maintain their own sets of users, like Dropbox, GitHub, and Workday, for example.
    Organizations may use hundreds, if not thousands, of different source systems, and any one employee within an organization likely has a different user record on each source, often with different permissions on many of those records.
    Connecting these sources to IdentityNow makes it possible to manage user access across them all.
    Then, if a new hire starts at an organization, IdentityNow can grant the new hire access to all the sources they need.
    If an employee moves to a new department and needs access to new sources but no longer needs access to others, IdentityNow can grant the necessary access and revoke the unnecessary access for all the employee's various sources.
    If an employee leaves the company, IdentityNow can revoke access to all the employee's various source accounts immediately.
    These are just a few examples of the many ways that source functionality makes identity governance easier, more efficient, and more secure.

    In IdentityNow, administrators can create configure, manage, and edit sources, and they can designate other users as source admins to be able to do so.
    They can also designate users as source sub-admins, who can perform the same source actions but only on sources associated with their governance groups.
    Admins go to Connections > Sources to see a list of the existing source representations in their organizations.
    They can create new sources or select existing ones.

    To create a new source, the following must be specified: Source Name, Description, Source Owner, and Connection Type.
    Refer to [Configuring a Source](https://documentation.sailpoint.com/saas/help/accounts/loading_data.html#configuring-a-source) for more information about the source configuration process.

    IdentityNow connects with its sources either by a direct communication with the source server (connection information specific to the source must be provided) or a flat file feed, a CSV file containing all the relevant information about the accounts to be loaded in.
    Different sources use different connectors to share data with IdentityNow, and each connector's setup process is specific to that connector.
    SailPoint has built a number of connectors to come out of the box and connect to the most common sources, and SailPoint actively maintains these connectors.
    Refer to [IdentityNow Connectors](https://documentation.sailpoint.com/connectors/identitynow/landingpages/help/landingpages/identitynow_connectivity_landing.html) for more information about these SailPoint supported connectors.
    Refer to the following links for more information about two useful connectors:

    - [JDBC Connector](https://documentation.sailpoint.com/connectors/jdbc/help/integrating_jdbc/introduction.html): This customizable connector an directly connect to databases that support JDBC (Java Database Connectivity).

    - [Web Services Connector](https://documentation.sailpoint.com/connectors/webservices/help/integrating_webservices/introduction.html): This connector can directly connect to databases that support Web Services.

    Refer to [SaaS Connectivity](https://developer.sailpoint.com/idn/docs/saas-connectivity) for more information about SailPoint's new connectivity framework that makes it easy to build and manage custom connectors to SaaS sources.

    When admins select existing sources, they can view the following information about the source:

    - Associated connections (any associated identity profiles, apps, or references to the source in a transform).

    - Associated user accounts. These accounts are linked to their identities - this provides a more complete picture of each user's access across sources.

    - Associated entitlements (sets of access rights on sources).

    - Associated access profiles (groupings of entitlements).

    The user account data and the entitlements update with each data aggregation from the source.
    Organizations generally run scheduled, automated data aggregations to ensure that their data is always in sync between their sources and their IdentityNow tenants so an access change on a source is detected quickly in IdentityNow.
    Admins can view a history of these aggregations, and they can also run manual imports.
    Refer to [Loading Account Data](https://documentation.sailpoint.com/saas/help/accounts/loading_data.html) for more information about manual and scheduled aggregations.

    Admins can also make changes to determine which user account data IdentityNow collects from the source and how it correlates that account data with identity data.
    To define which account attributes the source shares with IdentityNow, admins can edit the account schema on the source.
    Refer to [Managing Source Account Schemas](https://documentation.sailpoint.com/saas/help/accounts/schema.html) for more information about source account schemas and how to edit them.
    To define the mapping between the source account attributes and their correlating identity attributes, admins can edit the correlation configuration on the source.
    Refer to [Assigning Source Accounts to Identities](https://documentation.sailpoint.com/saas/help/accounts/correlation.html) for more information about this correlation process between source accounts and identities.

    Admins can also delete sources, but they must first ensure that the sources no longer have any active connections: the source must not be associated with any identity profile or any app, and it must not be referenced by any transform.
    Refer to [Deleting Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html#deleting-sources) for more information about deleting sources.

    Well organized, mapped out connections between sources and IdentityNow are essential to achieving comprehensive identity access governance across all the source systems organizations need.
    Refer to [Managing Sources](https://documentation.sailpoint.com/saas/help/sources/managing_sources.html) for more information about all the different things admins can do with sources once they are connected.
  name: Sources
- description: Import and export configuration for some objects between tenants.
  name: SP-Config
- description: "Use this API to implement object tagging functionality. \nWith object\
    \ tagging functionality in place, any user in an organization can use tags as\
    \ a way to group objects together and find them more quickly when the user searches\
    \ IdentityNow. \n\nIn IdentityNow, users can search their tenants for information\
    \ and add tags objects they find.\nTagging an object provides users with a way\
    \ of grouping objects together and makes it easier to find these objects in the\
    \ future. \n\nFor example, if a user is searching for an entitlement that grants\
    \ a risky level of access to Active Directory, it's possible that the user may\
    \ have to search through hundreds of entitlements to find the correct one. \n\
    Once the user finds that entitlement, the user can add a tag to the entitlement,\
    \ \"AD_RISKY\" to make it easier to find the entitlement again.\nThe user can\
    \ add the same tag to multiple objects the user wants to group together for an\
    \ easy future search, and the user can also do so in bulk.\nWhen the user wants\
    \ to find that tagged entitlement again, the user can search for \"tags:AD_RISKY\"\
    \ to find all objects with that tag. \n\nWith the API, you can tag even more different\
    \ object types than you can in IdentityNow (access profiles, entitlements, identities,\
    \ and roles). \nYou can use the API to tag all these objects:\n\n- Access profiles\
    \ \n\n- Applications \n\n- Certification campaigns\n\n- Entitlements\n\n- Identities\
    \ \n\n- Roles \n\n- SOD (separation of duties) policies\n\n- Sources \n\nYou can\
    \ also use the API to directly find, create, and manage tagged objects without\
    \ using search queries. \n\nThere are limits to tags: \n\n- You can have up to\
    \ 500 different tags in your tenant.\n\n- You can apply up to 30 tags to one object.\
    \ \n\n- You can have up to 10,000 tag associations, pairings of 1 tag to 1 object,\
    \ in your tenant. \n\nBecause of these limits, it is recommended that you work\
    \ with your governance experts and security teams to establish a list of tags\
    \ that are most expressive of governance objects and access managed by IdentityNow.\
    \ \n\nThese are the types of information often expressed in tags: \n\n- Affected\
    \ departments\n\n- Compliance and regulatory categories \n\n- Remediation urgency\
    \ levels \n\n- Risk levels \n\nRefer to [Tagging Items in Search](https://documentation.sailpoint.com/saas/help/search/index.html?h=tags#tagging-items-in-search)\
    \ for more information about tagging objects in IdentityNow. \n"
  name: Tagged Objects
- name: Task Management
- description: "Operations for creating, managing, and deleting transforms"
  name: Transforms
- description: |
    Event Triggers provide real-time updates to changes in IdentityNow so you can take action as soon as an event occurs, rather than poll an API endpoint for updates. IdentityNow provides a user interface within the admin console to create and manage trigger subscriptions.  These endpoints allow for programatically creating and managing trigger subscriptions.

    There are two types of event triggers:
      * `FIRE_AND_FORGET`: This trigger type will send a payload to each subscriber without needing a response.  Each trigger of this type has a limit of **50 subscriptions**.
      * `REQUEST_RESPONSE`: This trigger type will send a payload to a subscriber and expect a response back.  Each trigger of this type may only have **one subscription**.

    ## Available Event Triggers
    Production ready event triggers that are available in all tenants.

    | Name | ID | Type | Trigger condition |
    |-|-|-|-|
    | [Access Request Dynamic Approval](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/access-request-dynamic-approval) | idn:access-request-dynamic-approver | REQUEST_RESPONSE |After an access request is submitted. Expects the subscriber to respond with the ID of an identity or workgroup to add to the approval workflow. |
    | [Access Request Decision](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/access-request-decision) | idn:access-request-post-approval | FIRE_AND_FORGET | After an access request is approved. |
    | [Access Request Submitted](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/access-request-submitted) | idn:access-request-pre-approval | REQUEST_RESPONSE | After an access request is submitted. Expects the subscriber to respond with an approval decision. |
    | [Account Aggregation Completed](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/account-aggregation-completed) | idn:account-aggregation-completed | FIRE_AND_FORGET | After an account aggregation completed, terminated, failed. |
    | Account Attributes Changed | idn:account-attributes-changed | FIRE_AND_FORGET | After an account aggregation, and one or more account attributes have changed. |
    | Account Correlated | idn:account-correlated | FIRE_AND_FORGET | After an account is added to an identity. |
    | Accounts Collected for Aggregation |  idn:aggregation-accounts-collected | FIRE_AND_FORGET | New, changed, and deleted accounts have been gathered during an aggregation and are being processed. |
    | Account Uncorrelated | idn:account-uncorrelated | FIRE_AND_FORGET | After an account is removed from an identity. |
    | Campaign Activated | idn:campaign-activated | FIRE_AND_FORGET | After a campaign is activated. |
    | Campaign Ended | idn:campaign-ended | FIRE_AND_FORGET | After a campaign ends. |
    | Campaign Generated | idn:campaign-generated | FIRE_AND_FORGET | After a campaign finishes generating. |
    | Certification Signed Off | idn:certification-signed-off | FIRE_AND_FORGET | After a certification is signed off by its reviewer. |
    | [Identity Attributes Changed](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/account-aggregation-completed) | idn:identity-attributes-changed | FIRE_AND_FORGET | After One or more identity attributes changed. |
    | [Identity Created](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/identity-created) | idn:identity-created | FIRE_AND_FORGET | After an identity is created. |
    | [Provisioning Action Completed](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/provisioning-completed) |  idn:post-provisioning | FIRE_AND_FORGET | After a provisioning action completed on a source. |
    | [Scheduled Search](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/scheduled-search) |  idn:saved-search-complete | FIRE_AND_FORGET | After a scheduled search completed. |
    | [Source Created](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/source-created) | idn:source-created | FIRE_AND_FORGET | After a source is created. |
    | [Source Deleted](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/source-deleted) | idn:source-deleted | FIRE_AND_FORGET | After a source is deleted. |
    | [Source Updated](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/source-updated) | idn:source-updated | FIRE_AND_FORGET | After configuration changes have been made to a source. |
    | [VA Cluster Status Change](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/va-cluster-status-change) | idn:va-cluster-status-change | FIRE_AND_FORGET | After the status of a VA cluster has changed. |

    ## Early Access Event Triggers
    Triggers that are in-development and not ready for production use.  Please contact support to enable these triggers in your tenant.

    | Name | ID | Type | Trigger condition |
    |-|-|-|-|
    | [Identity Deleted](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/identity-deleted) | idn:identity-deleted | FIRE_AND_FORGET | After an identity is deleted. |
    | [Source Account Created](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/source-account-created) | idn:source-account-created | FIRE_AND_FORGET | After a source account is created. |
    | [Source Account Deleted](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/source-account-deleted) | idn:source-account-deleted | FIRE_AND_FORGET | After a source account is deleted. |
    | [Source Account Updated](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/source-account-updated) | idn:source-account-updated | FIRE_AND_FORGET | After a source account is changed. |

    Refer to [Event Triggers](https://developer.sailpoint.com/idn/docs/event-triggers/) for more information about event triggers.
  name: Triggers
- description: |
    Use this API to implement work item functionality.
    With this functionality in place, users can manage their work items (tasks).

    Work items refer to the tasks users see in IdentityNow's Task Manager.
    They can see the pending work items they need to complete, as well as the work items they have already completed.
    Task Manager lists the work items along with the involved sources, identities, accounts, and the timestamp when the work item was created.
    For example, a user may see a pending 'Create an Account' work item for the identity Fred.Astaire in GitHub for Fred's GitHub account, fred-astaire-sp.
    Once the user completes the work item, the work item will be listed with his or her other completed work items.

    To complete work items, users can use their dashboards and select the 'My Tasks' widget.
    The widget will list any work items they need to complete, and they can select the work item from the list to review its details.
    When they complete the work item, they can select 'Mark Complete' to add it to their list of completed work items.

    Refer to [Task Manager](https://documentation.sailpoint.com/saas/user-help/task_manager.html) for more information about work items, including the different types of work items users may need to complete.
  name: Work Items
- description: |
    Use this API to implement work reassignment functionality.

    Work Reassignment allows access request reviews, certifications, and manual provisioning tasks assigned to a user to be reassigned to a different user. This is primarily used for:

    - Temporarily redirecting work for users who are out of office, such as on vacation or sick leave
    - Permanently redirecting work for users who should not be assigned these tasks at all, such as senior executives or service identities

    Users can define reassignments for themselves, managers can add them for their team members, and administrators can configure them on any user’s behalf. Work assigned during the specified reassignment timeframes will be automatically reassigned to the designated user as it is created.

    Refer to [Work Reassignment](https://documentation.sailpoint.com/saas/help/users/work_reassignment.html) for more information about this topic.
  name: Work Reassignment
- description: |
    Workflows allow administrators to create custom automation scripts directly within IdentityNow.  These automation scripts respond to [event triggers](https://developer.sailpoint.com/idn/docs/event-triggers#how-to-get-started-with-event-triggers) and perform a series of actions to perform tasks that are either too cumbersome or not available in the IdentityNow UI.  Workflows can be configured via a graphical user interface within IdentityNow, or by creating and uploading a JSON formatted script to the Workflow service.  The Workflows API collection provides the necessary functionality to create, manage, and test your workflows via REST.
  name: Workflows
paths:
  /access-profiles:
    get:
      description: |-
        This API returns a list of Access Profiles.

        A token with API, ORG_ADMIN, ROLE_ADMIN, ROLE_SUBADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: listAccessProfiles
      parameters:
      - description: |-
          If provided, filters the returned list according to what is visible to the indicated ROLE_SUBADMIN or SOURCE_SUBADMIN Identity. The value of the parameter is either an Identity ID, or the special value **me**, which is shorthand for the calling Identity's ID.

          A 400 Bad Request error is returned if the **for-subadmin** parameter is specified for an Identity that is not a subadmin.
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: query
        name: for-subadmin
        required: false
        schema:
          type: string
      - description: |-
          Note that for this API the maximum value for limit is 50.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 50
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 50
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, sw*

          **created**: *gt, lt, ge, le*

          **modified**: *gt, lt, ge, le*

          **owner.id**: *eq, in*

          **requestable**: *eq*

          **source.id**: *eq, in*
        example: name eq "SailPoint Support"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, created, modified**
        example: "name,-modified"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: |-
          If present and not empty, additionally filters Access Profiles to those which are assigned to the Segment(s) with the specified IDs.

          If segmentation is currently unavailable, specifying this parameter results in an error.
        example: "0b5c9f25-83c6-4762-9073-e38f7bb2ae26,2e8d8180-24bc-4d21-91c6-7affdb473b0d"
        in: query
        name: for-segment-ids
        required: false
        schema:
          format: comma-separated
          type: string
      - description: "Whether or not the response list should contain unsegmented\
          \ Access Profiles. If *for-segment-ids* is absent or empty, specifying *include-unsegmented*\
          \ as false results in an error."
        example: false
        in: query
        name: include-unsegmented
        required: false
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessProfile'
                type: array
          description: List of Access Profiles
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:access-profile:read
        - idn:access-profile:manage
      summary: List Access Profiles
      tags:
      - Access Profiles
    post:
      description: |-
        This API creates an Access Profile.
        A token with API, ORG_ADMIN, ROLE_ADMIN, ROLE_SUBADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API. In addition, a token with only ROLE_SUBADMIN or SOURCE_SUBADMIN authority must be associated with the Access Profile's Source.
        The maximum supported length for the description field is 2000 characters. Longer descriptions will be preserved for existing access profiles, however, any new access profiles as well as any updates to existing descriptions will be limited to 2000 characters.
      operationId: createAccessProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessProfile'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: Access Profile created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:access-profile:manage
      summary: Create an Access Profile
      tags:
      - Access Profiles
  /access-profiles/{id}:
    delete:
      description: |-
        This API deletes an existing Access Profile.

        The Access Profile must not be in use, for example, Access Profile can not be deleted if they belong to an Application, Life Cycle State or a Role. If it is, a 400 error is returned.

        A token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to invoke this API. In addition, a SOURCE_SUBADMIN token must be able to administer the Source associated with the Access Profile.
      operationId: deleteAccessProfile
      parameters:
      - description: ID of the Access Profile to delete
        in: path
        name: id
        required: true
        schema:
          example: 2c91808a7813090a017814121919ecca
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              examples:
                "400.2.1.0 Object in use by another":
                  description: Returned when an access profile cannot be deleted as
                    it's being used
                  value:
                    detailCode: 400.2.1.0 Object in use by another
                    trackingId: c9c1033c55b84ebc9e93e926dcf8b8b3
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The "testAccessProfile" access profile can't be deleted
                        because it's in use.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Returned when an access profile cannot be deleted as it's being
            used.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:access-profile:manage
      summary: Delete the specified Access Profile
      tags:
      - Access Profiles
    get:
      description: |-
        This API returns an Access Profile by its ID.

        A token with API, ORG_ADMIN, ROLE_ADMIN, ROLE_SUBADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: getAccessProfile
      parameters:
      - description: ID of the Access Profile
        example: 2c9180837ca6693d017ca8d097500149
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: An AccessProfile
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:access-profile:read
        - idn:access-profile:manage
      summary: Get an Access Profile
      tags:
      - Access Profiles
    patch:
      description: |-
        This API updates an existing Access Profile. The following fields are patchable:
        **name**, **description**, **enabled**, **owner**, **requestable**, **accessRequestConfig**, **revokeRequestConfig**, **segments**, **entitlements**, **provisioningCriteria**
        A token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API. In addition, a SOURCE_SUBADMIN may only use this API to patch Access Profiles which are associated with Sources they are able to administer.
        >  The maximum supported length for the description field is 2000 characters. Longer descriptions will be preserved for existing access profiles, however, any new access profiles as well as any updates to existing descriptions will be limited to 2000 characters.

        > You can only add or replace **entitlements** that exist on the source that the access profile is attached to. You can use the **list entitlements** endpoint with the **filters** query parameter to get a list of available entitlements on the access profile's source.

        >  Patching the value of the **requestable** field is only supported for customers enabled with the new Request Center. Otherwise, attempting to modify this field results in a 400 error.
      operationId: patchAccessProfile
      parameters:
      - description: ID of the Access Profile to patch
        in: path
        name: id
        required: true
        schema:
          example: 2c91808a7813090a017814121919ecca
          type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Add Entitlements:
                description: Add one or more entitlements to the end of the list
                value:
                - op: add
                  path: /entitlements
                  value:
                  - id: 2c9180857725c14301772a93bb77242d
                    type: ENTITLEMENT
                    name: AD User Group
              Insert Entitlement:
                description: Add an entitlement at the beginning of the entitlement
                  list
                value:
                - op: add
                  path: /entitlements/0
                  value:
                    id: 2c9180857725c14301772a93bb77242d
                    type: ENTITLEMENT
                    name: AD User Group
              Replace Entitlements:
                description: Replace all entitlements with a new list of entitlements
                value:
                - op: replace
                  path: /entitlements
                  value:
                  - id: 2c9180857725c14301772a93bb77242d
                    type: ENTITLEMENT
                    name: AD User Group
              Remove Entitlement:
                description: Remove the first entitlement in the list
                value:
                - op: remove
                  path: /entitlements/0
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessProfile'
          description: Responds with the Access Profile as updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:access-profile:manage
      summary: Patch a specified Access Profile
      tags:
      - Access Profiles
  /access-profiles/bulk-delete:
    post:
      description: |-
        This API initiates a bulk deletion of one or more Access Profiles.

        By default, if any of the indicated Access Profiles are in use, no deletions will be performed and the **inUse** field of the response indicates the usages that must be removed first. If the request field **bestEffortOnly** is **true**, however, usages are reported in the **inUse** response field but all other indicated Access Profiles will be deleted.

        A token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API. In addition, a SOURCE_SUBADMIN may only use this API to delete Access Profiles which are associated with Sources they are able to administer.
      operationId: deleteAccessProfilesInBulk
      requestBody:
        content:
          application/json:
            example:
              bestEffortOnly: true
              accessProfileIds:
              - 2c91808876438bb2017668b91919ecca
              - 2c91808876438ba801766e129f151816
            schema:
              $ref: '#/components/schemas/AccessProfileBulkDeleteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                pending: []
                inUse:
                - accessProfileId: 2c91808876438ba801766e129f151816
                  usages:
                  - type: Role
                    id: 2c9180887643764201766e9f6e121518
              schema:
                $ref: '#/components/schemas/AccessProfileBulkDeleteResponse'
          description: "Returned only if **bestEffortOnly** is **false**, and one\
            \ or more Access Profiles are in use."
        "202":
          content:
            application/json:
              example:
                taskId: 2c91808a7813090a01781412a1119a20
                pending:
                - 2c91808a7813090a017813fe1919ecca
                inUse:
                - accessProfileId: 2c91808876438ba801766e129f151816
                  usages:
                  - type: Role
                    id: 2c9180887643764201766e9f6e121518
              schema:
                $ref: '#/components/schemas/AccessProfileBulkDeleteResponse'
          description: Returned if at least one deletion will be performed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:access-profile:manage
      summary: Delete Access Profile(s)
      tags:
      - Access Profiles
  /access-profiles/{id}/entitlements:
    get:
      description: |-
        This API lists the Entitlements associated with a given Access Profile

        A token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to invoke this API. In addition, a token with SOURCE_SUBADMIN authority must have access to the Source associated with the given Access Profile
      operationId: getAccessProfileEntitlements
      parameters:
      - description: ID of the containing Access Profile
        in: path
        name: id
        required: true
        schema:
          example: 2c91808a7813090a017814121919ecca
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, sw*

          **attribute**: *eq, sw*

          **value**: *eq, sw*

          **created**: *gt, lt, ge, le*

          **modified**: *gt, lt, ge, le*

          **owner.id**: *eq, in*

          **source.id**: *eq, in*
        example: attribute eq "memberOf"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, attribute, value, created, modified**
        example: "name,-modified"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Entitlement'
                type: array
          description: List of Entitlements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:access-profile:read
        - idn:access-profile:manage
      summary: List Access Profile's Entitlements
      tags:
      - Access Profiles
  /access-requests:
    post:
      description: "This submits the access request into IdentityNow, where it will\
        \ follow any IdentityNow approval processes.\n\nAccess requests are processed\
        \ asynchronously by IdentityNow.  A success response from this endpoint means\
        \ the request\nhas been submitted to IDN and is queued for processing.  Because\
        \ this endpoint is asynchronous, it will not return an error\nif you submit\
        \ duplicate access requests in quick succession, or you submit an access request\
        \ for access that is already in progress, approved, or rejected.\nIt is best\
        \ practice to check for any existing access requests that reference the same\
        \ access items before submitting a new access request.  This can\nbe accomplished\
        \ by using the [access request status](https://developer.sailpoint.com/idn/api/v3/list-access-request-status)\
        \ or the [pending access request approvals](https://developer.sailpoint.com/idn/api/v3/list-pending-approvals)\
        \ endpoints.  You can also\nuse the [search API](https://developer.sailpoint.com/idn/api/v3/search)\
        \ to check the existing access items that an identity has before submitting\n\
        an access request to ensure you are not requesting access that is already\
        \ granted.\n\nThere are two types of access request:\n\n__GRANT_ACCESS__\n\
        * Can be requested for multiple identities in a single request.\n* Supports\
        \ self request and request on behalf of other users. Refer to the [Get Access\
        \ Request Configuration](https://developer.sailpoint.com/idn/api/v3/get-access-request-config)\
        \ endpoint for request configuration options.  \n* Allows any authenticated\
        \ token (except API) to call this endpoint to request to grant access to themselves.\
        \ Depending on the configuration, a user can request access for others.\n\
        * Roles, access profiles and entitlements can be requested.\n* While requesting\
        \ entitlements, maximum of 25 entitlements and 10 recipients are allowed in\
        \ a request.\n \n__REVOKE_ACCESS__\n* Can only be requested for a single identity\
        \ at a time.\n* You cannot use an access request to revoke access from an\
        \ identity if that access has been granted by role membership or by birthright\
        \ provisioning. \n* Does not support self request. Only manager can request\
        \ to revoke access for their directly managed employees.\n* If a `removeDate`\
        \ is specified, then the access will be removed on that date and time only\
        \ for roles and access profiles. Entitlements are currently unsupported for\
        \ `removeDate`.\n* Roles, access profiles, and entitlements can be requested\
        \ for revocation.\n* Revoke requests for entitlements are limited to 1 entitlement\
        \ per access request currently.\n* [Roles, Access Profiles] You can specify\
        \ a `removeDate` if the access doesn't already have a sunset date. The `removeDate`\
        \ must be a future date, in the UTC timezone. \n* Allows a manager to request\
        \ to revoke access for direct employees. A token with ORG_ADMIN authority\
        \ can also request to revoke access from anyone.\n\n>**Note:** There is no\
        \ indication to the approver in the IdentityNow UI that the approval request\
        \ is for a revoke action. Take this into consideration when calling this API.\n\
        \nA token with API authority cannot be used to call this endpoint. \n"
      operationId: createAccessRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:access-request:create
      summary: Submit an Access Request
      tags:
      - Access Requests
  /access-requests/cancel:
    post:
      description: |-
        This API endpoint cancels a pending access request. An access request can be cancelled only if it has not passed the approval step.
        Any token with ORG_ADMIN authority or token of the user who originally requested the access request is required to cancel it.
      operationId: cancelAccessRequest
      requestBody:
        content:
          application/json:
            example:
              accountActivityId: 2c91808568c529c60168cca6f90c1313
              comment: I requested this role by mistake.
            schema:
              $ref: '#/components/schemas/CancelAccessRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:access-request:cancel
      summary: Cancel Access Request
      tags:
      - Access Requests
  /access-requests/close:
    post:
      description: |
        This endpoint closes access requests that are stuck in a pending state. It can be used throughout a request's lifecycle even after the approval state, unlike the [Cancel Access Request endpoint](https://developer.sailpoint.com/idn/api/v3/cancel-access-request/). A token with ORG_ADMIN authority is required.

        To find pending access requests with the UI, navigate to Search and use this query: status: Pending AND "Access Request". Use the Column Chooser to select 'Tracking Number', and use the 'Download' button to export a CSV containing the tracking numbers.

        To find pending access requests with the API, use the [List Account Activities endpoint](https://developer.sailpoint.com/idn/api/v3/list-account-activities/).

        Input the IDs from either source.

        To track the status of endpoint requests, navigate to Search and use this query: name:"Close Identity Requests". Search will include "Close Identity Requests Started" audits when requests are initiated and "Close Identity Requests Completed" audits when requests are completed. The completion audit will list the identity request IDs that finished in error.

        This API triggers the [Provisioning Completed event trigger](https://developer.sailpoint.com/idn/docs/event-triggers/triggers/provisioning-completed/) for each access request that is closed.
      operationId: closeAccessRequest
      requestBody:
        content:
          application/json:
            example:
              accessRequestIds:
              - 2c90ad2a70ace7d50170acf22ca90010
              executionStatus: Terminated
              completionStatus: Failure
              message: The IdentityNow Administrator manually closed this request.
            schema:
              $ref: '#/components/schemas/CloseAccessRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Close Access Request
      tags:
      - Access Requests
  /access-request-config:
    get:
      description: This endpoint returns the current access-request configuration.
      operationId: getAccessRequestConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestConfig'
          description: Access Request Configuration Details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:access-request-config:read
      summary: Get Access Request Configuration
      tags:
      - Access Requests
    put:
      description: |-
        This endpoint replaces the current access-request configuration.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: setAccessRequestConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequestConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestConfig'
          description: Access Request Configuration Details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:access-request-config:update
      summary: Update Access Request Configuration
      tags:
      - Access Requests
  /access-request-status:
    get:
      description: |-
        The Access Request Status API returns a list of access request statuses based on the specified query parameters.
        Any token with any authority can request their own status. A token with ORG_ADMIN authority is required to call this API to get a list of statuses for other users.
      operationId: listAccessRequestStatus
      parameters:
      - description: Filter the results by the identity for which the requests were
          made. *me* indicates the current user. Mutually exclusive with *regarding-identity*.
        example: 2c9180877b2b6ea4017b2c545f971429
        in: query
        name: requested-for
        required: false
        schema:
          type: string
      - description: Filter the results by the identity that made the requests. *me*
          indicates the current user. Mutually exclusive with *regarding-identity*.
        example: 2c9180877b2b6ea4017b2c545f971429
        in: query
        name: requested-by
        required: false
        schema:
          type: string
      - description: Filter the results by the specified identity which is either
          the requester or target of the requests. *me* indicates the current user.
          Mutually exclusive with *requested-for* and *requested-by*.
        example: 2c9180877b2b6ea4017b2c545f971429
        in: query
        name: regarding-identity
        required: false
        schema:
          type: string
      - description: Filter the results by the specified identity which is the owner
          of the Identity Request Work Item. *me* indicates the current user.
        example: 2c9180877b2b6ea4017b2c545f971429
        in: query
        name: assigned-to
        required: false
        schema:
          type: string
      - description: If *true* it will populate the *X-Total-Count* response header
          with the number of results that would be returned if *limit* and *offset*
          were ignored.
        example: false
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: Max number of results to return.
        example: 100
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: Offset into the full result set. Usually specified with *limit*
          to paginate through the results. Defaults to 0 if not specified.
        example: 10
        in: query
        name: offset
        required: false
        schema:
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **accountActivityItemId**: *eq, in, ge, gt, le, lt, ne, isnull, sw*
        example: accountActivityItemId eq "2c918086771c86df0177401efcdf54c0"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, modified, accountActivityItemId, name**
        example: created
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RequestedItemStatus'
                type: array
          description: List of requested item status.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:access-request-status:read
      summary: Access Request Status
      tags:
      - Access Requests
  /access-request-approvals/pending:
    get:
      description: This endpoint returns a list of pending approvals. See "owner-id"
        query parameter below for authorization info.
      operationId: listPendingApprovals
      parameters:
      - description: |-
          If present, the value returns only pending approvals for the specified identity.
             * ORG_ADMIN users can call this with any identity ID value.
             * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.
             * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value.
        in: query
        name: owner-id
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **requestedFor.id**: *eq, in*

          **modified**: *gt, lt, ge, le, eq, in*
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, modified**
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PendingApproval'
                type: array
          description: List of Pending Approvals.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Pending Access Request Approvals List
      tags:
      - Access Request Approvals
  /access-request-approvals/completed:
    get:
      description: This endpoint returns list of completed approvals. See *owner-id*
        query parameter below for authorization info.
      operationId: listCompletedApprovals
      parameters:
      - description: |-
          If present, the value returns only completed approvals for the specified identity.
             * ORG_ADMIN users can call this with any identity ID value.
             * ORG_ADMIN users can also fetch all the approvals in the org, when owner-id is not used.
             * Non-ORG_ADMIN users can only specify *me* or pass their own identity ID value.
        in: query
        name: owner-id
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*

          **requestedFor.id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*

          **modified**: *gt, lt, ge, le, eq, in, ne, sw*
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, modified**
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CompletedApproval'
                type: array
          description: List of Completed Approvals.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Completed Access Request Approvals List
      tags:
      - Access Request Approvals
  /access-request-approvals/{approvalId}/approve:
    post:
      description: This endpoint approves an access request approval. Only the owner
        of the approval and ORG_ADMIN users are allowed to perform this action.
      operationId: approveAccessRequest
      parameters:
      - description: The id of the approval.
        example: 2c91808b7294bea301729568c68c002e
        in: path
        name: approvalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        description: Reviewer's comment.
        required: false
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Approves an access request approval.
      tags:
      - Access Request Approvals
  /access-request-approvals/{approvalId}/reject:
    post:
      description: This endpoint rejects an access request approval. Only the owner
        of the approval and admin users are allowed to perform this action.
      operationId: rejectAccessRequest
      parameters:
      - description: The id of the approval.
        example: 2c91808b7294bea301729568c68c002e
        in: path
        name: approvalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDto'
        description: Reviewer's comment.
        required: false
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Rejects an access request approval.
      tags:
      - Access Request Approvals
  /access-request-approvals/{approvalId}/forward:
    post:
      description: This endpoint forwards an access request approval. Only the owner
        of the approval and ORG_ADMIN users are allowed to perform this action.
      operationId: forwardAccessRequest
      parameters:
      - description: The id of the approval.
        example: 2c91808b7294bea301729568c68c002e
        in: path
        name: approvalId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForwardApprovalDto'
        description: Information about the forwarded approval.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Forwards an access request approval to a new owner.
      tags:
      - Access Request Approvals
  /access-request-approvals/approval-summary:
    get:
      description: "This endpoint returns the number of pending, approved and rejected\
        \ access requests approvals. See \"owner-id\" query parameter below for authorization\
        \ info."
      operationId: getAccessRequestApprovalSummary
      parameters:
      - description: |-
          The id of the owner or approver identity of the approvals. If present, the value returns approval summary for the specified identity.
             * ORG_ADMIN users can call this with any identity ID value.
             * ORG_ADMIN user can also fetch all the approvals in the org, when owner-id is not used.
             * Non ORG_ADMIN users can only specify *me* or pass their own identity ID value.
        in: query
        name: owner-id
        schema:
          type: string
      - description: |-
          From date is the date and time from which the results will be shown. It should be in a valid ISO-8601 format

          example: from-date=2020-03-19T19:59:11Z
        in: query
        name: from-date
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalSummary'
          description: "Number of pending, approved, rejected access request approvals."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the query parameter is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: "Get the number of pending, approved and rejected access requests approvals"
      tags:
      - Access Request Approvals
  /ai-access-request-recommendations:
    get:
      description: This API returns the access request recommendations for the specified
        identity. The default identity is *me* which indicates the current user.
      operationId: getAccessRequestRecommendations
      parameters:
      - description: Get access request recommendations for an identityId. *me* indicates
          the current user.
        example: 2c91808570313110017040b06f344ec9
        in: query
        name: identity-id
        required: false
        schema:
          default: me
          type: string
      - description: Max number of results to return.
        in: query
        name: limit
        required: false
        schema:
          default: 15
          maximum: 15
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: If *true* it will populate a list of translation messages in
          the response.
        example: false
        in: query
        name: include-translation-messages
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **access.name**: *co*

          **access.type**: *eq, in*

          **access.description**: *co, eq, in*
        example: access.name co "admin"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **access.name, access.type**

          By default the recommendations are sorted by highest confidence first.
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessRequestRecommendationItemDetail'
                type: array
          description: List of access request recommendations for the identityId
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Identity Access Request Recommendations
      tags:
      - IAI Access Request Recommendations
  /ai-access-request-recommendations/ignored-items:
    get:
      description: This API returns the list of ignored access request recommendations.
      operationId: getAccessRequestRecommendationsIgnoredItems
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **access.id**: *eq, in*

          **access.type**: *eq, in*

          **identityId**: *eq, in*
        example: identityId eq "2c9180846b0a0583016b299f210c1314"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **access.id, access.type, identityId, timestamp**
        example: access.id
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessRequestRecommendationActionItemResponseDto'
                type: array
          description: Returns list of ignored access request recommendations.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List of Ignored Access Request Recommendations
      tags:
      - IAI Access Request Recommendations
    post:
      description: "This API ignores a recommended access request item. Once an item\
        \ is ignored, it will be marked as ignored=true if it is still a recommended\
        \ item. The consumer can decide to hide ignored recommendations."
      operationId: addAccessRequestRecommendationsIgnoredItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequestRecommendationActionItemDto'
        description: The recommended access item to ignore for an identity.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestRecommendationActionItemResponseDto'
          description: Recommendation successfully stored as ignored.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Notification of Ignored Access Request Recommendations
      tags:
      - IAI Access Request Recommendations
  /ai-access-request-recommendations/requested-items:
    get:
      description: This API returns a list of requested access request recommendations.
      operationId: getAccessRequestRecommendationsRequestedItems
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **access.id**: *eq, in*

          **access.type**: *eq, in*

          **identityId**: *eq, in*
        example: access.id eq "2c9180846b0a0583016b299f210c1314"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **access.id, access.type, identityId, timestamp**
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessRequestRecommendationActionItemResponseDto'
                type: array
          description: Returns the list of requested access request recommendations.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List of Requested Access Request Recommendations
      tags:
      - IAI Access Request Recommendations
    post:
      description: "This API consumes a notification that a recommended access request\
        \ item was requested. This API does not actually make the request, it is just\
        \ a notification. This will help provide feedback in order to improve our\
        \ recommendations."
      operationId: addAccessRequestRecommendationsRequestedItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequestRecommendationActionItemDto'
        description: The recommended access item that was requested for an identity.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestRecommendationActionItemResponseDto'
          description: Notification successfully acknowledged.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Notification of Requested Access Request Recommendations
      tags:
      - IAI Access Request Recommendations
  /ai-access-request-recommendations/viewed-items:
    get:
      description: This API returns the list of viewed access request recommendations.
      operationId: getAccessRequestRecommendationsViewedItems
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **access.id**: *eq, in*

          **access.type**: *eq, in*

          **identityId**: *eq, in*
        example: access.id eq "2c9180846b0a0583016b299f210c1314"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **access.id, access.type, identityId, timestamp**
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessRequestRecommendationActionItemResponseDto'
                type: array
          description: Returns list of viewed access request recommendations.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List of Viewed Access Request Recommendations
      tags:
      - IAI Access Request Recommendations
    post:
      description: This API consumes a notification that a recommended access request
        item was viewed. Future recommendations with this item will be marked with
        viewed=true. This can be useful for the consumer to determine if there are
        any new/unviewed recommendations.
      operationId: addAccessRequestRecommendationsViewedItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequestRecommendationActionItemDto'
        description: The recommended access that was viewed for an identity.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRequestRecommendationActionItemResponseDto'
          description: Recommendation successfully stored as viewed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Notification of Viewed Access Request Recommendations
      tags:
      - IAI Access Request Recommendations
  /ai-access-request-recommendations/viewed-items/bulk-create:
    post:
      description: This API consumes a notification that a set of recommended access
        request item were viewed. Future recommendations with these items will be
        marked with viewed=true. This can be useful for the consumer to determine
        if there are any new/unviewed recommendations.
      operationId: addAccessRequestRecommendationsViewedItems
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AccessRequestRecommendationActionItemDto'
              type: array
        description: The recommended access items that were viewed for an identity.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessRequestRecommendationActionItemResponseDto'
                type: array
          description: Recommendations successfully stored as viewed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Notification of Viewed Access Request Recommendations in Bulk
      tags:
      - IAI Access Request Recommendations
  /accounts:
    get:
      description: "This returns a list of accounts.  \nA token with ORG_ADMIN authority\
        \ is required to call this API."
      operationId: listAccounts
      parameters:
      - description: "Determines whether Slim, or increased level of detail is provided\
          \ for each account in the returned list. FULL is the default behavior."
        example: FULL
        in: query
        name: detailLevel
        schema:
          enum:
          - SLIM
          - FULL
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **identityId**: *eq*

          **name**: *eq, in*

          **nativeIdentity**: *eq, in*

          **sourceId**: *eq, in*

          **uncorrelated**: *eq*
        example: identityId eq "2c9180858082150f0180893dbaf44201"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, name, created, modified**
        example: "id,name"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                SlimAccounts:
                  description: List of slim accounts that would result with *detailLevel
                    = SLIM*
                  value:
                  - attributes: null
                    created: 2021-09-28T02:15:44.644Z
                    description: null
                    disabled: false
                    features: "PROVISIONING, GROUP_PROVISIONING, SYNC_PROVISIONING,\
                      \ AUTHENTICATE"
                    hasEntitlements: true
                    id: 2c9180867c184ff6017c2a2fbf031667
                    identityId: 2c9180867c184ff6017c2a2fbf031666
                    locked: false
                    manuallyCorrelated: false
                    modified: 2021-09-28T02:16:12.207Z
                    name: Geovanni.0a7cad6df
                    nativeIdentity: "CN=Geovanni 0a7cad6df,OU=hpun,OU=org-data-service,DC=TestAutomationAD,DC=local"
                    sourceId: 2c91808b7c28b350017c2a2ec5790aa1
                    uuid: "{e4218fa4-da52-4bb0-aa41-d2dcc08a7ad8}"
                FullAccounts:
                  description: List of slim accounts that would result with *detailLevel
                    = FULL*  or not specifying it
                  value:
                  - attributes: null
                    authoritative: true
                    created: 2021-09-28T02:15:44.644Z
                    description: null
                    disabled: false
                    features: "PROVISIONING, GROUP_PROVISIONING, SYNC_PROVISIONING,\
                      \ AUTHENTICATE"
                    hasEntitlements: true
                    id: 2c9180867c184ff6017c2a2fbf031667
                    identityId: 2c9180867c184ff6017c2a2fbf031666
                    locked: false
                    manuallyCorrelated: false
                    modified: 2021-09-28T02:16:12.207Z
                    name: Geovanni.0a7cad6df
                    nativeIdentity: "CN=Geovanni 0a7cad6df,OU=hpun,OU=org-data-service,DC=TestAutomationAD,DC=local"
                    sourceId: 2c91808b7c28b350017c2a2ec5790aa1
                    systemAccount: false
                    uncorrelated: false
                    uuid: "{e4218fa4-da52-4bb0-aa41-d2dcc08a7ad8}"
              schema:
                items:
                  $ref: '#/components/schemas/listAccounts_200_response_inner'
                type: array
          description: List of account objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts:read
        - idn:accounts:manage
      summary: Accounts List
      tags:
      - Accounts
    post:
      description: "This API submits an account creation task and returns the task\
        \ ID.  \nThe `sourceId` where this account will be created must be included\
        \ in the `attributes` object.\nA token with ORG_ADMIN authority is required\
        \ to call this API."
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAttributesCreate'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts:manage
      summary: Create Account
      tags:
      - Accounts
  /accounts/{id}:
    delete:
      description: "This API submits an account delete task and returns the task ID.\
        \  \nA token with ORG_ADMIN authority is required to call this API."
      operationId: deleteAccount
      parameters:
      - description: The account ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts:manage
      summary: Delete Account
      tags:
      - Accounts
    get:
      description: "This API returns the details for a single account based on the\
        \ ID.  \nA token with ORG_ADMIN authority is required to call this API."
      operationId: getAccount
      parameters:
      - description: The account ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: An account object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts:read
        - idn:accounts:manage
      summary: Account Details
      tags:
      - Accounts
    patch:
      description: "This updates account details.  \nA token with ORG_ADMIN authority\
        \ is required to call this API."
      operationId: updateAccount
      parameters:
      - description: The account ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /identityId
              value: 2c9180845d1edece015d27a975983e21
            schema:
              items:
                type: object
              type: array
        description: "A list of account update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902)\
          \ standard."
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts:manage
      summary: Update Account
      tags:
      - Accounts
    put:
      description: "This API submits an account update task and returns the task ID.\
        \  \nA token with ORG_ADMIN authority is required to call this API."
      operationId: putAccount
      parameters:
      - description: The account ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAttributes'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts:manage
      summary: Update Account
      tags:
      - Accounts
  /accounts/{id}/entitlements:
    get:
      description: "This API returns entitlements of the account.  \nA token with\
        \ ORG_ADMIN authority is required to call this API."
      operationId: getAccountEntitlements
      parameters:
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Entitlement'
                type: array
          description: An array of account entitlements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts:read
      summary: Account Entitlements
      tags:
      - Accounts
  /accounts/{id}/reload:
    post:
      description: "This API asynchronously reloads the account directly from the\
        \ connector and performs a one-time aggregation process.  \nA token with ORG_ADMIN\
        \ authority is required to call this API."
      operationId: reloadAccount
      parameters:
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts-state:manage
      summary: Reload Account
      tags:
      - Accounts
  /accounts/{id}/enable:
    post:
      description: "This API submits a task to enable account and returns the task\
        \ ID.  \nA token with ORG_ADMIN authority is required to call this API."
      operationId: enableAccount
      parameters:
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountToggleRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts-state:manage
      summary: Enable Account
      tags:
      - Accounts
  /accounts/{id}/disable:
    post:
      description: "This API submits a task to disable the account and returns the\
        \ task ID.  \nA token with ORG_ADMIN authority is required to call this API."
      operationId: disableAccount
      parameters:
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountToggleRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts-state:manage
      summary: Disable Account
      tags:
      - Accounts
  /accounts/{id}/unlock:
    post:
      description: "This API submits a task to unlock an account and returns the task\
        \ ID.  \nA token with ORG_ADMIN authority is required to call this API."
      operationId: unlockAccount
      parameters:
      - description: The account id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUnlockRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsAsyncResult'
          description: Async task details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts-state:manage
      summary: Unlock Account
      tags:
      - Accounts
  /identities-accounts/{id}/enable:
    post:
      description: This API submits a task to enable IDN account for a single identity.
      externalDocs:
        description: Learn more about enabling identities here
        url: https://documentation.sailpoint.com/saas/help/common/users/user_access.html#enabling-user-identities
      operationId: enableAccountForIdentity
      parameters:
      - description: The identity id.
        example: 2c91808384203c2d018437e631158309
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts-state:manage
      summary: Enable IDN Account for Identity
      tags:
      - Accounts
  /identities-accounts/{id}/disable:
    post:
      description: This API submits a task to disable IDN account for a single identity.
      externalDocs:
        description: Learn more about disabling identities here
        url: https://documentation.sailpoint.com/saas/help/common/users/user_access.html#disabling-user-identities
      operationId: disableAccountForIdentity
      parameters:
      - description: The identity id.
        example: 2c91808384203c2d018437e631158309
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts-state:manage
      summary: Disable IDN Account for Identity
      tags:
      - Accounts
  /identities-accounts/enable:
    post:
      description: This API submits tasks to enable IDN account for each identity
        provided in the request body.
      externalDocs:
        description: Learn more about enabling identities here
        url: https://documentation.sailpoint.com/saas/help/common/users/user_access.html#enabling-user-identities
      operationId: enableAccountsForIdentities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitiesAccountsBulkRequest'
        required: true
      responses:
        "207":
          content:
            application/json:
              schema:
                example:
                - id: 2c9180858082150f0180893dbaf553fe
                  statusCode: 404
                  message: Referenced identity "2c9180858082150f0180893dbaf553fe"
                    was not found.
                - id: 2c91808384203c2d018437e631158308
                  statusCode: 202
                  message: null
                items:
                  $ref: '#/components/schemas/BulkIdentitiesAccountsResponse'
                type: array
          description: Bulk response details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts-state:manage
      summary: Enable IDN Accounts for Identities
      tags:
      - Accounts
  /identities-accounts/disable:
    post:
      description: This API submits tasks to disable IDN account for each identity
        provided in the request body.
      externalDocs:
        description: Learn more about disabling identities here
        url: https://documentation.sailpoint.com/saas/help/common/users/user_access.html#disabling-user-identities
      operationId: disableAccountsForIdentities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentitiesAccountsBulkRequest'
        required: true
      responses:
        "207":
          content:
            application/json:
              schema:
                example:
                - id: 2c9180858082150f0180893dbaf553fe
                  statusCode: 404
                  message: Referenced identity "2c9180858082150f0180893dbaf553fe"
                    was not found.
                - id: 2c91808384203c2d018437e631158308
                  statusCode: 202
                  message: null
                items:
                  $ref: '#/components/schemas/BulkIdentitiesAccountsResponse'
                type: array
          description: Bulk response details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts-state:manage
      summary: Disable IDN Accounts for Identities
      tags:
      - Accounts
  /accounts/search-attribute-config:
    get:
      description: |-
        This API retrieves a list of attribute/application associates currently configured in IdentityNow.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: getSearchAttributeConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchAttributeConfig'
                type: array
          description: List of attribute configurations in IdentityNow.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Retrieve a list of extended search attributes in IdentityNow.
      tags:
      - Search Attribute Configuration
    post:
      description: |-
        This API accepts an attribute name, an attribute display name and a list of name/value pair associates of application IDs to attribute names.  It will then validate the inputs and configure/create and attribute promotion configuration in the Link ObjectConfig.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: createSearchAttributeConfig
      requestBody:
        content:
          application/json:
            example:
              name: newMailAttribute
              displayName: New Mail Attribute
              applicationAttributes:
                "2c9180866166b5b0016167c32ef31a66": mail
                "2c9180866166b5b0016167c32ef31a67": mail
            schema:
              $ref: '#/components/schemas/SearchAttributeConfig'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Configure/create extended search attributes in IdentityNow.
      tags:
      - Search Attribute Configuration
  /accounts/search-attribute-config/{name}:
    delete:
      description: |-
        This API accepts an extended attribute name and deletes the corresponding extended attribute configuration.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: deleteSearchAttributeConfig
      parameters:
      - description: Name of the extended search attribute configuration to delete.
        in: path
        name: name
        required: true
        schema:
          example: newMailAttribute
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete an extended search attribute in IdentityNow.
      tags:
      - Search Attribute Configuration
    get:
      description: |-
        This API accepts an extended attribute name and retrieves the corresponding extended attribute configuration.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: getSingleSearchAttributeConfig
      parameters:
      - description: Name of the extended search attribute configuration to delete.
        in: path
        name: name
        required: true
        schema:
          example: newMailAttribute
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SearchAttributeConfig'
                type: array
          description: Specific attribute configuration in IdentityNow.
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get the details of a specific extended search attribute in IdentityNow.
      tags:
      - Search Attribute Configuration
    patch:
      description: |-
        This API updates an existing Search Attribute Configuration. The following fields are patchable:
        **name**, **displayName**, **applicationAttributes**
        A token with ORG_ADMIN authority is required to call this API.
      operationId: patchSearchAttributeConfig
      parameters:
      - description: Name of the Search Attribute Configuration to patch.
        in: path
        name: name
        required: true
        schema:
          example: promotedMailAttribute
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /name
              value: newAttributeName
            - op: replace
              path: /displayName
              value: new attribute display name
            - op: add
              path: /applicationAttributes
              value:
                "2c91808b79fd2422017a0b35d30f3968": employeeNumber
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAttributeConfig'
          description: Responds with the Search Attribute Configuration as updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update the details of a specific extended search attribute in IdentityNow.
      tags:
      - Search Attribute Configuration
  /account-activities:
    get:
      description: This gets a collection of account activities that satisfy the given
        query parameters.
      operationId: listAccountActivities
      parameters:
      - description: The identity that the activity was requested for. *me* indicates
          the current user. Mutually exclusive with *regarding-identity*.
        in: query
        name: requested-for
        required: false
        schema:
          type: string
      - description: The identity that requested the activity. *me* indicates the
          current user. Mutually exclusive with *regarding-identity*.
        in: query
        name: requested-by
        required: false
        schema:
          type: string
      - description: The specified identity will be either the requester or target
          of the account activity. *me* indicates the current user. Mutually exclusive
          with *requested-for* and *requested-by*.
        in: query
        name: regarding-identity
        required: false
        schema:
          type: string
      - description: The type of account activity.
        in: query
        name: type
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **type**: *eq, in, ge, gt, le, lt, ne, isnull, sw*

          **created**: *gt, lt, ge, le, eq, in, ne, isnull, sw*

          **modified**: *gt, lt, ge, le, eq, in, ne, isnull, sw*
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **type, created, modified**
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CancelableAccountActivity'
                type: array
          description: List of account activities
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List Account Activities
      tags:
      - Account Activities
  /account-activities/{id}:
    get:
      description: This gets a single account activity by its id.
      operationId: getAccountActivity
      parameters:
      - description: The account activity id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelableAccountActivity'
          description: An account activity object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get Account Activity
      tags:
      - Account Activities
  /account-aggregations/{id}/status:
    get:
      description: |-
        This API returns the status of an *in-progress* account aggregation, along with the total number of **NEW**, **CHANGED** and **DELETED** accounts found since the previous aggregation, and the number of those accounts that have been processed so far.

        Accounts that have not changed since the previous aggregation are not included in **totalAccounts** and **processedAccounts** counts returned by this API. This is distinct from **Accounts Scanned** shown in the Aggregation UI, which indicates total accounts scanned regardless of whether they changed or not.

        Since this endpoint reports on the status of an *in-progress* account aggregation, totalAccounts and processedAccounts may change between calls to this endpoint.

        *Only available up to an hour after the aggregation completes. May respond with *404 Not Found* after that.*

        A token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN or DASHBOARD authority is required to call this API.
      operationId: getAccountAggregationStatus
      parameters:
      - description: The account aggregation id
        example: 2c91808477a6b0c60177a81146b8110b
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAggregationStatus'
          description: An account aggregation status object
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: In-progress Account Aggregation status
      tags:
      - Account Aggregations
  /campaigns:
    get:
      deprecated: true
      description: Gets campaigns and returns them in a list. Can provide increased
        level of detail for each campaign if provided the correct query.
      operationId: getActiveCampaigns
      parameters:
      - description: "Determines whether slim, or increased level of detail is provided\
          \ for each campaign in the returned list. Slim is the default behavior."
        example: FULL
        in: query
        name: detail
        required: false
        schema:
          enum:
          - SLIM
          - FULL
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, sw*

          **status**: *eq, in*
        example: name eq "Manager Campaign"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, created**
        example: name
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Slim Campaign:
                  $ref: '#/components/examples/SlimCampaigns'
                Full Campaign:
                  $ref: '#/components/examples/FullCampaigns'
              schema:
                items:
                  $ref: '#/components/schemas/getActiveCampaigns_200_response_inner'
                type: array
          description: A list of campaign objects. By default list of SLIM campaigns
            is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth: []
      summary: List Campaigns
      tags:
      - Certification Campaigns
    post:
      deprecated: true
      description: Creates a new Certification Campaign with the information provided
        in the request body.
      operationId: createCampaign
      requestBody:
        content:
          application/json:
            examples:
              Manager:
                $ref: '#/components/examples/CreateCampaignManager'
              Search:
                $ref: '#/components/examples/CreateCampaignSearch'
              Source Owner:
                $ref: '#/components/examples/CreateCampaignSourceOwner'
              Role Composition:
                $ref: '#/components/examples/CreateCampaignRoleComposition'
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Manager:
                  $ref: '#/components/examples/FullCampaignManager'
                Search:
                  $ref: '#/components/examples/FullCampaignSearch'
                Source Owner:
                  $ref: '#/components/examples/FullCampaignSourceOwner'
                Role Composition:
                  $ref: '#/components/examples/FullCampaignRoleComposition'
              schema:
                $ref: '#/components/schemas/Campaign'
          description: Indicates that the campaign requested was successfully created
            and returns its representation.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign:create
      summary: Create a campaign
      tags:
      - Certification Campaigns
  /campaigns/delete:
    post:
      deprecated: true
      description: Deletes campaigns whose Ids are specified in the provided list
        of campaign Ids. Authorized callers must be an ORG_ADMIN or a CERT_ADMIN.
      operationId: deleteCampaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCampaignsRequest'
        description: The ids of the campaigns to delete.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign:delete
      summary: Deletes Campaigns
      tags:
      - Certification Campaigns
  /campaigns/{id}:
    get:
      deprecated: true
      description: "Retrieves information for an existing campaign using the campaign's\
        \ ID. Authorized callers must be a reviewer for this campaign, an ORG_ADMIN,\
        \ or a CERT_ADMIN."
      operationId: getCampaign
      parameters:
      - description: The ID of the campaign to be retrieved
        example: 2c91808571bcfcf80171c23e4b4221fc
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Manager:
                  $ref: '#/components/examples/SlimCampaignManager'
                Search:
                  $ref: '#/components/examples/SlimCampaignSearch'
                Source Owner:
                  $ref: '#/components/examples/SlimCampaignSourceOwner'
                RoleComposition:
                  $ref: '#/components/examples/SlimCampaignRoleComposition'
              schema:
                $ref: '#/components/schemas/slimcampaign'
          description: A campaign object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth: []
      summary: Get a campaign
      tags:
      - Certification Campaigns
    patch:
      deprecated: true
      description: "Allows updating individual fields on a campaign using the [JSON\
        \ Patch](https://tools.ietf.org/html/rfc6902) standard."
      operationId: updateCampaign
      parameters:
      - description: The ID of the campaign template being modified.
        example: 2c91808571bcfcf80171c23e4b4221fc
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /name
              value: This field has been updated!
            - op: copy
              from: /name
              path: /description
            schema:
              items:
                type: object
              type: array
        description: |
          A list of campaign update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.
          The fields that can be patched differ based on the status of the campaign.

          In the *STAGED* status, the following fields can be patched:
          * name
          * description
          * recommendationsEnabled
          * deadline
          * emailNotificationEnabled
          * autoRevokeAllowed

          In the *ACTIVE* status, the following fields can be patched:
          * deadline
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Manager:
                  $ref: '#/components/examples/SlimCampaignManager'
                Search:
                  $ref: '#/components/examples/SlimCampaignSearch'
                Source Owner:
                  $ref: '#/components/examples/SlimCampaignSourceOwner'
                RoleComposition:
                  $ref: '#/components/examples/SlimCampaignRoleComposition'
              schema:
                $ref: '#/components/schemas/slimcampaign'
          description: "Indicates the PATCH operation succeeded, and returns the campaign's\
            \ new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign:update
        - idn:campaign:read
      summary: Update a Campaign
      tags:
      - Certification Campaigns
  /campaigns/{id}/activate:
    post:
      deprecated: true
      description: |-
        Submits a job to activate the campaign with the given Id. The campaign must be staged.
        Requires roles of CERT_ADMIN and ORG_ADMIN
      operationId: startCampaign
      parameters:
      - description: The campaign id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateCampaignOptions'
        description: "Optional. If no timezone is specified, the standard UTC timezone\
          \ is used (i.e. UTC+00:00). Although this can take any timezone, the intended\
          \ value is the caller's timezone. The activation time calculated from the\
          \ given timezone may cause the campaign deadline time to be modified, but\
          \ it will remain within the original date. The timezone must be in a valid\
          \ ISO 8601 format."
        required: false
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign:update
      summary: Activate a Campaign
      tags:
      - Certification Campaigns
  /campaigns/{id}/complete:
    post:
      deprecated: true
      description: |
        :::caution

        This endpoint will run successfully for any campaigns that are **past due**.

        This endpoint will return a content error if the campaign is **not past due**.

        :::

        Completes a certification campaign. This is provided to admins so that they
        can complete a certification even if all items have not been completed.

        Requires roles of CERT_ADMIN and ORG_ADMIN
      operationId: completeCampaign
      parameters:
      - description: The campaign id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteCampaignOptions'
        description: "Optional. Default behavior is for the campaign to auto-approve\
          \ upon completion, unless autoCompleteAction=REVOKE"
        required: false
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign:update
      summary: Complete a Campaign
      tags:
      - Certification Campaigns
  /campaigns/{id}/run-remediation-scan:
    post:
      deprecated: true
      description: |-
        Kicks off remediation scan task for a certification campaign.
        Requires roles of CERT_ADMIN and ORG_ADMIN
      operationId: startCampaignRemediationScan
      parameters:
      - description: The ID of the campaign for which remediation scan is being run.
        in: path
        name: id
        required: true
        schema:
          example: 2c91808571bcfcf80171c23e4b4221fc
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-report:run
      summary: Run Campaign Remediation Scan
      tags:
      - Certification Campaigns
  /campaigns/{id}/reassign:
    post:
      deprecated: true
      description: This API reassigns the specified certifications from one identity
        to another. A token with ORG_ADMIN or CERT_ADMIN authority is required to
        call this API.
      operationId: move
      parameters:
      - description: The certification campaign ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminReviewReassign'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                id: 2c918086719eec070171a7e3355a360a
                type: ADMIN_REASSIGN
                targetType: CAMPAIGN
                targetId: 2c918086719eec070171a7e3355a834c
                status: QUEUED
                errors: []
                created: 2020-09-24T18:10:47.693Z
              schema:
                $ref: '#/components/schemas/CertificationTask'
          description: The reassign task that has been submitted.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:certification:write
      summary: Reassign Certifications
      tags:
      - Certification Campaigns
  /campaigns/{id}/reports:
    get:
      deprecated: true
      description: |-
        Fetches all reports for a certification campaign by campaign ID.
        Requires roles of CERT_ADMIN, DASHBOARD, ORG_ADMIN and REPORT_ADMIN
      operationId: getCampaignReports
      parameters:
      - description: The ID of the campaign for which reports are being fetched.
        in: path
        name: id
        required: true
        schema:
          example: 2c91808571bcfcf80171c23e4b4221fc
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CampaignReport'
                type: array
          description: Array of campaign report objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-report:read
      summary: Get Campaign Reports
      tags:
      - Certification Campaigns
  /campaigns/{id}/run-report/{type}:
    post:
      deprecated: true
      description: |-
        Runs a report for a certification campaign.
        Requires the following roles: CERT_ADMIN, DASHBOARD, ORG_ADMIN and REPORT_ADMIN.
      operationId: startCampaignReport
      parameters:
      - description: The ID of the campaign for which report is being run.
        in: path
        name: id
        required: true
        schema:
          example: 2c91808571bcfcf80171c23e4b4221fc
          type: string
      - description: The type of the report to run.
        in: path
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/ReportType'
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-report:run
      summary: Run Campaign Report
      tags:
      - Certification Campaigns
  /campaigns/reports-configuration:
    get:
      deprecated: true
      description: |-
        Fetches configuration for campaign reports. Currently it includes only one element - identity attributes defined as custom report columns.
        Requires roles of CERT_ADMIN and ORG_ADMIN.
      operationId: getCampaignReportsConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignReportsConfig'
          description: Campaign Report Configuration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-reports-config:read
      summary: Get Campaign Reports Configuration
      tags:
      - Certification Campaigns
    put:
      deprecated: true
      description: |-
        Overwrites configuration for campaign reports.
        Requires roles CERT_ADMIN and ORG_ADMIN.
      operationId: setCampaignReportsConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignReportsConfig'
        description: Campaign Report Configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignReportsConfig'
          description: The persisted Campaign Report Configuration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-reports-config:write
      summary: Set Campaign Reports Configuration
      tags:
      - Certification Campaigns
  /campaign-templates:
    get:
      deprecated: true
      description: |-
        Lists all CampaignTemplates. Scope can be reduced via standard V3 query params.

        All CampaignTemplates matching the query params
      operationId: listCampaignTemplates
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, created, modified**
        example: name
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **name**: *eq, ge, gt, in, le, lt, ne, sw*

          **id**: *eq, ge, gt, in, le, lt, ne, sw*
        example: name eq "manager template"
        in: query
        name: filters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: ../schemas/campaign/examples/CampaignTemplates.yaml
              schema:
                items:
                  $ref: '#/components/schemas/CampaignTemplate'
                type: array
          description: List of campaign template objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-template-list:read
      summary: List Campaign Templates
      tags:
      - Certification Campaigns
    post:
      deprecated: true
      description: Create a campaign Template based on campaign.
      operationId: createCampaignTemplate
      requestBody:
        content:
          application/json:
            examples:
              Manager:
                $ref: '#/components/examples/CreateCampaignTemplateManager'
              Search:
                $ref: '#/components/examples/CreateCampaignTemplateSearch'
              Source Owner:
                $ref: '#/components/examples/CreateCampaignTemplateSourceOwner'
              RoleComposition:
                $ref: '#/components/examples/CreateCampaignTemplateRoleComposition'
            schema:
              $ref: '#/components/schemas/CampaignTemplate'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Manager:
                  $ref: '#/components/examples/CampaignTemplateManager'
                Search:
                  $ref: '#/components/examples/CampaignTemplateSearch'
                Source Owner:
                  $ref: '#/components/examples/CampaignTemplateSourceOwner'
                RoleComposition:
                  $ref: '#/components/examples/CampaignTemplateRoleComposition'
              schema:
                $ref: '#/components/schemas/CampaignTemplate'
          description: Created successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-template:create
      summary: Create a Campaign Template
      tags:
      - Certification Campaigns
  /campaign-templates/{id}:
    delete:
      deprecated: true
      description: Deletes a campaign template by ID.
      operationId: deleteCampaignTemplate
      parameters:
      - description: The ID of the campaign template being deleted.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-template:delete
      summary: Delete a Campaign Template
      tags:
      - Certification Campaigns
    get:
      deprecated: true
      description: Fetches a campaign template by ID.
      operationId: getCampaignTemplate
      parameters:
      - description: The desired campaign template's ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Manager:
                  $ref: '#/components/examples/CampaignTemplateManager'
                Search:
                  $ref: '#/components/examples/CampaignTemplateSearch'
                Source Owner:
                  $ref: '#/components/examples/CampaignTemplateSourceOwner'
                RoleComposition:
                  $ref: '#/components/examples/CampaignTemplateRoleComposition'
              schema:
                $ref: '#/components/schemas/CampaignTemplate'
          description: The data for the campaign matching the given ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-template:read
      summary: Get a Campaign Template
      tags:
      - Certification Campaigns
    patch:
      deprecated: true
      description: "Allows updating individual fields on a campaign template using\
        \ the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard."
      operationId: patchCampaignTemplate
      parameters:
      - description: The ID of the campaign template being modified.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /description
              value: Updated description!
            - op: replace
              path: /campaign/filter/id
              value: ff80818155fe8c080155fe8d925b0316
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of campaign update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields are patchable:
          * name
          * description
          * deadlineDuration
          * campaign (all fields that are allowed during create)
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Manager:
                  $ref: '#/components/examples/CampaignTemplateManager'
                Search:
                  $ref: '#/components/examples/CampaignTemplateSearch'
                Source Owner:
                  $ref: '#/components/examples/CampaignTemplateSourceOwner'
                RoleComposition:
                  $ref: '#/components/examples/CampaignTemplateRoleComposition'
              schema:
                $ref: '#/components/schemas/CampaignTemplate'
          description: "Indicates the PATCH operation succeeded, and returns the template's\
            \ new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-template:update
      summary: Update a Campaign Template
      tags:
      - Certification Campaigns
  /campaign-templates/{id}/generate:
    post:
      deprecated: true
      description: |-
        Generates a new campaign from a campaign template.
        The campaign object contained in the template has special formatting applied to its name and description fields in order to determine the generated campaign's name/description. Placeholders in those fields are formatted with the current date and time upon generation.
        Placeholders consist of a percent sign followed by a letter indicating what should be inserted; for example, "%Y" will insert the current year; a campaign template named "Campaign for %y" would generate a campaign called "Campaign for 2020" (assuming the year at generation time is 2020).
        Valid placeholders are the date/time conversion suffix characters supported by [java.util.Formatter](https://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html).
        Requires roles ORG_ADMIN.
      operationId: startGenerateCampaignTemplate
      parameters:
      - description: The ID of the campaign template to use for generation.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignReference'
          description: "Indicates a campaign was successfully generated from this\
            \ template, and returns a reference to the new campaign."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-template:run
      summary: Generate a Campaign from Template
      tags:
      - Certification Campaigns
  /campaign-templates/{id}/schedule:
    delete:
      deprecated: true
      description: Deletes the schedule for a campaign template. Returns a 404 if
        there is no schedule set.
      operationId: deleteCampaignTemplateSchedule
      parameters:
      - description: The ID of the campaign template whose schedule is being deleted.
        example: 04bedce387bd47b2ae1f86eb0bb36dee
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-template:run
      summary: Deletes a Campaign Template's Schedule
      tags:
      - Certification Campaigns
    get:
      deprecated: true
      description: Gets the schedule for a campaign template. Returns a 404 if there
        is no schedule set.
      operationId: getCampaignTemplateSchedule
      parameters:
      - description: The ID of the campaign template whose schedule is being fetched.
        example: 04bedce387bd47b2ae1f86eb0bb36dee
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: The current schedule for the campaign template. See the PUT
            endpoint documentation for more examples.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-template:read
      summary: Gets a Campaign Template's Schedule
      tags:
      - Certification Campaigns
    put:
      deprecated: true
      description: "Sets the schedule for a campaign template. If a schedule already\
        \ exists, it will be overwritten with the new one."
      operationId: setCampaignTemplateSchedule
      parameters:
      - description: The ID of the campaign template being scheduled.
        example: 04bedce387bd47b2ae1f86eb0bb36dee
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              Monthly:
                description: "Runs on the 15th and last day of the month, at 5PM."
                value:
                  type: MONTHLY
                  hours:
                    type: LIST
                    values:
                    - "17"
                  days:
                    type: LIST
                    values:
                    - "15"
              Once a year:
                description: Runs every January 1st at midnight.
                value:
                  type: ANNUALLY
                  hours:
                    type: LIST
                    values:
                    - "0"
                  days:
                    type: LIST
                    values:
                    - --01-01
              Quarterly:
                description: Runs once a quarter (every 3 months) on the first of
                  the month at 1AM.
                value:
                  type: ANNUALLY
                  hours:
                    type: LIST
                    values:
                    - "1"
                  days:
                    type: LIST
                    values:
                    - "1"
                  months:
                    type: LIST
                    values:
                    - "1"
                    interval: 3
              Yearly on Specific Days:
                description: "Runs on March 12 and December 5 at 1AM, every year."
                value:
                  type: ANNUALLY
                  hours:
                    type: LIST
                    values:
                    - "1"
                  days:
                    type: LIST
                    values:
                    - --03-12
                    - --12-05
              On a Specific Date:
                description: "Runs at 1AM on February 18th, 2020"
                value:
                  type: CALENDAR
                  hours:
                    type: LIST
                    values:
                    - "1"
                  days:
                    type: LIST
                    values:
                    - 2020-02-18
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:campaign-template:run
      summary: Sets a Campaign Template's Schedule
      tags:
      - Certification Campaigns
  /certifications/{id}/reassign-async:
    post:
      deprecated: true
      description: This API initiates a task to reassign up to 500 identities or items
        in an identity campaign certification to another reviewer. The `certification-tasks`
        API can be used to get an updated status on the task and determine when the
        reassignment is complete. A token with ORG_ADMIN or CERT_ADMIN authority is
        required to call this API. Reviewers for this certification can also call
        this API.
      operationId: submitReassignCertsAsync
      parameters:
      - description: The identity campaign certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewReassign'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCertificationTask'
          description: A certification task object for the reassignment which can
            be queried for status.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:certification:write
      summary: Reassign Certifications Asynchronously
      tags:
      - Certifications
  /certifications/{id}/tasks/{taskId}:
    get:
      description: This API returns the status of a certification task. A token with
        ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers
        for this certification can also call this API.
      operationId: getIdentityCertificationTaskStatus
      parameters:
      - description: The identity campaign certification ID
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The certification task ID
        in: path
        name: taskId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCertificationTask'
          description: A certification task object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Certification Task Status
      tags:
      - Certifications
  /certifications/{id}/tasks-pending:
    get:
      description: This API returns the status of all pending (`QUEUED` or `IN_PROGRESS`)
        tasks for an identity campaign certification. A token with ORG_ADMIN or CERT_ADMIN
        authority is required to call this API. Reviewers for this certification can
        also call this API.
      operationId: getIdentityCertificationPendingTasks
      parameters:
      - description: The identity campaign certification ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityCertificationTask'
                type: array
          description: A list of pending (`QUEUED` or `IN_PROGRESS`) certification
            task objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Pending Certification Tasks
      tags:
      - Certifications
  /certifications/{certificationId}/access-review-items/{itemId}/permissions:
    get:
      deprecated: true
      description: This API returns the permissions associated with an entitlement
        certification item based on the certification item's ID. A token with ORG_ADMIN
        or CERT_ADMIN authority is required to call this API. Reviewers for this certification
        can also call this API.
      operationId: getIdentityCertificationItemPermissions
      parameters:
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **target**: *eq, sw*

          **rights**: *ca*

          All field values (second filter operands) are case-insensitive for this API.

          Only a single *and* or *or* composite filter operator may be used. It must also be used between a target filter and a rights filter, not between 2 filters for the same field.

          For example, the following is valid: `?filters=rights+ca+(%22CREATE%22)+and+target+eq+%22SYS.OBJAUTH2%22`

          The following is invalid: `?filters=rights+ca+(%22CREATE%22)+and+rights+ca+(%SELECT%22)`
        example: target eq "SYS.OBJAUTH2"
        in: query
        name: filters
        schema:
          type: string
      - description: The certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: certificationId
        required: true
        schema:
          type: string
      - description: The certification item ID
        example: 2c91808671bcbab40171bd945d961227
        in: path
        name: itemId
        required: true
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PermissionDto'
                type: array
          description: A list of permissions associated with the given itemId
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:certification:read
      summary: Permissions for Entitlement Certification Item
      tags:
      - Certifications
  /certifications/{id}/reviewers:
    get:
      deprecated: true
      description: This API returns a list of reviewers for the certification. A token
        with ORG_ADMIN or CERT_ADMIN authority is required to call this API. Reviewers
        for this certification can also call this API.
      operationId: listCertificationReviewers
      parameters:
      - description: The certification ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, sw*

          **email**: *eq, sw*
        example: name eq "Bob"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, email**
        example: name
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
                type: array
          description: A list of reviewers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:certification:read
      summary: List of Reviewers for certification
      tags:
      - Certifications
  /connector-rules:
    get:
      description: |-
        Returns the list of connector rules.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: getConnectorRuleList
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConnectorRuleResponse'
                type: array
          description: A list of connector rules
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:rule-management-connector:read
        - idn:rule-management-connector:manage
      summary: List Connector Rules
      tags:
      - Connector Rule Management
    post:
      description: |-
        Creates a new connector rule.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: createConnectorRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorRuleCreateRequest'
        description: The connector rule to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorRuleResponse'
          description: The created connector rule
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:rule-management-connector:manage
      summary: Create Connector Rule
      tags:
      - Connector Rule Management
  /connector-rules/{id}:
    delete:
      description: |-
        Deletes the connector rule specified by the given ID.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: deleteConnectorRule
      parameters:
      - description: ID of the connector rule to delete
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:rule-management-connector:manage
      summary: Delete a Connector-Rule
      tags:
      - Connector Rule Management
    get:
      description: |-
        Returns the connector rule specified by ID.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: getConnectorRule
      parameters:
      - description: ID of the connector rule to retrieve
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorRuleResponse'
          description: Connector rule with the given ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:rule-management-connector:read
        - idn:rule-management-connector:manage
      summary: Connector-Rule by ID
      tags:
      - Connector Rule Management
    put:
      description: |-
        Updates an existing connector rule with the one provided in the request body. Note that the fields 'id', 'name', and 'type' are immutable.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: updateConnectorRule
      parameters:
      - description: ID of the connector rule to update
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorRuleUpdateRequest'
        description: The connector rule with updated data
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorRuleResponse'
          description: The updated connector rule
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:rule-management-connector:manage
      summary: Update a Connector Rule
      tags:
      - Connector Rule Management
  /connector-rules/validate:
    post:
      description: |-
        Returns a list of issues within the code to fix, if any.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: validateConnectorRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCode'
        description: The code to validate
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorRuleValidationResponse'
          description: The status of the code's eligibility as a connector rule
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:rule-management-connector:read
        - idn:rule-management-connector:manage
      summary: Validate Connector Rule
      tags:
      - Connector Rule Management
  /connectors:
    get:
      description: |-
        Fetches list of connectors that have 'RELEASED' status using filtering and pagination.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: getConnectorList
      parameters:
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **name**: *sw*

          **type**: *eq*

          **directConnect**: *eq*

          **category**: *eq*

          **features**: *ca*
        example: directConnect eq "true"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: "The locale to apply to the config. If no viable locale is given,\
          \ it will default to \"en\""
        in: query
        name: locale
        schema:
          enum:
          - de
          - "false"
          - fi
          - sv
          - ru
          - pt
          - ko
          - zh-TW
          - en
          - it
          - fr
          - zh-CN
          - hu
          - es
          - cs
          - ja
          - pl
          - da
          - nl
          example: de
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/V3ConnectorDto'
                type: array
          description: A Connector Dto object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:connector-source-config:read
      summary: Gets connector list
      tags:
      - Connectors
  /custom-password-instructions:
    post:
      description: This API creates the custom password instructions for the specified
        page ID. A token with ORG_ADMIN authority is required to call this API.
      operationId: createCustomPasswordInstructions
      requestBody:
        content:
          application/json:
            example:
              pageId: reset-password:enter-password
              pageContent: See company password policies for details by clicking <a
                href="url">here</a>
            schema:
              $ref: '#/components/schemas/CustomPasswordInstruction'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                pageId: reset-password:enter-password
                locale: default
                pageContent: See company password policies for details by clicking
                  <a href="url">here</a>
              schema:
                $ref: '#/components/schemas/CustomPasswordInstruction'
          description: Reference to the custom password instructions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create Custom Password Instructions
      tags:
      - Custom Password Instructions
  /custom-password-instructions/{pageId}:
    delete:
      description: This API delete the custom password instructions for the specified
        page ID. A token with ORG_ADMIN authority is required to call this API.
      operationId: deleteCustomPasswordInstructions
      parameters:
      - description: The page ID of custom password instructions to delete.
        example: mfa:select
        in: path
        name: pageId
        required: true
        schema:
          enum:
          - change-password:enter-password
          - change-password:finish
          - flow-selection:select
          - forget-username:user-email
          - mfa:enter-code
          - mfa:enter-kba
          - mfa:select
          - reset-password:enter-password
          - reset-password:enter-username
          - reset-password:finish
          - unlock-account:enter-username
          - unlock-account:finish
          type: string
      - description: "The locale for the custom instructions, a BCP47 language tag.\
          \ The default value is \\\"default\\\"."
        in: query
        name: locale
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete Custom Password Instructions by page ID
      tags:
      - Custom Password Instructions
    get:
      description: This API returns the custom password instructions for the specified
        page ID. A token with ORG_ADMIN authority is required to call this API.
      operationId: getCustomPasswordInstructions
      parameters:
      - description: The page ID of custom password instructions to query.
        example: mfa:select
        in: path
        name: pageId
        required: true
        schema:
          enum:
          - change-password:enter-password
          - change-password:finish
          - flow-selection:select
          - forget-username:user-email
          - mfa:enter-code
          - mfa:enter-kba
          - mfa:select
          - reset-password:enter-password
          - reset-password:enter-username
          - reset-password:finish
          - unlock-account:enter-username
          - unlock-account:finish
          type: string
      - description: "The locale for the custom instructions, a BCP47 language tag.\
          \ The default value is \\\"default\\\"."
        in: query
        name: locale
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                pageId: reset-password:enter-password
                locale: default
                pageContent: See company password policies for details by clicking
                  <a href="url">here</a>
              schema:
                $ref: '#/components/schemas/CustomPasswordInstruction'
          description: Reference to the custom password instructions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get Custom Password Instructions by Page ID
      tags:
      - Custom Password Instructions
  /entitlements:
    get:
      description: |-
        This API returns a list of entitlements.

        This API can be used in one of the two following ways: either getting entitlements for a specific **account-id**, or getting via use of **filters** (those two options are exclusive).

        Any authenticated token can call this API.
      operationId: listEntitlements
      parameters:
      - description: "The account ID. If specified, returns only entitlements associated\
          \ with the given Account. Cannot be specified with the **filters**, **segmented-for-identity**,\
          \ **for-segment-ids**, or **include-unsegmented** param(s)."
        example: ef38f94347e94562b5bb8424a56397d8
        in: query
        name: account-id
        required: false
        schema:
          type: string
      - description: |-
          If present and not empty, additionally filters Entitlements to those which are assigned to the Segment(s) which are visible to the Identity with the specified ID. By convention, the value **me** can stand in for the current user's Identity ID.
          Cannot be specified with the **account-id** or **for-segment-ids** param(s). It is also illegal to specify a value that refers to a different user's Identity.
        example: me
        in: query
        name: segmented-for-identity
        required: false
        schema:
          type: string
      - description: |-
          If present and not empty, additionally filters Access Profiles to those which are assigned to the Segment(s) with the specified IDs.
          Cannot be specified with the **account-id** or **segmented-for-identity** param(s).
        example: "041727d4-7d95-4779-b891-93cf41e98249,a378c9fa-bae5-494c-804e-a1e30f69f649"
        in: query
        name: for-segment-ids
        required: false
        schema:
          format: comma-separated
          type: string
      - description: "Whether or not the response list should contain unsegmented\
          \ Entitlements. If **for-segment-ids** and **segmented-for-identity** are\
          \ both absent or empty, specifying **include-unsegmented=false** results\
          \ in an error."
        example: true
        in: query
        name: include-unsegmented
        required: false
        schema:
          default: true
          type: boolean
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, name, created, modified, type, attribute, value, source.id, requestable**
        example: "name,-modified"
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, in, sw*

          **type**: *eq, in*

          **attribute**: *eq, in*

          **value**: *eq, in, sw*

          **source.id**: *eq, in*

          **requestable**: *eq*

          **created**: *gt, lt, ge, le*

          **modified**: *gt, lt, ge, le*

          **owner.id**: *eq, in*
        example: attribute eq "memberOf"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Entitlement'
                type: array
          description: List of entitlements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:entitlement:read
        - idn:entitlement:manage
      summary: Gets a list of entitlements.
      tags:
      - Entitlements
  /entitlements/{id}:
    get:
      description: This API returns an entitlement by its ID.
      operationId: getEntitlement
      parameters:
      - description: The entitlement ID
        example: 2c91808874ff91550175097daaec161c
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                sourceSchemaObjectType: group
                attribute: memberOf
                attributes:
                  GroupType: Security
                  sAMAccountName: LauncherTest1
                  GroupScope: Global
                  objectguid: "{01a6e70b-9705-4155-a5c6-492a9bcc8c64}"
                  objectSid: S-1-5-21-3585869415-1648031554-2909195034-1633
                  cn: LauncherTest1
                  msDS-PrincipalName: AUTOMATIONAD\LauncherTest1
                value: "CN=LauncherTest1,OU=LauncherTestOrg,OU=slpt-automation,DC=TestAutomationAD,DC=local"
                description: some description
                privileged: false
                cloudGoverned: false
                source:
                  type: SOURCE
                  id: 2c9180877504c40e0175097d5ce707c8
                  name: EndToEnd-ADSource
                owner:
                  id: 2c9180858315595501831958427e5424
                  name: Addie Smith
                  type: IDENTITY
                segments:
                - 1d126fe0-45e2-4aea-bc64-a07e9344ef26
                manuallyUpdatedFields:
                  DISPLAY_NAME: true
                  DESCRIPTION: true
                id: 2c91808c74ff913f0175097daa9d59cd
                name: LauncherTest1
                created: 2020-10-08T18:33:52.029Z
                modified: 2021-01-19T16:53:35.707Z
              schema:
                $ref: '#/components/schemas/Entitlement'
          description: An entitlement
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:entitlement:read
        - idn:entitlement:manage
      summary: Get an entitlement
      tags:
      - Entitlements
    patch:
      description: |-
        This API updates an existing entitlement using [JSON Patch](https://tools.ietf.org/html/rfc6902) syntax.

        The following fields are patchable: **requestable**, **privileged**, **segments**, **owner**, **name**, **description**, and **manuallyUpdatedFields**

        When you're patching owner, only owner type and owner id must be provided. Owner name is optional, and it won't be modified. If the owner name is provided, it should correspond to the real name. The only owner type currently supported is IDENTITY.

        A token with ORG_ADMIN or SOURCE_ADMIN authority is required to call this API.
      operationId: patchEntitlement
      parameters:
      - description: ID of the entitlement to patch
        in: path
        name: id
        required: true
        schema:
          example: 2c91808a7813090a017814121e121518
          type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Make an entitlement requestable and privileged in one call:
                description: This example shows how multiple fields may be updated
                  with a single patch call.
                value:
                - op: replace
                  path: /requestable
                  value: true
                - op: replace
                  path: /privileged
                  value: true
              Assign an entitlement to a segment:
                description: This example shows how to use patch to assign an entitlement
                  to a segment by adding the segment's ID to the entitlement's segments
                  array.
                value:
                - op: add
                  path: /segments/-
                  value: f7b1b8a3-5fed-4fd4-ad29-82014e137e19
              Assign an owner to an entitlement:
                description: This example shows how to use patch to assign an owner
                  to an entitlement by adding the owner's info to the entitlement.
                value:
                - op: add
                  path: /owner
                  value:
                    type: IDENTITY
                    id: 2c9180858315595501831958427e5424
              Replace an owner for an entitlement:
                description: This example shows how to use patch to replace an entitlement's
                  owner by replacing the owner's info to the entitlement.
                value:
                - op: replace
                  path: /owner
                  value:
                    type: IDENTITY
                    id: 2c9180858315595501831958427e5424
              Set entitlement manually updated fields:
                description: "This example shows how to set an entitlement's manually\
                  \ updated fields values with patch request. Values for all manually\
                  \ updateable fields must be specified in the request. For now only\
                  \ two entitlement fields support this: DISPLAY_NAME and DESCRIPTION."
                value:
                - op: replace
                  path: /manuallyUpdatedFields
                  value:
                    DISPLAY_NAME: true
                    DESCRIPTION: true
              Add the description for an entitlement:
                description: This example shows how to use patch to add a description
                  for the entitlement.
                value:
                - op: add
                  path: /description
                  value: new description for the entitlement
              Update the name for an entitlement:
                description: This example shows how to use patch to update an entitlement's
                  name.
                value:
                - op: replace
                  path: /name
                  value: entitlement new name
            schema:
              example:
              - op: replace
                path: /requestable
                value: true
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entitlement'
          description: Responds with the entitlement as updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:entitlement:manage
      summary: Patch an entitlement
      tags:
      - Entitlements
  /entitlements/{id}/parents:
    get:
      description: This API returns a list of all parent entitlements of a given entitlement.
      operationId: listEntitlementParents
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: Entitlement Id
        example: 2c91808c74ff913f0175097daa9d59cd
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, name, created, modified, type, attribute, value, source.id**
        example: "name,-modified"
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, in, sw*

          **type**: *eq, in*

          **attribute**: *eq, in*

          **value**: *eq, in, sw*

          **source.id**: *eq, in*

          **requestable**: *eq*

          **created**: *gt, lt, ge, le*

          **modified**: *gt, lt, ge, le*
        example: attribute eq "memberOf"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - sourceSchemaObjectType: group
                attribute: memberOf
                attributes:
                  GroupType: Security
                  sAMAccountName: LauncherTest1
                  GroupScope: Global
                  objectguid: "{01a6e70b-9705-4155-a5c6-492a9bcc8c64}"
                  objectSid: S-1-5-21-3585869415-1648031554-2909195034-1633
                  cn: LauncherTest1
                  msDS-PrincipalName: AUTOMATIONAD\LauncherTest1
                value: "CN=LauncherTest1,OU=LauncherTestOrg,OU=slpt-automation,DC=TestAutomationAD,DC=local"
                description: some description
                privileged: false
                cloudGoverned: false
                source:
                  type: SOURCE
                  id: 2c9180877504c40e0175097d5ce707c8
                  name: EndToEnd-ADSource
                owner:
                  id: 2a2fdacca5e345f18bf7970cfbb8fec2
                  name: identity 1
                  type: IDENTITY
                segments:
                - 1d126fe0-45e2-4aea-bc64-a07e9344ef26
                manuallyUpdatedFields:
                  DISPLAY_NAME: true
                  DESCRIPTION: true
                id: 2c91808c74ff913f0175097daa9d59cd
                name: LauncherTest1
                created: 2020-10-08T18:33:52.029Z
                modified: 2021-01-19T16:53:35.707Z
              schema:
                items:
                  $ref: '#/components/schemas/Entitlement'
                type: array
          description: List of entitlements parents from an entitlement
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:entitlement:read
        - idn:entitlement:manage
      summary: List of entitlements parents
      tags:
      - Entitlements
  /entitlements/{id}/children:
    get:
      description: This API returns a list of all child entitlements of a given entitlement.
      operationId: listEntitlementChildren
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: Entitlement Id
        example: 2c91808874ff91550175097daaec161c
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, name, created, modified, type, attribute, value, source.id**
        example: "name,-modified"
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, in, sw*

          **type**: *eq, in*

          **attribute**: *eq, in*

          **value**: *eq, in, sw*

          **source.id**: *eq, in*

          **requestable**: *eq*

          **created**: *gt, lt, ge, le*

          **modified**: *gt, lt, ge, le*
        example: attribute eq "memberOf"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - sourceSchemaObjectType: group
                attribute: memberOf
                attributes:
                  GroupType: Security
                  sAMAccountName: LauncherTest1
                  GroupScope: Global
                  objectguid: "{01a6e70b-9705-4155-a5c6-492a9bcc8c64}"
                  objectSid: S-1-5-21-3585869415-1648031554-2909195034-1633
                  cn: LauncherTest1
                  msDS-PrincipalName: AUTOMATIONAD\LauncherTest1
                value: "CN=LauncherTest1,OU=LauncherTestOrg,OU=slpt-automation,DC=TestAutomationAD,DC=local"
                description: some description
                privileged: false
                cloudGoverned: false
                source:
                  type: SOURCE
                  id: 2c9180877504c40e0175097d5ce707c8
                  name: EndToEnd-ADSource
                owner:
                  id: 2a2fdacca5e345f18bf7970cfbb8fec2
                  name: identity 1
                  type: IDENTITY
                segments:
                - 1d126fe0-45e2-4aea-bc64-a07e9344ef26
                manuallyUpdatedFields:
                  DISPLAY_NAME: true
                  DESCRIPTION: true
                id: 2c91808c74ff913f0175097daa9d59cd
                name: LauncherTest1
                created: 2020-10-08T18:33:52.029Z
                modified: 2021-01-19T16:53:35.707Z
              schema:
                items:
                  $ref: '#/components/schemas/Entitlement'
                type: array
          description: List of entitlements children from an entitlement
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:entitlement:read
      summary: List of entitlements children
      tags:
      - Entitlements
  /entitlements/bulk-update:
    post:
      description: "This API applies an update to every entitlement of the list.\n\
        \nThe number of entitlements to update is limited to 50 items maximum.\n\n\
        The JsonPatch update follows the [JSON Patch](https://tools.ietf.org/html/rfc6902)\
        \ standard. allowed operations : **{ \"op\": \"replace\", \"path\": \"/privileged\"\
        , \"value\": boolean }**  **{ \"op\": \"replace\", \"path\": \"/requestable\"\
        ,\"value\": boolean }** \n\nA token with ORG_ADMIN or API authority is required\
        \ to call this API."
      operationId: updateEntitlementsInBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitlementBulkUpdateRequest'
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Bulk update an entitlement list
      tags:
      - Entitlements
  /entitlements/{id}/entitlement-request-config:
    get:
      description: This API returns the entitlement request config for a specified
        entitlement.
      operationId: getEntitlementRequestConfig
      parameters:
      - description: Entitlement Id
        example: 2c91808874ff91550175097daaec161c
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                accessRequestConfig:
                  requestCommentRequired: true
                  denialCommentRequired: true
                  approvalSchemes:
                  - approverType: ENTITLEMENT_OWNER
                    approverId: null
                  - approverType: SOURCE_OWNER
                    approverId: null
                  - approverType: MANAGER
                    approverId: null
                  - approverType: GOVERNANCE_GROUP
                    approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
              schema:
                $ref: '#/components/schemas/EntitlementRequestConfig'
          description: An Entitlement Request Config
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:entitlement:read
        - idn:entitlement:manage
      summary: Get Entitlement Request Config
      tags:
      - Entitlements
    put:
      description: This API replaces the entitlement request config for a specified
        entitlement.
      operationId: putEntitlementRequestConfig
      parameters:
      - description: Entitlement ID
        in: path
        name: id
        required: true
        schema:
          example: 2c91808a7813090a017814121e121518
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntitlementRequestConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                accessRequestConfig:
                  requestCommentRequired: true
                  denialCommentRequired: true
                  approvalSchemes:
                  - approverType: ENTITLEMENT_OWNER
                    approverId: null
                  - approverType: SOURCE_OWNER
                    approverId: null
                  - approverType: MANAGER
                    approverId: null
                  - approverType: GOVERNANCE_GROUP
                    approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
              schema:
                $ref: '#/components/schemas/EntitlementRequestConfig'
          description: Responds with the entitlement request config as updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:entitlement:manage
      summary: Replace Entitlement Request Config
      tags:
      - Entitlements
  /generate-password-reset-token/digit:
    post:
      description: This API is used to generate a digit token for password management.
        Requires authorization scope of "idn:password-digit-token:create".
      operationId: generateDigitToken
      requestBody:
        content:
          application/json:
            example:
              userId: Abby.Smith
              length: 8
              durationMinutes: 5
            schema:
              $ref: '#/components/schemas/PasswordDigitTokenReset'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                digitToken: "09087713"
                requestId: e1267ecd-fcd9-4c73-9c55-12555efad136
              schema:
                $ref: '#/components/schemas/PasswordDigitToken'
          description: The digit token for password management.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Generate a digit token
      tags:
      - Password Management
  /historical-identities:
    get:
      description: This gets the list of identities for the customer. This list end
        point does not support count=true request param. The total  count of identities
        would never be returned even if the count param is specified in the request
        Requires authorization scope of 'idn:identity-history:read'
      operationId: listHistoricalIdentities
      parameters:
      - description: "This param is used for starts-with search for first, last and\
          \ display name of the identity"
        example: Ada
        in: query
        name: starts-with-query
        schema:
          type: string
      - description: Indicates if we want to only list down deleted identities or
          not.
        example: true
        in: query
        name: is-deleted
        schema:
          type: boolean
      - description: Indicates if we want to only list active or inactive identities.
        example: true
        in: query
        name: is-active
        schema:
          type: boolean
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityListItem'
                type: array
          description: List of identities for the customer.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-history:read
      summary: Lists all the identities
      tags:
      - Identity History
  /historical-identities/{id}:
    get:
      description: This method retrieves a specified identity Requires authorization
        scope of 'idn:identity-history:read'
      operationId: getHistoricalIdentity
      parameters:
      - description: The identity id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityHistoryResponse'
          description: The identity object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-history:read
      summary: Get latest snapshot of identity
      tags:
      - Identity History
  /historical-identities/{id}/access-items:
    get:
      description: 'This method retrieves a list of access item for the identity filtered
        by the access item type Requires authorization scope of ''idn:identity-history:read'' '
      operationId: listIdentityAccessItems
      parameters:
      - description: The identity id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The type of access item for the identity. If not provided, it\
          \ defaults to account"
        example: account
        in: query
        name: type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Access Profile:
                  description: An access profile response
                  value:
                  - accessType: accessProfile
                    id: 2c918087763e69d901763e72e97f006f
                    name: sample
                    sourceName: DataScienceDataset
                    sourceId: 2793o32dwd
                    description: AccessProfile - Workday/Citizenship access
                    displayName: Dr. Arden Rogahn MD
                    entitlementCount: 12
                    appDisplayName: AppName
                Account:
                  description: An account response
                  value:
                  - accessType: account
                    id: 2c918087763e69d901763e72e97f006f
                    nativeIdentity: dr.arden.ogahn.d
                    sourceName: DataScienceDataset
                    sourceId: 2793o32dwd
                    entitlementCount: 12
                    displayName: Dr. Arden Rogahn MD
                App:
                  description: An app response
                  value:
                  - accessType: app
                    id: 2c918087763e69d901763e72e97f006f
                    name: appName
                Entitlement:
                  description: An entitlement event
                  value:
                  - accessType: entitlement
                    id: 2c918087763e69d901763e72e97f006f
                    attribute: groups
                    value: Upward mobility access
                    type: group
                    sourceName: DataScienceDataset
                    sourceId: 2793o32dwd
                    description: Entitlement - Workday/Citizenship access
                    displayName: Dr. Arden Rogahn MD
                Role:
                  description: A role response
                  value:
                  - accessType: role
                    id: 2c918087763e69d901763e72e97f006f
                    name: sample
                    description: Role - Workday/Citizenship access
              schema:
                items:
                  $ref: '#/components/schemas/listIdentityAccessItems_200_response_inner'
                type: array
          description: The list of access items.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Gets a list of access items for the identity filtered by item type
      tags:
      - Identity History
  /historical-identities/{id}/snapshots:
    get:
      description: 'This method retrieves all the snapshots for the identity Requires
        authorization scope of ''idn:identity-history:read'' '
      operationId: listIdentitySnapshots
      parameters:
      - description: The identity id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The specified start date
        example: 2007-03-01T13:00:00Z
        in: query
        name: start
        schema:
          type: string
      - description: The interval indicating the range in day or month for the specified
          interval-name
        in: query
        name: interval
        schema:
          enum:
          - day
          - month
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentitySnapshotSummaryResponse'
                type: array
          description: A list of identity summary for each snapshot.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Lists all the snapshots for the identity
      tags:
      - Identity History
  /historical-identities/{id}/snapshot-summary:
    get:
      description: 'This method gets the summary for the event count for a specific
        identity by month/day Requires authorization scope of ''idn:identity-history:read'' '
      operationId: getIdentitySnapshotSummary
      parameters:
      - description: The identity id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The date before which snapshot summary is required
        example: 2007-03-01T13:00:00Z
        in: query
        name: before
        schema:
          type: string
      - description: The interval indicating day or month. Defaults to month if not
          specified
        in: query
        name: interval
        schema:
          enum:
          - day
          - month
          type: string
      - description: The time zone. Defaults to UTC if not provided
        example: UTC
        in: query
        name: time-zone
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MetricResponse'
                type: array
          description: A summary list of identity changes in date histogram format.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Gets the summary for the event count for a specific identity
      tags:
      - Identity History
  /historical-identities/{id}/snapshots/{date}:
    get:
      description: 'This method retrieves a specified identity snapshot at a given
        date Requires authorization scope of ''idn:identity-history:read'' '
      operationId: getIdentitySnapshot
      parameters:
      - description: The identity id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The specified date
        example: 2007-03-01T13:00:00Z
        in: path
        name: date
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityHistoryResponse'
          description: The identity object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Gets an identity snapshot at a given date
      tags:
      - Identity History
  /historical-identities/{id}/snapshots/{date}/access-items:
    get:
      description: 'This method retrieves the list of identity access items at a given
        date filterd by item type Requires authorization scope of ''idn:identity-history:read'' '
      operationId: listIdentitySnapshotAccessItems
      parameters:
      - description: The identity id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The specified date
        example: 2007-03-01T13:00:00Z
        in: path
        name: date
        required: true
        schema:
          type: string
      - description: The access item type
        example: account
        in: query
        name: type
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Access Item AccessProfile Response:
                  description: An access profile response
                  value:
                  - type: accessProfile
                    id: 2c918087763e69d901763e72e97f006f
                    name: sample
                    sourceName: DataScienceDataset
                    sourceId: 2793o32dwd
                    description: AccessProfile - Workday/Citizenship access
                    displayName: Dr. Arden Rogahn MD
                    entitlementCount: 12
                    appDisplayName: AppName
                Access Item Account Response:
                  description: An account response
                  value:
                  - type: account
                    id: 2c918087763e69d901763e72e97f006f
                    nativeIdentity: dr.arden.ogahn.d
                    sourceName: DataScienceDataset
                    sourceId: 2793o32dwd
                    entitlementCount: 12
                    displayName: Dr. Arden Rogahn MD
                Access Item App Response:
                  description: An app response
                  value:
                  - type: app
                    id: 2c918087763e69d901763e72e97f006f
                    name: appName
                Access Item Entitlement Response:
                  description: An entitlement event
                  value:
                  - type: entitlement
                    id: 2c918087763e69d901763e72e97f006f
                    attribute: groups
                    value: Upward mobility access
                    entitlementType: entitlement
                    sourceName: DataScienceDataset
                    sourceId: 2793o32dwd
                    description: Entitlement - Workday/Citizenship access
                    displayName: Dr. Arden Rogahn MD
                Access Item Role Response:
                  description: A role response
                  value:
                  - type: role
                    id: 2c918087763e69d901763e72e97f006f
                    name: sample
                    description: Role - Workday/Citizenship access
              schema:
                items:
                  $ref: '#/components/schemas/listIdentityAccessItems_200_response_inner'
                type: array
          description: The identity object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Gets the list of identity access items at a given date filterd by item
        type
      tags:
      - Identity History
  /common-access:
    get:
      description: This endpoint returns the current common access for a customer.
        The returned items can be filtered and sorted. Requires authorization scope
        of iai:access-modeling:read
      operationId: getCommonAccess
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **status**: *eq, sw*

          **reviewedByUser** *eq*

          **access.id**: *eq, sw*

          **access.type**: *eq*

          **access.name**: *sw, eq*

          **access.description**: *sw, eq*
        example: access.type eq "ROLE"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **access.name, status**

          By default the common access items are sorted by name, ascending.
        example: access.name
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommonAccessResponse'
                type: array
          description: Succeeded. Returns a list of common access for a customer.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get a paginated list of common access
      tags:
      - IAI Common Access
    post:
      description: This API is used to add roles/access profiles to the list of common
        access for a customer. Requires authorization scope of iai:access-modeling:create
      operationId: createCommonAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommonAccessItemRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonAccessItemResponse'
          description: Returns details of the common access classification request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create common access items
      tags:
      - IAI Common Access
  /common-access/update-status:
    post:
      description: This submits an update request to the common access application.
        At this time there are no parameters. Requires authorization scope of iai:access-modeling:update
      operationId: updateCommonAccessStatusInBulk
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CommonAccessIDStatus'
              type: array
        description: Confirm or deny in bulk the common access ids that are (or aren't)
          common access
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Bulk update common access status
      tags:
      - IAI Common Access
  /historical-identities/{id}/events:
    get:
      description: 'This method retrieves all access events for the identity Requires
        authorization scope of ''idn:identity-history:read'' '
      operationId: getHistoricalIdentityEvents
      parameters:
      - description: The identity id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The optional instant from which to return the access events
        example: 2007-03-01T13:00:00Z
        in: query
        name: from
        schema:
          type: string
      - description: "An optional list of event types to return.  If null or empty,\
          \ all events are returned"
        example:
        - AccessAddedEvent
        - AccessRemovedEvent
        in: query
        name: eventTypes
        schema:
          items:
            type: string
          type: array
      - description: "An optional list of access item types (app, account, entitlement,\
          \ etc...) to return.   If null or empty, all access items types are returned"
        example:
        - entitlement
        - account
        in: query
        name: accessItemTypes
        schema:
          items:
            type: string
          type: array
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              examples:
                AccessItemAssociated:
                  description: An Access item associated event
                  value:
                  - accessItem:
                      id: 8c190e6787aa4ed9a90bd9d5344523fb
                      accessType: account
                      nativeIdentity: 127999
                      sourceName: JDBC Entitlements Source
                      entitlementCount: 0
                      displayName: Sample Name
                    eventType: AccessItemAssociated
                    identityId: 8a80828f643d484f01643e14202e206f
                    dt: 2019-03-08T22:37:33.901Z
                    governanceEvent:
                      name: Access Request 58
                      dt: 2019-03-08T22:37:33.901Z
                      type: accessRequest
                      governanceId: 2c91808a77ff216301782327a50f09e1
                      owners:
                      - id: bc693f07e7b645539626c25954c58554
                        displayName: Jon Snow
                      reviewers:
                      - id: bc693f07e7b645539626c25954c58554
                        displayName: Jon Snow
                      decisionMaker:
                        id: bc693f07e7b645539626c25954c58554
                        displayName: Jon Snow
                AccessItemRemoved:
                  description: An Access item removed event
                  value:
                  - accessItem:
                      id: 8c190e6787aa4ed9a90bd9d5344523fb
                      accessType: account
                      nativeIdentity: 127999
                      sourceName: JDBC Entitlements Source
                      entitlementCount: 0
                      displayName: Sample Name
                    eventType: AccessItemRemoved
                    identityId: 8a80828f643d484f01643e14202e206f
                    dt: 2019-03-08T22:37:33.901Z
                    governanceEvent:
                      name: Manager Certification for Jon Snow
                      dt: 2019-03-08T22:37:33.901Z
                      type: certification
                      governanceId: 2c91808a77ff216301782327a50f09bf
                      owners:
                      - id: bc693f07e7b645539626c25954c58554
                        displayName: Jon Snow
                      reviewers:
                      - id: bc693f07e7b645539626c25954c58554
                        displayName: Jon Snow
                      decisionMaker:
                        id: bc693f07e7b645539626c25954c58554
                        displayName: Jon Snow
                AttributesChanged:
                  description: An attribute changed event
                  value:
                  - attributeChanges:
                    - name: firstname
                      previousValue: adam
                      newValue: zampa
                    eventType: AttributesChanged
                    identityId: 8a80828f643d484f01643e14202e206f
                    dt: 2019-03-08T22:37:33.901Z
                AccessRequested:
                  description: An access requested event
                  value:
                    accessRequest:
                      requesterId: 2c91808a77ff216301782327a50f09bf
                      requestName: Bing C
                      items:
                      - operation: Add
                        accessItemType: role
                        name: Role-1
                        decision: APPROVED
                        description: The role descrition
                        sourceId: 8a80828f643d484f01643e14202e206f
                        sourceName: Source1
                        approvalInfos:
                        - name: John Snow
                          id: 8a80828f643d484f01643e14202e2000
                          status: Approved
                    eventType: AccessRequested
                    identityId: 8a80828f643d484f01643e14202e206f
                    dt: 2019-03-08T22:37:33.901Z
                IdentityCertified:
                  description: An identity certified event
                  value:
                  - certification:
                      id: 2c91808a77ff216301782327a50f09bf
                      name: Cert name
                      signedDate: 2019-03-08T22:37:33.901Z
                      certifiers:
                      - id: 8a80828f643d484f01643e14202e206f
                        displayName: John Snow
                      reviewers:
                      - id: 8a80828f643d484f01643e14202e206f
                        displayName: Daenerys Targaryen
                      signer:
                        id: 8a80828f643d484f01643e14202e206f
                        displayName: Tyrion Lannister
                    eventType: IdentityCertified
                    identityId: 8a80828f643d484f01643e14202e206f
                    dt: 2019-03-08T22:37:33.901Z
                AccountStatusChanged:
                  description: An account status changed event
                  value:
                  - account:
                      id: 2c91808a77ff216301782327a50f09bf
                      nativeIdentity: 127999
                      displayName: Sample Name
                      sourceId: 8a80828f643d484f01643e14202e206f
                      sourceName: JDBC Entitlements Source
                      entitlementCount: 0
                      accessType: account
                    statusChange:
                      previousStatus: ENABLED
                      newStatus: DISABLED
                    eventType: AccountStatusChanged
                    identityId: 8a80828f643d484f01643e14202e206f
                    dt: 2019-03-08T22:37:33.901Z
              schema:
                items:
                  $ref: '#/components/schemas/getHistoricalIdentityEvents_200_response_inner'
                type: array
          description: The list of events for the identity
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Lists all events for the given identity
      tags:
      - Identity History
  /historical-identities/{id}/start-date:
    get:
      description: 'This method retrieves start date of the identity Requires authorization
        scope of ''idn:identity-history:read'' '
      operationId: getIdentityStartDate
      parameters:
      - description: The identity id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                example: 2017-03-01T13:00:00.000Z
                type: string
          description: The start date of the identity
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Gets the start date of the identity
      tags:
      - Identity History
  /historical-identities/{id}/compare:
    get:
      description: 'This method gets a difference of count for each access item types
        for the given identity between 2 snapshots Requires authorization scope of
        ''idn:identity-history:read'' '
      operationId: compareIdentitySnapshots
      parameters:
      - description: The identity id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The snapshot 1 of identity
        example: 2007-03-01T13:00:00Z
        in: query
        name: snapshot1
        schema:
          type: string
      - description: The snapshot 2 of identity
        example: 2008-03-01T13:00:00Z
        in: query
        name: snapshot2
        schema:
          type: string
      - description: "An optional list of access item types (app, account, entitlement,\
          \ etc...) to return.   If null or empty, all access items types are returned "
        in: query
        name: accessItemTypes
        schema:
          items:
            type: string
          type: array
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityCompareResponse'
                type: array
          description: A IdentityCompare object with difference details for each access
            item type
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Gets a difference of count for each access item types for the given
        identity between 2 snapshots
      tags:
      - Identity History
  /historical-identities/{id}/compare/{access-type}:
    get:
      description: 'This method gets a list of differences of specific accessType
        for the given identity between 2 snapshots Requires authorization scope of
        ''idn:identity-history:read'' '
      operationId: compareIdentitySnapshotsAccessType
      parameters:
      - description: The identity id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The specific type which needs to be compared
        example: role
        in: path
        name: accessType
        required: true
        schema:
          type: string
      - description: "Indicates if added or removed access needs to be returned. true\
          \ - added, false - removed, null - both added & removed"
        example: 2007-03-01T13:00:00Z
        in: query
        name: access-associated
        schema:
          type: boolean
      - description: The snapshot 1 of identity
        example: 2008-03-01T13:00:00Z
        in: query
        name: snapshot1
        schema:
          type: string
      - description: The snapshot 2 of identity
        example: 2009-03-01T13:00:00Z
        in: query
        name: snapshot2
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccessItemDiff'
                type: array
          description: A list of events for the identity
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Gets a list of differences of specific accessType for the given identity
        between 2 snapshots
      tags:
      - Identity History
  /identities/{identityId}/synchronize-attributes:
    post:
      description: This end-point performs attribute synchronization for a selected
        identity. The endpoint can be called once in 10 seconds per identity. A token
        with ORG_ADMIN or API authority is required to call this API.
      operationId: synchronizeAttributesForIdentity
      parameters:
      - description: The Identity id
        in: path
        name: identityId
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              example:
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3dfc
                status: IN_PROGRESS
                payload:
                  type: SYNCHRONIZE_IDENTITY_ATTRIBUTES
                  dataJson: "{\"identityId\":\"2c918083746f642c01746f990884012a\"}"
              schema:
                $ref: '#/components/schemas/IdentitySyncJob'
          description: An Identity Sync job
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Attribute synchronization for single identity.
      tags:
      - Identities
  /identities/{identityId}/ownership:
    get:
      description: Get Ownership association details of an Identity
      operationId: getIdentityOwnershipDetails
      parameters:
      - description: The identity id
        example: ff8081814d2a8036014d701f3fbf53fa
        in: path
        name: identityId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                associationDetails:
                  associationType: ROLE_OWNER
                  entities:
                  - id: b660a232f05b4e04812ca974b3011e0f
                    name: Gaston.800ddf9640a
                    type: ROLE
              schema:
                $ref: '#/components/schemas/IdentityOwnershipAssociationDetails'
          description: Ownership association details of an Identity.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity:read
      summary: Get ownership details
      tags:
      - Identities
  /identities:
    get:
      description: This API returns a list of identities.
      operationId: listIdentities
      parameters:
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, sw*

          **alias**: *eq, sw*

          **firstname**: *eq, sw*

          **lastname**: *eq, sw*

          **email**: *eq, sw*

          **cloudStatus**: *eq*

          **processingState**: *eq*

          **correlated**: *eq*

          **protected**: *eq*
        example: id eq "6c9079b270a266a60170a2779fcb0006" or correlated eq false
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, alias, cloudStatus**
        example: "name,-cloudStatus"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: |-
          Adds additional filter to filters query parameter.

          CORRELATED_ONLY adds correlated=true and returns only identities that are correlated.

          NONE does not add any and returns all identities that satisfy filters query parameter.
        example: NONE
        in: query
        name: defaultFilter
        required: false
        schema:
          default: CORRELATED_ONLY
          enum:
          - CORRELATED_ONLY
          - NONE
          type: string
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Identity'
                type: array
          description: List of identities.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List Identities
      tags:
      - Identities
  /identities/{id}:
    delete:
      description: The API returns successful response if the requested identity was
        deleted.
      operationId: deleteIdentity
      parameters:
      - description: Identity Id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              example:
                message: Identity is the owner of following resources
                associationDetails:
                  associationType: CAMPAIGN_OWNER
                  entities:
                  - id: b660a232f05b4e04812ca974b3011e0f
                    name: Gaston.800ddf9640a
                    type: CAMPAIGN_CAMPAIGNER
              schema:
                $ref: '#/components/schemas/IdentityAssociationDetails'
          description: Client Error - Returned if the request is invalid. It may indicate
            that the specified identity is marked as protected and cannot be deleted.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity:delete
      summary: Deletes an identity.
      tags:
      - Identities
    get:
      description: This API returns a single identity using the Identity ID.
      operationId: getIdentity
      parameters:
      - description: Identity Id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identity'
          description: An identity object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity:read
      summary: Identity Details
      tags:
      - Identities
  /identities/process:
    post:
      description: |
        You could use this endpoint to:
        1. Calculate identity attributes, including applying or running any rules or transforms (e.g. calculate Lifecycle State at a point-in-time it's expected to change).
        2. Evaluate role assignments, leading to assignment of new roles and removal of existing roles.
        3. Enforce provisioning for any assigned accesses that haven't been fulfilled (e.g. failure due to source health).
        4. Recalculate manager relationships.
        5. Potentially clean-up identity processing errors, assuming the error has been resolved.

        To learn more, refer to the [identity processing documentation](https://documentation.sailpoint.com/saas/help/setup/identity_processing.html).

        A token with ORG_ADMIN or HELPDESK authority is required to call this API.
      operationId: startIdentityProcessing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessIdentitiesRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResultResponse'
          description: Object containing the DTO type TASK_RESULT and the job id for
            the task
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity:manage
      summary: Process a list of identityIds
      tags:
      - Identities
  /identity-attributes:
    get:
      description: This gets a collection of identity attributes.
      operationId: listIdentityAttributes
      parameters:
      - description: Include "system" attributes in the response.
        example: false
        in: query
        name: includeSystem
        required: false
        schema:
          default: false
          type: boolean
      - description: Include "silent" attributes in the response.
        example: false
        in: query
        name: includeSilent
        required: false
        schema:
          default: false
          type: boolean
      - description: Include only "searchable" attributes in the response.
        example: false
        in: query
        name: searchableOnly
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityAttribute'
                type: array
          description: List of identity attributes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile-attribute-list:read
      summary: List Identity Attributes
      tags:
      - Identity Attributes
    post:
      description: This creates a new identity attribute.
      operationId: createIdentityAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityAttribute'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAttribute'
          description: The identity attribute was created successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile-attribute:create
      summary: Create Identity Attribute
      tags:
      - Identity Attributes
  /identity-attributes/{name}:
    delete:
      description: This deletes an identity attribute with the given name.  The `system`
        and `standard` properties must be set to false before you can delete an identity
        attribute.
      operationId: deleteIdentityAttribute
      parameters:
      - description: The attribute's technical name.
        example: displayName
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile-attribute:delete
      summary: Delete Identity Attribute
      tags:
      - Identity Attributes
    get:
      description: This gets an identity attribute for a given technical name.
      operationId: getIdentityAttribute
      parameters:
      - description: The attribute's technical name.
        example: displayName
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAttribute'
          description: The identity attribute with the given name
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile-attribute:read
      summary: Get Identity Attribute
      tags:
      - Identity Attributes
    put:
      description: "This updates an existing identity attribute.  Making an attribute\
        \ searchable requires that the `system`, `standard`, and `multi` properties\
        \ be set to false."
      operationId: putIdentityAttribute
      parameters:
      - description: The attribute's technical name.
        example: displayName
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityAttribute'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAttribute'
          description: The identity attribute was updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile-attribute:create
      summary: Update Identity Attribute
      tags:
      - Identity Attributes
  /identity-attributes/bulk-delete:
    post:
      description: This deletes identity attributes for a given set of names. Attributes
        that are currently mapped in an Identity Profile cannot be deleted.  The `system`
        and `standard` properties must be set to false before you can delete an identity
        attribute.
      operationId: deleteIdentityAttributesInBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityAttributeNames'
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile-attribute-bulk:delete
      summary: Bulk delete Identity Attributes
      tags:
      - Identity Attributes
  /identity-profiles:
    get:
      description: |-
        This returns a list of Identity Profiles based on the specified query parameters.
        A token with ORG_ADMIN or API authority is required to call this API to get a list of Identity Profiles.
      operationId: listIdentityProfiles
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, ne, ge, gt, in, le, lt, isnull, sw*

          **name**: *eq, ne, in, le, lt, isnull, sw*

          **priority**: *eq, ne*
        example: id eq 8c190e6787aa4ed9a90bd9d5344523fb
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, name, priority, created, modified, owner.id, owner.name**
        example: "name,-priority"
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProfile'
                type: array
          description: List of identityProfiles.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile:read
        - idn:identity-profile:manage
      summary: Identity Profiles list
      tags:
      - Identity Profiles
    post:
      description: |-
        This creates an Identity Profile
        A token with ORG_ADMIN authority is required to call this API to create an Identity Profile.
      operationId: createIdentityProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProfile'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProfile'
          description: The created Identity Profile
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile:manage
      summary: Create an Identity Profile
      tags:
      - Identity Profiles
  /identity-profiles/bulk-delete:
    post:
      description: |-
        This deletes multiple Identity Profiles via a list of supplied IDs.

        On success, this endpoint will return a reference to the bulk delete task result.

        A token with ORG_ADMIN authority is required to call this API.

        The following rights are required to access this endpoint: idn:identity-profile:delete
      operationId: deleteIdentityProfiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProfileBulkDelete'
        description: Identity Profile bulk delete request body.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResultSimplified'
          description: Accepted - Returns a TaskResult object referencing the bulk
            delete job created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile:delete
      summary: Delete Identity Profiles
      tags:
      - Identity Profiles
  /identity-profiles/export:
    get:
      description: This exports existing identity profiles in the format specified
        by the sp-config service.
      operationId: exportIdentityProfiles
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, ne*

          **name**: *eq, ne*

          **priority**: *eq, ne*
        example: id eq 8c190e6787aa4ed9a90bd9d5344523fb
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, name, priority**
        example: "name,-priority"
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProfileExportedObject'
                type: array
          description: List of export objects with identity profiles.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile:read
        - idn:identity-profile:manage
      summary: Export Identity Profiles
      tags:
      - Identity Profiles
  /identity-profiles/import:
    post:
      description: This imports previously exported identity profiles.
      operationId: importIdentityProfiles
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IdentityProfileExportedObject'
              type: array
        description: Previously exported Identity Profiles.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectImportResult'
          description: The result of importing Identity Profiles.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile:manage
      summary: Import Identity Profiles
      tags:
      - Identity Profiles
  /identity-profiles/identity-preview:
    post:
      description: |-
        This generates a non-persisted IdentityDetails object that will represent as the preview of the identities attribute when the given policy's attribute config is applied.
        A token with ORG_ADMIN authority is required to call this API to generate an identity preview.
      operationId: generateIdentityPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityPreviewRequest'
        description: Identity Preview request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityPreviewResponse'
          description: Object representing the preview object with all of the identity
            attributes using the current mappings.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile:manage
      summary: Generate Identity Profile Preview
      tags:
      - Identity Profiles
  /identity-profiles/{identity-profile-id}:
    delete:
      description: |-
        This deletes an Identity Profile based on ID.

        On success, this endpoint will return a reference to the bulk delete task result.

        A token with ORG_ADMIN authority is required to call this API.

        The following rights are required to access this endpoint: idn:identity-profile:delete
      operationId: deleteIdentityProfile
      parameters:
      - description: The Identity Profile ID.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: identity-profile-id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResultSimplified'
          description: Accepted - Returns a TaskResult object referencing the bulk
            delete job created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile:delete
      summary: Delete an Identity Profile
      tags:
      - Identity Profiles
    get:
      description: |-
        This returns a single Identity Profile based on ID.
        A token with ORG_ADMIN or API authority is required to call this API.
      operationId: getIdentityProfile
      parameters:
      - description: The Identity Profile ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: identity-profile-id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProfile'
          description: An Identity Profile object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile:read
        - idn:identity-profile:manage
      summary: Gets a single Identity Profile
      tags:
      - Identity Profiles
    patch:
      description: |-
        This updates the specified Identity Profile.
        A token with ORG_ADMIN authority is required to call this API to update the Identity Profile. Some fields of the Schema cannot be updated. These fields are listed below.
        * id
        * name
        * created
        * modified
      operationId: updateIdentityProfile
      parameters:
      - description: The Identity Profile ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: identity-profile-id
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              add-attribute-transform:
                summary: Add an attribute transform
                value:
                - op: add
                  path: /identityAttributeConfig/attributeTransforms/0
                  value:
                    identityAttributeName: location
                    transformDefinition:
                      type: accountAttribute
                      attributes:
                        sourceName: Employees
                        attributeName: location
                        sourceId: 2c91808878b7d63b0178c66ffcdc4ce4
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of Identity Profile update operations according to the\
          \ [JSON Patch](https://tools.ietf.org/html/rfc6902) standard."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProfile'
          description: The updated Identity Profile.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile:manage
      summary: Update the Identity Profile
      tags:
      - Identity Profiles
  /identity-profiles/{identity-profile-id}/default-identity-attribute-config:
    get:
      description: |-
        This returns the default identity attribute config
        A token with ORG_ADMIN authority is required to call this API to get the default identity attribute config.
      operationId: getDefaultIdentityAttributeConfig
      parameters:
      - description: The Identity Profile ID
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: identity-profile-id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityAttributeConfig'
          description: An Identity Attribute Config object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile:manage
      summary: Default identity attribute config
      tags:
      - Identity Profiles
  /identity-profiles/{identity-profile-id}/process-identities:
    post:
      description: |-
        Process identities under the profile

        A token with ORG_ADMIN authority is required to call this API.
      operationId: syncIdentityProfile
      parameters:
      - description: The Identity Profile ID to be processed
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: identity-profile-id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:identity-profile:refresh
      summary: Process identities under profile
      tags:
      - Identity Profiles
  /identity-profiles/{identity-profile-id}/lifecycle-states/{lifecycle-state-id}:
    get:
      description: |
        This endpoint returns a lifecycle state.

        A token with ORG_ADMIN or API authority is required to call this API.
      operationId: listLifecycleStates
      parameters:
      - description: Identity Profile ID
        in: path
        name: identity-profile-id
        required: true
        schema:
          type: string
      - description: Lifecycle State ID
        in: path
        name: lifecycle-state-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleState'
          description: lifecycle-state
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Lifecycle State
      tags:
      - Lifecycle States
    patch:
      description: |
        This API updates individual lifecycle state fields using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

        A token with ORG_ADMIN or API authority is required to call this API.
      operationId: updateLifecycleStates
      parameters:
      - description: Identity Profile ID
        in: path
        name: identity-profile-id
        required: true
        schema:
          type: string
      - description: Lifecycle State ID
        in: path
        name: lifecycle-state-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /description
              value: Updated description!
            - op: replace
              path: /accessProfileIds
              value:
              - 2c918087742bab150174407a80f3125e
              - 2c918087742bab150174407a80f3124f
            - op: replace
              path: /accountActions
              value:
              - action: ENABLE
                sourceIds:
                - 2c9180846a2f82fb016a481c1b1560c5
                - 2c9180846a2f82fb016a481c1b1560cc
              - action: DISABLE
                sourceIds:
                - 2c91808869a0c9980169a207258513fb
            - op: replace
              path: /emailNotificationOption
              value:
                notifyManagers: true
                notifyAllAdmins: false
                notifySpecificUsers: false
                emailAddressList: []
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of lifecycle state update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields can be updated:
          * enabled
          * description
          * accountActions
          * accessProfileIds
          * emailNotificationOption
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LifecycleState'
          description: Updated lifecycle-state.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update Lifecycle State
      tags:
      - Lifecycle States
  /non-employee-records:
    get:
      description: This gets a list of non-employee records.
      operationId: listNonEmployeeRecords
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, accountName, sourceId, manager, firstName, lastName, email, phone, startDate, endDate, created, modified**
        example: "accountName,sourceId"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **sourceId**: *eq*
        example: sourceId eq "2c91808568c529c60168cca6f90c1313"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeRecord'
                type: array
          description: Non-Employee record objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
      summary: List Non-Employee Records
      tags:
      - Non-Employee Lifecycle Management
    post:
      description: |-
        This request will create a non-employee record.
        Request will require the following security scope:
        'idn:nesr:create'
      operationId: createNonEmployeeRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeRequestBody'
        description: Non-Employee record creation request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRecord'
          description: Created non-employee record.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Create Non-Employee Record
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-records/{id}:
    delete:
      description: This request will delete a non-employee record.
      operationId: deleteNonEmployeeRecord
      parameters:
      - description: Non-Employee record id (UUID)
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Delete Non-Employee Record
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: This gets a non-employee record.
      operationId: getNonEmployeeRecord
      parameters:
      - description: Non-Employee record id (UUID)
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRecord'
          description: Non-Employee record object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
      summary: Get a Non-Employee Record
      tags:
      - Non-Employee Lifecycle Management
    patch:
      description: This request will patch a non-employee record.
      operationId: patchNonEmployeeRecord
      parameters:
      - description: Non-employee record id (UUID)
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /endDate
              value:
                "2019-08-23T18:40:35.772Z": null
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of non-employee update operations according to the [JSON\
          \ Patch](https://tools.ietf.org/html/rfc6902) standard. Attributes are restricted\
          \ by user type. Owner of source can update end date. Organization admins\
          \ can update all available fields."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRecord'
          description: A patched non-employee record.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Patch Non-Employee Record
      tags:
      - Non-Employee Lifecycle Management
    put:
      description: This request will update a non-employee record.
      operationId: updateNonEmployeeRecord
      parameters:
      - description: Non-employee record id (UUID)
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeRequestBody'
        description: Non-employee record creation request body. Attributes are restricted
          by user type. Owner of source can update end date. Organization admins can
          update all available fields.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRecord'
          description: An updated non-employee record.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Update Non-Employee Record
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-records/bulk-delete:
    post:
      description: |-
        This request will delete multiple non-employee records based on the non-employee ids provided.
        Request will require the following scope:
        'idn:nesr:delete'
      operationId: deleteNonEmployeeRecordInBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteNonEmployeeRecordInBulk_request'
        description: Non-Employee bulk delete request body.
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Delete Multiple Non-Employee Records
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-requests:
    get:
      description: This gets a list of non-employee requests.
      operationId: listNonEmployeeRequests
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: The identity for whom the request was made. *me* indicates the
          current user.
        example: me
        in: query
        name: requested-for
        required: true
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, approvalStatus, firstName, lastName, email, phone, accountName, startDate, endDate**
        example: "approvalStatus,firstName"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **sourceId**: *eq*
        example: sourceId eq "2c91808568c529c60168cca6f90c1313"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeRequest'
                type: array
          description: List of non-employee request objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
      summary: List Non-Employee Requests
      tags:
      - Non-Employee Lifecycle Management
    post:
      description: This request will create a non-employee request and notify the
        approver
      operationId: createNonEmployeeRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeRequestBody'
        description: Non-Employee creation request body
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRequest'
          description: Non-Employee request creation object
        "400":
          content:
            application/json:
              examples:
                "400.1 Bad Request Content":
                  description: Response for bad request content
                  value:
                    detailCode: 400.1 Bad Request Content
                    trackingId: e7eab60924f64aa284175b9fa3309599
                    messages:
                    - locale: en
                      localeOrigin: REQUEST
                      text: firstName is required; accountName is required;
                "400.1.409 Reference conflict":
                  description: Response for reference conflict
                  value:
                    detailCode: 400.1.409 Reference conflict
                    trackingId: e7eab60924f64aa284175b9fa3309599
                    messages:
                    - locale: en
                      localeOrigin: REQUEST
                      text: Unable to create Non-Employee because the accountName
                        "existed" is already being used.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Create Non-Employee Request
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-requests/{id}:
    delete:
      description: This request will delete a non-employee request.
      operationId: deleteNonEmployeeRequest
      parameters:
      - description: Non-Employee request id in the UUID format
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Delete Non-Employee Request
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: This gets a non-employee request.
      operationId: getNonEmployeeRequest
      parameters:
      - description: Non-Employee request id (UUID)
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRequest'
          description: Non-Employee request object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
      summary: Get a Non-Employee Request
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-requests/summary/{requested-for}:
    get:
      description: "This request will retrieve a summary of non-employee requests.\
        \ There are two contextual uses for the `requested-for` path parameter: 1.\
        \ The current user is the Org Admin, in which case he or she may request a\
        \ summary of all non-employee approval requests assigned to a particular account\
        \ manager by passing in that manager's id. 2. The current user is an account\
        \ manager, in which case \"me\" should be provided as the `requested-for`\
        \ value. This will provide the user with a summary of the non-employee requests\
        \ in the source(s) he or she manages."
      operationId: getNonEmployeeRequestSummary
      parameters:
      - description: The identity (UUID) of the non-employee account manager for whom
          the summary is being retrieved. Use "me" instead to indicate the current
          user.
        example: ac10d20a-841e-1e7d-8184-32d2e22c0179
        in: path
        name: requested-for
        required: true
        schema:
          format: uuid (if user is Org Admin)
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeRequestSummary'
          description: Non-Employee request summary object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
      summary: Get Summary of Non-Employee Requests
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources:
    get:
      description: This gets a list of non-employee sources.
      operationId: listNonEmployeeSources
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: The identity for whom the request was made. *me* indicates the
          current user.
        example: me
        in: query
        name: requested-for
        required: true
        schema:
          type: string
      - description: The flag to determine whether return a non-employee count associate
          with source.
        example: false
        in: query
        name: non-employee-count
        required: true
        schema:
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, created, sourceId**
        example: "name,created"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeSourceWithNECount'
                type: array
          description: List of non-employee sources objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
      summary: List Non-Employee Sources
      tags:
      - Non-Employee Lifecycle Management
    post:
      description: |-
        This request will create a non-employee source.
        Request will require the following security scope:
        'idn:nesr:create'
      operationId: createNonEmployeeSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeSourceRequestBody'
        description: Non-Employee source creation request body.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSourceWithCloudExternalId'
          description: Created non-employee source.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Create Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{sourceId}:
    delete:
      description: This request will delete a non-employee source.
      operationId: deleteNonEmployeeSource
      parameters:
      - description: Source Id
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Delete Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: This gets a non-employee source.
      operationId: getNonEmployeeSource
      parameters:
      - description: Source Id
        example: 2c91808b7c28b350017c2a2ec5790aa1
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSource'
          description: Non-Employee source object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
      summary: Get a Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
    patch:
      description: "patch a non-employee source. (Partial Update)  Patchable field:\
        \ **name, description, approvers, accountManagers**"
      operationId: patchNonEmployeeSource
      parameters:
      - description: Source Id
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /name
              value:
                new name: null
            - op: replace
              path: /approvers
              value:
              - 2c91809f703bb37a017040a2fe8748c7
              - 48b1f463c9e8427db5a5071bd81914b8
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of non-employee source update operations according to\
          \ the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSource'
          description: A patched non-employee source object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Patch a Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{id}/non-employees/download:
    get:
      description: This requests a CSV download for all non-employees from a provided
        source.
      operationId: exportNonEmployeeRecords
      parameters:
      - description: Source Id (UUID)
        example: 2c918085842e69ae018432d22ccb212f
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/csv:
              example: |
                accountName,firstName,lastName,phone,email,manager,startDate,endDate
                Jon.Smith, Jon, Smith, 555-555-5555, jon@jon.doe.nope.com, Jim Smith, 2020-04-05T08:00:00-10:00,2020-08-07T19:00:00-10:00
                William.Chaffin, William, Chaffin, 555-555-5555, william@chaffins.nope.com, Bertram Chaffin, 2020-04-05T08:00:00-10:00,2020-08-07T19:00:00-10:00
          description: Exported CSV
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
        - idn:nelm:manage
      summary: Exports Non-Employee Records to CSV
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{id}/non-employee-bulk-upload:
    post:
      description: |-
        This post will import, or update, Non-Employee records found in the CSV.
        Request will need the following security scope:
        'idn:nesr:create'
      operationId: importNonEmployeeRecordsInBulk
      parameters:
      - description: Source Id (UUID)
        example: e136567de87e4d029e60b3c3c55db56d
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/importNonEmployeeRecordsInBulk_request'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeBulkUploadJob'
          description: The CSV was accepted to be bulk inserted now or at a later
            time.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: |
            Client Error - Returned if the request body is invalid.
            The response body will contain the list of specific errors with one on each line.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: "Imports, or Updates, Non-Employee Records"
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{id}/non-employee-bulk-upload/status:
    get:
      description: |
        The nonEmployeeBulkUploadStatus API returns the status of the newest bulk upload job for the specified source.
      operationId: getNonEmployeeBulkUploadStatus
      parameters:
      - description: Source ID (UUID)
        example: 2c918085842e69ae018432d22ccb212f
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeBulkUploadStatus'
          description: "Status of the newest bulk-upload job, if any."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
      summary: Bulk upload status on source
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{id}/schema-attributes-template/download:
    get:
      description: |-
        This requests a download for the Source Schema Template for a provided source.
        Request will require the following security scope:
        idn:nesr:read'
      operationId: exportNonEmployeeSourceSchemaTemplate
      parameters:
      - description: Source Id (UUID)
        example: 2c918085842e69ae018432d22ccb212f
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/csv:
              example: |
                accountName,firstName,lastName,phone,email,manager,startDate,endDate
          description: Exported Source Schema Template
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
      summary: Exports Source Schema Template
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals:
    get:
      description: This gets a list of non-employee approval requests.
      operationId: listNonEmployeeApproval
      parameters:
      - description: The identity for whom the request was made. *me* indicates the
          current user.
        example: ac10d20a-841e-1e7d-8184-32d2e22c0179
        in: query
        name: requested-for
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **approvalStatus**: *eq*
        example: approvalStatus eq "PENDING"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created, modified**
        example: created
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NonEmployeeApprovalItem'
                type: array
          description: List of approval items.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
      summary: Get List of Non-Employee Approval Requests
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals/{id}:
    get:
      description: Approves a non-employee approval request and notifies the next
        approver.
      operationId: getNonEmployeeApproval
      parameters:
      - description: Non-Employee approval item id (UUID)
        example: ac10d20a-841e-1e7d-8184-32d2e22c0179
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The object nonEmployeeRequest will not be included detail when
          set to false. *Default value is true*
        example: include-detail=false
        in: query
        name: include-detail
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeApprovalItemDetail'
          description: Non-Employee approval item object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
      summary: Get a non-employee approval item detail
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals/{id}/approve:
    post:
      description: Approves a non-employee approval request and notifies the next
        approver.
      operationId: approveNonEmployeeRequest
      parameters:
      - description: Non-Employee approval item id (UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeApprovalDecision'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeApprovalItem'
          description: Non-Employee approval item object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Approve a Non-Employee Request
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals/{id}/reject:
    post:
      description: This endpoint will reject an approval item request and notify user.
      operationId: rejectNonEmployeeRequest
      parameters:
      - description: Non-Employee approval item id (UUID)
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeRejectApprovalDecision'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeApprovalItem'
          description: Non-Employee approval item object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Reject a Non-Employee Request
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-approvals/summary/{requested-for}:
    get:
      description: "This request will retrieve a summary of non-employee approval\
        \ requests. There are two contextual uses for the `requested-for` path parameter:\
        \ 1. The current user is the Org Admin, in which case he or she may request\
        \ a summary of all non-employee approval requests assigned to a particular\
        \ approver by passing in that approver's id. 2. The current user is an approver,\
        \ in which case \"me\" should be provided as the `requested-for` value. This\
        \ will provide the approver with a summary of the approval items assigned\
        \ to him or her."
      operationId: getNonEmployeeApprovalSummary
      parameters:
      - description: The identity (UUID) of the approver for whom for whom the summary
          is being retrieved. Use "me" instead to indicate the current user.
        example: ac10d20a-841e-1e7d-8184-32d2e22c0179
        in: path
        name: requested-for
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeApprovalSummary'
          description: summary of non-employee approval requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
      summary: Get Summary of Non-Employee Approval Requests
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{sourceId}/schema-attributes:
    delete:
      description: This end-point deletes all custom schema attributes for a non-employee
        source.
      operationId: deleteNonEmployeeSourceSchemaAttributes
      parameters:
      - description: The Source id
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Delete all custom schema attributes
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: "This API gets the list of schema attributes for the specified\
        \ Non-Employee SourceId. There are 8 mandatory attributes added to each new\
        \ Non-Employee Source automatically. Additionaly, user can add up to 10 custom\
        \ attributes. This interface returns all the mandatory attributes followed\
        \ by any custom attributes. At most, a total of 18 attributes will be returned."
      operationId: getNonEmployeeSourceSchemaAttributes
      parameters:
      - description: The Source id
        example: 2c918085842e69ae018432d22ccb212f
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                - type: TEXT
                  label: string
                  technicalName: string
                  helpText: string
                  placeholder: string
                  required: true
                items:
                  $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
                maxItems: 18
                type: array
          description: A list of Schema Attributes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth: []
      summary: List Schema Attributes Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
    post:
      description: "This API creates a new schema attribute for Non-Employee Source.\
        \ The schema technical name must be unique in the source. Attempts to create\
        \ a schema attribute with an existing name will result in a \"400.1.409 Reference\
        \ conflict\" response. At most, 10 custom attributes can be created per schema.\
        \ Attempts to create more than 10 will result in a \"400.1.4 Limit violation\"\
        \ response."
      operationId: createNonEmployeeSourceSchemaAttributes
      parameters:
      - description: The Source id
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonEmployeeSchemaAttributeBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
          description: Schema Attribute created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Create Non-Employee Source Schema Attribute
      tags:
      - Non-Employee Lifecycle Management
  /non-employee-sources/{sourceId}/schema-attributes/{attributeId}:
    delete:
      description: |
        This end-point deletes a specific schema attribute for a non-employee source.
      operationId: deleteNonEmployeeSchemaAttribute
      parameters:
      - description: The Schema Attribute Id (UUID)
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: attributeId
        required: true
        schema:
          type: string
      - description: The Source id
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Delete Non-Employee Source's Schema Attribute
      tags:
      - Non-Employee Lifecycle Management
    get:
      description: This API gets a schema attribute by Id for the specified Non-Employee
        SourceId.
      operationId: getNonEmployeeSchemaAttribute
      parameters:
      - description: The Schema Attribute Id (UUID)
        example: 2c918085842e69ae018432d22ccb212f
        in: path
        name: attributeId
        required: true
        schema:
          type: string
      - description: The Source id
        example: 2c918085842e69ae018432d22ccb212f
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |
                id,system,modified,created,type,label,technicalName,helpText,placeholder,required
              schema:
                $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
          description: The Schema Attribute
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:read
      summary: Get Schema Attribute Non-Employee Source
      tags:
      - Non-Employee Lifecycle Management
    patch:
      description: |
        This end-point patches a specific schema attribute for a non-employee SourceId.
      operationId: patchNonEmployeeSchemaAttribute
      parameters:
      - description: The Schema Attribute Id (UUID)
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: attributeId
        required: true
        schema:
          type: string
      - description: The Source id
        example: 2c91808b6ef1d43e016efba0ce470904
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /label
              value:
                new attribute label: null
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of schema attribute update operations according to the\
          \ [JSON Patch](https://tools.ietf.org/html/rfc6902) standard. The following\
          \ properties are allowed for update ':' 'label', 'helpText', 'placeholder',\
          \ 'required'."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
          description: The Schema Attribute was successfully patched.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:nelm:manage
      summary: Patch Non-Employee Source's Schema Attribute
      tags:
      - Non-Employee Lifecycle Management
  /managed-clients/{id}/status:
    get:
      description: Retrieve Managed Client Status by ID.
      operationId: getManagedClientStatus
      parameters:
      - description: ID of the Managed Client Status to get
        in: path
        name: id
        required: true
        schema:
          example: aClientId
          type: string
      - description: Type of the Managed Client Status to get
        in: query
        name: type
        required: true
        schema:
          $ref: '#/components/schemas/ManagedClientType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClientStatus'
          description: Responds with Managed Client Status having the given ID and
            Type.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:managed-client-status:read
      summary: Specified Managed Client Status.
      tags:
      - Managed Clients
    post:
      description: Update a status detail passed in from the client
      operationId: updateManagedClientStatus
      parameters:
      - description: ID of the Managed Client Status to update
        in: path
        name: id
        required: true
        schema:
          example: aClientId
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagedClientStatus'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedClientStatusAggResponse'
          description: Responds with the updated Managed Client Status.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:managed-client-status:manage
      summary: Handle status request from client
      tags:
      - Managed Clients
  /managed-clusters/{id}:
    get:
      description: Retrieve a ManagedCluster by ID.
      operationId: getManagedCluster
      parameters:
      - description: ID of the ManagedCluster to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: aClusterId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCluster'
          description: Responds with ManagedCluster having the given ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:remote-client:read
        - idn:remote-client:manage
      summary: Get a specified ManagedCluster.
      tags:
      - Managed Clusters
  /managed-clusters/{id}/log-config:
    get:
      description: Get managed cluster's log configuration.
      operationId: getClientLogConfiguration
      parameters:
      - description: ID of ManagedCluster to get log configuration for
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: aClusterId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLogConfiguration'
          description: Log configuration of ManagedCluster matching given cluster
            ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:remote-client:read
        - idn:remote-client:manage
      summary: Get managed cluster's log configuration
      tags:
      - Managed Clusters
    put:
      description: Update managed cluster's log configuration
      operationId: putClientLogConfiguration
      parameters:
      - description: ID of ManagedCluster to update log configuration for
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: aClusterId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientLogConfiguration'
        description: ClientLogConfiguration for given ManagedCluster
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientLogConfiguration'
          description: Responds with updated ClientLogConfiguration for given ManagedCluster
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:remote-client:manage
      summary: Update managed cluster's log configuration
      tags:
      - Managed Clusters
  /managed-clusters:
    get:
      description: "Retrieve all Managed Clusters for the current Org, based on request\
        \ context."
      operationId: getManagedClusters
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **operational**: *eq*
        example: operational eq operation
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ManagedCluster'
                type: array
          description: Responds with a list of ManagedCluster.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:remote-client:read
        - idn:remote-client:manage
      summary: Retrieve all Managed Clusters.
      tags:
      - Managed Clusters
  /mail-from-attributes:
    put:
      description: Change the MAIL FROM domain of an AWS SES email identity and provide
        the MX and TXT records to be placed in the caller's DNS
      operationId: putMailFromAttributes
      requestBody:
        content:
          application/json:
            example:
              identity: BobSmith@sailpoint.com
              mailFromDomain: example.sailpoint.com
            schema:
              $ref: '#/components/schemas/MailFromAttributesDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailFromAttributes'
          description: MAIL FROM Attributes required to verify the change
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:notification-mail-from-attributes:write
      summary: Change MAIL FROM domain
      tags:
      - Notifications
  /mail-from-attributes/{identity}:
    get:
      description: Retrieve MAIL FROM attributes for a given AWS SES identity.
      operationId: getMailFromAttributes
      parameters:
      - description: "Returns the MX and TXT record to be put in your DNS, as well\
          \ as the MAIL FROM domain status"
        example: bobsmith@sailpoint.com
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailFromAttributes'
          description: MAIL FROM Attributes object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:notification-mail-from-attributes:read
      summary: Get MAIL FROM Attributes
      tags:
      - Notifications
  /mfa/okta-verify/config:
    get:
      description: This API returns the configuration of an Okta MFA method. A token
        with ORG_ADMIN authority is required to call this API.
      operationId: getMFAOktaConfig
      responses:
        "200":
          content:
            application/json:
              example:
                mfaMethod: okta-verify
                enabled: true
                host: www.example.com
                accessKey: d******Y
                identityAttribute: email
              schema:
                $ref: '#/components/schemas/MfaOktaConfig'
          description: The configuration of an Okta MFA method.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:mfa-configuration:read
        - idn:mfa-configuration:manage
      summary: Configuration of Okta MFA method
      tags:
      - MFA Configuration
    put:
      description: This API sets the configuration of an Okta MFA method. A token
        with ORG_ADMIN authority is required to call this API.
      operationId: setMFAOktaConfig
      requestBody:
        content:
          application/json:
            example:
              mfaMethod: okta-verify
              enabled: true
              host: www.example.com
              accessKey: dk778Y3QlA5UqocYpdU3rEkzrK2D497y
              identityAttribute: email
            schema:
              $ref: '#/components/schemas/MfaOktaConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                mfaMethod: okta-verify
                enabled: true
                host: www.example.com
                accessKey: d******Y
                identityAttribute: email
              schema:
                $ref: '#/components/schemas/MfaOktaConfig'
          description: MFA configuration of an Okta MFA method.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:mfa-configuration:manage
      summary: Set Okta MFA configuration
      tags:
      - MFA Configuration
  /mfa/duo-web/config:
    get:
      description: This API returns the configuration of an Duo MFA method. A token
        with ORG_ADMIN authority is required to call this API.
      operationId: getMFADuoConfig
      responses:
        "200":
          content:
            application/json:
              example:
                mfaMethod: duo-web
                enabled: true
                host: www.example.com
                accessKey: d******Y
                identityAttribute: email
                configProperties:
                  skey: 6******B
                  ikey: Q123WE45R6TY7890ZXCV
              schema:
                $ref: '#/components/schemas/MfaDuoConfig'
          description: The configuration of an Duo MFA method.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:mfa-configuration:read
        - idn:mfa-configuration:manage
      summary: Configuration of Duo MFA method
      tags:
      - MFA Configuration
    put:
      description: This API sets the configuration of an Duo MFA method. A token with
        ORG_ADMIN authority is required to call this API.
      operationId: setMFADuoConfig
      requestBody:
        content:
          application/json:
            example:
              mfaMethod: duo-web
              enabled: true
              host: www.example.com
              accessKey: qw123Y3QlA5UqocYpdU3rEkzrK2D497y
              identityAttribute: email
              configProperties:
                skey: 12q3WERlcUHWJmiMqyCXI3uOF7EaDJTbdeOp6E2B
                ikey: Q123WE45R6TY7890ZXCV
            schema:
              $ref: '#/components/schemas/MfaDuoConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                mfaMethod: duo-web
                enabled: true
                host: www.example.com
                accessKey: q******y
                identityAttribute: email
                configProperties:
                  skey: 1******B
                  ikey: Q123WE45R6TY7890ZXCV
              schema:
                $ref: '#/components/schemas/MfaDuoConfig'
          description: MFA configuration of an Duo MFA method.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:mfa-configuration:manage
      summary: Set Duo MFA configuration
      tags:
      - MFA Configuration
  /mfa/{method}/test:
    get:
      description: |-
        This API validates that the configuration is valid and will properly authenticate with the MFA provider identified by the method path parameter.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: testMFAConfig
      parameters:
      - description: The name of the MFA method. The currently supported method names
          are 'okta-verify' and 'duo-web'.
        in: path
        name: method
        required: true
        schema:
          example: okta-verify
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                state: SUCCESS
                error: null
              schema:
                $ref: '#/components/schemas/MfaConfigTestResponse'
          description: The result of configuration test for the MFA provider.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:mfa-configuration:read
        - idn:mfa-configuration:manage
      summary: MFA method's test configuration
      tags:
      - MFA Configuration
  /mfa/{method}/delete:
    delete:
      description: |-
        This API removes the configuration for the specified MFA method.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: deleteMFAConfig
      parameters:
      - description: The name of the MFA method. The currently supported method names
          are 'okta-verify' and 'duo-web'.
        in: path
        name: method
        required: true
        schema:
          example: okta-verify
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                mfaMethod: okta-verify
                enabled: true
                host: www.example.com
                accessKey: d******Y
                identityAttribute: email
              schema:
                $ref: '#/components/schemas/MfaOktaConfig'
          description: MFA configuration of an MFA method.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:mfa-configuration:manage
      summary: Delete MFA method configuration
      tags:
      - MFA Configuration
  /mfa/okta-verify/verify:
    post:
      description: "This API Authenticates the user via Okta-Verify MFA method. Request\
        \ requires a header called 'slpt-forwarding', and it must contain a remote\
        \ IP Address of caller."
      operationId: sendOktaVerifyRequest
      requestBody:
        content:
          application/json:
            example:
              userId: example@mail.com
            schema:
              $ref: '#/components/schemas/OktaVerificationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                requestId: 089899f13a8f4da7824996191587bab9
                status: SUCCESS
                error: ""
              schema:
                $ref: '#/components/schemas/VerificationResponse'
          description: The status of verification request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:mfa:verify
      summary: Verifying authentication via Okta method
      tags:
      - MFA Controller
  /mfa/duo-web/verify:
    post:
      description: This API Authenticates the user via Duo-Web MFA method.
      operationId: sendDuoVerifyRequest
      requestBody:
        content:
          application/json:
            example:
              userId: 2c9180947f0ef465017f215cbcfd004b
              signedResponse: AUTH|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjUzMDg5|f1f5f8ced5b340f3d303b05d0efa0e43b6a8f970:APP|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjU2NjE5|cb44cf44353f5127edcae31b1da0355f87357db2
            schema:
              $ref: '#/components/schemas/DuoVerificationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                requestId: 089899f13a8f4da7824996191587bab9
                status: SUCCESS
                error: ""
              schema:
                $ref: '#/components/schemas/VerificationResponse'
          description: The status of verification request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:mfa:verify
      summary: Verifying authentication via Duo method
      tags:
      - MFA Controller
  /mfa/{method}/poll:
    post:
      description: This API poll the VerificationPollRequest for the specified MFA
        method. A token with ORG_ADMIN authority is required to call this API.
      operationId: pingVerificationStatus
      parameters:
      - description: "The name of the MFA method. The currently supported method names\
          \ are 'okta-verify', 'duo-web', 'kba','token', 'rsa'"
        in: path
        name: method
        required: true
        schema:
          example: okta-verify
          type: string
      requestBody:
        content:
          application/json:
            example:
              requestId: 089899f13a8f4da7824996191587bab9
            schema:
              $ref: '#/components/schemas/VerificationPollRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                requestId: 089899f13a8f4da7824996191587bab9
                status: PENDING
                error: ""
              schema:
                $ref: '#/components/schemas/VerificationResponse'
          description: MFA VerificationPollRequest status an MFA method.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:mfa:poll
      summary: Polling MFA method by VerificationPollRequest
      tags:
      - MFA Controller
  /mfa/kba/authenticate:
    post:
      description: This API Authenticate user in KBA MFA method.
      operationId: sendKbaAnswers
      requestBody:
        content:
          application/json:
            example:
              answers:
              - questionId: 089899f13a8f4da7824996191587bab9
                answer: Your answer
              - questionId: 067899f13a8f4da7824996191587bab9
                answer: Your answer1
            schema:
              $ref: '#/components/schemas/KbaAnswerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                kbaAuthResponseItem:
                - questionId: 089899f13a8f4da7824996191587bab9
                  IsVerified: false
                - questionId: 089899f13a8f4da7824996191587bda8
                  IsVerified: true
                status: PENDING
              schema:
                $ref: '#/components/schemas/KbaAuthResponse'
          description: KBA authenticated status.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:mfa-kba:authenticate
      summary: Authenticate KBA provided MFA method
      tags:
      - MFA Controller
  /mfa/token/authenticate:
    post:
      description: This API Authenticate user in Token MFA method.
      operationId: sendTokenAuthRequest
      requestBody:
        content:
          application/json:
            example:
              token: "12345"
              userAlias: will.albin
              deliveryType: EMAIL_WORK
            schema:
              $ref: '#/components/schemas/TokenAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                status: PENDING
              schema:
                $ref: '#/components/schemas/TokenAuthResponse'
          description: Token authenticated status.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:mfa:verify
      summary: Authenticate Token provided MFA method
      tags:
      - MFA Controller
  /mfa/token/send:
    post:
      description: This API send token request.
      operationId: createSendToken
      requestBody:
        content:
          application/json:
            example:
              userAlias: will.albin
              deliveryType: EMAIL_WORK
            schema:
              $ref: '#/components/schemas/SendTokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                requestId: 089899f13a8f4da7824996191587bab9
                status: SUCCESS
                errorMessage: ""
              schema:
                $ref: '#/components/schemas/SendTokenResponse'
          description: Token send status.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:mfa:send
      summary: Create and send user token
      tags:
      - MFA Controller
  /notification-template-defaults:
    get:
      description: "This lists the default templates used for notifications, such\
        \ as emails from IdentityNow. Since this is a beta feature, it doesn't include\
        \ all the templates."
      operationId: listNotificationTemplateDefaults
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **key**: *eq, in, sw*

          **medium**: *eq, sw*

          **locale**: *eq, sw*
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TemplateDtoDefault'
                type: array
          description: A list of the default template objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List Notification Template Defaults
      tags:
      - Notifications
  /notification-templates:
    get:
      description: "This lists the templates that you have modified for your site.\
        \ Since this is a beta feature, it doesn't include all your modified templates."
      operationId: listNotificationTemplates
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **key**: *eq, in, sw*

          **medium**: *eq, sw*

          **locale**: *eq, sw*
        example: medium eq "EMAIL"
        in: query
        name: filters
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TemplateDto'
                type: array
          description: A list of template objects for your site
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List Notification Templates
      tags:
      - Notifications
    post:
      description: "This creates a template for your site. \n\nYou can also use this\
        \ endpoint to update a template.  First, copy the response body from the [get\
        \ notification template endpoint](https://developer.sailpoint.com/idn/api/beta/get-notification-template)\
        \ for a template you wish to update and paste it into the request body for\
        \ this endpoint.   Modify the fields you want to change and submit the POST\
        \ request when ready."
      operationId: createNotificationTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateDto'
          description: A template object for your site
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create Notification Template
      tags:
      - Notifications
  /notification-templates/{id}:
    get:
      description: This gets a template that you have modified for your site by Id.
      operationId: getNotificationTemplate
      parameters:
      - description: Id of the Notification Template
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TemplateDto'
                type: array
          description: A template object for your site
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get Notification Template By Id
      tags:
      - Notifications
  /notification-templates/bulk-delete:
    post:
      description: "This lets you bulk delete templates that you previously created\
        \ for your site. Since this is a beta feature, you can only delete a subset\
        \ of your notifications, i.e. ones that show up in the list call."
      operationId: deleteNotificationTemplatesInBulk
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TemplateBulkDeleteDto'
              type: array
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Bulk Delete Notification Templates
      tags:
      - Notifications
  /oauth-clients:
    get:
      description: This gets a list of OAuth clients.
      operationId: listOauthClients
      parameters:
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **lastUsed**: *le, isnull*
        example: lastUsed le 2023-02-05T10:59:27.214Z
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetOAuthClientResponse'
                type: array
          description: List of OAuth clients.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:oauth-client:manage
      summary: List OAuth Clients
      tags:
      - OAuth Clients
    post:
      description: This creates an OAuth client.
      operationId: createOauthClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOAuthClientRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOAuthClientResponse'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:oauth-client:manage
      summary: Create OAuth Client
      tags:
      - OAuth Clients
  /oauth-clients/{id}:
    delete:
      description: This deletes an OAuth client.
      operationId: deleteOauthClient
      parameters:
      - description: The OAuth client id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:oauth-client:manage
      summary: Delete OAuth Client
      tags:
      - OAuth Clients
    get:
      description: This gets details of an OAuth client.
      operationId: getOauthClient
      parameters:
      - description: The OAuth client id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOAuthClientResponse'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:oauth-client:manage
        - sp:oauth-client:read
      summary: Get OAuth Client
      tags:
      - OAuth Clients
    patch:
      description: "This performs a targeted update to the field(s) of an OAuth client.\n\
        Request will require a security scope of \n- sp:oauth-client:manage"
      operationId: patchOauthClient
      parameters:
      - description: The OAuth client id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /strongAuthSupported
              value: true
            - op: replace
              path: /businessName
              value: acme-solar
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of OAuth client update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields are patchable:
          * tenant
          * businessName
          * homepageUrl
          * name
          * description
          * accessTokenValiditySeconds
          * refreshTokenValiditySeconds
          * redirectUris
          * grantTypes
          * accessType
          * enabled
          * strongAuthSupported
          * claimsSupported
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOAuthClientResponse'
          description: "Indicates the PATCH operation succeeded, and returns the OAuth\
            \ client's new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:oauth-client:manage
      summary: Patch OAuth Client
      tags:
      - OAuth Clients
  /org-config:
    get:
      description: Get org configuration with only external (org admin) accessible
        properties for the current org.
      operationId: getOrgConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgConfig'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:org-configs:read
        - idn:org-configs:manage
      summary: Get Org configuration settings
      tags:
      - Org Config
    patch:
      description: Patch configuration of the current org using http://jsonpatch.com/
        syntax.  Commonly used for changing the time zone of an org.
      operationId: patchOrgConfig
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /timeZone
              value: America/Toronto
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of schema attribute update operations according to the\
          \ [JSON Patch](https://tools.ietf.org/html/rfc6902) standard."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgConfig'
          description: The Org was successfully patched.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:org-configs:manage
      summary: Patch an Org configuration property
      tags:
      - Org Config
  /org-config/valid-time-zones:
    get:
      description: Get a list of valid time zones that can be set in org configurations.
      operationId: getValidTimeZones
      responses:
        "200":
          content:
            application/json:
              example:
              - Etc/GMT-6
              - Etc/GMT+8
              - EST
              - America/Chicago
              - America/Toronto
              - Asia/Gaza
              - Europe/Brussels
              - Europe/Kiev
              schema:
                items:
                  type: string
                type: array
          description: Request successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:org-configs:read
        - idn:org-configs-user:read
      summary: Get list of time zones
      tags:
      - Org Config
  /outlier-summaries:
    get:
      description: |-
        This API receives a summary containing: the number of identities that customer has, the number of outliers, and the type of outlier
        Requires authorization scope of 'iai:outliers-management:read'
      operationId: getIdentityOutlierSnapshots
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: Type of the identity outliers snapshot to filter on
        in: query
        name: type
        required: false
        schema:
          enum:
          - LOW_SIMILARITY
          - STRUCTURAL
          type: string
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **snapshotDate**: *ge, le*
        example: snapshotDate ge "2022-02-07T20:13:29.356648026Z"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **snapshotDate**
        example: snapshotDate
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OutlierSummary'
                type: array
          description: Succeeded. Returns list of objects. Each object is a summary
            to give high level statistics/counts of outliers
          headers:
            X-Total-Count:
              description: The total result count.
              schema:
                type: integer
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: IAI Identity Outliers Summary
      tags:
      - IAI Outliers
  /outlier-summaries/latest:
    get:
      description: |-
        This API returns a most recent snapshot of each outlier type, each containing: the number of identities that customer has, the number of outliers, and the type of outlier
        Requires authorization scope of 'iai:outliers-management:read'
      operationId: getLatestIdentityOutlierSnapshots
      parameters:
      - description: Type of the identity outliers snapshot to filter on
        in: query
        name: type
        required: false
        schema:
          enum:
          - LOW_SIMILARITY
          - STRUCTURAL
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LatestOutlierSummary'
                type: array
          description: Succeeded. Returns list of objects. Each object is a summary
            to give high level statistics/counts of outliers
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: IAI Identity Outliers Latest Summary
      tags:
      - IAI Outliers
  /outliers:
    get:
      description: |-
        This API receives a list of outliers, containing data such as: identityId, outlier type, detection dates, identity attributes, if identity is ignore, and certification information
        Requires authorization scope of 'iai:outliers-management:read'
      operationId: getIdentityOutliers
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: Type of the identity outliers snapshot to filter on
        in: query
        name: type
        required: false
        schema:
          enum:
          - LOW_SIMILARITY
          - STRUCTURAL
          example: LOW_SIMILARITY
          type: string
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **attributes**: *eq, sw, co, in*

          **firstDetectionDate**: *ge, le*

          **certStatus**: *eq*

          **ignored**: *eq*

          **score**: *ge, le*
        example: attributes.displayName sw "John" and certStatus eq "false"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **firstDetectionDate, attributes, score**
        example: "attributes.displayName,firstDetectionDate,-score"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Outlier'
                type: array
          description: Succeeded. Returns list of objects. Each object contains information
            about outliers
          headers:
            X-Total-Count:
              description: The total result count.
              schema:
                type: integer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: IAI Get Identity Outliers
      tags:
      - IAI Outliers
  /outliers/{outlierId}/contributing-features:
    get:
      description: |-
        This API returns a list of contributing feature objects for a single outlier. The object contains: feature name, feature value type, value, importance, display name (translated text or message key), description (translated text or message key), translation messages object
        Requires authorization scope of 'iai:outliers-management:read'
      operationId: getPeerGroupOutliersContributingFeatures
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: Whether or not to include translation messages object in returned
          response
        in: query
        name: include-translation-messages
        required: false
        schema:
          example: include-translation-messages=
          type: string
      - description: The outlier id
        example: 2c918085842e69ae018432d22ccb212f
        in: path
        name: outlierId
        required: true
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **importance**
        example: importance
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OutlierContributingFeature'
                type: array
          description: Succeeded. Returns list of objects. Each object contains a
            feature and metadata about that feature
          headers:
            X-Total-Count:
              description: The total result count.
              schema:
                type: integer
            accept-language:
              description: The locale to use for translations for displayName and
                description text
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get identity outlier's contibuting features
      tags:
      - IAI Outliers
  /outliers/{outlierId}/feature-details/{contributingFeatureName}/access-items:
    get:
      description: |-
        This API returns a list of the enriched access items associated with each feature filtered by the access item type  The object contains: accessItemId, display name (translated text or message key), description (translated text or message key), accessType, sourceName, extremelyRare
        Requires authorization scope of 'iai:outliers-management:read'
      operationId: listOutliersContributingFeatureAccessItems
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: The outlier id
        example: 2c918085842e69ae018432d22ccb212f
        in: path
        name: outlierId
        required: true
        schema:
          type: string
      - description: The name of contributing feature
        example: entitlement_count
        in: path
        name: contributingFeatureName
        required: true
        schema:
          enum:
          - radical_entitlement_count
          - entitlement_count
          - max_jaccard_similarity
          - mean_max_bundle_concurrency
          - single_entitlement_bundle_count
          - peerless_score
          type: string
      - description: "The type of access item for the identity outlier contributing\
          \ feature. If not provided, it returns all"
        example: ENTITLEMENT
        in: query
        name: accessType
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **displayName**
        example: displayName
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OutliersContributingFeatureAccessItems'
                type: array
          description: The list of access items.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - iai:outliers-management:read
      summary: Gets a list of access items associated with each identity outlier contributing
        feature
      tags:
      - IAI Outliers
  /outliers/ignore:
    post:
      description: |-
        This API receives a list of IdentityIDs in the request, changes the outliers to be ignored--returning a 204 if successful.
        Requires authorization scope of 'iai:outliers-management:update'
      operationId: ignoreIdentityOutliers
      requestBody:
        content:
          application/json:
            schema:
              description: List of identity IDs to ignore from outlier listing
              example:
              - abc123def456
              - ghi789jkl012
              items:
                type: string
              type: array
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: IAI Identity Outliers Ignore
      tags:
      - IAI Outliers
  /outliers/unignore:
    post:
      description: |-
        This API receives a list of IdentityIDs in the request, changes the outliers to be un-ignored--returning a 204 if successful.
        Requires authorization scope of 'iai:outliers-management:update'
      operationId: unIgnoreIdentityOutliers
      requestBody:
        content:
          application/json:
            schema:
              description: List of identity IDs to un-ignore from outlier listing
              example:
              - abc123def456
              - ghi789jkl012
              items:
                type: string
              type: array
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: IAI Identity Outliers Unignore
      tags:
      - IAI Outliers
  /outliers/export:
    get:
      description: |-
        This API exports a list of ignored outliers to a CSV as well as list of non-ignored outliers to a CSV. These two CSVs will be zipped and exported Columns will include: identityID, type, firstDetectionDate, latestDetectionDate, ignored, & attributes (defined set of identity attributes)
        Requires authorization scope of 'iai:outliers-management:read'
      operationId: exportOutliersZip
      parameters:
      - description: Type of the identity outliers snapshot to filter on
        in: query
        name: type
        required: false
        schema:
          enum:
          - LOW_SIMILARITY
          - STRUCTURAL
          type: string
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: Succeeded. Returns zip of 2 CSVs to download. 1 CSV for ignored
            outliers and 1 for non-ignored outliers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: IAI Identity Outliers Export
      tags:
      - IAI Outliers
  /outlier-feature-summaries/{outlierFeatureId}:
    get:
      description: |-
        This API returns a summary of a contributing feature for an identity outlier. The object contains: contributing feature name (translated text or message key), identity outlier display name, feature values, feature definition and explanation (translated text or message key), peer display name and identityId, access item reference, translation messages object
        Requires authorization scope of 'iai:outliers-management:read'
      operationId: getOutlierContributingFeatureSummary
      parameters:
      - description: Contributing feature id
        example: 04654b66-7561-4090-94f9-abee0722a1af
        in: path
        name: outlierFeatureId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutlierFeatureSummary'
          description: Succeeded. Returns selected contributing feature summary for
            an outlier
          headers:
            accept-language:
              description: The locale to use for translations
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - iai:outliers-management:read
      summary: Get identity outlier contibuting feature summary
      tags:
      - IAI Outliers
  /password-dictionary:
    get:
      description: |-
        This gets password dictionary for the organization.
        A token with ORG_ADMIN authority is required to call this API.
        The password dictionary file can contain lines that are:
        1. comment lines - the first character is '#', can be 128 Unicode codepoints in length, and are ignored during processing
        2. empty lines
        3. locale line - the first line that starts with "locale=" is considered to be locale line, the rest are treated as normal content lines
        4. line containing the password dictionary word - it must start with non-whitespace character and only non-whitespace characters are allowed;
                maximum length of the line is 128 Unicode codepoints


        Password dictionary file may not contain more than 2,500 lines (not counting whitespace lines, comment lines and locale line).
          Password dict file must contain UTF-8 characters only.

        # Sample password text file

        ```

        # Password dictionary small test file

        locale=en_US

        # Password dictionary prohibited words

        qwerty
        abcd
        aaaaa
        password
        qazxsws

        ```
      operationId: getPasswordDictionary
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: A password dictionary response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:password-dictionary-management:read
      summary: Get Password Dictionary
      tags:
      - Password Dictionary
    put:
      description: |-
        This updates password dictionary for the organization.
        A token with ORG_ADMIN authority is required to call this API.
        The password dictionary file can contain lines that are:
        1. comment lines - the first character is '#', can be 128 Unicode codepoints in length, and are ignored during processing
        2. empty lines
        3. locale line - the first line that starts with "locale=" is considered to be locale line, the rest are treated as normal content lines
        4. line containing the password dictionary word - it must start with non-whitespace character and only non-whitespace characters are allowed;
                maximum length of the line is 128 Unicode codepoints


        Password dictionary file may not contain more than 2,500 lines (not counting whitespace lines, comment lines and locale line).
          Password dict file must contain UTF-8 characters only.

        # Sample password text file

        ```

        # Password dictionary small test file

        locale=en_US

        # Password dictionary prohibited words

        qwerty
        abcd
        aaaaa
        password
        qazxsws

        ```
      operationId: putPasswordDictionary
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/putPasswordDictionary_request'
        description: The password dictionary file to be uploaded.
        required: true
      responses:
        "200":
          description: Successfully updated.
        "201":
          description: Created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:password-dictionary:manage
      summary: Update Password Dictionary
      tags:
      - Password Dictionary
  /query-password-info:
    post:
      description: "This API is used to query password related information. \n\nA\
        \ token with [API authority](https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow)\
        \ \nis required to call this API.  \"API authority\" refers to a token that\
        \ only has the \"client_credentials\" \ngrant type, and therefore no user\
        \ context. A [personal access token](https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens)\
        \ \nor a token generated with the [authorization_code](https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow)\
        \ \ngrant type will **NOT** work on this endpoint, and a `403 Forbidden` response\
        \ \nwill be returned.\n"
      operationId: queryPasswordInfo
      requestBody:
        content:
          application/json:
            example:
              userName: Abby.Smith
              sourceName: My-AD
            schema:
              $ref: '#/components/schemas/PasswordInfoQueryDTO'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                identityId: 2c918085744fec4301746f9a5bce4611
                sourceId: 2c918083746f642c01746f9908840111
                publicKeyId: N2M1OTJiMGEtMDJlZS00ZWU3LTkyYTEtNjA5YmI5NWE3ZWVA
                publicKey: AIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuGFkWi2J75TztpbaPKd36bJnIB3J8gZ6UcoS9oSDYsqBzPpTsfZXYaEf4Y4BKGgJIXmE/lwhwuj7mU1itdZ2qTSNFtnXA8Fn75c3UUkk+h+wdZbkuSmqlsJo3R1OnJkwkJggcAy9Jvk9jlcrNLWorpQ1w9raUvxtvfgkSdq153KxotenQ1HciSyZ0nA/Kw0UaucLnho8xdRowZs11afXGXA9IT9H6D8T6zUdtSxm0nAyH+mluma5LdTfaM50W3l/L8q56Vrqmx2pZIiwdx/0+g3Y++jV70zom0ZBkC1MmSoLMrQYG5OICNjr72f78B2PaGXfarQHqARLjKpMVt9YIQIDAQAB
                accounts:
                - accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
                  accountName: Abby.Smith
                policies:
                - passwordRepeatedChar is 3
                - passwordMinAlpha is 1
                - passwordMinLength is 5
                - passwordMinNumeric is 1
              schema:
                $ref: '#/components/schemas/PasswordInfo'
          description: Reference to the password info.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Query Password Info
      tags:
      - Password Management
  /set-password:
    post:
      description: "This API is used to set a password for an identity. \n\nAn identity\
        \ can change their own password (as well as any of their accounts' passwords)\
        \ if they use a token generated by their IDN user, such as a [personal access\
        \ token](https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens)\
        \ or [\"authorization_code\" derived OAuth token](https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow).\n\
        \nA token with [API authority](https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow)\
        \ can be used to change **any** identity's password or the password of any\
        \ of the identity's accounts. \n\"API authority\" refers to a token that only\
        \ has the \"client_credentials\" grant type.\n\nYou can use this endpoint\
        \ to generate an `encryptedPassword` (RSA encrypted using publicKey). \nTo\
        \ do so, follow these steps:\n\n1. Use [Query Password Info](https://developer.sailpoint.com/idn/api/v3/query-password-info)\
        \ to get the following information: `identityId`, `sourceId`, `publicKeyId`,\
        \ `publicKey`, `accounts`, and `policies`. \n\n2. Choose an account from the\
        \ previous response that you will provide as an `accountId` in your request\
        \ to set an encrypted password. \n\n3. Use [Set Identity's Password](https://developer.sailpoint.com/idn/api/v3/set-password)\
        \ and provide the information you got from your earlier query. Then add this\
        \ code to your request to get the encrypted password:\n\n```java\nimport javax.crypto.Cipher;\n\
        import java.security.KeyFactory;\nimport java.security.PublicKey;\nimport\
        \ java.security.spec.X509EncodedKeySpec;\nimport java util.Base64;\n\nString\
        \ encrypt(String publicKey, String toEncrypt) throws Exception {\n  byte[]\
        \ publicKeyBytes = Base64.getDecoder().decode(publicKey);\n  byte[] encryptedBytes\
        \ = encryptRsa(publicKeyBytes, toEncrypt.getBytes(\"UTF-8\"));\n  return Base64.getEncoder().encodeToString(encryptedBytes);\n\
        }\n\nprivate byte[] encryptRsa(byte[] publicKeyBytes, byte[] toEncryptBytes)\
        \ throws Exception {\n  PublicKey key = KeyFactory.getInstance(\"RSA\").generatePublic(new\
        \ X509EncodedKeySpec(publicKeyBytes));\n  String transformation = \"RSA/ECB/PKCS1Padding\"\
        ;\n  Cipher cipher = Cipher.getInstance(transformation);\n  cipher.init(1,\
        \ key);\n  return cipher.doFinal(toEncryptBytes);\n}\n```    \n\nIn this example,\
        \ `toEncrypt` refers to the plain text password you are setting and then encrypting,\
        \ and the `publicKey` refers to the publicKey you got from the first request\
        \ you sent. \n\nYou can then use [Get Password Change Request Status](https://developer.sailpoint.com/idn/api/v3/get-password-change-status)\
        \ to check the password change request status. To do so, you must provide\
        \ the `requestId` from your earlier request to set the password. \n"
      operationId: setIdentityPassword
      requestBody:
        content:
          application/json:
            example:
              identityId: 8a807d4c73c545510173c545f0a002ff
              encryptedPassword: GIAP7TaAg7Y2EJtFojokBDvHQ/iXF3qk0z0+eLusqXMSkEhAfr34GydFLy+BM2uZB94cwbTYKi9rRrCRRdh8610VeqpRDjhuc28nOPYqTJOx09IGJdr8dl4mbhC1f21JCqMBBrFSA4VQQvd6OMVsceoXTjDI0aKahRYNjlMlsOuaIUZeNQxWBydLuR6vYG3qAKEPCzYZbvyYuBUylUWArfqwV4dgwKGDgDkTLBkQU9LVu3rssc+BXaex6l6JcBDiPg7wvKD1G3lZ+BaGrMknbx3j0T2Uivg+HxwTf7PmtAua6O9M7F984c79KM+sYFTU37MAdlWZu/cy+w2DdHVdCg==
              publicKeyId: YWQ2NjQ4MTItZjY0NC00MWExLWFjMjktOGNmMzU3Y2VlNjk2
              accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
              sourceId: 8a807d4c73c545510173c545d4b60246
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                Password change is in progress:
                  value:
                    state: IN_PROGRESS
                    requestId: 089899f13a8f4da7824996191587bab9
              schema:
                $ref: '#/components/schemas/PasswordChangeResponse'
          description: Reference to the password change.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Set Identity's Password
      tags:
      - Password Management
  /password-change-status/{id}:
    get:
      description: This API returns the status of a password change request. A token
        with identity owner or trusted API client application authority is required
        to call this API.
      operationId: getIdentityPasswordChangeStatus
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                status: IN_PROCESS
                reqeustId: 089899f13a8f4da7824996191587bab9
                error: null
              schema:
                $ref: '#/components/schemas/PasswordStatus'
          description: Status of the password change request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get Password Change Request Status
      tags:
      - Password Management
  /password-sync-groups:
    get:
      description: This API returns a list of password sync groups. A token with ORG_ADMIN
        authority is required to call this API.
      operationId: getPasswordSyncGroups
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PasswordSyncGroup'
                type: array
          description: A list of password sync groups.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:password-sync-group-management:read
      summary: Get Password Sync Group List
      tags:
      - Password Sync Groups
    post:
      description: This API creates a password sync group based on the specifications
        provided. A token with ORG_ADMIN authority is required to call this API.
      operationId: createPasswordSyncGroup
      requestBody:
        content:
          application/json:
            example:
              name: Password Sync Group 2
              passwordPolicyId: 2c91808d744ba0ce01746f93b6204501
              sourceIds:
              - 2c918084660f45d6016617daa9210584
              - 2c918084660f45d6016617daa9210500
            schema:
              $ref: '#/components/schemas/PasswordSyncGroup'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
                name: Password Sync Group 2
                passwordPolicyId: 2c91808d744ba0ce01746f93b6204501
                sourceIds:
                - 2c918084660f45d6016617daa9210584
                - 2c918084660f45d6016617daa9210500
              schema:
                $ref: '#/components/schemas/PasswordSyncGroup'
          description: Reference to the password sync group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:password-sync-group-management:write
      summary: Create Password Sync Group
      tags:
      - Password Sync Groups
  /password-sync-groups/{id}:
    delete:
      description: This API deletes the specified password sync group. A token with
        ORG_ADMIN authority is required to call this API.
      operationId: deletePasswordSyncGroup
      parameters:
      - description: The ID of password sync group to delete.
        example: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:password-sync-group-management:write
      summary: Delete Password Sync Group by ID
      tags:
      - Password Sync Groups
    get:
      description: This API returns the sync group for the specified ID. A token with
        ORG_ADMIN authority is required to call this API.
      operationId: getPasswordSyncGroup
      parameters:
      - description: The ID of password sync group to retrieve.
        example: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                id: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
                name: Password Sync Group 1
                passwordPolicyId: 2c91808d744ba0ce01746f93b6204501
                sourceIds:
                - 2c918084660f45d6016617daa9210584
                - 2c918084660f45d6016617daa9210500
              schema:
                $ref: '#/components/schemas/PasswordSyncGroup'
          description: Reference to the password sync group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:password-sync-group-management:read
      summary: Get Password Sync Group by ID
      tags:
      - Password Sync Groups
    put:
      description: This API updates the specified password sync group. A token with
        ORG_ADMIN authority is required to call this API.
      operationId: updatePasswordSyncGroup
      parameters:
      - description: The ID of password sync group to update.
        example: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              id: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
              name: Password Sync Group 2
              passwordPolicyId: 2c91808d744ba0ce01746f93b6204501
              sourceIds:
              - 2c918084660f45d6016617daa9210584
              - 2c918084660f45d6016617daa9210500
            schema:
              $ref: '#/components/schemas/PasswordSyncGroup'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                id: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
                name: Password Sync Group 2
                passwordPolicyId: 2c91808d744ba0ce01746f93b6204501
                sourceIds:
                - 2c918084660f45d6016617daa9210584
                - 2c918084660f45d6016617daa9210500
              schema:
                $ref: '#/components/schemas/PasswordSyncGroup'
          description: Reference to the password sync group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:password-sync-group-management:write
      summary: Update Password Sync Group by ID
      tags:
      - Password Sync Groups
  /password-org-config:
    get:
      description: "This API returns the password org config . Requires ORG_ADMIN,\
        \ API role or authorization scope of 'idn:password-org-config:read'"
      operationId: getPasswordOrgConfig
      responses:
        "200":
          content:
            application/json:
              example:
                customInstructionsEnabled: true
                digitTokenDurationMinutes: 9
                digitTokenEnabled: false
                digitTokenLength: 6
              schema:
                $ref: '#/components/schemas/PasswordOrgConfig'
          description: Reference to the password org config.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:password-org-config:read
      summary: Get Password Org Config
      tags:
      - Password Configuration
    post:
      description: |-
        This API creates the password org config. Unspecified fields will use default value.
        To be able to use the custom password instructions, you must set the `customInstructionsEnabled` field to "true".
        Requires ORG_ADMIN, API role or authorization scope of 'idn:password-org-config:write'
      operationId: createPasswordOrgConfig
      requestBody:
        content:
          application/json:
            example:
              customInstructionsEnabled: true
              digitTokenEnabled: true
              digitTokenDurationMinutes: 12
              digitTokenLength: 9
            schema:
              $ref: '#/components/schemas/PasswordOrgConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                customInstructionsEnabled: true
                digitTokenDurationMinutes: 9
                digitTokenEnabled: true
                digitTokenLength: 12
              schema:
                $ref: '#/components/schemas/PasswordOrgConfig'
          description: Reference to the password org config.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:password-org-config:write
      summary: Create Password Org Config
      tags:
      - Password Configuration
    put:
      description: "This API updates the password org config for specified fields.\
        \ Other fields will keep original value.\nYou must set the `customInstructionsEnabled`\
        \ field to \"true\" to be able to use custom password instructions. \nRequires\
        \ ORG_ADMIN, API role or authorization scope of 'idn:password-org-config:write'"
      operationId: putPasswordOrgConfig
      requestBody:
        content:
          application/json:
            example:
              digitTokenEnabled: true
              digitTokenDurationMinutes: 12
            schema:
              $ref: '#/components/schemas/PasswordOrgConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                customInstructionsEnabled: true
                digitTokenDurationMinutes: 12
                digitTokenEnabled: true
                digitTokenLength: 6
              schema:
                $ref: '#/components/schemas/PasswordOrgConfig'
          description: Reference to the password org config.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:password-org-config:write
      summary: Update Password Org Config
      tags:
      - Password Configuration
  /peer-group-strategies/{strategy}/identity-outliers:
    get:
      deprecated: true
      description: "-- Deprecated : See 'IAI Outliers' This API will be used by Identity\
        \ Governance systems to identify identities that are not included in an organization's\
        \ peer groups. By default, 250 identities are returned. You can specify between\
        \ 1 and 1000 number of identities that can be returned."
      operationId: getPeerGroupOutliers
      parameters:
      - description: "The strategy used to create peer groups. Currently, 'entitlement'\
          \ is supported."
        example: entitlement
        in: path
        name: strategy
        required: true
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PeerGroupMember'
                type: array
          description: List of identities that are not included in peer groups.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth: []
      summary: Identity Outliers List
      tags:
      - IAI Peer Group Strategies
  /personal-access-tokens:
    get:
      description: "This gets a collection of personal access tokens associated with\
        \ the optional `owner-id`.  query parameter. If the `owner-id` query parameter\
        \ is omitted, all personal access tokens  for a tenant will be retrieved,\
        \ but the caller must have the 'idn:all-personal-access-tokens:read' right."
      operationId: listPersonalAccessTokens
      parameters:
      - description: "The identity ID of the owner whose personal access tokens should\
          \ be listed.  If \"me\", the caller should have the following right: 'idn:my-personal-access-tokens:read'\n\
          If an actual owner ID or if the `owner-id` parameter is omitted in the request,\
          \  the caller should have the following right: 'idn:all-personal-access-tokens:read'.\
          \ \nIf the caller has the following right, then managed personal access\
          \ tokens associated with `owner-id` will be retrieved: 'idn:managed-personal-access-tokens:read'"
        in: query
        name: owner-id
        required: false
        schema:
          example: 2c9180867b50d088017b554662fb281e
          type: string
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **lastUsed**: *le, isnull*
        example: lastUsed le 2023-02-05T10:59:27.214Z
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetPersonalAccessTokenResponse'
                type: array
          description: List of personal access tokens.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:my-personal-access-tokens:read
        - sp:my-personal-access-tokens:manage
        - sp:all-personal-access-tokens:read
        - sp:all-personal-access-tokens:manage
      summary: List Personal Access Tokens
      tags:
      - Personal Access Tokens
    post:
      description: This creates a personal access token.
      operationId: createPersonalAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonalAccessTokenRequest'
        description: Name and scope of personal access token.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePersonalAccessTokenResponse'
          description: Created. Note - this is the only time Personal Access Tokens'
            secret attribute will be displayed.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:my-personal-access-tokens:manage
        - sp:all-personal-access-tokens:manage
      summary: Create Personal Access Token
      tags:
      - Personal Access Tokens
  /personal-access-tokens/{id}:
    delete:
      description: This deletes a personal access token.
      operationId: deletePersonalAccessToken
      parameters:
      - description: The personal access token id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:my-personal-access-tokens:manage
        - sp:all-personal-access-tokens:manage
      summary: Delete Personal Access Token
      tags:
      - Personal Access Tokens
    patch:
      description: This performs a targeted update to the field(s) of a Personal Access
        Token.
      operationId: patchPersonalAccessToken
      parameters:
      - description: The Personal Access Token id
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /name
              value: New name
            - op: replace
              path: /scope
              value:
              - sp:scopes:all
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: |
          A list of OAuth client update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields are patchable:
          * name
          * scope
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonalAccessTokenResponse'
          description: "Indicates the PATCH operation succeeded, and returns the PAT's\
            \ new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:my-personal-access-tokens:manage
      summary: Patch Personal Access Token
      tags:
      - Personal Access Tokens
  /public-identities-config:
    get:
      description: This gets details of public identity config.
      operationId: getPublicIdentityConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIdentityConfig'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get Public Identity Config
      tags:
      - Public Identities Config
    put:
      description: This updates the details of public identity config.
      operationId: updatePublicIdentityConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicIdentityConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicIdentityConfig'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update Public Identity Config
      tags:
      - Public Identities Config
  /notification-template-context:
    get:
      description: |-
        The notification service (Hermes) maintains metadata to construct the notification templates or supply any information during the event propagation.  The data-store where this information is retrieved is  called "Global Context" (a.k.a. notification template context). It defines a set of attributes
         that will be available per tenant (organization).

        Regarding authorization, the access token contains the tenant and will grant access to the one requested.
        Requires the following security scope:  idn:notification-templates:read
      operationId: getNotificationsTemplateContext
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NotificationTemplateContext'
                type: array
          description: Notification template context attributes for a specific tenant.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get Notification Template Context
      tags:
      - Notifications
  /notification-preferences/{key}:
    get:
      description: |-
        Returns the notification preferences for tenant.  Note that if the key doesn't exist, then a 404 will be returned.
        Request will require the following legacy roles:  ORG_ADMIN and API
      operationId: getNotificationPreference
      parameters:
      - description: The notification key.
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreferencesDto'
          description: Return preference for the given notification key.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
      summary: Get Notification Preferences for tenant.
      tags:
      - Notifications
    put:
      description: "In the notification world, a notification flows through these\
        \ salient stages - \n 1. Interest matching, \n 2. Preferences \n 3. Template\
        \ Rendering. \n\nThe default notification preferences make up a part of the\
        \ second stage, along with user preferences (which is a future goal). The\
        \ expectation is for  admins to be able to set default preferences for their\
        \ org, like opting in to or out of certain notifications, and configuring\
        \ future preferences as  we tack on more features. The key in the Dto is not\
        \ necessary but if it is provided and doesn't match the key in the URI, then\
        \ a 400 will be thrown. \nRequest will require the following legacy roles:\
        \  ORG_ADMIN and API"
      operationId: putNotificationPreference
      parameters:
      - description: The notification key.
        in: path
        name: key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferencesDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreferencesDto'
          description: "The preferences were successfully replaced, and an echo of\
            \ the new preferences are sent back to caller."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
      summary: Overwrite the preferences for the given notification key.
      tags:
      - Notifications
  /reassignment-configurations/types:
    get:
      description: Gets a collection of types which are available in the Reassignment
        Configuration UI.
      operationId: getReassignmentConfigTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConfigType'
                type: array
          description: List of Reassignment Configuration Types
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:reassignment-configuration:read
      summary: List Reassignment Config Types
      tags:
      - Work Reassignment
  /reassignment-configurations:
    get:
      description: Gets all Reassignment configuration for the current org.
      operationId: listReassignmentConfigurations
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConfigurationResponse'
                type: array
          description: A list of Reassignment Configurations for an org
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:reassignment-configuration:read
      summary: List Reassignment Configurations
      tags:
      - Work Reassignment
    post:
      description: Creates a new Reassignment Configuration for the specified identity.
      operationId: createReassignmentConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationItemRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationItemResponse'
          description: The newly created Reassignment Configuration object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:reassignment-configuration:create
      summary: Create a Reassignment Configuration
      tags:
      - Work Reassignment
  /reassignment-configurations/{identityId}:
    delete:
      description: Deletes all Reassignment Configuration for the specified identity
      operationId: deleteReassignmentConfiguration
      parameters:
      - description: unique identity id
        example: 2c91808781a71ddb0181b9090b5c504e
        in: path
        name: identityId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Reassignment Configuration deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:reassignment-configuration:delete
      summary: Delete Reassignment Configuration
      tags:
      - Work Reassignment
    get:
      description: Gets the Reassignment Configuration for an identity.
      operationId: getReassignmentConfiguration
      parameters:
      - description: unique identity id
        example: 2c91808781a71ddb0181b9090b5c504f
        in: path
        name: identityId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResponse'
          description: Reassignment Configuration for an identity
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:reassignment-configuration:read
      summary: Get Reassignment Configuration
      tags:
      - Work Reassignment
    put:
      description: Replaces existing Reassignment configuration for an identity with
        the newly provided configuration.
      operationId: putReassignmentConfig
      parameters:
      - description: unique identity id
        example: 2c91808781a71ddb0181b9090b5c504e
        in: path
        name: identityId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationItemRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationItemResponse'
          description: Reassignment Configuration updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:reassignment-configuration:update
      summary: Update Reassignment Configuration
      tags:
      - Work Reassignment
  /reassignment-configurations/{identityId}/evaluate/{configType}:
    get:
      description: "Evaluates the Reassignment Configuration for an `Identity` to\
        \ determine if work items for the specified type should be reassigned. If\
        \ a valid Reassignment Configuration is found for the identity & work type,\
        \ then a lookup is initiated which recursively fetches the Reassignment Configuration\
        \ for the next `TargetIdentity` until no more results are found or a max depth\
        \ of 5. That lookup trail is provided in the response and the final reassigned\
        \ identity in the lookup list is returned as the `reassignToId` property.\
        \ If no Reassignment Configuration is found for the specified identity & config\
        \ type then the requested Identity ID will be used as the `reassignToId` value\
        \ and the lookupTrail node will be empty."
      operationId: getEvaluateReassignmentConfiguration
      parameters:
      - description: unique identity id
        example: 2c91808781a71ddb0181b9090b5c504e
        in: path
        name: identityId
        required: true
        schema:
          type: string
      - description: Reassignment work type
        example: accessRequests
        in: path
        name: configType
        required: true
        schema:
          $ref: '#/components/schemas/ConfigTypeEnum'
      - description: "Exclusion filters that disable parts of the reassignment evaluation.\
          \ Possible values are listed below: - `SELF_REVIEW_DELEGATION`: This will\
          \ exclude delegations of self-review reassignments"
        example: SELF_REVIEW_DELEGATION
        in: query
        name: exclusionFilters
        required: false
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              examples:
                empty:
                  $ref: '#/components/examples/evaluateEmpty'
                longTrail:
                  $ref: '#/components/examples/evaluateLong'
                selfReview:
                  $ref: '#/components/examples/evaluateSelfReview'
              schema:
                items:
                  $ref: '#/components/schemas/EvaluateResponse'
                type: array
          description: Evaluated Reassignment Configuration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:reassignment-configuration:evaluate
      summary: Evaluate Reassignment Configuration
      tags:
      - Work Reassignment
  /reassignment-configurations/tenant-config:
    get:
      description: Gets the global Reassignment Configuration settings for the requestor's
        tenant.
      operationId: getTenantConfigConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfigurationResponse'
          description: Tenant-wide Reassignment Configuration settings
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:reassignment-tenant-configuration:read
      summary: Get Tenant-wide Reassignment Configuration settings
      tags:
      - Work Reassignment
    put:
      description: Replaces existing Tenant-wide Reassignment Configuration settings
        with the newly provided settings.
      operationId: putTenantConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantConfigurationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfigurationResponse'
          description: Tenant-wide Reassignment Configuration settings
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:reassignment-tenant-configuration:update
      summary: Update Tenant-wide Reassignment Configuration settings
      tags:
      - Work Reassignment
  /recommendations/request:
    post:
      description: The getRecommendations API returns recommendations based on the
        requested object. The recommendations are invoked by IdentityIQ and IdentityNow
        plug-ins that retrieve recommendations based on the performed calculations.
      operationId: getRecommendations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecommendationRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationResponseDto'
          description: The recommendations for a customer
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth: []
      summary: Returns a Recommendation Based on Object
      tags:
      - IAI Recommendations
  /recommendations/config:
    get:
      description: Retrieves configuration attributes used by certification recommendations.
      operationId: getRecommendationsConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationConfigDto'
          description: Cert recommendation configuration attributes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth: []
      summary: Get certification recommendation config values
      tags:
      - IAI Recommendations
    put:
      description: Updates configuration attributes used by certification recommendations.
      operationId: updateRecommendationsConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecommendationConfigDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationConfigDto'
          description: Cert recommendation configuration attributes after update
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth: []
      summary: Update certification recommendation config values
      tags:
      - IAI Recommendations
  /requestable-objects:
    get:
      description: |-
        This endpoint returns a list of acccess items that that can be requested through the Access Request endpoints. Access items are marked with AVAILABLE, PENDING or ASSIGNED with respect to the identity provided using *identity-id* query param.
        Any authenticated token can call this endpoint to see their requestable access items. A token with ORG_ADMIN authority is required to call this endpoint to return a list of all of the requestable access items for the org or for another identity.
      operationId: listRequestableObjects
      parameters:
      - description: |-
          If present, the value returns only requestable objects for the specified identity.
           * Admin users can call this with any identity ID value.
           * Non-admin users can only specify *me* or pass their own identity ID value.
           * If absent, returns a list of all requestable objects for the tenant. Only admin users can make such a call. In this case, the available, pending, assigned accesses will not be annotated in the result.
        example: e7eab60924f64aa284175b9fa3309599
        in: query
        name: identity-id
        required: false
        schema:
          type: string
      - description: "Filters the results to the specified type/types, where each\
          \ type is one of ROLE or ACCESS_PROFILE. If absent, all types are returned.\
          \ Support for additional types may be added in the future without notice."
        example: "ROLE,ACCESS_PROFILE"
        explode: false
        in: query
        name: types
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RequestableObjectType'
          type: array
      - description: "It allows searching requestable access items with a partial\
          \ match on the name or description. If term is provided, then the *filter*\
          \ query parameter will be ignored."
        example: Finance Role
        in: query
        name: term
        required: false
        schema:
          type: string
      - description: "Filters the result to the specified status/statuses, where each\
          \ status is one of AVAILABLE, ASSIGNED, or PENDING. It is an error to specify\
          \ this parameter without also specifying an *identity-id* parameter. Additional\
          \ statuses may be added in the future without notice."
        example:
        - ASSIGNED
        - PENDING
        explode: false
        in: query
        name: statuses
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RequestableObjectRequestStatus'
          type: array
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, in, sw*
        example: name sw "bob"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name**
        example: name
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RequestableObject'
                type: array
          description: List of requestable objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Requestable Objects List
      tags:
      - Requestable Objects
  /role-insights/requests:
    post:
      deprecated: true
      description: Submits a create role insights request to the role insights application.
        At this time there are no parameters. All business roles will be processed
        for the customer.
      operationId: createRoleInsightRequests
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleInsightsResponse'
          description: Submitted a role insights generation request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Generate insights for roles
      tags:
      - Role Insights
  /role-insights/requests/{id}:
    get:
      deprecated: true
      description: 'This endpoint returns details of a prior role insights request. '
      operationId: getRoleInsightsRequests
      parameters:
      - description: The role insights request id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleInsightsResponse'
          description: Succeeded. Returns details of an earlier role insights request.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Returns metadata from prior request.
      tags:
      - Role Insights
  /role-insights/summary:
    get:
      description: This method returns high level summary information for role insights
        for a customer.
      operationId: getRoleInsightsSummary
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleInsightsSummary'
          description: Succeeded. Returns high level counts.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get role insights summary information
      tags:
      - Role Insights
  /role-insights:
    get:
      description: This method returns detailed role insights for each role.
      operationId: getRoleInsights
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **numberOfUpdates, identitiesWithAccess, totalNumberOfIdentities**
        example: numberOfUpdates
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **name**: *sw*

          **ownerName**: *sw*

          **description**: *sw*
        example: name sw "John"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleInsight'
                type: array
          description: Succeeded. Returns a list of roles with information about insights
            for each role.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get role insights
      tags:
      - Role Insights
  /role-insights/{insightId}:
    get:
      description: This endpoint gets role insights information for a role.
      operationId: getRoleInsight
      parameters:
      - description: The role insight id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: insightId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleInsight'
          description: Succeeded. Returns information about insights for a single
            role.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get a single role insight
      tags:
      - Role Insights
  /role-insights/{insightId}/entitlement-changes:
    get:
      description: This endpoint returns entitlement insights for a role.
      operationId: getRoleInsightsEntitlementsChanges
      parameters:
      - description: The role insight id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: insightId
        required: true
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **identitiesWithAccess, name**
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **name**: *sw*

          **description**: *sw*
        example: name sw "Admin"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleInsightsEntitlementChanges'
                type: array
          description: Succeeded. Returns a list of entitlements to be added for a
            role.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get entitlement insights for a role
      tags:
      - Role Insights
  /role-insights/{insightId}/entitlement-changes/download:
    get:
      description: This endpoint returns the entitlement insights for a role.
      operationId: downloadRoleInsightsEntitlementsChanges
      parameters:
      - description: The role insight id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: insightId
        required: true
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **identitiesWithAccess**

          The default sort is **identitiesWithAccess** in descending order.
        example: identitiesWithAccess
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **name**: *sw*

          **description**: *sw*
        example: name sw "r"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/csv:
              schema:
                type: string
          description: Succeeded. Returns a csv file containing a list of entitlements
            to be added for a role.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Download entitlement insights for a role
      tags:
      - Role Insights
  /role-insights/{insightId}/current-entitlements:
    get:
      description: This endpoint gets the entitlements for a role. The term "current"
        is to distinguish from the entitlement(s) an insight might recommend adding.
      operationId: getRoleInsightsCurrentEntitlements
      parameters:
      - description: The role insight id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: insightId
        required: true
        schema:
          type: string
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **name**: *sw*

          **description**: *sw*
        example: name sw "r"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleInsightsEntitlement'
                type: array
          description: Succeeded. Returns a list of current or pre-existing entitlements
            for a role.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get current entitlement for a role
      tags:
      - Role Insights
  /role-insights/{insightId}/entitlement-changes/{entitlementId}/identities:
    get:
      description: "Role insights suggests entitlements to be added for a role. This\
        \ endpoint returns a list of identities in the role, with or without the entitlements,\
        \ for a suggested entitlement so that the user can see which identities would\
        \ be affected if the suggested entitlement were to be added to the role."
      operationId: getEntitlementChangesIdentities
      parameters:
      - description: The role insight id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: insightId
        required: true
        schema:
          type: string
      - description: The entitlement id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: entitlementId
        required: true
        schema:
          type: string
      - description: Identity has this entitlement or not
        explode: true
        in: query
        name: hasEntitlement
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name**
        example: name
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **name**: *sw*
        example: name sw "Jan"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleInsightsIdentities'
                type: array
          description: Succeeded. Returns a list of identities with or without the
            entitlement.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get identities for a suggested entitlement (for a role)
      tags:
      - Role Insights
  /role-mining-sessions:
    get:
      description: Returns all role mining sessions that match the query parameters
      operationId: getRoleMiningSessions
      parameters:
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **saved**: *eq*

          **name**: *eq, sw*
        example: saved eq "true" and name sw "RM Session"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **createdBy, createdDate**
        example: "createdBy,createdDate"
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleMiningSessionDto'
                type: array
          description: Succeeded. Returns all role mining sessions that match the
            query parameters.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Retrieves all role mining sessions
      tags:
      - IAI Role Mining
    post:
      description: This submits a create role mining session request to the role mining
        application.
      operationId: createRoleMiningSessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMiningSessionDto'
        description: Role mining session parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMiningSessionResponse'
          description: Submitted a role mining session request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create a role mining session
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}:
    get:
      description: The method retrieves a role mining session.
      operationId: getRoleMiningSession
      parameters:
      - description: The role mining session id to be retrieved.
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMiningSessionResponse'
          description: Returns a role mining session
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get a role mining session
      tags:
      - IAI Role Mining
    patch:
      description: "The  method updates an existing role mining session using PATCH.\
        \ Supports op in {\"replace\"} and changes to pruneThreshold and/or minNumIdentitiesInPotentialRole.\
        \ The potential roles in this role mining session is then re-calculated."
      operationId: patchRoleMiningSession
      parameters:
      - description: The role mining session id to be patched
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /pruneThreshold
              value: "83"
            - op: replace
              path: /minNumIdentitiesInPotentialRole
              value: "10"
            - op: replace
              path: /saved
              value: "false"
            - op: replace
              path: /name
              value: RM Session - 07/10/22
            - op: add
              path: /name
              value: RM Session - 07/10/22
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: Replace pruneThreshold and/or minNumIdentitiesInPotentialRole
          in role mining session. Update saved status or saved name for a role mining
          session.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                type: object
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Patch a role mining session
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/status:
    get:
      description: This method returns a role mining session status for a customer.
      operationId: getRoleMiningSessionStatus
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMiningSessionStatus'
          description: Succeeded. Returns session status
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get role mining session status state
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/potential-role-summaries:
    get:
      description: This method returns the potential role summaries for a role mining
        session.
      operationId: getPotentialRoleSummaries
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **createdDate**
        example: createdDate
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **createdById**: *eq, sw, co*

          **createdByName**: *eq, sw, co*

          **description**: *sw, co*

          **endDate**: *le, lt*

          **freshness**: *eq, ge, gt, le, lt*

          **name**: *eq, sw, co*

          **quality**: *eq, ge, gt, le, lt*

          **startDate**: *ge, gt*

          **saved**: *eq*

          **type**: *eq*
        example: (createdByName co "int")and (createdById sw "2c9180907")and (type
          eq "COMMON")and ((name co "entt")or (saved eq true))
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleMiningPotentialRoleSummary'
                type: array
          description: Succeeded. Returns a list of potential role summaries for a
            role mining session.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Retrieves all potential role summaries
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}:
    get:
      description: This method returns a specific potential role for a role mining
        session.
      operationId: getPotentialRole
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: A potential role id in a role mining session
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMiningPotentialRole'
          description: Succeeded. Returns a list of potential roles for a role mining
            session.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Retrieves a specific potential role
      tags:
      - IAI Role Mining
    patch:
      description: |
        The method updates an existing potential role using.

        The following fields can be modified:

        * `description`

        * `name`

        * `saved`


        >**NOTE: All other fields cannot be modified.**
      operationId: patchPotentialRole
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: The potential role summary id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: remove
              path: /description
            - op: replace
              path: /description
              value: Acct I - Potential Role
            - op: remove
              path: /saved
            - op: replace
              path: /saved
              value: "false"
            - op: remove
              path: /name
            - op: replace
              path: /name
              value: Potential Role Accounting
            schema:
              items:
                $ref: '#/components/schemas/patchPotentialRole_request_inner'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: ../schemas/RoleMiningPotentialRole.yaml
                type: object
          description: Succeeded. Returns the potential role summary based on the
            potentialRoleId provided.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update a potential role
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/potential-role-summaries/{potentialRoleId}/applications:
    get:
      description: This method returns the applications of a potential role for a
        role mining session.
      operationId: getPotentialRoleApplications
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: A potential role id in a role mining session
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleMiningPotentialRoleApplication'
                type: array
          description: Succeeded. Returns a list of potential roles for a role mining
            session.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Retrieves the applications of a potential role for a role mining session
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/entitlement-popularities:
    get:
      description: This method returns entitlements for a potential role in a role
        mining session.
      operationId: getEntitlementsPotentialRole
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: A potential role id in a role mining session
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      - description: Boolean determining whether common access entitlements will be
          included or not
        explode: true
        in: query
        name: includeCommonAccess
        required: false
        schema:
          type: boolean
        style: form
      - description: "Sort results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)\n\
          \nSorting is supported for the following fields: **popularity**\n\nThe default\
          \ sort is **popularity** in descending order. "
        example: popularity
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **applicationName**: *sw*

          **entitlementRef.name**: *sw*
        example: applicationName sw "AD"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleMiningEntitlement'
                type: array
          description: Succeeded. Returns a list of entitlements for a potential role.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Retrieves entitlements for a potential role in a role mining session
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/entitlement-popularity-distribution:
    get:
      description: This method returns entitlement popularity distribution for a potential
        role in a role mining session.
      operationId: getEntitlementDistributionPotentialRole
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: A potential role id in a role mining session
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      - description: Boolean determining whether common access entitlements will be
          included or not
        explode: true
        in: query
        name: includeCommonAccess
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: integer
                type: object
          description: Succeeded. Returns a map containing entitlement popularity
            distribution for a potential role.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Retrieves entitlement popularity distribution for a potential role
        in a role mining session
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/edit-entitlements:
    post:
      description: This endpoint adds or removes entitlements from an exclusion list
        for a potential role.
      operationId: updateEntitlementsPotentialRole
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: A potential role id in a role mining session
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMiningPotentialRoleEditEntitlements'
        description: Role mining session parameters
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMiningPotentialRole'
          description: Adds or removes entitlements from a potential role's entitlement
            exclusion list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Edit entitlements for a potential role to exclude some entitlements
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/identities:
    get:
      description: This method returns identities for a potential role in a role mining
        session.
      operationId: getIdentitiesPotentialRole
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: A potential role id in a role mining session
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name**
        example: name
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **name**: *sw*
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleMiningIdentity'
                type: array
          description: Succeeded. Returns a list of identities for a potential role.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Retrieves identities for a potential role in a role mining session
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export:
    get:
      description: This endpoint downloads all the information for a potential role
        in a role mining session. Includes identities and entitlements in the potential
        role.
      operationId: exportRoleMiningPotentialRole
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: A potential role id in a role mining session
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: Succeeded. Returns a zip file containing csv files for identities
            and entitlements for the potential role.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Export (download) details for a potential role in a role mining session
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async:
    post:
      description: This endpoint uploads all the information for a potential role
        in a role mining session to S3 as a downloadable zip archive.  Includes identities
        and entitlements in the potential role.
      operationId: exportRoleMiningPotentialRoleAsync
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: A potential role id in a role mining session
        example: 278359a6-04b7-4669-9468-924cf580964a
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMiningPotentialRoleExportRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMiningPotentialRoleExportResponse'
          description: Job Submitted. Returns a reportId that can be used to download
            the zip once complete
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Asynchronously export details for a potential role in a role mining
        session and upload to S3
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async/{exportId}:
    get:
      description: This endpoint retrieves information about the current status of
        a potential role export.
      operationId: exportRoleMiningPotentialRoleStatus
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          format: uuid
          type: string
      - description: A potential role id in a role mining session
        example: 278359a6-04b7-4669-9468-924cf580964a
        in: path
        name: potentialRoleId
        required: true
        schema:
          format: uuid
          type: string
      - description: The id of a previously run export job for this potential role
        example: 4940ffd4-836f-48a3-b2b0-6d498c3fdf40
        in: path
        name: exportId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMiningPotentialRoleExportResponse'
          description: Success. Returns the current status of this export
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Retrieve status of a potential role export job
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/export-async/{exportId}/download:
    get:
      description: This endpoint downloads a completed export of information for a
        potential role in a role mining session.
      operationId: downloadRoleMiningPotentialRoleZip
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          format: uuid
          type: string
      - description: A potential role id in a role mining session
        example: 278359a6-04b7-4669-9468-924cf580964a
        in: path
        name: potentialRoleId
        required: true
        schema:
          format: uuid
          type: string
      - description: The id of a previously run export job for this potential role
        example: 4940ffd4-836f-48a3-b2b0-6d498c3fdf40
        in: path
        name: exportId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: Succeeded. Returns a zip file containing csv files for identities
            and entitlements for the potential role.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Export (download) details for a potential role in a role mining session
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/provision:
    post:
      description: This method starts a job to provision a potential role
      operationId: createPotentialRoleProvisionRequest
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: A potential role id in a role mining session
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      - description: Minimum popularity required for an entitlement to be included
          in the provisioned role.
        explode: true
        in: query
        name: min-entitlement-popularity
        required: false
        schema:
          default: 0
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Boolean determining whether common access entitlements will be
          included in the provisioned role.
        explode: true
        in: query
        name: include-common-access
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleMiningPotentialRoleProvisionRequest'
        description: Required information to create a new role
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMiningPotentialRoleSummary'
          description: Accepted. Returns a potential role summary including the status
            of the provison request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create request to provision a potential role into an actual role.
      tags:
      - IAI Role Mining
  /role-mining-sessions/{sessionId}/potential-roles/{potentialRoleId}/excluded-entitlements:
    get:
      description: This method returns excluded entitlements for a potential role
        in a role mining session.
      operationId: getExcludedEntitlementsPotentialRole
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: A potential role id in a role mining session
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **popularity**
        example: populariity
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **applicationName**: *sw*

          **entitlementRef.name**: *sw*
        example: applicationName sw "AD"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleMiningEntitlement'
                type: array
          description: Succeeded. Returns a list of excluded entitlements for a potential
            roles.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Retrieves excluded entitlements for a potential role in a role mining
        session
      tags:
      - IAI Role Mining
  /role-mining-potential-roles:
    get:
      description: Returns all potential role summaries that match the query parameters
      operationId: getAllPotentialRoleSummaries
      parameters:
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **createdDate, identityCount, entitlementCount, freshness, quality**
        example: createdDate
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **createdById**: *eq, sw, co*

          **createdByName**: *eq, sw, co*

          **description**: *sw, co*

          **endDate**: *le, lt*

          **freshness**: *eq, ge, gt, le, lt*

          **name**: *eq, sw, co, ge, gt, le, lt*

          **quality**: *eq, ge, gt, le, lt*

          **startDate**: *ge, gt*

          **saved**: *eq*

          **type**: *eq, ge, gt, le, lt*

          **scopingMethod**: *eq*

          **sessionState**: *eq*

          **identityAttribute**: *co*
        example: (createdByName co "int") and (createdById sw "2c9180907") and (type
          eq "COMMON") and ((name co "entt") or (saved eq true))
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleMiningPotentialRoleSummary'
                type: array
          description: Succeeded. Returns all potential role summaries that match
            the query parameters.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth: []
      summary: Retrieves all potential role summaries
      tags:
      - IAI Role Mining
  /role-mining-potential-roles/{potentialRoleId}:
    get:
      description: This method returns a specific potential role.
      operationId: getRoleMiningPotentialRole
      parameters:
      - description: A potential role id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMiningPotentialRole'
          description: Succeeded. Returns a list of potential roles for a role mining
            session.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth: []
      summary: Retrieves a specific potential role
      tags:
      - IAI Role Mining
    patch:
      description: |
        The method updates an existing potential role using.

        The following fields can be modified:

        * `description`

        * `name`

        * `saved`


        >**NOTE: All other fields cannot be modified.**
      operationId: patchPotentialRole
      parameters:
      - description: The role mining session id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: The potential role summary id
        example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: remove
              path: /description
            - op: replace
              path: /description
              value: Acct I - Potential Role
            - op: remove
              path: /saved
            - op: replace
              path: /saved
              value: "false"
            - op: remove
              path: /name
            - op: replace
              path: /name
              value: Potential Role Accounting
            schema:
              items:
                $ref: '#/components/schemas/patchPotentialRole_request_inner'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: ../schemas/RoleMiningPotentialRole.yaml
                type: object
          description: Succeeded. Returns the potential role summary based on the
            potentialRoleId provided.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth: []
      summary: Update a potential role
      tags:
      - IAI Role Mining
  /role-mining-potential-roles/saved:
    get:
      description: This method returns all saved potential roles (draft roles).
      operationId: getSavedPotentialRoles
      parameters:
      - description: "Sort results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters/)\
          \ Sorting is supported for the following fields: **modified**"
        example: modified
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
        style: form
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleMiningSessionDraftRoleDto'
                type: array
          description: Succeeded. Returns a list of draft roles for a role mining
            session.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth: []
      summary: Retrieves all saved potential roles
      tags:
      - IAI Role Mining
  /role-mining-potential-roles/{potentialRoleId}/sources/{sourceId}/identityUsage:
    get:
      description: This method returns source usageCount (as number of days in the
        last 90 days) for each identity in a potential role.
      operationId: getPotentialRoleSourceIdentityUsage
      parameters:
      - description: A potential role id
        example: e0cc5d7d-bf7f-4f81-b2af-8885b09d9923
        in: path
        name: potentialRoleId
        required: true
        schema:
          type: string
      - description: A source id
        example: 2c9180877620c1460176267f336a106f
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: "Sort results using the standard syntax described in [V3 API\
          \ Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters/)\
          \ Sorting is supported for the following fields: **displayName, email, usageCount**"
        example: -usageCount
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
        style: form
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleMiningPotentialRoleSourceUsage'
                type: array
          description: Succeeded. Returns a list of source usage for the identities
            in a potential role.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth: []
      summary: Retrieves potential role source usage
      tags:
      - IAI Role Mining
  /roles:
    get:
      description: |-
        This API returns a list of Roles.

        A token with API, ORG_ADMIN, ROLE_ADMIN, or ROLE_SUBADMIN authority is required to call this API.
      operationId: listRoles
      parameters:
      - description: "If provided, filters the returned list according to what is\
          \ visible to the indicated ROLE_SUBADMIN Identity. The value of the parameter\
          \ is either an Identity ID, or the special value **me**, which is shorthand\
          \ for the calling Identity's ID. A 400 Bad Request error is returned if\
          \ the **for-subadmin** parameter is specified for an Identity that is not\
          \ a subadmin."
        example: 5168015d32f890ca15812c9180835d2e
        in: query
        name: for-subadmin
        required: false
        schema:
          type: string
      - description: |-
          Note that for this API the maximum value for limit is 50.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 50
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 50
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq, sw*

          **created**: *gt, lt, ge, le*

          **modified**: *gt, lt, ge, le*

          **owner.id**: *eq, in*

          **requestable**: *eq*
        example: requestable eq false
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, created, modified**
        example: "name,-modified"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      - description: |-
          If present and not empty, additionally filters Roles to those which are assigned to the Segment(s) with the specified IDs.

          If segmentation is currently unavailable, specifying this parameter results in an error.
        example: "0b5c9f25-83c6-4762-9073-e38f7bb2ae26,2e8d8180-24bc-4d21-91c6-7affdb473b0d"
        in: query
        name: for-segment-ids
        required: false
        schema:
          format: comma-separated
          type: string
      - description: "Whether or not the response list should contain unsegmented\
          \ Roles. If *for-segment-ids* is absent or empty, specifying *include-unsegmented*\
          \ as false results in an error."
        example: false
        in: query
        name: include-unsegmented
        required: false
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: List of Roles
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:role-unchecked:read
        - idn:role-unchecked:manage
        - idn:role-checked:manage
        - idn:role-checked:read
      summary: List Roles
      tags:
      - Roles
    post:
      description: "This API creates a role.\nYou must have a token with API, ORG_ADMIN,\
        \ ROLE_ADMIN, or ROLE_SUBADMIN authority to call this API. \nIn addition,\
        \ a ROLE_SUBADMIN may not create a role including an access profile if that\
        \ access profile is associated with a source the ROLE_SUBADMIN is not associated\
        \ with themselves. \nThe maximum supported length for the description field\
        \ is 2000 characters. Longer descriptions will be preserved for existing roles.\
        \ However, any new roles as well as any updates to existing descriptions will\
        \ be limited to 2000 characters."
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Role created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:role-unchecked:manage
        - idn:role-checked:manage
      summary: Create a Role
      tags:
      - Roles
  /roles/{id}:
    delete:
      description: |-
        This API deletes a Role by its ID.
        A token with API, ORG_ADMIN, ROLE_ADMIN, or ROLE_SUBADMIN authority is required to call this API. In addition, a token with ROLE_SUBADMIN authority may only call this API if all Access Profiles included in the Role are associated to Sources with management workgroups of which the ROLE_SUBADMIN is a member.
      operationId: deleteRole
      parameters:
      - description: ID of the Role
        example: 2c91808a7813090a017814121e121518
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:role-unchecked:manage
        - idn:role-checked:manage
      summary: Delete a Role
      tags:
      - Roles
    get:
      description: |-
        This API returns a Role by its ID.

        A token with API, ORG_ADMIN, ROLE_ADMIN, or ROLE_SUBADMIN authority is required to call this API. In addition, a token with ROLE_SUBADMIN authority may only call this API if all Access Profiles included in the Role are associated to Sources with management workgroups of which the ROLE_SUBADMIN is a member.
      operationId: getRole
      parameters:
      - description: ID of the Role
        example: 2c91808a7813090a017814121e121518
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: List of all Roles
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:role-unchecked:read
        - idn:role-unchecked:manage
        - idn:role-checked:manage
        - idn:role-checked:read
      summary: Get a Role
      tags:
      - Roles
    patch:
      description: |-
        This API updates an existing Role using [JSON Patch](https://tools.ietf.org/html/rfc6902) syntax.

        The following fields are patchable: **name**, **description**, **enabled**, **owner**, **accessProfiles**, **membership**, **requestable**, **accessRequestConfig**, **revokeRequestConfig**, **segments**
        A token with API, ORG_ADMIN, ROLE_ADMIN, or ROLE_SUBADMIN authority is required to call this API. In addition, a token with ROLE_SUBADMIN authority may only call this API if all Access Profiles included in the Role are associated to Sources with management workgroups of which the ROLE_SUBADMIN is a member.
        The maximum supported length for the description field is 2000 characters. Longer descriptions will be preserved for existing roles, however, any new roles as well as any updates to existing descriptions will be limited to 2000 characters.
      operationId: patchRole
      parameters:
      - description: ID of the Role to patch
        in: path
        name: id
        required: true
        schema:
          example: 2c91808a7813090a017814121e121518
          type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Make a Role Requestable and Enable it in One Call:
                description: This example shows how multiple fields may be updated
                  with a single patch call.
                value:
                - op: replace
                  path: /requestable
                  value: true
                - op: replace
                  path: /enabled
                  value: true
              Assign a Role to a Segment:
                description: This example illustrates the use of patch to assign a
                  Role to a Segment by adding the Segment's ID to the Role's segments
                  array.
                value:
                - op: add
                  path: /segments/-
                  value: f7b1b8a3-5fed-4fd4-ad29-82014e137e19
              Set the Membership Selection Criteria to a List of Identities:
                description: "This example shows how to define a Role's membershp\
                  \ by providing a list of Identities, referenced by their IDs."
                value:
                - op: replace
                  path: /membership
                  value:
                    type: IDENTITY_LIST
                    identities:
                    - id: 2c91808973fe906c0174262092014ed9
                    - id: 2c918086262092014ed94fb8a47612f3
              Set the Membership Selection Criteria to a Standard Expression:
                description: "This example shows how to define a Role's membership\
                  \ using STANDARD criteria. In this case, the Role will be granted\
                  \ to all Identities which have the *Engineering* attribute from\
                  \ the indicated Source."
                value:
                - op: replace
                  path: /membership
                  value:
                    type: STANDARD
                    criteria:
                      operation: OR
                      children:
                      - operation: EQUALS
                        key:
                          type: ENTITLEMENT
                          property: attribute.memberOf
                          sourceId: 2c9180887701fb2014213e122092014e
                        stringValue: Engineering
              Add a New Clause as the Child of an Existing Standard Expression:
                description: This example shows how to add a child clause to an existing
                  STANDARD criteria expression.
                value:
                - op: add
                  path: /membership/criteria/children/-
                  value:
                    operation: ENDS_WITH
                    key:
                      type: IDENTITY
                      property: attribute.email
                    stringValue: '@identitynow.com'
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Responds with the Role as updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:role-unchecked:manage
        - idn:role-checked:manage
      summary: Patch a specified Role
      tags:
      - Roles
  /roles/bulk-delete:
    post:
      description: |-
        This API initiates a bulk deletion of one or more Roles.

        A token with API, ORG_ADMIN, ROLE_ADMIN, or ROLE_SUBADMIN authority is required to call this API. In addition, a token with ROLE_SUBADMIN authority may only call this API if all Roles included in the request are associated to Sources with management workgroups of which the ROLE_SUBADMIN is a member.
      operationId: bulkDeleteRoles
      requestBody:
        content:
          application/json:
            example:
              roleIds:
              - 2c91808876438bb2017668b91919ecca
              - 2c91808876438ba801766e129f151816
            schema:
              $ref: '#/components/schemas/RoleBulkDeleteRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                type: TASK_RESULT
                id: 464ae7bf791e49fdb74606a2e4a89635
                name: null
              schema:
                $ref: '#/components/schemas/TaskResultDto'
          description: Returns an object with the id of the task performing the delete
            operation.
        "400":
          content:
            application/json:
              examples:
                "400.1 Bad Request Content":
                  description: Response for bad request content
                  value:
                    detailCode: 400.1 Bad Request Content
                    trackingId: 1ea1adcb84da4dcb890145e05745774e
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The request was syntactically correct but its content
                        is semantically invalid.
                "400.1 Role ids limit violation":
                  description: Role ids limit violation response
                  value:
                    detailCode: 400.1 Bad Request Content
                    trackingId: 77aa89ac6f0e422dbc588866abc22be9
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: roleIds count exceeded max limit of 50 for bulk-delete.
                "400.1.404 Referenced object not found":
                  description: Referenced object not found response
                  value:
                    detailCode: 400.1.404 Referenced object not found
                    trackingId: 77aa89ac6f0e422dbc588866abc22be9
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: "Referenced roleIds [\"2c91808876438bb2017668b91919ecca\"\
                        ] was not found."
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:role-unchecked:manage
        - idn:role-checked:manage
      summary: Delete Role(s)
      tags:
      - Roles
  /roles/{id}/assigned-identities:
    get:
      operationId: getRoleAssignedIdentities
      parameters:
      - description: ID of the Role for which the assigned Identities are to be listed
        example: 2c91808a7813090a017814121e121518
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **aliasName**: *eq, sw*

          **email**: *eq, sw*

          **name**: *eq, sw, co*
        example: name sw Joe
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, name, aliasName, email**
        example: "aliasName,name"
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleIdentity'
                type: array
          description: List of Identities assigned the Role
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:role-unchecked:read
        - idn:role-unchecked:manage
        - idn:role-checked:manage
        - idn:role-checked:read
      summary: Identities assigned a Role
      tags:
      - Roles
  /segments:
    get:
      description: |-
        This API returns a list of all segments.
        A token with ORG_ADMIN or API authority is required to call this API.
      operationId: listSegments
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Segment'
                type: array
          description: List of all segments
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List Segments
      tags:
      - Segments
    post:
      description: "This API creates a segment. \n>**Note:** Segment definitions may\
        \ take time to propagate to all identities.\nA token with ORG_ADMIN or API\
        \ authority is required to call this API."
      operationId: createSegment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Segment'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: Segment created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create Segment
      tags:
      - Segments
  /segments/{id}:
    delete:
      description: "This API deletes the segment specified by the given ID.\n>**Note:**\
        \ Segment deletion may take some time to go into effect. \nA token with ORG_ADMIN\
        \ or API authority is required to call this API."
      operationId: deleteSegment
      parameters:
      - description: The segment ID to delete.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete Segment by ID
      tags:
      - Segments
    get:
      description: |-
        This API returns the segment specified by the given ID.
        A token with ORG_ADMIN or API authority is required to call this API.
      operationId: getSegment
      parameters:
      - description: The segment ID to retrieve.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: Segment
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get Segment by ID
      tags:
      - Segments
    patch:
      description: |-
        Use this API to update segment fields by using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.
        >**Note:** Changes to a segment may take some time to propagate to all identities.
        A token with ORG_ADMIN or API authority is required to call this API.
      operationId: patchSegment
      parameters:
      - description: The segment ID to modify.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Set Visibility Criteria:
                description: Set the visibility criteria
                value:
                - op: replace
                  path: /visibilityCriteria
                  value:
                    expression:
                      operator: AND
                      children:
                      - operator: EQUALS
                        attribute: location
                        value:
                          type: STRING
                          value: Philadelphia
                      - operator: EQUALS
                        attribute: department
                        value:
                          type: STRING
                          value: HR
            schema:
              items:
                type: object
              type: array
        description: |
          A list of segment update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields are patchable:
          * name
          * description
          * owner
          * visibilityCriteria
          * active
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Segment'
          description: "Indicates the PATCH operation succeeded, and returns the segment's\
            \ new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update Segment
      tags:
      - Segments
  /send-test-notification:
    post:
      description: Send a Test Notification
      operationId: sendTestNotification
      requestBody:
        content:
          application/json:
            example:
              key: cloud_manual_work_item_summary
              medium: EMAIL
              context:
                numberOfPendingTasks: "4"
                ownerId: 201327fda1c44704ac01181e963d463c
            schema:
              $ref: '#/components/schemas/SendTestNotificationRequestDto'
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Send Test Notification
      tags:
      - Notifications
  /service-desk-integrations:
    get:
      description: Get a list of ServiceDeskIntegrationDto for existing Service Desk
        Integrations.  A token with Org Admin or Service Desk Admin authority is required
        to access this endpoint.
      operationId: getServiceDeskIntegrationList
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name**
        example: name
        explode: true
        in: query
        name: sorters
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **name**: *eq*

          **type**: *eq, in*

          **cluster**: *eq, in*
        example: id eq 2c91808b6ef1d43e016efba0ce470904
        explode: true
        in: query
        name: filters
        required: false
        schema:
          format: comma-separated
          type: string
        style: form
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceDeskIntegrationDto'
                type: array
          description: List of ServiceDeskIntegrationDto
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:service-desk-admin:read
        - idn:service-desk-integration:read
      summary: List existing Service Desk Integrations
      tags:
      - Service Desk Integration
    post:
      description: Create a new Service Desk Integrations.  A token with Org Admin
        or Service Desk Admin authority is required to access this endpoint.
      operationId: createServiceDeskIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDeskIntegrationDto'
        description: The specifics of a new integration to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationDto'
          description: details of the created integration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:service-desk-admin:manage
        - idn:service-desk-integration:manage
      summary: Create new Service Desk integration
      tags:
      - Service Desk Integration
  /service-desk-integrations/{id}:
    delete:
      description: Delete an existing Service Desk integration by ID.  A token with
        Org Admin or Service Desk Admin authority is required to access this endpoint.
      operationId: deleteServiceDeskIntegration
      parameters:
      - description: ID of Service Desk integration to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
      responses:
        "204":
          description: Service Desk integration with the given ID successfully deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:service-desk-admin:manage
        - idn:service-desk-integration:manage
      summary: Delete a Service Desk integration
      tags:
      - Service Desk Integration
    get:
      description: Get an existing Service Desk integration by ID.  A token with Org
        Admin or Service Desk Admin authority is required to access this endpoint.
      operationId: getServiceDeskIntegration
      parameters:
      - description: ID of the Service Desk integration to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationDto'
          description: ServiceDeskIntegrationDto with the given ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:service-desk-admin:read
        - idn:service-desk-integration:read
      summary: Get a Service Desk integration
      tags:
      - Service Desk Integration
    patch:
      description: Update an existing ServiceDeskIntegration by ID with a PATCH request.
      operationId: patchServiceDeskIntegration
      parameters:
      - description: ID of the Service Desk integration to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            example: |-
              [
                {
                    "op": "replace",
                    "path": "/ownerRef",
                    "value": {
                        "id": "2c9180867d05b227017d09921a205b4d",
                        "type": "IDENTITY",
                        "name": "Angelo2 tester"
                    }
                }
              ]
            schema:
              $ref: '#/components/schemas/patchServiceDeskIntegration_request'
        description: |
          A list of SDIM update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          Only `replace` operations are accepted by this endpoint.

          A 403 Forbidden Error indicates that you attempted to PATCH a operation that is not allowed.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationDto'
          description: ServiceDeskIntegrationDto as updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:service-desk-admin:manage
        - idn:service-desk-integration:manage
      summary: Service Desk Integration Update PATCH
      tags:
      - Service Desk Integration
    put:
      description: Update an existing Service Desk integration by ID with updated
        value in JSON form as the request body.  A token with Org Admin or Service
        Desk Admin authority is required to access this endpoint.
      operationId: putServiceDeskIntegration
      parameters:
      - description: ID of the Service Desk integration to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDeskIntegrationDto'
        description: The specifics of the integration to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationDto'
          description: ServiceDeskIntegrationDto as updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:service-desk-admin:manage
        - idn:service-desk-integration:manage
      summary: Update a Service Desk integration
      tags:
      - Service Desk Integration
  /service-desk-integrations/types:
    get:
      description: This API endpoint returns the current list of supported Service
        Desk integration types.  A token with Org Admin or Service Desk Admin authority
        is required to access this endpoint.
      operationId: getServiceDeskIntegrationTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceDeskIntegrationTemplateType'
                type: array
          description: Responds with an array of the currently supported Service Desk
            integration types.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:service-desk-admin:read
        - idn:service-desk-admin:manage
        - idn:service-desk-integration:read
        - idn:service-desk-integration:manage
      summary: Service Desk Integration Types List.
      tags:
      - Service Desk Integration
  /service-desk-integrations/templates/{scriptName}:
    get:
      description: This API endpoint returns an existing Service Desk integration
        template by scriptName.  A token with Org Admin or Service Desk Admin authority
        is required to access this endpoint.
      operationId: getServiceDeskIntegrationTemplate
      parameters:
      - description: The scriptName value of the Service Desk integration template
          to get
        explode: false
        in: path
        name: scriptName
        required: true
        schema:
          example: aScriptName
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDeskIntegrationTemplateDto'
          description: Responds with the ServiceDeskIntegrationTemplateDto with the
            specified scriptName.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:service-desk-admin:read
        - idn:service-desk-integration:read
      summary: Service Desk integration template by scriptName.
      tags:
      - Service Desk Integration
  /service-desk-integrations/status-check-configuration:
    get:
      description: Get the time check configuration of queued SDIM tickets.  A token
        with Org Admin or Service Desk Admin authority is required to access this
        endpoint.
      operationId: getStatusCheckDetails
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueuedCheckConfigDetails'
          description: QueuedCheckConfigDetails containing the configured values
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:service-desk-admin:read
        - idn:service-desk-admin:manage
        - idn:service-desk-integration:read
        - idn:service-desk-integration:manage
      summary: Get the time check configuration
      tags:
      - Service Desk Integration
    put:
      description: Update the time check configuration of queued SDIM tickets.  A
        token with Org Admin or Service Desk Admin authority is required to access
        this endpoint.
      operationId: updateStatusCheckDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueuedCheckConfigDetails'
        description: the modified time check configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueuedCheckConfigDetails'
          description: QueuedCheckConfigDetails as updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:service-desk-admin:manage
        - idn:service-desk-integration:manage
      summary: Update the time check configuration
      tags:
      - Service Desk Integration
  /sp-config/export:
    post:
      description: |-
        This post will export objects from the tenant to a JSON configuration file.
        For more information about the object types that currently support export functionality, refer to [SaaS Configuration](https://developer.sailpoint.com/idn/docs/saas-configuration/#supported-objects).
      operationId: exportSpConfig
      requestBody:
        content:
          application/json:
            examples:
              Export all objects available:
                description: Export all object types available in IDN.
                value:
                  description: Export all available objects
                  excludeTypes: []
                  includeTypes:
                  - ACCESS_PROFILE
                  - ACCESS_REQUEST_CONFIG
                  - ATTR_SYNC_SOURCE_CONFIG
                  - AUTH_ORG
                  - CAMPAIGN_FILTER
                  - FORM_DEFINITION
                  - GOVERNANCE_GROUP
                  - IDENTITY_OBJECT_CONFIG
                  - IDENTITY_PROFILE
                  - LIFECYCLE_STATE
                  - NOTIFICATION_TEMPLATE
                  - PASSWORD_POLICY
                  - PASSWORD_SYNC_GROUP
                  - PUBLIC_IDENTITIES_CONFIG
                  - ROLE
                  - RULE
                  - SEGMENT
                  - SERVICE_DESK_INTEGRATION
                  - SOD_POLICY
                  - SOURCE
                  - TAG
                  - TRANSFORM
                  - TRIGGER_SUBSCRIPTION
                  - WORKFLOW
                  objectOptions: {}
              Export sources by ID:
                description: Export only sources that match the IDs specified in the
                  export options.
                value:
                  description: Export sources by ID
                  excludeTypes: []
                  includeTypes:
                  - SOURCE
                  objectOptions:
                    SOURCE:
                      includedIds:
                      - be9e116d-08e1-49fc-ab7f-fa585e96c9e4
                      - be9p119e-90e1-49pk-ac9f-fa576e96c9e4
                      includedNames: []
              Export transforms by name:
                description: Export only transforms that match the names specified
                  in the export options.
                value:
                  description: Export transforms by name
                  excludeTypes: []
                  includeTypes:
                  - TRANSFORM
                  objectOptions:
                    TRANSFORM:
                      includedIds: []
                      includedNames:
                      - Remove Diacritical Marks
                      - Common - Location Lookup
              Export trigger subscriptions triggers and transforms with custom options:
                description: Export trigger subscriptions and transforms that match
                  the export options.
                value:
                  description: Export trigger subscriptions and transforms with custom
                    filter options
                  excludeTypes: []
                  includeTypes:
                  - TRANSFORM
                  - TRIGGER_SUBSCRIPTION
                  objectOptions:
                    TRANSFORM:
                      includedIds: []
                      includedNames:
                      - Remove Diacritical Marks
                      - Common - Location Lookup
                    TRIGGER_SUBSCRIPTION:
                      includedIds:
                      - be9e116d-08e1-49fc-ab7f-fa585e96c9e4
                      - be9p119e-90e1-49pk-ac9f-fa576e96c9e4
                      includedNames:
                      - "NGROK Test: fire and forget"
                      - Manager Certification
            schema:
              $ref: '#/components/schemas/ExportPayload'
        description: Export options control what will be included in the export.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpConfigExportJob'
          description: Export job accepted and queued for processing.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: |
            Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:config:read
        - sp:config:manage
      summary: Initiates configuration objects export job
      tags:
      - SP-Config
  /sp-config/export/{id}:
    get:
      description: |-
        This gets the status of the export job identified by the `id` parameter.
        The request will need one of the following security scopes:
        - sp:config:read - sp:config:manage
      operationId: getSpConfigExportStatus
      parameters:
      - description: The ID of the export job whose status will be returned.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                jobId: 1e824aa0-4c6e-4f14-95e9-e7dc5234aa51
                status: COMPLETE
                type: EXPORT
                message: null
                description: Export Job 1 Test
                expiration: 2021-05-20T15:04:24Z
                created: 2021-05-13T15:04:24.112Z
                modified: 2021-05-13T15:04:27.363Z
                completed: 2021-05-13T15:04:27.358Z
              schema:
                $ref: '#/components/schemas/SpConfigExportJobStatus'
          description: Export job status successfully returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:config:read
        - sp:config:manage
      summary: Get export job status
      tags:
      - SP-Config
  /sp-config/export/{id}/download:
    get:
      description: |-
        This endpoint gets the export file resulting from the export job with the requested `id` and downloads it to a file.
        The request will need one of the following security scopes:
        - sp:config:read - sp:config:manage
      operationId: getSpConfigExport
      parameters:
      - description: The ID of the export job whose results will be downloaded.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpConfigExportResults'
          description: Exported JSON objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Download export job result.
      tags:
      - SP-Config
  /sp-config/import:
    post:
      description: "This post will import objects from a JSON configuration file into\
        \ a tenant. By default, every import will first export all existing objects\
        \ supported by sp-config as a backup before the import is attempted. The backup\
        \ is provided so that the state of the configuration prior to the import is\
        \ available for inspection or restore if needed. The backup can be skipped\
        \ by setting \"excludeBackup\" to true in the import options. If a backup\
        \ is performed, the id of the backup will be provided in the ImportResult\
        \ as the \"exportJobId\". This can be downloaded  using the /sp-config/export/{exportJobId}/download\
        \ endpoint.\nYou cannot currently import from the Non-Employee Lifecycle Management\
        \ (NELM) source. You cannot use this endpoint to back up or store NELM data.\
        \ \nFor more information about the object types that currently support import\
        \ functionality, refer to [SaaS Configuration](https://developer.sailpoint.com/idn/docs/saas-configuration/#supported-objects).\n\
        The request will need the following security scope:\n- sp:config:manage"
      operationId: importSpConfig
      parameters:
      - description: "This option is intended to give the user information about how\
          \ an import operation would proceed, without having any effect on the target\
          \ tenant. If this parameter is \"true\", no objects will be imported. Instead,\
          \ the import process will pre-process the import file and attempt to resolve\
          \ references within imported objects. The import result file will contain\
          \ messages pertaining to how specific references were resolved, any errors\
          \ associated with the preprocessing, and messages indicating which objects\
          \ would be imported."
        example: "true"
        in: query
        name: preview
        required: false
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          multipart/form-data:
            example:
              data: config_export_0340b957-5caa-44f6-ada2-d3c4c5bd0b19.json
              options:
                excludeTypes: []
                includeTypes:
                - TRIGGER_SUBSCRIPTION
                objectOptions:
                  TRIGGER_SUBSCRIPTION:
                    includedIds:
                    - be9e116d-08e1-49fc-ab7f-fa585e96c9e4
                    includedNames:
                    - Lori Test 2
                defaultReferences:
                - type: TRIGGER_SUBSCRIPTION
                  id: be9e116d-08e1-49fc-ab7f-fa585e96c9e4
                  name: Test Trigger
                excludeBackup: false
            schema:
              $ref: '#/components/schemas/importSpConfig_request'
        description: "The form-data \"name\" attribute for the file content must be\
          \ \"data\".\n\n__Example__\n\n    data: \"config_export_0340b957-5caa-44f6-ada2-d3c4c5bd0b19.json\"\
          ,\n    options: {\n      \"excludeTypes\": [],\n      \"includeTypes\":\
          \ [\"TRIGGER_SUBSCRIPTION\"],\n      \"objectOptions\": {\n        \"TRIGGER_SUBSCRIPTION\"\
          : {\n          \"includedIds\": [ \"193446a1-c431-4326-8ba7-d6eebf922948\"\
          ],\n          \"includedNames\":[]\n        }\n      },\n      \"defaultReferences\"\
          : [\n        {\n          \"type\": \"TRIGGER_SUBSCRIPTION\",\n        \
          \  \"id\": \"be9e116d-08e1-49fc-ab7f-fa585e96c9e4\",\n          \"name\"\
          : \"Test Trigger\"\n        }\n      ],\n      \"excludeBackup\": false\n\
          \    }\n\n__Sample Import File__\n\n    {\n    \t\"version\": 1,\n    \t\
          \"timestamp\": \"2021-05-10T15:19:23.425041-05:00\",\n    \t\"tenant\":\
          \ \"sampleTenant\",\n    \t\"options\": {\n    \t\t\"excludeTypes\": [],\n\
          \    \t\t\"includeTypes\": [\"TRIGGER_SUBSCRIPTION\"],\n    \t\t\"objectOptions\"\
          : null\n    \t},\n    \t\"objects\": [{\n    \t\t\t\"version\": 1,\n   \
          \ \t\t\t\"self\": {\n    \t\t\t\t\"type\": \"TRIGGER_SUBSCRIPTION\",\n \
          \   \t\t\t\t\"name\": \"test trigger\",\n    \t\t\t\t\"id\": \"193446a1-c431-4326-8ba7-d6eebf922948\"\
          \n    \t\t\t},\n    \t\t\t\"object\": {\n    \t\t\t\t\"type\": \"HTTP\"\
          ,\n    \t\t\t\t\"enabled\": true,\n    \t\t\t\t\"httpConfig\": {\n    \t\
          \t\t\t\t\"url\": \"https://localhost\",\n    \t\t\t\t\t\"httpAuthenticationType\"\
          : \"NO_AUTH\",\n    \t\t\t\t\t\"basicAuthConfig\": null,\n    \t\t\t\t\t\
          \"bearerTokenAuthConfig\": null,\n    \t\t\t\t\t\"httpDispatchMode\": \"\
          SYNC\"\n    \t\t\t\t},\n    \t\t\t\t\"triggerName\": \"Access Request Submitted\"\
          ,\n    \t\t\t\t\"responseDeadline\": \"PT1H\",\n    \t\t\t\t\"name\": \"\
          test trigger\",\n    \t\t\t\t\"triggerId\": \"idn:access-request-pre-approval\"\
          \n    \t\t\t}\n    \t\t}\n    \t]\n    }\n"
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpConfigJob'
          description: Import job accepted and queued for processing.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: |
            Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Initiates configuration objects import job
      tags:
      - SP-Config
  /sp-config/import/{id}:
    get:
      description: |-
        This gets the status of the import job identified by the `id` parameter.
        For more information about the object types that currently support import functionality, refer to [SaaS Configuration](https://developer.sailpoint.com/idn/docs/saas-configuration/#supported-objects).
        The request will need the following security scope:
        - sp:config:manage
      operationId: getSpConfigImportStatus
      parameters:
      - description: The ID of the import job whose status will be returned.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                jobId: 4fb10503-1c49-4603-8f8d-886e1f6aa47b
                status: COMPLETE
                type: IMPORT
                message: Download import results for details.
                description: null
                expiration: 2021-05-20T16:42:39Z
                created: 2021-05-13T16:42:39.333Z
                modified: 2021-05-13T16:42:40.71Z
                completed: 2021-05-13T16:42:40.705Z
              schema:
                $ref: '#/components/schemas/SpConfigImportJobStatus'
          description: Import job status successfully returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:config:manage
      summary: Get import job status
      tags:
      - SP-Config
  /sp-config/import/{id}/download:
    get:
      description: |-
        This gets import file resulting from the import job with the requested id and downloads it to a file. The downloaded file will contain the results of the import operation, including any error, warning or informational messages associated with the import.
        The request will need the following security scope:
        - sp:config:manage
      operationId: getSpConfigImport
      parameters:
      - description: The ID of the import job whose results will be downloaded.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpConfigImportResults'
          description: "Import results JSON object, containing detailed results of\
            \ the import operation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Download import job result
      tags:
      - SP-Config
  /sp-config/config-objects:
    get:
      description: This gets the list of object configurations which are known to
        the tenant export/import service. Object configurations that contain "importUrl"
        and "exportUrl" are available for export/import.
      operationId: listSpConfigObjects
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SpConfigObject'
                type: array
          description: Object configurations returned successfully.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:config:read
        - sp:config:manage
      summary: Get config object details
      tags:
      - SP-Config
  /sources:
    get:
      description: |-
        This end-point lists all the sources in IdentityNow.

        A token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or ROLE_SUBADMIN authority is required to call this API.
      operationId: listSources
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*

          **name**: *co, eq, in, sw, ge, gt, ne, isnull*

          **type**: *eq, in, ge, gt, ne, isnull, sw*

          **owner.id**: *eq, in, ge, gt, le, lt, ne, isnull, sw*

          **features**: *ca, co*

          **created**: *eq*

          **modified**: *eq*

          **managementWorkgroup.id**: *eq, ge, gt, in, le, lt, ne, isnull, sw*

          **description**: *eq, sw*

          **authoritative**: *eq, ne, isnull*

          **healthy**: *isnull*

          **status**: *eq, in, ge, gt, le, lt, ne, isnull, sw*

          **connectionType**: *eq, ge, gt, in, le, lt, ne, isnull, sw*

          **connectorName**: *eq, ge, gt, in, ne, isnull, sw*
        example: name eq "Employees"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **type, created, modified, name, owner.name, healthy, status, id, description, owner.id, accountCorrelationConfig.id, accountCorrelationConfig.name, managerCorrelationRule.type, managerCorrelationRule.id, managerCorrelationRule.name, authoritative, managementWorkgroup.id, connectorName, connectionType**
        example: name
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      - description: |-
          Filter the returned list of sources for the identity specified by the parameter, which is the id of an identity with the role SOURCE_SUBADMIN. By convention, the value **me** indicates the identity id of the current user.
          Subadmins may only view Sources which they are able to administer; all other Sources will be filtered out when this parameter is set. If the current user is a SOURCE_SUBADMIN but fails to pass a valid value for this parameter, a 403 Forbidden is returned.
        example: name
        in: query
        name: for-subadmin
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Source'
                type: array
          description: List of Source objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sources:read
      summary: Lists all sources in IdentityNow.
      tags:
      - Sources
    post:
      description: |-
        This creates a specific source with a full source JSON representation. Any passwords are submitted as plain-text and encrypted upon receipt in IdentityNow.
        A token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: createSource
      parameters:
      - description: "If this parameter is `true`, it configures the source as a Delimited\
          \ File (CSV) source. Setting this to `true` will automatically set the `type`\
          \ of the source to `DelimitedFile`.  You must use this query parameter to\
          \ create a Delimited File source as you would in the UI.  If you don't set\
          \ this query parameter and you attempt to set the `type` attribute directly,\
          \ the request won't correctly generate the source.  "
        example: false
        in: query
        name: provisionAsCsv
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: "Created Source object. Any passwords will only show the the\
            \ encrypted cipher-text, as they are not decrypt-able in IdentityNow cloud-based\
            \ services, per IdentityNow security design."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sources:manage
      summary: Creates a source in IdentityNow.
      tags:
      - Sources
  /sources/{id}:
    delete:
      description: |-
        This end-point deletes a specific source in IdentityNow.
        A token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
        All of accounts on the source will be removed first, then the source will be deleted. Actual status of task execution can be retrieved via method GET `/task-status/{id}`
      operationId: delete
      parameters:
      - description: The Source ID
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              examples:
                deleteSource:
                  summary: Response returned when deleting a source
                  value:
                    type: TASK_RESULT
                    id: 2c91808779ecf55b0179f720942f181a
                    name: null
              schema:
                $ref: '#/components/schemas/delete_202_response'
          description: Accepted - Returned if the request was successfully accepted
            into the system.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sources:manage
      summary: Delete Source by ID
      tags:
      - Sources
    get:
      description: |-
        This end-point gets a specific source in IdentityNow.
        A token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: getSource
      parameters:
      - description: The Source ID
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: A Source object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sources:read
      summary: Get Source by ID
      tags:
      - Sources
    patch:
      description: |
        This API partially updates a source in IdentityNow, using a list of patch operations according to the
        [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

        Some fields are immutable and cannot be changed, such as:
        * id
        * type
        * authoritative
        * created
        * modified
        * connector
        * connectorClass
        * passwordPolicies

        Attempts to modify these fields will result in a 400 error.

        A token with ORG_ADMIN, SOURCE_ADMIN, SOURCE_SUBADMIN, or API authority is required to call this API.
      operationId: updateSource
      parameters:
      - description: The Source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Edit the source description:
                description: This example shows how to edit a source description.
                value:
                - op: replace
                  path: /description
                  value: new description
              Edit the source cluster:
                description: This example shows how to edit a source cluster by id.
                value:
                - op: replace
                  path: /cluster/id
                  value: 2c918087813a902001813f3f85736b45
              Edit source features:
                description: This example illustrates how you can update source supported
                  features
                value:
                - op: replace
                  path: /features
                  value:
                  - PASSWORD
                  - PROVISIONING
                  - ENABLE
                  - AUTHENTICATE
              Change a source description and cluster in One Call:
                description: This example shows how multiple fields may be updated
                  with a single patch call.
                value:
                - op: replace
                  path: /description
                  value: new description
                - op: replace
                  path: /cluster/id
                  value: 2c918087813a902001813f3f85736b45
              Add a filter string to the connector:
                description: "This example shows how you can add a filter to incoming\
                  \ accounts during the account aggregation process. In the example\
                  \ below, any account that does not have an \"m\" or \"d\" in the\
                  \ id will be aggregated."
                value:
                - op: add
                  path: /connectorAttributes/filterString
                  value: '!( id.contains( "m" ) ) || !( id.contains( "d" ) )'
              Update connector attribute for specific operation type:
                description: This example shows how you can update the 3rd object
                  in the connection parameters operationType. This will change it
                  from a standard group aggregation to a group aggregation on the
                  "test" entitlement type
                value:
                - op: replace
                  path: /connectorAttributes/connectionParameters/2/operationType
                  value: Group Aggregation-test
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: "A list of account update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902)\
          \ standard. Any password changes are submitted as plain-text and encrypted\
          \ upon receipt in IdentityNow."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: "Updated Source object. Any passwords will only show the the\
            \ encrypted cipher-text, as they are not decrypt-able in IdentityNow cloud-based\
            \ services, per IdentityNow security design."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sources:manage
      summary: Update Source (Partial)
      tags:
      - Sources
    put:
      description: |
        This API updates a source in IdentityNow, using a full object representation. In other words, the existing Source
        configuration is completely replaced.

        Some fields are immutable and cannot be changed, such as:

        * id
        * type
        * authoritative
        * connector
        * connectorClass
        * passwordPolicies

        Attempts to modify these fields will result in a 400 error.

        A token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: putSource
      parameters:
      - description: The Source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Source'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: "Updated Source object. Any passwords will only show the the\
            \ encrypted cipher-text, as they are not decrypt-able in IdentityNow cloud-based\
            \ services, per IdentityNow security design."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sources:manage
      summary: Update Source (Full)
      tags:
      - Sources
  /sources/{id}/attribute-sync-config:
    get:
      description: |-
        This API returns the existing attribute synchronization configuration for a source specified by the given ID. The response contains all attributes, regardless of whether they enabled or not.
        A token with ORG_ADMIN or HELPDESK authority is required to call this API.
      operationId: getSourceAttrSyncConfig
      parameters:
      - description: The source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttrSyncSourceConfig'
          description: Attribute synchronization configuration for a source
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:attr-sync-source-config:read
        - idn:attr-sync-source-config:manage
      summary: Attribute Sync Config
      tags:
      - Sources
    put:
      description: "Replaces the attribute synchronization configuration for the source\
        \ specified by the given ID with the configuration provided in the request\
        \ body. Only the \"enabled\" field of the values in the \"attributes\" array\
        \ is mutable. Attempting to change other attributes or add new values to the\
        \ \"attributes\" array will result in an error.\n    \nA token with ORG_ADMIN\
        \ authority is required to call this API."
      operationId: putSourceAttrSyncConfig
      parameters:
      - description: The source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttrSyncSourceConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttrSyncSourceConfig'
          description: Updated attribute synchronization configuration for a source
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:attr-sync-source-config:manage
      summary: Update Attribute Sync Config
      tags:
      - Sources
  /sources/{sourceId}/connector/check-connection:
    post:
      description: |-
        This endpoint validates that the configured credentials are valid and will properly authenticate with the source identified by the sourceId path parameter.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: testSourceConnection
      parameters:
      - description: The ID of the Source.
        example: cef3ee201db947c5912551015ba0c679
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: The result of checking connection to the source connector with
            response from it.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:source-connector:manage
      summary: Check connection for source connector.
      tags:
      - Sources
  /sources/{sourceId}/connector/peek-resource-objects:
    post:
      description: |-
        Retrieves a sample of data returned from account and group aggregation requests.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: peekResourceObjects
      parameters:
      - description: The ID of the Source
        example: cef3ee201db947c5912551015ba0c679
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceObjectsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceObjectsResponse'
          description: List of resource objects that was fetched from the source connector.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:source-connector:manage
      summary: Peek source connector's resource objects
      tags:
      - Sources
  /sources/{sourceId}/connector/ping-cluster:
    post:
      description: |-
        This endpoint validates that the cluster being used by the source is reachable from IdentityNow.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: pingCluster
      parameters:
      - description: The ID of the Source
        example: cef3ee201db947c5912551015ba0c679
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: The result of pinging connection with the source connector.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:source-connector:manage
      summary: Ping cluster for source connector
      tags:
      - Sources
  /sources/{sourceId}/connector/test-configuration:
    post:
      description: |-
        This endpoint performs a more detailed validation of the source's configuration that can take longer than the lighter weight credential validation performed by the checkConnection API.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: testSourceConfiguration
      parameters:
      - description: The ID of the Source
        example: cef3ee201db947c5912551015ba0c679
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: The result of testing source connector configuration with response
            from it.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:source-connector:manage
      summary: Test configuration for source connector
      tags:
      - Sources
  /sources/{id}/connectors/source-config:
    get:
      description: |-
        Looks up and returns the source config for the requested source id after populating the source config values and applying language translations.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: getSourceConfig
      parameters:
      - description: The Source id
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The locale to apply to the config. If no viable locale is given,\
          \ it will default to \"en\""
        in: query
        name: locale
        schema:
          enum:
          - de
          - "false"
          - fi
          - sv
          - ru
          - pt
          - ko
          - zh-TW
          - en
          - it
          - fr
          - zh-CN
          - hu
          - es
          - cs
          - ja
          - pl
          - da
          - nl
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorDetail'
          description: A Connector Detail object
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Gets source config with language translations
      tags:
      - Sources
  /sources/{sourceId}/native-change-detection-config:
    delete:
      description: |-
        Deletes the native change detection configuration for the source specified by the given ID.
        A token with API, or ORG_ADMIN authority is required to call this API.
      operationId: deleteNativeChangeDetectionConfig
      parameters:
      - description: The source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sources:update
      summary: Delete Native Change Detection Configuration
      tags:
      - Sources
    get:
      description: |-
        This API returns the existing native change detection configuration for a source specified by the given ID.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: getNativeChangeDetectionConfig
      parameters:
      - description: The source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NativeChangeDetectionConfig'
          description: Native change detection configuration for a source
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sources:read
      summary: Native Change Detection Configuration
      tags:
      - Sources
    put:
      description: "Replaces the native change detection configuration for the source\
        \ specified by the given ID with the configuration provided in the request\
        \ body.\n    \nA token with ORG_ADMIN authority is required to call this API."
      operationId: putNativeChangeDetectionConfig
      parameters:
      - description: The source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NativeChangeDetectionConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NativeChangeDetectionConfig'
          description: Updated native change detection configuration for a source
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sources:update
      summary: Update Native Change Detection Configuration
      tags:
      - Sources
  /sources/{sourceId}/provisioning-policies:
    get:
      description: |-
        This end-point lists all the ProvisioningPolicies in IdentityNow.
        A token with API, or ORG_ADMIN authority is required to call this API.
      operationId: listProvisioningPolicies
      parameters:
      - description: The Source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProvisioningPolicyDto'
                type: array
          description: List of ProvisioningPolicyDto objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:provisioning-policy:read
        - idn:provisioning-policy:manage
      summary: Lists ProvisioningPolicies
      tags:
      - Sources
    post:
      description: |-
        This API generates a create policy/template based on field value transforms. This API is intended for use when setting up JDBC Provisioning type sources, but it will also work on other source types.
        Transforms can be used in the provisioning policy to create a new attribute that you only need during provisioning.
        Refer to [Transforms in Provisioning Policies](https://developer.sailpoint.com/idn/docs/transforms/guides/transforms-in-provisioning-policies) for more information.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: createProvisioningPolicy
      parameters:
      - description: The Source id
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              Create Account Provisioning Policy:
                value:
                  name: Account
                  description: Account Provisioning Policy
                  usageType: CREATE
                  fields:
                  - name: displayName
                    transform:
                      type: identityAttribute
                      attributes:
                        name: displayName
                    attributes: {}
                    isRequired: false
                    type: string
                    isMultiValued: false
                  - name: distinguishedName
                    transform:
                      type: usernameGenerator
                      attributes:
                        sourceCheck: true
                        patterns:
                        - "CN=$fi $ln,OU=zzUsers,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
                        - "CN=$fti $ln,OU=zzUsers,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
                        - "CN=$fn $ln,OU=zzUsers,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
                        - "CN=$fn$ln${uniqueCounter},OU=zzUsers,OU=Demo,DC=seri,DC=sailpointdemo,DC=com"
                        fn:
                          type: identityAttribute
                          attributes:
                            name: firstname
                        ln:
                          type: identityAttribute
                          attributes:
                            name: lastname
                        fi:
                          type: substring
                          attributes:
                            input:
                              type: identityAttribute
                              attributes:
                                name: firstname
                            begin: 0.0
                            end: 1.0
                        fti:
                          type: substring
                          attributes:
                            input:
                              type: identityAttribute
                              attributes:
                                name: firstname
                            begin: 0.0
                            end: 2.0
                    attributes:
                      cloudMaxUniqueChecks: "5"
                      cloudMaxSize: "100"
                      cloudRequired: "true"
                    isRequired: false
                    type: ""
                    isMultiValued: false
                  - name: description
                    transform:
                      type: static
                      attributes:
                        value: ""
                    attributes: {}
                    isRequired: false
                    type: string
                    isMultiValued: false
            schema:
              $ref: '#/components/schemas/ProvisioningPolicyDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
          description: Created ProvisioningPolicyDto object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:provisioning-policy:manage
      summary: Create Provisioning Policy
      tags:
      - Sources
  /sources/{sourceId}/provisioning-policies/{usageType}:
    delete:
      description: |-
        Deletes the provisioning policy with the specified usage on an application.
        A token with API, or ORG_ADMIN authority is required to call this API.
      operationId: deleteProvisioningPolicy
      parameters:
      - description: The Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: "The type of provisioning policy usage. \nIn IdentityNow, a source\
          \ can support various provisioning operations. For example, when a joiner\
          \ is added to a source, this may trigger both CREATE and UPDATE provisioning\
          \ operations.  Each usage type is considered a provisioning policy.  A source\
          \ can have any number of these provisioning policies defined. \nThese are\
          \ the common usage types: \nCREATE - This usage type relates to 'Create\
          \ Account Profile', the provisioning template for the account to be created.\
          \ For example, this would be used for a joiner on a source.  \nUPDATE -\
          \ This usage type relates to 'Update Account Profile', the provisioning\
          \ template for the 'Update' connector operations. For example, this would\
          \ be used for an attribute sync on a source.\nENABLE - This usage type relates\
          \ to 'Enable Account Profile', the provisioning template for the account\
          \ to be enabled. For example, this could be used for a joiner on a source\
          \ once the joiner's account is created. \nDISABLE - This usage type relates\
          \ to 'Disable Account Profile', the provisioning template for the account\
          \ to be disabled. For example, this could be used when a leaver is removed\
          \ temporarily from a source. \nYou can use these four usage types for all\
          \ your provisioning policy needs. "
        example: CREATE
        in: path
        name: usageType
        required: true
        schema:
          $ref: '#/components/schemas/UsageType'
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:provisioning-policy:manage
      summary: Delete Provisioning Policy by UsageType
      tags:
      - Sources
    get:
      description: |-
        This end-point retrieves the ProvisioningPolicy with the specified usage on the specified Source in IdentityNow.
        A token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: getProvisioningPolicy
      parameters:
      - description: The Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: "The type of provisioning policy usage. \nIn IdentityNow, a source\
          \ can support various provisioning operations. For example, when a joiner\
          \ is added to a source, this may trigger both CREATE and UPDATE provisioning\
          \ operations.  Each usage type is considered a provisioning policy.  A source\
          \ can have any number of these provisioning policies defined. \nThese are\
          \ the common usage types: \nCREATE - This usage type relates to 'Create\
          \ Account Profile', the provisioning template for the account to be created.\
          \ For example, this would be used for a joiner on a source.  \nUPDATE -\
          \ This usage type relates to 'Update Account Profile', the provisioning\
          \ template for the 'Update' connector operations. For example, this would\
          \ be used for an attribute sync on a source.\nENABLE - This usage type relates\
          \ to 'Enable Account Profile', the provisioning template for the account\
          \ to be enabled. For example, this could be used for a joiner on a source\
          \ once the joiner's account is created. \nDISABLE - This usage type relates\
          \ to 'Disable Account Profile', the provisioning template for the account\
          \ to be disabled. For example, this could be used when a leaver is removed\
          \ temporarily from a source. \nYou can use these four usage types for all\
          \ your provisioning policy needs. "
        example: CREATE
        in: path
        name: usageType
        required: true
        schema:
          $ref: '#/components/schemas/UsageType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
          description: The requested ProvisioningPolicyDto was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:provisioning-policy:read
        - idn:provisioning-policy-source:read
        - idn:provisioning-policy:manage
        - idn:provisioning-policy-source-admin-operations:manage
      summary: Get Provisioning Policy by UsageType
      tags:
      - Sources
    patch:
      description: |-
        This API selectively updates an existing Provisioning Policy using a JSONPatch payload.
        Transforms can be used in the provisioning policy to create a new attribute that you only need during provisioning.
        Refer to [Transforms in Provisioning Policies](https://developer.sailpoint.com/idn/docs/transforms/guides/transforms-in-provisioning-policies) for more information.
        A token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: updateProvisioningPolicy
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: "The type of provisioning policy usage. \nIn IdentityNow, a source\
          \ can support various provisioning operations. For example, when a joiner\
          \ is added to a source, this may trigger both CREATE and UPDATE provisioning\
          \ operations.  Each usage type is considered a provisioning policy.  A source\
          \ can have any number of these provisioning policies defined. \nThese are\
          \ the common usage types: \nCREATE - This usage type relates to 'Create\
          \ Account Profile', the provisioning template for the account to be created.\
          \ For example, this would be used for a joiner on a source.  \nUPDATE -\
          \ This usage type relates to 'Update Account Profile', the provisioning\
          \ template for the 'Update' connector operations. For example, this would\
          \ be used for an attribute sync on a source.\nENABLE - This usage type relates\
          \ to 'Enable Account Profile', the provisioning template for the account\
          \ to be enabled. For example, this could be used for a joiner on a source\
          \ once the joiner's account is created. \nDISABLE - This usage type relates\
          \ to 'Disable Account Profile', the provisioning template for the account\
          \ to be disabled. For example, this could be used when a leaver is removed\
          \ temporarily from a source. \nYou can use these four usage types for all\
          \ your provisioning policy needs. "
        example: CREATE
        in: path
        name: usageType
        required: true
        schema:
          $ref: '#/components/schemas/UsageType'
      requestBody:
        content:
          application/json-patch+json:
            examples:
              add-field:
                summary: Add a field to the beginning of the list
                value:
                - op: add
                  path: /fields/0
                  value:
                    name: email
                    transform:
                      type: identityAttribute
                      attributes:
                        name: email
                    attributes: {}
                    isRequired: false
                    type: string
                    isMultiValued: false
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: The JSONPatch payload used to update the schema.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
          description: The ProvisioningPolicyDto was successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:provisioning-policy:update
      summary: Partial update of Provisioning Policy
      tags:
      - Sources
    put:
      description: |-
        This end-point updates the provisioning policy with the specified usage on the specified source in IdentityNow.
        Transforms can be used in the provisioning policy to create a new attribute that you only need during provisioning.
        Refer to [Transforms in Provisioning Policies](https://developer.sailpoint.com/idn/docs/transforms/guides/transforms-in-provisioning-policies) for more information.
        A token with API, ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: putProvisioningPolicy
      parameters:
      - description: The Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: "The type of provisioning policy usage. \nIn IdentityNow, a source\
          \ can support various provisioning operations. For example, when a joiner\
          \ is added to a source, this may trigger both CREATE and UPDATE provisioning\
          \ operations.  Each usage type is considered a provisioning policy.  A source\
          \ can have any number of these provisioning policies defined. \nThese are\
          \ the common usage types: \nCREATE - This usage type relates to 'Create\
          \ Account Profile', the provisioning template for the account to be created.\
          \ For example, this would be used for a joiner on a source.  \nUPDATE -\
          \ This usage type relates to 'Update Account Profile', the provisioning\
          \ template for the 'Update' connector operations. For example, this would\
          \ be used for an attribute sync on a source.\nENABLE - This usage type relates\
          \ to 'Enable Account Profile', the provisioning template for the account\
          \ to be enabled. For example, this could be used for a joiner on a source\
          \ once the joiner's account is created. \nDISABLE - This usage type relates\
          \ to 'Disable Account Profile', the provisioning template for the account\
          \ to be disabled. For example, this could be used when a leaver is removed\
          \ temporarily from a source. \nYou can use these four usage types for all\
          \ your provisioning policy needs. "
        example: CREATE
        in: path
        name: usageType
        required: true
        schema:
          $ref: '#/components/schemas/UsageType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvisioningPolicyDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
          description: The ProvisioningPolicyDto was successfully replaced.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:provisioning-policy:manage
        - idn:provisioning-policy-source-admin-operations:manage
      summary: Update Provisioning Policy by UsageType
      tags:
      - Sources
  /sources/{sourceId}/provisioning-policies/bulk-update:
    post:
      description: |-
        This end-point updates a list of provisioning policies on the specified source in IdentityNow.
        A token with API, or ORG_ADMIN authority is required to call this API.
      operationId: updateProvisioningPoliciesInBulk
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ProvisioningPolicyDto'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProvisioningPolicyDto'
                type: array
          description: A list of the ProvisioningPolicyDto was successfully replaced.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:provisioning-policy:manage
      summary: Bulk Update Provisioning Policies
      tags:
      - Sources
  /sources/{sourceId}/schemas:
    get:
      operationId: listSourceSchemas
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: "If set to 'group', then the account schema is filtered and only\
          \ group schemas are returned. Only a value of 'group' is recognized."
        example: group
        in: query
        name: include-types
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Schema'
                type: array
          description: The Schemas were successfully retrieved.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Lists the Schemas that exist on the specified Source in IdentityNow.
      tags:
      - Sources
    post:
      operationId: createSourceSchema
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schema'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: The Schema was successfully created on the specified Source.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Creates a new Schema on the specified Source in IdentityNow.
      tags:
      - Sources
  /sources/{sourceId}/schemas/{schemaId}:
    delete:
      operationId: deleteSourceSchema
      parameters:
      - description: The Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: The Schema ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: schemaId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete Source Schema by ID
      tags:
      - Sources
    get:
      description: |
        Get the Source Schema by ID in IdentityNow.
      operationId: getSourceSchema
      parameters:
      - description: The Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: The Schema ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: schemaId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: The requested Schema was successfully retrieved.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Get Source Schema by ID
      tags:
      - Sources
    patch:
      description: "Use this API to selectively update an existing Schema using a\
        \ JSONPatch payload. \n\nThe following schema fields are immutable and cannot\
        \ be updated:\n\n- id\n- name\n- created\n- modified\n\n\nTo switch an account\
        \ attribute to a group entitlement, you need to have the following in place:\n\
        \n- `isEntitlement: true`\n- Must define a schema for the group and [add it\
        \ to the source](https://developer.sailpoint.com/idn/api/beta/create-source-schema)\
        \ before updating the `isGroup` flag.  For example, here is the `group` account\
        \ attribute referencing a schema that defines the group:\n```json\n{\n   \
        \ \"name\": \"groups\",\n    \"type\": \"STRING\",\n    \"schema\": {\n  \
        \      \"type\": \"CONNECTOR_SCHEMA\",\n        \"id\": \"2c9180887671ff8c01767b4671fc7d60\"\
        ,\n        \"name\": \"group\"\n    },\n    \"description\": \"The groups,\
        \ roles etc. that reference account group objects\",\n    \"isMulti\": true,\n\
        \    \"isEntitlement\": true,\n    \"isGroup\": true\n}\n```\n"
      operationId: updateSourceSchema
      parameters:
      - description: The Source id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: The Schema id.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: schemaId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            example:
            - op: replace
              path: /displayAttribute
              value:
                new-display-attribute: null
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        description: The JSONPatch payload used to update the schema.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: The Schema was successfully updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update Source Schema (Partial)
      tags:
      - Sources
    put:
      description: |-
        This API will completely replace an existing Schema with the submitted payload. Some fields of the Schema cannot be updated. These fields are listed below.
        * id
        * name
        * created
        * modified
        Any attempt to modify these fields will result in an error response with a status code of 400.
      operationId: putSourceSchema
      parameters:
      - description: The Source ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: The Schema ID.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: schemaId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schema'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: The Schema was successfully replaced.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Update Source Schema (Full)
      tags:
      - Sources
  /sources/{id}/schemas/accounts:
    get:
      operationId: getSourceAccountsSchema
      parameters:
      - description: The Source id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/csv:
              example: "id,name,givenName,familyName,e-mail,location,manager,groups,startDate,endDate"
          description: Successfully downloaded the file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:source-schema:read
        - idn:source-schema:manage
      summary: Downloads source accounts schema template
      tags:
      - Sources
    post:
      description: This API uploads a source schema template file to configure a source's
        account attributes.
      operationId: importSourceAccountsSchema
      parameters:
      - description: The Source id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/putPasswordDictionary_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: Successfully uploaded the file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:source-schema:manage
      summary: Uploads source accounts schema template
      tags:
      - Sources
  /sources/{id}/schemas/entitlements:
    get:
      operationId: getSourceEntitlementsSchema
      parameters:
      - description: The Source id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Name of entitlement schema
        example: ?schemaName=group
        in: query
        name: schemaName
        schema:
          type: string
      responses:
        "200":
          content:
            text/csv:
              example: "id,name,displayName,created,description,modified,entitlements,groups,permissions"
          description: Successfully downloaded the file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:source-schema:read
        - idn:source-schema:manage
      summary: Downloads source entitlements schema template
      tags:
      - Sources
    post:
      description: This API uploads a source schema template file to configure a source's
        entitlement attributes.
      operationId: importSourceEntitlementsSchema
      parameters:
      - description: The Source id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Name of entitlement schema
        example: ?schemaName=group
        in: query
        name: schemaName
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/putPasswordDictionary_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: Successfully uploaded the file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:source-schema:manage
      summary: Uploads source entitlements schema template
      tags:
      - Sources
  /sources/{sourceId}/upload-connector-file:
    post:
      description: |-
        This uploads a supplemental source connector file (like jdbc driver jars) to a source's S3 bucket. This also sends ETS and Audit events.
        A token with ORG_ADMIN authority is required to call this API.
      operationId: importSourceConnectorFile
      parameters:
      - description: The Source id
        example: 8c190e6787aa4ed9a90bd9d5344523fb
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/putPasswordDictionary_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: Uploaded the file successfully and sent all post-upload events
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sources-admin:manage
      summary: Upload connector file to source
      tags:
      - Sources
  /sources/{id}/synchronize-attributes:
    post:
      description: |-
        This end-point performs attribute synchronization for a selected source.
        A token with ORG_ADMIN or SOURCE_ADMIN authority is required to call this API.
      operationId: syncAttributesForSource
      parameters:
      - description: The Source id
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "202":
          content:
            application/json:
              example:
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                status: IN_PROGRESS
                payload:
                  type: SYNCHRONIZE_SOURCE_ATTRIBUTES
                  dataJson: "{\"sourceId\":\"2c918083746f642c01746f990884012a\"}"
              schema:
                $ref: '#/components/schemas/SourceSyncJob'
          description: A Source Sync job
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Synchronize single source attributes.
      tags:
      - Sources
  /sources/{id}/entitlement-request-config:
    get:
      description: |-
        This API gets the current entitlement request configuration for a source. This source-level configuration should apply for all the entitlements in the source.

        Access request to any entitlements in the source should follow this configuration unless a separate entitlement-level configuration is defined.
        - During access request, this source-level entitlement request configuration overrides the global organization-level configuration.
        - However, the entitlement-level configuration (if defined) overrides this source-level configuration.

        A token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: getSourceEntitlementRequestConfig
      responses:
        "200":
          content:
            application/json:
              examples:
                Get default config:
                  description: The default config for a source should look like the
                    following where the empty approvalSchemes indicates that no approvals
                    are required.
                  value:
                    accessRequestConfig:
                      approvalSchemes: []
                      requestCommentRequired: false
                      denialCommentRequired: false
                Get config with one approval:
                  description: "In case of a single approval, the config could look\
                    \ like the following."
                  value:
                    accessRequestConfig:
                      approvalSchemes:
                      - approverId: null
                        approverType: SOURCE_OWNER
                      requestCommentRequired: true
                      denialCommentRequired: false
                Get config with multiple approvals:
                  description: "In case of multiple levels of approvals the config\
                    \ could look like the following. In this scenario, access request\
                    \ review process should go through all the approvers sequentially."
                  value:
                    accessRequestConfig:
                      approvalSchemes:
                      - approverId: null
                        approverType: ENTITLEMENT_OWNER
                      - approverId: null
                        approverType: SOURCE_OWNER
                      - approverId: 95e538a3-30c1-433a-af05-4bed973bbc22
                        approverType: GOVERNANCE_GROUP
                      requestCommentRequired: true
                      denialCommentRequired: false
              schema:
                $ref: '#/components/schemas/SourceEntitlementRequestConfig'
          description: Source Entitlement Request Configuration Details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sources:read
        - idn:sources:manage
      summary: Get Source Entitlement Request Configuration
      tags:
      - Sources
    put:
      description: |-
        This API replaces the current entitlement request configuration for a source. This source-level configuration should apply for all the entitlements in the source.

        Access request to any entitlements in the source should follow this configuration unless a separate entitlement-level configuration is defined.
        - During access request, this source-level entitlement request configuration overrides the global organization-level configuration.
        - However, the entitlement-level configuration (if defined) overrides this source-level configuration.

        A token with ORG_ADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: updateSourceEntitlementRequestConfig
      requestBody:
        content:
          application/json:
            examples:
              Set config with no approvals:
                description: "If no approvals are required, the following config can\
                  \ be set."
                value:
                  accessRequestConfig:
                    approvalSchemes: []
              Set config with one approval:
                description: In case of single approval the following config can be
                  set.
                value:
                  accessRequestConfig:
                    approvalSchemes:
                    - approverType: SOURCE_OWNER
                    requestCommentRequired: true
                    denialCommentRequired: false
              Set config with multiple approvals:
                description: "In case of multiple levels of approvals the following\
                  \ config can be set. In this scenario, access request review process\
                  \ should go through all the approvers sequentially."
                value:
                  accessRequestConfig:
                    approvalSchemes:
                    - approverType: ENTITLEMENT_OWNER
                    - approverType: SOURCE_OWNER
                    - approverType: GOVERNANCE_GROUP
                      approverId: 95e538a3-30c1-433a-af05-4bed973bbc22
                    requestCommentRequired: true
                    denialCommentRequired: false
            schema:
              $ref: '#/components/schemas/SourceEntitlementRequestConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceEntitlementRequestConfig'
          description: Source Entitlement Request Configuration Details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sources:manage
      summary: Update Source Entitlement Request Configuration
      tags:
      - Sources
  /task-status:
    get:
      description: Get a TaskStatus list.
      operationId: getTaskStatusList
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in*

          **sourceId**: *eq, in*

          **completionStatus**: *eq, in*

          **type**: *eq, in*
        example: completionStatus eq "Success"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **created**
        example: -created
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskStatus'
                type: array
          description: Responds with a TaskStatus for the task with the given task
            ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:task-management:read
      summary: Retrieve a task status list.
      tags:
      - Task Management
  /task-status/{id}:
    get:
      description: Get a TaskStatus for a task by task ID.
      operationId: getTaskStatus
      parameters:
      - description: Task ID of the TaskStatus to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStatus'
          description: Responds with a TaskStatus for the task with the given task
            ID.
        "403":
          description: "Forbidden, generally due to a lack of security rights"
        "404":
          description: TaskStatus with the given id was not found.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:task-management:read
      summary: Get task status by ID.
      tags:
      - Task Management
    patch:
      description: Update a current TaskStatus for a task by task ID.
      operationId: updateTaskStatus
      parameters:
      - description: Task ID of the task whose TaskStatus to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: anId
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JsonPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStatus'
          description: Responds with the updated TaskStatus for the task with the
            given task ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:task-management:write
      summary: Update task status by ID
      tags:
      - Task Management
  /task-status/pending-tasks:
    get:
      description: Retrieve a list of TaskStatus for pending tasks.
      operationId: getPendingTasks
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaskStatus'
                type: array
          description: Responds with a list of TaskStatus for pending tasks.
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
      security:
      - UserContextAuth:
        - idn:task-management:read
      summary: Retrieve a pending task list.
      tags:
      - Task Management
    head:
      description: Retrieve headers for a list of TaskStatus for pending tasks.
      operationId: getPendingTaskHeaders
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          description: Responds with headers for List of TaskStatus for pending tasks.
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
      security:
      - UserContextAuth:
        - idn:task-management:read
      summary: Retrieve headers only for pending task list.
      tags:
      - Task Management
  /tagged-objects:
    get:
      description: |-
        This API returns a list of all tagged objects.

        Any authenticated token may be used to call this API.
      operationId: listTaggedObjects
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **objectRef.id**: *eq, in*

          **objectRef.type**: *eq, in*

          **tagName**: *eq, in*
        example: tagName eq "BU_FINANCE"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaggedObject'
                type: array
          description: List of all tagged objects.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:tag:read
        - idn:tag:manage
      summary: List Tagged Objects
      tags:
      - Tagged Objects
    post:
      description: |-
        This adds a tag to an object.

        Any authenticated token may be used to call this API.
      operationId: setTagToObject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaggedObject'
        required: true
      responses:
        "201":
          description: Created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:tag:manage
      summary: Add Tag to Object
      tags:
      - Tagged Objects
  /tagged-objects/{type}:
    get:
      description: |-
        This API returns a list of all tagged objects by type.

        Any authenticated token may be used to call this API.
      operationId: listTaggedObjectsByType
      parameters:
      - description: The type of tagged object to retrieve.
        example: ROLE
        in: path
        name: type
        required: true
        schema:
          enum:
          - ACCESS_PROFILE
          - APPLICATION
          - CAMPAIGN
          - ENTITLEMENT
          - IDENTITY
          - ROLE
          - SOD_POLICY
          - SOURCE
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **objectRef.id**: *eq*

          **objectRef.type**: *eq*
        example: objectRef.id eq "2c91808568c529c60168cca6f90c1313"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaggedObject'
                type: array
          description: List of all tagged objects for specified type.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:tag:read
        - idn:tag:manage
      summary: List Tagged Objects by Type
      tags:
      - Tagged Objects
  /tagged-objects/{type}/{id}:
    delete:
      description: This deletes a tagged object for the specified type.
      operationId: deleteTaggedObject
      parameters:
      - description: The type of tagged object to delete.
        example: ROLE
        in: path
        name: type
        required: true
        schema:
          enum:
          - ACCESS_PROFILE
          - APPLICATION
          - CAMPAIGN
          - ENTITLEMENT
          - IDENTITY
          - ROLE
          - SOD_POLICY
          - SOURCE
          type: string
      - description: The ID of the object reference to delete.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:tag:manage
      summary: Delete Tagged Object
      tags:
      - Tagged Objects
    get:
      description: This gets a tagged object for the specified type.
      operationId: getTaggedObject
      parameters:
      - description: The type of tagged object to retrieve.
        example: ROLE
        in: path
        name: type
        required: true
        schema:
          enum:
          - ACCESS_PROFILE
          - APPLICATION
          - CAMPAIGN
          - ENTITLEMENT
          - IDENTITY
          - ROLE
          - SOD_POLICY
          - SOURCE
          type: string
      - description: The ID of the object reference to retrieve.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaggedObject'
          description: Tagged object by type and ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:tag:read
        - idn:tag:manage
      summary: Get Tagged Object
      tags:
      - Tagged Objects
    put:
      description: This updates a tagged object for the specified type.
      operationId: putTaggedObject
      parameters:
      - description: The type of tagged object to update.
        example: ROLE
        in: path
        name: type
        required: true
        schema:
          enum:
          - ACCESS_PROFILE
          - APPLICATION
          - CAMPAIGN
          - ENTITLEMENT
          - IDENTITY
          - ROLE
          - SOD_POLICY
          - SOURCE
          type: string
      - description: The ID of the object reference to update.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaggedObject'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaggedObject'
          description: Tagged object by type and ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:tag:manage
      summary: Update Tagged Object
      tags:
      - Tagged Objects
  /tagged-objects/bulk-add:
    post:
      description: |-
        This API adds tags to multiple objects.

        A token with API, CERT_ADMIN, ORG_ADMIN, REPORT_ADMIN, ROLE_ADMIN, ROLE_SUBADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: setTagsToManyObjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkTaggedObject'
        description: "Supported object types are ACCESS_PROFILE, APPLICATION, CAMPAIGN,\
          \ ENTITLEMENT, IDENTITY, ROLE, SOD_POLICY, SOURCE."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkTaggedObject'
          description: Request succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:tag:manage
      summary: Tag Multiple Objects
      tags:
      - Tagged Objects
  /tagged-objects/bulk-remove:
    post:
      description: |-
        This API removes tags from multiple objects.

        A token with API, CERT_ADMIN, ORG_ADMIN, REPORT_ADMIN, ROLE_ADMIN, ROLE_SUBADMIN, SOURCE_ADMIN, or SOURCE_SUBADMIN authority is required to call this API.
      operationId: deleteTagsToManyObject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkTaggedObject'
        description: "Supported object types are ACCESS_PROFILE, APPLICATION, CAMPAIGN,\
          \ ENTITLEMENT, IDENTITY, ROLE, SOD_POLICY, SOURCE."
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:tag:manage
      summary: Remove Tags from Multiple Objects
      tags:
      - Tagged Objects
  /transforms:
    get:
      description: |-
        Gets a list of all saved transform objects.
        A token with transforms-list read authority is required to call this API.
      operationId: listTransforms
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: Name of the transform to retrieve from the list.
        in: query
        name: name
        required: false
        schema:
          example: ExampleTransformName123
          type: string
        style: form
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **internal**: *eq*

          **name**: *eq, sw*
        example: name eq "Uppercase"
        explode: true
        in: query
        name: filters
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 2cd78adghjkja34jh2b1hkjhasuecd
                name: Timestamp To Date
                type: dateFormat
                attributes:
                  inputFormat: "MMM-dd-yyyy, HH:mm:ss.SSS"
                  outputFormat: yyyy/dd/MM
                internal: false
              - id: 2lkas8dhj4bkuakja77giih7l4ashh
                name: PrefixSubstring
                type: substring
                attributes:
                  begin: 0
                  end: 3
                internal: true
              schema:
                items:
                  $ref: '#/components/schemas/TransformRead'
                type: array
          description: A list of transforms matching the given criteria.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:transform:read
        - idn:transform:manage
      summary: List transforms
      tags:
      - Transforms
    post:
      description: "Creates a new transform object immediately. By default, the internal\
        \ flag is set to false to indicate that this is a custom transform. Only SailPoint\
        \ employees have the ability to create a transform with internal set to true.\
        \ Newly created Transforms can be used in the Identity Profile mappings within\
        \ the UI. A token with transform write authority is required to call this\
        \ API."
      operationId: createTransform
      requestBody:
        content:
          application/json:
            example:
              name: Timestamp To Date
              type: dateFormat
              attributes:
                inputFormat: "MMM dd yyyy, HH:mm:ss.SSS"
                outputFormat: yyyy/dd/MM
            schema:
              $ref: '#/components/schemas/Transform'
        description: The transform to be created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformRead'
          description: Indicates the transform was successfully created and returns
            its representation.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:transform:manage
      summary: Create transform
      tags:
      - Transforms
  /transforms/{id}:
    delete:
      description: |-
        Deletes the transform specified by the given ID. Attempting to delete a transform that is used in one or more Identity Profile mappings will result in an error. If this occurs, you must first remove the transform from all mappings before deleting the transform.
        A token with transform delete authority is required to call this API.
      operationId: deleteTransform
      parameters:
      - description: ID of the transform to delete
        example: 2cd78adghjkja34jh2b1hkjhasuecd
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:transform:manage
      summary: Delete a transform
      tags:
      - Transforms
    get:
      description: |-
        This API returns the transform specified by the given ID.
        A token with transform read authority is required to call this API.
      operationId: getTransform
      parameters:
      - description: ID of the transform to retrieve
        example: 2cd78adghjkja34jh2b1hkjhasuecd
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformRead'
          description: Transform with the given ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:transform:read
        - idn:transform:manage
      summary: Transform by ID
      tags:
      - Transforms
    put:
      description: |-
        Replaces the transform specified by the given ID with the transform provided in the request body. Only the "attributes" field is mutable. Attempting to change other properties (ex. "name" and "type") will result in an error.
        A token with transform write authority is required to call this API.
      operationId: updateTransform
      parameters:
      - description: ID of the transform to update
        example: 2cd78adghjkja34jh2b1hkjhasuecd
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              name: Timestamp To Date
              type: dateFormat
              attributes:
                inputFormat: "MMM-dd-yyyy, HH:mm:ss.SSS"
                outputFormat: yyyy/dd/MM
            schema:
              $ref: '#/components/schemas/Transform'
        description: "The updated transform object. Must include \"name\", \"type\"\
          , and \"attributes\" fields, but \"name\" and \"type\" must not be modified."
      responses:
        "200":
          content:
            application/json:
              example:
                id: 2cd78adghjkja34jh2b1hkjhasuecd
                name: Timestamp To Date
                type: dateFormat
                attributes:
                  inputFormat: "MMM-dd-yyyy, HH:mm:ss.SSS"
                  outputFormat: yyyy/dd/MM
                internal: false
              schema:
                $ref: '#/components/schemas/TransformRead'
          description: Indicates the transform was successfully updated and returns
            its new representation.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:transform:manage
      summary: Update a transform
      tags:
      - Transforms
  /translation-catalogs/{catalog-id}:
    get:
      description: The getMessageCatalogs API returns message catalog based on the
        language headers in the requested object.
      operationId: getMessageCatalogs
      parameters:
      - description: The ID of the message catalog.
        example: recommender
        in: path
        name: catalog-id
        required: true
        schema:
          enum:
          - recommender
          - access-request-recommender
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MessageCatalogDto'
                type: array
          description: The message catalogs based on the request headers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth: []
      summary: Get Message catalogs
      tags:
      - IAI Message Catalogs
  /triggers:
    get:
      description: Gets a list of triggers that are available in the tenant.
      operationId: listTriggers
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, ge, le*
        example: id eq "idn:access-request-post-approval"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **id, name**
        example: name
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Trigger'
                type: array
          description: List of triggers.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:trigger-service-subscriptions:read
      summary: List Triggers
      tags:
      - Triggers
  /trigger-subscriptions:
    get:
      description: Gets a list of all trigger subscriptions.
      operationId: listSubscriptions
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq*

          **triggerId**: *eq*

          **type**: *eq, le*
        example: id eq "12cff757-c0c0-413b-8ad7-2a47956d1e89"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **triggerId, triggerName**
        example: triggerName
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                HTTP Subscription:
                  value:
                  - id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    name: Access request subscription
                    description: Access requested to site xyz
                    triggerId: idn:access-requested
                    triggerName: Access Requested
                    type: HTTP
                    httpConfig:
                      url: https://www.example.com
                      httpDispatchMode: SYNC
                      httpAuthenticationType: BASIC_AUTH
                      basicAuthConfig:
                        userName: user@example.com
                        password: null
                    enabled: true
                    filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\"\
                      )]"
                HTTP Async Subscription:
                  value:
                    name: Access request subscription
                    description: Access requested to site xyz
                    triggerId: idn:access-requested
                    triggerName: Access Requested
                    type: HTTP
                    responseDeadline: PT1H
                    httpConfig:
                      url: https://www.example.com
                      httpDispatchMode: ASYNC
                      httpAuthenticationType: BASIC_AUTH
                      basicAuthConfig:
                        userName: user@example.com
                        password: null
                    enabled: true
                    filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\"\
                      )]"
                EventBridge Subscription:
                  value:
                  - id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    name: Access request subscription
                    description: Access requested to site xyz
                    triggerId: idn:access-requested
                    triggerName: Access Requested
                    type: EVENTBRIDGE
                    eventBridgeConfig:
                      awsAccount: "123456789012"
                      awsRegion: us-west-1
                    enabled: true
                    filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\"\
                      )]"
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
          description: List of subscriptions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:trigger-service-subscriptions:read
      summary: List Subscriptions
      tags:
      - Triggers
    post:
      description: |-
        This API creates a new subscription to a trigger and defines trigger invocation details. The type of subscription determines which config object is required:
        * HTTP subscriptions require httpConfig
        * EventBridge subscriptions require eventBridgeConfig
      operationId: createSubscription
      requestBody:
        content:
          application/json:
            examples:
              HTTP Subscription:
                value:
                  name: Access request subscription
                  description: Access requested to site xyz
                  triggerId: idn:access-requested
                  type: HTTP
                  httpConfig:
                    url: https://www.example.com
                    httpDispatchMode: SYNC
                    httpAuthenticationType: BASIC_AUTH
                    basicAuthConfig:
                      userName: user@example.com
                      password: eRtg4%6yuI!
                  enabled: true
                  filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\"\
                    )]"
              HTTP Async Subscription:
                value:
                  name: Access request subscription
                  description: Access requested to site xyz
                  triggerId: idn:access-requested
                  type: HTTP
                  responseDeadline: PT1H
                  httpConfig:
                    url: https://www.example.com
                    httpDispatchMode: ASYNC
                    httpAuthenticationType: BASIC_AUTH
                    basicAuthConfig:
                      userName: user@example.com
                      password: eRtg4%6yuI!
                  enabled: true
                  filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\"\
                    )]"
              EventBridge Subscription:
                value:
                  name: Access request subscription
                  description: Access requested to site xyz
                  triggerId: idn:access-requested
                  type: EVENTBRIDGE
                  eventBridgeConfig:
                    awsAccount: "123456789012"
                    awsRegion: us-west-1
                  enabled: true
                  filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\"\
                    )]"
            schema:
              $ref: '#/components/schemas/SubscriptionPostRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: New subscription to a trigger. The trigger can now be invoked
            by the method defined in the subscription.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:trigger-service-subscriptions:manage
      summary: Create a Subscription
      tags:
      - Triggers
  /trigger-subscriptions/{id}:
    delete:
      description: Deletes an existing subscription to a trigger.
      operationId: deleteSubscription
      parameters:
      - description: Subscription ID
        example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:trigger-service-subscriptions:manage
      summary: Delete a Subscription
      tags:
      - Triggers
    patch:
      description: |-
        This API updates a trigger subscription in IdentityNow, using a set of instructions to modify a subscription partially. The following fields are patchable:

        **name**, **description**, **enabled**, **type**, **filter**, **responseDeadline**, **httpConfig**, **eventBridgeConfig**, **workflowConfig**
      operationId: patchSubscription
      parameters:
      - description: ID of the Subscription to patch
        example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SubscriptionPatchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Updated subscription.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:trigger-service-subscriptions:manage
      summary: Patch a Subscription
      tags:
      - Triggers
    put:
      description: |-
        This API updates a trigger subscription in IdentityNow, using a full object representation. In other words, the existing
          Subscription is completely replaced. The following fields are immutable:


          * id

          * triggerId


          Attempts to modify these fields result in 400.
      operationId: updateSubscription
      parameters:
      - description: Subscription ID
        example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              HTTP Subscription:
                value:
                  name: Access request subscription
                  description: Access requested to site xyz
                  type: HTTP
                  httpConfig:
                    url: https://www.example.com
                    httpDispatchMode: SYNC
                    httpAuthenticationType: BASIC_AUTH
                    basicAuthConfig:
                      userName: user@example.com
                      password: eRtg4%6yuI!
                  enabled: true
                  filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\"\
                    )]"
              HTTP Async Subscription:
                value:
                  name: Access request subscription
                  description: Access requested to site xyz
                  type: HTTP
                  responseDeadline: PT1H
                  httpConfig:
                    url: https://www.example.com
                    httpDispatchMode: ASYNC
                    httpAuthenticationType: BASIC_AUTH
                    basicAuthConfig:
                      userName: user@example.com
                      password: eRtg4%6yuI!
                  enabled: true
                  filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\"\
                    )]"
              EventBridge Subscription:
                value:
                  name: Access request subscription
                  description: Access requested to site xyz
                  type: EVENTBRIDGE
                  eventBridgeConfig:
                    awsAccount: "123456789012"
                    awsRegion: us-west-1
                  enabled: true
                  filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\"\
                    )]"
            schema:
              $ref: '#/components/schemas/SubscriptionPutRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Updated subscription.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:trigger-service-subscriptions:manage
      summary: Update a Subscription
      tags:
      - Triggers
  /trigger-subscriptions/validate-filter:
    post:
      description: "Validates a JSONPath filter expression against a provided mock\
        \ input.\nRequest requires a security scope of: "
      operationId: testSubscriptionFilter
      requestBody:
        content:
          application/json:
            example:
              input:
                identityId: 201327fda1c44704ac01181e963d463c
              filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]"
            schema:
              $ref: '#/components/schemas/ValidateFilterInputDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                isValid: true
                isValidJSONPath: true
                isPathExist: true
              schema:
                $ref: '#/components/schemas/ValidateFilterOutputDto'
          description: Boolean whether specified filter expression is valid against
            the input.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:trigger-service-subscriptions:manage
      summary: Validate a Subscription Filter
      tags:
      - Triggers
  /trigger-invocations/status:
    get:
      description: |-
        Gets a list of latest invocation statuses.
        Statuses of successful invocations are available for up to 24 hours. Statuses of failed invocations are available for up to 48 hours.
        This endpoint may only fetch up to 2000 invocations, and should not be treated as a representation of the full history of invocations.
      operationId: listTriggerInvocationStatus
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **triggerId**: *eq*

          **subscriptionId**: *eq*
        example: triggerId eq "idn:access-request-dynamic-approver"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **triggerId, subscriptionName, created, completed**
        example: created
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvocationStatus'
                type: array
          description: List of latest invocation statuses.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:trigger-service-invocation-status:read
        - sp:trigger-service-invocation-status:manage
      summary: List Latest Invocation Statuses
      tags:
      - Triggers
  /trigger-invocations/{id}/complete:
    post:
      description: Completes an invocation to a REQUEST_RESPONSE type trigger.
      operationId: completeTriggerInvocation
      parameters:
      - description: The ID of the invocation to complete.
        example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              secret: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              output:
                approved: false
            schema:
              $ref: '#/components/schemas/CompleteInvocation'
        required: true
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Complete Trigger Invocation
      tags:
      - Triggers
  /trigger-invocations/test:
    post:
      description: "Initiate a test event for all subscribers of the specified event\
        \ trigger.  If there are no subscribers to the specified trigger in the tenant,\
        \ then no test event will be sent."
      operationId: startTestTriggerInvocation
      requestBody:
        content:
          application/json:
            examples:
              Test Trigger with Mock Input:
                value:
                  triggerId: idn:access-requested
                  input:
                    identityId: 201327fda1c44704ac01181e963d463c
                  contentJson:
                    workflowId: 1234
              Send Test to only One Subscriber:
                value:
                  triggerId: idn:access-requested
                  contentJson:
                    workflowId: 1234
                  subscriptionIds:
                  - 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            schema:
              $ref: '#/components/schemas/TestInvocation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Invocation'
                type: array
          description: Test trigger invocations that have been started for specified
            subscription(s).
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:trigger-service-invocation-status:manage
      summary: Start a Test Invocation
      tags:
      - Triggers
  /verified-from-addresses:
    get:
      description: Retrieve a list of sender email addresses and their verification
        statuses
      operationId: listFromAddresses
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **email**: *eq, ge, le, sw*
        example: email eq "john.doe@company.com"
        in: query
        name: filters
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **email**
        example: email
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmailStatusDto'
                type: array
          description: List of Email Status
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: List From Addresses
      tags:
      - Notifications
    post:
      description: Create a new sender email address and initiate verification process.
      operationId: createVerifiedFromAddress
      requestBody:
        content:
          application/json:
            example:
              email: sender@example.com
            schema:
              $ref: '#/components/schemas/EmailStatusDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailStatusDto'
          description: New Verified Email Status
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Create Verified From Address
      tags:
      - Notifications
  /verified-from-addresses/{id}:
    delete:
      description: Delete a verified sender email address
      operationId: deleteVerifiedFromAddress
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Delete Verified From Address
      tags:
      - Notifications
  /verified-domains:
    get:
      description: Retrieve DKIM (DomainKeys Identified Mail) attributes for all your
        tenants' AWS SES identities. Limits retrieval to 100 identities per call.
      operationId: getDkimAttributes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DkimAttributes'
                type: array
          description: List of DKIM Attributes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:notification-dkim-attributes:read
      summary: Get DKIM Attributes
      tags:
      - Notifications
    post:
      description: Create a domain to be verified via DKIM (DomainKeys Identified
        Mail)
      operationId: createDomainDkim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainAddress'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainStatusDto'
          description: List of DKIM tokens required for the verification process.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createDomainDkim_405_response'
          description: "Method Not Allowed - indicates that the server knows the request\
            \ method, but the target resource doesn't support this method."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:notification-verify-domain-dkim:write
      summary: Verify domain address via DKIM
      tags:
      - Notifications
  /sod-policies:
    get:
      deprecated: true
      description: |-
        This gets list of all SOD policies.
        Requires role of ORG_ADMIN
      operationId: listSodPolicies
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq*

          **name**: *eq*

          **state**: *eq*
        example: id eq "bc693f07e7b645539626c25954c58554"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
              - id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                name: Conflicting-Policy-Name
                created: 2020-01-01T00:00:00.000000Z
                modified: 2020-01-01T00:00:00.000000Z
                description: This policy ensures compliance of xyz
                ownerRef:
                  type: IDENTITY
                  id: 2c91808568c529c60168cca6f90c1313
                  name: Owner Name
                externalPolicyReference: XYZ policy
                policyQuery: '@access(id:2c9180866166b5b0016167c32ef31a66 OR id:2c9180866166b5b0016167c32ef31a67)
                  AND @access(id:2c9180866166b5b0016167c32ef31a68 OR id:2c9180866166b5b0016167c32ef31a69)'
                compensatingControls: Have a manager review the transaction decisions
                  for their "out of compliance" employee
                correctionAdvice: "Based on the role of the employee, managers should\
                  \ remove access that is not required for their job function."
                state: ENFORCED
                tags:
                - string
                creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                violationOwnerAssignmentConfig:
                  assignmentRule: MANAGER
                  ownerRef:
                    type: IDENTITY
                    id: 2c91808568c529c60168cca6f90c1313
                    name: Violation Owner Name
                scheduled: true
                type: CONFLICTING_ACCESS_BASED
                conflictingAccessCriteria:
                  leftCriteria:
                    name: money-in
                    criteriaList:
                    - type: ENTITLEMENT
                      id: 2c9180866166b5b0016167c32ef31a66
                    - type: ENTITLEMENT
                      id: 2c9180866166b5b0016167c32ef31a67
                  rightCriteria:
                    name: money-out
                    criteriaList:
                    - type: ENTITLEMENT
                      id: 2c9180866166b5b0016167c32ef31a68
                    - type: ENTITLEMENT
                      id: 2c9180866166b5b0016167c32ef31a69
              - description: Description
                ownerRef:
                  type: IDENTITY
                  id: 2c918087682f9a86016839c05e8f1aff
                  name: Owner Name
                externalPolicyReference: New policy
                policyQuery: policy query implementation
                compensatingControls: Compensating controls
                correctionAdvice: Correction advice
                tags: []
                state: ENFORCED
                scheduled: false
                creatorId: 2c918087682f9a86016839c05e8f1aff
                modifierId: null
                violationOwnerAssignmentConfig: null
                type: GENERAL
                conflictingAccessCriteria: null
                id: 52c11db4-733e-4c31-949a-766c95ec95f1
                name: General-Policy-Name
                created: 2020-05-12T19:47:38Z
                modified: 2020-05-12T19:47:38Z
              schema:
                items:
                  $ref: '#/components/schemas/SodPolicy'
                type: array
          description: List of all SOD policies.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-policy:read
      summary: List SOD policies
      tags:
      - SOD Policy
    post:
      deprecated: true
      description: |-
        This creates both General and Conflicting Access Based policy, with a limit of 50 entitlements for each (left & right) criteria for Conflicting Access Based SOD policy.
        Requires role of ORG_ADMIN.
      operationId: createSodPolicy
      requestBody:
        content:
          application/json:
            examples:
              Conflicting Access Based Policy:
                value:
                  name: Conflicting-Policy-Name
                  description: This policy ensures compliance of xyz
                  ownerRef:
                    type: IDENTITY
                    id: 2c91808568c529c60168cca6f90c1313
                    name: Owner Name
                  externalPolicyReference: XYZ policy
                  compensatingControls: Have a manager review the transaction decisions
                    for their "out of compliance" employee
                  correctionAdvice: "Based on the role of the employee, managers should\
                    \ remove access that is not required for their job function."
                  state: ENFORCED
                  tags:
                  - string
                  creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                  modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                  violationOwnerAssignmentConfig:
                    assignmentRule: MANAGER
                    ownerRef:
                      type: IDENTITY
                      id: 2c91808568c529c60168cca6f90c1313
                      name: Violation Owner Name
                  scheduled: true
                  type: CONFLICTING_ACCESS_BASED
                  conflictingAccessCriteria:
                    leftCriteria:
                      name: money-in
                      criteriaList:
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a66
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a67
                    rightCriteria:
                      name: money-out
                      criteriaList:
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a68
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a69
              General Policy:
                value:
                  description: Description
                  ownerRef:
                    type: IDENTITY
                    id: 2c918087682f9a86016839c05e8f1aff
                    name: Owner Name
                  externalPolicyReference: New policy
                  policyQuery: policy query implementation
                  compensatingControls: Compensating controls
                  correctionAdvice: Correction advice
                  tags: []
                  state: ENFORCED
                  scheduled: false
                  creatorId: 2c918087682f9a86016839c05e8f1aff
                  modifierId: null
                  violationOwnerAssignmentConfig: null
                  name: General-Policy-Name
            schema:
              $ref: '#/components/schemas/SodPolicy'
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Conflicting Access Based Policy:
                  value:
                    id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    name: Conflicting-Policy-Name
                    created: 2020-01-01T00:00:00.000000Z
                    modified: 2020-01-01T00:00:00.000000Z
                    description: This policy ensures compliance of xyz
                    ownerRef:
                      type: IDENTITY
                      id: 2c91808568c529c60168cca6f90c1313
                      name: Owner Name
                    externalPolicyReference: XYZ policy
                    policyQuery: '@access(id:2c9180866166b5b0016167c32ef31a66 OR id:2c9180866166b5b0016167c32ef31a67)
                      AND @access(id:2c9180866166b5b0016167c32ef31a68 OR id:2c9180866166b5b0016167c32ef31a69)'
                    compensatingControls: Have a manager review the transaction decisions
                      for their "out of compliance" employee
                    correctionAdvice: "Based on the role of the employee, managers\
                      \ should remove access that is not required for their job function."
                    state: ENFORCED
                    tags:
                    - string
                    creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    violationOwnerAssignmentConfig:
                      assignmentRule: MANAGER
                      ownerRef:
                        type: IDENTITY
                        id: 2c91808568c529c60168cca6f90c1313
                        name: Violation Owner Name
                    scheduled: true
                    type: CONFLICTING_ACCESS_BASED
                    conflictingAccessCriteria:
                      leftCriteria:
                        name: money-in
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a66
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a67
                      rightCriteria:
                        name: money-out
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a68
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a69
                General Policy:
                  value:
                    description: Description
                    ownerRef:
                      type: IDENTITY
                      id: 2c918087682f9a86016839c05e8f1aff
                      name: Owner Name
                    externalPolicyReference: New policy
                    policyQuery: policy query implementation
                    compensatingControls: Compensating controls
                    correctionAdvice: Correction advice
                    tags: []
                    state: ENFORCED
                    scheduled: false
                    creatorId: 2c918087682f9a86016839c05e8f1aff
                    modifierId: null
                    violationOwnerAssignmentConfig: null
                    type: GENERAL
                    conflictingAccessCriteria: null
                    id: 52c11db4-733e-4c31-949a-766c95ec95f1
                    name: General-Policy-Name
                    created: 2020-05-12T19:47:38Z
                    modified: 2020-05-12T19:47:38Z
              schema:
                $ref: '#/components/schemas/SodPolicy'
          description: SOD policy created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-policy:write
      summary: Create SOD policy
      tags:
      - SOD Policy
  /sod-policies/{id}:
    delete:
      deprecated: true
      description: |-
        This deletes a specified SOD policy.
        Requires role of ORG_ADMIN.
      operationId: deleteSodPolicy
      parameters:
      - description: The ID of the SOD Policy to delete.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Indicates whether this is a soft delete (logical true) or a hard
          delete.
        example: true
        in: query
        name: logical
        required: false
        schema:
          default: true
          type: boolean
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-policy:write
      summary: Delete SOD policy by ID
      tags:
      - SOD Policy
    get:
      deprecated: true
      description: |-
        This gets specified SOD policy.
        Requires role of ORG_ADMIN.
      operationId: getSodPolicy
      parameters:
      - description: The ID of the object reference to retrieve.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                Conflicting Access Based Policy:
                  value:
                    id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    name: Conflicting-Policy-Name
                    created: 2020-01-01T00:00:00.000000Z
                    modified: 2020-01-01T00:00:00.000000Z
                    description: This policy ensures compliance of xyz
                    ownerRef:
                      type: IDENTITY
                      id: 2c91808568c529c60168cca6f90c1313
                      name: Owner Name
                    externalPolicyReference: XYZ policy
                    policyQuery: '@access(id:2c9180866166b5b0016167c32ef31a66 OR id:2c9180866166b5b0016167c32ef31a67)
                      AND @access(id:2c9180866166b5b0016167c32ef31a68 OR id:2c9180866166b5b0016167c32ef31a69)'
                    compensatingControls: Have a manager review the transaction decisions
                      for their "out of compliance" employee
                    correctionAdvice: "Based on the role of the employee, managers\
                      \ should remove access that is not required for their job function."
                    state: ENFORCED
                    tags:
                    - string
                    creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    violationOwnerAssignmentConfig:
                      assignmentRule: MANAGER
                      ownerRef:
                        type: IDENTITY
                        id: 2c91808568c529c60168cca6f90c1313
                        name: Violation Owner Name
                    scheduled: true
                    type: CONFLICTING_ACCESS_BASED
                    conflictingAccessCriteria:
                      leftCriteria:
                        name: money-in
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a66
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a67
                      rightCriteria:
                        name: money-out
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a68
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a69
                General Policy:
                  value:
                    description: Description
                    ownerRef:
                      type: IDENTITY
                      id: 2c918087682f9a86016839c05e8f1aff
                      name: Owner Name
                    externalPolicyReference: New policy
                    policyQuery: policy query implementation
                    compensatingControls: Compensating controls
                    correctionAdvice: Correction advice
                    tags: []
                    state: ENFORCED
                    scheduled: false
                    creatorId: 2c918087682f9a86016839c05e8f1aff
                    modifierId: null
                    violationOwnerAssignmentConfig: null
                    type: GENERAL
                    conflictingAccessCriteria: null
                    id: 52c11db4-733e-4c31-949a-766c95ec95f1
                    name: General-Policy-Name
                    created: 2020-05-12T19:47:38Z
                    modified: 2020-05-12T19:47:38Z
              schema:
                $ref: '#/components/schemas/SodPolicy'
          description: SOD policy ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-policy:read
      summary: Get SOD policy by ID
      tags:
      - SOD Policy
    patch:
      deprecated: true
      description: |-
        Allows updating SOD Policy fields other than ["id","created","creatorId","policyQuery","type"] using the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.
        Requires role of ORG_ADMIN.
        This endpoint can only patch CONFLICTING_ACCESS_BASED type policies. Do not use this endpoint to patch general policies - doing so will build an API exception.
      operationId: patchSodPolicy
      parameters:
      - description: The ID of the SOD policy being modified.
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Conflicting Access Based Policy:
                value:
                - op: replace
                  path: /description
                  value: Modified description
                - op: replace
                  path: /conflictingAccessCriteria/leftCriteria/name
                  value: money-in-modified
                - op: replace
                  path: /conflictingAccessCriteria/rightCriteria
                  value:
                    name: money-out-modified
                    criteriaList:
                    - type: ENTITLEMENT
                      id: 2c918087682f9a86016839c0509c1ab2
              General Policy:
                value:
                - op: replace
                  path: /description
                  value: Modified description
            schema:
              items:
                type: object
              type: array
        description: |
          A list of SOD Policy update operations according to the [JSON Patch](https://tools.ietf.org/html/rfc6902) standard.

          The following fields are patchable:
          * name
          * description
          * ownerRef
          * externalPolicyReference
          * compensatingControls
          * correctionAdvice
          * state
          * tags
          * violationOwnerAssignmentConfig
          * scheduled
          * conflictingAccessCriteria
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Conflicting Access Based Policy:
                  value:
                    id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    name: Conflicting-Policy-Name
                    created: 2020-01-01T00:00:00.000000Z
                    modified: 2020-01-01T00:00:00.000000Z
                    description: Modified description
                    ownerRef:
                      type: IDENTITY
                      id: 2c91808568c529c60168cca6f90c1313
                      name: Owner Name
                    externalPolicyReference: XYZ policy
                    policyQuery: '@access(id:2c9180866166b5b0016167c32ef31a66 OR id:2c9180866166b5b0016167c32ef31a67)
                      AND @access(id:2c918087682f9a86016839c0509c1ab2)'
                    compensatingControls: Have a manager review the transaction decisions
                      for their "out of compliance" employee
                    correctionAdvice: "Based on the role of the employee, managers\
                      \ should remove access that is not required for their job function."
                    state: ENFORCED
                    tags:
                    - string
                    creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    violationOwnerAssignmentConfig:
                      assignmentRule: MANAGER
                      ownerRef:
                        type: IDENTITY
                        id: 2c91808568c529c60168cca6f90c1313
                        name: Violation Owner Name
                    scheduled: true
                    type: CONFLICTING_ACCESS_BASED
                    conflictingAccessCriteria:
                      leftCriteria:
                        name: money-in-modified
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a66
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a67
                      rightCriteria:
                        name: money-out-modified
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c918087682f9a86016839c0509c1ab2
                General Policy:
                  value:
                    description: Modified description
                    ownerRef:
                      type: IDENTITY
                      id: 2c918087682f9a86016839c05e8f1aff
                      name: Owner Name
                    externalPolicyReference: New policy
                    policyQuery: policy query implementation
                    compensatingControls: Compensating controls
                    correctionAdvice: Correction advice
                    tags: []
                    state: ENFORCED
                    scheduled: false
                    creatorId: 2c918087682f9a86016839c05e8f1aff
                    modifierId: null
                    violationOwnerAssignmentConfig: null
                    type: GENERAL
                    conflictingAccessCriteria: null
                    id: 52c11db4-733e-4c31-949a-766c95ec95f1
                    name: General-Policy-Name
                    created: 2020-05-12T19:47:38Z
                    modified: 2020-05-12T19:47:38Z
              schema:
                $ref: '#/components/schemas/SodPolicy'
          description: "Indicates the PATCH operation succeeded, and returns the SOD\
            \ policy's new representation."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-policy:write
      summary: Patch a SOD policy
      tags:
      - SOD Policy
    put:
      deprecated: true
      description: |-
        This updates a specified SOD policy.
        Requires role of ORG_ADMIN.
      operationId: putSodPolicy
      parameters:
      - description: The ID of the SOD policy to update.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              Conflicting Access Based Policy:
                value:
                  id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                  name: Conflicting-Policy-Name
                  created: 2020-01-01T00:00:00.000000Z
                  modified: 2020-01-01T00:00:00.000000Z
                  description: Modified Description
                  ownerRef:
                    type: IDENTITY
                    id: 2c91808568c529c60168cca6f90c1313
                    name: Owner Name
                  externalPolicyReference: XYZ policy
                  compensatingControls: Have a manager review the transaction decisions
                    for their "out of compliance" employee
                  correctionAdvice: "Based on the role of the employee, managers should\
                    \ remove access that is not required for their job function."
                  state: ENFORCED
                  tags:
                  - string
                  creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                  modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                  violationOwnerAssignmentConfig:
                    assignmentRule: MANAGER
                    ownerRef:
                      type: IDENTITY
                      id: 2c91808568c529c60168cca6f90c1313
                      name: Violation Owner Name
                  scheduled: true
                  type: CONFLICTING_ACCESS_BASED
                  conflictingAccessCriteria:
                    leftCriteria:
                      name: money-in
                      criteriaList:
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a66
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a67
                    rightCriteria:
                      name: money-out
                      criteriaList:
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a68
                      - type: ENTITLEMENT
                        id: 2c9180866166b5b0016167c32ef31a69
              General Policy:
                value:
                  description: Modified Description
                  ownerRef:
                    type: IDENTITY
                    id: 2c918087682f9a86016839c05e8f1aff
                    name: Owner Name
                  externalPolicyReference: New policy
                  policyQuery: policy query implementation
                  compensatingControls: Compensating controls
                  correctionAdvice: Correction advice
                  tags: []
                  state: ENFORCED
                  scheduled: false
                  creatorId: 2c918087682f9a86016839c05e8f1aff
                  modifierId: null
                  violationOwnerAssignmentConfig: null
                  type: GENERAL
                  conflictingAccessCriteria: null
                  id: 52c11db4-733e-4c31-949a-766c95ec95f1
                  name: General-Policy-Name
                  created: 2020-05-12T19:47:38Z
                  modified: 2020-05-12T19:47:38Z
            schema:
              $ref: '#/components/schemas/SodPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Conflicting Access Based Policy:
                  value:
                    id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    name: Conflicting-Policy-Name
                    created: 2020-01-01T00:00:00.000000Z
                    modified: 2020-01-01T00:00:00.000000Z
                    description: Modified description
                    ownerRef:
                      type: IDENTITY
                      id: 2c91808568c529c60168cca6f90c1313
                      name: Owner Name
                    externalPolicyReference: XYZ policy
                    policyQuery: '@access(id:2c9180866166b5b0016167c32ef31a66 OR id:2c9180866166b5b0016167c32ef31a67)
                      AND @access(id:2c9180866166b5b0016167c32ef31a68 OR id:2c9180866166b5b0016167c32ef31a69)'
                    compensatingControls: Have a manager review the transaction decisions
                      for their "out of compliance" employee
                    correctionAdvice: "Based on the role of the employee, managers\
                      \ should remove access that is not required for their job function."
                    state: ENFORCED
                    tags:
                    - string
                    creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                    violationOwnerAssignmentConfig:
                      assignmentRule: MANAGER
                      ownerRef:
                        type: IDENTITY
                        id: 2c91808568c529c60168cca6f90c1313
                        name: Violation Owner Name
                    scheduled: true
                    type: CONFLICTING_ACCESS_BASED
                    conflictingAccessCriteria:
                      leftCriteria:
                        name: money-in
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a66
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a67
                      rightCriteria:
                        name: money-out
                        criteriaList:
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a68
                        - type: ENTITLEMENT
                          id: 2c9180866166b5b0016167c32ef31a69
                General Policy:
                  value:
                    description: Modified Description
                    ownerRef:
                      type: IDENTITY
                      id: 2c918087682f9a86016839c05e8f1aff
                      name: Owner Name
                    externalPolicyReference: New policy
                    policyQuery: policy query implementation
                    compensatingControls: Compensating controls
                    correctionAdvice: Correction advice
                    tags: []
                    state: ENFORCED
                    scheduled: false
                    creatorId: 2c918087682f9a86016839c05e8f1aff
                    modifierId: null
                    violationOwnerAssignmentConfig: null
                    type: GENERAL
                    conflictingAccessCriteria: null
                    id: 52c11db4-733e-4c31-949a-766c95ec95f1
                    name: General-Policy-Name
                    created: 2020-05-12T19:47:38Z
                    modified: 2020-05-12T19:47:38Z
              schema:
                $ref: '#/components/schemas/SodPolicy'
          description: SOD Policy by ID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-policy:write
      summary: Update SOD policy by ID
      tags:
      - SOD Policy
  /sod-policies/{id}/schedule:
    delete:
      deprecated: true
      description: |-
        This deletes schedule for a specified SOD policy.
        Requires role of ORG_ADMIN.
      operationId: deleteSodPolicySchedule
      parameters:
      - description: The ID of the SOD policy the schedule must be deleted for.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-policy:write
      summary: Delete SOD policy schedule
      tags:
      - SOD Policy
    get:
      deprecated: true
      description: |-
        This endpoint gets a specified SOD policy's schedule.
        Requires the role of ORG_ADMIN.
      operationId: getSodPolicySchedule
      parameters:
      - description: The ID of the object reference to retrieve.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SodPolicySchedule'
          description: SOD policy ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-policy:read
      summary: Get SOD policy schedule
      tags:
      - SOD Policy
    put:
      deprecated: true
      description: |-
        This updates schedule for a specified SOD policy.
        Requires role of ORG_ADMIN.
      operationId: putPolicySchedule
      parameters:
      - description: The ID of the SOD policy to update its schedule.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SodPolicySchedule'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SodPolicySchedule'
          description: SOD policy by ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-policy:write
      summary: Update SOD Policy schedule
      tags:
      - SOD Policy
  /sod-policies/{id}/violation-report/run:
    post:
      deprecated: true
      description: |-
        This invokes processing of violation report for given SOD policy. If the policy reports more than 5000 violations, the report returns with violation limit exceeded message.
        Requires role of ORG_ADMIN.
      operationId: startSodPolicy
      parameters:
      - description: The SOD policy ID to run.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                status: PENDING
                type: REPORT_RESULT
                id: 2e8d8180-24bc-4d21-91c6-7affdb473b0d
                name: policy-xyz
              schema:
                $ref: '#/components/schemas/ReportResultReference'
          description: Reference to the violation report run task.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-violation:write
      summary: Runs SOD policy violation report
      tags:
      - SOD Policy
  /sod-policies/{id}/violation-report:
    get:
      deprecated: true
      description: |-
        This gets the status for a violation report run task that has already been invoked.
        Requires role of ORG_ADMIN.
      operationId: getSodViolationReportStatus
      parameters:
      - description: The ID of the object reference to retrieve.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                status: SUCCESS
                type: REPORT_RESULT
                id: 2e8d8180-24bc-4d21-91c6-7affdb473b0d
                name: policy-xyz
              schema:
                $ref: '#/components/schemas/ReportResultReference'
          description: Status of the violation report run task.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-violation:read
      summary: Get SOD violation report status
      tags:
      - SOD Policy
  /sod-violations/predict:
    post:
      deprecated: true
      description: |-
        This API is used to check if granting some additional accesses would cause the subject to be in violation of any SOD policies. Returns the violations that would be caused.

        A token with ORG_ADMIN or API authority is required to call this API.
      operationId: startPredictSodViolations
      requestBody:
        content:
          application/json:
            example:
              identityId: 2c91808568c529c60168cca6f90c1313
              accessRefs:
              - type: ENTITLEMENT
                id: 2c918087682f9a86016839c050861ab1
                name: "CN=Information Access,OU=test,OU=test-service,DC=TestAD,DC=local"
              - type: ENTITLEMENT
                id: 2c918087682f9a86016839c0509c1ab2
                name: "CN=Information Technology,OU=test,OU=test-service,DC=TestAD,DC=local"
            schema:
              $ref: '#/components/schemas/IdentityWithNewAccess'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViolationPrediction'
          description: Violation Contexts
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-violation:read
      summary: Predict SOD violations for identity.
      tags:
      - SOD Violations
  /sod-policies/sod-violation-report-status/{reportResultId}:
    get:
      deprecated: true
      description: |-
        This gets the status for a violation report run task that has already been invoked.
        Requires role of ORG_ADMIN.
      operationId: getSodViolationReportRunStatus
      parameters:
      - description: The ID of the report reference to retrieve.
        example: 2e8d8180-24bc-4d21-91c6-7affdb473b0d
        in: path
        name: reportResultId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example:
                status: SUCCESS
                type: REPORT_RESULT
                id: 2e8d8180-24bc-4d21-91c6-7affdb473b0d
                name: policy-xyz
              schema:
                $ref: '#/components/schemas/ReportResultReference'
          description: Status of the violation report run task.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-violation:read
      summary: Get violation report run status
      tags:
      - SOD Policy
  /sod-violation-report/run:
    post:
      deprecated: true
      description: |-
        Runs multi-policy report for the org. If a policy reports more than 5000 violations, the report mentions that the violation limit was exceeded for that policy. If the request is empty, the report runs for all policies. Otherwise, the report runs for only the filtered policy list provided.
        Requires role of ORG_ADMIN.
      operationId: startSodAllPoliciesForOrg
      requestBody:
        content:
          application/json:
            example:
              filteredPolicyList:
              - b868cd40-ffa4-4337-9c07-1a51846cfa94
              - 63a07a7b-39a4-48aa-956d-50c827deba2a
            schema:
              $ref: '#/components/schemas/MultiPolicyRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              example:
                status: PENDING
                type: REPORT_RESULT
                id: 37b3b32a-f394-46f8-acad-b5223969fa68
                name: Multi Query Report
              schema:
                $ref: '#/components/schemas/ReportResultReference'
          description: Reference to the violation report run task.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-violation:write
      summary: Runs all policies for org
      tags:
      - SOD Policy
  /sod-violation-report:
    get:
      deprecated: true
      description: |-
        This endpoint gets the status for a violation report for all policy run.
        Requires role of ORG_ADMIN.
      operationId: getSodAllReportRunStatus
      responses:
        "200":
          content:
            application/json:
              example:
                status: SUCCESS
                type: REPORT_RESULT
                id: 37b3b32a-f394-46f8-acad-b5223969fa68
                name: Multi Query Report
              schema:
                $ref: '#/components/schemas/ReportResultReference'
          description: Status of the violation report run task for all policy run.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-violation:read
      summary: Get multi-report run task status
      tags:
      - SOD Policy
  /sod-violation-report/{reportResultId}/download:
    get:
      deprecated: true
      description: |-
        This allows to download a violation report for a given report reference.
        Requires role of ORG_ADMIN.
      operationId: getDefaultViolationReport
      parameters:
      - description: The ID of the report reference to download.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: reportResultId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: Returns the PolicyReport.zip that contains the violation report
            file.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-violation:read
      summary: Download violation report
      tags:
      - SOD Policy
  /sod-violation-report/{reportResultId}/download/{fileName}:
    get:
      deprecated: true
      description: |-
        This allows to download a specified named violation report for a given report reference.
        Requires role of ORG_ADMIN.
      operationId: getCustomViolationReport
      parameters:
      - description: The ID of the report reference to download.
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: reportResultId
        required: true
        schema:
          type: string
      - description: Custom Name for the  file.
        example: custom-name
        in: path
        name: fileName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: Returns the zip file with given custom name that contains the
            violation report file.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:sod-violation:read
      summary: Download custom violation report
      tags:
      - SOD Policy
  /work-items:
    get:
      description: "This gets a collection of work items belonging to either the specified\
        \ user(admin required), or the current user."
      operationId: listWorkItems
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: ID of the work item owner.
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkItems'
                type: array
          description: List of work items
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: List Work Items
      tags:
      - Work Items
  /work-items/completed:
    get:
      description: "This gets a collection of completed work items belonging to either\
        \ the specified user(admin required), or the current user."
      operationId: getCompletedWorkItems
      parameters:
      - description: "The id of the owner of the work item list being requested. \
          \ Either an admin, or the owning/current user must make this request."
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkItems'
                type: array
          description: List of completed work items.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Completed Work Items
      tags:
      - Work Items
  /work-items/count:
    get:
      description: "This gets a count of work items belonging to either the specified\
        \ user(admin required), or the current user."
      operationId: getCountWorkItems
      parameters:
      - description: ID of the work item owner.
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkItemsCount'
                type: array
          description: List of work items
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Count Work Items
      tags:
      - Work Items
  /work-items/count/completed:
    get:
      description: "This gets a count of completed work items belonging to either\
        \ the specified user(admin required), or the current user."
      operationId: getCountCompletedWorkItems
      parameters:
      - description: ID of the work item owner.
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkItemsCount'
                type: array
          description: List of work items
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Count Completed Work Items
      tags:
      - Work Items
  /work-items/summary:
    get:
      description: "This gets a summary of work items belonging to either the specified\
        \ user(admin required), or the current user."
      operationId: getWorkItemsSummary
      parameters:
      - description: ID of the work item owner.
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkItemsSummary'
                type: array
          description: List of work items
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Work Items Summary
      tags:
      - Work Items
  /work-items/{id}:
    get:
      description: "This gets the details of a Work Item belonging to either the specified\
        \ user(admin required), or the current user."
      operationId: getWorkItem
      parameters:
      - description: ID of the work item owner.
        in: query
        name: ownerId
        required: false
        schema:
          type: string
      - description: ID of the work item.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkItems'
                type: array
          description: The work item with the given ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Get a Work Item
      tags:
      - Work Items
    post:
      description: "This API completes a work item. Either an admin, or the owning/current\
        \ user must make this request."
      operationId: completeWorkItem
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A WorkItems object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Complete a Work Item
      tags:
      - Work Items
  /work-items/{id}/forward:
    post:
      description: "This API forwards a work item to a new owner. Either an admin,\
        \ or the owning/current user must make this request."
      operationId: forwardWorkItem
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkItemForward'
        required: true
      responses:
        "200":
          description: "Success, but no data is returned."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      summary: Forward a Work Item
      tags:
      - Work Items
  /work-items/{id}/approve/{approvalItemId}:
    post:
      description: "This API approves an Approval Item. Either an admin, or the owning/current\
        \ user must make this request."
      operationId: approveApprovalItem
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the approval item.
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: path
        name: approvalItemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Approve an Approval Item
      tags:
      - Work Items
  /work-items/{id}/reject/{approvalItemId}:
    post:
      description: "This API rejects an Approval Item. Either an admin, or the owning/current\
        \ user must make this request."
      operationId: rejectApprovalItem
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the approval item.
        example: 1211bcaa32112bcef6122adb21cef1ac
        in: path
        name: approvalItemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Reject an Approval Item
      tags:
      - Work Items
  /work-items/bulk-approve/{id}:
    post:
      description: "This API bulk approves Approval Items. Either an admin, or the\
        \ owning/current user must make this request."
      operationId: approveApprovalItemsInBulk
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Bulk approve Approval Items
      tags:
      - Work Items
  /work-items/bulk-reject/{id}:
    post:
      description: "This API bulk rejects Approval Items. Either an admin, or the\
        \ owning/current user must make this request."
      operationId: rejectApprovalItemsInBulk
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Bulk reject Approval Items
      tags:
      - Work Items
  /work-items/{id}/submit-account-selection:
    post:
      description: "This API submits account selections. Either an admin, or the owning/current\
        \ user must make this request."
      operationId: submitAccountSelection
      parameters:
      - description: The ID of the work item
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              fieldName: fieldValue
            schema:
              additionalProperties: true
              type: object
        description: "Account Selection Data map, keyed on fieldName"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: A work items details object.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
      summary: Submit Account Selections
      tags:
      - Work Items
  /workflows:
    get:
      description: List all workflows in the tenant.
      operationId: listWorkflows
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Workflow'
                type: array
          description: List of workflows
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:read
      summary: List Workflows
      tags:
      - Workflows
    post:
      description: Create a new workflow with the desired trigger and steps specified
        in the request body.
      operationId: createWorkflow
      requestBody:
        content:
          application/json:
            examples:
              Event Trigger:
                description: Workflow initiated by an event trigger
                value:
                  name: Send Email
                  owner:
                    type: IDENTITY
                    id: 2c91808568c529c60168cca6f90c1313
                    name: William Wilson
                  description: Send an email to the identity who's attributes changed.
                  definition:
                    start: Send Email Test
                    steps:
                      Send Email:
                        actionId: sp:send-email
                        attributes:
                          body: This is a test
                          from: sailpoint@sailpoint.com
                          recipientId.$: $.identity.id
                          subject: test
                        nextStep: success
                        selectResult: null
                        type: action
                      success:
                        type: success
                  enabled: false
                  trigger:
                    type: EVENT
                    attributes:
                      id: idn:identity-attributes-changed
                      filter: "$.changes[?(@.attribute == 'manager')]"
              Scheduled Trigger:
                description: Workflow initiated by a scheduled trigger
                value:
                  name: Send Email
                  owner:
                    type: IDENTITY
                    id: 2c91808568c529c60168cca6f90c1313
                    name: William Wilson
                  description: Send an email to the identity who's attributes changed.
                  definition:
                    start: Send Email Test
                    steps:
                      Send Email:
                        actionId: sp:send-email
                        attributes:
                          body: This is a test
                          from: sailpoint@sailpoint.com
                          recipientId.$: $.identity.id
                          subject: test
                        nextStep: success
                        selectResult: null
                        type: action
                      success:
                        type: success
                  enabled: false
                  trigger:
                    type: SCHEDULED
                    attributes:
                      cronString: 0 * */3 */5 *
            schema:
              $ref: '#/components/schemas/createWorkflow_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: The Workflow object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:manage
      summary: Create Workflow
      tags:
      - Workflows
  /workflows/{id}:
    delete:
      description: Delete a workflow.  **Enabled workflows cannot be deleted**.  They
        must first be disabled.
      operationId: deleteWorkflow
      parameters:
      - description: Id of the Workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:manage
      summary: Delete Workflow By Id
      tags:
      - Workflows
    get:
      description: Get a single workflow by id.
      operationId: getWorkflow
      parameters:
      - description: Id of the workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: The workflow object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:read
      summary: Get Workflow By Id
      tags:
      - Workflows
    patch:
      description: "Partially update an existing Workflow using [JSON Patch](https://tools.ietf.org/html/rfc6902)\
        \ syntax."
      operationId: patchWorkflow
      parameters:
      - description: Id of the Workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Update all patchable fields:
                description: Demonstrate how to update each patchable field in one
                  PATCH request.
                value:
                - op: replace
                  path: /name
                  value: Send Email
                - op: replace
                  path: /owner
                  value:
                    type: IDENTITY
                    id: 2c91808568c529c60168cca6f90c1313
                    name: William Wilson
                - op: replace
                  path: /description
                  value: Send an email to the identity who's attributes changed.
                - op: replace
                  path: /enabled
                  value: false
                - op: replace
                  path: /definition
                  value:
                    start: Send Email Test
                    steps:
                      Send Email:
                        actionId: sp:send-email
                        attributes:
                          body: This is a test
                          from: sailpoint@sailpoint.com
                          recipientId.$: $.identity.id
                          subject: test
                        nextStep: success
                        selectResult: null
                        type: action
                      success:
                        type: success
                - op: replace
                  path: /trigger
                  value:
                    type: EVENT
                    attributes:
                      id: idn:identity-attributes-changed
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: The Workflow object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:manage
      summary: Patch Workflow
      tags:
      - Workflows
    put:
      description: Perform a full update of a workflow.  The updated workflow object
        is returned in the response.
      operationId: updateWorkflow
      parameters:
      - description: Id of the Workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: The Workflow object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:manage
      summary: Update Workflow
      tags:
      - Workflows
  /workflows/{id}/test:
    post:
      description: |-
        Test a workflow with the provided input data.  The input data should resemble the input that the trigger will send the workflow.  See the [event trigger documentation](https://developer.sailpoint.com/idn/docs/event-triggers/available) for an example input for the trigger that initiates this workflow.
        This endpoint will return an execution ID, which can be used to lookup more information about the execution using the `Get a Workflow Execution` endpoint.
        **This will cause a live run of the workflow, which could result in unintended modifications to your IDN tenant.**
      operationId: testWorkflow
      parameters:
      - description: Id of the workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Identity Attributes Changed:
                description: Identity Attributes Changed Trigger Input
                value:
                  input:
                    identity:
                      id: ee769173319b41d19ccec6cea52f237b
                      name: john.doe
                      type: IDENTITY
                    changes:
                    - attribute: department
                      oldValue: sales
                      newValue: marketing
                    - attribute: manager
                      oldValue:
                        id: ee769173319b41d19ccec6c235423237b
                        name: nice.guy
                        type: IDENTITY
                      newValue:
                        id: ee769173319b41d19ccec6c235423236c
                        name: mean.guy
                        type: IDENTITY
                    - attribute: email
                      oldValue: john.doe@hotmail.com
                      newValue: john.doe@gmail.com
            schema:
              $ref: '#/components/schemas/testWorkflow_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/testWorkflow_200_response'
          description: The Workflow object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow-execute:external
      summary: Test Workflow By Id
      tags:
      - Workflows
  /workflows/{id}/executions:
    get:
      description: "This lists the executions for a given workflow. Workflow executions\
        \ are available for up to 90 days before being archived. By default, you can\
        \ get a maximum of 250 executions.  To get executions past the first 250 records,\
        \ you can do the following: \n1. Use the [Get Workflows](https://developer.sailpoint.com/idn/api/beta/list-workflows)\
        \ endpoint to get your workflows. \n2. Get your workflow ID from the response.\
        \ \n3. You can then do either of the following: \n\n  - Filter to find relevant\
        \ workflow executions.\n  For example, you can filter for failed workflow\
        \ executions: `GET /workflows/:workflowID/executions?filters=status eq \"\
        Failed\"`\n\n  - You can paginate through results with the `offset` parameter.\
        \ \n  For example, you can page through 50 executions per page and use that\
        \ as a way to get to the records past the first 250. \n  Refer to [Paginating\
        \ Results](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results)\
        \ for more information about the query parameters you can use to achieve pagination. "
      operationId: listWorkflowExecutions
      parameters:
      - description: Id of the workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **startTime**: *eq, lt, le, gt, ge*

          **status**: *eq*
        example: status eq "Failed"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowExecution'
                type: array
          description: List of workflow executions for the given workflow
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:read
      summary: List Workflow Executions
      tags:
      - Workflows
  /workflow-executions/{id}:
    get:
      description: "Get a single workflow execution.  Workflow executions are available\
        \ for up to 90 days before being archived.  If you attempt to access a workflow\
        \ execution that has been archived, you will receive a 404 Not Found."
      operationId: getWorkflowExecution
      parameters:
      - description: Id of the workflow execution
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: ../schemas/WorkflowExecution.yaml
                type: object
          description: The workflow execution
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:read
      summary: Get a Workflow Execution
      tags:
      - Workflows
  /workflow-executions/{id}/history:
    get:
      description: "Get a detailed history of a single workflow execution.  Workflow\
        \ executions are available for up to 90 days before being archived.  If you\
        \ attempt to access a workflow execution that has been archived, you will\
        \ receive a 404 Not Found."
      operationId: getWorkflowExecutionHistory
      parameters:
      - description: Id of the workflow execution
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowExecutionEvent'
                type: array
          description: List of workflow execution events for the given workflow execution
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:read
      summary: Get Workflow Execution History
      tags:
      - Workflows
  /workflow-executions/{id}/cancel:
    post:
      description: Use this API to cancel a running workflow execution.
      operationId: cancelWorkflowExecution
      parameters:
      - description: The workflow execution ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "404":
          content:
            application/json:
              examples:
                "404":
                  summary: An example of a 404 response object
                  value:
                    detailCode: 404 Not found
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server did not find a current representation for the
                        target resource.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Not Found - returned if the request URL refers to a resource
            or object that does not exist
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow-execute:external
      summary: Cancel Workflow Execution by ID
      tags:
      - Workflows
  /workflow-library:
    get:
      description: "This lists all triggers, actions, and operators in the library"
      externalDocs:
        description: Additional documentation for workflows
        url: https://documentation.sailpoint.com/saas/help/workflows/workflow-steps.html
      operationId: listCompleteWorkflowLibrary
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listCompleteWorkflowLibrary_200_response_inner'
                type: array
          description: List of workflow steps
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:read
      summary: List Complete Workflow Library
      tags:
      - Workflows
  /workflow-library/actions:
    get:
      description: This lists the workflow actions available to you.
      externalDocs:
        description: Additional documentation for each action
        url: https://documentation.sailpoint.com/saas/help/workflows/workflow-steps.html#actions
      operationId: listWorkflowLibraryActions
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq*
        example: id eq "sp:create-campaign"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowLibraryAction'
                type: array
          description: List of workflow actions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:read
      summary: List Workflow Library Actions
      tags:
      - Workflows
  /workflow-library/triggers:
    get:
      description: This lists the workflow triggers available to you
      externalDocs:
        description: Additional documentation for each trigger
        url: https://documentation.sailpoint.com/saas/help/workflows/workflow-steps.html#triggers
      operationId: listWorkflowLibraryTriggers
      parameters:
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq*
        example: id eq "idn:identity-attributes-changed"
        in: query
        name: filters
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowLibraryTrigger'
                type: array
          description: List of workflow triggers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:read
      summary: List Workflow Library Triggers
      tags:
      - Workflows
  /workflow-library/operators:
    get:
      description: This lists the workflow operators available to you
      operationId: listWorkflowLibraryOperators
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkflowLibraryOperator'
                type: array
          description: List of workflow operators
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:read
      summary: List Workflow Library Operators
      tags:
      - Workflows
  /workflows/{id}/external/oauth-clients:
    post:
      description: "Create OAuth client ID, client secret, and callback URL for use\
        \ in an external trigger.  External triggers will need this information to\
        \ generate an access token to authenticate to the callback URL and submit\
        \ a trigger payload that will initiate the workflow."
      operationId: postWorkflowExternalTrigger
      parameters:
      - description: Id of the workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowOAuthClient'
          description: The OAuth Client object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow:manage
      summary: Generate External Trigger OAuth Client
      tags:
      - Workflows
  /workflows/execute/external/{id}:
    post:
      description: This endpoint allows a service outside of IdentityNow to initiate
        a workflow that uses the "External Trigger" step.  The external service will
        invoke this endpoint with the input data it wants to send to the workflow
        in the body.
      operationId: postExternalExecuteWorkflow
      parameters:
      - description: Id of the workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postExternalExecuteWorkflow_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postExternalExecuteWorkflow_200_response'
          description: The Workflow object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow-execute:external
      summary: Execute Workflow via External Trigger
      tags:
      - Workflows
  /workflows/execute/external/{id}/test:
    post:
      description: "Validate a workflow with an \"External Trigger\" can receive input.\
        \  The response includes the input that the workflow received, which can be\
        \ used to validate that the input is intact when it reaches the workflow."
      operationId: testExternalExecuteWorkflow
      parameters:
      - description: Id of the workflow
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/testExternalExecuteWorkflow_request'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/testExternalExecuteWorkflow_200_response'
          description: Responds with the test input
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - sp:workflow-execute:external
      summary: Test Workflow via External Trigger
      tags:
      - Workflows
  /workgroups:
    get:
      description: This API returns list of Governance Groups
      operationId: listWorkgroups
      parameters:
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Note that for this API the maximum value for limit is 50.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 50
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 50
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **id**: *eq, in, sw*

          **name**: *eq, sw, in*
        example: name sw "Test"
        in: query
        name: filters
        required: false
        schema:
          type: string
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, created, modified, id, description**
        example: "name,-modified"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkgroupDto'
                type: array
          description: List of Governance Groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:workgroup:read
      summary: List Governance Groups
      tags:
      - Governance Groups
    post:
      description: This API creates a new Governance Group.
      operationId: createWorkgroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkgroupDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkgroupDto'
          description: Governance Group object created.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:workgroup:write
      summary: Create a new Governance Group.
      tags:
      - Governance Groups
  /workgroups/{id}:
    delete:
      description: This API deletes a Governance Group by its ID.
      operationId: deleteWorkgroup
      parameters:
      - description: ID of the Governance Group
        example: 2c9180837ca6693d017ca8d097500149
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No content - indicates the request was successful but there
            is no content to be returned in the response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:workgroup:write
      summary: Delete a Governance Group
      tags:
      - Governance Groups
    get:
      description: This API returns a Governance Groups by its ID.
      operationId: getWorkgroup
      parameters:
      - description: ID of the Governance Group
        example: 2c9180837ca6693d017ca8d097500149
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkgroupDto'
          description: A Governance Group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:workgroup:read
      summary: Get Governance Group by Id
      tags:
      - Governance Groups
    patch:
      description: "This API updates an existing governance group by ID. \nThe following\
        \ fields and objects are patchable:\n  * name\n  * description\n  * owner\n\
        \nA token with API or ORG_ADMIN authority is required to call this API."
      operationId: patchWorkgroup
      parameters:
      - description: ID of the Governance Group
        example: 2c9180837ca6693d017ca8d097500149
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            examples:
              Replace Description:
                description: Replace description of a Governance Group.
                value:
                - op: replace
                  path: /description
                  value: Governance Group new description.
            schema:
              items:
                $ref: '#/components/schemas/JsonPatchOperation'
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkgroupDto'
          description: A Governance Group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:workgroup:write
      summary: Patch a Governance Group
      tags:
      - Governance Groups
  /workgroups/bulk-delete:
    post:
      description: "\nThis API initiates a bulk deletion of one or more Governance\
        \ Groups.\n\n>  If any of the indicated Governance Groups have one or more\
        \ connections associated with it,then those Governance Groups will be added\
        \ in  **inUse** list of the response. Governance Group(s) marked as **inUse**\
        \ can not be deleted.\n\n>  If any of the indicated Governance Groups is not\
        \ does not exists in Organization,then those Governance Groups will be added\
        \ in **notFound** list of the response. Governance Groups marked as **notFound**\
        \ will not be deleted.\n\n>  If any of the indicated Governance Groups does\
        \ not have any connections associated with it,then those Governance Groups\
        \ will be added in **deleted** list of the response. A Governance Group marked\
        \ as **deleted** will be deleted from current Organization.\n\n>  If the request\
        \ contains any **inUse** or **notFound** Governance Group IDs then it skips\
        \ only these Governance Groups for deletion and deletes the rest of Governance\
        \ Groups which have no connections associated with it. \n\n>  **This API has\
        \ limit number of Governance Groups can be deleted at one time. If the request\
        \ contains more then 100 Governance Groups IDs to be deleted then the API\
        \ will throw an exception.**"
      operationId: deleteWorkgroupsInBulk
      requestBody:
        content:
          application/json:
            example:
              ids:
              - 567a697e-885b-495a-afc5-d55e1c23a302
              - c7b0f7b2-1e78-4063-b294-a555333dacd2
            schema:
              $ref: '#/components/schemas/WorkgroupBulkDeleteRequest'
        required: true
      responses:
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkgroupBulkDeleteResponse'
          description: Governance Group bulk delete response.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:workgroup:write
      summary: Delete Governance Group(s)
      tags:
      - Governance Groups
  /workgroups/{workgroupId}/connections:
    get:
      description: This API returns list of connections associated with a Governance
        Group.
      operationId: listConnections
      parameters:
      - description: ID of the Governance Group.
        in: path
        name: workgroupId
        required: true
        schema:
          example: 2c91808a7813090a017814121919ecca
          type: string
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Note that for this API the maximum value for limit is 50.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 50
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 50
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, created, modified**
        example: "name,-modified"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkgroupConnectionDto'
                type: array
          description: List all connections associated with a Governance Group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:workgroup:read
      summary: List connections for Governance Group
      tags:
      - Governance Groups
  /workgroups/{workgroupId}/members:
    get:
      description: This API returns list of members associated with a Governance Group.
      operationId: listWorkgroupMembers
      parameters:
      - description: ID of the Governance Group.
        in: path
        name: workgroupId
        required: true
        schema:
          example: 2c91808a7813090a017814121919ecca
          type: string
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          Note that for this API the maximum value for limit is 50.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 50
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 50
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, created, modified**
        example: "name,-modified"
        in: query
        name: sorters
        required: false
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listWorkgroupMembers_200_response_inner'
                type: array
          description: List all members associated with a Governance Group.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:workgroup:read
      summary: List Governance Group Members
      tags:
      - Governance Groups
  /workgroups/{workgroupId}/members/bulk-add:
    post:
      description: |-
        This API adds one or more members to a Governance Group.  A token with API, ORG_ADMIN authority is required to call this API.

        >  **Following field of Identity is an optional field in the request.**

        >  **name**
      operationId: updateWorkgroupMembers
      parameters:
      - description: ID of the Governance Group.
        in: path
        name: workgroupId
        required: true
        schema:
          example: 2c91808a7813090a017814121919ecca
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkWorkgroupMembersRequest'
        description: List of identities to be added to a Governance Group members
          list.
        required: true
      responses:
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkgroupMemberBulkAddResponse'
          description: List of added and not added identities into  Governance Group
            members list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:workgroup:write
      summary: Add members to Governance Group
      tags:
      - Governance Groups
  /workgroups/{workgroupId}/members/bulk-delete:
    post:
      description: |-
        This API removes one or more  members from a Governance Group.  A token with API, ORG_ADMIN authority is required to call this API.

        >  **Following field of Identity is an optional field in the request.**

        >  **name**
      operationId: deleteWorkgroupMembers
      parameters:
      - description: ID of the Governance Group.
        in: path
        name: workgroupId
        required: true
        schema:
          example: 2c91808a7813090a017814121919ecca
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkWorkgroupMembersRequest'
        description: List of identities to be removed from  a Governance Group members
          list.
        required: true
      responses:
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkgroupMemberBulkDeleteResponse'
          description: List of deleted and not deleted identities from Governance
            Group members list.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:workgroup:write
      summary: Remove members from Governance Group
      tags:
      - Governance Groups
  /form-definitions:
    get:
      description: No parameters required.
      operationId: searchFormDefinitionsByTenant
      parameters:
      - description: |-
          Offset

          Integer specifying the offset of the first result from the beginning of the collection. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results).
          The offset value is record-based, not page-based, and the index starts at 0.
        example: 250
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int64
          type: integer
          x-go-name: Offset
        x-go-name: Offset
      - description: |-
          Limit

          Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results).
          If it is not specified, a default limit is used.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int64
          maxLength: 250
          minLength: 0
          type: integer
          x-go-name: Limit
        x-go-name: Limit
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **name**: *eq, gt, sw, in*

          **description**: *eq, gt, sw, in*

          **created**: *eq, gt, sw, in*

          **modified**: *eq, gt, sw, in*
        example: name sw "my form"
        in: query
        name: filters
        required: false
        schema:
          type: string
          x-go-name: Filters
        x-go-name: Filters
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, description, created, modified**
        example: name
        in: query
        name: sorters
        required: false
        schema:
          default: name
          type: string
          x-go-name: Sorters
        x-go-name: Sorters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFormDefinitionsByTenantResponse'
          description: Returns a list of form definitions by tenant
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: Export form definitions by tenant.
      tags:
      - Custom Forms
    post:
      operationId: createFormDefinition
      requestBody:
        content:
          application/json:
            example:
              name: my form
              description: my form description
              owner:
                type: IDENTITY
                id: 00000000-0000-0000-0000-000000000000
            schema:
              $ref: '#/components/schemas/CreateFormDefinitionRequest'
        description: Body is the request payload to create form definition request
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinitionResponse'
          description: Returns a new form definition
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: Creates a form definition.
      tags:
      - Custom Forms
      x-codegen-request-body-name: Body
  /form-definitions/{formDefinitionID}:
    delete:
      description: "Parameter `{formDefinitionID}` should match a form definition\
        \ ID."
      operationId: deleteFormDefinition
      parameters:
      - description: Form definition ID
        example: 00000000-0000-0000-0000-000000000000
        in: path
        name: formDefinitionID
        required: true
        schema:
          type: string
          x-go-name: FormDefinitionID
        x-go-name: FormDefinitionID
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nil'
          description: Returns an empty body
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: Deletes a form definition.
      tags:
      - Custom Forms
    get:
      description: "Parameter `{formDefinitionID}` should match a form definition\
        \ ID."
      operationId: getFormDefinitionByKey
      parameters:
      - description: Form definition ID
        example: 00000000-0000-0000-0000-000000000000
        in: path
        name: formDefinitionID
        required: true
        schema:
          type: string
          x-go-name: FormDefinitionID
        x-go-name: FormDefinitionID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinitionResponse'
          description: Returns a form definition
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: Return a form definition.
      tags:
      - Custom Forms
    patch:
      description: "Parameter `{formDefinitionID}` should match a form definition\
        \ ID."
      operationId: patchFormDefinition
      parameters:
      - description: Form definition ID
        example: 00000000-0000-0000-0000-000000000000
        in: path
        name: formDefinitionID
        required: true
        schema:
          type: string
          x-go-name: FormDefinitionID
        x-go-name: FormDefinitionID
      requestBody:
        content:
          application/json:
            example:
            - op: replace
              path: /description
              value: test-description
            schema:
              $ref: '#/components/schemas/Patch'
        description: "Body is the request payload to patch a form definition, check:\
          \ https://jsonpatch.com"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinitionResponse'
          description: Returns the form definition updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: Patch a form definition.
      tags:
      - Custom Forms
      x-codegen-request-body-name: Body
  /form-definitions/{formDefinitionID}/data-source:
    post:
      operationId: showPreviewDataSource
      parameters:
      - description: Form definition ID
        example: 00000000-0000-0000-0000-000000000000
        in: path
        name: formDefinitionID
        required: true
        schema:
          type: string
          x-go-name: FormDefinitionID
        x-go-name: FormDefinitionID
      - description: |-
          Limit

          Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results).
          If it is not specified, a default limit is used.
        example: 10
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int64
          maxLength: 250
          minLength: 0
          type: integer
          x-go-name: Limit
        x-go-name: Limit
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **value**: *eq, gt, sw, in*

          **label**: *eq, gt, sw, in*

          **subLabel**: *eq, gt, sw, in*
        example: label sw "my label"
        in: query
        name: filters
        required: false
        schema:
          type: string
          x-go-name: Filters
        x-go-name: Filters
      - description: |-
          Query

          String specifying to query against
        example: support
        in: query
        name: query
        required: false
        schema:
          type: string
          x-go-name: Query
        x-go-name: Query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormElementPreviewRequest'
        description: Body is the request payload to create a form definition dynamic
          schema
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewDataSourceResponse'
          description: Returns a preview of a form definition data source
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: Preview form definition data source.
      tags:
      - Custom Forms
  /form-definitions/export:
    get:
      description: No parameters required.
      operationId: exportFormDefinitionsByTenant
      parameters:
      - description: |-
          Offset

          Integer specifying the offset of the first result from the beginning of the collection. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results).
          The offset value is record-based, not page-based, and the index starts at 0.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int64
          type: integer
          x-go-name: Offset
        x-go-name: Offset
      - description: |-
          Limit

          Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results).
          If it is not specified, a default limit is used.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int64
          maxLength: 250
          minLength: 0
          type: integer
          x-go-name: Limit
        x-go-name: Limit
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **name**: *eq, gt, sw, in*

          **description**: *eq, gt, sw, in*

          **created**: *eq, gt, sw, in*

          **modified**: *eq, gt, sw, in*
        example: name sw "my form"
        in: query
        name: filters
        required: false
        schema:
          type: string
          x-go-name: Filters
        x-go-name: Filters
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **name, description, created, modified**
        example: name
        in: query
        name: sorters
        required: false
        schema:
          default: name
          type: string
          x-go-name: Sorters
        x-go-name: Sorters
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/exportFormDefinitionsByTenant_200_response_inner'
                type: array
          description: Returns a list of form definition objects by tenant used by
            SP-Config
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: List form definitions by tenant.
      tags:
      - Custom Forms
  /form-definitions/forms-action-dynamic-schema:
    post:
      operationId: createFormDefinitionDynamicSchema
      requestBody:
        content:
          application/json:
            example:
              id: sp:forms
              attributes:
                formDefinitionId: 00000000-0000-0000-0000-000000000000
              description: AnotherDescription
              type: action
              versionNumber: 1
            schema:
              $ref: '#/components/schemas/FormDefinitionDynamicSchemaRequest'
        description: Body is the request payload to create a form definition dynamic
          schema
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinitionDynamicSchemaResponse'
          description: Returns a form elements dynamic schema
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: Generate JSON Schema dynamically.
      tags:
      - Custom Forms
      x-codegen-request-body-name: Body
  /form-definitions/import:
    post:
      operationId: importFormDefinitions
      requestBody:
        content:
          application/json:
            example:
            - version: 1
              self:
                name: All fields not required
                id: 05ed4edb-d0a9-41d9-ad0c-2f6e486ec4aa
                type: FORM_DEFINITION
              object:
                id: 05ed4edb-d0a9-41d9-ad0c-2f6e486ec4aa
                name: All fields not required
                description: description
                owner:
                  type: IDENTITY
                  id: 3447d8ec2602455ab6f1e8408a0f0150
                usedBy:
                - type: WORKFLOW
                  id: 5008594c-dacc-4295-8fee-41df60477304
                - type: WORKFLOW
                  id: 97e75a75-c179-4fbc-a2da-b5fa4aaa8743
                formInput:
                - type: STRING
                  label: input1
                  description: "A single dynamic scalar value (i.e. number, string,\
                    \ date, etc) that can be passed into the form for use in conditional\
                    \ logic"
                formElements:
                - id: "3069272797630701"
                  elementType: SECTION
                  config:
                    label: First Section
                    formElements:
                    - id: "3069272797630700"
                      elementType: TEXT
                      key: firstName
                      config:
                        label: First Name
                    - id: "3498415402897539"
                      elementType: TEXT
                      key: lastName
                      config:
                        label: Last Name
                formConditions:
                - ruleOperator: AND
                  rules:
                  - sourceType: INPUT
                    source: Department
                    operator: EQ
                    valueType: STRING
                    value: Sales
                  effects:
                  - effectType: HIDE
                    config:
                      element: "2614088730489570"
                created: 2022-10-04T19:27:04.456Z
                modified: 2022-11-16T20:45:02.172Z
            schema:
              items:
                $ref: '#/components/schemas/exportFormDefinitionsByTenant_200_response_inner'
              type: array
        description: Body is the request payload to import form definitions
        required: false
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importFormDefinitions_202_response'
          description: Returns statuses of those form definition objects imported
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: Import form definitions from export.
      tags:
      - Custom Forms
      x-codegen-request-body-name: Body
  /form-definitions/{formDefinitionID}/upload:
    post:
      description: "Parameter `{formDefinitionID}` should match a form definition\
        \ ID."
      operationId: createFormDefinitionFileRequest
      parameters:
      - description: |-
          FormDefinitionID

          String specifying FormDefinitionID
        example: 00000000-0000-0000-0000-000000000000
        in: path
        name: formDefinitionID
        required: true
        schema:
          type: string
          x-go-name: FormDefinitionID
        x-go-name: FormDefinitionID
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: "image/png, image/jpeg"
            schema:
              $ref: '#/components/schemas/createFormDefinitionFileRequest_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDefinitionFileUploadResponse'
          description: Returns a new form definition file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the item not found
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with payload size too large
        "415":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with unsupported media type
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An external service is not available
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: Upload new form definition file.
      tags:
      - Custom Forms
      x-codegen-request-body-name: Body
  /form-definitions/{formDefinitionID}/file/{fileID}:
    get:
      operationId: getFileFromS3
      parameters:
      - description: |-
          FormDefinitionID

          Form definition ID
        example: 00000000-0000-0000-0000-000000000000
        in: path
        name: formDefinitionID
        required: true
        schema:
          type: string
          x-go-name: FormDefinitionID
        x-go-name: FormDefinitionID
      - description: |-
          FileID

          String specifying the hashed name of the uploaded file we are retrieving.
        example: 00000031N0J7R2B57M8YG73J7M.png
        in: path
        name: fileID
        required: true
        schema:
          type: string
          x-go-name: FileID
        x-go-name: FileID
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
            image/jpeg:
              schema:
                format: binary
                type: string
            image/png:
              schema:
                format: binary
                type: string
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Returns a file that is referred to by fileID and associated
            with the formDefinitionID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/png:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/png:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/png:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/png:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/png:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/png:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An external service is not available
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: Download definition file by fileId.
      tags:
      - Custom Forms
      x-codegen-request-body-name: Body
  /form-instances:
    get:
      description: No parameters required.
      operationId: searchFormInstancesByTenant
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFormInstancesByTenantResponse'
          description: Returns a list of form instances by tenant
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: List form instances by tenant.
      tags:
      - Custom Forms
    post:
      operationId: createFormInstance
      requestBody:
        content:
          application/json:
            example:
              expire: 2023-06-20T15:57:55.332882Z
              formDefinitionId: 00000000-0000-0000-0000-000000000000
              recipients:
              - type: IDENTITY
                id: an-identity-id
              createdBy:
                type: WORKFLOW_EXECUTION
                id: a-workflow-execution-id
            schema:
              $ref: '#/components/schemas/CreateFormInstanceRequest'
        description: Body is the request payload to create a form instance
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormInstanceResponse'
          description: Returns a new form instance
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: Creates a form instance.
      tags:
      - Custom Forms
      x-codegen-request-body-name: Body
  /form-instances/{formInstanceID}:
    get:
      description: "Parameter `{formInstanceID}` should match a form instance ID."
      operationId: getFormInstanceByKey
      parameters:
      - description: Form instance ID
        example: 00000000-0000-0000-0000-000000000000
        in: path
        name: formInstanceID
        required: true
        schema:
          type: string
          x-go-name: FormInstanceID
        x-go-name: FormInstanceID
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormInstanceResponse'
          description: Returns a form instance by its key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth: []
      summary: Returns a form instance.
      tags:
      - Custom Forms
    patch:
      description: "Parameter `{formInstanceID}` should match a form instance ID."
      operationId: patchFormInstance
      parameters:
      - description: Form instance ID
        example: 00000000-0000-0000-0000-000000000000
        in: path
        name: formInstanceID
        required: true
        schema:
          type: string
          x-go-name: FormInstanceID
        x-go-name: FormInstanceID
      requestBody:
        content:
          application/json:
            example:
            - op: replace
              path: /state
              value: SUBMITTED
            - op: replace
              path: /formData
              value:
                a-key-1: a-value-1
                a-key-2: true
                a-key-3: 1
            schema:
              $ref: '#/components/schemas/Patch'
        description: "Body is the request payload to patch a form instance, check:\
          \ https://jsonpatch.com"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormInstanceResponse'
          description: Returns the form instance updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the item not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request property conflicts with stored
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth: []
      summary: Patch a form instance.
      tags:
      - Custom Forms
      x-codegen-request-body-name: Body
  /form-instances/{formInstanceID}/data-source/{formElementID}:
    get:
      description: |-
        Parameter `{formInstanceID}` should match a form instance ID.
        Parameter `{formElementID}` should match a form element ID at the data source configuration.
      operationId: searchFormElementDataByElementID
      parameters:
      - description: Form instance ID
        example: 00000000-0000-0000-0000-000000000000
        in: path
        name: formInstanceID
        required: true
        schema:
          type: string
          x-go-name: FormInstanceID
        x-go-name: FormInstanceID
      - description: Form element ID
        example: 1
        in: path
        name: formElementID
        required: true
        schema:
          type: string
          x-go-name: FormElementID
        x-go-name: FormElementID
      - description: |-
          Limit

          Integer specifying the maximum number of records to return in a single API call. The standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#paginating-results).
          If it is not specified, a default limit is used.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int64
          maxLength: 250
          minLength: 0
          type: integer
          x-go-name: Limit
        x-go-name: Limit
      - description: |-
          Filter results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#filtering-results)

          Filtering is supported for the following fields and operators:

          **value**: *eq, ne, in*

          **label**: *eq, ne, in*

          **subLabel**: *eq, ne, in*
        example: label sw "my label"
        in: query
        name: filters
        required: false
        schema:
          type: string
          x-go-name: Filters
        x-go-name: Filters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFormElementDataByElementIDResponse'
          description: Retrieves dynamic data to aid in correctly completing a valid
            form by form element ID from data source configuration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth: []
      summary: Retrieves dynamic data by element.
      tags:
      - Custom Forms
  /form-instances/{formInstanceID}/file/{fileID}:
    get:
      operationId: getFormInstanceFile
      parameters:
      - description: |-
          FormInstanceID

          Form instance ID
        example: 00000000-0000-0000-0000-000000000000
        in: path
        name: formInstanceID
        required: true
        schema:
          type: string
          x-go-name: FormInstanceID
        x-go-name: FormInstanceID
      - description: |-
          FileID

          String specifying the hashed name of the uploaded file we are retrieving.
        example: 00000031N0J7R2B57M8YG73J7M.png
        in: path
        name: fileID
        required: true
        schema:
          type: string
          x-go-name: FileID
        x-go-name: FileID
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
            image/jpeg:
              schema:
                format: binary
                type: string
            image/png:
              schema:
                format: binary
                type: string
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Returns a file that is referred to by fileID and associated
            with the formInstanceID
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/png:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/png:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/png:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/png:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the item not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/png:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            image/png:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An external service is not available
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: Download instance file by fileId.
      tags:
      - Custom Forms
      x-codegen-request-body-name: Body
  /form-definitions/predefined-select-options:
    get:
      description: No parameters required.
      operationId: searchPreDefinedSelectOptions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPredefinedSelectOptionsResponse'
          description: Returns a list of available predefined select options
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the request occurred
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the authorization occurred
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An error with the user permissions occurred
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchFormDefinitionsByTenant_400_response'
          description: An internal server error occurred
      security:
      - UserContextAuth:
        - sp:forms:manage
      summary: List predefined select options.
      tags:
      - Custom Forms
  /source-usages/{sourceId}/status:
    get:
      description: This API returns the status of the source usage insights setup
        by IDN source ID.
      operationId: getStatusBySourceId
      parameters:
      - description: ID of IDN source
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceUsageStatus'
          description: Status of the source usage insights setup by IDN source ID.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts:read
      summary: Finds status of source usage
      tags:
      - Source Usages
  /source-usages/{sourceId}/summaries:
    get:
      description: This API returns a summary of source usage insights for past 12
        months.
      operationId: getUsagesBySourceId
      parameters:
      - description: ID of IDN source
        example: 2c9180835d191a86015d28455b4a2329
        in: path
        name: sourceId
        required: true
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **date**
        example: -date
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SourceUsage'
                type: array
          description: Summary of source usage insights for past 12 months.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts:read
      summary: Returns source usage insights
      tags:
      - Source Usages
  /account-usages/{accountId}/summaries:
    get:
      description: This API returns a summary of account usage insights for past 12
        months.
      operationId: getUsagesByAccountId
      parameters:
      - description: ID of IDN account
        example: ef38f94347e94562b5bb8424a56397d8
        in: path
        name: accountId
        required: true
        schema:
          type: string
      - description: |-
          Max number of results to return.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 250
        in: query
        name: limit
        required: false
        schema:
          default: 250
          format: int32
          maximum: 250
          minimum: 0
          type: integer
      - description: |-
          Offset into the full result set. Usually specified with *limit* to paginate through the results.
          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: 0
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          minimum: 0
          type: integer
      - description: |-
          If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

          Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

          See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
        example: true
        in: query
        name: count
        required: false
        schema:
          default: false
          type: boolean
      - description: |-
          Sort results using the standard syntax described in [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters#sorting-results)

          Sorting is supported for the following fields: **date**
        example: -date
        in: query
        name: sorters
        schema:
          format: comma-separated
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AccountUsage'
                type: array
          description: Summary of account usage insights for past 12 months.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Client Error - Returned if the request body is invalid.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_401_response'
          description: "Unauthorized - Returned if there is no authorization header,\
            \ or if the JWT token is expired."
        "403":
          content:
            application/json:
              examples:
                "403":
                  summary: An example of a 403 response object
                  value:
                    detailCode: 403 Forbidden
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: The server understood the request but refuses to authorize
                        it.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: "Forbidden - Returned if the user you are running as, doesn't\
            \ have access to this end-point."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listAccessProfiles_429_response'
          description: Too Many Requests - Returned in response to too many requests
            in a given period of time - rate limited. The Retry-After header in the
            response includes how long to wait before trying again.
        "500":
          content:
            application/json:
              examples:
                "500":
                  summary: An example of a 500 response object
                  value:
                    detailCode: 500.0 Internal Fault
                    trackingId: b21b1f7ce4da4d639f2c62a57171b427
                    messages:
                    - locale: en-US
                      localeOrigin: DEFAULT
                      text: An internal fault occurred.
              schema:
                $ref: '#/components/schemas/ErrorResponseDto'
          description: Internal Server Error - Returned if there is an unexpected
            error.
      security:
      - UserContextAuth:
        - idn:accounts:read
      summary: Returns account usage insights
      tags:
      - Account Usages
components:
  examples:
    SlimCampaigns:
      description: List of Slim Campaigns that would result from not specifying *detail*
        or specifying SLIM
      value:
      - id: 2c918086719eec070171a7e3355a360a
        name: Manager Review
        description: A review of everyone's access by their manager.
        deadline: 2020-12-25T06:00:00.123Z
        type: MANAGER
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-08-02T20:29:51.065Z
        totalCertifications: 10
        completedCertifications: 3
        alerts:
        - level: ERROR
          localizations:
          - locale: en
            localeOrigin: DEFAULT
            text: Composite criterion must have children non-composite criterion must
              not.
      - id: 7e1a731e3fb845cfbe58112ba4673ee4
        name: Search Campaign
        description: Search Campaign Info
        deadline: 2022-07-26T15:42:44Z
        type: SEARCH
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-08-02T19:00:27.731Z
        totalCertifications: 5
        completedCertifications: 3
        alerts: null
      - id: 2c918086719eec070171a7e3355a412b
        name: AD Source Review
        description: A review of our AD source.
        deadline: 2020-12-25T06:00:00.123Z
        type: SOURCE_OWNER
        status: STAGED
        emailNotificationEnabled: true
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-07-25T15:42:18.276Z
        totalCertifications: 7
        completedCertifications: 3
        alerts:
        - level: WARN
          localizations:
          - locale: en
            localeOrigin: DEFAULT
            text: Composite criterion is in wrong format.
        correlatedStatus: CORRELATED
      - id: 3b2e2e5821e84127b6d693d41c40623b
        name: Role Composition Campaign
        description: A review done by a role owner.
        deadline: 2020-12-25T06:00:00.468Z
        type: ROLE_COMPOSITION
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-07-27T17:04:19.027Z
        totalCertifications: 1
        completedCertifications: 1
        alerts: null
    FullCampaigns:
      description: List of Campaigns that would result from specifying *detail* as
        FULL
      value:
      - id: 078696a575e045c68d6722ccdb9f101d
        name: Role Composition Campaign
        description: A review done by a role owner.
        deadline: 2020-12-25T06:00:00.468Z
        type: ROLE_COMPOSITION
        status: ERROR
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        modified: 2022-08-02T20:29:51.331Z
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Role Composition Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        searchCampaignInfo: null
        roleCompositionCampaignInfo:
          remediatorRef:
            type: IDENTITY
            id: 7ec252acbd4245548bc25df22348cb75
            name: SailPoint Support
          reviewerId: null
          reviewer: null
          roleIds:
          - b15d609fc5c8434b865fe552315fda8f
          query: null
          description: null
        sourcesWithOrphanEntitlements: null
        mandatoryCommentRequirement: NO_DECISIONS
      - id: 1be8fc1103914bf0a4e14e316b6a7b7c
        name: Manager Review
        description: A review of everyone's access by their manager.
        deadline: 2020-12-25T06:00:00.468Z
        type: MANAGER
        status: STAGED
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        modified: 2022-08-02T19:00:34.391Z
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Manager Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        searchCampaignInfo: null
        roleCompositionCampaignInfo: null
        sourcesWithOrphanEntitlements: []
        mandatoryCommentRequirement: NO_DECISIONS
      - id: 7e1a731e3fb845cfbe58112ba4673ee4
        name: Search Campaign
        description: Search Campaign for Identities
        deadline: 2022-07-26T15:42:44Z
        type: SEARCH
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        modified: 2022-07-25T15:42:53.718Z
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Search Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        searchCampaignInfo:
          type: IDENTITY
          description: Example of Search Campaign
          reviewer:
            type: IDENTITY
            id: 7ec252acbd4245548bc25df22348cb75
            name: null
          query: user
          identityIds: null
          accessConstraints: []
        roleCompositionCampaignInfo: null
        sourcesWithOrphanEntitlements: []
        mandatoryCommentRequirement: NO_DECISIONS
      - id: ad3cf3dd50394b1bad646de4bc51b999
        name: Source Owner Campaign
        description: Example for Source Owner Campaign
        deadline: 2022-08-10T17:09:02Z
        type: SOURCE_OWNER
        status: ACTIVE
        emailNotificationEnabled: true
        autoRevokeAllowed: false
        recommendationsEnabled: false
        modified: 2022-07-27T17:09:13.925Z
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Source Owner Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo:
          sourceIds:
          - 2c91808781fd5aea01821200dc88318e
        searchCampaignInfo: null
        roleCompositionCampaignInfo: null
        sourcesWithOrphanEntitlements: []
        correlatedStatus: CORRELATED
        mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignManager:
      value:
        name: Manager Review
        description: A review of everyone's access by their manager.
        deadline: 2020-12-25T06:00:00.468Z
        type: MANAGER
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        filter:
          type: CAMPAIGN_FILTER
          id: 0c46fb26c6b20967a55517ee90d15b93
        mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignSearch:
      value:
        name: Search Campaign
        description: Search Campaign
        deadline: 2020-12-25T06:00:00.468Z
        type: SEARCH
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        filter:
          type: CAMPAIGN_FILTER
          id: 0c46fb26c6b20967a55517ee90d15b93
        searchCampaignInfo:
          type: ACCESS
          query: user
        mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignSourceOwner:
      value:
        name: Source Owner
        description: Source Owner Info
        deadline: 2020-12-25T06:00:00.468Z
        type: SOURCE_OWNER
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        filter:
          type: CAMPAIGN_FILTER
          id: 0c46fb26c6b20967a55517ee90d15b93
        sourceOwnerCampaignInfo:
          sourceIds:
          - 612b31b1a0f04aaf83123bdb80e70db6
        correlatedStatus: CORRELATED
        mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignRoleComposition:
      value:
        name: Role Composition Campaign
        description: A review done by a role owner.
        deadline: 2020-12-25T06:00:00.468Z
        type: ROLE_COMPOSITION
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        filter:
          type: CAMPAIGN_FILTER
          id: 0c46fb26c6b20967a55517ee90d15b93
        roleCompositionCampaignInfo:
          remediatorRef:
            type: IDENTITY
            id: 7ec252acbd4245548bc25df22348cb75
            name: SailPoint Support
          roleIds:
          - b15d609fc5c8434b865fe552315fda8f
          mandatoryCommentRequirement: NO_DECISIONS
    FullCampaignManager:
      value:
        id: 5594f43b76804a6980ece5fdccf74be7
        name: Manager Review
        description: A review of everyone's access by their manager.
        deadline: 2020-12-25T06:00:00.468Z
        type: MANAGER
        status: PENDING
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-08-02T20:21:18.421Z
        modified: null
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Manager Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        searchCampaignInfo: null
        roleCompositionCampaignInfo: null
        alerts: null
        totalCertifications: 0
        completedCertifications: 0
        sourcesWithOrphanEntitlements: null
        mandatoryCommentRequirement: NO_DECISIONS
    FullCampaignSearch:
      value:
        id: ec041831cb2147778b594feb9d8db44a
        name: Search Campaign
        description: Search Campaign
        deadline: 2020-12-25T06:00:00.468Z
        type: SEARCH
        status: PENDING
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-08-03T13:54:34.344Z
        modified: null
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Search Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        searchCampaignInfo:
          type: ACCESS
          description: user
          reviewer:
            type: IDENTITY
            id: 7ec252acbd4245548bc25df22348cb75
            name: null
          query: user
          identityIds: null
          accessConstraints: []
        roleCompositionCampaignInfo: null
        alerts: null
        totalCertifications: 0
        completedCertifications: 0
        sourcesWithOrphanEntitlements: null
        mandatoryCommentRequirement: NO_DECISIONS
    FullCampaignSourceOwner:
      value:
        id: fd7b76ba4ea042de8a9414aa12fc977a
        name: Source Owner
        description: Source Owner Info
        deadline: 2020-12-25T06:00:00.468Z
        type: SOURCE_OWNER
        status: PENDING
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-08-03T13:34:19.541Z
        modified: null
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Source Owner Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        sourceIds:
        - 612b31b1a0f04aaf83123bdb80e70db6
        searchCampaignInfo: null
        roleCompositionCampaignInfo: null
        alerts: null
        totalCertifications: 0
        completedCertifications: 0
        sourcesWithOrphanEntitlements: null
        correlatedStatus: CORRELATED
        mandatoryCommentRequirement: NO_DECISIONS
    FullCampaignRoleComposition:
      value:
        id: 3b2e2e5821e84127b6d693d41c40623b
        name: Role Composition Campaign
        description: A review done by a role owner.
        deadline: 2020-12-25T06:00:00.468Z
        type: ROLE_COMPOSITION
        status: PENDING
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
        created: 2022-08-02T20:30:46.083Z
        modified: null
        filter:
          type: CAMPAIGN_FILTER
          id: 0fbe863c063c4c88a35fd7f17e8a3df5
          name: Test Role Composition Filter
        sunsetCommentsRequired: true
        sourceOwnerCampaignInfo: null
        searchCampaignInfo: null
        roleCompositionCampaignInfo:
          remediatorRef:
            type: IDENTITY
            id: 7ec252acbd4245548bc25df22348cb75
            name: SailPoint Support
          reviewerId: null
          reviewer: null
          roleIds:
          - b15d609fc5c8434b865fe552315fda8f
          query: null
          description: null
        alerts: null
        totalCertifications: 0
        completedCertifications: 0
        sourcesWithOrphanEntitlements: null
        mandatoryCommentRequirement: NO_DECISIONS
    SlimCampaignManager:
      value:
        id: 2c918086719eec070171a7e3355a360a
        name: Manager Review
        description: A review of everyone's access by their manager.
        deadline: 2020-12-25T06:00:00.123Z
        type: MANAGER
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
    SlimCampaignSearch:
      value:
        id: 7e1a731e3fb845cfbe58112ba4673ee4
        name: Search Campaign
        description: Search Campaign Info
        deadline: 2022-07-26T15:42:44Z
        type: SEARCH
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
    SlimCampaignSourceOwner:
      value:
        id: 2c918086719eec070171a7e3355a412b
        name: AD Source Review
        description: A review of our AD source.
        deadline: 2020-12-25T06:00:00.123Z
        type: SOURCE_OWNER
        status: STAGED
        emailNotificationEnabled: true
        autoRevokeAllowed: false
        recommendationsEnabled: false
        correlatedStatus: CORRELATED
    SlimCampaignRoleComposition:
      value:
        id: 3b2e2e5821e84127b6d693d41c40623b
        name: Role Composition Campaign
        description: A review done by a role owner.
        deadline: 2020-12-25T06:00:00.468Z
        type: ROLE_COMPOSITION
        status: ACTIVE
        emailNotificationEnabled: false
        autoRevokeAllowed: false
        recommendationsEnabled: false
    CreateCampaignTemplateManager:
      description: "This creates a template that can be used to generate manager campaigns.\
        \ The campaigns will have a due date that is two weeks after their creation\
        \ date, and will be named \"{current date} Manager Review\" (e.g. \"2020-03-16\
        \ Manager Review\")."
      value:
        name: Manager Review
        description: A review of everyone's access by their manager.
        deadlineDuration: P2W
        campaign:
          name: Manager Review
          description: Review everyone's access.
          type: MANAGER
          filter:
            type: CAMPAIGN_FILTER
            id: e0adaae69852e8fe8b8a3d48e5ce757c
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignTemplateSearch:
      description: This creates a template that can be used to generate search access
        campaigns. The campaigns will cover the "reporter" access item for across
        all identities.
      value:
        name: Reporting Access Review
        description: A review of everyone's access to the reporting system.
        deadlineDuration: P2W
        campaign:
          name: Search Review
          description: Review everyone's access to the reporting system.
          type: SEARCH
          filter:
            type: CAMPAIGN_FILTER
            id: e0adaae69852e8fe8b8a3d48e5ce757c
          searchCampaignInfo:
            type: ACCESS
            query: "@access(name: (\"reporter\"))"
            description: Identities with reporting abilities
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignTemplateSourceOwner:
      description: "This creates a template that can be used to generate source owner\
        \ campaigns. The campaigns will have a due date that is one month after their\
        \ creation date, and will review one source."
      value:
        name: AD Source Review
        description: A review of our AD source.
        deadlineDuration: P1M
        campaign:
          name: Source Review
          description: Review everyone's access.
          type: SOURCE_OWNER
          filter:
            type: CAMPAIGN_FILTER
            id: e0adaae69852e8fe8b8a3d48e5ce757c
          sourceOwnerCampaignInfo:
            sourceIds:
            - 2c918084707deba501709d45ce4e5569
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          correlatedStatus: CORRELATED
          mandatoryCommentRequirement: NO_DECISIONS
    CreateCampaignTemplateRoleComposition:
      description: "This creates a template that can be used to generate role composition\
        \ campaigns. The campaigns will have a due date that is two weeks after their\
        \ creation date, and will be named \"{current date} Role Composition Review\"\
        \ (e.g. \"2020-03-16 Role Composition Review\")."
      value:
        name: Role Composition Review
        description: "A review of every role's access items, by the specified reviewer."
        deadlineDuration: P2W
        campaign:
          name: Role Composition Review
          description: Review all our roles.
          type: ROLE_COMPOSITION
          roleCompositionCampaignInfo:
            remediatorRef:
              type: IDENTITY
              id: 2c9180876ab2c053016ab6f65dfd5aaa
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          mandatoryCommentRequirement: NO_DECISIONS
    CampaignTemplateManager:
      value:
        id: e7dbec99d49349c8951bd84f58a05120
        name: Manager Review
        created: 2022-08-02T19:16:42.632Z
        modified: null
        description: A review of everyone's access by their manager.
        deadlineDuration: P14D
        ownerRef:
          email: support@testmail.identitysoon.com
          type: IDENTITY
          id: 7ec252acbd4245548bc25df22348cb75
          name: SailPoint Support
        scheduled: false
        campaign:
          created: null
          modified: null
          filter:
            type: CAMPAIGN_FILTER
            id: e0adaae69852e8fe8b8a3d48e5ce757c
            name: Test Manager Filter
          sunsetCommentsRequired: true
          sourceOwnerCampaignInfo: null
          searchCampaignInfo: null
          roleCompositionCampaignInfo: null
          alerts: null
          totalCertifications: null
          completedCertifications: null
          sourcesWithOrphanEntitlements: null
          id: null
          name: Manager Review
          description: Review everyone's access.
          deadline: null
          type: MANAGER
          status: null
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          correlatedStatus: CORRELATED
          mandatoryCommentRequirement: NO_DECISIONS
    CampaignTemplateSearch:
      value:
        id: b7e6459eed5247ac8b98a5fed81fe27f
        name: Reporting Access Review
        created: 2022-07-28T19:19:40.035Z
        modified: null
        description: A review of everyone's access to the reporting system.
        deadlineDuration: P14D
        ownerRef:
          email: support@testmail.identitysoon.com
          type: IDENTITY
          id: 7ec252acbd4245548bc25df22348cb75
          name: SailPoint Support
        scheduled: false
        campaign:
          created: null
          modified: null
          filter:
            type: CAMPAIGN_FILTER
            id: e0adaae69852e8fe8b8a3d48e5ce757c
            name: Test Search Filter
          sunsetCommentsRequired: true
          sourceOwnerCampaignInfo: null
          searchCampaignInfo:
            type: ACCESS
            description: Identities with reporting abilities
            reviewerId: null
            reviewer: null
            query: "@access(name: (\"reporter\"))"
            identityIds: null
            accessConstraints: []
          roleCompositionCampaignInfo: null
          alerts: null
          totalCertifications: null
          completedCertifications: null
          sourcesWithOrphanEntitlements: null
          id: null
          name: Search Campaign Review
          description: Review everyone's access to the reporting system.
          deadline: null
          type: SEARCH
          status: null
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          correlatedStatus: CORRELATED
          mandatoryCommentRequirement: NO_DECISIONS
    CampaignTemplateSourceOwner:
      value:
        id: b9f41bc69e7a4291b9de0630396d030d
        name: AD Source Review
        created: 2022-08-02T13:40:36.857Z
        modified: null
        description: A review of our AD source.
        deadlineDuration: P1M
        ownerRef:
          email: support@testmail.identitysoon.com
          type: IDENTITY
          id: 7ec252acbd4245548bc25df22348cb75
          name: SailPoint Support
        scheduled: false
        campaign:
          created: null
          modified: null
          filter:
            type: CAMPAIGN_FILTER
            id: e0adaae69852e8fe8b8a3d48e5ce757c
            name: Test Source Owner Filter
          sunsetCommentsRequired: true
          sourceOwnerCampaignInfo:
            sourceIds:
            - 2c918084707deba501709d45ce4e5569
          searchCampaignInfo: null
          roleCompositionCampaignInfo: null
          alerts: null
          totalCertifications: null
          completedCertifications: null
          sourcesWithOrphanEntitlements: null
          id: null
          name: AD Source Review
          description: Review everyone's access.
          deadline: null
          type: SOURCE_OWNER
          status: null
          emailNotificationEnabled: true
          autoRevokeAllowed: false
          recommendationsEnabled: false
          correlatedStatus: CORRELATED
          mandatoryCommentRequirement: NO_DECISIONS
    CampaignTemplateRoleComposition:
      value:
        id: b9f41bc69e7a4291b9de0630396d030d
        name: Campaign With Admin Role
        created: 2022-08-02T13:40:36.857Z
        modified: null
        description: Campaign With Admin Role
        deadlineDuration: null
        ownerRef:
          email: support@testmail.identitysoon.com
          type: IDENTITY
          id: 7ec252acbd4245548bc25df22348cb75
          name: SailPoint Support
        scheduled: false
        campaign:
          created: null
          modified: null
          filter: null
          sunsetCommentsRequired: true
          sourceOwnerCampaignInfo: null
          searchCampaignInfo: null
          roleCompositionCampaignInfo:
            remediatorRef:
              type: IDENTITY
              id: 7ec252acbd4245548bc25df22348cb75
              name: SailPoint Support
            reviewerId: null
            reviewer: null
            roleIds:
            - b15d609fc5c8434b865fe552315fda8f
            query: null
            description: null
          alerts: null
          totalCertifications: null
          completedCertifications: null
          sourcesWithOrphanEntitlements: null
          id: null
          name: Campaign With Admin Role
          description: Campaign With Admin Role
          deadline: null
          type: ROLE_COMPOSITION
          status: null
          emailNotificationEnabled: false
          autoRevokeAllowed: false
          recommendationsEnabled: false
          correlatedStatus: CORRELATED
          mandatoryCommentRequirement: NO_DECISIONS
    evaluateEmpty:
      summary: Evaluate response when no Reassignment Configuration is found
      value:
        reassignToId: 2c9180825a6c1adc015a71c9023f0818
        lookupTrail: []
    evaluateLong:
      summary: Evaluate response when a long Reassignment trail is found
      value:
        reassignToId: 2c9180825a6c1adc015a71c9023f0818
        lookupTrail:
        - reassignedToId: 2c918084575812550157589064f33b89
          reassignedFromId: 2c9180825a6c1adc015a71c9023f0818
          reassignmentType: AUTOMATIC_REASSIGNMENT
        - reassignedToId: 073204941f3f49c0b3a3c49d1c17ef0e
          reassignedFromId: 2c918084575812550157589064f33b89
          reassignmentType: AUTOMATIC_REASSIGNMENT
        - reassignedToId: 31d9c631f5574571a935aaa48a6255df
          reassignedFromId: 073204941f3f49c0b3a3c49d1c17ef0e
          reassignmentType: AUTOMATIC_REASSIGNMENT
        - reassignedToId: 279de502e5dc43f4854e1b96f57c578f
          reassignedFromId: 31d9c631f5574571a935aaa48a6255df
          reassignmentType: AUTOMATIC_REASSIGNMENT
    evaluateSelfReview:
      summary: Evaluate response when a self-review is found and manager or org admin
        escalation is applied
      value:
        reassignToId: 2c9180825a6c1adc015a71c9023f0818
        lookupTrail:
        - reassignedToId: 2c918084575812550157589064f33b89
          reassignedFromId: 2c9180825a6c1adc015a71c9023f0818
          reassignmentType: AUTOMATIC_REASSIGNMENT
        - reassignedToId: 073204941f3f49c0b3a3c49d1c17ef0e
          reassignedFromId: 2c918084575812550157589064f33b89
          reassignmentType: AUTOMATIC_REASSIGNMENT
        - reassignedToId: 31d9c631f5574571a935aaa48a6255df
          reassignedFromId: 073204941f3f49c0b3a3c49d1c17ef0e
          reassignmentType: SELF_REVIEW_DELEGATION
        - reassignedToId: 279de502e5dc43f4854e1b96f57c578f
          reassignedFromId: 31d9c631f5574571a935aaa48a6255df
          reassignmentType: AUTOMATIC_REASSIGNMENT
  parameters:
    limit50:
      description: |-
        Note that for this API the maximum value for limit is 50.
        See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
      example: 50
      in: query
      name: limit
      required: false
      schema:
        default: 50
        format: int32
        maximum: 50
        minimum: 0
        type: integer
    offset:
      description: |-
        Offset into the full result set. Usually specified with *limit* to paginate through the results.
        See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
      example: 0
      in: query
      name: offset
      required: false
      schema:
        default: 0
        format: int32
        minimum: 0
        type: integer
    count:
      description: |-
        If *true* it will populate the *X-Total-Count* response header with the number of results that would be returned if *limit* and *offset* were ignored.

        Since requesting a total count can have a performance impact, it is recommended not to send **count=true** if that value will not be used.

        See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
      example: true
      in: query
      name: count
      required: false
      schema:
        default: false
        type: boolean
    limit:
      description: |-
        Max number of results to return.
        See [V3 API Standard Collection Parameters](https://developer.sailpoint.com/idn/api/standard-collection-parameters) for more information.
      example: 250
      in: query
      name: limit
      required: false
      schema:
        default: 250
        format: int32
        maximum: 250
        minimum: 0
        type: integer
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
      description: Client Error - Returned if the request body is invalid.
    "401":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listAccessProfiles_401_response'
      description: "Unauthorized - Returned if there is no authorization header, or\
        \ if the JWT token is expired."
    "403":
      content:
        application/json:
          examples:
            "403":
              summary: An example of a 403 response object
              value:
                detailCode: 403 Forbidden
                trackingId: b21b1f7ce4da4d639f2c62a57171b427
                messages:
                - locale: en-US
                  localeOrigin: DEFAULT
                  text: The server understood the request but refuses to authorize
                    it.
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
      description: "Forbidden - Returned if the user you are running as, doesn't have\
        \ access to this end-point."
    "429":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/listAccessProfiles_429_response'
      description: Too Many Requests - Returned in response to too many requests in
        a given period of time - rate limited. The Retry-After header in the response
        includes how long to wait before trying again.
    "500":
      content:
        application/json:
          examples:
            "500":
              summary: An example of a 500 response object
              value:
                detailCode: 500.0 Internal Fault
                trackingId: b21b1f7ce4da4d639f2c62a57171b427
                messages:
                - locale: en-US
                  localeOrigin: DEFAULT
                  text: An internal fault occurred.
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
      description: Internal Server Error - Returned if there is an unexpected error.
    "204":
      description: No content - indicates the request was successful but there is
        no content to be returned in the response.
    "202":
      content:
        application/json:
          schema:
            type: object
      description: Accepted - Returned if the request was successfully accepted into
        the system.
    "404":
      content:
        application/json:
          examples:
            "404":
              summary: An example of a 404 response object
              value:
                detailCode: 404 Not found
                trackingId: b21b1f7ce4da4d639f2c62a57171b427
                messages:
                - locale: en-US
                  localeOrigin: DEFAULT
                  text: The server did not find a current representation for the target
                    resource.
          schema:
            $ref: '#/components/schemas/ErrorResponseDto'
      description: Not Found - returned if the request URL refers to a resource or
        object that does not exist
    "405":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createDomainDkim_405_response'
      description: "Method Not Allowed - indicates that the server knows the request\
        \ method, but the target resource doesn't support this method."
  schemas:
    AccountAggregation:
      example:
        processedAccounts: 150
        start: 2021-01-31T14:30:05.104Z
        totalAccounts: 520
        status: ACCOUNTS_COLLECTED
      properties:
        start:
          description: When the aggregation started.
          example: 2021-01-31T14:30:05.104Z
          format: date-time
          type: string
        status:
          description: |
            STARTED - Aggregation started, but source account iteration has not completed.

            ACCOUNTS_COLLECTED - Source account iteration completed, but all accounts have not yet been processed.

            COMPLETED - Aggregation completed (*possibly with errors*).

            CANCELLED - Aggregation cancelled by user.

            RETRIED - Aggregation retried because of connectivity issues with the Virtual Appliance.

            TERMINATED - Aggregation marked as failed after 3 tries after connectivity issues with the Virtual Appliance.
          enum:
          - STARTED
          - ACCOUNTS_COLLECTED
          - COMPLETED
          - CANCELLED
          - RETRIED
          - TERMINATED
          example: ACCOUNTS_COLLECTED
          type: string
        totalAccounts:
          description: "The total number of *NEW, CHANGED and DELETED* accounts that\
            \ need to be processed for this aggregation. This does not include accounts\
            \ that were unchanged since the previous aggregation. This can be zero\
            \ if there were no new, changed or deleted accounts since the previous\
            \ aggregation. *Only available when status is ACCOUNTS_COLLECTED or COMPLETED.*"
          example: 520
          type: integer
        processedAccounts:
          description: "The number of *NEW, CHANGED and DELETED* accounts that have\
            \ been processed so far. This reflects the number of accounts that have\
            \ been processed at the time of the API call, and may increase on subsequent\
            \ API calls while the status is ACCOUNTS_COLLECTED. *Only available when\
            \ status is ACCOUNTS_COLLECTED or COMPLETED.*"
          example: 150
          type: integer
      type: object
    ApprovalItems:
      example:
        application: Active Directory
        name: emailAddress
        id: 2c9180835d2e5168015d32f890ca1581
        state: FINISHED
        operation: update
        value: a@b.com
        account: john.smith
      properties:
        id:
          description: The approval item's ID
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        account:
          description: The account referenced by the approval item
          example: john.smith
          type: string
        application:
          description: The name of the application/source
          example: Active Directory
          type: string
        name:
          description: The attribute's name
          example: emailAddress
          type: string
        operation:
          description: The attribute's operation
          example: update
          type: string
        value:
          description: The attribute's value
          example: a@b.com
          type: string
        state:
          $ref: '#/components/schemas/WorkItemState'
      type: object
    slimcampaign:
      example:
        totalCertifications: 100
        recommendationsEnabled: true
        created: 2020-03-03T22:15:13.611Z
        description: Everyone needs to be reviewed by their manager
        type: MANAGER
        emailNotificationEnabled: false
        alerts:
        - level: ERROR
          localizations:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
        - level: ERROR
          localizations:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
        autoRevokeAllowed: false
        name: Manager Campaign
        completedCertifications: 10
        id: 2c9079b270a266a60170a2779fcb0007
        deadline: 2020-03-15T10:00:01.456Z
        status: ACTIVE
        correlatedStatus: CORRELATED
      properties:
        id:
          description: Id of the campaign
          example: 2c9079b270a266a60170a2779fcb0007
          readOnly: true
          type: string
        name:
          description: "The campaign name. If this object is part of a template, special\
            \ formatting applies; see the `/campaign-templates/{id}/generate` endpoint\
            \ documentation for details."
          example: Manager Campaign
          type: string
        description:
          description: "The campaign description. If this object is part of a template,\
            \ special formatting applies; see the `/campaign-templates/{id}/generate`\
            \ endpoint documentation for details."
          example: Everyone needs to be reviewed by their manager
          type: string
        deadline:
          description: "The campaign's completion deadline.  This date must be in\
            \ the future in order to activate the campaign.  If you try to activate\
            \ a campaign with a deadline of today or in the past, you will receive\
            \ a 400 error response."
          example: 2020-03-15T10:00:01.456Z
          format: date-time
          type: string
        type:
          description: The type of campaign. Could be extended in the future.
          enum:
          - MANAGER
          - SOURCE_OWNER
          - SEARCH
          - ROLE_COMPOSITION
          example: MANAGER
          type: string
        emailNotificationEnabled:
          default: false
          description: Enables email notification for this campaign
          example: false
          type: boolean
        autoRevokeAllowed:
          default: false
          description: Allows auto revoke for this campaign
          example: false
          type: boolean
        recommendationsEnabled:
          default: false
          description: Enables IAI for this campaign. Accepts true even if the IAI
            product feature is off. If IAI is turned off then campaigns generated
            from this template will indicate false. The real value will then be returned
            if IAI is ever enabled for the org in the future.
          example: true
          type: boolean
        status:
          description: The campaign's current status.
          enum:
          - PENDING
          - STAGED
          - CANCELING
          - ACTIVATING
          - ACTIVE
          - COMPLETING
          - COMPLETED
          - ERROR
          - ARCHIVED
          example: ACTIVE
          readOnly: true
          type: string
        correlatedStatus:
          description: The correlatedStatus of the campaign. Only SOURCE_OWNER campaigns
            can be Uncorrelated. An Uncorrelated certification campaign only includes
            Uncorrelated identities (An identity is uncorrelated if it has no accounts
            on an authoritative source).
          enum:
          - CORRELATED
          - UNCORRELATED
          example: CORRELATED
          type: string
        created:
          description: Created time of the campaign
          example: 2020-03-03T22:15:13.611Z
          format: date-time
          readOnly: true
          type: string
        totalCertifications:
          description: The total number of certifications in this campaign.
          example: 100
          format: int32
          readOnly: true
          type: integer
        completedCertifications:
          description: The number of completed certifications in this campaign.
          example: 10
          format: int32
          readOnly: true
          type: integer
        alerts:
          description: A list of errors and warnings that have accumulated.
          items:
            $ref: '#/components/schemas/CampaignAlert'
          readOnly: true
          type: array
      required:
      - description
      - name
      - type
      title: Slim Campaign
      type: object
    fullcampaign:
      allOf:
      - $ref: '#/components/schemas/slimcampaign'
      - properties:
          modified:
            description: Modified time of the campaign
            example: 2020-03-03T22:20:12.674Z
            format: date-time
            readOnly: true
            type: string
          correlatedStatus:
            description: The correlatedStatus of the campaign. Only SOURCE_OWNER campaigns
              can be Uncorrelated. An Uncorrelated certification campaign only includes
              Uncorrelated identities (An identity is uncorrelated if it has no accounts
              on an authoritative source).
            enum:
            - CORRELATED
            - UNCORRELATED
            example: CORRELATED
            type: object
          filter:
            $ref: '#/components/schemas/fullcampaign_allOf_filter'
          sunsetCommentsRequired:
            default: true
            description: Determines if comments on sunset date changes are required.
            example: true
            type: boolean
          sourceOwnerCampaignInfo:
            $ref: '#/components/schemas/fullcampaign_allOf_sourceOwnerCampaignInfo'
          searchCampaignInfo:
            $ref: '#/components/schemas/fullcampaign_allOf_searchCampaignInfo'
          roleCompositionCampaignInfo:
            $ref: '#/components/schemas/fullcampaign_allOf_roleCompositionCampaignInfo'
          sourcesWithOrphanEntitlements:
            description: A list of sources in the campaign that contain \"orphan entitlements\"
              (entitlements without a corresponding Managed Attribute). An empty list
              indicates the campaign has no orphan entitlements. Null indicates there
              may be unknown orphan entitlements in the campaign (the campaign was
              created before this feature was implemented).
            items:
              $ref: '#/components/schemas/fullcampaign_allOf_sourcesWithOrphanEntitlements'
            readOnly: true
            type: array
          mandatoryCommentRequirement:
            description: "Determines whether comments are required for decisions during\
              \ certification reviews. You can require comments for all decisions,\
              \ revoke-only decisions, or no decisions. By default, comments are not\
              \ required for decisions."
            enum:
            - ALL_DECISIONS
            - REVOKE_ONLY_DECISIONS
            - NO_DECISIONS
            example: NO_DECISIONS
            type: string
        type: object
      title: Campaign
      type: object
    IdentityProfile:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - properties:
          description:
            description: The description of the Identity Profile.
            example: My custom flat file profile
            nullable: true
            type: string
          owner:
            $ref: '#/components/schemas/IdentityProfile_allOf_owner'
          priority:
            description: The priority for an Identity Profile.
            example: 10
            format: int64
            type: integer
          authoritativeSource:
            $ref: '#/components/schemas/IdentityProfile_allOf_authoritativeSource'
          identityRefreshRequired:
            default: false
            description: True if a identity refresh is needed. Typically triggered
              when a change on the source has been made
            example: true
            type: boolean
          identityCount:
            description: The number of identities that belong to the Identity Profile.
            example: 8
            format: int32
            type: integer
          identityAttributeConfig:
            $ref: '#/components/schemas/IdentityAttributeConfig'
          identityExceptionReportReference:
            $ref: '#/components/schemas/IdentityExceptionReportReference'
          hasTimeBasedAttr:
            default: true
            description: Indicates the value of requiresPeriodicRefresh attribute
              for the Identity Profile.
            example: true
            type: boolean
        required:
        - authoritativeSource
        type: object
    ManagedClient:
      description: Managed Client
      properties:
        id:
          description: ManagedClient ID
          example: aClientId
          readOnly: true
          type: string
        alertKey:
          description: ManagedClient alert key
          example: anAlertKey
          readOnly: true
          type: string
        apiGatewayBaseUrl:
          description: ManagedClient gateway base url
          example: https://denali-xxx.api.cloud.sailpoint.com
          readOnly: true
          type: string
        ccId:
          description: Previous CC ID to be used in data migration. (This field will
            be deleted after CC migration!)
          example: 2248
          format: int64
          type: integer
        clientId:
          description: The client ID used in API management
          example: aClientApiId
          type: string
        clusterId:
          description: Cluster ID that the ManagedClient is linked to
          example: aClusterId
          type: string
        cookbook:
          description: VA cookbook
          example: va-cookbook-info
          readOnly: true
          type: string
        description:
          description: ManagedClient description
          example: A short description of the ManagedClient
          type: string
        ipAddress:
          description: The public IP address of the ManagedClient
          example: 123.456.78.90
          readOnly: true
          type: string
        lastSeen:
          description: When the ManagedClient was last seen by the server
          example: 2020-01-01T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        name:
          description: ManagedClient name
          example: aName
          type: string
        sinceLastSeen:
          description: Milliseconds since the ManagedClient has polled the server
          example: "15000"
          readOnly: true
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/ManagedClientStatusEnum'
          description: Status of the ManagedClient
          readOnly: true
        type:
          description: "Type of the ManagedClient (VA, CCG)"
          example: VA
          type: string
        vaDownloadUrl:
          description: ManagedClient VA download URL
          example: aUrl
          readOnly: true
          type: string
        vaVersion:
          description: Version that the ManagedClient's VA is running
          example: va-megapod-useast1-610-1621372012
          readOnly: true
          type: string
        secret:
          description: Client's apiKey
          example: ef878e15eaa8c8d3e2fa52f41125e2a0eeadadc6a14f931a33ad3e1b62d56381
          type: string
      required:
      - clientId
      - clusterId
      - description
      - type
      type: object
    ManagedClientStatus:
      description: Managed Client Status
      example:
        body:
          alertKey: ""
          id: "5678"
          clusterId: "1234"
          ccg_etag: ccg_etag123xyz456
          ccg_pin: NONE
          cookbook_etag: 20210420125956-20210511144538
          hostname: megapod-useast1-secret-hostname.sailpoint.com
          internal_ip: 127.0.0.1
          lastSeen: "1620843964604"
          sinceSeen: "14708"
          sinceSeenMillis: "14708"
          localDev: false
          stacktrace: ""
          state: null
          status: NORMAL
          uuid: null
          product: idn
          va_version: null
          platform_version: "2"
          os_version: 2345.3.1
          os_type: flatcar
          hypervisor: unknown
        type: CCG
        status: null
        timestamp: 2020-01-01T00:00:00Z
      properties:
        body:
          description: ManagedClientStatus body information
          example:
            alertKey: ""
            id: "5678"
            clusterId: "1234"
            ccg_etag: ccg_etag123xyz456
            ccg_pin: NONE
            cookbook_etag: 20210420125956-20210511144538
            hostname: megapod-useast1-secret-hostname.sailpoint.com
            internal_ip: 127.0.0.1
            lastSeen: "1620843964604"
            sinceSeen: "14708"
            sinceSeenMillis: "14708"
            localDev: false
            stacktrace: ""
            state: null
            status: NORMAL
            uuid: null
            product: idn
            va_version: null
            platform_version: "2"
            os_version: 2345.3.1
            os_type: flatcar
            hypervisor: unknown
          type: object
        status:
          $ref: '#/components/schemas/ManagedClientStatusEnum'
        type:
          $ref: '#/components/schemas/ManagedClientType'
        timestamp:
          description: timestamp on the Client Status update
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - body
      - status
      - timestamp
      - type
      type: object
    MessageCatalogDto:
      example:
        messages:
        - format: "{0,,\\\"i18n hint: percentage\\\"}% of identities with the same\
            \ {1,,\\\"i18n hint: name of category feature\\\"} have this access. This\
            \ information had a low impact on the overall score."
          key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_LOW
        - format: "{0,,\\\"i18n hint: percentage\\\"}% of identities with the same\
            \ {1,,\\\"i18n hint: name of category feature\\\"} have this access. This\
            \ information had a low impact on the overall score."
          key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_LOW
        locale: en_US
      properties:
        locale:
          description: The language in which the messages are returned
          example: en_US
          type: string
        messages:
          description: The list of message with their keys and formats
          items:
            $ref: '#/components/schemas/ResourceBundleMessage'
          type: array
      type: object
    PeerGroupMember:
      example:
        peer_group_id: peer_group_id
        attributes:
          key: "{}"
        id: id
        type: type
      properties:
        id:
          description: A unique identifier for the peer group member.
          type: string
        type:
          description: The type of the peer group member.
          type: string
        peer_group_id:
          description: The ID of the peer group.
          type: string
        attributes:
          additionalProperties:
            type: object
          description: "Arbitrary key-value pairs, belonging to the peer group member."
          type: object
      type: object
    RecommendationRequestDto:
      example:
        prescribeMode: false
        excludeInterpretations: false
        requests:
        - item:
            id: 2c938083633d259901633d2623ec0375
            type: ENTITLEMENT
          identityId: 2c938083633d259901633d25c68c00fa
        - item:
            id: 2c938083633d259901633d2623ec0375
            type: ENTITLEMENT
          identityId: 2c938083633d259901633d25c68c00fa
        includeTranslationMessages: false
        includeDebugInformation: true
      properties:
        requests:
          items:
            $ref: '#/components/schemas/RecommendationRequest'
          type: array
        excludeInterpretations:
          default: false
          description: Exclude interpretations in the response if "true". Return interpretations
            in the response if this attribute is not specified.
          example: false
          type: boolean
        includeTranslationMessages:
          default: false
          description: "When set to true, the calling system uses the translated messages\
            \ for the specified language"
          example: false
          type: boolean
        includeDebugInformation:
          default: false
          description: Returns the recommender calculations if set to true
          example: true
          type: boolean
        prescribeMode:
          default: false
          description: "When set to true, uses prescribedRulesRecommenderConfig to\
            \ get identity attributes and peer group threshold instead of standard\
            \ config."
          example: false
          type: boolean
      type: object
    RecommendationResponseDto:
      example:
        response:
        - request:
            item:
              id: 2c938083633d259901633d2623ec0375
              type: ENTITLEMENT
            identityId: 2c938083633d259901633d25c68c00fa
          recommenderCalculations:
            identityId: 2c91808457d8f3ab0157e3e62cb4213c
            entitlementId: 2c91809050db617d0150e0bf3215385e
            overallWeightedScore: 0.8008281904610115
            featureWeightedScores:
              key: 6.027456183070403
            recommendation: "YES"
            threshold: 1.4658129805029452
            identityAttributes:
              key:
                value: value
            featureValues:
              feature: department
              numerator: 14
              denominator: 14
          translationMessages:
          - key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH
            values:
            - "75"
            - department
          recommendation: "true"
          interpretations:
          - 75% of identities with the same department have this access. This information
            had a high impact on the overall score.
          - 67% of identities with the same peer group have this access. This information
            had a low impact on the overall score.
          - 42% of identities with the same location have this access. This information
            had a low impact on the overall score.
        - request:
            item:
              id: 2c938083633d259901633d2623ec0375
              type: ENTITLEMENT
            identityId: 2c938083633d259901633d25c68c00fa
          recommenderCalculations:
            identityId: 2c91808457d8f3ab0157e3e62cb4213c
            entitlementId: 2c91809050db617d0150e0bf3215385e
            overallWeightedScore: 0.8008281904610115
            featureWeightedScores:
              key: 6.027456183070403
            recommendation: "YES"
            threshold: 1.4658129805029452
            identityAttributes:
              key:
                value: value
            featureValues:
              feature: department
              numerator: 14
              denominator: 14
          translationMessages:
          - key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH
            values:
            - "75"
            - department
          recommendation: "true"
          interpretations:
          - 75% of identities with the same department have this access. This information
            had a high impact on the overall score.
          - 67% of identities with the same peer group have this access. This information
            had a low impact on the overall score.
          - 42% of identities with the same location have this access. This information
            had a low impact on the overall score.
      properties:
        response:
          items:
            $ref: '#/components/schemas/RecommendationResponse'
          type: array
      type: object
    RemediationItems:
      example:
        targetName: john.smith
        targetId: 2c9180835d2e5168015d32f890ca1581
        attributeValue: 512-555-1212
        targetDisplayName: emailAddress
        attributeName: phoneNumber
        id: 2c9180835d2e5168015d32f890ca1581
        applicationName: Active Directory
        attributeOperation: update
        nativeIdentity: jason.smith2
      properties:
        id:
          description: The ID of the certification
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        targetId:
          description: The ID of the certification target
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        targetName:
          description: The name of the certification target
          example: john.smith
          type: string
        targetDisplayName:
          description: The display name of the certification target
          example: emailAddress
          type: string
        applicationName:
          description: The name of the application/source
          example: Active Directory
          type: string
        attributeName:
          description: The name of the attribute being certified
          example: phoneNumber
          type: string
        attributeOperation:
          description: The operation of the certification on the attribute
          example: update
          type: string
        attributeValue:
          description: The value of the attribute being certified
          example: 512-555-1212
          type: string
        nativeIdentity:
          description: The native identity of the target
          example: jason.smith2
          type: string
      type: object
    SearchAttributeConfig:
      example:
        displayName: New Mail Attribute
        name: newMailAttribute
        applicationAttributes:
          "2c91808b79fd2422017a0b35d30f3968": employeeNumber
          "2c91808b79fd2422017a0b36008f396b": employeeNumber
      properties:
        name:
          description: Name of the new attribute
          example: newMailAttribute
          type: string
        displayName:
          description: The display name of the new attribute
          example: New Mail Attribute
          type: string
        applicationAttributes:
          description: Map of application id and their associated attribute.
          example:
            "2c91808b79fd2422017a0b35d30f3968": employeeNumber
            "2c91808b79fd2422017a0b36008f396b": employeeNumber
          type: object
      type: object
    WorkItems:
      example:
        requesterDisplayName: John Smith
        requesterId: 2c9180835d2e5168015d32f890ca1581
        created: 2017-07-11T18:45:37.098Z
        approvalItems:
          application: Active Directory
          name: emailAddress
          id: 2c9180835d2e5168015d32f890ca1581
          state: FINISHED
          operation: update
          value: a@b.com
          account: john.smith
        description: Create account on source 'AD'
        completed: 2018-10-19T13:49:37.385Z
        ownerId: 2c9180835d2e5168015d32f890ca1581
        type: GENERIC
        numItems: 19
        ownerName: Jason Smith
        remediationItems:
          targetName: john.smith
          targetId: 2c9180835d2e5168015d32f890ca1581
          attributeValue: 512-555-1212
          targetDisplayName: emailAddress
          attributeName: phoneNumber
          id: 2c9180835d2e5168015d32f890ca1581
          applicationName: Active Directory
          attributeOperation: update
          nativeIdentity: jason.smith2
        name: Account Create
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
        state: FINISHED
        errors:
        - The work item ID that was specified was not found.
      properties:
        id:
          description: ID of the work item
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        requesterId:
          description: ID of the requester
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        requesterDisplayName:
          description: The displayname of the requester
          example: John Smith
          type: string
        ownerId:
          description: The ID of the owner
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        ownerName:
          description: The name of the owner
          example: Jason Smith
          type: string
        created:
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        description:
          description: The description of the work item
          example: Create account on source 'AD'
          type: string
        state:
          $ref: '#/components/schemas/WorkItemState'
        type:
          $ref: '#/components/schemas/WorkItemType'
        remediationItems:
          $ref: '#/components/schemas/RemediationItemDetails'
        approvalItems:
          $ref: '#/components/schemas/ApprovalItemDetails'
        name:
          description: The work item name
          example: Account Create
          type: string
        completed:
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          type: string
        numItems:
          description: The number of items in the work item
          example: 19
          type: integer
        errors:
          example:
          - The work item ID that was specified was not found.
          items:
            type: string
          type: array
      type: object
    WorkItemsCount:
      example:
        count: 29
      properties:
        count:
          description: The count of work items
          example: 29
          type: integer
      type: object
    WorkItemsSummary:
      example:
        total: 30
        completed: 1
        open: 29
      properties:
        open:
          description: The count of open work items
          example: 29
          type: integer
        completed:
          description: The count of completed work items
          example: 1
          type: integer
        total:
          description: The count of total work items
          example: 30
          type: integer
      type: object
    Form:
      properties:
        id:
          description: ID of the form
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: Name of the form
          example: AccountSelection Form
          type: string
        title:
          description: The form title
          example: Account Selection for John.Doe
          type: string
        subtitle:
          description: The form subtitle.
          example: Please select from the following
          type: string
        targetUser:
          description: The name of the user that should be shown this form
          example: Jane.Doe
          type: string
        sections:
          $ref: '#/components/schemas/SectionDetails'
      type: object
    FormItem:
      properties:
        name:
          description: Name of the FormItem
          example: Field1
          type: string
      type: object
    Section:
      allOf:
      - $ref: '#/components/schemas/FormItemDetails'
      - properties:
          label:
            description: Label of the section
            example: Section 1
            type: string
          formItems:
            description: List of FormItems. FormItems can be SectionDetails and/or
              FieldDetails
            example: []
            items:
              type: object
            type: array
        type: object
      type: object
    Field:
      allOf:
      - $ref: '#/components/schemas/FormItemDetails'
      - properties:
          displayName:
            description: Display name of the field
            example: Field 1
            type: string
          displayType:
            description: Type of the field to display
            example: checkbox
            type: string
          required:
            description: True if the field is required
            type: boolean
          allowedValuesList:
            description: List of allowed values for the field
            example:
            - Val1Display: null
              Val1Value: null
            - Val2Display: null
              Val2Value: null
            items:
              type: object
            type: array
          value:
            description: Value of the field
            type: object
        type: object
      type: object
    AccountUsage:
      example:
        date: 2023-04-21T00:00:00.000+00:00
        count: 10
      properties:
        date:
          description: The first day of the month for which activity is aggregated.
          example: 2023-04-21
          format: date
          type: string
        count:
          description: The number of days within the month that the account was active
            in a source.
          example: 10
          format: int64
          type: integer
      type: object
    SourceUsage:
      example:
        date: 2023-04-21T00:00:00.000+00:00
        count: 10.45
      properties:
        date:
          description: The first day of the month for which activity is aggregated.
          example: 2023-04-21
          format: date
          type: string
        count:
          description: "The average number of days that accounts were active within\
            \ this source, for the month."
          example: 10.45
          format: float
          type: number
      type: object
    SourceUsageStatus:
      example:
        status: COMPLETE
      properties:
        status:
          description: |-
            Source Usage Status. Acceptable values are:
              - COMPLETE
                  - This status means that an activity data source has been setup and usage insights are available for the source.
              - INCOMPLETE
                  - This status means that an activity data source has not been setup and usage insights are not available for the source.
          enum:
          - COMPLETE
          - INCOMPLETE
          example: COMPLETE
          type: string
      type: object
    AccessProfile:
      description: Access Profile
      example:
        owner:
          name: support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        entitlements:
        - name: "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local"
          id: 2c91809773dee32014e13e122092014e
          type: ENTITLEMENT
        - name: "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local"
          id: 2c91809773dee32014e13e122092014e
          type: ENTITLEMENT
        created: 2021-03-01T22:32:58.104Z
        description: Collection of entitlements to read/write the employee database
        source:
          name: ODS-AD-SOURCE
          id: 2c91809773dee3610173fdb0b6061ef4
          type: SOURCE
        enabled: true
        revocationRequestConfig:
          approvalSchemes:
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
        segments:
        - f7b1b8a3-5fed-4fd4-ad29-82014e137e19
        - 29cb6c06-1da8-43ea-8be4-b3125f248f2a
        accessRequestConfig:
          commentsRequired: true
          approvalSchemes:
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          denialCommentsRequired: true
        name: Employee-database-read-write
        provisioningCriteria:
          children:
          - children:
            - attribute: email
              operation: EQUALS
              value: carlee.cert1c9f9b6fd@mailinator.com
            - attribute: email
              operation: EQUALS
              value: carlee.cert1c9f9b6fd@mailinator.com
            attribute: email
            operation: EQUALS
            value: carlee.cert1c9f9b6fd@mailinator.com
          - children:
            - attribute: email
              operation: EQUALS
              value: carlee.cert1c9f9b6fd@mailinator.com
            - attribute: email
              operation: EQUALS
              value: carlee.cert1c9f9b6fd@mailinator.com
            attribute: email
            operation: EQUALS
            value: carlee.cert1c9f9b6fd@mailinator.com
          attribute: email
          operation: EQUALS
          value: carlee.cert1c9f9b6fd@mailinator.com
        modified: 2021-03-02T20:22:28.104Z
        id: 2c91808a7190d06e01719938fcd20792
        requestable: true
      properties:
        id:
          description: The ID of the Access Profile
          example: 2c91808a7190d06e01719938fcd20792
          readOnly: true
          type: string
        name:
          description: Name of the Access Profile
          example: Employee-database-read-write
          type: string
        description:
          description: Information about the Access Profile
          example: Collection of entitlements to read/write the employee database
          nullable: true
          type: string
        created:
          description: Date the Access Profile was created
          example: 2021-03-01T22:32:58.104Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Date the Access Profile was last modified.
          example: 2021-03-02T20:22:28.104Z
          format: date-time
          readOnly: true
          type: string
        enabled:
          default: true
          description: Whether the Access Profile is enabled. If the Access Profile
            is enabled then you must include at least one Entitlement.
          example: true
          type: boolean
        owner:
          $ref: '#/components/schemas/OwnerReference'
        source:
          $ref: '#/components/schemas/AccessProfileSourceRef'
        entitlements:
          description: A list of entitlements associated with the Access Profile.
            If enabled is false this is allowed to be empty otherwise it needs to
            contain at least one Entitlement.
          items:
            $ref: '#/components/schemas/EntitlementRef'
          nullable: true
          type: array
        requestable:
          default: true
          description: "Whether the Access Profile is requestable via access request.\
            \ Currently, making an Access Profile non-requestable is only supported\
            \  for customers enabled with the new Request Center. Otherwise, attempting\
            \ to create an Access Profile with a value  **false** in this field results\
            \ in a 400 error."
          example: true
          type: boolean
        accessRequestConfig:
          $ref: '#/components/schemas/Requestability'
        revocationRequestConfig:
          $ref: '#/components/schemas/Revocability'
        segments:
          description: "List of IDs of segments, if any, to which this Access Profile\
            \ is assigned."
          example:
          - f7b1b8a3-5fed-4fd4-ad29-82014e137e19
          - 29cb6c06-1da8-43ea-8be4-b3125f248f2a
          items:
            type: string
          nullable: true
          type: array
        provisioningCriteria:
          $ref: '#/components/schemas/ProvisioningCriteriaLevel1'
      required:
      - name
      - owner
      - source
      type: object
    ErrorResponseDto:
      properties:
        detailCode:
          description: Fine-grained error code providing more detail of the error.
          example: 400.1 Bad Request Content
          type: string
        trackingId:
          description: Unique tracking id for the error.
          example: e7eab60924f64aa284175b9fa3309599
          type: string
        messages:
          description: Generic localized reason for error
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
        causes:
          description: Plain-text descriptive reasons to provide additional detail
            to the text provided in the messages field
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
      type: object
    JsonPatchOperation:
      description: "A JSONPatch Operation as defined by [RFC 6902 - JSON Patch](https://tools.ietf.org/html/rfc6902)"
      example:
        op: replace
        path: /description
        value: New description
      properties:
        op:
          description: The operation to be performed
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          - test
          example: replace
          type: string
        path:
          description: A string JSON Pointer representing the target path to an element
            to be affected by the operation
          example: /description
          type: string
        value:
          $ref: '#/components/schemas/JsonPatchOperation_value'
      required:
      - op
      - path
      type: object
    AccessProfileBulkDeleteRequest:
      example:
        accessProfileIds:
        - 2c9180847812e0b1017817051919ecca
        - 2c9180887812e0b201781e129f151816
        bestEffortOnly: true
      properties:
        accessProfileIds:
          description: List of IDs of Access Profiles to be deleted.
          example:
          - 2c9180847812e0b1017817051919ecca
          - 2c9180887812e0b201781e129f151816
          items:
            type: string
          type: array
        bestEffortOnly:
          description: "If **true**, silently skip over any of the specified Access\
            \ Profiles if they cannot be deleted because they are in use. If **false**,\
            \ no deletions will be attempted if any of the Access Profiles are in\
            \ use."
          example: true
          type: boolean
      type: object
    AccessProfileBulkDeleteResponse:
      example:
        pending:
        - 2c91808876438bbb017668c21919ecca
        - 2c91808876438bb201766e129f151816
        inUse:
        - accessProfileId: 2c91808876438bbb017668c21919ecca
          usedBy:
          - name: Manager Role
            id: 2c8180857a9b3da0017aa03418480f9d
            type: ROLE
          - name: Manager Role
            id: 2c8180857a9b3da0017aa03418480f9d
            type: ROLE
        - accessProfileId: 2c91808876438bbb017668c21919ecca
          usedBy:
          - name: Manager Role
            id: 2c8180857a9b3da0017aa03418480f9d
            type: ROLE
          - name: Manager Role
            id: 2c8180857a9b3da0017aa03418480f9d
            type: ROLE
        taskId: 2c9180867817ac4d017817c491119a20
      properties:
        taskId:
          description: ID of the task which is executing the bulk deletion. This can
            be passed to the **/task-status** API to track status.
          example: 2c9180867817ac4d017817c491119a20
          type: string
        pending:
          description: List of IDs of Access Profiles which are pending deletion.
          example:
          - 2c91808876438bbb017668c21919ecca
          - 2c91808876438bb201766e129f151816
          items:
            type: string
          type: array
        inUse:
          description: List of usages of Access Profiles targeted for deletion.
          items:
            $ref: '#/components/schemas/AccessProfileUsage'
          type: array
      type: object
    Entitlement:
      example:
        owner:
          name: identity 1
          id: 2a2fdacca5e345f18bf7970cfbb8fec2
          type: IDENTITY
        created: 2020-10-08T18:33:52.029Z
        description: "CN=LauncherTest2,OU=LauncherTestOrg,OU=slpt-automation,DC=TestAutomationAD,DC=local"
        source:
          name: ODS-AD-Source
          id: 2c9180827ca885d7017ca8ce28a000eb
          type: SOURCE
        segments:
        - f7b1b8a3-5fed-4fd4-ad29-82014e137e19
        - 29cb6c06-1da8-43ea-8be4-b3125f248f2a
        privileged: true
        directPermissions:
        - rights:
          - SELECT
          - SELECT
          target: SYS.GV_$TRANSACTION
        - rights:
          - SELECT
          - SELECT
          target: SYS.GV_$TRANSACTION
        manuallyUpdatedFields:
          DESCRIPTION: true
          DISPLAY_NAME: true
        name: LauncherTest2
        modified: 2020-10-08T18:33:52.029Z
        sourceSchemaObjectType: group
        attributes:
          fieldName: fieldValue
        id: 2c91808874ff91550175097daaec161c
        attribute: memberOf
        requestable: true
        value: "CN=LauncherTest2,OU=LauncherTestOrg,OU=slpt-automation,DC=TestAutomationAD,DC=local"
        cloudGoverned: true
      properties:
        id:
          description: The entitlement id
          example: 2c91808874ff91550175097daaec161c
          type: string
        name:
          description: The entitlement name
          example: LauncherTest2
          type: string
        created:
          description: Time when the entitlement was created
          example: 2020-10-08T18:33:52.029Z
          format: date-time
          type: string
        modified:
          description: Time when the entitlement was last modified
          example: 2020-10-08T18:33:52.029Z
          format: date-time
          type: string
        attribute:
          description: The entitlement attribute name
          example: memberOf
          type: string
        value:
          description: The value of the entitlement
          example: "CN=LauncherTest2,OU=LauncherTestOrg,OU=slpt-automation,DC=TestAutomationAD,DC=local"
          type: string
        sourceSchemaObjectType:
          description: The object type of the entitlement from the source schema
          example: group
          type: string
        privileged:
          default: false
          description: True if the entitlement is privileged
          example: true
          type: boolean
        cloudGoverned:
          default: false
          description: True if the entitlement is cloud governed
          example: true
          type: boolean
        description:
          description: The description of the entitlement
          example: "CN=LauncherTest2,OU=LauncherTestOrg,OU=slpt-automation,DC=TestAutomationAD,DC=local"
          type: string
        requestable:
          default: false
          description: True if the entitlement is requestable
          example: true
          type: boolean
        attributes:
          additionalProperties: true
          description: A map of free-form key-value pairs from the source system
          example:
            fieldName: fieldValue
          type: object
        source:
          $ref: '#/components/schemas/Entitlement_source'
        owner:
          $ref: '#/components/schemas/OwnerReferenceDto'
        directPermissions:
          items:
            $ref: '#/components/schemas/PermissionDto'
          type: array
        segments:
          description: "List of IDs of segments, if any, to which this Entitlement\
            \ is assigned."
          example:
          - f7b1b8a3-5fed-4fd4-ad29-82014e137e19
          - 29cb6c06-1da8-43ea-8be4-b3125f248f2a
          items:
            type: string
          nullable: true
          type: array
        manuallyUpdatedFields:
          $ref: '#/components/schemas/ManuallyUpdatedFieldsDTO'
      type: object
    AccessRequest:
      example:
        requestedFor:
        - 2c918084660f45d6016617daa9210584
        - 2c918084660f45d6016617daa9210584
        clientMetadata:
          requestedAppId: 2c91808f7892918f0178b78da4a305a1
          requestedAppName: test-app
        requestType: GRANT_ACCESS
        requestedItems:
        - clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          removeDate: 2020-07-11T21:23:15Z
          comment: Requesting access profile for John Doe
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
        - clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          removeDate: 2020-07-11T21:23:15Z
          comment: Requesting access profile for John Doe
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
      properties:
        requestedFor:
          description: "A list of Identity IDs for whom the Access is requested. If\
            \ it's a Revoke request, there can only be one Identity ID."
          items:
            example: 2c918084660f45d6016617daa9210584
            type: string
          type: array
        requestType:
          $ref: '#/components/schemas/AccessRequestType'
        requestedItems:
          items:
            $ref: '#/components/schemas/AccessRequestItem'
          type: array
        clientMetadata:
          additionalProperties:
            example: "{requestedAppId=2c91808f7892918f0178b78da4a305a1, requestedAppName=test-app}"
            type: string
          description: Arbitrary key-value pairs. They will never be processed by
            the IdentityNow system but will be returned on associated APIs such as
            /account-activities.
          example:
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
            requestedAppName: test-app
          type: object
      required:
      - requestedFor
      - requestedItems
      type: object
    CancelAccessRequest:
      description: Request body payload for cancel access request endpoint.
      example:
        accountActivityId: 2c9180835d2e5168015d32f890ca1581
        comment: I requested this role by mistake.
      properties:
        accountActivityId:
          description: "This refers to the identityRequestId. To successfully cancel\
            \ an access request, you must provide the identityRequestId."
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        comment:
          description: Reason for cancelling the pending access request.
          example: I requested this role by mistake.
          type: string
      required:
      - accountActivityId
      - comment
      type: object
    CloseAccessRequest:
      description: Request body payload for close access requests endpoint.
      example:
        executionStatus: Terminated
        accessRequestIds:
        - 2c90ad2a70ace7d50170acf22ca90010
        completionStatus: Failure
        message: The IdentityNow Administrator manually closed this request.
      properties:
        accessRequestIds:
          description: Access Request IDs for the requests to be closed. Accepts 1-500
            Identity Request IDs per request.
          example:
          - 2c90ad2a70ace7d50170acf22ca90010
          items:
            type: string
          type: array
        message:
          default: The IdentityNow Administrator manually closed this request.
          description: Reason for closing the access request. Displayed under Warnings
            in IdentityNow.
          example: The IdentityNow Administrator manually closed this request.
          type: string
        executionStatus:
          default: Terminated
          description: The request's provisioning status. Displayed as Stage in IdentityNow.
          enum:
          - Terminated
          - Completed
          example: Terminated
          type: string
        completionStatus:
          default: Failure
          description: The request's overall status. Displayed as Status in IdentityNow.
          enum:
          - Success
          - Incomplete
          - Failure
          example: Failure
          type: string
      required:
      - accessRequestIds
      type: object
    AccessRequestConfig:
      example:
        requestOnBehalfOfConfig:
          allowRequestOnBehalfOfEmployeeByManager: true
          allowRequestOnBehalfOfAnyoneByAnyone: true
        approvalReminderAndEscalationConfig:
          fallbackApproverRef:
            name: Alison Ferguso
            id: 5168015d32f890ca15812c9180835d2e
            type: IDENTITY
            email: alison.ferguso@identitysoon.com
          maxReminders: 1
          daysUntilEscalation: 0
          daysBetweenReminders: 0
        autoApprovalEnabled: true
        entitlementRequestConfig:
          requestCommentsRequired: false
          deniedCommentsRequired: false
          allowEntitlementRequest: true
          grantRequestApprovalSchemes: "entitlementOwner, sourceOwner, manager, workgroup:2c918084660f45d6016617daa9210584"
        approvalsMustBeExternal: true
      properties:
        approvalsMustBeExternal:
          description: "If true, then approvals must be processed by external system."
          example: true
          type: boolean
        autoApprovalEnabled:
          description: "If true and requester and reviewer are the same, then automatically\
            \ approve the approval."
          example: true
          type: boolean
        requestOnBehalfOfConfig:
          $ref: '#/components/schemas/RequestOnBehalfOfConfig'
        approvalReminderAndEscalationConfig:
          $ref: '#/components/schemas/ApprovalReminderAndEscalationConfig'
        entitlementRequestConfig:
          $ref: '#/components/schemas/EntitlementRequestConfig_1'
      type: object
    RequestedItemStatus:
      example:
        requester:
          name: William Wilson
          id: 2c7180a46faadee4016fb4e018c20648
          type: IDENTITY
        requestedFor:
          name: Robert Robinson
          id: 2c4180a46faadee4016fb4e018c20626
          type: IDENTITY
        removeDate: 2019-10-23T00:00:00Z
        clientMetadata:
          key1: value1
          key2: value2
        approvalDetails:
        - errorMessages:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          removeDate: 2020-07-11T00:00:00Z
          originalOwner:
            name: Michael Michaels
            id: 2c7180a46faadee4016fb4e018c20642
            type: IDENTITY
          scheme: MANAGER
          currentOwner:
            name: Allen Albertson
            id: 2c3780a46faadee4016fb4e018c20652
            type: IDENTITY
          modified: 2019-08-23T18:52:57.398Z
          comment: I approve this request
          forwarded: false
          status: PENDING
        - errorMessages:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          removeDate: 2020-07-11T00:00:00Z
          originalOwner:
            name: Michael Michaels
            id: 2c7180a46faadee4016fb4e018c20642
            type: IDENTITY
          scheme: MANAGER
          currentOwner:
            name: Allen Albertson
            id: 2c3780a46faadee4016fb4e018c20652
            type: IDENTITY
          modified: 2019-08-23T18:52:57.398Z
          comment: I approve this request
          forwarded: false
          status: PENDING
        cancelable: true
        requestType: GRANT_ACCESS
        created: 2019-08-23T18:40:35.772Z
        requesterComment:
          created: 2017-07-11T18:45:37.098Z
          comment: This is a comment.
        preApprovalTriggerDetails:
          decision: APPROVED
          comment: Access is Approved
          reviewer: John Doe
        description: This is the Engineering role that engineers are granted.
        type: ACCESS_PROFILE
        errorMessages:
        - null
        - null
        sodViolationContext:
          violationCheckResult:
            clientMetadata:
              requestedAppName: test-app
              requestedAppId: 2c91808f7892918f0178b78da4a305a1
            violationContexts:
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: Business SOD Policy
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                type: SOD_POLICY
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: Business SOD Policy
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                type: SOD_POLICY
            violatedPolicies:
            - name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
            - name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
            message:
              localeOrigin: DEFAULT
              text: The request was syntactically correct but its content is semantically
                invalid.
              locale: en-US
          state: SUCCESS
          uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
        cancelledRequestDetails:
          owner:
            name: Support
            id: 2c9180a46faadee4016fb4e018c20639
            type: IDENTITY
          modified: 2019-12-20T09:17:12.192Z
          comment: This request must be cancelled.
        accessRequestId: 2b838de9-db9b-abcf-e646-d4f274ad4238
        provisioningDetails:
          orderedSubPhaseReferences: manualWorkItemDetails
        accountActivityItemId: 2c9180926cbfbddd016cbfc7c3b10010
        name: AccessProfile1
        manualWorkItemDetails:
        - originalOwner:
            name: Michael Michaels
            id: 2c7180a46faadee4016fb4e018c20642
            type: IDENTITY
          currentOwner:
            name: Allen Albertson
            id: 2c3780a46faadee4016fb4e018c20652
            type: IDENTITY
          modified: 2019-08-23T18:52:57.398Z
          forwardHistory:
          - forwarderName: William Wilson
            reassignmentType: AUTOMATIC_REASSIGNMENT
            modified: 2019-08-23T18:52:57.398Z
            oldApproverName: Frank Mir
            newApproverName: Al Volta
            comment: Forwarding from Frank to Al
          - forwarderName: William Wilson
            reassignmentType: AUTOMATIC_REASSIGNMENT
            modified: 2019-08-23T18:52:57.398Z
            oldApproverName: Frank Mir
            newApproverName: Al Volta
            comment: Forwarding from Frank to Al
          forwarded: true
          status: PENDING
        - originalOwner:
            name: Michael Michaels
            id: 2c7180a46faadee4016fb4e018c20642
            type: IDENTITY
          currentOwner:
            name: Allen Albertson
            id: 2c3780a46faadee4016fb4e018c20652
            type: IDENTITY
          modified: 2019-08-23T18:52:57.398Z
          forwardHistory:
          - forwarderName: William Wilson
            reassignmentType: AUTOMATIC_REASSIGNMENT
            modified: 2019-08-23T18:52:57.398Z
            oldApproverName: Frank Mir
            newApproverName: Al Volta
            comment: Forwarding from Frank to Al
          - forwarderName: William Wilson
            reassignmentType: AUTOMATIC_REASSIGNMENT
            modified: 2019-08-23T18:52:57.398Z
            oldApproverName: Frank Mir
            newApproverName: Al Volta
            comment: Forwarding from Frank to Al
          forwarded: true
          status: PENDING
        modified: 2019-08-23T18:52:59.162Z
        state: EXECUTING
        accessRequestPhases:
        - result: SUCCESSFUL
          phaseReference: approvalDetails
          name: APPROVAL_PHASE
          started: 2020-07-11T00:00:00Z
          finished: 2020-07-12T00:00:00Z
          state: COMPLETED
        - result: SUCCESSFUL
          phaseReference: approvalDetails
          name: APPROVAL_PHASE
          started: 2020-07-11T00:00:00Z
          finished: 2020-07-12T00:00:00Z
          state: COMPLETED
      properties:
        name:
          description: Human-readable display name of the item being requested.
          example: AccessProfile1
          type: string
        type:
          description: Type of requested object.
          enum:
          - ACCESS_PROFILE
          - ROLE
          - ENTITLEMENT
          example: ACCESS_PROFILE
          type: string
        cancelledRequestDetails:
          $ref: '#/components/schemas/CancelledRequestDetails'
        errorMessages:
          description: "List of list of localized error messages, if any, encountered\
            \ during the approval/provisioning process."
          items:
            $ref: '#/components/schemas/ErrorMessageDtoList'
          nullable: true
          type: array
        state:
          $ref: '#/components/schemas/RequestedItemStatusRequestState'
        approvalDetails:
          description: Approval details for each item.
          items:
            $ref: '#/components/schemas/ApprovalStatusDto'
          type: array
        manualWorkItemDetails:
          description: Manual work items created for provisioning the item.
          items:
            $ref: '#/components/schemas/ManualWorkItemDetails'
          nullable: true
          type: array
        accountActivityItemId:
          description: Id of associated account activity item.
          example: 2c9180926cbfbddd016cbfc7c3b10010
          type: string
        requestType:
          $ref: '#/components/schemas/AccessRequestType'
        modified:
          description: When the request was last modified.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        created:
          description: When the request was created.
          example: 2019-08-23T18:40:35.772Z
          format: date-time
          type: string
        requester:
          $ref: '#/components/schemas/AccessItemRequester'
        requestedFor:
          $ref: '#/components/schemas/AccessItemRequestedFor'
        requesterComment:
          $ref: '#/components/schemas/CommentDto_1'
        sodViolationContext:
          $ref: '#/components/schemas/SodViolationContextCheckCompleted'
        provisioningDetails:
          $ref: '#/components/schemas/ProvisioningDetails'
        preApprovalTriggerDetails:
          $ref: '#/components/schemas/PreApprovalTriggerDetails'
        accessRequestPhases:
          description: "A list of Phases that the Access Request has gone through\
            \ in order, to help determine the status of the request."
          items:
            $ref: '#/components/schemas/AccessRequestPhases'
          type: array
        description:
          description: Description associated to the requested object.
          example: This is the Engineering role that engineers are granted.
          type: string
        removeDate:
          description: When the role access is scheduled for removal.
          example: 2019-10-23T00:00:00Z
          format: date-time
          nullable: true
          type: string
        cancelable:
          description: True if the request can be canceled.
          example: true
          type: boolean
        accessRequestId:
          description: This is the account activity id.
          example: 2b838de9-db9b-abcf-e646-d4f274ad4238
          format: string
          type: string
        clientMetadata:
          additionalProperties:
            type: string
          description: "Arbitrary key-value pairs, if any were included in the corresponding\
            \ access request"
          example:
            key1: value1
            key2: value2
          nullable: true
          type: object
      type: object
    PendingApproval:
      example:
        requester:
          name: William Wilson
          id: 2c7180a46faadee4016fb4e018c20648
          type: IDENTITY
        requestedFor:
          name: Robert Robinson
          id: 2c4180a46faadee4016fb4e018c20626
          type: IDENTITY
        owner:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        removeDate: 2020-07-11T00:00:00Z
        requestType: GRANT_ACCESS
        commentRequiredWhenRejected: true
        created: 2017-07-11T18:45:37.098Z
        previousReviewersComments:
        - created: 2017-07-11T18:45:37.098Z
          comment: This is a comment.
        - created: 2017-07-11T18:45:37.098Z
          comment: This is a comment.
        requesterComment:
          created: 2017-07-11T18:45:37.098Z
          comment: This is a comment.
        currentRemoveDate: 2020-07-11T00:00:00Z
        requestedObject:
          name: Object Name
          description: Object Description
          id: 2c938083633d259901633d25c68c00fa
          type: ROLE
        sodViolationContext:
          violationCheckResult:
            clientMetadata:
              requestedAppName: test-app
              requestedAppId: 2c91808f7892918f0178b78da4a305a1
            violationContexts:
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: Business SOD Policy
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                type: SOD_POLICY
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: Business SOD Policy
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                type: SOD_POLICY
            violatedPolicies:
            - name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
            - name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
            message:
              localeOrigin: DEFAULT
              text: The request was syntactically correct but its content is semantically
                invalid.
              locale: en-US
          state: SUCCESS
          uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
        requestCreated: 2017-07-11T18:45:35.098Z
        actionInProcess: APPROVED
        name: Pending approval name
        modified: 2018-07-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
        forwardHistory:
        - forwarderName: William Wilson
          reassignmentType: AUTOMATIC_REASSIGNMENT
          modified: 2019-08-23T18:52:57.398Z
          oldApproverName: Frank Mir
          newApproverName: Al Volta
          comment: Forwarding from Frank to Al
        - forwarderName: William Wilson
          reassignmentType: AUTOMATIC_REASSIGNMENT
          modified: 2019-08-23T18:52:57.398Z
          oldApproverName: Frank Mir
          newApproverName: Al Volta
          comment: Forwarding from Frank to Al
        removeDateUpdateRequested: true
      properties:
        id:
          description: The approval id.
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: The name of the approval.
          example: Pending approval name
          type: string
        created:
          description: When the approval was created.
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: When the approval was modified last time.
          example: 2018-07-25T20:22:28.104Z
          format: date-time
          type: string
        requestCreated:
          description: When the access-request was created.
          example: 2017-07-11T18:45:35.098Z
          format: date-time
          type: string
        requestType:
          $ref: '#/components/schemas/AccessRequestType'
        requester:
          $ref: '#/components/schemas/AccessItemRequesterDto'
        requestedFor:
          $ref: '#/components/schemas/AccessItemRequestedForDto'
        owner:
          $ref: '#/components/schemas/AccessItemOwnerDto'
        requestedObject:
          $ref: '#/components/schemas/RequestableObjectReference'
        requesterComment:
          $ref: '#/components/schemas/CommentDto_1'
        previousReviewersComments:
          description: The history of the previous reviewers comments.
          items:
            $ref: '#/components/schemas/CommentDto_1'
          type: array
        forwardHistory:
          description: The history of approval forward action.
          items:
            $ref: '#/components/schemas/ApprovalForwardHistory'
          type: array
        commentRequiredWhenRejected:
          description: When true the rejector has to provide comments when rejecting
          example: true
          type: boolean
        actionInProcess:
          $ref: '#/components/schemas/PendingApprovalAction'
        removeDate:
          description: The date the role or access profile is no longer assigned to
            the specified identity.
          example: 2020-07-11T00:00:00Z
          format: date-time
          type: string
        removeDateUpdateRequested:
          description: "If true, then the request is to change the remove date or\
            \ sunset date."
          example: true
          type: boolean
        currentRemoveDate:
          description: The remove date or sunset date that was assigned at the time
            of the request.
          example: 2020-07-11T00:00:00Z
          format: date-time
          type: string
        sodViolationContext:
          $ref: '#/components/schemas/SodViolationContextCheckCompleted_1'
      type: object
    CompletedApproval:
      example:
        requester:
          name: William Wilson
          id: 2c7180a46faadee4016fb4e018c20648
          type: IDENTITY
        requestedFor:
          name: Robert Robinson
          id: 2c4180a46faadee4016fb4e018c20626
          type: IDENTITY
        owner:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        reviewerComment: null
        removeDate: 2020-07-11T00:00:00Z
        requestType: GRANT_ACCESS
        commentRequiredWhenRejected: true
        created: 2017-07-11T18:45:37.098Z
        previousReviewersComments:
        - created: 2017-07-11T18:45:37.098Z
          comment: This is a comment.
        - created: 2017-07-11T18:45:37.098Z
          comment: This is a comment.
        requesterComment:
          created: 2017-07-11T18:45:37.098Z
          comment: This is a comment.
        currentRemoveDate: 2020-07-11T00:00:00Z
        reviewedBy:
          name: Allen Albertson
          id: 2c3780a46faadee4016fb4e018c20652
          type: IDENTITY
        requestedObject:
          name: Object Name
          description: Object Description
          id: 2c938083633d259901633d25c68c00fa
          type: ROLE
        sodViolationContext:
          violationCheckResult:
            clientMetadata:
              requestedAppName: test-app
              requestedAppId: 2c91808f7892918f0178b78da4a305a1
            violationContexts:
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: Business SOD Policy
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                type: SOD_POLICY
            - conflictingAccessCriteria:
                leftCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                rightCriteria:
                  criteriaList:
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
                  - existing: true
                    name: My HR Entitlement
                    id: 2c918085771e9d3301773b3cb66f6398
                    type: IDENTITY
              policy:
                name: Business SOD Policy
                id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
                type: SOD_POLICY
            violatedPolicies:
            - name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
            - name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
            message:
              localeOrigin: DEFAULT
              text: The request was syntactically correct but its content is semantically
                invalid.
              locale: en-US
          state: SUCCESS
          uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
        requestCreated: 2017-07-11T18:45:35.098Z
        name: Approval Name
        modified: 2018-07-25T20:22:28.104Z
        id: 2c938083633d259901633d25c68c00fa
        forwardHistory:
        - forwarderName: William Wilson
          reassignmentType: AUTOMATIC_REASSIGNMENT
          modified: 2019-08-23T18:52:57.398Z
          oldApproverName: Frank Mir
          newApproverName: Al Volta
          comment: Forwarding from Frank to Al
        - forwarderName: William Wilson
          reassignmentType: AUTOMATIC_REASSIGNMENT
          modified: 2019-08-23T18:52:57.398Z
          oldApproverName: Frank Mir
          newApproverName: Al Volta
          comment: Forwarding from Frank to Al
        state: APPROVED
        removeDateUpdateRequested: true
      properties:
        id:
          description: The approval id.
          example: 2c938083633d259901633d25c68c00fa
          type: string
        name:
          description: The name of the approval.
          example: Approval Name
          type: string
        created:
          description: When the approval was created.
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: When the approval was modified last time.
          example: 2018-07-25T20:22:28.104Z
          format: date-time
          type: string
        requestCreated:
          description: When the access-request was created.
          example: 2017-07-11T18:45:35.098Z
          format: date-time
          type: string
        requestType:
          $ref: '#/components/schemas/AccessRequestType'
        requester:
          $ref: '#/components/schemas/AccessItemRequesterDto'
        requestedFor:
          $ref: '#/components/schemas/AccessItemRequestedForDto'
        reviewedBy:
          $ref: '#/components/schemas/CompletedApproval_reviewedBy'
        owner:
          $ref: '#/components/schemas/AccessItemOwnerDto'
        requestedObject:
          $ref: '#/components/schemas/RequestableObjectReference'
        requesterComment:
          $ref: '#/components/schemas/CommentDto_1'
        reviewerComment:
          $ref: '#/components/schemas/CompletedApproval_reviewerComment'
        previousReviewersComments:
          description: The history of the previous reviewers comments.
          items:
            $ref: '#/components/schemas/CommentDto_1'
          type: array
        forwardHistory:
          description: The history of approval forward action.
          items:
            $ref: '#/components/schemas/ApprovalForwardHistory'
          type: array
        commentRequiredWhenRejected:
          description: When true the rejector has to provide comments when rejecting
          example: true
          type: boolean
        state:
          $ref: '#/components/schemas/CompletedApprovalState'
        removeDate:
          description: The date the role or access profile is no longer assigned to
            the specified identity.
          example: 2020-07-11T00:00:00Z
          format: date-time
          nullable: true
          type: string
        removeDateUpdateRequested:
          description: "If true, then the request was to change the remove date or\
            \ sunset date."
          example: true
          type: boolean
        currentRemoveDate:
          description: The remove date or sunset date that was assigned at the time
            of the request.
          example: 2020-07-11T00:00:00Z
          format: date-time
          nullable: true
          type: string
        sodViolationContext:
          $ref: '#/components/schemas/SodViolationContextCheckCompleted_1'
      type: object
    CommentDto:
      example:
        author:
          name: Adam Kennedy
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        created: 2017-07-11T18:45:37.098Z
        comment: This is a comment.
      properties:
        comment:
          description: Comment content.
          example: This is a comment.
          nullable: true
          type: string
        author:
          $ref: '#/components/schemas/CommentDto_author'
        created:
          description: Date and time comment was created.
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
      type: object
    ForwardApprovalDto:
      example:
        newOwnerId: newOwnerId
        comment: comment
      properties:
        newOwnerId:
          description: The Id of the new owner
          maxLength: 255
          minLength: 1
          type: string
        comment:
          description: The comment provided by the forwarder
          maxLength: 255
          minLength: 1
          type: string
      required:
      - comment
      - newOwnerId
      type: object
    ApprovalSummary:
      example:
        approved: 6
        rejected: 1
        pending: 0
      properties:
        pending:
          description: The number of pending access requests approvals.
          type: integer
        approved:
          description: The number of approved access requests approvals.
          type: integer
        rejected:
          description: The number of rejected access requests approvals.
          type: integer
      type: object
    AccessRequestRecommendationItemDetail:
      example:
        ignored: true
        requested: true
        access:
          name: Employee-database-read-write
          description: This item grants an employee read and write access to the database
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
        translationMessages:
        - key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH
          values:
          - "75"
          - department
        identityId: 2c91808570313110017040b06f344ec9
        viewed: true
        messages:
        - interpretation: 95% of your peers have this access.
        - interpretation: 95% of your peers have this access.
      properties:
        identityId:
          description: Identity ID for the recommendation
          example: 2c91808570313110017040b06f344ec9
          format: UUID
          type: string
        access:
          $ref: '#/components/schemas/AccessRequestRecommendationItemDetail_access'
        ignored:
          description: Whether or not the identity has already chosen to ignore this
            recommendation.
          example: true
          type: boolean
        requested:
          description: Whether or not the identity has already chosen to request this
            recommendation.
          example: true
          type: boolean
        viewed:
          description: Whether or not the identity reportedly viewed this recommendation.
          example: true
          type: boolean
        messages:
          items:
            $ref: '#/components/schemas/AccessRecommendationMessage'
          type: array
        translationMessages:
          description: The list of translation messages
          example:
          - key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH
            values:
            - "75"
            - department
          items:
            $ref: '#/components/schemas/TranslationMessage'
          type: array
      type: object
    AccessRequestRecommendationActionItemResponseDto:
      example:
        access:
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
        identityId: 2c91808570313110017040b06f344ec9
        timestamp: 2017-07-11T18:45:37.098Z
      properties:
        identityId:
          description: The identity ID taking the action.
          example: 2c91808570313110017040b06f344ec9
          format: UUID
          type: string
        access:
          $ref: '#/components/schemas/AccessRequestRecommendationItem'
        timestamp:
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
      type: object
    AccessRequestRecommendationActionItemDto:
      example:
        access:
          id: 2c9180835d2e5168015d32f890ca1581
          type: ACCESS_PROFILE
        identityId: 2c91808570313110017040b06f344ec9
      properties:
        identityId:
          description: The identity ID taking the action.
          example: 2c91808570313110017040b06f344ec9
          format: UUID
          type: string
        access:
          $ref: '#/components/schemas/AccessRequestRecommendationItem'
      required:
      - access
      - identityId
      type: object
    SlimAccount:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - properties:
          uuid:
            description: Unique ID from the owning source
            format: uuid
            nullable: true
            type: string
          nativeIdentity:
            description: The native identifier of the account
            example: brandin.gray
            type: string
          description:
            description: The description for the account
            example: Brandin Gray the CEO of Silly Inc.
            nullable: true
            type: string
          disabled:
            description: Whether the account is disabled
            example: false
            type: boolean
          locked:
            description: Whether the account is locked
            example: false
            type: boolean
          manuallyCorrelated:
            description: Whether the account was manually correlated
            example: false
            type: boolean
          hasEntitlements:
            description: Whether the account has any entitlements associated with
              it
            example: true
            type: boolean
          sourceId:
            description: The ID of the source for which this account belongs
            example: 2c9180835d2e5168015d32f890ca1581
            type: string
          sourceName:
            description: The name of the source
            example: Large Source
            type: string
          identityId:
            description: The ID of the identity for which this account is correlated
              to if not uncorrelated
            example: 4b9163835d2e5168015d32f890ca5936
            type: string
          attributes:
            additionalProperties: true
            description: A map containing attributes associated with the account
            example:
              firstName: SailPoint
              lastName: Support
              displayName: SailPoint Support
            type: object
        type: object
      title: Slim Account
      type: object
    FullAccount:
      allOf:
      - $ref: '#/components/schemas/SlimAccount'
      - properties:
          authoritative:
            description: Whether this account belongs to an authoritative source
            example: false
            type: boolean
          systemAccount:
            description: Whether this account is for the IdentityNow source
            example: false
            type: boolean
          uncorrelated:
            description: True if this account is not correlated to an identity
            example: false
            type: boolean
          features:
            description: A string list containing the owning source's features
            example: ENABLE
            type: string
        type: object
      title: Full Account
      type: object
    AccountAttributesCreate:
      example:
        attributes:
          sourceId: 34bfcbe116c9407464af37acbaf7a4dc
          city: Austin
          displayName: John Doe
          userName: jdoe
          sAMAccountName: jDoe
          mail: john.doe@sailpoint.com
      properties:
        attributes:
          $ref: '#/components/schemas/AccountAttributesCreate_attributes'
      required:
      - attributes
      type: object
    AccountsAsyncResult:
      description: Accounts async response containing details on started async process
      example:
        id: 2c91808474683da6017468693c260195
      properties:
        id:
          description: id of the task
          example: 2c91808474683da6017468693c260195
          type: string
      required:
      - id
      type: object
    Account:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - properties:
          sourceId:
            description: The unique ID of the source this account belongs to
            example: 2c9180835d2e5168015d32f890ca1581
            type: string
          sourceName:
            description: The display name of the source this account belongs to
            example: Employees
            type: string
          identityId:
            description: The unique ID of the identity this account is correlated
              to
            example: 2c9180835d2e5168015d32f890ca1581
            type: string
          attributes:
            additionalProperties: true
            description: The account attributes that are aggregated
            example:
              firstName: SailPoint
              lastName: Support
              displayName: SailPoint Support
            type: object
          authoritative:
            description: Indicates if this account is from an authoritative source
            example: false
            type: boolean
          description:
            description: A description of the account
            nullable: true
            type: string
            example: null
          disabled:
            description: Indicates if the account is currently disabled
            example: false
            type: boolean
          locked:
            description: Indicates if the account is currently locked
            example: false
            type: boolean
          nativeIdentity:
            description: The unique ID of the account generated by the source system
            example: "552775"
            type: string
          systemAccount:
            description: "If true, this is a user account within IdentityNow.  If\
              \ false, this is an account from a source system."
            example: false
            type: boolean
          uncorrelated:
            description: Indicates if this account is not correlated to an identity
            example: false
            type: boolean
          uuid:
            description: The unique ID of the account as determined by the account
              schema
            example: slpt.support
            nullable: true
            type: string
          manuallyCorrelated:
            description: Indicates if the account has been manually correlated to
              an identity
            example: false
            type: boolean
          hasEntitlements:
            description: Indicates if the account has entitlements
            example: true
            type: boolean
        required:
        - attributes
        - authoritative
        - disabled
        - hasEntitlements
        - locked
        - manuallyCorrelated
        - nativeIdentity
        - sourceId
        - sourceName
        - systemAccount
        - uncorrelated
        type: object
    AccountAttributes:
      example:
        attributes:
          city: Austin
          displayName: John Doe
          userName: jdoe
          sAMAccountName: jDoe
          mail: john.doe@sailpoint.com
      properties:
        attributes:
          description: The schema attribute values for the account
          example:
            city: Austin
            displayName: John Doe
            userName: jdoe
            sAMAccountName: jDoe
            mail: john.doe@sailpoint.com
          type: object
      required:
      - attributes
      type: object
    AccountToggleRequest:
      description: Request used for account enable/disable
      example:
        forceProvisioning: false
        externalVerificationId: 3f9180835d2e5168015d32f890ca1581
      properties:
        externalVerificationId:
          description: "If set, an external process validates that the user wants\
            \ to proceed with this request."
          example: 3f9180835d2e5168015d32f890ca1581
          type: string
        forceProvisioning:
          description: "If set, provisioning updates the account attribute at the\
            \ source.   This option is used when the account is not synced to ensure\
            \ the attribute is updated."
          example: false
          type: boolean
      type: object
    AccountUnlockRequest:
      description: Request used for account unlock
      example:
        forceProvisioning: false
        externalVerificationId: 3f9180835d2e5168015d32f890ca1581
        unlockIDNAccount: false
      properties:
        externalVerificationId:
          description: "If set, an external process validates that the user wants\
            \ to proceed with this request."
          example: 3f9180835d2e5168015d32f890ca1581
          type: string
        unlockIDNAccount:
          description: "If set, the IDN account is unlocked after the workflow completes."
          example: false
          type: boolean
        forceProvisioning:
          description: "If set, provisioning updates the account attribute at the\
            \ source.   This option is used when the account is not synced to ensure\
            \ the attribute is updated."
          example: false
          type: boolean
      type: object
    IdentitiesAccountsBulkRequest:
      example:
        identityIds:
        - 2c91808384203c2d018437e631158308
        - 2c9180858082150f0180893dbaf553fe
      properties:
        identityIds:
          description: The ids of the identities for which enable/disable accounts.
          example:
          - 2c91808384203c2d018437e631158308
          - 2c9180858082150f0180893dbaf553fe
          items:
            type: string
          type: array
      type: object
    BulkIdentitiesAccountsResponse:
      description: Bulk response object.
      properties:
        id:
          description: Identifier of bulk request item.
          example: 2c9180858082150f0180893dbaf553fe
          type: string
        statusCode:
          description: Response status value.
          example: 404
          format: int32
          type: integer
        message:
          description: Status containing additional context information about failures.
          example: Referenced identity "2c9180858082150f0180893dbaf553fe" was not
            found.
          type: string
      type: object
    CancelableAccountActivity:
      example:
        clientMetadata:
          key: clientMetadata
        cancelable: true
        created: 2017-07-11T18:45:37.098Z
        cancelComment:
          date: 2017-07-11T18:45:37.098Z
          commenterName: Adam Kennedy
          body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat.
          commenterId: 2c918084660f45d6016617daa9210584
        warnings:
        - warnings
        - warnings
        executionStatus: COMPLETED
        completed: 2018-10-19T13:49:37.385Z
        type: appRequest
        targetIdentitySummary:
          identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
          name: SailPoint Services
          id: ff80818155fe8c080155fe8d925b0316
          completed: true
        name: 2c9180835d2e5168015d32f890ca1581
        requesterIdentitySummary:
          identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
          name: SailPoint Services
          id: ff80818155fe8c080155fe8d925b0316
          completed: true
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
        completionStatus: SUCCESS
        items:
        - approvalStatus: FINISHED
          reviewerComment:
            date: 2017-07-11T18:45:37.098Z
            commenterName: Adam Kennedy
            body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
              erat.
            commenterId: 2c918084660f45d6016617daa9210584
          sourceId: 2c91808363ef85290164000587130c0c
          clientMetadata:
            customKey1: custom value 1
            customKey2: custom value 2
          removeDate: 2020-07-11T00:00:00Z
          reviewerIdentitySummary:
            identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
            name: SailPoint Services
            id: ff80818155fe8c080155fe8d925b0316
            completed: true
          requesterComment:
            date: 2017-07-11T18:45:37.098Z
            commenterName: Adam Kennedy
            body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
              erat.
            commenterId: 2c918084660f45d6016617daa9210584
          accountRequestInfo:
            requestedObjectId: 2c91808563ef85690164001c31140c0c
            requestedObjectName: Treasury Analyst
            requestedObjectType: ACCESS_PROFILE
          nativeIdentity: Sandie.Camero
          requested: 2017-07-11T18:45:37.098Z
          provisioningStatus: PENDING
          name: 48c545831b264409a81befcabb0e3c5a
          id: 48c545831b264409a81befcabb0e3c5a
          attribute: detectedRoles
          operation: ADD
          value: "Treasury Analyst [AccessProfile-1529010191212]"
        - approvalStatus: FINISHED
          reviewerComment:
            date: 2017-07-11T18:45:37.098Z
            commenterName: Adam Kennedy
            body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
              erat.
            commenterId: 2c918084660f45d6016617daa9210584
          sourceId: 2c91808363ef85290164000587130c0c
          clientMetadata:
            customKey1: custom value 1
            customKey2: custom value 2
          removeDate: 2020-07-11T00:00:00Z
          reviewerIdentitySummary:
            identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
            name: SailPoint Services
            id: ff80818155fe8c080155fe8d925b0316
            completed: true
          requesterComment:
            date: 2017-07-11T18:45:37.098Z
            commenterName: Adam Kennedy
            body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
              erat.
            commenterId: 2c918084660f45d6016617daa9210584
          accountRequestInfo:
            requestedObjectId: 2c91808563ef85690164001c31140c0c
            requestedObjectName: Treasury Analyst
            requestedObjectType: ACCESS_PROFILE
          nativeIdentity: Sandie.Camero
          requested: 2017-07-11T18:45:37.098Z
          provisioningStatus: PENDING
          name: 48c545831b264409a81befcabb0e3c5a
          id: 48c545831b264409a81befcabb0e3c5a
          attribute: detectedRoles
          operation: ADD
          value: "Treasury Analyst [AccessProfile-1529010191212]"
        errors:
        - "sailpoint.connector.ConnectorException: java.lang.InterruptedException:\
          \ Timeout waiting for response to message 0 from client 57a4ab97-ab3f-4aef-9fe2-0eaf15c73d26\
          \ after 60 seconds."
      properties:
        id:
          description: ID of the account activity itself
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        created:
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        completed:
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          type: string
        completionStatus:
          $ref: '#/components/schemas/CompletionStatus'
        type:
          example: appRequest
          type: string
        requesterIdentitySummary:
          $ref: '#/components/schemas/IdentitySummary'
        targetIdentitySummary:
          $ref: '#/components/schemas/IdentitySummary'
        errors:
          example:
          - "sailpoint.connector.ConnectorException: java.lang.InterruptedException:\
            \ Timeout waiting for response to message 0 from client 57a4ab97-ab3f-4aef-9fe2-0eaf15c73d26\
            \ after 60 seconds."
          items:
            type: string
          type: array
        warnings:
          items:
            type: string
          type: array
          example: null
        items:
          items:
            $ref: '#/components/schemas/AccountActivityItem'
          type: array
        executionStatus:
          $ref: '#/components/schemas/ExecutionStatus'
        clientMetadata:
          additionalProperties:
            type: string
          description: "Arbitrary key-value pairs, if any were included in the corresponding\
            \ access request"
          type: object
        cancelable:
          description: Whether the account activity can be canceled before completion
          type: boolean
        cancelComment:
          $ref: '#/components/schemas/Comment'
      type: object
    AccountAggregationStatus:
      example:
        processedAccounts: 150
        start: 2021-01-31T14:30:05.104Z
        totalAccounts: 520
        status: ACCOUNTS_COLLECTED
      properties:
        start:
          description: When the aggregation started.
          example: 2021-01-31T14:30:05.104Z
          format: date-time
          type: string
        status:
          description: |
            STARTED - Aggregation started, but source account iteration has not completed.

            ACCOUNTS_COLLECTED - Source account iteration completed, but all accounts have not yet been processed.

            COMPLETED - Aggregation completed (*possibly with errors*).

            CANCELLED - Aggregation cancelled by user.

            RETRIED - Aggregation retried because of connectivity issues with the Virtual Appliance.

            TERMINATED - Aggregation marked as failed after 3 tries after connectivity issues with the Virtual Appliance.
          enum:
          - STARTED
          - ACCOUNTS_COLLECTED
          - COMPLETED
          - CANCELLED
          - RETRIED
          - TERMINATED
          example: ACCOUNTS_COLLECTED
          type: string
        totalAccounts:
          description: "The total number of *NEW, CHANGED and DELETED* accounts that\
            \ need to be processed for this aggregation. This does not include accounts\
            \ that were unchanged since the previous aggregation. This can be zero\
            \ if there were no new, changed or deleted accounts since the previous\
            \ aggregation. *Only available when status is ACCOUNTS_COLLECTED or COMPLETED.*"
          example: 520
          type: integer
        processedAccounts:
          description: "The number of *NEW, CHANGED and DELETED* accounts that have\
            \ been processed so far. This reflects the number of accounts that have\
            \ been processed at the time of the API call, and may increase on subsequent\
            \ API calls while the status is ACCOUNTS_COLLECTED. *Only available when\
            \ status is ACCOUNTS_COLLECTED or COMPLETED.*"
          example: 150
          type: integer
      type: object
    Campaign:
      allOf:
      - $ref: '#/components/schemas/slimcampaign'
      - properties:
          modified:
            description: Modified time of the campaign
            example: 2020-03-03T22:20:12.674Z
            format: date-time
            readOnly: true
            type: string
          correlatedStatus:
            description: The correlatedStatus of the campaign. Only SOURCE_OWNER campaigns
              can be Uncorrelated. An Uncorrelated certification campaign only includes
              Uncorrelated identities (An identity is uncorrelated if it has no accounts
              on an authoritative source).
            enum:
            - CORRELATED
            - UNCORRELATED
            example: CORRELATED
            type: object
          filter:
            $ref: '#/components/schemas/fullcampaign_allOf_filter'
          sunsetCommentsRequired:
            default: true
            description: Determines if comments on sunset date changes are required.
            example: true
            type: boolean
          sourceOwnerCampaignInfo:
            $ref: '#/components/schemas/fullcampaign_allOf_sourceOwnerCampaignInfo'
          searchCampaignInfo:
            $ref: '#/components/schemas/fullcampaign_allOf_searchCampaignInfo'
          roleCompositionCampaignInfo:
            $ref: '#/components/schemas/fullcampaign_allOf_roleCompositionCampaignInfo'
          sourcesWithOrphanEntitlements:
            description: A list of sources in the campaign that contain \"orphan entitlements\"
              (entitlements without a corresponding Managed Attribute). An empty list
              indicates the campaign has no orphan entitlements. Null indicates there
              may be unknown orphan entitlements in the campaign (the campaign was
              created before this feature was implemented).
            items:
              $ref: '#/components/schemas/fullcampaign_allOf_sourcesWithOrphanEntitlements'
            readOnly: true
            type: array
          mandatoryCommentRequirement:
            description: "Determines whether comments are required for decisions during\
              \ certification reviews. You can require comments for all decisions,\
              \ revoke-only decisions, or no decisions. By default, comments are not\
              \ required for decisions."
            enum:
            - ALL_DECISIONS
            - REVOKE_ONLY_DECISIONS
            - NO_DECISIONS
            example: NO_DECISIONS
            type: string
        type: object
      title: Campaign
      type: object
    DeleteCampaignsRequest:
      example:
        ids:
        - 2c9180887335cee10173490db1776c26
        - 2c9180836a712436016a7125a90c0021
      properties:
        ids:
          description: The ids of the campaigns to delete
          example:
          - 2c9180887335cee10173490db1776c26
          - 2c9180836a712436016a7125a90c0021
          items:
            type: string
          type: array
      type: object
    ActivateCampaignOptions:
      example:
        timeZone: -05:00
      properties:
        timeZone:
          default: Z
          description: "The timezone must be in a valid ISO 8601 format. Timezones\
            \ in ISO 8601 are represented as UTC (represented as 'Z') or as an offset\
            \ from UTC. The offset format can be +/-hh:mm, +/-hhmm, or +/-hh."
          example: -05:00
          type: string
      type: object
    CompleteCampaignOptions:
      example:
        autoCompleteAction: REVOKE
      properties:
        autoCompleteAction:
          default: APPROVE
          description: Determines whether to auto-approve(APPROVE) or auto-revoke(REVOKE)
            upon campaign completion.
          enum:
          - APPROVE
          - REVOKE
          example: REVOKE
          type: string
      type: object
    AdminReviewReassign:
      example:
        certificationIds:
        - af3859464779471211bb8424a563abc1
        - af3859464779471211bb8424a563abc2
        - af3859464779471211bb8424a563abc3
        reason: reassigned for some reason
        reassignTo:
          id: ef38f94347e94562b5bb8424a56397d8
          type: IDENTITY
      properties:
        certificationIds:
          description: List of certification IDs to reassign
          example:
          - af3859464779471211bb8424a563abc1
          - af3859464779471211bb8424a563abc2
          - af3859464779471211bb8424a563abc3
          items:
            type: string
          maxItems: 250
          minItems: 1
          type: array
        reassignTo:
          $ref: '#/components/schemas/AdminReviewReassign_reassignTo'
        reason:
          description: Comment to explain why the certification was reassigned
          example: reassigned for some reason
          type: string
      type: object
    CertificationTask:
      example:
        targetId: 2c918086719eec070171a7e3355a834c
        created: 2020-09-24T18:10:47.693Z
        targetType: CAMPAIGN
        id: 2c918086719eec070171a7e3355a360a
        type: ADMIN_REASSIGN
        errors:
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        status: QUEUED
      properties:
        id:
          description: The ID of the certification task.
          example: 2c918086719eec070171a7e3355a360a
          type: string
        type:
          description: The type of the certification task. More values may be added
            in the future.
          enum:
          - REASSIGN
          - ADMIN_REASSIGN
          - COMPLETE_CERTIFICATION
          - FINISH_CERTIFICATION
          - COMPLETE_CAMPAIGN
          - ACTIVATE_CAMPAIGN
          - CAMPAIGN_CREATE
          - CAMPAIGN_DELETE
          example: ADMIN_REASSIGN
          type: string
        targetType:
          description: The type of item that is being operated on by this task whose
            ID is stored in the targetId field.
          enum:
          - CERTIFICATION
          - CAMPAIGN
          example: CAMPAIGN
          type: string
        targetId:
          description: The ID of the item being operated on by this task.
          example: 2c918086719eec070171a7e3355a834c
          type: string
        status:
          description: The status of the task.
          enum:
          - QUEUED
          - IN_PROGRESS
          - SUCCESS
          - ERROR
          type: string
        errors:
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
        created:
          description: The date and time on which this task was created.
          example: 2020-09-24T18:10:47.693Z
          format: date-time
          type: string
      type: object
    CampaignReport:
      allOf:
      - $ref: '#/components/schemas/ReportResultReference'
      - properties:
          reportType:
            $ref: '#/components/schemas/ReportType'
          lastRunAt:
            description: The most recent date and time this report was run
            format: date-time
            readOnly: true
            type: string
        type: object
      example:
        type: REPORT_RESULT
        id: 2c91808568c529c60168cca6f90c1313
        name: Campaign Composition Report
        status: SUCCESS
        reportType: CAMPAIGN_COMPOSITION_REPORT
        lastRunAt: 2019-12-19T13:49:37.385Z
      required:
      - reportType
      title: Campaign Report
      type: object
    ReportType:
      description: type of a Report
      enum:
      - CAMPAIGN_COMPOSITION_REPORT
      - CAMPAIGN_REMEDIATION_STATUS_REPORT
      - CAMPAIGN_STATUS_REPORT
      - CERTIFICATION_SIGNOFF_REPORT
      example: CAMPAIGN_COMPOSITION_REPORT
      type: string
    CampaignReportsConfig:
      example:
        identityAttributeColumns:
        - firstname
        - lastname
      properties:
        identityAttributeColumns:
          description: list of identity attribute columns
          example:
          - firstname
          - lastname
          items:
            type: string
          type: array
      title: Campaign Reports Configuration
      type: object
    CampaignTemplate:
      description: Campaign Template
      example:
        ownerRef:
          name: Mister Manager
          id: 2c918086676d3e0601677611dbde220f
          type: IDENTITY
          email: mr.manager@example.com
        deadlineDuration: P2W
        created: 2020-03-05T22:44:00.364Z
        scheduled: false
        name: Manager Campaign Template
        description: Template for the annual manager campaign.
        modified: 2020-03-05T22:52:09.969Z
        campaign: null
        id: 2c9079b270a266a60170a277bb960008
      properties:
        id:
          description: Id of the campaign template
          example: 2c9079b270a266a60170a277bb960008
          type: string
        name:
          description: This template's name. Has no bearing on generated campaigns'
            names.
          example: Manager Campaign Template
          type: string
        description:
          description: This template's description. Has no bearing on generated campaigns'
            descriptions.
          example: Template for the annual manager campaign.
          type: string
        created:
          description: Creation date of Campaign Template
          example: 2020-03-05T22:44:00.364Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Modification date of Campaign Template
          example: 2020-03-05T22:52:09.969Z
          format: date-time
          readOnly: true
          type: string
        scheduled:
          default: false
          description: Indicates if this campaign template has been scheduled.
          example: false
          readOnly: true
          type: boolean
        ownerRef:
          $ref: '#/components/schemas/CampaignTemplate_ownerRef'
        deadlineDuration:
          description: "The time period during which the campaign should be completed,\
            \ formatted as an ISO-8601 Duration. When this template generates a campaign,\
            \ the campaign's deadline will be the current date plus this duration.\
            \ For example, if generation occurred on 2020-01-01 and this field was\
            \ \"P2W\" (two weeks), the resulting campaign's deadline would be 2020-01-15\
            \ (the current date plus 14 days)."
          example: P2W
          type: string
        campaign:
          $ref: '#/components/schemas/Campaign'
      required:
      - campaign
      - created
      - description
      - modified
      - name
      type: object
    CampaignReference:
      example:
        campaignType: MANAGER
        name: Campaign Name
        mandatoryCommentRequirement: NO_DECISIONS
        description: A description of the campaign
        id: ef38f94347e94562b5bb8424a56397d8
        type: CAMPAIGN
        correlatedStatus: CORRELATED
      properties:
        id:
          description: The unique ID of the campaign.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        name:
          description: The name of the campaign.
          example: Campaign Name
          type: string
        type:
          description: The type of object that is being referenced.
          enum:
          - CAMPAIGN
          example: CAMPAIGN
          type: string
        campaignType:
          description: The type of the campaign.
          enum:
          - MANAGER
          - SOURCE_OWNER
          - SEARCH
          example: MANAGER
          type: string
        description:
          description: The description of the campaign set by the admin who created
            it.
          example: A description of the campaign
          nullable: true
          type: string
        correlatedStatus:
          description: The correlatedStatus of the campaign. Only SOURCE_OWNER campaigns
            can be Uncorrelated. An Uncorrelated certification campaign only includes
            Uncorrelated identities (An identity is uncorrelated if it has no accounts
            on an authoritative source).
          enum:
          - CORRELATED
          - UNCORRELATED
          example: CORRELATED
          type: object
        mandatoryCommentRequirement:
          description: "Determines whether comments are required for decisions during\
            \ certification reviews. You can require comments for all decisions, revoke-only\
            \ decisions, or no decisions. By default, comments are not required for\
            \ decisions."
          enum:
          - ALL_DECISIONS
          - REVOKE_ONLY_DECISIONS
          - NO_DECISIONS
          example: NO_DECISIONS
          type: string
      required:
      - campaignType
      - correlatedStatus
      - description
      - id
      - mandatoryCommentRequirement
      - name
      - type
      type: object
    Schedule:
      example:
        hours:
          values:
          - "1"
          interval: 2
          type: LIST
        months:
          values:
          - "1"
          interval: 2
          type: LIST
        timeZoneId: CST
        days:
          values:
          - "1"
          interval: 2
          type: LIST
        expiration: 2000-01-23T04:56:07.000+00:00
        type: WEEKLY
      properties:
        type:
          description: "Determines the overall schedule cadence. In general, all time\
            \ period fields smaller than the chosen type can be configured. For example,\
            \ a DAILY schedule can have 'hours' set, but not 'days'; a WEEKLY schedule\
            \ can have both 'hours' and 'days' set."
          enum:
          - WEEKLY
          - MONTHLY
          - ANNUALLY
          - CALENDAR
          example: WEEKLY
          type: string
        months:
          $ref: '#/components/schemas/Schedule_months'
        days:
          $ref: '#/components/schemas/Schedule_days'
        hours:
          $ref: '#/components/schemas/Schedule_hours'
        expiration:
          description: Specifies the time after which this schedule will no longer
            occur.
          format: date-time
          type: string
        timeZoneId:
          description: "The time zone to use when running the schedule. For instance,\
            \ if the schedule is scheduled to run at 1AM, and this field is set to\
            \ \"CST\", the schedule will run at 1AM CST."
          example: CST
          type: string
      required:
      - hours
      - type
      type: object
    ReviewReassign:
      example:
        reason: reassigned for some reason
        reassignTo: ef38f94347e94562b5bb8424a56397d8
        reassign:
        - id: ef38f94347e94562b5bb8424a56397d8
          type: ITEM
        - id: ef38f94347e94562b5bb8424a56397d8
          type: ITEM
      properties:
        reassign:
          items:
            $ref: '#/components/schemas/ReassignReference'
          type: array
        reassignTo:
          description: The ID of the identity to which the certification is reassigned
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        reason:
          description: The reason comment for why the reassign was made
          example: reassigned for some reason
          type: string
      required:
      - reason
      - reassign
      - reassignTo
      type: object
    IdentityCertificationTask:
      example:
        certificationId: ef38f94347e94562b5bb8424a56397d8
        id: abcd-ef12-3456
        type: REASSIGN
        errors: []
        status: QUEUED
      properties:
        id:
          description: The task id
          example: abcd-ef12-3456
          type: string
        certificationId:
          description: The certification id
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        type:
          enum:
          - REASSIGN
          type: string
        status:
          enum:
          - QUEUED
          - IN_PROGRESS
          - SUCCESS
          - ERROR
          type: string
        errors:
          description: Any errors executing the task (Optional).
          example: []
          items:
            type: string
          type: array
      type: object
    PermissionDto:
      description: "Simplified DTO for the Permission objects stored in SailPoint's\
        \ database. The data is aggregated from customer systems and is free-form,\
        \ so its appearance can vary largely between different clients/customers."
      example:
        rights:
        - SELECT
        - SELECT
        target: SYS.GV_$TRANSACTION
      properties:
        rights:
          description: All the rights (e.g. actions) that this permission allows on
            the target
          items:
            example: SELECT
            type: string
          readOnly: true
          type: array
        target:
          description: The target the permission would grants rights on.
          example: SYS.GV_$TRANSACTION
          readOnly: true
          type: string
      type: object
    IdentityReferenceWithNameAndEmail:
      example:
        name: Alison Ferguso
        id: 5168015d32f890ca15812c9180835d2e
        type: IDENTITY
        email: alison.ferguso@identitysoon.com
      nullable: true
      properties:
        type:
          description: The type can only be IDENTITY. This is read-only
          example: IDENTITY
          type: string
        id:
          description: Identity id.
          example: 5168015d32f890ca15812c9180835d2e
          type: string
        name:
          description: Human-readable display name of identity. This is read-only
          example: Alison Ferguso
          type: string
        email:
          description: Email address of identity. This is read-only
          example: alison.ferguso@identitysoon.com
          type: string
      type: object
    ConnectorRuleResponse:
      allOf:
      - $ref: '#/components/schemas/ConnectorRuleCreateRequest'
      - nullable: true
        properties:
          id:
            description: the ID of the rule
            example: 8113d48c0b914f17b4c6072d4dcb9dfe
            type: string
          created:
            description: an ISO 8601 UTC timestamp when this rule was created
            example: 021-07-22T15:59:23Z
            type: string
          modified:
            description: an ISO 8601 UTC timestamp when this rule was last modified
            example: 021-07-22T15:59:23Z
            nullable: true
            type: string
        required:
        - created
        - id
        type: object
      description: ConnectorRuleResponse
    ConnectorRuleCreateRequest:
      description: ConnectorRuleCreateRequest
      example:
        sourceCode:
          version: "1.0"
          script: return "Mr. " + firstName;
        signature:
          output:
            name: firstName
            description: the first name of the identity
            type: String
          input:
          - name: firstName
            description: the first name of the identity
            type: String
          - name: firstName
            description: the first name of the identity
            type: String
        name: WebServiceBeforeOperationRule
        description: This rule does that
        attributes: {}
        type: BuildMap
      properties:
        name:
          description: the name of the rule
          example: WebServiceBeforeOperationRule
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: a description of the rule's purpose
          example: This rule does that
          type: string
        type:
          description: the type of rule
          enum:
          - BuildMap
          - ConnectorAfterCreate
          - ConnectorAfterDelete
          - ConnectorAfterModify
          - ConnectorBeforeCreate
          - ConnectorBeforeDelete
          - ConnectorBeforeModify
          - JDBCBuildMap
          - JDBCOperationProvisioning
          - JDBCProvision
          - PeopleSoftHRMSBuildMap
          - PeopleSoftHRMSOperationProvisioning
          - PeopleSoftHRMSProvision
          - RACFPermissionCustomization
          - SAPBuildMap
          - SapHrManagerRule
          - SapHrOperationProvisioning
          - SapHrProvision
          - SuccessFactorsOperationProvisioning
          - WebServiceAfterOperationRule
          - WebServiceBeforeOperationRule
          example: BuildMap
          type: string
        signature:
          $ref: '#/components/schemas/ConnectorRuleCreateRequest_signature'
        sourceCode:
          $ref: '#/components/schemas/SourceCode'
        attributes:
          description: a map of string to objects
          example: {}
          nullable: true
          type: object
      required:
      - name
      - sourceCode
      - type
      type: object
    ConnectorRuleUpdateRequest:
      allOf:
      - properties:
          id:
            description: the ID of the rule to update
            example: 8113d48c0b914f17b4c6072d4dcb9dfe
            type: string
        required:
        - id
        type: object
      - $ref: '#/components/schemas/ConnectorRuleCreateRequest'
      description: ConnectorRuleUpdateRequest
    SourceCode:
      description: SourceCode
      example:
        version: "1.0"
        script: return "Mr. " + firstName;
      properties:
        version:
          description: the version of the code
          example: "1.0"
          type: string
        script:
          description: The code
          example: return "Mr. " + firstName;
          type: string
      required:
      - script
      - version
      type: object
    ConnectorRuleValidationResponse:
      description: ConnectorRuleValidationResponse
      example:
        details:
        - line: 2
          column: 5
          messsage: Remove reference to .decrypt(
        - line: 2
          column: 5
          messsage: Remove reference to .decrypt(
        state: ERROR
      properties:
        state:
          enum:
          - OK
          - ERROR
          example: ERROR
          type: string
        details:
          items:
            $ref: '#/components/schemas/ConnectorRuleValidationResponse_details_inner'
          type: array
      required:
      - details
      - state
      type: object
    V3ConnectorDto:
      example:
        features:
        - PROVISIONING
        - SYNC_PROVISIONING
        - SEARCH
        - UNSTRUCTURED_TARGETS
        name: name
        scriptName: servicenow
        directConnect: true
        type: ServiceNow
        connectorMetadata:
          supportedUI: EXTJS
          platform: ccg
          shortDesc: connector description
        status: RELEASED
      properties:
        name:
          description: The connector name
          example: name
          type: string
        type:
          description: The connector type
          example: ServiceNow
          type: string
        scriptName:
          description: The connector script name
          example: servicenow
          type: string
        features:
          description: The list of features supported by the connector
          example:
          - PROVISIONING
          - SYNC_PROVISIONING
          - SEARCH
          - UNSTRUCTURED_TARGETS
          items:
            type: string
          nullable: true
          type: array
        directConnect:
          default: false
          description: true if the source is a direct connect source
          example: true
          type: boolean
        connectorMetadata:
          description: Object containing metadata pertinent to the UI to be used
          example:
            supportedUI: EXTJS
            platform: ccg
            shortDesc: connector description
          type: object
        status:
          description: The connector status
          example: RELEASED
          type: string
      type: object
    CustomPasswordInstruction:
      example:
        pageContent: pageContent
        pageId: change-password:enter-password
        locale: en
      properties:
        pageId:
          description: "The page ID that represents the page for forget user name,\
            \ reset password and unlock account flow."
          enum:
          - change-password:enter-password
          - change-password:finish
          - flow-selection:select
          - forget-username:user-email
          - mfa:enter-code
          - mfa:enter-kba
          - mfa:select
          - reset-password:enter-password
          - reset-password:enter-username
          - reset-password:finish
          - unlock-account:enter-username
          - unlock-account:finish
          type: string
        pageContent:
          description: "The custom instructions for the specified page. Allow basic\
            \ HTML format and maximum length is 1000 characters. The custom instructions\
            \ will be sanitized to avoid attacks. If the customization text includes\
            \ a link, like <A HREF=\\\"URL\\\">...</A> clicking on this will open\
            \ the link on the current browser page. If you want your link to be redirected\
            \ to a different page, please redirect it to \"_blank\" like this: <a\
            \ href=\\\"URL\" target=\\\"_blank\\\" >link</a>. This will open a new\
            \ tab when the link is clicked. Notice we're only supporting _blank as\
            \ the redirection target."
          type: string
        locale:
          description: "The locale for the custom instructions, a BCP47 language tag.\
            \ The default value is \\\"default\\\"."
          example: en
          type: string
      type: object
    EntitlementBulkUpdateRequest:
      example:
        entitlementIds:
        - 2c91808a7624751a01762f19d665220d
        - 2c91808a7624751a01762f19d67c220e
        - 2c91808a7624751a01762f19d692220f
        jsonPatch:
        - op: replace
          path: /privileged
          value: false
        - op: replace
          path: /requestable
          value: false
      properties:
        entitlementIds:
          description: List of entitlement ids to update
          example:
          - 2c91808a7624751a01762f19d665220d
          - 2c91808a7624751a01762f19d67c220e
          - 2c91808a7624751a01762f19d692220f
          items:
            type: string
          maxItems: 50
          type: array
        jsonPatch:
          example:
          - op: replace
            path: /privileged
            value: false
          - op: replace
            path: /requestable
            value: false
          items:
            $ref: '#/components/schemas/JsonPatchOperation'
          type: array
      required:
      - entitlementIds
      - jsonPatch
      type: object
    EntitlementRequestConfig:
      example:
        accessRequestConfig:
          denialCommentRequired: false
          approvalSchemes:
          - approverId: e3eab852-8315-467f-9de7-70eda97f63c8
            approverType: GOVERNANCE_GROUP
          - approverId: e3eab852-8315-467f-9de7-70eda97f63c8
            approverType: GOVERNANCE_GROUP
          requestCommentRequired: true
      properties:
        accessRequestConfig:
          $ref: '#/components/schemas/EntitlementAccessRequestConfig'
      type: object
    PasswordDigitTokenReset:
      example:
        durationMinutes: 5
        length: 8
        userId: Abby.Smith
      properties:
        userId:
          description: The uid of the user requested for digit token
          example: Abby.Smith
          type: string
        length:
          description: "The length of digit token. It should be from 6 to 18, inclusive.\
            \ The default value is 6."
          example: 8
          type: integer
        durationMinutes:
          description: The time to live for the digit token in minutes. The default
            value is 5 minutes.
          example: 5
          type: integer
      required:
      - userId
      type: object
    PasswordDigitToken:
      example:
        digitToken: "09087713"
        requestId: e1267ecd-fcd9-4c73-9c55-12555efad136
      properties:
        digitToken:
          description: The digit token for password management
          example: "09087713"
          type: string
        requestId:
          description: The reference ID of the digit token generation request
          example: e1267ecd-fcd9-4c73-9c55-12555efad136
          type: string
      type: object
    IdentityListItem:
      example:
        firstName: Adam
        lastName: Zampa
        deletedDate: 2007-03-01T13:00:00.000Z
        displayName: Adam Zampa
        active: true
        id: bc693f07e7b645539626c25954c58554
      properties:
        id:
          description: the identity ID
          example: bc693f07e7b645539626c25954c58554
          type: string
        displayName:
          description: the display name of the identity
          example: Adam Zampa
          type: string
        firstName:
          description: the first name of the identity
          example: Adam
          type: string
        lastName:
          description: the last name of the identity
          example: Zampa
          type: string
        active:
          default: true
          description: indicates if an identity is active or not
          example: true
          type: boolean
        deletedDate:
          description: the date when the identity was deleted
          example: 2007-03-01T13:00:00.000Z
          nullable: true
          type: string
      type: object
    IdentityHistoryResponse:
      example:
        id: 2c9079b270a266a60170a2779fcb0007
        displayName: Lahoma Wuckert
        deletedDate: null
        snapshot: 2007-03-01T13:00:00.000Z
        attributes:
          jobTitle: HR Manager
          location: NYC
          firstname: Lahoma
          lastname: Wuckert
          department: HR
        accessItemCount:
          role: 2
          accessProfile: 2
          entitlement: 28
          account: 3
      properties:
        id:
          description: the identity ID
          example: bc693f07e7b645539626c25954c58554
          type: string
        displayName:
          description: the display name of the identity
          example: Adam Zampa
          type: string
        snapshot:
          description: the date when the identity record was created
          example: 2007-03-01T13:00:00.000Z
          type: string
        deletedDate:
          description: the date when the identity was deleted
          example: 2007-03-01T13:00:00.000Z
          type: string
        accessItemCount:
          additionalProperties:
            type: string
          description: A map containing the count of each access item
          type: object
        attributes:
          additionalProperties:
            type: string
          description: A map containing the identity attributes
          type: object
      type: object
    AccessItemAccessProfileResponse:
      properties:
        accessType:
          description: the access item type. accessProfile in this case
          example: accessProfile
          type: string
        id:
          description: the access item id
          example: 2c918087763e69d901763e72e97f006f
          type: string
        name:
          description: the access profile name
          example: sample
          type: string
        sourceName:
          description: the name of the source
          example: DataScienceDataset
          type: string
        sourceId:
          description: the id of the source
          example: 2793o32dwd
          type: string
        description:
          description: the description for the access profile
          example: AccessProfile - Workday/Citizenship access
          type: string
        displayName:
          description: the display name of the identity
          example: Dr. Arden Rogahn MD
          type: string
        entitlementCount:
          description: the number of entitlements the access profile will create
          example: "12"
          type: string
        appDisplayName:
          description: the name of app
          example: AppName
          type: string
      type: object
    AccessItemAccountResponse:
      properties:
        accessType:
          description: the access item type. account in this case
          example: account
          type: string
        id:
          description: the access item id
          example: 2c918087763e69d901763e72e97f006f
          type: string
        nativeIdentity:
          description: the native identifier used to uniquely identify an acccount
          example: dr.arden.ogahn.d
          type: string
        sourceName:
          description: the name of the source
          example: DataScienceDataset
          type: string
        sourceId:
          description: the id of the source
          example: 2793o32dwd
          type: string
        entitlementCount:
          description: the number of entitlements the account will create
          example: "12"
          type: string
        displayName:
          description: the display name of the identity
          example: Dr. Arden Rogahn MD
          type: string
      type: object
    AccessItemAppResponse:
      properties:
        accessType:
          description: the access item type. entitlement in this case
          example: app
          type: string
        id:
          description: the access item id
          example: 2c918087763e69d901763e72e97f006f
          type: string
        displayName:
          description: the access profile display name
          example: Display Name
          type: string
        sourceName:
          description: the associated source name if it exists
          example: appName
          type: string
      type: object
    AccessItemEntitlementResponse:
      properties:
        accessType:
          description: the access item type. entitlement in this case
          example: entitlement
          type: string
        id:
          description: the access item id
          example: 2c918087763e69d901763e72e97f006f
          type: string
        attribute:
          description: the entitlement attribute
          example: groups
          type: string
        value:
          description: the associated value
          example: Upward mobility access
          type: string
        entitlementType:
          description: the type of entitlement
          example: entitlement
          type: string
        sourceName:
          description: the name of the source
          example: DataScienceDataset
          type: string
        sourceId:
          description: the id of the source
          example: 2793o32dwd
          type: string
        description:
          description: the description for the entitlment
          example: Entitlement - Workday/Citizenship access
          type: string
        displayName:
          description: the display name of the identity
          example: Dr. Arden Rogahn MD
          type: string
      type: object
    AccessItemRoleResponse:
      properties:
        accessType:
          description: the access item type. role in this case
          example: role
          type: string
        id:
          description: the access item id
          example: 2c918087763e69d901763e72e97f006f
          type: string
        displayName:
          description: the role display name
          example: sample
          type: string
        description:
          description: the description for the role
          example: Role - Workday/Citizenship access
          type: string
        sourceName:
          description: the associated source name if it exists
          example: Source Name
          type: string
      type: object
    IdentitySnapshotSummaryResponse:
      example:
        snapshot: 2007-03-01T13:00:00.000Z
      properties:
        snapshot:
          description: the date when the identity record was created
          example: 2007-03-01T13:00:00.000Z
          type: string
      type: object
    MetricResponse:
      example:
        name: 2021-04-01T00:00:00.000Z
        value: 2
      properties:
        name:
          description: the name of metric
          type: string
        value:
          description: the value associated to the metric
          type: number
      type: object
    CommonAccessResponse:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        access:
          ownerName: ownerName
          name: name
          description: description
          id: id
          type: null
          ownerId: ownerId
        reviewedByUser: true
        status: status
        lastReviewed: 2000-01-23T04:56:07.000+00:00
      properties:
        access:
          $ref: '#/components/schemas/CommonAccessItemAccess'
        status:
          description: CONFIRMED or DENIED
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        reviewedByUser:
          description: true if user has confirmed or denied status
          type: boolean
        lastReviewed:
          format: date-time
          readOnly: true
          type: string
      type: object
    CommonAccessItemRequest:
      example:
        access:
          ownerName: ownerName
          name: name
          description: description
          id: id
          type: null
          ownerId: ownerId
        status: null
      properties:
        access:
          $ref: '#/components/schemas/CommonAccessItemAccess'
        status:
          $ref: '#/components/schemas/CommonAccessItemState'
      type: object
    CommonAccessItemResponse:
      example:
        lastUpdated: lastUpdated
        access:
          ownerName: ownerName
          name: name
          description: description
          id: id
          type: null
          ownerId: ownerId
        createdByUser: createdByUser
        id: id
        reviewedByUser: true
        status: null
        lastReviewed: lastReviewed
      properties:
        id:
          description: Common Access Item ID
          type: string
        access:
          $ref: '#/components/schemas/CommonAccessItemAccess'
        status:
          $ref: '#/components/schemas/CommonAccessItemState'
        lastUpdated:
          type: string
        reviewedByUser:
          type: boolean
        lastReviewed:
          type: string
        createdByUser:
          type: string
      type: object
    CommonAccessIDStatus:
      example:
        confirmedIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        deniedIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        confirmedIds:
          description: List of confirmed common access ids.
          items:
            format: uuid
            type: string
          type: array
        deniedIds:
          description: List of denied common access ids.
          items:
            format: uuid
            type: string
          type: array
      type: object
    AccessItemAssociated:
      properties:
        accessItem:
          $ref: '#/components/schemas/AccessItemAssociated_accessItem'
        identityId:
          description: the identity id
          example: 8c190e6787aa4ed9a90bd9d5344523fb
          type: string
        eventType:
          description: the event type
          example: AccessItemAssociated
          type: string
        dt:
          description: the date of event
          example: 2019-03-08T22:37:33.901Z
          type: string
        governanceEvent:
          $ref: '#/components/schemas/CorrelatedGovernanceEvent'
      type: object
    AccessItemRemoved:
      properties:
        accessItem:
          $ref: '#/components/schemas/AccessItemAssociated_accessItem'
        identityId:
          description: the identity id
          example: 8c190e6787aa4ed9a90bd9d5344523fb
          type: string
        eventType:
          description: the event type
          example: AccessItemRemoved
          type: string
        dt:
          description: the date of event
          example: 2019-03-08T22:37:33.901Z
          type: string
        governanceEvent:
          $ref: '#/components/schemas/CorrelatedGovernanceEvent'
      type: object
    AttributesChanged:
      example:
        attributeChanges:
          name: firstname
          previousValue: adam
          newValue: zampa
        eventType: AttributesChanged
        identityId: 8a80828f643d484f01643e14202e206f
        dt: 2019-03-08T22:37:33.901Z
      properties:
        changes:
          items:
            $ref: '#/components/schemas/AttributeChange'
          type: array
        eventType:
          description: the event type
          type: string
        identityId:
          description: the identity id
          type: string
        dt:
          description: the date of event
          type: string
      type: object
    AccessRequested:
      properties:
        accessRequest:
          $ref: '#/components/schemas/AccessRequestResponse'
        identityId:
          description: the identity id
          example: 8a80828f643d484f01643e14202e206f
          type: string
        eventType:
          description: the event type
          example: AccessRequested
          type: string
        dt:
          description: the date of event
          example: 2019-03-08T22:37:33.901Z
          type: string
      type: object
    IdentityCertified:
      properties:
        certificationId:
          description: the id of the certification item
          example: 2c91808a77ff216301782327a50f09bf
          type: string
        certificationName:
          description: the certification item name
          example: Cert name
          type: string
        signedDate:
          description: the date ceritification was signed
          example: 2019-03-08T22:37:33.901Z
          type: string
        certifiers:
          description: this field is deprecated and may go away
          example:
          - id: 8a80828f643d484f01643e14202e206f
            displayName: John Snow
          items:
            $ref: '#/components/schemas/CertifierResponse'
          type: array
        reviewers:
          description: The list of identities who review this certification
          example:
          - id: 8a80828f643d484f01643e14202e206f
            displayName: John Snow
          items:
            $ref: '#/components/schemas/CertifierResponse'
          type: array
        signer:
          $ref: '#/components/schemas/CertifierResponse'
        eventType:
          description: the event type
          example: IdentityCertified
          type: string
        dt:
          description: the date of event
          example: 2019-03-08T22:37:33.901Z
          type: string
      type: object
    AccountStatusChanged:
      example:
        account:
          id: 2c91808a77ff216301782327a50f09bf
          nativeIdentity: 127999
          displayName: Sample Name
          sourceId: 8a80828f643d484f01643e14202e206f
          sourceName: JDBC Entitlements Source
          entitlementCount: 0
          accessType: account
        statusChange:
          previousStatus: enabled
          newStatus: disabled
        eventType: AccountStatusChanged
        identityId: 8a80828f643d484f01643e14202e206f
        date: 2019-03-08T22:37:33.901Z
      properties:
        eventType:
          description: the event type
          type: string
        identityId:
          description: the identity id
          type: string
        dt:
          description: the date of event
          type: string
        account:
          $ref: '#/components/schemas/AccountStatusChanged_account'
        statusChange:
          $ref: '#/components/schemas/AccountStatusChanged_statusChange'
      type: object
    IdentityCompareResponse:
      example:
        accessItemDiff:
          role:
            accessAdded: 2
            accessRemoved: 3
          entitlement:
            accessAdded: 4
            accessRemoved: 0
          accessProfile:
            accessAdded: 0
            accessRemoved: 1
      properties:
        accessItemDiff:
          additionalProperties:
            type: object
          description: Arbitrary key-value pairs. They will never be processed by
            the IdentityNow system but will be returned on completion of the violation
            check.
          type: object
      type: object
    AccessItemDiff:
      example:
        id: 2c91808c7726345b017726a0a2fb013b
        eventType: ADD
        displayName: Test
        sourceName: Source
      properties:
        id:
          description: the id of the access item
          type: string
        eventType:
          enum:
          - ADD
          - REMOVE
          type: string
        displayName:
          description: the display name of the access item
          type: string
        sourceName:
          description: the source name of the access item
          type: string
      type: object
    IdentitySyncJob:
      example:
        payload:
          type: SYNCHRONIZE_IDENTITY_ATTRIBUTES
          dataJson: "{\"identityId\":\"2c918083746f642c01746f990884012a\"}"
        id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        status: IN_PROGRESS
      properties:
        id:
          description: Job ID.
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: string
        status:
          description: The job status.
          enum:
          - QUEUED
          - IN_PROGRESS
          - SUCCESS
          - ERROR
          example: IN_PROGRESS
          type: string
        payload:
          $ref: '#/components/schemas/IdentitySyncPayload'
      required:
      - id
      - payload
      - status
      type: object
    IdentityOwnershipAssociationDetails:
      example:
        associationDetails:
        - entities:
            id: b660a232f05b4e04812ca974b3011e0f
            name: Gaston.800ddf9640a
            type: ROLE
          associationType: ROLE_OWNER
        - entities:
            id: b660a232f05b4e04812ca974b3011e0f
            name: Gaston.800ddf9640a
            type: ROLE
          associationType: ROLE_OWNER
      properties:
        associationDetails:
          description: list of all the resource associations for the identity
          items:
            $ref: '#/components/schemas/IdentityOwnershipAssociationDetails_associationDetails_inner'
          type: array
      type: object
    Identity:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - properties:
          alias:
            description: Alternate unique identifier for the identity
            example: walter.white
            type: string
          emailAddress:
            description: The email address of the identity
            example: sender@example.com
            type: string
          processingState:
            description: The processing state of the identity
            enum:
            - ERROR
            - OK
            example: ERROR
            nullable: true
            type: string
          identityStatus:
            description: The identity's status in the system
            enum:
            - UNREGISTERED
            - REGISTERED
            - PENDING
            - WARNING
            - DISABLED
            - ACTIVE
            - DEACTIVATED
            - TERMINATED
            - ERROR
            - LOCKED
            example: LOCKED
            type: string
          managerRef:
            $ref: '#/components/schemas/IdentityDto_managerRef'
          isManager:
            default: false
            description: Whether this identity is a manager of another identity
            example: true
            type: boolean
          lastRefresh:
            description: The last time the identity was refreshed by the system
            example: 2020-11-22T15:42:31.123Z
            format: date-time
            type: string
          attributes:
            description: A map with the identity attributes for the identity
            example: "{\"uid\":\"Walter White\",\"firstname\":\"walter\",\"cloudStatus\"\
              :\"UNREGISTERED\",\"displayName\":\"Walter White\",\"identificationNumber\"\
              :\"942\",\"lastSyncDate\":1470348809380,\"email\":\"walter@gmail.com\"\
              ,\"lastname\":\"white\"}"
            type: object
          lifecycleState:
            $ref: '#/components/schemas/LifecycleStateDto'
        title: IdentityDto
        type: object
    IdentityAssociationDetails:
      properties:
        message:
          description: any additional context information of the http call result
          example: Identity cannot be deleted as it is owner of following resources
          type: string
        associationDetails:
          description: list of all the resource associations for the identity
          items:
            $ref: '#/components/schemas/IdentityAssociationDetails_associationDetails_inner'
          type: array
      type: object
    ProcessIdentitiesRequest:
      example:
        identityIds:
        - ef38f94347e94562b5bb8424a56397d8
        - ef38f94347e94562b5bb8424a56397d8
        - ef38f94347e94562b5bb8424a56397d8
        - ef38f94347e94562b5bb8424a56397d8
        - ef38f94347e94562b5bb8424a56397d8
      properties:
        identityIds:
          description: List of up to 250 identity IDs to process.
          items:
            example: ef38f94347e94562b5bb8424a56397d8
            type: string
          maxItems: 250
          minItems: 1
          type: array
      type: object
    TaskResultResponse:
      example:
        name: "null"
        id: 78733556-9ea3-4f59-bf69-e5cd92b011b4
        type: TASK_RESULT
      properties:
        type:
          description: the type of response reference
          example: TASK_RESULT
          type: string
        id:
          description: the task ID
          example: 78733556-9ea3-4f59-bf69-e5cd92b011b4
          type: string
        name:
          description: "the task name (not used in this endpoint, always null)"
          example: "null"
          type: string
      type: object
    IdentityAttribute:
      example:
        standard: true
        system: false
        sources:
        - type: rule
          properties:
            attribute: null
            sourceName: Employees
        - type: rule
          properties:
            attribute: null
            sourceName: Employees
        displayName: IdentityNow Username
        name: uid
        type: string
        searchable: true
        multi: false
      properties:
        name:
          description: The technical name of the identity attribute
          example: uid
          type: string
        displayName:
          description: The business-friendly name of the identity attribute
          example: IdentityNow Username
          type: string
        standard:
          default: false
          description: Shows if the attribute is 'standard' or default
          example: true
          type: boolean
        type:
          description: The type of the identity attribute
          example: string
          type: string
        multi:
          default: false
          description: Shows if the identity attribute is multi-valued
          example: false
          type: boolean
        searchable:
          default: false
          description: Shows if the identity attribute is searchable
          example: true
          type: boolean
        system:
          default: false
          description: Shows this is 'system' identity attribute that does not have
            a source and is not configurable.
          example: false
          type: boolean
        sources:
          description: "List of sources for an attribute, this specifies how the value\
            \ of the rule is derived"
          items:
            $ref: '#/components/schemas/Source_1'
          type: array
      type: object
    IdentityAttributeNames:
      description: Identity Attribute IDs
      example:
        ids:
        - name
        - displayName
      properties:
        ids:
          description: List of identity attributes' technical names
          example:
          - name
          - displayName
          items:
            example: name
            type: string
          type: array
      type: object
    IdentityProfileBulkDelete:
      description: List of Identity Profile IDs to delete.
      example:
      - 2c9180867b2a34e0017b3078d60b0699
      - 2c9180867b2a34e0017b3078d60b0698
      items:
        type: string
      type: array
    TaskResultSimplified:
      example:
        name: Background Object Terminator c8f030f2-b1a6-4e33-99e8-6935bc18735d
        description: "Generic task for terminating data in the overlay, used by the\
          \ TerminationService."
        id: ff8081814d977c21014da056804a0af3
        completed: 2000-01-23T04:56:07.000+00:00
        completionStatus: Success
        launched: 2000-01-23T04:56:07.000+00:00
        launcher: support
      properties:
        id:
          description: Task identifier
          example: ff8081814d977c21014da056804a0af3
          type: string
        name:
          description: Task name
          example: Background Object Terminator c8f030f2-b1a6-4e33-99e8-6935bc18735d
          type: string
        description:
          description: Task description
          example: "Generic task for terminating data in the overlay, used by the\
            \ TerminationService."
          type: string
        launcher:
          description: User or process who launched the task
          example: support
          type: string
        completed:
          description: Date time of completion
          format: date-time
          type: string
        launched:
          description: Date time when the task was launched
          format: date-time
          type: string
        completionStatus:
          description: Task result status
          enum:
          - Success
          - Warning
          - Error
          - Terminated
          - TempError
          example: Success
          type: string
      type: object
    IdentityProfileExportedObject:
      description: Identity Profile exported object
      example:
        self:
          name: HR Active Directory
          id: 2c9180835d191a86015d28455b4b232a
          type: SOURCE
        version: 1
        object: null
      properties:
        version:
          description: Version or object from the target service.
          example: 1
          type: integer
        self:
          $ref: '#/components/schemas/SelfImportExportDto'
        object:
          $ref: '#/components/schemas/IdentityProfile_1'
      type: object
    ObjectImportResult:
      description: Response model for import of a single object.
      example:
        warnings:
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        importedObjects:
        - name: HR Active Directory
          id: 2c9180835d191a86015d28455b4b232a
          type: SOURCE
        - name: HR Active Directory
          id: 2c9180835d191a86015d28455b4b232a
          type: SOURCE
        infos:
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        errors:
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
        - details:
            details: message details
          text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          key: UNKNOWN_REFERENCE_RESOLVER
      properties:
        infos:
          description: Informational messages returned from the target service on
            import.
          items:
            $ref: '#/components/schemas/SpConfigMessage'
          type: array
        warnings:
          description: Warning messages returned from the target service on import.
          items:
            $ref: '#/components/schemas/SpConfigMessage'
          type: array
        errors:
          description: Error messages returned from the target service on import.
          items:
            $ref: '#/components/schemas/SpConfigMessage'
          type: array
        importedObjects:
          description: References to objects that were created or updated by the import.
          items:
            $ref: '#/components/schemas/ImportObject'
          type: array
      required:
      - errors
      - importedObjects
      - infos
      - warnings
      title: Import Object Response Body
      type: object
    IdentityPreviewRequest:
      example:
        identityId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        identityAttributeConfig:
          attributeTransforms:
          - transformDefinition:
              attributes:
                attributeName: e-mail
                sourceName: MySource
                sourceId: 2c9180877a826e68017a8c0b03da1a53
              type: accountAttribute
            identityAttributeName: email
          - transformDefinition:
              attributes:
                attributeName: e-mail
                sourceName: MySource
                sourceId: 2c9180877a826e68017a8c0b03da1a53
              type: accountAttribute
            identityAttributeName: email
          enabled: true
      properties:
        identityId:
          format: uuid
          type: string
        identityAttributeConfig:
          $ref: '#/components/schemas/IdentityAttributeConfig'
      type: object
    IdentityPreviewResponse:
      example:
        identity:
          name: Robert Robinson
          id: 2c4180a46faadee4016fb4e018c20626
          type: IDENTITY
        previewAttributes:
        - errorMessages:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          name: email
          value: email@mail.com
          previousValue: oldEmail@mail.com
        - errorMessages:
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          - localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
          name: email
          value: email@mail.com
          previousValue: oldEmail@mail.com
      properties:
        identity:
          $ref: '#/components/schemas/IdentityPreviewResponse_identity'
        previewAttributes:
          items:
            $ref: '#/components/schemas/IdentityAttributePreview'
          type: array
      type: object
    IdentityAttributeConfig:
      example:
        attributeTransforms:
        - transformDefinition:
            attributes:
              attributeName: e-mail
              sourceName: MySource
              sourceId: 2c9180877a826e68017a8c0b03da1a53
            type: accountAttribute
          identityAttributeName: email
        - transformDefinition:
            attributes:
              attributeName: e-mail
              sourceName: MySource
              sourceId: 2c9180877a826e68017a8c0b03da1a53
            type: accountAttribute
          identityAttributeName: email
        enabled: true
      properties:
        enabled:
          default: true
          description: If the profile or mapping is enabled
          example: true
          type: boolean
        attributeTransforms:
          items:
            $ref: '#/components/schemas/IdentityAttributeTransform'
          type: array
      type: object
    LifecycleState:
      example:
        accessProfileIds:
        - 2c918084660f45d6016617daa9210584
        - 2c918084660f45d6016617daa9210500
        emailNotificationOption:
          notifyManagers: true
          notifySpecificUsers: true
          emailAddressList:
          - test@test.com
          - test2@test.com
          notifyAllAdmins: true
        created: 2015-05-28T14:07:17Z
        name: Lifecycle Name
        description: LifecycleDescription
        modified: 2015-05-28T14:07:17Z
        accountActions:
        - action: ENABLE
          sourceIds:
          - 2c918084660f45d6016617daa9210584
          - 2c918084660f45d6016617daa9210500
        - action: ENABLE
          sourceIds:
          - 2c918084660f45d6016617daa9210584
          - 2c918084660f45d6016617daa9210500
        id: 2c9180835d2e5168015d32f890ca1581
        identityCount: 12
        technicalName: lifecycleTechnicalName
        enabled: true
      properties:
        id:
          description: lifecycle stat id.
          example: 2c9180835d2e5168015d32f890ca1581
          readOnly: true
          type: string
        name:
          description: Lifecycle-state name.
          example: Lifecycle Name
          readOnly: true
          type: string
        technicalName:
          description: The technical name for lifecycle state. This is for internal
            use.
          example: lifecycleTechnicalName
          readOnly: true
          type: string
        description:
          description: Lifecycle state description.
          example: LifecycleDescription
          type: string
        created:
          description: Lifecycle state created date.
          example: 2015-05-28T14:07:17Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Lifecycle state modified date.
          example: 2015-05-28T14:07:17Z
          format: date-time
          readOnly: true
          type: string
        enabled:
          description: Whether the lifecycle state is enabled or disabled.
          example: true
          type: boolean
        identityCount:
          description: Number of identities that have the lifecycle state.
          example: 12
          format: int32
          readOnly: true
          type: integer
        emailNotificationOption:
          $ref: '#/components/schemas/EmailNotificationOption'
        accountActions:
          items:
            $ref: '#/components/schemas/AccountAction'
          type: array
        accessProfileIds:
          description: List of access-profile IDs that are associated with the lifecycle
            state.
          example:
          - 2c918084660f45d6016617daa9210584
          - 2c918084660f45d6016617daa9210500
          items:
            type: string
          type: array
      type: object
    NonEmployeeRecord:
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        lastName: Smith
        manager: jane.doe
        data:
          key: data
        accountName: accountName
        endDate: 2020-08-23T18:52:59.162Z
        created: 2019-08-23T18:40:35.772Z
        firstName: William
        phone: "5555555555"
        modified: 2019-08-23T18:52:59.162Z
        id: id
        email: william.smith@example.com
        startDate: 2019-08-23T18:52:59.162Z
      properties:
        id:
          description: Non-Employee record id.
          format: UUID
          type: string
        accountName:
          description: Requested identity account name.
          type: string
        firstName:
          description: Non-Employee's first name.
          example: William
          type: string
        lastName:
          description: Non-Employee's last name.
          example: Smith
          type: string
        email:
          description: Non-Employee's email.
          example: william.smith@example.com
          type: string
        phone:
          description: Non-Employee's phone.
          example: "5555555555"
          type: string
        manager:
          description: The account ID of a valid identity to serve as this non-employee's
            manager.
          example: jane.doe
          type: string
        sourceId:
          description: Non-Employee's source id.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        data:
          additionalProperties:
            type: string
          description: Attribute blob/bag for a non-employee.
          type: object
        startDate:
          description: Non-Employee employment start date.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        endDate:
          description: Non-Employee employment end date.
          example: 2020-08-23T18:52:59.162Z
          format: date-time
          type: string
        modified:
          description: When the request was last modified.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        created:
          description: When the request was created.
          example: 2019-08-23T18:40:35.772Z
          format: date-time
          type: string
      type: object
    NonEmployeeRequestBody:
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        firstName: William
        lastName: Smith
        manager: jane.doe
        data:
          key: data
        accountName: william.smith
        phone: "5555555555"
        endDate: 2021-03-25T00:00:00-05:00
        email: william.smith@example.com
        startDate: 2020-03-24T00:00:00-05:00
      properties:
        accountName:
          description: Requested identity account name.
          example: william.smith
          type: string
        firstName:
          description: Non-Employee's first name.
          example: William
          type: string
        lastName:
          description: Non-Employee's last name.
          example: Smith
          type: string
        email:
          description: Non-Employee's email.
          example: william.smith@example.com
          type: string
        phone:
          description: Non-Employee's phone.
          example: "5555555555"
          type: string
        manager:
          description: The account ID of a valid identity to serve as this non-employee's
            manager.
          example: jane.doe
          type: string
        sourceId:
          description: Non-Employee's source id.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        data:
          additionalProperties:
            type: string
          description: "Attribute blob/bag for a non-employee, 10 attributes is the\
            \ maximum size supported."
          type: object
        startDate:
          description: Non-Employee employment start date.
          example: 2020-03-24T00:00:00-05:00
          format: date-time
          type: string
        endDate:
          description: Non-Employee employment end date.
          example: 2021-03-25T00:00:00-05:00
          format: date-time
          type: string
      required:
      - accountName
      - email
      - endDate
      - firstName
      - lastName
      - manager
      - phone
      - sourceId
      - startDate
      type: object
    NonEmployeeRequest:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSourceLite'
      - properties:
          accountName:
            description: Requested identity account name.
            example: william.smith
            type: string
          firstName:
            description: Non-Employee's first name.
            example: William
            type: string
          lastName:
            description: Non-Employee's last name.
            example: Smith
            type: string
          email:
            description: Non-Employee's email.
            example: william.smith@example.com
            type: string
          phone:
            description: Non-Employee's phone.
            example: "5555555555"
            type: string
          manager:
            description: The account ID of a valid identity to serve as this non-employee's
              manager.
            example: jane.doe
            type: string
          nonEmployeeSource:
            $ref: '#/components/schemas/NonEmployeeSourceLite'
          data:
            additionalProperties:
              type: string
            description: Attribute blob/bag for a non-employee.
            type: object
          approvalItems:
            description: List of approval item for the request
            items:
              $ref: '#/components/schemas/NonEmployeeApprovalItemBase'
            type: array
          approvalStatus:
            $ref: '#/components/schemas/ApprovalStatus'
          comment:
            description: comment of requester
            type: string
          completionDate:
            description: When the request was completely approved.
            example: 2020-03-24T11:11:41.139-05:00
            format: date-time
            type: string
          startDate:
            description: Non-Employee employment start date.
            example: 2020-03-24T00:00:00-05:00
            format: date-time
            type: string
          endDate:
            description: Non-Employee employment end date.
            example: 2021-03-25T00:00:00-05:00
            format: date-time
            type: string
          modified:
            description: When the request was last modified.
            example: 2020-03-24T11:11:41.139-05:00
            format: date-time
            type: string
          created:
            description: When the request was created.
            example: 2020-03-24T11:11:41.139-05:00
            format: date-time
            type: string
        type: object
    NonEmployeeRequestSummary:
      example:
        approved: 0.8008281904610115
        rejected: 6.027456183070403
        pending: 1.4658129805029452
        nonEmployeeCount: 5.962133916683182
      properties:
        approved:
          description: The number of approved non-employee requests on all sources
            that *requested-for* user manages.
          type: number
        rejected:
          description: The number of rejected non-employee requests on all sources
            that *requested-for* user manages.
          type: number
        pending:
          description: The number of pending non-employee requests on all sources
            that *requested-for* user manages.
          type: number
        nonEmployeeCount:
          description: The number of non-employee records on all sources that *requested-for*
            user manages.
          type: number
      type: object
    NonEmployeeSourceWithNECount:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSource'
      - properties:
          nonEmployeeCount:
            description: Number of non-employee records associated with this source.
            example: 2
            format: int32
            type: integer
        type: object
    NonEmployeeSourceRequestBody:
      example:
        owner:
          id: 2c91808570313110017040b06f344ec9
        managementWorkgroup: "123299"
        accountManagers:
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        name: Retail
        description: Source description
        approvers:
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
        - id: 2c91808570313110017040b06f344ec9
      properties:
        name:
          description: Name of non-employee source.
          example: Retail
          type: string
        description:
          description: Description of non-employee source.
          example: Source description
          type: string
        owner:
          $ref: '#/components/schemas/NonEmployeeIdnUserRequest'
        managementWorkgroup:
          description: The ID for the management workgroup that contains source sub-admins
          example: "123299"
          type: string
        approvers:
          description: List of approvers.
          items:
            $ref: '#/components/schemas/NonEmployeeIdnUserRequest'
          maxItems: 3
          type: array
        accountManagers:
          description: List of account managers.
          items:
            $ref: '#/components/schemas/NonEmployeeIdnUserRequest'
          maxItems: 10
          type: array
      required:
      - description
      - name
      - owner
      type: object
    NonEmployeeSourceWithCloudExternalId:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSource'
      - properties:
          cloudExternalId:
            description: Legacy ID used for sources from the V1 API. This attribute
              will be removed from a future version of the API and will not be considered
              a breaking change. No clients should rely on this ID always being present.
            example: "99999"
            type: string
        type: object
    NonEmployeeSource:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSourceLite'
      - properties:
          approvers:
            description: List of approvers
            items:
              $ref: '#/components/schemas/IdentityReferenceWithId'
            type: array
          accountManagers:
            description: List of account managers
            items:
              $ref: '#/components/schemas/IdentityReferenceWithId'
            type: array
          modified:
            description: When the request was last modified.
            example: 2019-08-23T18:52:59.162Z
            format: date-time
            type: string
          created:
            description: When the request was created.
            example: 2019-08-23T18:40:35.772Z
            format: date-time
            type: string
          nonEmployeeCount:
            description: The number of non-employee records on all sources that *requested-for*
              user manages.
            example: 2
            format: int32
            nullable: true
            type: integer
        type: object
    NonEmployeeBulkUploadJob:
      example:
        sourceId: 2c91808568c529c60168cca6f90c1313
        created: 2019-08-23T18:52:59.162Z
        modified: 2019-08-23T18:52:59.162Z
        id: 2c91808568c529c60168cca6f90cffff
        status: PENDING
      properties:
        id:
          description: The bulk upload job's ID. (UUID)
          example: 2c91808568c529c60168cca6f90cffff
          type: string
        sourceId:
          description: The ID of the source to bulk-upload non-employees to. (UUID)
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        created:
          description: The date-time the job was submitted.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        modified:
          description: The date-time that the job was last updated.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        status:
          description: |
            Returns the following values indicating the progress or result of the bulk upload job.
            "PENDING" means the job is queued and waiting to be processed.
            "IN_PROGRESS" means the job is currently being processed.
            "COMPLETED" means the job has been completed without any errors.
            "ERROR" means the job failed to process with errors.
          enum:
          - PENDING
          - IN_PROGRESS
          - COMPLETED
          - ERROR
          example: PENDING
          type: string
      type: object
    NonEmployeeBulkUploadStatus:
      example:
        status: PENDING
      properties:
        status:
          description: |
            Returns the following values indicating the progress or result of the bulk upload job.
            "PENDING" means the job is queued and waiting to be processed.
            "IN_PROGRESS" means the job is currently being processed.
            "COMPLETED" means the job has been completed without any errors.
            "ERROR" means the job failed to process with errors.
            null means job has been submitted to the source.
          enum:
          - PENDING
          - IN_PROGRESS
          - COMPLETED
          - ERROR
          example: PENDING
          type: string
      type: object
    NonEmployeeApprovalItem:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeApprovalItemBase'
      - properties:
          nonEmployeeRequest:
            $ref: '#/components/schemas/NonEmployeeRequestLite'
        type: object
    NonEmployeeApprovalItemDetail:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeApprovalItemBase'
      - properties:
          nonEmployeeRequest:
            $ref: '#/components/schemas/NonEmployeeRequestWithoutApprovalItem'
        type: object
    NonEmployeeApprovalDecision:
      example:
        comment: comment
      properties:
        comment:
          description: Comment on the approval item.
          maxLength: 4000
          type: string
      type: object
    NonEmployeeRejectApprovalDecision:
      example:
        comment: comment
      properties:
        comment:
          description: Comment on the approval item.
          maxLength: 4000
          type: string
      required:
      - comment
      type: object
    NonEmployeeApprovalSummary:
      example:
        approved: 0.8008281904610115
        rejected: 1.4658129805029452
        pending: 6.027456183070403
      properties:
        approved:
          description: The number of approved non-employee approval requests.
          type: number
        pending:
          description: The number of pending non-employee approval requests.
          type: number
        rejected:
          description: The number of rejected non-employee approval requests.
          type: number
      type: object
    NonEmployeeSchemaAttribute:
      example:
        system: true
        helpText: The unique identifier for the account
        created: 2019-08-23T18:40:35.772Z
        modified: 2019-08-23T18:52:59.162Z
        id: ac110005-7156-1150-8171-5b292e3e0084
        label: Account Name
        placeholder: Enter a unique user name for this account.
        type: null
        technicalName: account.name
        required: true
      properties:
        id:
          description: Schema Attribute Id
          example: ac110005-7156-1150-8171-5b292e3e0084
          format: UUID
          type: string
        system:
          description: True if this schema attribute is mandatory on all non-employees
            sources.
          example: true
          type: boolean
        modified:
          description: When the schema attribute was last modified.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        created:
          description: When the schema attribute was created.
          example: 2019-08-23T18:40:35.772Z
          format: date-time
          type: string
        type:
          $ref: '#/components/schemas/NonEmployeeSchemaAttributeType'
        label:
          description: Label displayed on the UI for this schema attribute.
          example: Account Name
          type: string
        technicalName:
          description: The technical name of the attribute. Must be unique per source.
          example: account.name
          type: string
        helpText:
          description: help text displayed by UI.
          example: The unique identifier for the account
          type: string
        placeholder:
          description: Hint text that fills UI box.
          example: Enter a unique user name for this account.
          type: string
        required:
          description: "If true, the schema attribute is required for all non-employees\
            \ in the source"
          example: true
          type: boolean
      required:
      - label
      - technicalName
      - type
      type: object
    NonEmployeeSchemaAttributeBody:
      example:
        helpText: The unique identifier for the account
        label: Account Name
        placeholder: Enter a unique user name for this account.
        type: TEXT
        technicalName: account.name
        required: true
      properties:
        type:
          description: Type of the attribute. Only type 'TEXT' is supported for custom
            attributes.
          example: TEXT
          type: string
        label:
          description: Label displayed on the UI for this schema attribute.
          example: Account Name
          type: string
        technicalName:
          description: The technical name of the attribute. Must be unique per source.
          example: account.name
          type: string
        helpText:
          description: help text displayed by UI.
          example: The unique identifier for the account
          type: string
        placeholder:
          description: Hint text that fills UI box.
          example: Enter a unique user name for this account.
          type: string
        required:
          description: "If true, the schema attribute is required for all non-employees\
            \ in the source"
          example: true
          type: boolean
      required:
      - label
      - technicalName
      - type
      type: object
    ManagedClientType:
      description: Managed Client type
      enum:
      - CCG
      - VA
      - INTERNAL
      - IIQ_HARVESTER
      - null
      example: CCG
      nullable: true
      type: string
    ManagedClientStatusAggResponse:
      description: Managed Client Status
      example:
        body:
          body:
            id: "1528"
            clientId: "1528"
            clusterId: "1533"
            orgType: test
            vaDownloadUrl: https://sptcbu-va-images.s3.amazonaws.com/va-latest.zip
            clusterJobCount: 1
            configuration:
              clusterType: sqsCluster
              clusterExternalId: 2c91808876dd79120176f758af765c58
              debug: "false"
              failureThreshold: "0"
              gmtOffset: "-6"
              scheduleUpgrade: "false"
              va_version: va-megapod-useast1-595-1627543540
              jobType: VA_UPGRADE
              cookbook: va-megapod-useast1-595-1627543540
            connectorServices:
            - id: "540696"
              name: EndToEnd-ADSource
              connector_host: host.example.com
              connector_port: "389"
              connector_(boolean)useSSL: false
              connectorFileUploadHistory: null
            - id: "540698"
              name: EndToEnd-AzureADSource
              connector_host: null
              connector_port: null
              connector_(boolean)useSSL: null
              connectorFileUploadHistory: null
            - id: "540710"
              name: EndToEnd-OpenLDAP
              connector_host: 10.0.2.64
              connector_port: "389"
              connector_(boolean)useSSL: false
              connectorFileUploadHistory: null
            - id: "540713"
              name: Dynamic-ADSource
              connector_host: host.example.com
              connector_port: "389"
              connector_(boolean)useSSL: false
              connectorFileUploadHistory: null
            - id: "540716"
              name: EndToEnd-JdbcADSource
              connector_host: 10.0.5.187
              connector_port: "389"
              connector_(boolean)useSSL: false
              connectorFileUploadHistory: null
            - id: "540717"
              name: EndToEnd-JdbcSource
              connector_host: null
              connector_port: null
              connector_(boolean)useSSL: null
              connectorFileUploadHistory:
              - serviceId: "540717"
                date: 2021-02-05T22:58:15Z
                file: temp7081703651350031905mysql-connector-java-8.0.11.jar
            jobs:
            - uuid: 872b622f-5ab5-4836-9172-e3bb77f05b2c
              cookbook: 872b622f-5ab5-4836-9172-e3bb77f05b2c
              state: FINISHED
              type: VA_UPGRADE
              targetId: "1528"
              managedProcessConfiguration:
                charon:
                  version: "345"
                  path: sailpoint/charon
                  description: null
                  dependencies: null
                ccg:
                  version: 415_583_79.0.0
                  path: sailpoint/ccg
                  description: null
                  dependencies: null
                toolbox:
                  version: "6"
                  path: sailpoint/toolbox
                  description: null
                  dependencies: null
                fluent:
                  version: "50"
                  path: fluent/va
                  description: null
                  dependencies: null
                va_agent:
                  version: "89"
                  path: sailpoint/va_agent
                  description: null
                  dependencies: null
            queue:
              name: megapod-useast1-denali-lwt-cluster-1533
              region: us-east-1
            maintenance:
              window: "true"
              windowStartTime: 2021-07-29T00:00:00Z
              windowClusterTime: 2021-07-29T01:35:24Z
              windowFinishTime: 2021-07-29T04:00:00Z
        type: CCG
        status: null
        timestamp: 2020-01-01T00:00:00Z
      properties:
        body:
          description: ManagedClientStatus body information
          example:
            body:
              id: "1528"
              clientId: "1528"
              clusterId: "1533"
              orgType: test
              vaDownloadUrl: https://sptcbu-va-images.s3.amazonaws.com/va-latest.zip
              clusterJobCount: 1
              configuration:
                clusterType: sqsCluster
                clusterExternalId: 2c91808876dd79120176f758af765c58
                debug: "false"
                failureThreshold: "0"
                gmtOffset: "-6"
                scheduleUpgrade: "false"
                va_version: va-megapod-useast1-595-1627543540
                jobType: VA_UPGRADE
                cookbook: va-megapod-useast1-595-1627543540
              connectorServices:
              - id: "540696"
                name: EndToEnd-ADSource
                connector_host: host.example.com
                connector_port: "389"
                connector_(boolean)useSSL: false
                connectorFileUploadHistory: null
              - id: "540698"
                name: EndToEnd-AzureADSource
                connector_host: null
                connector_port: null
                connector_(boolean)useSSL: null
                connectorFileUploadHistory: null
              - id: "540710"
                name: EndToEnd-OpenLDAP
                connector_host: 10.0.2.64
                connector_port: "389"
                connector_(boolean)useSSL: false
                connectorFileUploadHistory: null
              - id: "540713"
                name: Dynamic-ADSource
                connector_host: host.example.com
                connector_port: "389"
                connector_(boolean)useSSL: false
                connectorFileUploadHistory: null
              - id: "540716"
                name: EndToEnd-JdbcADSource
                connector_host: 10.0.5.187
                connector_port: "389"
                connector_(boolean)useSSL: false
                connectorFileUploadHistory: null
              - id: "540717"
                name: EndToEnd-JdbcSource
                connector_host: null
                connector_port: null
                connector_(boolean)useSSL: null
                connectorFileUploadHistory:
                - serviceId: "540717"
                  date: 2021-02-05T22:58:15Z
                  file: temp7081703651350031905mysql-connector-java-8.0.11.jar
              jobs:
              - uuid: 872b622f-5ab5-4836-9172-e3bb77f05b2c
                cookbook: 872b622f-5ab5-4836-9172-e3bb77f05b2c
                state: FINISHED
                type: VA_UPGRADE
                targetId: "1528"
                managedProcessConfiguration:
                  charon:
                    version: "345"
                    path: sailpoint/charon
                    description: null
                    dependencies: null
                  ccg:
                    version: 415_583_79.0.0
                    path: sailpoint/ccg
                    description: null
                    dependencies: null
                  toolbox:
                    version: "6"
                    path: sailpoint/toolbox
                    description: null
                    dependencies: null
                  fluent:
                    version: "50"
                    path: fluent/va
                    description: null
                    dependencies: null
                  va_agent:
                    version: "89"
                    path: sailpoint/va_agent
                    description: null
                    dependencies: null
              queue:
                name: megapod-useast1-denali-lwt-cluster-1533
                region: us-east-1
              maintenance:
                window: "true"
                windowStartTime: 2021-07-29T00:00:00Z
                windowClusterTime: 2021-07-29T01:35:24Z
                windowFinishTime: 2021-07-29T04:00:00Z
          type: object
        status:
          $ref: '#/components/schemas/ManagedClientStatusEnum'
        type:
          $ref: '#/components/schemas/ManagedClientType'
        timestamp:
          description: timestamp on the Client Status update
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - body
      - status
      - timestamp
      - type
      type: object
    ManagedCluster:
      description: Managed Cluster
      example:
        publicKeyThumbprint: obc6pLiulGbtZ
        pod: megapod-useast1
        org: denali
        configuration:
          clusterExternalId: externalId
          ccgVersion: 77.0.0
        description: A short description of the managed cluster.
        logConfiguration:
          durationMinutes: 120
          rootLevel: INFO
          clientId: aClientId
          expiration: 2020-12-15T19:13:36.079Z
          logLevels: INFO
        operational: false
        publicKeyCertificate: '-----BEGIN CERTIFICATE-----TCCAb2gAwIBAgIBADANBgkqhkiG9w0BAQsFADAuMQ0wCwYDVQQD-----END
          CERTIFICATE-----'
        publicKey: '-----BEGIN PUBLIC KEY-----jANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3WgnsxP52MDgBTfHR+5n4-----END
          PUBLIC KEY-----'
        alertKey: LIMITED_RESOURCES
        type: idn
        clientIds:
        - "1244"
        - "1245"
        redis:
          redisHost: megapod-useast1-shared-redis.cloud.sailpoint.com
          redisPort: 6379
        clientType: CCG
        serviceCount: 6
        ccgVersion: v01
        ccId: "1533"
        name: Managed Cluster Name
        keyPair:
          publicKeyThumbprint: 6CMlaJIV44-xJxcB3CJBjDUUn54
          publicKeyCertificate: '-----BEGIN CERTIFICATE-----****-----END CERTIFICATE-----'
          publicKey: '-----BEGIN PUBLIC KEY-----******-----END PUBLIC KEY-----'
        attributes:
          keystore: /u3+7QAAAAIAAAABAAAAAQAvL3Byb3h5LWNsdXN0ZXIvMmM5MTgwODc3Yjg3MW
          queue:
            name: megapod-useast1-denali-lwt-cluster-1533
            region: us-east-1
        id: aClusterId
        pinnedConfig: false
        status: NORMAL
      properties:
        id:
          description: ManagedCluster ID
          example: aClusterId
          type: string
        name:
          description: ManagedCluster name
          example: Managed Cluster Name
          type: string
        pod:
          description: ManagedCluster pod
          example: megapod-useast1
          type: string
        org:
          description: ManagedCluster org
          example: denali
          type: string
        type:
          $ref: '#/components/schemas/ManagedClusterTypes'
        configuration:
          additionalProperties:
            type: string
          description: ManagedProcess configuration map
          example:
            clusterExternalId: externalId
            ccgVersion: 77.0.0
          type: object
        keyPair:
          $ref: '#/components/schemas/ManagedClusterKeyPair'
        attributes:
          $ref: '#/components/schemas/ManagedClusterAttributes'
        description:
          description: ManagedCluster description
          example: A short description of the managed cluster.
          type: string
        redis:
          $ref: '#/components/schemas/ManagedClusterRedis'
        clientType:
          $ref: '#/components/schemas/ManagedClientType'
        ccgVersion:
          description: CCG version used by the ManagedCluster
          example: v01
          type: string
        pinnedConfig:
          default: false
          description: boolean flag indiacting whether or not the cluster configuration
            is pinned
          example: false
          type: boolean
        logConfiguration:
          $ref: '#/components/schemas/ClientLogConfiguration'
        operational:
          default: false
          description: Whether or not the cluster is operational or not
          example: false
          type: boolean
        status:
          description: Cluster status
          example: NORMAL
          type: string
        publicKeyCertificate:
          description: Public key certificate
          example: '-----BEGIN CERTIFICATE-----TCCAb2gAwIBAgIBADANBgkqhkiG9w0BAQsFADAuMQ0wCwYDVQQD-----END
            CERTIFICATE-----'
          nullable: true
          type: string
        publicKeyThumbprint:
          description: Public key thumbprint
          example: obc6pLiulGbtZ
          nullable: true
          type: string
        publicKey:
          description: Public key
          example: '-----BEGIN PUBLIC KEY-----jANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3WgnsxP52MDgBTfHR+5n4-----END
            PUBLIC KEY-----'
          nullable: true
          type: string
        alertKey:
          description: Key describing any immediate cluster alerts
          example: LIMITED_RESOURCES
          type: string
        clientIds:
          description: List of clients in a cluster
          example:
          - "1244"
          - "1245"
          items:
            type: string
          type: array
        serviceCount:
          default: 0
          description: Number of services bound to a cluster
          example: 6
          format: int32
          type: integer
        ccId:
          default: "0"
          description: "CC ID only used in calling CC, will be removed without notice\
            \ when Migration to CEGS is finished"
          example: "1533"
          type: string
      required:
      - ccgVersion
      - clientType
      - id
      type: object
    ClientLogConfiguration:
      description: Client Runtime Logging Configuration
      example:
        durationMinutes: 120
        rootLevel: INFO
        clientId: aClientId
        expiration: 2020-12-15T19:13:36.079Z
        logLevels: INFO
      nullable: true
      properties:
        clientId:
          description: Log configuration's client ID
          example: aClientId
          type: string
        durationMinutes:
          description: Duration in minutes for log configuration to remain in effect
            before resetting to defaults
          example: 120
          format: int32
          maximum: 1440
          minimum: 5
          type: integer
        expiration:
          description: Expiration date-time of the log configuration request
          example: 2020-12-15T19:13:36.079Z
          format: date-time
          type: string
        rootLevel:
          $ref: '#/components/schemas/StandardLevel'
        logLevels:
          additionalProperties:
            $ref: '#/components/schemas/StandardLevel'
          description: Mapping of identifiers to Standard Log Level values
          example: INFO
          type: object
      required:
      - durationMinutes
      - rootLevel
      type: object
    MailFromAttributesDto:
      description: MAIL FROM attributes for a domain / identity
      example:
        identity: BobSmith@sailpoint.com
        mailFromDomain: example.sailpoint.com
      properties:
        identity:
          description: The identity or domain address
          example: BobSmith@sailpoint.com
          type: string
        mailFromDomain:
          description: The new MAIL FROM domain of the identity. Must be a subdomain
            of the identity.
          example: example.sailpoint.com
          type: string
      type: object
    MailFromAttributes:
      description: MAIL FROM attributes for a domain / identity
      example:
        identity: bob.smith@sailpoint.com
        mailFromDomain: foo.sailpoint.com
        mxRecord: 10 feedback-smtp.us-east-1.amazonses.com
        txtRecord: v=spf1 include:amazonses.com ~all
        mailFromDomainStatus: PENDING
      properties:
        identity:
          description: The email identity
          example: bob.smith@sailpoint.com
          type: string
        mailFromDomain:
          description: The name of a domain that an email identity uses as a custom
            MAIL FROM domain
          example: foo.sailpoint.com
          type: string
        mxRecord:
          description: MX record that is required in customer's DNS to allow the domain
            to receive bounce and complaint notifications that email providers send
            you
          example: 10 feedback-smtp.us-east-1.amazonses.com
          type: string
        txtRecord:
          description: TXT record that is required in customer's DNS in order to prove
            that Amazon SES is authorized to send email from your domain
          example: v=spf1 include:amazonses.com ~all
          type: string
        mailFromDomainStatus:
          description: The current status of the MAIL FROM verification
          enum:
          - PENDING
          - SUCCESS
          - FAILED
          example: PENDING
          type: string
      type: object
    MfaOktaConfig:
      example:
        accessKey: qw123Y3QlA5UqocYpdU3rEkzrK2D497y
        host: example.com
        mfaMethod: okta-verify
        enabled: true
        identityAttribute: email
      properties:
        mfaMethod:
          description: Mfa method name
          example: okta-verify
          nullable: true
          type: string
        enabled:
          default: false
          description: If MFA method is enabled.
          example: true
          type: boolean
        host:
          description: The server host name or IP address of the MFA provider.
          example: example.com
          nullable: true
          type: string
        accessKey:
          description: The secret key for authenticating requests to the MFA provider.
          example: qw123Y3QlA5UqocYpdU3rEkzrK2D497y
          nullable: true
          type: string
        identityAttribute:
          description: Optional. The name of the attribute for mapping IdentityNow
            identity to the MFA provider.
          example: email
          nullable: true
          type: string
      type: object
    MfaDuoConfig:
      example:
        accessKey: qw123Y3QlA5UqocYpdU3rEkzrK2D497y
        host: example.com
        configProperties:
          skey: qwERttyZx1CdlQye2Vwtbsjr3HKddy4BAiCXjc5x
          ikey: Q123WE45R6TY7890ZXCV
        mfaMethod: duo-web
        enabled: true
        identityAttribute: email
      properties:
        mfaMethod:
          description: Mfa method name
          example: duo-web
          nullable: true
          type: string
        enabled:
          default: false
          description: If MFA method is enabled.
          example: true
          type: boolean
        host:
          description: The server host name or IP address of the MFA provider.
          example: example.com
          nullable: true
          type: string
        accessKey:
          description: The secret key for authenticating requests to the MFA provider.
          example: qw123Y3QlA5UqocYpdU3rEkzrK2D497y
          nullable: true
          type: string
        identityAttribute:
          description: Optional. The name of the attribute for mapping IdentityNow
            identity to the MFA provider.
          example: email
          nullable: true
          type: string
        configProperties:
          additionalProperties: true
          description: A map with additional config properties for the given MFA method
            - duo-web.
          example:
            skey: qwERttyZx1CdlQye2Vwtbsjr3HKddy4BAiCXjc5x
            ikey: Q123WE45R6TY7890ZXCV
          nullable: true
          type: object
      type: object
    MfaConfigTestResponse:
      description: Response model for configuration test of a given MFA method
      example:
        state: SUCCESS
        error: MFA Method is disabled.
      properties:
        state:
          description: The configuration test result.
          enum:
          - SUCCESS
          - FAILED
          example: SUCCESS
          readOnly: true
          type: string
        error:
          description: The error message to indicate the failure of configuration
            test.
          example: MFA Method is disabled.
          readOnly: true
          type: string
      type: object
    OktaVerificationRequest:
      example:
        userId: example@mail.com
      properties:
        userId:
          description: User identifier for Verification request. The value of the
            user's attribute.
          example: example@mail.com
          nullable: false
          type: string
      required:
      - userId
      type: object
    VerificationResponse:
      example:
        requestId: 089899f13a8f4da7824996191587bab9
        error: Unable to connect DUO Service during verification
        status: SUCCESS
      properties:
        requestId:
          description: The verificationPollRequest request ID
          example: 089899f13a8f4da7824996191587bab9
          nullable: true
          type: string
        status:
          description: MFA Authentication status
          enum:
          - PENDING
          - SUCCESS
          - FAILED
          - LOCKOUT
          - NOT_ENOUGH_DATA
          example: SUCCESS
          type: string
        error:
          description: Error messages from MFA verification request
          example: Unable to connect DUO Service during verification
          nullable: true
          type: string
      type: object
    DuoVerificationRequest:
      example:
        signedResponse: AUTH|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjUzMDg5|f1f5f8ced5b340f3d303b05d0efa0e43b6a8f970:APP|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjU2NjE5|cb44cf44353f5127edcae31b1da0355f87357db2
        userId: 2c9180947f0ef465017f215cbcfd004b
      properties:
        userId:
          description: User id for Verification request.
          example: 2c9180947f0ef465017f215cbcfd004b
          nullable: false
          type: string
        signedResponse:
          description: User id for Verification request.
          example: AUTH|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjUzMDg5|f1f5f8ced5b340f3d303b05d0efa0e43b6a8f970:APP|d2lsbC5hbGJpbnxESTZNMFpHSThKQVRWTVpZN0M5VXwxNzAxMjU2NjE5|cb44cf44353f5127edcae31b1da0355f87357db2
          nullable: false
          type: string
      required:
      - signedResponse
      - userId
      type: object
    VerificationPollRequest:
      example:
        requestId: 089899f13a8f4da7824996191587bab9
      properties:
        requestId:
          description: Verification request Id
          example: 089899f13a8f4da7824996191587bab9
          nullable: false
          type: string
      required:
      - requestId
      type: object
    KbaAnswerRequest:
      example:
        answers:
        - questionId: 089899f13a8f4da7824996191587bab9
          answer: Your answer
        - questionId: 067899f13a8f4da7824996191587bab9
          answer: Your answer1
      properties:
        answers:
          description: Kba answers
          example:
          - questionId: 089899f13a8f4da7824996191587bab9
            answer: Your answer
          - questionId: 067899f13a8f4da7824996191587bab9
            answer: Your answer1
          items:
            $ref: '#/components/schemas/KbaAnswerRequestItem'
          nullable: false
          type: array
      required:
      - answers
      type: object
    KbaAuthResponse:
      example:
        kbaAuthResponseItems:
        - questionId: 089899f13a8f4da7824996191587bab9
          isVerified: false
        status: PENDING
      properties:
        kbaAuthResponseItems:
          example:
          - questionId: 089899f13a8f4da7824996191587bab9
            isVerified: false
          items:
            $ref: '#/components/schemas/KbaAuthResponseItem'
          type: array
        status:
          description: MFA Authentication status
          enum:
          - PENDING
          - SUCCESS
          - FAILED
          - LOCKOUT
          - NOT_ENOUGH_DATA
          example: PENDING
          type: string
      type: object
    TokenAuthRequest:
      example:
        userAlias: will.albin
        deliveryType: EMAIL_WORK
        token: "12345"
      properties:
        token:
          description: Token value
          example: "12345"
          nullable: false
          type: string
        userAlias:
          description: User alias from table spt_identity field named 'name'
          example: will.albin
          nullable: false
          type: string
        deliveryType:
          description: Token delivery type
          enum:
          - SMS_PERSONAL
          - VOICE_PERSONAL
          - SMS_WORK
          - VOICE_WORK
          - EMAIL_WORK
          - EMAIL_PERSONAL
          example: EMAIL_WORK
          nullable: false
          type: string
      required:
      - deliveryType
      - token
      - userAlias
      type: object
    TokenAuthResponse:
      example:
        status: PENDING
      properties:
        status:
          description: MFA Authentication status
          enum:
          - PENDING
          - SUCCESS
          - FAILED
          - LOCKOUT
          - NOT_ENOUGH_DATA
          example: PENDING
          type: string
      type: object
    SendTokenRequest:
      example:
        userAlias: will.albin
        deliveryType: EMAIL_WORK
      properties:
        userAlias:
          description: User alias from table spt_identity field named 'name'
          example: will.albin
          nullable: false
          type: string
        deliveryType:
          description: Token delivery type
          enum:
          - SMS_PERSONAL
          - VOICE_PERSONAL
          - SMS_WORK
          - VOICE_WORK
          - EMAIL_WORK
          - EMAIL_PERSONAL
          example: EMAIL_WORK
          nullable: false
          type: string
      required:
      - deliveryType
      - userAlias
      type: object
    SendTokenResponse:
      example:
        requestId: 089899f13a8f4da7824996191587bab9
        errorMessage: Unable to sent text message
        status: SUCCESS
      properties:
        requestId:
          description: The token request ID
          example: 089899f13a8f4da7824996191587bab9
          nullable: true
          type: string
        status:
          description: Status of sending token
          enum:
          - SUCCESS
          - FAILED
          example: SUCCESS
          type: string
        errorMessage:
          description: Error messages from token send request
          example: Unable to sent text message
          nullable: true
          type: string
      type: object
    TemplateDtoDefault:
      example:
        footer: footer
        subject: "You have $numberOfPendingTasks $taskTasks to complete in ${__global.productName}."
        name: Task Manager Subscription
        replyTo: $__global.emailFromAddress
        header: header
        description: Daily digest - sent if number of outstanding tasks for task owner
          > 0
        from: $__global.emailFromAddress
        medium: EMAIL
        locale: en
        body: Please go to the task manager
        key: cloud_manual_work_item_summary
      properties:
        key:
          description: The key of the default template
          example: cloud_manual_work_item_summary
          type: string
        name:
          description: The name of the default template
          example: Task Manager Subscription
          type: string
        medium:
          description: The message medium. More mediums may be added in the future.
          enum:
          - EMAIL
          - PHONE
          - SMS
          - SLACK
          - TEAMS
          example: EMAIL
          type: string
        locale:
          description: "The locale for the message text, a BCP 47 language tag."
          example: en
          type: string
        subject:
          description: The subject of the default template
          example: "You have $numberOfPendingTasks $taskTasks to complete in ${__global.productName}."
          type: string
        header:
          deprecated: true
          description: "The header value is now located within the body field. If\
            \ included with non-null values, will result in a 400."
          nullable: true
          type: string
          example: null
        body:
          description: The body of the default template
          example: Please go to the task manager
          type: string
        footer:
          deprecated: true
          description: "The footer value is now located within the body field. If\
            \ included with non-null values, will result in a 400."
          nullable: true
          type: string
          example: null
        from:
          description: The "From:" address of the default template
          example: $__global.emailFromAddress
          type: string
        replyTo:
          description: The "Reply To" field of the default template
          example: $__global.emailFromAddress
          type: string
        description:
          description: The description of the default template
          example: Daily digest - sent if number of outstanding tasks for task owner
            > 0
          type: string
      type: object
    TemplateDto:
      example:
        footer: footer
        subject: "You have $numberOfPendingTasks $taskTasks to complete in ${__global.productName}."
        created: 2020-01-01T00:00:00Z
        description: Daily digest - sent if number of outstanding tasks for task owner
          > 0
        medium: EMAIL
        locale: en
        body: Please go to the task manager
        name: Task Manager Subscription
        replyTo: $__global.emailFromAddress
        header: header
        modified: 2020-01-01T00:00:00Z
        from: $__global.emailFromAddress
        id: c17bea3a-574d-453c-9e04-4365fbf5af0b
        key: cloud_manual_work_item_summary
      properties:
        key:
          description: The key of the template
          example: cloud_manual_work_item_summary
          type: string
        name:
          description: The name of the Task Manager Subscription
          example: Task Manager Subscription
          type: string
        medium:
          description: The message medium. More mediums may be added in the future.
          enum:
          - EMAIL
          - PHONE
          - SMS
          - SLACK
          - TEAMS
          example: EMAIL
          type: string
        locale:
          description: "The locale for the message text, a BCP 47 language tag."
          example: en
          type: string
        subject:
          description: The subject line in the template
          example: "You have $numberOfPendingTasks $taskTasks to complete in ${__global.productName}."
          type: string
        header:
          deprecated: true
          description: "The header value is now located within the body field. If\
            \ included with non-null values, will result in a 400."
          nullable: true
          type: string
          example: null
        body:
          description: The body in the template
          example: Please go to the task manager
          type: string
        footer:
          deprecated: true
          description: "The footer value is now located within the body field. If\
            \ included with non-null values, will result in a 400."
          nullable: true
          type: string
          example: null
        from:
          description: The "From:" address in the template
          example: $__global.emailFromAddress
          type: string
        replyTo:
          description: The "Reply To" line in the template
          example: $__global.emailFromAddress
          type: string
        description:
          description: The description in the template
          example: Daily digest - sent if number of outstanding tasks for task owner
            > 0
          type: string
        id:
          description: This is auto-generated.
          example: c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
        created:
          description: The time when this template is created. This is auto-generated.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: The time when this template was last modified. This is auto-generated.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - key
      - locale
      - medium
      type: object
    TemplateBulkDeleteDto:
      example:
        medium: EMAIL
        locale: en
        key: cloud_manual_work_item_summary
      properties:
        key:
          example: cloud_manual_work_item_summary
          type: string
        medium:
          enum:
          - EMAIL
          - PHONE
          - SMS
          example: EMAIL
          type: string
        locale:
          description: "The locale for the message text, a BCP 47 language tag."
          example: en
          type: string
      required:
      - key
      type: object
    GetOAuthClientResponse:
      example:
        internal: false
        created: 2017-07-11T18:45:37.098Z
        businessName: Acme-Solar
        description: "An API client used for the authorization_code, refresh_token,\
          \ and client_credentials flows"
        refreshTokenValiditySeconds: 86400
        type: CONFIDENTIAL
        redirectUris:
        - http://localhost:12345
        enabled: true
        accessType: OFFLINE
        lastUsed: 2017-07-11T18:45:37.098Z
        grantTypes:
        - AUTHORIZATION_CODE
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        strongAuthSupported: false
        homepageUrl: http://localhost:12345
        accessTokenValiditySeconds: 750
        scope:
        - demo:api-client-scope:first
        - demo:api-client-scope:second
        name: Demo API Client
        claimsSupported: false
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
      properties:
        id:
          description: ID of the OAuth client
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        businessName:
          description: The name of the business the API Client should belong to
          example: Acme-Solar
          nullable: true
          type: string
        homepageUrl:
          description: The homepage URL associated with the owner of the API Client
          example: http://localhost:12345
          nullable: true
          type: string
        name:
          description: A human-readable name for the API Client
          example: Demo API Client
          type: string
        description:
          description: A description of the API Client
          example: "An API client used for the authorization_code, refresh_token,\
            \ and client_credentials flows"
          nullable: true
          type: string
        accessTokenValiditySeconds:
          description: The number of seconds an access token generated for this API
            Client is valid for
          example: 750
          format: int32
          type: integer
        refreshTokenValiditySeconds:
          description: The number of seconds a refresh token generated for this API
            Client is valid for
          example: 86400
          format: int32
          type: integer
        redirectUris:
          description: A list of the approved redirect URIs used with the authorization_code
            flow
          example:
          - http://localhost:12345
          items:
            type: string
          nullable: true
          type: array
        grantTypes:
          description: A list of OAuth 2.0 grant types this API Client can be used
            with
          example:
          - AUTHORIZATION_CODE
          - CLIENT_CREDENTIALS
          - REFRESH_TOKEN
          items:
            $ref: '#/components/schemas/GrantType'
          type: array
        accessType:
          $ref: '#/components/schemas/AccessType'
        type:
          $ref: '#/components/schemas/ClientType'
        internal:
          description: An indicator of whether the API Client can be used for requests
            internal to IDN
          example: false
          type: boolean
        enabled:
          description: An indicator of whether the API Client is enabled for use
          example: true
          type: boolean
        strongAuthSupported:
          description: An indicator of whether the API Client supports strong authentication
          example: false
          type: boolean
        claimsSupported:
          description: An indicator of whether the API Client supports the serialization
            of SAML claims when used with the authorization_code flow
          example: false
          type: boolean
        created:
          description: "The date and time, down to the millisecond, when the API Client\
            \ was created"
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: "The date and time, down to the millisecond, when the API Client\
            \ was last updated"
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        lastUsed:
          description: "The date and time, down to the millisecond, when this API\
            \ Client was last used to generate an access token. This timestamp does\
            \ not get updated on every API Client usage, but only once a day. This\
            \ property can be useful for identifying which API Clients are no longer\
            \ actively used and can be removed."
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          nullable: true
          type: string
        scope:
          description: Scopes of the API Client.
          example:
          - demo:api-client-scope:first
          - demo:api-client-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
      required:
      - accessTokenValiditySeconds
      - accessType
      - businessName
      - claimsSupported
      - created
      - description
      - enabled
      - grantTypes
      - homepageUrl
      - id
      - internal
      - modified
      - name
      - redirectUris
      - refreshTokenValiditySeconds
      - scope
      - strongAuthSupported
      - type
      type: object
    CreateOAuthClientRequest:
      example:
        internal: false
        businessName: Acme-Solar
        description: "An API client used for the authorization_code, refresh_token,\
          \ and client_credentials flows"
        refreshTokenValiditySeconds: 86400
        type: CONFIDENTIAL
        redirectUris:
        - http://localhost:12345
        - http://localhost:67890
        enabled: true
        accessType: OFFLINE
        grantTypes:
        - AUTHORIZATION_CODE
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        strongAuthSupported: false
        homepageUrl: http://localhost:12345
        accessTokenValiditySeconds: 750
        scope:
        - demo:api-client-scope:first
        - demo:api-client-scope:second
        name: Demo API Client
        claimsSupported: false
      properties:
        businessName:
          description: The name of the business the API Client should belong to
          example: Acme-Solar
          nullable: true
          type: string
        homepageUrl:
          description: The homepage URL associated with the owner of the API Client
          example: http://localhost:12345
          nullable: true
          type: string
        name:
          description: A human-readable name for the API Client
          example: Demo API Client
          nullable: true
          type: string
        description:
          description: A description of the API Client
          example: "An API client used for the authorization_code, refresh_token,\
            \ and client_credentials flows"
          nullable: true
          type: string
        accessTokenValiditySeconds:
          description: The number of seconds an access token generated for this API
            Client is valid for
          example: 750
          format: int32
          type: integer
        refreshTokenValiditySeconds:
          description: The number of seconds a refresh token generated for this API
            Client is valid for
          example: 86400
          format: int32
          type: integer
        redirectUris:
          description: A list of the approved redirect URIs. Provide one or more URIs
            when assigning the AUTHORIZATION_CODE grant type to a new OAuth Client.
          example:
          - http://localhost:12345
          - http://localhost:67890
          items:
            type: string
          nullable: true
          type: array
        grantTypes:
          description: A list of OAuth 2.0 grant types this API Client can be used
            with
          example:
          - AUTHORIZATION_CODE
          - CLIENT_CREDENTIALS
          - REFRESH_TOKEN
          items:
            $ref: '#/components/schemas/GrantType'
          nullable: true
          type: array
        accessType:
          $ref: '#/components/schemas/AccessType'
        type:
          $ref: '#/components/schemas/ClientType'
        internal:
          description: An indicator of whether the API Client can be used for requests
            internal within the product.
          example: false
          type: boolean
        enabled:
          description: An indicator of whether the API Client is enabled for use
          example: true
          type: boolean
        strongAuthSupported:
          description: An indicator of whether the API Client supports strong authentication
          example: false
          type: boolean
        claimsSupported:
          description: An indicator of whether the API Client supports the serialization
            of SAML claims when used with the authorization_code flow
          example: false
          type: boolean
        scope:
          description: "Scopes of the API Client. If no scope is specified, the client\
            \ will be created with the default scope \"sp:scopes:all\". This means\
            \ the API Client will have all the rights of the owner who created it."
          example:
          - demo:api-client-scope:first
          - demo:api-client-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
      required:
      - accessTokenValiditySeconds
      - accessType
      - description
      - enabled
      - grantTypes
      - name
      type: object
    CreateOAuthClientResponse:
      example:
        internal: false
        created: 2017-07-11T18:45:37.098Z
        businessName: Acme-Solar
        description: "An API client used for the authorization_code, refresh_token,\
          \ and client_credentials flows"
        secret: 5c32dd9b21adb51c77794d46e71de117a1d0ddb36a7ff941fa28014ab7de2cf3
        refreshTokenValiditySeconds: 86400
        type: CONFIDENTIAL
        redirectUris:
        - http://localhost:12345
        enabled: true
        accessType: OFFLINE
        grantTypes:
        - AUTHORIZATION_CODE
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        strongAuthSupported: false
        homepageUrl: http://localhost:12345
        accessTokenValiditySeconds: 750
        scope:
        - demo:api-client-scope:first
        - demo:api-client-scope:second
        name: Demo API Client
        claimsSupported: false
        modified: 2018-06-25T20:22:28.104Z
        id: 2c9180835d2e5168015d32f890ca1581
      properties:
        id:
          description: ID of the OAuth client
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        secret:
          description: Secret of the OAuth client (This field is only returned on
            the intial create call.)
          example: 5c32dd9b21adb51c77794d46e71de117a1d0ddb36a7ff941fa28014ab7de2cf3
          type: string
        businessName:
          description: The name of the business the API Client should belong to
          example: Acme-Solar
          type: string
        homepageUrl:
          description: The homepage URL associated with the owner of the API Client
          example: http://localhost:12345
          type: string
        name:
          description: A human-readable name for the API Client
          example: Demo API Client
          type: string
        description:
          description: A description of the API Client
          example: "An API client used for the authorization_code, refresh_token,\
            \ and client_credentials flows"
          type: string
        accessTokenValiditySeconds:
          description: The number of seconds an access token generated for this API
            Client is valid for
          example: 750
          format: int32
          type: integer
        refreshTokenValiditySeconds:
          description: The number of seconds a refresh token generated for this API
            Client is valid for
          example: 86400
          format: int32
          type: integer
        redirectUris:
          description: A list of the approved redirect URIs used with the authorization_code
            flow
          example:
          - http://localhost:12345
          items:
            type: string
          type: array
        grantTypes:
          description: A list of OAuth 2.0 grant types this API Client can be used
            with
          example:
          - AUTHORIZATION_CODE
          - CLIENT_CREDENTIALS
          - REFRESH_TOKEN
          items:
            $ref: '#/components/schemas/GrantType'
          type: array
        accessType:
          $ref: '#/components/schemas/AccessType'
        type:
          $ref: '#/components/schemas/ClientType'
        internal:
          description: An indicator of whether the API Client can be used for requests
            internal to IDN
          example: false
          type: boolean
        enabled:
          description: An indicator of whether the API Client is enabled for use
          example: true
          type: boolean
        strongAuthSupported:
          description: An indicator of whether the API Client supports strong authentication
          example: false
          type: boolean
        claimsSupported:
          description: An indicator of whether the API Client supports the serialization
            of SAML claims when used with the authorization_code flow
          example: false
          type: boolean
        created:
          description: "The date and time, down to the millisecond, when the API Client\
            \ was created"
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: "The date and time, down to the millisecond, when the API Client\
            \ was last updated"
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
        scope:
          description: Scopes of the API Client.
          example:
          - demo:api-client-scope:first
          - demo:api-client-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
      required:
      - accessTokenValiditySeconds
      - accessType
      - businessName
      - claimsSupported
      - created
      - description
      - enabled
      - grantTypes
      - homepageUrl
      - id
      - internal
      - modified
      - name
      - redirectUris
      - refreshTokenValiditySeconds
      - scope
      - secret
      - strongAuthSupported
      - type
      type: object
    OrgConfig:
      description: DTO class for OrgConfig data accessible by customer external org
        admin ("ORG_ADMIN") users
      example:
        armAuth: epiYNTRYA2S7swisDWk1Zv4VMNgvqEjiBh5_ufuCWsma2m-5XADijqBg0ijXLby5nS6lxZNXabhGnAPGeDGc4V3jQKrhwV-UHypRLs8ZLgOjiQNus9NimS0uPdKomRW6TFWqXyfnYd-znNgbbVuwUy9GyD9ebDVJSntPastxSx7UcyGuWBqfNZYpuxKRWe_7TVY60qL55jUqyz8N4XUbbdcxdbZ0uik6ut-Bv90MKTbZexBW_PR4qcgIkaEs4kIenLyBxnGziYo7AO0tJ8bGHO8FJRkibCpAQIt7PISLo7Gg_Xf9j10dKq2YDgy4pPTvz3fE2ZHYnXCXvXFSA-vVag==
        armCustomerId: DE38E75A-5FF6-4A65-5DC7-08D64426B09E
        orgName: acme-solar
        lcsChangeHonorsSourceEnableFeature: false
        armDb: EU
        iaiEnableCertificationRecommendations: true
        timeZone: America/Toronto
        armSsoUrl: https://your-arm-sso-url
        sodReportConfigs:
        - included: false
          required: true
          columnName: SOD Business Name
          order: 2
        - included: false
          required: true
          columnName: SOD Business Name
          order: 2
        armSapSystemIdMappings: "[{sourceId=2c91808c791a94e501792388b0d62659, systemId=1556},\
          \ {sourceId=2_2c91808c791a94e501792388b0d62659, systemId=2_1556}, {sourceId=3_2c91808c791a94e501792388b0d62659,\
          \ systemId=3_1556}]"
      properties:
        orgName:
          description: The name of the org.
          example: acme-solar
          type: string
        timeZone:
          description: The selected time zone which is to be used for the org.  This
            directly affects when scheduled tasks are executed.  Valid options can
            be found at /beta/org-config/valid-time-zones
          example: America/Toronto
          type: string
        lcsChangeHonorsSourceEnableFeature:
          description: Flag to determine whether the LCS_CHANGE_HONORS_SOURCE_ENABLE_FEATURE
            flag is enabled for the current org.
          example: false
          type: boolean
        armCustomerId:
          description: ARM Customer ID
          example: DE38E75A-5FF6-4A65-5DC7-08D64426B09E
          nullable: true
          type: string
        armSapSystemIdMappings:
          description: A list of IDN::sourceId to ARM::systemId mappings.
          example: "[{sourceId=2c91808c791a94e501792388b0d62659, systemId=1556}, {sourceId=2_2c91808c791a94e501792388b0d62659,\
            \ systemId=2_1556}, {sourceId=3_2c91808c791a94e501792388b0d62659, systemId=3_1556}]"
          nullable: true
          type: string
        armAuth:
          description: ARM authentication string
          example: epiYNTRYA2S7swisDWk1Zv4VMNgvqEjiBh5_ufuCWsma2m-5XADijqBg0ijXLby5nS6lxZNXabhGnAPGeDGc4V3jQKrhwV-UHypRLs8ZLgOjiQNus9NimS0uPdKomRW6TFWqXyfnYd-znNgbbVuwUy9GyD9ebDVJSntPastxSx7UcyGuWBqfNZYpuxKRWe_7TVY60qL55jUqyz8N4XUbbdcxdbZ0uik6ut-Bv90MKTbZexBW_PR4qcgIkaEs4kIenLyBxnGziYo7AO0tJ8bGHO8FJRkibCpAQIt7PISLo7Gg_Xf9j10dKq2YDgy4pPTvz3fE2ZHYnXCXvXFSA-vVag==
          nullable: true
          type: string
        armDb:
          description: ARM database name
          example: EU
          nullable: true
          type: string
        armSsoUrl:
          description: ARM SSO URL
          example: https://your-arm-sso-url
          nullable: true
          type: string
        iaiEnableCertificationRecommendations:
          description: Flag to determine whether IAI Certification Recommendations
            are enabled for the current org
          example: true
          type: boolean
        sodReportConfigs:
          items:
            $ref: '#/components/schemas/ReportConfigDTO'
          type: array
      type: object
    OutlierSummary:
      example:
        snapshotDate: 2021-05-01T18:40:35.772Z
        totalIdentities: 5000
        totalOutliers: 50
        type: LOW_SIMILARITY
      properties:
        type:
          description: The type of outlier summary
          enum:
          - LOW_SIMILARITY
          - STRUCTURAL
          example: LOW_SIMILARITY
          type: string
        snapshotDate:
          description: The date the bulk outlier detection ran/snapshot was created
          example: 2021-05-01T18:40:35.772Z
          format: date-time
          type: string
        totalOutliers:
          description: Total number of outliers for the customer making the request
          example: 50
          type: integer
        totalIdentities:
          description: Total number of identities for the customer making the request
          example: 5000
          type: integer
      type: object
    LatestOutlierSummary:
      example:
        snapshotDate: 2021-05-01T18:40:35.772Z
        totalIdentities: 5000
        totalIgnored: 10
        totalOutliers: 50
        type: LOW_SIMILARITY
      properties:
        type:
          description: The type of outlier summary
          enum:
          - LOW_SIMILARITY
          - STRUCTURAL
          example: LOW_SIMILARITY
          type: string
        snapshotDate:
          description: The date the bulk outlier detection ran/snapshot was created
          example: 2021-05-01T18:40:35.772Z
          format: date-time
          type: string
        totalOutliers:
          description: Total number of outliers for the customer making the request
          example: 50
          type: integer
        totalIdentities:
          description: Total number of identities for the customer making the request
          example: 5000
          type: integer
        totalIgnored:
          description: Total number of ignored outliers
          example: 10
          type: integer
      type: object
    Outlier:
      example:
        ignored: false
        score: 0.92
        unignoreDate: 2021-06-01T18:40:35.772Z
        ignoreDate: 2021-06-01T18:40:35.772Z
        identityId: 5be33d3e-c54d-4ed7-af73-2380543e8283
        firstDetectionDate: 2021-05-01T18:40:35.772Z
        unignoreType: MANUAL
        attributes:
          displayName: John Smith
          jobTitle: Software Engineer
          department: Engineering
        id: 5be33d3e-c54d-4ed7-af73-2380543e8283
        type: LOW_SIMILARITY
        latestDetectionDate: 2021-05-03T18:40:35.772Z
      properties:
        id:
          description: The identity's unique identifier for the outlier record
          example: 5be33d3e-c54d-4ed7-af73-2380543e8283
          type: string
        identityId:
          description: The ID of the identity that is detected as an outlier
          example: 5be33d3e-c54d-4ed7-af73-2380543e8283
          type: string
        type:
          description: The type of outlier summary
          enum:
          - LOW_SIMILARITY
          - STRUCTURAL
          example: LOW_SIMILARITY
          type: string
        firstDetectionDate:
          description: The first date the outlier was detected
          example: 2021-05-01T18:40:35.772Z
          format: date-time
          type: string
        latestDetectionDate:
          description: The most recent date the outlier was detected
          example: 2021-05-03T18:40:35.772Z
          format: date-time
          type: string
        ignored:
          description: Flag whether or not the outlier has been ignored
          example: false
          type: boolean
        attributes:
          description: Object containing mapped identity attributes
          example:
            displayName: John Smith
            jobTitle: Software Engineer
            department: Engineering
          type: object
        score:
          description: The outlier score determined by the detection engine ranging
            from 0..1
          example: 0.92
          format: float
          type: number
        unignoreType:
          description: Enum value of if the outlier manually or automatically un-ignored.
            Will be NULL if outlier is not ignored
          enum:
          - MANUAL
          - AUTOMATIC
          example: MANUAL
          type: string
        unignoreDate:
          description: shows date when last time has been unignored outlier
          example: 2021-06-01T18:40:35.772Z
          format: date-time
          type: string
        ignoreDate:
          description: shows date when last time has been ignored outlier
          example: 2021-06-01T18:40:35.772Z
          format: date-time
          type: string
      type: object
    OutlierContributingFeature:
      example:
        translationMessages:
          displayName:
            values:
            - "75"
            - department
            key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH
          description:
            values:
            - "75"
            - department
            key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH
        importance: -0.15
        displayName: Number of entitlements
        valueType: INTEGER
        name: entitlement_count
        description: The total number of entitlements belonging to an identity
        id: 66e38828-5017-47af-92ff-9844871352c5
        value: 0.92
      properties:
        id:
          description: Contributing feature id
          example: 66e38828-5017-47af-92ff-9844871352c5
          type: string
        name:
          description: The name of the feature
          example: entitlement_count
          type: string
        valueType:
          description: The data type of the value field
          enum:
          - INTEGER
          - FLOAT
          example: INTEGER
          type: string
        value:
          $ref: '#/components/schemas/OutlierContributingFeature_value'
        importance:
          description: The importance of the feature. This can also be a negative
            value
          example: -0.15
          format: float
          maximum: 1.0
          minimum: -1.0
          type: number
        displayName:
          description: The (translated if header is passed) displayName for the feature
          example: Number of entitlements
          type: string
        description:
          description: The (translated if header is passed) description for the feature
          example: The total number of entitlements belonging to an identity
          type: string
        translationMessages:
          $ref: '#/components/schemas/OutlierFeatureTranslation'
      type: object
    OutliersContributingFeatureAccessItems:
      example:
        accessType: ENTITLEMENT
        displayName: Applied Research Access
        extremelyRare: true
        description: "Access to research information, lab results, and schematics"
        id: 2c938083633d259901633d2623ec0375
        sourceName: appName
      properties:
        id:
          description: The ID of the access item
          example: 2c938083633d259901633d2623ec0375
          type: string
        displayName:
          description: the display name of the access item
          example: Applied Research Access
          type: string
        description:
          description: Description of the access item.
          example: "Access to research information, lab results, and schematics"
          type: string
        accessType:
          description: The type of the access item.
          enum:
          - ENTITLEMENT
          - ACCESS_PROFILE
          - ROLE
          example: ENTITLEMENT
          type: string
        sourceName:
          description: the associated source name if it exists
          example: appName
          type: string
        extremelyRare:
          default: false
          description: rarest access
          example: true
          type: boolean
      type: object
    OutlierFeatureSummary:
      example:
        featureExplanation: An identity that has too much rare access has a higher
          change of becoming a security threat due to the unique access they possess
        peerIdentityId: 9f9d5d53ad0e48fba7352f6da9f1b8gbg
        accessItemReference:
          displayName: All Rare Entitlements
          searchPlaceholder: Search by name or description
        identityOutlierDisplayName: John Smith
        featureDefinition: Identity total number of entitlements
        peerDisplayName: Mary Jane
        outlierFeatureDisplayValues:
        - displayName: Aliza Chris
          valueType: INTEGER
          value: "55"
        - displayName: Aliza Chris
          valueType: INTEGER
          value: "55"
        contributingFeatureName: Rare Access
      properties:
        contributingFeatureName:
          description: Contributing feature name
          example: Rare Access
          type: string
        identityOutlierDisplayName:
          description: Identity display name
          example: John Smith
          type: string
        outlierFeatureDisplayValues:
          items:
            $ref: '#/components/schemas/OutlierFeatureSummary_outlierFeatureDisplayValues_inner'
          type: array
        featureDefinition:
          description: Definition of the feature
          example: Identity total number of entitlements
          type: string
        featureExplanation:
          description: Detailed explanation of the feature
          example: An identity that has too much rare access has a higher change of
            becoming a security threat due to the unique access they possess
          type: string
        peerDisplayName:
          description: outlier's peer identity display name
          example: Mary Jane
          type: string
        peerIdentityId:
          description: outlier's peer identity id
          example: 9f9d5d53ad0e48fba7352f6da9f1b8gbg
          type: string
        accessItemReference:
          description: Access Item reference
          example:
            displayName: All Rare Entitlements
            searchPlaceholder: Search by name or description
          type: object
      type: object
    PasswordInfoQueryDTO:
      example:
        sourceName: My-AD
        userName: Abby.Smith
      properties:
        userName:
          description: The login name of the user
          example: Abby.Smith
          type: string
        sourceName:
          description: The display name of the source
          example: My-AD
          type: string
      type: object
    PasswordInfo:
      example:
        sourceId: 2c918083746f642c01746f990884012a
        identityId: 2c918085744fec4301746f9a5bce4605
        policies:
        - passwordRepeatedChar is 3
        - passwordMinAlpha is 1
        - passwordMinLength is 5
        - passwordMinNumeric is 1
        publicKey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuGFkWi2J75TztpbaPKd36bJnIB3J8gZ6UcoS9oSDYsqBzPpTsfZXYaEf4Y4BKGgJIXmE/lwhwuj7mU1itdZ2qTSNFtnXA8Fn75c3UUkk+h+wdZbkuSmqlsJo3R1OnJkwkJggcAy9Jvk9jlcrNLWorpQ1w9raUvxtvfgkSdq153KxotenQ1HciSyZ0nA/Kw0UaucLnho8xdRowZs11afXGXA9IT9H6D8T6zUdtSxm0nAyH+mluma5LdTfaM50W3l/L8q56Vrqmx2pZIiwdx/0+g3Y++jV70zom0ZBkC1MmSoLMrQYG5OICNjr72f78B2PaGXfarQHqARLjKpMVt9YIQIDAQAB
        accounts:
        - accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          accountName: Abby.Smith
        - accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          accountName: Abby.Smith
        publicKeyId: N2M1OTJiMGEtMDJlZS00ZWU3LTkyYTEtNjA5YmI5NWE3ZWVh
      properties:
        identityId:
          example: 2c918085744fec4301746f9a5bce4605
          type: string
        sourceId:
          example: 2c918083746f642c01746f990884012a
          type: string
        publicKeyId:
          example: N2M1OTJiMGEtMDJlZS00ZWU3LTkyYTEtNjA5YmI5NWE3ZWVh
          type: string
        publicKey:
          description: User's public key with Base64 encoding
          example: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuGFkWi2J75TztpbaPKd36bJnIB3J8gZ6UcoS9oSDYsqBzPpTsfZXYaEf4Y4BKGgJIXmE/lwhwuj7mU1itdZ2qTSNFtnXA8Fn75c3UUkk+h+wdZbkuSmqlsJo3R1OnJkwkJggcAy9Jvk9jlcrNLWorpQ1w9raUvxtvfgkSdq153KxotenQ1HciSyZ0nA/Kw0UaucLnho8xdRowZs11afXGXA9IT9H6D8T6zUdtSxm0nAyH+mluma5LdTfaM50W3l/L8q56Vrqmx2pZIiwdx/0+g3Y++jV70zom0ZBkC1MmSoLMrQYG5OICNjr72f78B2PaGXfarQHqARLjKpMVt9YIQIDAQAB
          type: string
        accounts:
          description: Account info related to queried identity and source
          items:
            $ref: '#/components/schemas/PasswordInfoAccount'
          type: array
        policies:
          description: Password constraints
          example:
          - passwordRepeatedChar is 3
          - passwordMinAlpha is 1
          - passwordMinLength is 5
          - passwordMinNumeric is 1
          items:
            type: string
          type: array
      type: object
    PasswordChangeRequest:
      example:
        sourceId: 8a807d4c73c545510173c545d4b60246
        accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
        identityId: 8a807d4c73c545510173c545f0a002ff
        publicKeyId: YWQ2NjQ4MTItZjY0NC00MWExLWFjMjktOGNmMzU3Y2VlNjk2
        encryptedPassword: XzN+YwKgr2C+InkMYFMBG3UtjMEw5ZIql/XFlXo8cJNeslmkplx6vn4kd4/43IF9STBk5RnzR6XmjpEO+FwHDoiBwYZAkAZK/Iswxk4OdybG6Y4MStJCOCiK8osKr35IMMSV/mbO4wAeltoCk7daTWzTGLiI6UaT5tf+F2EgdjJZ7YqM8W8r7aUWsm3p2Xt01Y46ZRx0QaM91QruiIx2rECFT2pUO0wr+7oQ77jypATyGWRtADsu3YcvCk/6U5MqCnXMzKBcRas7NnZdSL/d5H1GglVGz3VLPMaivG4/oL4chOMmFCRl/zVsGxZ9RhN8rxsRGFFKn+rhExTi+bax3A==
      properties:
        identityId:
          description: The identity ID that requested the password change
          example: 8a807d4c73c545510173c545f0a002ff
          type: string
        encryptedPassword:
          description: The RSA encrypted password
          example: XzN+YwKgr2C+InkMYFMBG3UtjMEw5ZIql/XFlXo8cJNeslmkplx6vn4kd4/43IF9STBk5RnzR6XmjpEO+FwHDoiBwYZAkAZK/Iswxk4OdybG6Y4MStJCOCiK8osKr35IMMSV/mbO4wAeltoCk7daTWzTGLiI6UaT5tf+F2EgdjJZ7YqM8W8r7aUWsm3p2Xt01Y46ZRx0QaM91QruiIx2rECFT2pUO0wr+7oQ77jypATyGWRtADsu3YcvCk/6U5MqCnXMzKBcRas7NnZdSL/d5H1GglVGz3VLPMaivG4/oL4chOMmFCRl/zVsGxZ9RhN8rxsRGFFKn+rhExTi+bax3A==
          type: string
        publicKeyId:
          description: The encryption key ID
          example: YWQ2NjQ4MTItZjY0NC00MWExLWFjMjktOGNmMzU3Y2VlNjk2
          type: string
        accountId:
          description: Account ID of the account This is specified per account schema
            in the source configuration. It is used to distinguish accounts. More
            info can be found here https://community.sailpoint.com/t5/IdentityNow-Connectors/How-do-I-designate-an-account-attribute-as-the-Account-ID-for-a/ta-p/80350
          example: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          type: string
        sourceId:
          description: The ID of the source for which identity is requesting the password
            change
          example: 8a807d4c73c545510173c545d4b60246
          type: string
      type: object
    PasswordChangeResponse:
      example:
        requestId: 089899f13a8f4da7824996191587bab9
        state: IN_PROGRESS
      properties:
        requestId:
          description: The password change request ID
          example: 089899f13a8f4da7824996191587bab9
          nullable: true
          type: string
        state:
          description: Password change state
          enum:
          - IN_PROGRESS
          - FINISHED
          - FAILED
          type: string
      type: object
    PasswordStatus:
      example:
        requestId: 089899f13a8f4da7824996191587bab9
        state: IN_PROGRESS
        errors:
        - errors
        - errors
        sourceIds:
        - sourceIds
        - sourceIds
      properties:
        requestId:
          description: The password change request ID
          example: 089899f13a8f4da7824996191587bab9
          nullable: true
          type: string
        state:
          description: Password change state
          enum:
          - IN_PROGRESS
          - FINISHED
          - FAILED
          type: string
        errors:
          description: The errors during the password change request
          items:
            type: string
          type: array
        sourceIds:
          description: List of source IDs in the password change request
          items:
            type: string
          type: array
      type: object
    PasswordSyncGroup:
      example:
        name: Password Sync Group 1
        passwordPolicyId: 2c91808d744ba0ce01746f93b6204501
        id: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
        sourceIds:
        - 2c918084660f45d6016617daa9210584
        - 2c918084660f45d6016617daa9210500
      properties:
        id:
          description: ID of the sync group
          example: 6881f631-3bd5-4213-9c75-8e05cc3e35dd
          type: string
        name:
          description: Name of the sync group
          example: Password Sync Group 1
          type: string
        passwordPolicyId:
          description: ID of the password policy
          example: 2c91808d744ba0ce01746f93b6204501
          type: string
        sourceIds:
          description: List of password managed sources IDs
          example:
          - 2c918084660f45d6016617daa9210584
          - 2c918084660f45d6016617daa9210500
          items:
            type: string
          type: array
      type: object
    PasswordOrgConfig:
      example:
        digitTokenLength: 9
        digitTokenEnabled: true
        digitTokenDurationMinutes: 10
        customInstructionsEnabled: true
      properties:
        customInstructionsEnabled:
          default: false
          description: Indicator whether custom password instructions feature is enabled.
            The default value is false.
          example: true
          type: boolean
        digitTokenEnabled:
          default: false
          description: Indicator whether "digit token" feature is enabled. The default
            value is false.
          example: true
          type: boolean
        digitTokenDurationMinutes:
          default: 5
          description: The duration of "digit token" in minutes. The default value
            is 5.
          example: 10
          format: int32
          maximum: 60
          minimum: 1
          type: integer
        digitTokenLength:
          default: 6
          description: The length of "digit token". The default value is 6.
          example: 9
          format: int32
          maximum: 18
          minimum: 6
          type: integer
      type: object
    GetPersonalAccessTokenResponse:
      example:
        owner:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        lastUsed: 2017-07-11T18:45:37.098Z
        created: 2017-07-11T18:45:37.098Z
        scope:
        - demo:personal-access-token-scope:first
        - demo:personal-access-token-scope:second
        name: NodeJS Integration
        id: 86f1dc6fe8f54414950454cbb11278fa
      properties:
        id:
          description: The ID of the personal access token (to be used as the username
            for Basic Auth).
          example: 86f1dc6fe8f54414950454cbb11278fa
          type: string
        name:
          description: The name of the personal access token. Cannot be the same as
            other personal access tokens owned by a user.
          example: NodeJS Integration
          type: string
        scope:
          description: Scopes of the personal  access token.
          example:
          - demo:personal-access-token-scope:first
          - demo:personal-access-token-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
        owner:
          $ref: '#/components/schemas/PatOwner'
        created:
          description: "The date and time, down to the millisecond, when this personal\
            \ access token was created."
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        lastUsed:
          description: "The date and time, down to the millisecond, when this personal\
            \ access token was last used to generate an access token. This timestamp\
            \ does not get updated on every PAT usage, but only once a day. This property\
            \ can be useful for identifying which PATs are no longer actively used\
            \ and can be removed."
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          nullable: true
          type: string
      required:
      - created
      - id
      - name
      - owner
      - scope
      type: object
    CreatePersonalAccessTokenRequest:
      description: Object for specifying the name of a personal access token to create
      example:
        scope:
        - demo:personal-access-token-scope:first
        - demo:personal-access-token-scope:second
        name: NodeJS Integration
      properties:
        name:
          description: The name of the personal access token (PAT) to be created.
            Cannot be the same as another PAT owned by the user for whom this PAT
            is being created.
          example: NodeJS Integration
          type: string
        scope:
          description: "Scopes of the personal access token. If no scope is specified,\
            \ the token will be created with the default scope \"sp:scopes:all\".\
            \ This means the personal access token will have all the rights of the\
            \ owner who created it."
          example:
          - demo:personal-access-token-scope:first
          - demo:personal-access-token-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
      required:
      - name
      type: object
    CreatePersonalAccessTokenResponse:
      example:
        owner:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        created: 2017-07-11T18:45:37.098Z
        scope:
        - demo:personal-access-token-scope:first
        - demo:personal-access-token-scope:second
        name: NodeJS Integration
        id: 86f1dc6fe8f54414950454cbb11278fa
        secret: 1d1bef2b9f426383447f64f69349fc7cac176042578d205c256ba3f37c59adb9
      properties:
        id:
          description: The ID of the personal access token (to be used as the username
            for Basic Auth).
          example: 86f1dc6fe8f54414950454cbb11278fa
          type: string
        secret:
          description: The secret of the personal access token (to be used as the
            password for Basic Auth).
          example: 1d1bef2b9f426383447f64f69349fc7cac176042578d205c256ba3f37c59adb9
          type: string
        scope:
          description: Scopes of the personal  access token.
          example:
          - demo:personal-access-token-scope:first
          - demo:personal-access-token-scope:second
          items:
            default: sp:scopes:all
            type: string
          nullable: true
          type: array
        name:
          description: The name of the personal access token. Cannot be the same as
            other personal access tokens owned by a user.
          example: NodeJS Integration
          type: string
        owner:
          $ref: '#/components/schemas/PatOwner'
        created:
          description: "The date and time, down to the millisecond, when this personal\
            \ access token was created."
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
      required:
      - created
      - id
      - name
      - owner
      - scope
      - secret
      type: object
    PublicIdentityConfig:
      description: Details of up to 5 Identity attributes that will be publicly accessible
        for all Identities to anyone in the org
      example:
        modified: 2018-06-25T20:22:28.104Z
        attributes:
        - name: Country
          key: country
        - name: Country
          key: country
        modifiedBy:
          name: Thomas Edison
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/PublicIdentityAttributeConfig'
          type: array
        modifiedBy:
          $ref: '#/components/schemas/IdentityReference'
        modified:
          description: the date/time of the modification
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          type: string
      type: object
    NotificationTemplateContext:
      example:
        created: 2020-04-15T16:16:47.525Z
        modified: 2020-04-15T16:16:47.525Z
        attributes:
          productUrl: https://test-org.identitysoon.com
          brandingConfigs:
            default:
              narrowLogoURL: null
              productName: SailPoint
              standardLogoURL: null
              navigationColor: 011E64
              actionButtonColor: 20B2DE
              emailFromAddress: null
              activeLinkColor: 20B2DE
              loginInformationalMessage: null
      properties:
        attributes:
          description: A JSON object that stores the context.
          example:
            productUrl: https://test-org.identitysoon.com
            brandingConfigs:
              default:
                narrowLogoURL: null
                productName: SailPoint
                standardLogoURL: null
                navigationColor: 011E64
                actionButtonColor: 20B2DE
                emailFromAddress: null
                activeLinkColor: 20B2DE
                loginInformationalMessage: null
          type: object
        created:
          description: When the global context was created
          example: 2020-04-15T16:16:47.525Z
          format: date-time
          type: string
        modified:
          description: When the global context was last modified
          example: 2020-04-15T16:16:47.525Z
          format: date-time
          type: string
      type: object
    PreferencesDto:
      description: Maps an Identity's attribute key to a list of preferred notification
        mediums.
      example:
        modified: 2020-05-15T14:37:06.909Z
        mediums:
        - EMAIL
        key: cloud_manual_work_item_summary
      properties:
        key:
          description: The template notification key.
          example: cloud_manual_work_item_summary
          type: string
        mediums:
          description: "List of preferred notification mediums, i.e., the mediums\
            \ (or method) for which notifications are enabled. More mediums may be\
            \ added in the future."
          example:
          - EMAIL
          items:
            $ref: '#/components/schemas/Medium'
          type: array
        modified:
          description: Modified date of preference
          example: 2020-05-15T14:37:06.909Z
          format: date-time
          type: string
      type: object
    ConfigType:
      description: Type of Reassignment Configuration.
      example:
        internalName: ACCESS_REQUESTS
        displayName: Access Requests
        description: Reassign Access Request Work Items for an identity
      properties:
        internalName:
          $ref: '#/components/schemas/ConfigTypeEnum'
        displayName:
          description: Human readable display name of the type to be shown on UI
          example: Access Requests
          type: string
        description:
          description: "Description of the type of work to be reassigned, displayed\
            \ by the UI."
          example: Reassign Access Request Work Items for an identity
          type: string
      type: object
    ConfigurationResponse:
      description: The response body of a Reassignment Configuration for a single
        identity
      example:
        identity:
          name: William Wilson
          id: 2c91808380aa05580180aaaaf1940410
        configDetails:
        - endDate: 0001-01-01T00:00:00Z
          auditDetails:
            createdBy:
              name: William Wilson
              id: 2c91808380aa05580180aaaaf1940410
            created: 2022-07-21T11:13:12.345Z
            modified: 2022-07-21T11:13:12.345Z
            modifiedBy:
              name: William Wilson
              id: 2c91808380aa05580180aaaaf1940410
          configType: ACCESS_REQUESTS
          targetIdentity:
            name: William Wilson
            id: 2c91808380aa05580180aaaaf1940410
          startDate: 2022-07-21T11:13:12.345Z
        - endDate: 0001-01-01T00:00:00Z
          auditDetails:
            createdBy:
              name: William Wilson
              id: 2c91808380aa05580180aaaaf1940410
            created: 2022-07-21T11:13:12.345Z
            modified: 2022-07-21T11:13:12.345Z
            modifiedBy:
              name: William Wilson
              id: 2c91808380aa05580180aaaaf1940410
          configType: ACCESS_REQUESTS
          targetIdentity:
            name: William Wilson
            id: 2c91808380aa05580180aaaaf1940410
          startDate: 2022-07-21T11:13:12.345Z
      properties:
        identity:
          $ref: '#/components/schemas/Identity_1'
        configDetails:
          description: Details of how work should be reassigned for an Identity
          items:
            $ref: '#/components/schemas/ConfigurationDetailsResponse'
          type: array
      type: object
    ConfigurationItemRequest:
      description: The request body for creation or update of a Reassignment Configuration
        for a single identity and work type
      example:
        endDate: 2022-07-30T17:00:00Z
        reassignedFromId: 2c91808781a71ddb0181b9090b5c504e
        configType: ACCESS_REQUESTS
        reassignedToId: 2c91808781a71ddb0181b9090b53504a
        startDate: 2022-07-21T11:13:12.345Z
      properties:
        reassignedFromId:
          description: The identity id to reassign an item from
          example: 2c91808781a71ddb0181b9090b5c504e
          type: string
        reassignedToId:
          description: The identity id to reassign an item to
          example: 2c91808781a71ddb0181b9090b53504a
          type: string
        configType:
          $ref: '#/components/schemas/ConfigTypeEnum'
        startDate:
          description: The date from which to start reassigning work items
          example: 2022-07-21T11:13:12.345Z
          format: date-time
          type: string
        endDate:
          description: The date from which to stop reassigning work items.  If this
            is an null string it indicates a permanent reassignment.
          example: 2022-07-30T17:00:00Z
          format: date-time
          nullable: true
          type: string
      type: object
    ConfigurationItemResponse:
      description: The response body of a Reassignment Configuration for a single
        identity
      example:
        identity:
          name: William Wilson
          id: 2c91808380aa05580180aaaaf1940410
        configDetails:
        - endDate: 0001-01-01T00:00:00Z
          auditDetails:
            createdBy:
              name: William Wilson
              id: 2c91808380aa05580180aaaaf1940410
            created: 2022-07-21T11:13:12.345Z
            modified: 2022-07-21T11:13:12.345Z
            modifiedBy:
              name: William Wilson
              id: 2c91808380aa05580180aaaaf1940410
          configType: ACCESS_REQUESTS
          targetIdentity:
            name: William Wilson
            id: 2c91808380aa05580180aaaaf1940410
          startDate: 2022-07-21T11:13:12.345Z
        - endDate: 0001-01-01T00:00:00Z
          auditDetails:
            createdBy:
              name: William Wilson
              id: 2c91808380aa05580180aaaaf1940410
            created: 2022-07-21T11:13:12.345Z
            modified: 2022-07-21T11:13:12.345Z
            modifiedBy:
              name: William Wilson
              id: 2c91808380aa05580180aaaaf1940410
          configType: ACCESS_REQUESTS
          targetIdentity:
            name: William Wilson
            id: 2c91808380aa05580180aaaaf1940410
          startDate: 2022-07-21T11:13:12.345Z
      properties:
        identity:
          $ref: '#/components/schemas/Identity_1'
        configDetails:
          description: Details of how work should be reassigned for an Identity
          items:
            $ref: '#/components/schemas/ConfigurationDetailsResponse'
          type: array
      type: object
    ConfigTypeEnum:
      description: Enum list of valid work types that can be selected for a Reassignment
        Configuration
      enum:
      - ACCESS_REQUESTS
      - CERTIFICATIONS
      - MANUAL_TASKS
      example: ACCESS_REQUESTS
      type: string
    EvaluateResponse:
      description: The response body for Evaluate Reassignment Configuration
      example:
        lookupTrail:
        - reassignmentType: AUTOMATIC_REASSIGNMENT
          reassignedFromId: 51948a8f306a4e7a9a6f8f5d032fa59e
          reassignedToId: 869320b6b6f34a169b6178b1a865e66f
        - reassignmentType: AUTOMATIC_REASSIGNMENT
          reassignedFromId: 51948a8f306a4e7a9a6f8f5d032fa59e
          reassignedToId: 869320b6b6f34a169b6178b1a865e66f
        reassignToId: 869320b6b6f34a169b6178b1a865e66f
      properties:
        reassignToId:
          description: The Identity ID which should be the recipient of any work items
            sent to a specific identity & work type
          example: 869320b6b6f34a169b6178b1a865e66f
          type: string
        lookupTrail:
          description: List of Reassignments found by looking up the next `TargetIdentity`
            in a ReassignmentConfiguration
          items:
            $ref: '#/components/schemas/LookupStep'
          type: array
      type: object
    TenantConfigurationResponse:
      description: Tenant-wide Reassignment Configuration settings
      example:
        configDetails:
          disabled: true
        auditDetails:
          createdBy:
            name: William Wilson
            id: 2c91808380aa05580180aaaaf1940410
          created: 2022-07-21T11:13:12.345Z
          modified: 2022-07-21T11:13:12.345Z
          modifiedBy:
            name: William Wilson
            id: 2c91808380aa05580180aaaaf1940410
      properties:
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
        configDetails:
          $ref: '#/components/schemas/TenantConfigurationDetails'
      type: object
    TenantConfigurationRequest:
      description: Tenant-wide Reassignment Configuration settings
      example:
        configDetails:
          disabled: true
      properties:
        configDetails:
          $ref: '#/components/schemas/TenantConfigurationDetails'
      type: object
    RecommendationConfigDto:
      example:
        recommenderFeatures:
        - jobTitle
        - location
        - peer_group
        - department
        - active
        peerGroupPercentageThreshold: 0.5
        runAutoSelectOnce: false
        onlyTuneThreshold: false
      properties:
        recommenderFeatures:
          description: List of identity attributes to use for calculating certification
            recommendations
          example:
          - jobTitle
          - location
          - peer_group
          - department
          - active
          items:
            type: string
          type: array
        peerGroupPercentageThreshold:
          description: The percent value that the recommendation calculation must
            surpass to produce a YES recommendation
          example: 0.5
          format: float
          maximum: 1.0
          minimum: 0.0
          type: number
        runAutoSelectOnce:
          default: false
          description: "If true, rulesRecommenderConfig will be refreshed with new\
            \ programatically selected attribute and threshold values on the next\
            \ pipeline run"
          example: false
          type: boolean
        onlyTuneThreshold:
          default: false
          description: "If true, rulesRecommenderConfig will be refreshed with new\
            \ programatically selected threshold values on the next pipeline run"
          example: false
          type: boolean
      type: object
    RequestableObjectType:
      description: 'The currently supported requestable object types. '
      enum:
      - ACCESS_PROFILE
      - ROLE
      example: ACCESS_PROFILE
      type: string
    RequestableObjectRequestStatus:
      description: "Status indicating the ability of an access request for the object\
        \ to be made by or on behalf of the identity specified by *identity-id*. *AVAILABLE*\
        \ indicates the object is available to request. *PENDING* indicates the object\
        \ is unavailable because the identity has a pending request in flight. *ASSIGNED*\
        \ indicates the object is unavailable because the identity already has the\
        \ indicated role or access profile. If *identity-id* is not specified (allowed\
        \ only for admin users), then status will be *AVAILABLE* for all results."
      enum:
      - AVAILABLE
      - PENDING
      - ASSIGNED
      example: AVAILABLE
      type: string
    RequestableObject:
      example:
        requestCommentsRequired: false
        ownerRef:
          name: Alison Ferguso
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
          email: alison.ferguso@identitysoon.com
        created: 2017-07-11T18:45:37.098Z
        name: Applied Research Access
        modified: 2018-06-25T20:22:28.104Z
        description: "Access to research information, lab results, and schematics."
        identityRequestId: identityRequestId
        id: 2c9180835d2e5168015d32f890ca1581
        type: ACCESS_PROFILE
        requestStatus: AVAILABLE
      properties:
        id:
          description: Id of the requestable object itself
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: Human-readable display name of the requestable object
          example: Applied Research Access
          type: string
        created:
          description: The time when the requestable object was created
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        modified:
          description: The time when the requestable object was last modified
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        description:
          description: Description of the requestable object.
          example: "Access to research information, lab results, and schematics."
          type: string
        type:
          $ref: '#/components/schemas/RequestableObjectType'
        requestStatus:
          $ref: '#/components/schemas/RequestableObjectRequestStatus'
        identityRequestId:
          description: "If *requestStatus* is *PENDING*, indicates the id of the associated\
            \ account activity."
          nullable: true
          type: string
          example: null
        ownerRef:
          $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
        requestCommentsRequired:
          description: Whether the requester must provide comments when requesting
            the object.
          example: false
          type: boolean
      type: object
    RoleInsightsResponse:
      example:
        id: c9aa02f7-86b0-4bc4-84bd-3116a6131e77
        createdDate: 2020-09-16T18:49:32.150Z
        lastGenerated: 2020-09-16T18:49:32.150Z
        numberOfUpdates: 0
        roleIds:
        - 2c91808e720e94f8017253287c0a44f4
        - 2c918087723ac2800172532191540e03
        - 2c9180986e4c8592016e6b15eaef447c
        status: CREATED
      properties:
        id:
          description: Request Id for a role insight generation request
          example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
          type: string
        createdDate:
          description: The date-time role insights request was created.
          example: 2020-09-16T18:49:32.15Z
          format: date-time
          type: string
        lastGenerated:
          description: The date-time role insights request was completed.
          example: 2020-09-16T18:50:12.15Z
          format: date-time
          type: string
        numberOfUpdates:
          description: Total number of updates for this request. Starts with 0 and
            will have correct number when request is COMPLETED.
          example: 0
          type: integer
        roleIds:
          description: The role IDs that are in this request.
          items:
            type: string
          type: array
        status:
          description: Request status
          enum:
          - CREATED
          - IN PROGRESS
          - COMPLETED
          - FAILED
          type: string
      type: object
    RoleInsightsSummary:
      example:
        totalNumberOfEntitlements: 250
        totalNumberOfIdentities: 980
        identitiesWithAccessViaRoles: 550
        entitlementsIncludedInRoles: 45
        numberOfUpdates: 0
        lastGenerated: 2020-05-19T13:49:37.385Z
      properties:
        numberOfUpdates:
          description: Total number of roles with updates
          type: integer
        lastGenerated:
          description: The date-time role insights were last found.
          example: 2020-05-19T13:49:37.385Z
          format: date-time
          type: string
        entitlementsIncludedInRoles:
          description: The number of entitlements included in roles (vs free radicals).
          example: 45
          type: integer
        totalNumberOfEntitlements:
          description: The total number of entitlements.
          example: 250
          type: integer
        identitiesWithAccessViaRoles:
          description: The number of identities in roles vs. identities with just
            entitlements and not in roles.
          example: 550
          type: integer
        totalNumberOfIdentities:
          description: The total number of identities.
          example: 980
          type: integer
      type: object
    RoleInsight:
      example:
        insight:
          identitiesWithAccess: 850
          totalNumberOfIdentities: 1000
          identitiesImpacted: 150
          type: ADD
        createdDate: 2020-05-19T13:49:37.385Z
        role:
          ownerName: Bob
          name: Software Engineer
          description: Person who develops software
          id: 1467e61e-f284-439c-ba2d-c6cc11cf0941
          ownerId: 1467e61e-f284-439c-ba2d-c6cc11cf0941
        id: 1467e61e-f284-439c-ba2d-c6cc11cf0941
        numberOfUpdates: 5
      properties:
        id:
          description: Insight id
          example: 1467e61e-f284-439c-ba2d-c6cc11cf0941
          type: string
        numberOfUpdates:
          description: Total number of updates for this role
          example: 5
          type: integer
        createdDate:
          description: The date-time insights were last created for this role.
          example: 2020-05-19T13:49:37.385Z
          format: date-time
          type: string
        role:
          $ref: '#/components/schemas/RoleInsightsRole'
        insight:
          $ref: '#/components/schemas/RoleInsightsInsight'
      type: object
    RoleInsightsEntitlementChanges:
      example:
        insight:
          identitiesWithAccess: 850
          totalNumberOfIdentities: 1000
          identitiesImpacted: 150
          type: ADD
        name: name
        description: description
        id: id
        attribute: attribute
        source: source
        value: value
      properties:
        name:
          description: Name of the entitlement
          type: string
        id:
          description: Id of the entitlement
          type: string
        description:
          description: Description for the entitlement
          type: string
        attribute:
          description: Attribute for the entitlement
          type: string
        value:
          description: Attribute value for the entitlement
          type: string
        source:
          description: Source or the application for the entitlement
          type: string
        insight:
          $ref: '#/components/schemas/RoleInsightsInsight'
      type: object
    RoleInsightsEntitlement:
      example:
        name: Administrator
        id: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        description: Full administrative access to IdentityNow
        source: IdentityNow
        attribute: assignedGroups
        value: ORG_ADMIN
      properties:
        name:
          description: Name of the entitlement
          type: string
        id:
          description: Id of the entitlement
          type: string
        description:
          description: Description for the entitlement
          type: string
        source:
          description: Source or the application for the entitlement
          type: string
        attribute:
          description: Attribute for the entitlement
          type: string
        value:
          description: Attribute value for the entitlement
          type: string
      type: object
    RoleInsightsIdentities:
      example:
        id: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
        name: Adam Smith
        attributes:
          department: Human Resources-tah-mgb-dnd
          firstName: Adam
          jobTitle: Sales Analyst
          location: Mexico
      properties:
        id:
          description: Id for identity
          type: string
        name:
          description: Name for identity
          type: string
        attributes:
          additionalProperties:
            type: string
          type: object
      type: object
    RoleMiningSessionDto:
      example:
        prescribedPruneThreshold: 10
        pruneThreshold: 5
        saved: true
        potentialRolesReadyCount: 0
        potentialRoleCount: 0
        identityCount: 0
        type: SPECIALIZED
        emailRecipientId: 2c918090761a5aac0176215c46a62d58
        createdBy: null
        scope:
          identityIds:
          - 2c918090761a5aac0176215c46a62d58
          - 2c918090761a5aac01722015c46a62d42
          attributeFilterCriteria:
            displayName:
              untranslated: "Location: Miami"
            ariaLabel:
              untranslated: "Location: Miami"
            data:
              displayName:
                translateKey: IDN.IDENTITY_ATTRIBUTES.LOCATION
              name: location
              operator: EQUALS
              values:
              - Miami
          criteria: source.name:DataScienceDataset
        name: Saved RM Session - 07/10
        minNumIdentitiesInPotentialRole: 20
        status:
          state: CREATED
      properties:
        scope:
          $ref: '#/components/schemas/RoleMiningSessionScope'
        pruneThreshold:
          description: The prune threshold to be used or null to calculate prescribedPruneThreshold
          example: 5
          format: int32
          nullable: true
          type: integer
        prescribedPruneThreshold:
          description: The calculated prescribedPruneThreshold
          example: 10
          format: int32
          nullable: true
          type: integer
        minNumIdentitiesInPotentialRole:
          description: Minimum number of identities in a potential role
          example: 20
          format: int32
          nullable: true
          type: integer
        potentialRoleCount:
          description: Number of potential roles
          example: 0
          format: int32
          type: integer
        potentialRolesReadyCount:
          description: Number of potential roles ready
          example: 0
          format: int32
          type: integer
        status:
          $ref: '#/components/schemas/RoleMiningSessionStatus'
        type:
          $ref: '#/components/schemas/RoleMiningRoleType'
        emailRecipientId:
          description: The id of the user who will receive an email about the role
            mining session
          example: 2c918090761a5aac0176215c46a62d58
          nullable: true
          type: string
        createdBy:
          $ref: '#/components/schemas/RoleMiningSessionDto_createdBy'
        identityCount:
          description: Number of identities in the population which meet the search
            criteria or identity list provided
          example: 0
          format: int32
          type: integer
        saved:
          default: false
          description: The session's saved status
          example: true
          type: boolean
        name:
          description: The session's saved name
          example: Saved RM Session - 07/10
          nullable: true
          type: string
      type: object
    RoleMiningSessionResponse:
      example:
        scope:
          identityIds: []
          criteria: source.name:DataScienceDataset
        minNumIdentitiesInPotentialRole: 20
        pruneThreshold: 70
        prescribedPruneThreshold: 83
        potentialRoleCount: 8
        potentialRolesReadyCount: 4
        status:
          state: POTENTIAL_ROLES_PROCESSING
        id: 602ba738-cf48-499b-a780-7b67b3fc1ecf
        createdDate: 2021-09-08T16:11:05.348Z
        modifiedDate: 2021-09-08T16:11:05.348Z
        type: SPECIALIZED
      properties:
        scope:
          $ref: '#/components/schemas/RoleMiningSessionScope'
        minNumIdentitiesInPotentialRole:
          description: Minimum number of identities in a potential role
          example: 20
          type: integer
        prescribedPruneThreshold:
          description: The computed (or prescribed) prune threshold for this session
          example: 83
          type: integer
        pruneThreshold:
          description: The prune threshold to be used for this role mining session
          example: 70
          type: integer
        potentialRoleCount:
          description: The number of potential roles
          example: 8
          type: integer
        potentialRolesReadyCount:
          description: The number of potential roles which have completed processing
          example: 4
          type: integer
        status:
          $ref: '#/components/schemas/RoleMiningSessionStatus'
        id:
          description: Session Id for this role mining session
          example: 8c190e67-87aa-4ed9-a90b-d9d5344523fb
          type: string
        createdDate:
          description: The date-time when this role mining session was created.
          format: date-time
          type: string
        modifiedDate:
          description: The date-time when this role mining session was completed.
          format: date-time
          type: string
        type:
          $ref: '#/components/schemas/RoleMiningRoleType'
      type: object
    RoleMiningSessionStatus:
      example:
        state: CREATED
      properties:
        state:
          $ref: '#/components/schemas/RoleMiningSessionState'
      type: object
    RoleMiningPotentialRoleSummary:
      example:
        entitlementCount: 15
        density: 90
        roleId: 2a4be6fbcf3c4e66b95a0c15ffd591
        session:
          pruneThreshold: 5
          saved: true
          scope:
            identityIds:
            - 2c918090761a5aac0176215c46a62d58
            - 2c918090761a5aac01722015c46a62d42
            attributeFilterCriteria:
              displayName:
                untranslated: "Location: Miami"
              ariaLabel:
                untranslated: "Location: Miami"
              data:
                displayName:
                  translateKey: IDN.IDENTITY_ATTRIBUTES.LOCATION
                name: location
                operator: EQUALS
                values:
                - Miami
            criteria: source.name:DataScienceDataset
          name: Saved RM Session - 07/10
          minNumIdentitiesInPotentialRole: 20
          id: 9f36f5e5-1e81-4eca-b087-548959d91c71
          state: CREATED
          scopingMethod: MANUAL
          type: SPECIALIZED
        provisionState: POTENTIAL
        identityCount: 25
        freshness: 70
        type: SPECIALIZED
        potentialRoleRef:
          name: Potential Role - e0cc5d
          id: e0cc5d7d-bf7f-4f81-b2af-8885b09d9923
        quality: 80
        name: Potential Role - e0cc5d
        id: e0cc5d7d-bf7f-4f81-b2af-8885b09d9923
        identityGroupStatus: OBTAINED
      properties:
        id:
          description: Id of the potential role
          example: e0cc5d7d-bf7f-4f81-b2af-8885b09d9923
          type: string
        name:
          description: Name of the potential role
          example: Potential Role - e0cc5d
          type: string
        potentialRoleRef:
          $ref: '#/components/schemas/RoleMiningPotentialRoleRef'
        identityCount:
          description: The number of identities in a potential role.
          example: 25
          format: int32
          type: integer
        entitlementCount:
          description: The number of entitlements in a potential role.
          example: 15
          format: int32
          type: integer
        identityGroupStatus:
          description: The status for this identity group which can be "REQUESTED"
            or "OBTAINED"
          example: OBTAINED
          type: string
        provisionState:
          $ref: '#/components/schemas/RoleMiningPotentialRoleProvisionState'
        roleId:
          description: ID of the provisioned role in IIQ or IDN.  Null if this potential
            role has not been provisioned.
          example: 2a4be6fbcf3c4e66b95a0c15ffd591
          nullable: true
          type: string
        density:
          description: The density metric (0-100) of this potential role. Higher density
            values indicate higher similarity amongst the identities.
          example: 90
          format: int32
          type: integer
        freshness:
          description: The freshness metric (0-100) of this potential role. Higher
            freshness values indicate this potential role is more distinctive compared
            to existing roles.
          example: 70
          format: int32
          type: integer
        quality:
          description: The quality metric (0-100) of this potential role. Higher quality
            values indicate this potential role has high density and freshness.
          example: 80
          format: int32
          type: integer
        type:
          $ref: '#/components/schemas/RoleMiningRoleType'
        session:
          $ref: '#/components/schemas/RoleMiningSessionParametersDto'
      type: object
    RoleMiningPotentialRole:
      example:
        entitlementCount: 25
        identityIds:
        - 07a0b4e2
        - 13b4e2a0
        density: 75
        saved: true
        roleId: 07a0b4e2-7a76-44fa-bd0b-c64654b66519
        session:
          pruneThreshold: 5
          saved: true
          scope:
            identityIds:
            - 2c918090761a5aac0176215c46a62d58
            - 2c918090761a5aac01722015c46a62d42
            attributeFilterCriteria:
              displayName:
                untranslated: "Location: Miami"
              ariaLabel:
                untranslated: "Location: Miami"
              data:
                displayName:
                  translateKey: IDN.IDENTITY_ATTRIBUTES.LOCATION
                name: location
                operator: EQUALS
                values:
                - Miami
            criteria: source.name:DataScienceDataset
          name: Saved RM Session - 07/10
          minNumIdentitiesInPotentialRole: 20
          id: 9f36f5e5-1e81-4eca-b087-548959d91c71
          state: CREATED
          scopingMethod: MANUAL
          type: SPECIALIZED
        provisionState: POTENTIAL
        description: Potential Role for Accounting dept
        identityCount: 25
        freshness: 75
        type: SPECIALIZED
        quality: 100
        identityDistribution:
        - attributeName: department
          distribution:
          - attributeValue: NM Tier 3
            count: 6
        - attributeName: department
          distribution:
          - attributeValue: NM Tier 3
            count: 6
        createdBy:
          displayName: Ashley.Pierce
          id: 2c918090761a5aac0176215c46a62d58
        name: Saved Potential Role - 07/10
        excludedEntitlements:
        - 07a0b4e2
        - 13b4e2a0
      properties:
        createdBy:
          $ref: '#/components/schemas/EntityCreatedByDTO'
        density:
          description: The density of a potential role.
          example: 75
          format: int32
          type: integer
        description:
          description: The description of a potential role.
          example: Potential Role for Accounting dept
          type: string
        entitlementCount:
          description: The number of entitlements in a potential role.
          example: 25
          format: int32
          type: integer
        excludedEntitlements:
          description: The list of entitlement ids to be excluded.
          example:
          - 07a0b4e2
          - 13b4e2a0
          items:
            type: string
          type: array
        freshness:
          description: The freshness of a potential role.
          example: 75
          format: int32
          type: integer
        identityCount:
          description: The number of identities in a potential role.
          example: 25
          format: int32
          type: integer
        identityDistribution:
          description: Identity attribute distribution.
          items:
            $ref: '#/components/schemas/RoleMiningIdentityDistribution'
          type: array
        identityIds:
          description: The list of ids in a potential role.
          example:
          - 07a0b4e2
          - 13b4e2a0
          items:
            type: string
          type: array
        name:
          description: Name of the potential role.
          example: Saved Potential Role - 07/10
          type: string
        provisionState:
          $ref: '#/components/schemas/RoleMiningPotentialRoleProvisionState'
        quality:
          description: The quality of a potential role.
          example: 100
          format: int32
          type: integer
        roleId:
          description: The roleId of a potential role.
          example: 07a0b4e2-7a76-44fa-bd0b-c64654b66519
          type: string
        saved:
          description: The potential role's saved status.
          example: true
          type: boolean
        session:
          $ref: '#/components/schemas/RoleMiningSessionParametersDto'
        type:
          $ref: '#/components/schemas/RoleMiningRoleType'
      type: object
    RoleMiningPotentialRoleApplication:
      example:
        id: 2c9180877212632a017228d5a796292b
        name: Slack
      properties:
        id:
          description: Id of the potential role
          type: string
        name:
          description: Name of the potential role
          type: string
      type: object
    RoleMiningEntitlement:
      example:
        sourceId: 2c9180877620c1460176267f336a106f
        popularity: 65.2
        name: Add/modify/delete users
        identityCount: 45
        activitySourceState: complete
        entitlementRef:
          name: App.entitlement.1
          description: Entitlement 1
          id: 2c91808a7e95e6e0017e96e2086206c8
          attribute: groups
        sourceUsagePercent: 65.6
        applicationName: AppName
        popularityInOrg: 35.8
      properties:
        entitlementRef:
          $ref: '#/components/schemas/RoleMiningEntitlementRef'
        name:
          description: Name of the entitlement
          example: Add/modify/delete users
          type: string
        applicationName:
          description: Application name of the entitlement
          example: AppName
          type: string
        identityCount:
          description: The number of identities with this entitlement in a role.
          example: 45
          format: int32
          type: integer
        popularity:
          description: The % popularity of this entitlement in a role.
          example: 65.2
          format: float
          type: number
        popularityInOrg:
          description: The % popularity of this entitlement in the org.
          example: 35.8
          format: float
          type: number
        sourceId:
          description: The ID of the source/application.
          example: 2c9180877620c1460176267f336a106f
          type: string
        activitySourceState:
          description: The status of activity data for the source.   Value is complete
            or notComplete.
          example: complete
          nullable: true
          type: string
        sourceUsagePercent:
          description: The percentage of identities in the potential role that have
            usage of the source/application of this entitlement.
          example: 65.6
          format: float
          nullable: true
          type: number
      type: object
    RoleMiningPotentialRoleEditEntitlements:
      example:
        ids:
        - entId1
        - entId2
        exclude: true
      properties:
        ids:
          description: The list of entitlement ids to be edited
          items:
            type: string
          type: array
        exclude:
          description: "If true, add ids to be exclusion list. If false, remove ids\
            \ from the exclusion list."
          type: boolean
      type: object
    RoleMiningIdentity:
      example:
        id: 2c9180877212632a017228d5934525e6
        name: Allene Abernathy-Welch
        attributes:
          jobTitle: SQL Developer
          department: IT
          location: NYC
          firstName: Allene
      properties:
        id:
          description: Id of the identity
          type: string
        name:
          description: Name of the identity
          type: string
        attributes:
          additionalProperties:
            type: string
          type: object
      type: object
    RoleMiningPotentialRoleExportRequest:
      example:
        minEntitlementPopularity: 0
        includeCommonAccess: true
      properties:
        minEntitlementPopularity:
          description: The minimum popularity among identities in the role which an
            entitlement must have to be included in the report
          example: 0
          type: integer
        includeCommonAccess:
          description: "If false, do not include entitlements that are highly popular\
            \ among the entire orginization"
          example: true
          type: boolean
      type: object
    RoleMiningPotentialRoleExportResponse:
      allOf:
      - $ref: '#/components/schemas/RoleMiningPotentialRoleExportRequest'
      - properties:
          exportId:
            description: ID used to reference this export
            example: 0c6cdb76-1227-4aaf-af21-192dbdfbfa04
            format: uuid
            type: string
          status:
            $ref: '#/components/schemas/RoleMiningPotentialRoleExportState'
        type: object
      example:
        exportId: 0c6cdb76-1227-4aaf-af21-192dbdfbfa04
        status: QUEUED
        minEntitlementPopularity: 0
        includeCommonAccess: true
    RoleMiningPotentialRoleProvisionRequest:
      example:
        roleName: Finance - Accounting
        roleDescription: General access for accounting department
        ownerId: 2b568c65bc3c4c57a43bd97e3a8e41
      properties:
        roleName:
          description: Name of the new role being created
          example: Finance - Accounting
          type: string
        roleDescription:
          description: Short description of the new role being created
          example: General access for accounting department
          type: string
        ownerId:
          description: ID of the identity that will own this role
          example: 2b568c65bc3c4c57a43bd97e3a8e41
          type: string
      type: object
    RoleMiningSessionDraftRoleDto:
      example:
        entitlementIds:
        - 2c91808a7624751a01762f19d665220d
        - 2c91808a7624751a01762f19d67c220e
        identityIds:
        - 2c918090761a5aac0176215c46a62d58
        - 2c918090761a5aac01722015c46a62d42
        name: Saved RM Session - 07/10
        description: Person who develops software
        modified: 2020-09-16T18:49:32.15Z
        excludedEntitlements:
        - 07a0b4e2
        - 13b4e2a0
        type: SPECIALIZED
      properties:
        description:
          description: Draft role description
          example: Person who develops software
          type: string
        identityIds:
          description: The list of identities for this role mining session.
          example:
          - 2c918090761a5aac0176215c46a62d58
          - 2c918090761a5aac01722015c46a62d42
          items:
            type: string
          type: array
        entitlementIds:
          description: The list of entitlement ids for this role mining session.
          example:
          - 2c91808a7624751a01762f19d665220d
          - 2c91808a7624751a01762f19d67c220e
          items:
            type: string
          type: array
        excludedEntitlements:
          description: The list of excluded entitlement ids.
          example:
          - 07a0b4e2
          - 13b4e2a0
          items:
            type: string
          type: array
        modified:
          description: Last modified date
          example: 2020-09-16T18:49:32.15Z
          format: date-time
          type: string
        name:
          description: Name of the draft role
          example: Saved RM Session - 07/10
          type: string
        type:
          $ref: '#/components/schemas/RoleMiningRoleType'
      type: object
    RoleMiningPotentialRoleSourceUsage:
      example:
        displayName: Kirk Koepp
        id: 2c918089762475180176267f894b54dc
        email: kirk.koepp@testmail.identitynow.com
        usageCount: 25
      properties:
        id:
          description: The identity ID
          example: 2c918089762475180176267f894b54dc
          type: string
        displayName:
          description: Display name for the identity
          example: Kirk Koepp
          type: string
        email:
          description: Email address for the identity
          example: kirk.koepp@testmail.identitynow.com
          type: string
        usageCount:
          description: The number of days there has been usage of the source by the
            identity.
          example: 25
          format: int32
          type: integer
      type: object
    Role:
      description: A Role
      example:
        owner:
          name: support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        created: 2021-03-01T22:32:58.104Z
        description: Urna amet cursus pellentesque nisl orci maximus lorem nisl euismod
          fusce morbi placerat adipiscing maecenas nisi tristique et metus et lacus
          sed morbi nunc nisl maximus magna arcu varius sollicitudin elementum enim
          maecenas nisi id ipsum tempus fusce diam ipsum tortor.
        membership:
          identities:
          - aliasName: t.edison
            name: Thomas Edison
            id: 2c9180a46faadee4016fb4e018c20639
            type: IDENTITY
          - aliasName: t.edison
            name: Thomas Edison
            id: 2c9180a46faadee4016fb4e018c20639
            type: IDENTITY
          criteria:
            stringValue: carlee.cert1c9f9b6fd@mailinator.com
            children:
            - stringValue: carlee.cert1c9f9b6fd@mailinator.com
              children:
              - stringValue: carlee.cert1c9f9b6fd@mailinator.com
                operation: EQUALS
                key:
                  sourceId: 2c9180867427f3a301745aec18211519
                  property: attribute.email
                  type: ACCOUNT
              - stringValue: carlee.cert1c9f9b6fd@mailinator.com
                operation: EQUALS
                key:
                  sourceId: 2c9180867427f3a301745aec18211519
                  property: attribute.email
                  type: ACCOUNT
              operation: EQUALS
              key:
                sourceId: 2c9180867427f3a301745aec18211519
                property: attribute.email
                type: ACCOUNT
            - stringValue: carlee.cert1c9f9b6fd@mailinator.com
              children:
              - stringValue: carlee.cert1c9f9b6fd@mailinator.com
                operation: EQUALS
                key:
                  sourceId: 2c9180867427f3a301745aec18211519
                  property: attribute.email
                  type: ACCOUNT
              - stringValue: carlee.cert1c9f9b6fd@mailinator.com
                operation: EQUALS
                key:
                  sourceId: 2c9180867427f3a301745aec18211519
                  property: attribute.email
                  type: ACCOUNT
              operation: EQUALS
              key:
                sourceId: 2c9180867427f3a301745aec18211519
                property: attribute.email
                type: ACCOUNT
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          type: IDENTITY_LIST
        enabled: true
        revocationRequestConfig:
          commentsRequired: false
          approvalSchemes:
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          denialCommentsRequired: false
        segments:
        - f7b1b8a3-5fed-4fd4-ad29-82014e137e19
        - 29cb6c06-1da8-43ea-8be4-b3125f248f2a
        legacyMembershipInfo:
          type: IDENTITY_LIST
        accessRequestConfig:
          commentsRequired: true
          approvalSchemes:
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
            approverType: GOVERNANCE_GROUP
          denialCommentsRequired: true
        accessProfiles:
        - name: Access Profile 2567
          id: ff808081751e6e129f1518161919ecca
          type: ACCESS_PROFILE
        - name: Access Profile 2567
          id: ff808081751e6e129f1518161919ecca
          type: ACCESS_PROFILE
        name: Role 2567
        modified: 2021-03-02T20:22:28.104Z
        id: 2c918086749d78830174a1a40e121518
        requestable: true
      properties:
        id:
          description: "The id of the Role. This field must be left null when creating\
            \ an Role, otherwise a 400 Bad Request error will result."
          example: 2c918086749d78830174a1a40e121518
          type: string
        name:
          description: The human-readable display name of the Role
          example: Role 2567
          maxLength: 128
          type: string
        created:
          description: Date the Role was created
          example: 2021-03-01T22:32:58.104Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Date the Role was last modified.
          example: 2021-03-02T20:22:28.104Z
          format: date-time
          readOnly: true
          type: string
        description:
          description: A human-readable description of the Role
          example: Urna amet cursus pellentesque nisl orci maximus lorem nisl euismod
            fusce morbi placerat adipiscing maecenas nisi tristique et metus et lacus
            sed morbi nunc nisl maximus magna arcu varius sollicitudin elementum enim
            maecenas nisi id ipsum tempus fusce diam ipsum tortor.
          nullable: true
          type: string
        owner:
          $ref: '#/components/schemas/OwnerReference'
        accessProfiles:
          items:
            $ref: '#/components/schemas/AccessProfileRef'
          nullable: true
          type: array
        membership:
          $ref: '#/components/schemas/RoleMembershipSelector'
        legacyMembershipInfo:
          additionalProperties: true
          description: "This field is not directly modifiable and is generally expected\
            \ to be *null*. In very rare instances, some Roles may have been created\
            \ using membership selection criteria that are no longer fully supported.\
            \ While these Roles will still work, they should be migrated to STANDARD\
            \ or IDENTITY_LIST selection criteria. This field exists for informational\
            \ purposes as an aid to such migration."
          example:
            type: IDENTITY_LIST
          nullable: true
          type: object
        enabled:
          default: false
          description: Whether the Role is enabled or not.
          example: true
          type: boolean
        requestable:
          default: false
          description: Whether the Role can be the target of access requests.
          example: true
          type: boolean
        accessRequestConfig:
          $ref: '#/components/schemas/RequestabilityForRole'
        revocationRequestConfig:
          $ref: '#/components/schemas/RevocabilityForRole'
        segments:
          description: "List of IDs of segments, if any, to which this Role is assigned."
          example:
          - f7b1b8a3-5fed-4fd4-ad29-82014e137e19
          - 29cb6c06-1da8-43ea-8be4-b3125f248f2a
          items:
            type: string
          nullable: true
          type: array
      required:
      - name
      - owner
      type: object
    RoleBulkDeleteRequest:
      example:
        roleIds:
        - 2c9180847812e0b1017817051919ecca
        - 2c9180887812e0b201781e129f151816
      properties:
        roleIds:
          description: List of IDs of Roles to be deleted.
          example:
          - 2c9180847812e0b1017817051919ecca
          - 2c9180887812e0b201781e129f151816
          items:
            type: string
          type: array
      required:
      - roleIds
      type: object
    TaskResultDto:
      description: Task result.
      example:
        name: name
        id: 464ae7bf791e49fdb74606a2e4a89635
        type: TASK_RESULT
      properties:
        type:
          description: Task result DTO type.
          enum:
          - TASK_RESULT
          example: TASK_RESULT
          type: string
        id:
          description: Task result ID.
          example: 464ae7bf791e49fdb74606a2e4a89635
          type: string
        name:
          description: Task result display name.
          nullable: true
          type: string
          example: null
      type: object
    RoleIdentity:
      description: A subset of the fields of an Identity which is a member of a Role.
      example:
        aliasName: t.edison
        name: Thomas Edison
        roleAssignmentSource: ACCESS_REQUEST
        id: 2c9180a46faadee4016fb4e018c20639
        email: t.edison@identitynow.com
      properties:
        id:
          description: The ID of the Identity
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        aliasName:
          description: The alias / username of the Identity
          example: t.edison
          type: string
        name:
          description: The human-readable display name of the Identity
          example: Thomas Edison
          type: string
        email:
          description: Email address of the Identity
          example: t.edison@identitynow.com
          type: string
        roleAssignmentSource:
          $ref: '#/components/schemas/RoleAssignmentSourceType'
      type: object
    Segment:
      example:
        owner:
          name: support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        created: 2020-01-01T00:00:00Z
        visibilityCriteria:
          expression:
            children: []
            attribute: location
            value:
              type: STRING
              value: Austin
            operator: EQUALS
        name: segment-xyz
        modified: 2020-01-01T00:00:00Z
        description: This segment represents xyz
        active: true
        id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
      properties:
        id:
          description: The segment's ID.
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: string
        name:
          description: The segment's business name.
          example: segment-xyz
          type: string
        created:
          description: The time when the segment is created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: The time when the segment is modified.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
        description:
          description: The segment's optional description.
          example: This segment represents xyz
          type: string
        owner:
          $ref: '#/components/schemas/OwnerReferenceSegments'
        visibilityCriteria:
          $ref: '#/components/schemas/VisibilityCriteria'
        active:
          default: false
          description: This boolean indicates whether the segment is currently active.
            Inactive segments have no effect.
          example: true
          type: boolean
      type: object
    SendTestNotificationRequestDto:
      example:
        context: "{}"
        medium: EMAIL
        key: cloud_manual_work_item_summary
      properties:
        key:
          description: The template notification key.
          example: cloud_manual_work_item_summary
          type: string
        medium:
          description: The notification medium. Has to be one of the following enum
            values.
          enum:
          - EMAIL
          - SLACK
          - TEAMS
          type: string
        context:
          description: A Json object that denotes the context specific to the template.
          type: object
      type: object
    ServiceDeskIntegrationDto:
      allOf:
      - description: Service Desk integration's specification.
        properties:
          name:
            description: Service Desk integration's name. The name must be unique.
            example: Service Desk Integration Name
            type: string
          description:
            description: Service Desk integration's description.
            example: A very nice Service Desk integration
            type: string
          type:
            default: ServiceNowSDIM
            description: |
              Service Desk integration types:

              - ServiceNowSDIM
              - ServiceNow
            example: ServiceNowSDIM
            type: string
          ownerRef:
            allOf:
            - $ref: '#/components/schemas/OwnerDto'
          clusterRef:
            allOf:
            - $ref: '#/components/schemas/SourceClusterDto'
          cluster:
            deprecated: true
            description: "Cluster ID for the Service Desk integration (replaced by\
              \ clusterRef, retained for backward compatibility)."
            example: xyzzy999
            type: string
          managedSources:
            deprecated: true
            description: "Source IDs for the Service Desk integration (replaced by\
              \ provisioningConfig.managedSResourceRefs, but retained here for backward\
              \ compatibility)."
            example:
            - 2c9180835d191a86015d28455b4a2329
            - 2c5680835d191a85765d28455b4a9823
            items:
              type: string
            type: array
          provisioningConfig:
            $ref: '#/components/schemas/ProvisioningConfig'
          attributes:
            additionalProperties: true
            description: Service Desk integration's attributes. Validation constraints
              enforced by the implementation.
            example:
              property: value
              key: value
            type: object
          beforeProvisioningRule:
            allOf:
            - $ref: '#/components/schemas/BeforeProvisioningRuleDto'
        required:
        - attributes
        - description
        - name
        - type
        type: object
    ServiceDeskIntegrationTemplateType:
      description: This represents a Service Desk Integration template type.
      example:
        name: aName
        scriptName: aScriptName
        type: aType
      properties:
        name:
          description: This is the name of the type.
          example: aName
          type: string
        type:
          description: This is the type value for the type.
          example: aType
          type: string
        scriptName:
          description: This is the scriptName attribute value for the type.
          example: aScriptName
          type: string
      required:
      - scriptName
      - type
      type: object
    ServiceDeskIntegrationTemplateDto:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto'
      - description: "This is the model for a Service Desk integration template, used\
          \ to create and edit Service Desk Integrations."
        properties:
          type:
            default: Web Service SDIM
            description: The 'type' property specifies the type of the Service Desk
              integration template.
            example: Web Service SDIM
            type: string
          attributes:
            additionalProperties: true
            description: The 'attributes' property value is a map of attributes available
              for integrations using this Service Desk integration template.
            type: object
          provisioningConfig:
            $ref: '#/components/schemas/ProvisioningConfig'
        required:
        - attributes
        - provisioningConfig
        - type
        type: object
    QueuedCheckConfigDetails:
      description: Configuration of maximum number days and interval for checking
        Service Desk integration queue status
      example:
        provisioningStatusCheckIntervalMinutes: "30"
        provisioningMaxStatusCheckDays: "2"
      properties:
        provisioningStatusCheckIntervalMinutes:
          description: interval in minutes between status checks
          example: "30"
          type: string
        provisioningMaxStatusCheckDays:
          description: maximum number of days to check
          example: "2"
          type: string
      required:
      - provisioningMaxStatusCheckDays
      - provisioningStatusCheckIntervalMinutes
      type: object
    ExportPayload:
      allOf:
      - $ref: '#/components/schemas/ExportOptions'
      example:
        description: Export Job 1 Test
      properties:
        description:
          description: Optional user defined description/name for export job.
          example: Export Job 1 Test
          type: string
      type: object
    SpConfigExportJob:
      allOf:
      - $ref: '#/components/schemas/SpConfigJob'
      - properties:
          description:
            description: Optional user defined description/name for export job.
            example: ETS configuration objects from Acme-Solar sandbox
            type: string
        required:
        - description
        type: object
    SpConfigExportJobStatus:
      allOf:
      - $ref: '#/components/schemas/SpConfigExportJob'
      - properties:
          completed:
            description: The time the job was completed.
            example: 2021-05-11T22:23:16Z
            format: date-time
            type: string
        required:
        - completed
        type: object
    SpConfigExportResults:
      description: Response model for config export download response.
      example:
        objects:
        - self:
            name: HR Active Directory
            id: 2c9180835d191a86015d28455b4b232a
            type: SOURCE
          version: 1
          object:
            key: ""
        - self:
            name: HR Active Directory
            id: 2c9180835d191a86015d28455b4b232a
            type: SOURCE
          version: 1
          object:
            key: ""
        options:
          includeTypes:
          - TRIGGER_SUBSCRIPTION
          - TRIGGER_SUBSCRIPTION
          objectOptions:
            TRIGGER_SUBSCRIPTION:
              includedIds:
              - be9e116d-08e1-49fc-ab7f-fa585e96c9e4
              includedNames:
              - Test 2
          excludeTypes:
          - SOURCE
          - SOURCE
        description: Export Job 1 Test
        version: 1
        tenant: sample-tenant
        timestamp: 2021-05-11T22:23:16Z
      properties:
        version:
          description: Current version of the export results object.
          example: 1
          type: integer
        timestamp:
          description: Time the export was completed.
          example: 2021-05-11T22:23:16Z
          format: date-time
          type: string
        tenant:
          description: Name of the tenant where this export originated.
          example: sample-tenant
          type: string
        description:
          description: Optional user defined description/name for export job.
          example: Export Job 1 Test
          type: string
        options:
          $ref: '#/components/schemas/ExportOptions'
        objects:
          items:
            $ref: '#/components/schemas/ConfigObject'
          type: array
      title: Config Export Response Body
      type: object
    ImportOptions:
      properties:
        excludeTypes:
          description: Object type names to be excluded from an sp-config export command.
          items:
            enum:
            - IDENTITY_OBJECT_CONFIG
            - IDENTITY_PROFILE
            - RULE
            - SOURCE
            - TRANSFORM
            - TRIGGER_SUBSCRIPTION
            example: SOURCE
            type: string
          type: array
        includeTypes:
          description: Object type names to be included in an sp-config export command.
            IncludeTypes takes precedence over excludeTypes.
          items:
            enum:
            - IDENTITY_OBJECT_CONFIG
            - IDENTITY_PROFILE
            - RULE
            - SOURCE
            - TRANSFORM
            - TRIGGER_SUBSCRIPTION
            example: TRIGGER_SUBSCRIPTION
            type: string
          type: array
        objectOptions:
          additionalProperties:
            $ref: '#/components/schemas/ObjectExportImportOptions'
          description: Additional options targeting specific objects related to each
            item in the includeTypes field
          example:
            TRIGGER_SUBSCRIPTION:
              includedIds:
              - be9e116d-08e1-49fc-ab7f-fa585e96c9e4
              includedNames:
              - Test 2
          type: object
        defaultReferences:
          description: List of object types that can be used to resolve references
            on import.
          items:
            enum:
            - IDENTITY_OBJECT_CONFIG
            - IDENTITY_PROFILE
            - RULE
            - SOURCE
            - TRANSFORM
            - TRIGGER_SUBSCRIPTION
            example: TRIGGER_SUBSCRIPTION
            type: string
          type: array
        excludeBackup:
          default: false
          description: "By default, every import will first export all existing objects\
            \ supported by sp-config as a backup before the import is attempted. If\
            \ excludeBackup is true, the backup will not be performed."
          example: false
          type: boolean
      type: object
    SpConfigJob:
      example:
        jobId: 3469b87d-48ca-439a-868f-2160001da8c1
        created: 2021-05-11T22:23:16Z
        modified: 2021-05-11T22:23:16Z
        expiration: 2021-05-11T22:23:16Z
        type: IMPORT
        status: COMPLETE
      properties:
        jobId:
          description: Unique id assigned to this job.
          example: 3469b87d-48ca-439a-868f-2160001da8c1
          type: string
        status:
          description: Status of the job.
          enum:
          - NOT_STARTED
          - IN_PROGRESS
          - COMPLETE
          - CANCELLED
          - FAILED
          example: COMPLETE
          type: string
        type:
          description: "Type of the job, either export or import."
          enum:
          - EXPORT
          - IMPORT
          example: IMPORT
          type: string
        expiration:
          description: The time until which the artifacts will be available for download.
          example: 2021-05-11T22:23:16Z
          format: date-time
          type: string
        created:
          description: The time the job was started.
          example: 2021-05-11T22:23:16Z
          format: date-time
          type: string
        modified:
          description: The time of the last update to the job.
          example: 2021-05-11T22:23:16Z
          format: date-time
          type: string
      required:
      - created
      - expiration
      - jobId
      - modified
      - status
      - type
      type: object
    SpConfigImportJobStatus:
      allOf:
      - $ref: '#/components/schemas/SpConfigJob'
      - properties:
          message:
            description: This message contains additional information about the overall
              status of the job.
            example: Download import results for details.
            type: string
          completed:
            description: The time the job was completed.
            example: 2021-05-11T22:23:16Z
            format: date-time
            type: string
        required:
        - completed
        - message
        type: object
    SpConfigImportResults:
      description: Response Body for Config Import command.
      example:
        results:
          results:
            TRIGGER_SUBSCRIPTION:
              infos:
              - key: IMPORT_PREVIEW
                text: "Object to be imported: [c953134c-2224-42f2-a84e-fa5cbb395904,\
                  \ Test 2]"
                detail: null
              - key: IMPORT_PREVIEW
                text: "Object to be imported: [be9e116d-08e1-49fc-ab7f-fa585e96c9e4,\
                  \ Test 1]"
                detail: null
              warnings: []
              errors: []
              importedObjects: []
        exportJobId: be9e116d-08e1-49fc-ab7f-fa585e96c9e4
      properties:
        results:
          additionalProperties:
            $ref: '#/components/schemas/ObjectImportResult'
          description: The results of an object configuration import job.
          example:
            results:
              TRIGGER_SUBSCRIPTION:
                infos:
                - key: IMPORT_PREVIEW
                  text: "Object to be imported: [c953134c-2224-42f2-a84e-fa5cbb395904,\
                    \ Test 2]"
                  detail: null
                - key: IMPORT_PREVIEW
                  text: "Object to be imported: [be9e116d-08e1-49fc-ab7f-fa585e96c9e4,\
                    \ Test 1]"
                  detail: null
                warnings: []
                errors: []
                importedObjects: []
          type: object
        exportJobId:
          description: "If a backup was performed before the import, this will contain\
            \ the jobId of the backup job. This id can be used to retrieve the json\
            \ file of the backup export."
          example: be9e116d-08e1-49fc-ab7f-fa585e96c9e4
          type: string
      required:
      - results
      title: Config Import Response Body
      type: object
    SpConfigObject:
      description: Response model for get object configuration.
      example:
        resolveByIdUrl:
          query: "{}"
          url: ets://trigger-subscriptions/$id
        exportLimit: 10
        importRight: idn:trigger-service-subscriptions:create
        exportUrl:
          query: "{}"
          url: ets://trigger-subscriptions/$id
        signatureRequired: false
        importLimit: 10
        resolveByNameUrl:
        - query: "{}"
          url: ets://trigger-subscriptions/$id
        - query: "{}"
          url: ets://trigger-subscriptions/$id
        importUrl:
          query: "{}"
          url: ets://trigger-subscriptions/$id
        referenceExtractors:
        - $.owner
        objectType: TRIGGER_SUBSCRIPTION
        exportRight: idn:trigger-service-subscriptions:read
      properties:
        objectType:
          description: The object type this configuration is for.
          example: TRIGGER_SUBSCRIPTION
          type: string
        resolveByIdUrl:
          $ref: '#/components/schemas/SpConfigUrl'
        resolveByNameUrl:
          description: Url and query parameters to be used to resolve this type of
            object by name.
          items:
            $ref: '#/components/schemas/SpConfigUrl'
          type: array
        exportUrl:
          $ref: '#/components/schemas/SpConfigUrl'
        exportRight:
          description: Rights needed by the invoker of sp-config/export in order to
            export this type of object.
          example: idn:trigger-service-subscriptions:read
          type: string
        exportLimit:
          description: Pagination limit imposed by the target service for this object
            type.
          example: 10
          format: int32
          type: integer
        importUrl:
          $ref: '#/components/schemas/SpConfigUrl'
        importRight:
          description: Rights needed by the invoker of sp-config/import in order to
            import this type of object.
          example: idn:trigger-service-subscriptions:create
          type: string
        importLimit:
          description: Pagination limit imposed by the target service for this object
            type.
          example: 10
          format: int32
          type: integer
        referenceExtractors:
          description: List of json paths within an exported object of this type that
            represent references that need to be resolved.
          example:
          - $.owner
          items:
            type: string
          nullable: true
          type: array
        signatureRequired:
          default: false
          description: "If true, this type of object will be JWS signed and cannot\
            \ be modified before import."
          example: false
          type: boolean
      title: Object Configuration Model
      type: object
    Source:
      example:
        cluster:
          name: Corporate Cluster
          id: 2c9180866166b5b0016167c32ef31a66
          type: CLUSTER
        deleteThreshold: 10
        connectorId: active-directory
        description: This is the corporate directory.
        type: OpenLDAP - Direct
        connectorClass: sailpoint.connector.LDAPConnector
        connectionType: file
        features:
        - SYNC_PROVISIONING
        - MANAGER_LOOKUP
        - SEARCH
        - PROVISIONING
        - AUTHENTICATE
        - GROUP_PROVISIONING
        - PASSWORD
        passwordPolicies:
        - type: PASSWORD_POLICY
          id: 2c9180855d191c59015d291ceb053980
          name: Corporate Password Policy
        - type: PASSWORD_POLICY
          id: 2c9180855d191c59015d291ceb057777
          name: Vendor Password Policy
        modified: 2024-01-23T18:08:50.897Z
        id: 2c91808568c529c60168cca6f90c1324
        connectorImplementationId: delimited-file
        managerCorrelationRule:
          name: Example Rule
          id: 2c918085708c274401708c2a8a760001
          type: RULE
        owner:
          name: MyName
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        managementWorkgroup:
          name: My Management Workgroup
          id: 2c91808568c529c60168cca6f90c2222
          type: GOVERNANCE_GROUP
        accountCorrelationRule:
          name: Example Rule
          id: 2c918085708c274401708c2a8a760001
          type: RULE
        authoritative: false
        connectorAttributes:
          healthCheckTimeout: 30
          authSearchAttributes:
          - cn
          - uid
          - mail
        created: 2022-02-08T14:50:03.827Z
        managerCorrelationMapping:
          accountAttribute: manager
          identityAttribute: manager
        accountCorrelationConfig:
          name: "Directory [source-62867] Account Correlation"
          id: 2c9180855d191c59015d28583727245a
          type: ACCOUNT_CORRELATION_CONFIG
        connector: active-directory
        healthy: true
        schemas:
        - type: CONNECTOR_SCHEMA
          id: 2c9180835d191a86015d28455b4b232a
          name: account
        - type: CONNECTOR_SCHEMA
          id: 2c9180835d191a86015d28455b4b232b
          name: group
        name: My Source
        connectorName: Active Directory
        beforeProvisioningRule:
          name: Example Rule
          id: 2c918085708c274401708c2a8a760001
          type: RULE
        status: SOURCE_STATE_HEALTHY
        since: 2021-09-28T15:48:29.3801666300Z
      properties:
        id:
          description: the id of the Source
          example: 2c91808568c529c60168cca6f90c1324
          readOnly: true
          type: string
        name:
          description: Human-readable name of the source
          example: My Source
          type: string
        description:
          description: Human-readable description of the source
          example: This is the corporate directory.
          type: string
        owner:
          $ref: '#/components/schemas/Source_owner'
        cluster:
          $ref: '#/components/schemas/Source_cluster'
        accountCorrelationConfig:
          $ref: '#/components/schemas/Source_accountCorrelationConfig'
        accountCorrelationRule:
          $ref: '#/components/schemas/Source_accountCorrelationRule'
        managerCorrelationMapping:
          $ref: '#/components/schemas/ManagerCorrelationMapping'
        managerCorrelationRule:
          $ref: '#/components/schemas/Source_managerCorrelationRule'
        beforeProvisioningRule:
          $ref: '#/components/schemas/Source_beforeProvisioningRule'
        schemas:
          description: List of references to Schema objects
          example:
          - type: CONNECTOR_SCHEMA
            id: 2c9180835d191a86015d28455b4b232a
            name: account
          - type: CONNECTOR_SCHEMA
            id: 2c9180835d191a86015d28455b4b232b
            name: group
          items:
            $ref: '#/components/schemas/Source_schemas_inner'
          type: array
        passwordPolicies:
          description: List of references to the associated PasswordPolicy objects.
          example:
          - type: PASSWORD_POLICY
            id: 2c9180855d191c59015d291ceb053980
            name: Corporate Password Policy
          - type: PASSWORD_POLICY
            id: 2c9180855d191c59015d291ceb057777
            name: Vendor Password Policy
          items:
            $ref: '#/components/schemas/Source_passwordPolicies_inner'
          type: array
        features:
          description: Optional features that can be supported by a source.
          example:
          - SYNC_PROVISIONING
          - MANAGER_LOOKUP
          - SEARCH
          - PROVISIONING
          - AUTHENTICATE
          - GROUP_PROVISIONING
          - PASSWORD
          items:
            $ref: '#/components/schemas/SourceFeature'
          type: array
        type:
          description: "Specifies the type of system being managed e.g. Active Directory,\
            \ Workday, etc.. If you are creating a Delimited File source, you must\
            \ set the `provisionasCsv` query parameter to `true`. "
          example: OpenLDAP - Direct
          type: string
        connector:
          description: Connector script name.
          example: active-directory
          type: string
        connectorClass:
          description: The fully qualified name of the Java class that implements
            the connector interface.
          example: sailpoint.connector.LDAPConnector
          type: string
        connectorAttributes:
          description: Connector specific configuration; will differ from type to
            type.
          example:
            healthCheckTimeout: 30
            authSearchAttributes:
            - cn
            - uid
            - mail
          type: object
        deleteThreshold:
          description: Number from 0 to 100 that specifies when to skip the delete
            phase.
          example: 10
          format: int32
          type: integer
        authoritative:
          default: false
          description: When true indicates the source is referenced by an IdentityProfile.
          example: false
          type: boolean
        managementWorkgroup:
          $ref: '#/components/schemas/Source_managementWorkgroup'
        healthy:
          default: false
          description: When true indicates a healthy source
          example: true
          type: boolean
        status:
          description: "A status identifier, giving specific information on why a\
            \ source is healthy or not"
          example: SOURCE_STATE_HEALTHY
          type: string
        since:
          description: Timestamp showing when a source health check was last performed
          example: 2021-09-28T15:48:29.3801666300Z
          type: string
        connectorId:
          description: The id of connector
          example: active-directory
          type: string
        connectorName:
          description: The name of the connector that was chosen on source creation
          example: Active Directory
          type: string
        connectionType:
          description: The type of connection (direct or file)
          example: file
          type: string
        connectorImplementationId:
          description: The connector implementation id
          example: delimited-file
          type: string
        created:
          description: The date-time when the source was created
          example: 2022-02-08T14:50:03.827Z
          format: date-time
          type: string
        modified:
          description: The date-time when the source was last modified
          example: 2024-01-23T18:08:50.897Z
          format: date-time
          type: string
      required:
      - connector
      - name
      - owner
      type: object
    AttrSyncSourceConfig:
      description: Specification of attribute sync configuration for a source
      example:
        attributes:
        - name: email
          displayName: Email
          enabled: true
          target: mail
        - name: firstname
          displayName: First Name
          enabled: false
          target: givenName
        source:
          name: HR Active Directory
          id: 2c9180835d191a86015d28455b4b232a
          type: SOURCE
      properties:
        source:
          $ref: '#/components/schemas/AttrSyncSource'
        attributes:
          description: Attribute synchronization configuration for specific identity
            attributes in the context of a source
          example:
          - name: email
            displayName: Email
            enabled: true
            target: mail
          - name: firstname
            displayName: First Name
            enabled: false
            target: givenName
          items:
            $ref: '#/components/schemas/AttrSyncSourceAttributeConfig'
          type: array
      required:
      - attributes
      - source
      type: object
    StatusResponse:
      description: "Response model for connection check, configuration test and ping\
        \ of source connectors."
      example:
        name: "ODS-AD-Test [source-999999]"
        details:
          useTLSForIQService: false
          IQService:
            TLS Port: 0
            ".NET CLR Version": 4.0.30319.42000
            SecondaryServiceStatus: Running
            Port: 5050
            Host: AUTOMATION-AD
            Name: IQService
            IQServiceStatus: Running
            SecondaryService: IQService-Instance1-Secondary
            Version: IQService Sep-2020
            secondaryPort: 5051
            OS Architecture: AMD64
            Operating System: Microsoft Windows Server 2012 R2 Standard
            highestDotNetVersion: 4.8 or later
            Build Time: 09/22/2020 06:34 AM -0500
          IQServiceClientAuthEnabled: false
          requestProcessedOn: 1/19/2021 1:47:14 PM
        id: 2c91808568c529c60168cca6f90c1313
        elapsedMillis: 1000
        status: SUCCESS
      properties:
        id:
          description: ID of the source
          example: 2c91808568c529c60168cca6f90c1313
          readOnly: true
          type: string
        name:
          description: Name of the source
          example: "ODS-AD-Test [source-999999]"
          readOnly: true
          type: string
        status:
          description: The status of the health check.
          enum:
          - SUCCESS
          - FAILURE
          example: SUCCESS
          readOnly: true
          type: string
        elapsedMillis:
          description: The number of milliseconds spent on the entire request.
          example: 1000
          readOnly: true
          type: integer
        details:
          description: |
            The document contains the results of the health check.
            The schema of this document depends on the type of source used.
          example:
            useTLSForIQService: false
            IQService:
              TLS Port: 0
              ".NET CLR Version": 4.0.30319.42000
              SecondaryServiceStatus: Running
              Port: 5050
              Host: AUTOMATION-AD
              Name: IQService
              IQServiceStatus: Running
              SecondaryService: IQService-Instance1-Secondary
              Version: IQService Sep-2020
              secondaryPort: 5051
              OS Architecture: AMD64
              Operating System: Microsoft Windows Server 2012 R2 Standard
              highestDotNetVersion: 4.8 or later
              Build Time: 09/22/2020 06:34 AM -0500
            IQServiceClientAuthEnabled: false
            requestProcessedOn: 1/19/2021 1:47:14 PM
          readOnly: true
          type: object
      title: Status Response
      type: object
    ResourceObjectsRequest:
      description: Request model for peek resource objects from source connectors.
      example:
        maxCount: 100
        objectType: group
      properties:
        objectType:
          default: account
          description: The type of resource objects to iterate over.
          example: group
          type: string
        maxCount:
          default: 25
          description: The maximum number of resource objects to iterate over and
            return.
          example: 100
          type: integer
      title: Resource Objects Request
      type: object
    ResourceObjectsResponse:
      description: Response model for peek resource objects from source connectors.
      example:
        objectCount: 25
        name: "ODS-AD-Test [source-999999]"
        resourceObjects:
        - finalUpdate: false
          instance: instance
          incremental: false
          uuid: "{abf7bd9b-68b4-4d21-9b70-870c58ebf844}"
          delete: false
          remove: false
          objectType: account
          incomplete: false
          identity: "CN=Aaron Carr,OU=test1,DC=test2,DC=test"
          previousIdentity: previousIdentity
          name: Aaron Carr
          missing:
          - missFieldOne
          - missFieldTwo
          attributes:
            telephoneNumber: 12-(345)678-9012
            mail: example@test.com
            displayName: Aaron Carr
        - finalUpdate: false
          instance: instance
          incremental: false
          uuid: "{abf7bd9b-68b4-4d21-9b70-870c58ebf844}"
          delete: false
          remove: false
          objectType: account
          incomplete: false
          identity: "CN=Aaron Carr,OU=test1,DC=test2,DC=test"
          previousIdentity: previousIdentity
          name: Aaron Carr
          missing:
          - missFieldOne
          - missFieldTwo
          attributes:
            telephoneNumber: 12-(345)678-9012
            mail: example@test.com
            displayName: Aaron Carr
        id: 2c91808568c529c60168cca6f90c1313
        elapsedMillis: 1055
      properties:
        id:
          description: ID of the source
          example: 2c91808568c529c60168cca6f90c1313
          readOnly: true
          type: string
        name:
          description: Name of the source
          example: "ODS-AD-Test [source-999999]"
          readOnly: true
          type: string
        objectCount:
          description: The number of objects that were fetched by the connector.
          example: 25
          readOnly: true
          type: integer
        elapsedMillis:
          description: The number of milliseconds spent on the entire request.
          example: 1055
          readOnly: true
          type: integer
        resourceObjects:
          description: Fetched objects from the source connector.
          items:
            $ref: '#/components/schemas/ResourceObject'
          readOnly: true
          type: array
      title: Resource Objects Response
      type: object
    ConnectorDetail:
      example:
        uploadedFiles: "[]"
        sourceConfig: "{Form={Field={_defaultValue=true, _hidden=true, _name=cloudAuthEnabled,\
          \ _type=boolean, _value=true}, _xmlns=http://www.sailpoint.com/xsd/sailpoint_form_1_0.xsd,\
          \ _connectorName=Active Directory - Direct, _directConnect=true, _name=Active\
          \ Directory, _status=released, _type=SourceConfig, __text=\\n\\t}}"
        name: JDBC
        sourceConfigXml: "<Form connectorName='Active Directory - Direct' directConnect='true'\
          \ name='Active Directory' status='released' type='SourceConfig' xmlns='http://www.sailpoint.com/xsd/sailpoint_form_1_0.xsd'>\n\
          \t<Field defaultValue='true' hidden='true' name='cloudAuthEnabled' type='boolean'\
          \ value='true'> </Field> </Form>"
        directConnect: true
        fileUpload: false
        connectorMetadata:
          supportedUI: EXTJS
      properties:
        name:
          description: The connector name
          example: JDBC
          type: string
        sourceConfigXml:
          description: XML representation of the source config data
          example: "<Form connectorName='Active Directory - Direct' directConnect='true'\
            \ name='Active Directory' status='released' type='SourceConfig' xmlns='http://www.sailpoint.com/xsd/sailpoint_form_1_0.xsd'>\n\
            \t<Field defaultValue='true' hidden='true' name='cloudAuthEnabled' type='boolean'\
            \ value='true'> </Field> </Form>"
          type: string
        sourceConfig:
          description: JSON representation of the source config data
          example: "{Form={Field={_defaultValue=true, _hidden=true, _name=cloudAuthEnabled,\
            \ _type=boolean, _value=true}, _xmlns=http://www.sailpoint.com/xsd/sailpoint_form_1_0.xsd,\
            \ _connectorName=Active Directory - Direct, _directConnect=true, _name=Active\
            \ Directory, _status=released, _type=SourceConfig, __text=\\n\\t}}"
          type: string
        directConnect:
          description: true if the source is a direct connect source
          example: true
          type: boolean
        fileUpload:
          description: "Connector config's file upload attribute, false if not there"
          example: false
          type: boolean
        uploadedFiles:
          description: List of uploaded file strings for the connector
          example: "[]"
          type: string
        connectorMetadata:
          description: Object containing metadata pertinent to the UI to be used
          example:
            supportedUI: EXTJS
          type: object
      type: object
    NativeChangeDetectionConfig:
      description: Source configuration information for Native Change Detection that
        is read and used by account aggregation process.
      example:
        selectedEntitlements:
        - memberOf
        - memberOfSharedMailbox
        operations:
        - ACCOUNT_UPDATED
        - ACCOUNT_DELETED
        selectedNonEntitlementAttributes:
        - lastName
        - phoneNumber
        - objectType
        - servicePrincipalName
        allNonEntitlementAttributes: false
        allEntitlements: false
        enabled: true
      properties:
        enabled:
          default: false
          description: A flag indicating if Native Change Detection is enabled for
            a source.
          example: true
          type: boolean
        operations:
          description: Operation types for which Native Change Detection is enabled
            for a source.
          example:
          - ACCOUNT_UPDATED
          - ACCOUNT_DELETED
          items:
            enum:
            - ACCOUNT_UPDATED
            - ACCOUNT_CREATED
            - ACCOUNT_DELETED
            type: string
          type: array
        allEntitlements:
          default: false
          description: A flag indicating that all entitlements participate in Native
            Change Detection.
          example: false
          type: boolean
        allNonEntitlementAttributes:
          default: false
          description: A flag indicating that all non-entitlement account attributes
            participate in Native Change Detection.
          example: false
          type: boolean
        selectedEntitlements:
          description: If allEntitlements flag is off this field lists entitlements
            that participate in Native Change Detection.
          example:
          - memberOf
          - memberOfSharedMailbox
          items:
            type: string
          type: array
        selectedNonEntitlementAttributes:
          description: If allNonEntitlementAttributes flag is off this field lists
            non-entitlement account attributes that participate in Native Change Detection.
          example:
          - lastName
          - phoneNumber
          - objectType
          - servicePrincipalName
          externalDocs:
            description: Learn more about account attributes here.
            url: https://documentation.sailpoint.com/saas/help/accounts/schema.html
          items:
            type: string
          type: array
      type: object
    ProvisioningPolicyDto:
      example:
        name: example provisioning policy for inactive identities
        description: this provisioning policy creates access based on an identity
          going inactive
        fields:
        - isRequired: false
          transform:
            type: rule
            attributes:
              name: Create Unique LDAP Attribute
          isMultiValued: false
          name: userName
          attributes:
            template: "${firstname}.${lastname}${uniqueCounter}"
            cloudMaxUniqueChecks: "50"
            cloudMaxSize: "20"
            cloudRequired: "true"
          type: string
        - isRequired: false
          transform:
            type: rule
            attributes:
              name: Create Unique LDAP Attribute
          isMultiValued: false
          name: userName
          attributes:
            template: "${firstname}.${lastname}${uniqueCounter}"
            cloudMaxUniqueChecks: "50"
            cloudMaxSize: "20"
            cloudRequired: "true"
          type: string
        usageType: CREATE
      properties:
        name:
          description: the provisioning policy name
          example: example provisioning policy for inactive identities
          type: string
        description:
          description: the description of the provisioning policy
          example: this provisioning policy creates access based on an identity going
            inactive
          type: string
        usageType:
          $ref: '#/components/schemas/UsageType'
        fields:
          items:
            $ref: '#/components/schemas/FieldDetailsDto'
          type: array
      required:
      - name
      type: object
    UsageType:
      description: "The type of provisioning policy usage. \nIn IdentityNow, a source\
        \ can support various provisioning operations. For example, when a joiner\
        \ is added to a source, this may trigger both CREATE and UPDATE provisioning\
        \ operations.  Each usage type is considered a provisioning policy.  A source\
        \ can have any number of these provisioning policies defined. \nThese are\
        \ the common usage types: \nCREATE - This usage type relates to 'Create Account\
        \ Profile', the provisioning template for the account to be created. For example,\
        \ this would be used for a joiner on a source.  \nUPDATE - This usage type\
        \ relates to 'Update Account Profile', the provisioning template for the 'Update'\
        \ connector operations. For example, this would be used for an attribute sync\
        \ on a source.\nENABLE - This usage type relates to 'Enable Account Profile',\
        \ the provisioning template for the account to be enabled. For example, this\
        \ could be used for a joiner on a source once the joiner's account is created.\
        \ \nDISABLE - This usage type relates to 'Disable Account Profile', the provisioning\
        \ template for the account to be disabled. For example, this could be used\
        \ when a leaver is removed temporarily from a source. \nYou can use these\
        \ four usage types for all your provisioning policy needs. "
      enum:
      - CREATE
      - UPDATE
      - ENABLE
      - DISABLE
      - DELETE
      - ASSIGN
      - UNASSIGN
      - CREATE_GROUP
      - UPDATE_GROUP
      - DELETE_GROUP
      - REGISTER
      - CREATE_IDENTITY
      - UPDATE_IDENTITY
      - EDIT_GROUP
      - UNLOCK
      - CHANGE_PASSWORD
      example: CREATE
      nullable: false
      type: string
    Schema:
      example:
        features:
        - PROVISIONING
        - NO_PERMISSIONS_PROVISIONING
        - GROUPS_HAVE_MEMBERS
        nativeObjectType: User
        configuration:
          groupMemberAttribute: member
        created: 2019-12-24T22:32:58.104Z
        includePermissions: false
        name: account
        hierarchyAttribute: memberOf
        modified: 2019-12-31T20:22:28.104Z
        attributes:
        - name: sAMAccountName
          type: STRING
          isMultiValued: false
          isEntitlement: false
          isGroup: false
        - name: memberOf
          type: STRING
          schema:
            type: CONNECTOR_SCHEMA
            id: 2c9180887671ff8c01767b4671fc7d60
            name: group
          description: Group membership
          isMultiValued: true
          isEntitlement: true
          isGroup: true
        id: 2c9180835d191a86015d28455b4a2329
        displayAttribute: distinguishedName
        identityAttribute: sAMAccountName
      properties:
        id:
          description: The id of the Schema.
          example: 2c9180835d191a86015d28455b4a2329
          type: string
        name:
          description: The name of the Schema.
          example: account
          type: string
        nativeObjectType:
          description: The name of the object type on the native system that the schema
            represents.
          example: User
          type: string
        identityAttribute:
          description: The name of the attribute used to calculate the unique identifier
            for an object in the schema.
          example: sAMAccountName
          type: string
        displayAttribute:
          description: The name of the attribute used to calculate the display value
            for an object in the schema.
          example: distinguishedName
          type: string
        hierarchyAttribute:
          description: The name of the attribute whose values represent other objects
            in a hierarchy. Only relevant to group schemas.
          example: memberOf
          type: string
        includePermissions:
          description: Flag indicating whether or not the include permissions with
            the object data when aggregating the schema.
          example: false
          type: boolean
        features:
          description: The features that the schema supports.
          example:
          - PROVISIONING
          - NO_PERMISSIONS_PROVISIONING
          - GROUPS_HAVE_MEMBERS
          items:
            $ref: '#/components/schemas/SourceFeature'
          type: array
        configuration:
          description: Holds any extra configuration data that the schema may require.
          example:
            groupMemberAttribute: member
          type: object
        attributes:
          description: The attribute definitions which form the schema.
          example:
          - name: sAMAccountName
            type: STRING
            isMultiValued: false
            isEntitlement: false
            isGroup: false
          - name: memberOf
            type: STRING
            schema:
              type: CONNECTOR_SCHEMA
              id: 2c9180887671ff8c01767b4671fc7d60
              name: group
            description: Group membership
            isMultiValued: true
            isEntitlement: true
            isGroup: true
          items:
            $ref: '#/components/schemas/AttributeDefinition'
          type: array
        created:
          description: The date the Schema was created.
          example: 2019-12-24T22:32:58.104Z
          format: date-time
          type: string
        modified:
          description: The date the Schema was last modified.
          example: 2019-12-31T20:22:28.104Z
          format: date-time
          type: string
      type: object
    SourceSyncJob:
      example:
        payload:
          type: SYNCHRONIZE_SOURCE_ATTRIBUTES
          dataJson: "{\"sourceId\":\"2c918083746f642c01746f990884012a\"}"
        id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        status: IN_PROGRESS
      properties:
        id:
          description: Job ID.
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: string
        status:
          description: The job status.
          enum:
          - QUEUED
          - IN_PROGRESS
          - SUCCESS
          - ERROR
          example: IN_PROGRESS
          type: string
        payload:
          $ref: '#/components/schemas/SourceSyncPayload'
      required:
      - id
      - payload
      - status
      type: object
    SourceEntitlementRequestConfig:
      description: Entitlement Request Configuration
      example:
        accessRequestConfig:
          denialCommentRequired: false
          approvalSchemes:
          - approverId: e3eab852-8315-467f-9de7-70eda97f63c8
            approverType: GOVERNANCE_GROUP
          - approverId: e3eab852-8315-467f-9de7-70eda97f63c8
            approverType: GOVERNANCE_GROUP
          requestCommentRequired: true
      properties:
        accessRequestConfig:
          $ref: '#/components/schemas/EntitlementAccessRequestConfig'
      type: object
    TaskStatus:
      description: Details and current status of a specific task
      example:
        created: 2020-07-11T21:23:15Z
        description: A Really Big Task
        completed: 2020-07-11T21:23:15Z
        percentComplete: 100
        type: QUARTZ
        launched: 2020-07-11T21:23:15Z
        parentName: Parent Task
        uniqueName: Big Task
        modified: 2020-07-11T21:23:15Z
        messages:
        - type: INFO
          parameters:
          - name: value
          key: akey
          localizedText:
            locale: An error has occurred!
            message: Error has occurred!
        - type: INFO
          parameters:
          - name: value
          key: akey
          localizedText:
            locale: An error has occurred!
            message: Error has occurred!
        progress: Started
        returns:
        - name: label
          attributeName: identityCount
        - name: label
          attributeName: identityCount
        attributes:
          identityCount: 0
        id: id12345
        completionStatus: Success
        launcher: sweep
      properties:
        id:
          description: System-generated unique ID of the task this TaskStatus represents
          example: id12345
          type: string
        type:
          description: Type of task this TaskStatus represents
          enum:
          - QUARTZ
          - QPOC
          - QUEUED_TASK
          example: QUARTZ
          type: string
        uniqueName:
          description: Name of the task this TaskStatus represents
          example: Big Task
          type: string
        description:
          description: Description of the task this TaskStatus represents
          example: A Really Big Task
          type: string
        parentName:
          description: Name of the parent of the task this TaskStatus represents
          example: Parent Task
          type: string
        launcher:
          description: Service to execute the task this TaskStatus represents
          example: sweep
          type: string
        created:
          description: Creation date of the task this TaskStatus represents
          example: 2020-07-11T21:23:15Z
          format: date-time
          type: string
        modified:
          description: Last modification date of the task this TaskStatus represents
          example: 2020-07-11T21:23:15Z
          format: date-time
          type: string
        launched:
          description: Launch date of the task this TaskStatus represents
          example: 2020-07-11T21:23:15Z
          format: date-time
          type: string
        completed:
          description: Completion date of the task this TaskStatus represents
          example: 2020-07-11T21:23:15Z
          format: date-time
          type: string
        completionStatus:
          description: Completion status of the task this TaskStatus represents
          enum:
          - Success
          - Warning
          - Error
          - Terminated
          - TempError
          example: Success
          type: string
        messages:
          description: Messages associated with the task this TaskStatus represents
          items:
            $ref: '#/components/schemas/TaskStatusMessage'
          type: array
        returns:
          description: Return values from the task this TaskStatus represents
          items:
            $ref: '#/components/schemas/TaskReturnDetails'
          type: array
        attributes:
          additionalProperties: true
          description: Attributes of the task this TaskStatus represents
          example:
            identityCount: 0
          type: object
        progress:
          description: Current progress of the task this TaskStatus represents
          example: Started
          type: string
        percentComplete:
          description: Current percentage completion of the task this TaskStatus represents
          example: 100
          type: integer
      required:
      - attributes
      - completed
      - completionStatus
      - created
      - description
      - id
      - launched
      - launcher
      - messages
      - modified
      - parentName
      - percentComplete
      - progress
      - returns
      - type
      - uniqueName
      type: object
    JsonPatch:
      description: "A JSONPatch document as defined by [RFC 6902 - JSON Patch](https://tools.ietf.org/html/rfc6902)"
      example: "[\n  {\n\t  \"op\": \"replace\",\n\t  \"path\": \"/description\",\n\
        \t  \"value\": \"A new description\"\n  }\n]"
      properties:
        operations:
          description: Operations to be applied
          items:
            $ref: '#/components/schemas/JsonPatchOperation'
          type: array
      type: object
    TaggedObject:
      example:
        objectRef:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        tags:
        - BU_FINANCE
        - PCI
      properties:
        objectRef:
          $ref: '#/components/schemas/TaggedObject_objectRef'
        tags:
          description: Labels to be applied to an Object
          example:
          - BU_FINANCE
          - PCI
          items:
            type: string
          type: array
      type: object
    BulkTaggedObject:
      example:
        objectRefs:
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        - name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        operation: MERGE
        tags:
        - BU_FINANCE
        - PCI
      properties:
        objectRefs:
          items:
            $ref: '#/components/schemas/TaggedObjectDto'
          type: array
        tags:
          description: Label to be applied to object.
          example:
          - BU_FINANCE
          - PCI
          items:
            type: string
          type: array
        operation:
          default: APPEND
          description: |-
            If APPEND, tags are appended to the list of tags for the object. A 400 error is returned if this would add duplicate tags to the object.

            If MERGE, tags are merged with the existing tags. Duplicate tags are silently ignored.
          enum:
          - APPEND
          - MERGE
          example: MERGE
          type: string
      type: object
    TransformRead:
      allOf:
      - $ref: '#/components/schemas/Transform'
      - properties:
          id:
            description: Unique ID of this transform
            example: 2cd78adghjkja34jh2b1hkjhasuecd
            type: string
          internal:
            default: false
            description: Indicates whether this is an internal SailPoint-created transform
              or a customer-created transform
            example: false
            type: boolean
        required:
        - id
        - internal
        type: object
    Transform:
      description: The representation of an internally- or customer-defined transform.
      example:
        name: Timestamp To Date
        attributes: "{}"
        type: dateFormat
      properties:
        name:
          description: Unique name of this transform
          example: Timestamp To Date
          maxLength: 50
          minLength: 1
          type: string
        type:
          description: The type of transform operation
          enum:
          - accountAttribute
          - base64Decode
          - base64Encode
          - concat
          - conditional
          - dateCompare
          - dateFormat
          - dateMath
          - decomposeDiacriticalMarks
          - e164phone
          - firstValid
          - rule
          - identityAttribute
          - indexOf
          - iso3166
          - lastIndexOf
          - leftPad
          - lookup
          - lower
          - normalizeNames
          - randomAlphaNumeric
          - randomNumeric
          - reference
          - replaceAll
          - replace
          - rightPad
          - split
          - static
          - substring
          - trim
          - upper
          - usernameGenerator
          - uuid
          example: dateFormat
          externalDocs:
            description: Transform Operations
            url: https://developer.sailpoint.com/idn/docs/transforms/operations
          type: string
        attributes:
          description: Meta-data about the transform. Values in this list are specific
            to the type of transform to be executed.
          nullable: true
          type: object
      required:
      - attributes
      - name
      - type
      type: object
    Trigger:
      example:
        outputSchema: "{\"definitions\":{\"record:AccessRequestDynamicApproverOutput\"\
          :{\"type\":[\"null\",\"object\"],\"required\":[\"id\",\"name\",\"type\"\
          ],\"additionalProperties\":true,\"properties\":{\"id\":{\"type\":\"string\"\
          },\"name\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}},\"$ref\"\
          :\"#/definitions/record:AccessRequestDynamicApproverOutput\"}"
        inputSchema: "{\"definitions\":{\"record:AccessRequestDynamicApproverInput\"\
          :{\"type\":\"object\",\"required\":[\"accessRequestId\",\"requestedFor\"\
          ,\"requestedItems\",\"requestedBy\"],\"additionalProperties\":true,\"properties\"\
          :{\"accessRequestId\":{\"type\":\"string\"},\"requestedFor\":{\"$ref\":\"\
          #/definitions/record:requestedForIdentityRef\"},\"requestedItems\":{\"type\"\
          :\"array\",\"items\":{\"$ref\":\"#/definitions/record:requestedObjectRef\"\
          }},\"requestedBy\":{\"$ref\":\"#/definitions/record:requestedByIdentityRef\"\
          }}},\"record:requestedForIdentityRef\":{\"type\":\"object\",\"required\"\
          :[\"id\",\"name\",\"type\"],\"additionalProperties\":true,\"properties\"\
          :{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"type\":{\"\
          type\":\"string\"}}},\"record:requestedObjectRef\":{\"type\":\"object\"\
          ,\"optional\":[\"description\",\"comment\"],\"required\":[\"id\",\"name\"\
          ,\"type\",\"operation\"],\"additionalProperties\":true,\"properties\":{\"\
          id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"description\"\
          :{\"oneOf\":[{\"type\":\"null\"},{\"type\":\"string\"}]},\"type\":{\"type\"\
          :\"string\"},\"operation\":{\"type\":\"string\"},\"comment\":{\"oneOf\"\
          :[{\"type\":\"null\"},{\"type\":\"string\"}]}}},\"record:requestedByIdentityRef\"\
          :{\"type\":\"object\",\"required\":[\"type\",\"id\",\"name\"],\"additionalProperties\"\
          :true,\"properties\":{\"type\":{\"type\":\"string\"},\"id\":{\"type\":\"\
          string\"},\"name\":{\"type\":\"string\"}}}},\"$ref\":\"#/definitions/record:AccessRequestDynamicApproverInput\"\
          }"
        exampleOutput: null
        exampleInput: null
        name: Access Request Dynamic Approver
        description: Trigger for getting a dynamic approver.
        id: idn:access-request-dynamic-approver
        type: FIRE_AND_FORGET
      properties:
        id:
          description: Unique identifier of the trigger.
          example: idn:access-request-dynamic-approver
          type: string
        name:
          description: Trigger Name.
          example: Access Request Dynamic Approver
          type: string
        type:
          $ref: '#/components/schemas/TriggerType'
        description:
          description: Trigger Description.
          example: Trigger for getting a dynamic approver.
          type: string
        inputSchema:
          description: The JSON schema of the payload that will be sent by the trigger
            to the subscribed service.
          example: "{\"definitions\":{\"record:AccessRequestDynamicApproverInput\"\
            :{\"type\":\"object\",\"required\":[\"accessRequestId\",\"requestedFor\"\
            ,\"requestedItems\",\"requestedBy\"],\"additionalProperties\":true,\"\
            properties\":{\"accessRequestId\":{\"type\":\"string\"},\"requestedFor\"\
            :{\"$ref\":\"#/definitions/record:requestedForIdentityRef\"},\"requestedItems\"\
            :{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/record:requestedObjectRef\"\
            }},\"requestedBy\":{\"$ref\":\"#/definitions/record:requestedByIdentityRef\"\
            }}},\"record:requestedForIdentityRef\":{\"type\":\"object\",\"required\"\
            :[\"id\",\"name\",\"type\"],\"additionalProperties\":true,\"properties\"\
            :{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"type\"\
            :{\"type\":\"string\"}}},\"record:requestedObjectRef\":{\"type\":\"object\"\
            ,\"optional\":[\"description\",\"comment\"],\"required\":[\"id\",\"name\"\
            ,\"type\",\"operation\"],\"additionalProperties\":true,\"properties\"\
            :{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"description\"\
            :{\"oneOf\":[{\"type\":\"null\"},{\"type\":\"string\"}]},\"type\":{\"\
            type\":\"string\"},\"operation\":{\"type\":\"string\"},\"comment\":{\"\
            oneOf\":[{\"type\":\"null\"},{\"type\":\"string\"}]}}},\"record:requestedByIdentityRef\"\
            :{\"type\":\"object\",\"required\":[\"type\",\"id\",\"name\"],\"additionalProperties\"\
            :true,\"properties\":{\"type\":{\"type\":\"string\"},\"id\":{\"type\"\
            :\"string\"},\"name\":{\"type\":\"string\"}}}},\"$ref\":\"#/definitions/record:AccessRequestDynamicApproverInput\"\
            }"
          type: string
        exampleInput:
          $ref: '#/components/schemas/Trigger_exampleInput'
        outputSchema:
          description: The JSON schema of the response that will be sent by the subscribed
            service to the trigger in response to an event.  This only applies to
            a trigger type of `REQUEST_RESPONSE`.
          example: "{\"definitions\":{\"record:AccessRequestDynamicApproverOutput\"\
            :{\"type\":[\"null\",\"object\"],\"required\":[\"id\",\"name\",\"type\"\
            ],\"additionalProperties\":true,\"properties\":{\"id\":{\"type\":\"string\"\
            },\"name\":{\"type\":\"string\"},\"type\":{\"type\":\"string\"}}}},\"\
            $ref\":\"#/definitions/record:AccessRequestDynamicApproverOutput\"}"
          nullable: true
          type: string
        exampleOutput:
          $ref: '#/components/schemas/Trigger_exampleOutput'
      required:
      - exampleInput
      - id
      - inputSchema
      - name
      - type
      type: object
    Subscription:
      example:
        filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]"
        httpConfig:
          bearerTokenAuthConfig:
            bearerToken: bearerToken
          httpAuthenticationType: BASIC_AUTH
          httpDispatchMode: SYNC
          basicAuthConfig:
            password: password
            userName: user@example.com
          url: https://www.example.com
        triggerName: Access Requested
        triggerId: idn:access-requested
        name: Access request subscription
        description: Access requested to site xyz
        eventBridgeConfig:
          awsRegion: us-west-1
          awsAccount: "123456789012"
        id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        responseDeadline: PT1H
        type: HTTP
        enabled: true
      properties:
        id:
          description: Subscription ID.
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: string
        name:
          description: Subscription name.
          example: Access request subscription
          type: string
        description:
          description: Subscription description.
          example: Access requested to site xyz
          type: string
        triggerId:
          description: ID of trigger subscribed to.
          example: idn:access-requested
          type: string
        triggerName:
          description: Trigger name of trigger subscribed to.
          example: Access Requested
          type: string
        type:
          $ref: '#/components/schemas/SubscriptionType'
        responseDeadline:
          default: PT1H
          description: "Deadline for completing REQUEST_RESPONSE trigger invocation,\
            \ represented in ISO-8601 duration format."
          example: PT1H
          type: string
        httpConfig:
          $ref: '#/components/schemas/HttpConfig'
        eventBridgeConfig:
          $ref: '#/components/schemas/EventBridgeConfig'
        enabled:
          default: true
          description: |-
            Whether subscription should receive real-time trigger invocations or not.
            Test trigger invocations are always enabled regardless of this option.
          example: true
          type: boolean
        filter:
          description: JSONPath filter to conditionally invoke trigger when expression
            evaluates to true.
          example: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]"
          externalDocs:
            description: JSONPath filter documentation
            url: https://developer.sailpoint.com/idn/docs/event-triggers/filtering-events
          type: string
      required:
      - enabled
      - id
      - name
      - responseDeadline
      - triggerId
      - triggerName
      - type
      type: object
    SubscriptionPostRequest:
      example:
        filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]"
        httpConfig:
          bearerTokenAuthConfig:
            bearerToken: bearerToken
          httpAuthenticationType: BASIC_AUTH
          httpDispatchMode: SYNC
          basicAuthConfig:
            password: password
            userName: user@example.com
          url: https://www.example.com
        triggerId: idn:access-requested
        name: Access request subscription
        description: Access requested to site xyz
        eventBridgeConfig:
          awsRegion: us-west-1
          awsAccount: "123456789012"
        responseDeadline: PT1H
        type: HTTP
        enabled: true
      properties:
        name:
          description: Subscription name.
          example: Access request subscription
          type: string
        description:
          description: Subscription description.
          example: Access requested to site xyz
          type: string
        triggerId:
          description: ID of trigger subscribed to.
          example: idn:access-requested
          type: string
        type:
          $ref: '#/components/schemas/SubscriptionType'
        responseDeadline:
          default: PT1H
          description: "Deadline for completing REQUEST_RESPONSE trigger invocation,\
            \ represented in ISO-8601 duration format."
          example: PT1H
          type: string
        httpConfig:
          $ref: '#/components/schemas/HttpConfig'
        eventBridgeConfig:
          $ref: '#/components/schemas/EventBridgeConfig'
        enabled:
          default: true
          description: |-
            Whether subscription should receive real-time trigger invocations or not.

            Test trigger invocations are always enabled regardless of this option.
          example: true
          type: boolean
        filter:
          description: JSONPath filter to conditionally invoke trigger when expression
            evaluates to true.
          example: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]"
          externalDocs:
            description: JSONPath filter documentation
            url: https://developer.sailpoint.com/idn/docs/event-triggers/filtering-events
          type: string
      required:
      - name
      - triggerId
      - type
      type: object
    SubscriptionPutRequest:
      example:
        filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]"
        httpConfig:
          bearerTokenAuthConfig:
            bearerToken: bearerToken
          httpAuthenticationType: BASIC_AUTH
          httpDispatchMode: SYNC
          basicAuthConfig:
            password: password
            userName: user@example.com
          url: https://www.example.com
        name: Access request subscription
        description: Access requested to site xyz
        eventBridgeConfig:
          awsRegion: us-west-1
          awsAccount: "123456789012"
        responseDeadline: PT1H
        type: HTTP
        enabled: true
      properties:
        name:
          description: Subscription name.
          example: Access request subscription
          type: string
        description:
          description: Subscription description.
          example: Access requested to site xyz
          type: string
        type:
          $ref: '#/components/schemas/SubscriptionType'
        responseDeadline:
          default: PT1H
          description: "Deadline for completing REQUEST_RESPONSE trigger invocation,\
            \ represented in ISO-8601 duration format."
          example: PT1H
          type: string
        httpConfig:
          $ref: '#/components/schemas/HttpConfig'
        eventBridgeConfig:
          $ref: '#/components/schemas/EventBridgeConfig'
        enabled:
          default: true
          description: |-
            Whether subscription should receive real-time trigger invocations or not.

            Test trigger invocations are always enabled regardless of this option.
          example: true
          type: boolean
        filter:
          description: JSONPath filter to conditionally invoke trigger when expression
            evaluates to true.
          example: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]"
          externalDocs:
            description: JSONPath filter documentation
            url: https://developer.sailpoint.com/idn/docs/event-triggers/filtering-events
          type: string
      type: object
    SubscriptionPatchRequest:
      description: Operations to be applied
      example:
      - op: replace
        path: /description
        value: A new description
      - op: replace
        path: /name
        value: A new name
      items:
        $ref: '#/components/schemas/SubscriptionPatchRequest_inner'
      type: array
    ValidateFilterInputDto:
      example:
        filter: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]"
        input:
          identityId: 201327fda1c44704ac01181e963d463c
      properties:
        input:
          description: Mock input to evaluate filter expression against.
          example:
            identityId: 201327fda1c44704ac01181e963d463c
          type: object
        filter:
          description: JSONPath filter to conditionally invoke trigger when expression
            evaluates to true.
          example: "$[?($.identityId == \"201327fda1c44704ac01181e963d463c\")]"
          externalDocs:
            description: JSONPath filter documentation
            url: https://developer.sailpoint.com/idn/docs/event-triggers/filtering-events
          type: string
      required:
      - filter
      - input
      type: object
    ValidateFilterOutputDto:
      example:
        isValid: true
        isPathExist: true
        isValidJSONPath: true
      properties:
        isValid:
          default: false
          description: "When this field is true, the filter expression is valid against\
            \ the input."
          example: true
          type: boolean
        isValidJSONPath:
          default: false
          description: "When this field is true, the filter expression is using a\
            \ valid JSON path."
          example: true
          type: boolean
        isPathExist:
          default: false
          description: "When this field is true, the filter expression is using an\
            \ existing path."
          example: true
          type: boolean
      type: object
    InvocationStatus:
      example:
        startInvocationInput:
          input:
            identityId: 201327fda1c44704ac01181e963d463c
          triggerId: idn:access-requested
          contentJson:
            workflowId: 1234
        created: 2020-03-27T20:40:10.738Z
        triggerId: idn:access-requested
        id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        completed: 2020-03-27T20:42:14.738Z
        completeInvocationInput:
          output:
            approved: false
          localizedError:
            locale: An error has occurred!
            message: Error has occurred!
        subscriptionId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        type: TEST
      properties:
        id:
          description: Invocation ID
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: string
        triggerId:
          description: Trigger ID
          example: idn:access-requested
          type: string
        subscriptionId:
          description: Subscription ID
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: string
        type:
          $ref: '#/components/schemas/InvocationStatusType'
        created:
          description: Invocation created timestamp. ISO-8601 in UTC.
          example: 2020-03-27T20:40:10.738Z
          format: date-time
          type: string
        completed:
          description: Invocation completed timestamp; empty fields imply invocation
            is in-flight or not completed. ISO-8601 in UTC.
          example: 2020-03-27T20:42:14.738Z
          format: date-time
          type: string
        startInvocationInput:
          $ref: '#/components/schemas/StartInvocationInput'
        completeInvocationInput:
          $ref: '#/components/schemas/CompleteInvocationInput'
      required:
      - created
      - id
      - startInvocationInput
      - subscriptionId
      - subscriptionName
      - triggerId
      - type
      type: object
    CompleteInvocation:
      example:
        output:
          approved: false
        secret: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        error: Access request is denied.
      properties:
        secret:
          description: Unique invocation secret that was generated when the invocation
            was created. Required to authenticate to the endpoint.
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: string
        error:
          description: The error message to indicate a failed invocation or error
            if any.
          example: Access request is denied.
          type: string
        output:
          description: Trigger output to complete the invocation. Its schema is defined
            in the trigger definition.
          example:
            approved: false
          type: object
      required:
      - output
      - secret
      type: object
    TestInvocation:
      example:
        input:
          identityId: 201327fda1c44704ac01181e963d463c
        subscriptionIds:
        - 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        triggerId: idn:access-request-post-approval
        contentJson:
          workflowId: 1234
      properties:
        triggerId:
          description: Trigger ID
          example: idn:access-request-post-approval
          type: string
        input:
          description: "Mock input to use for test invocation.  This must adhere to\
            \ the input schema defined in the trigger being invoked.  If this property\
            \ is omitted, then the default trigger sample payload will be sent."
          example:
            identityId: 201327fda1c44704ac01181e963d463c
          type: object
        contentJson:
          description: JSON map of invocation metadata.
          example:
            workflowId: 1234
          type: object
        subscriptionIds:
          description: "Only send the test event to the subscription IDs listed. \
            \ If omitted, the test event will be sent to all subscribers."
          example:
          - 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          items:
            type: string
          type: array
      required:
      - contentJson
      - triggerId
      type: object
    Invocation:
      example:
        triggerId: idn:access-requested
        contentJson:
          workflowId: 1234
        id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        secret: 0f979022-08be-44f2-b6f9-7393ec73ed9b
      properties:
        id:
          description: Invocation ID
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: string
        triggerId:
          description: Trigger ID
          example: idn:access-requested
          type: string
        secret:
          description: Unique invocation secret.
          example: 0f979022-08be-44f2-b6f9-7393ec73ed9b
          type: string
        contentJson:
          description: JSON map of invocation metadata.
          example:
            workflowId: 1234
          type: object
      type: object
    EmailStatusDto:
      example:
        verificationStatus: PENDING
        id: id
        email: sender@example.com
      properties:
        id:
          type: string
        email:
          example: sender@example.com
          type: string
        verificationStatus:
          enum:
          - PENDING
          - SUCCESS
          - FAILED
          type: string
      type: object
    DkimAttributes:
      description: DKIM attributes for a domain or identity
      example:
        address: BobSmith@sailpoint.com
        dkimEnabled: true
        dkimTokens:
        - uq1m3jjk25ckd3whl4n7y46c56r5l6aq
        - u7pm38jky9ckdawhlsn7y4dcj6f5lpgq
        - uhpm3jjkjjckdkwhlqn7yw6cjer5tpay
        id: 123b45b0-aaaa-bbbb-a7db-123456a56abc
        dkimVerificationStatus: Success
      properties:
        id:
          description: UUID associated with domain to be verified
          example: 123b45b0-aaaa-bbbb-a7db-123456a56abc
          type: string
        address:
          description: The identity or domain address
          example: BobSmith@sailpoint.com
          type: string
        dkimEnabled:
          default: false
          description: Whether or not DKIM has been enabled for this domain / identity
          example: true
          type: boolean
        dkimTokens:
          description: The tokens to be added to a DNS for verification
          example:
          - uq1m3jjk25ckd3whl4n7y46c56r5l6aq
          - u7pm38jky9ckdawhlsn7y4dcj6f5lpgq
          - uhpm3jjkjjckdkwhlqn7yw6cjer5tpay
          items:
            type: string
          type: array
        dkimVerificationStatus:
          description: "The current status if the domain /identity has been verified.\
            \ Ie Success, Failed, Pending"
          example: Success
          type: string
      type: object
    DomainAddress:
      example:
        domain: sailpoint.com
      properties:
        domain:
          description: A domain address
          example: sailpoint.com
          type: string
      type: object
    DomainStatusDto:
      description: Domain status DTO containing everything required to verify via
        DKIM
      example:
        domain: sailpoint.com
        dkimEnabled: true
        dkimTokens:
        - token1
        - token2
        - token3
        id: 123b45b0-aaaa-bbbb-a7db-123456a56abc
        dkimVerificationStatus: PENDING
      properties:
        id:
          description: New UUID associated with domain to be verified
          example: 123b45b0-aaaa-bbbb-a7db-123456a56abc
          type: string
        domain:
          description: A domain address
          example: sailpoint.com
          type: string
        dkimEnabled:
          default: false
          description: DKIM is enabled for this domain
          example: true
          type: object
        dkimTokens:
          description: DKIM tokens required for authentication
          example:
          - token1
          - token2
          - token3
          items:
            type: string
          type: array
        dkimVerificationStatus:
          description: Status of DKIM authentication
          example: PENDING
          type: string
      type: object
    SodPolicy:
      example:
        conflictingAccessCriteria: null
        ownerRef:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        created: 2020-01-01T00:00:00Z
        scheduled: true
        creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        description: This policy ensures compliance of xyz
        violationOwnerAssignmentConfig:
          assignmentRule: MANAGER
          ownerRef: null
        correctionAdvice: "Based on the role of the employee, managers should remove\
          \ access that is not required for their job function."
        type: GENERAL
        tags:
        - TAG1
        - TAG2
        name: policy-xyz
        modified: 2020-01-01T00:00:00Z
        policyQuery: '@access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdg) AND @access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdf)'
        compensatingControls: Have a manager review the transaction decisions for
          their "out of compliance" employee
        id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        state: ENFORCED
        externalPolicyReference: XYZ policy
      properties:
        id:
          description: Policy ID.
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          readOnly: true
          type: string
        name:
          description: Policy business name.
          example: policy-xyz
          type: string
        created:
          description: The time when this SOD policy is created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: The time when this SOD policy is modified.
          example: 2020-01-01T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        description:
          description: Optional description of the SOD policy.
          example: This policy ensures compliance of xyz
          nullable: true
          type: string
        ownerRef:
          $ref: '#/components/schemas/OwnerDto'
        externalPolicyReference:
          description: Optional external policy reference.
          example: XYZ policy
          nullable: true
          type: string
        policyQuery:
          description: Search query of the SOD policy.
          example: '@access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdg) AND @access(id:0f11f2a4-7c94-4bf3-a2bd-742580fe3bdf)'
          type: string
        compensatingControls:
          description: Optional compensating controls (Mitigating Controls).
          example: Have a manager review the transaction decisions for their "out
            of compliance" employee
          nullable: true
          type: string
        correctionAdvice:
          description: Optional correction advice.
          example: "Based on the role of the employee, managers should remove access\
            \ that is not required for their job function."
          nullable: true
          type: string
        state:
          description: Whether the policy is enforced or not.
          enum:
          - ENFORCED
          - NOT_ENFORCED
          example: ENFORCED
          type: string
        tags:
          description: Tags for the policy object.
          example:
          - TAG1
          - TAG2
          items:
            type: string
          type: array
        creatorId:
          description: Policy's creator ID.
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          readOnly: true
          type: string
        modifierId:
          description: Policy's modifier ID.
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          nullable: true
          readOnly: true
          type: string
        violationOwnerAssignmentConfig:
          $ref: '#/components/schemas/ViolationOwnerAssignmentConfig'
        scheduled:
          default: false
          description: Defines whether a policy has been scheduled or not.
          example: true
          type: boolean
        type:
          default: GENERAL
          description: Whether a policy is query based or conflicting access based.
          enum:
          - GENERAL
          - CONFLICTING_ACCESS_BASED
          example: GENERAL
          type: string
        conflictingAccessCriteria:
          $ref: '#/components/schemas/SodPolicy_conflictingAccessCriteria'
      type: object
    SodPolicySchedule:
      example:
        schedule:
          hours: null
          timeZoneId: America/Chicago
          days: null
          expiration: 2018-06-25T20:22:28.104Z
          type: WEEKLY
        created: 2020-01-01T00:00:00Z
        recipients:
        - name: Michael Michaels
          id: 2c7180a46faadee4016fb4e018c20642
          type: IDENTITY
        - name: Michael Michaels
          id: 2c7180a46faadee4016fb4e018c20642
          type: IDENTITY
        name: SCH-1584312283015
        creatorId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        modifierId: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        modified: 2020-01-01T00:00:00Z
        description: Schedule for policy xyz
        emailEmptyResults: false
      properties:
        name:
          description: SOD Policy schedule name
          example: SCH-1584312283015
          type: string
        created:
          description: The time when this SOD policy schedule is created.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: The time when this SOD policy schedule is modified.
          example: 2020-01-01T00:00:00Z
          format: date-time
          type: string
        description:
          description: SOD Policy schedule description
          example: Schedule for policy xyz
          type: string
        schedule:
          $ref: '#/components/schemas/Schedule_1'
        recipients:
          items:
            $ref: '#/components/schemas/SodRecipient'
          type: array
        emailEmptyResults:
          description: Indicates if empty results need to be emailed
          example: false
          type: boolean
        creatorId:
          description: Policy's creator ID
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: string
        modifierId:
          description: Policy's modifier ID
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: string
      type: object
    ReportResultReference:
      allOf:
      - $ref: '#/components/schemas/SodReportResultDto'
      - properties:
          status:
            description: Status of a SOD policy violation report.
            enum:
            - SUCCESS
            - WARNING
            - ERROR
            - TERMINATED
            - TEMP_ERROR
            - PENDING
            example: PENDING
            type: string
        type: object
    IdentityWithNewAccess:
      description: An identity with a set of access to be added
      example:
        identityId: 2c91808568c529c60168cca6f90c1313
        accessRefs:
        - type: ENTITLEMENT
          id: 2c918087682f9a86016839c050861ab1
          name: "CN=Information Access,OU=test,OU=test-service,DC=TestAD,DC=local"
        - type: ENTITLEMENT
          id: 2c918087682f9a86016839c0509c1ab2
          name: "CN=Information Technology,OU=test,OU=test-service,DC=TestAD,DC=local"
      properties:
        identityId:
          description: Identity id to be checked.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        accessRefs:
          description: The list of entitlements to consider for possible violations
            in a preventive check.
          example:
          - type: ENTITLEMENT
            id: 2c918087682f9a86016839c050861ab1
            name: "CN=Information Access,OU=test,OU=test-service,DC=TestAD,DC=local"
          - type: ENTITLEMENT
            id: 2c918087682f9a86016839c0509c1ab2
            name: "CN=Information Technology,OU=test,OU=test-service,DC=TestAD,DC=local"
          items:
            $ref: '#/components/schemas/IdentityWithNewAccess_accessRefs_inner'
          type: array
      required:
      - accessRefs
      - identityId
      type: object
    ViolationPrediction:
      description: An object containing a listing of the SOD violation reasons detected
        by this check.
      example:
        violationContexts:
        - conflictingAccessCriteria:
            leftCriteria:
              criteriaList:
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a66
                existing: true
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a67
                existing: false
            rightCriteria:
              criteriaList:
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a66
                existing: true
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a67
                existing: false
          policy:
            type: ENTITLEMENT
        - conflictingAccessCriteria:
            leftCriteria:
              criteriaList:
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a66
                existing: true
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a67
                existing: false
            rightCriteria:
              criteriaList:
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a66
                existing: true
              - type: ENTITLEMENT
                id: 2c9180866166b5b0016167c32ef31a67
                existing: false
          policy:
            type: ENTITLEMENT
      properties:
        violationContexts:
          description: List of Violation Contexts
          items:
            $ref: '#/components/schemas/ViolationContext'
          type: array
      required:
      - requestId
      type: object
    MultiPolicyRequest:
      example:
        filteredPolicyList:
        - filteredPolicyList
        - filteredPolicyList
      properties:
        filteredPolicyList:
          description: Multi-policy report will be run for this list of ids
          items:
            type: string
          type: array
      type: object
    WorkItemForward:
      example:
        targetOwnerId: 2c9180835d2e5168015d32f890ca1581
        comment: I'm going on vacation.
        sendNotifications: true
      properties:
        targetOwnerId:
          description: The ID of the identity to forward this work item to.
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        comment:
          description: Comments to send to the target owner
          example: I'm going on vacation.
          type: string
        sendNotifications:
          default: true
          description: "If true, send a notification to the target owner."
          example: true
          type: boolean
      required:
      - comment
      - targetOwnerId
      type: object
    Workflow:
      allOf:
      - properties:
          id:
            description: Workflow ID. This is a UUID generated upon creation.
            example: d201c5e9-d37b-4aff-af14-66414f39d569
            type: string
          executionCount:
            description: The number of times this workflow has been executed.
            example: 2
            format: int32
            type: integer
          failureCount:
            description: The number of times this workflow has failed during execution.
            example: 0
            format: int32
            type: integer
          created:
            description: The date and time the workflow was created.
            example: 2022-01-10T16:06:16.636381447Z
            format: date-time
            type: string
          creator:
            $ref: '#/components/schemas/Workflow_allOf_creator'
        type: object
      - $ref: '#/components/schemas/WorkflowBody'
    WorkflowBody:
      example:
        owner:
          name: William Wilson
          id: 2c91808568c529c60168cca6f90c1313
          type: IDENTITY
        name: Send Email
        description: Send an email to the identity who's attributes changed.
        definition:
          start: Send Email Test
          steps:
            Send Email:
              actionId: sp:send-email
              attributes:
                body: This is a test
                from: sailpoint@sailpoint.com
                recipientId.$: $.identity.id
                subject: test
              nextStep: success
              selectResult: null
              type: ACTION
            success:
              type: success
        trigger:
          attributes: "{}"
          type: EVENT
        enabled: false
      properties:
        name:
          description: The name of the workflow
          example: Send Email
          type: string
        owner:
          $ref: '#/components/schemas/WorkflowBody_owner'
        description:
          description: Description of what the workflow accomplishes
          example: Send an email to the identity who's attributes changed.
          type: string
        definition:
          $ref: '#/components/schemas/WorkflowDefinition'
        enabled:
          default: false
          description: Enable or disable the workflow.  Workflows cannot be created
            in an enabled state.
          example: false
          type: boolean
        trigger:
          $ref: '#/components/schemas/WorkflowTrigger'
      type: object
    WorkflowExecution:
      example:
        requestId: 41e12a74fa7b4a6a98ae47887b64acdb
        closeTime: 2022-02-07T20:13:31.682410165Z
        startTime: 2022-02-07T20:13:29.356648026Z
        id: b393f4e2-4785-4d7f-ab27-3a6b8ded4c81
        workflowId: d201c5d9-d37b-4a2f-af14-66414f39d568
        status: Completed
      properties:
        id:
          description: The workflow execution ID
          example: b393f4e2-4785-4d7f-ab27-3a6b8ded4c81
          type: string
        workflowId:
          description: The workflow ID
          example: d201c5d9-d37b-4a2f-af14-66414f39d568
          type: string
        requestId:
          description: This backend ID tracks a workflow request in the system. You
            can provide this ID in a customer support ticket for debugging purposes.
          example: 41e12a74fa7b4a6a98ae47887b64acdb
          type: string
        startTime:
          description: The date/time the workflow started
          example: 2022-02-07T20:13:29.356648026Z
          format: date-time
          type: string
        closeTime:
          description: The date/time the workflow ended
          example: 2022-02-07T20:13:31.682410165Z
          format: date-time
          type: string
        status:
          description: The workflow execution status
          enum:
          - Completed
          - Failed
          - Canceled
          - Running
          example: Completed
          type: string
      type: object
    WorkflowExecutionEvent:
      example:
        attributes: {}
        type: WorkflowTaskScheduled
        timestamp: 2022-02-07T20:13:31.640618296Z
      properties:
        type:
          description: The type of event
          enum:
          - WorkflowExecutionScheduled
          - WorkflowExecutionStarted
          - WorkflowExecutionCompleted
          - WorkflowExecutionFailed
          - WorkflowTaskScheduled
          - WorkflowTaskStarted
          - WorkflowTaskCompleted
          - WorkflowTaskFailed
          - ActivityTaskScheduled
          - ActivityTaskStarted
          - ActivityTaskCompleted
          - ActivityTaskFailed
          example: WorkflowTaskScheduled
          type: object
        timestamp:
          description: The date-time when the event occurred
          example: 2022-02-07T20:13:31.640618296Z
          format: date-time
          type: string
        attributes:
          description: Additional attributes associated with the event
          example: {}
          type: object
      type: object
    WorkflowLibraryAction:
      example:
        outputSchema:
          definitions: {}
          properties:
            autoRevokeAllowed:
              $id: '#sp:create-campaign/autoRevokeAllowed'
              default: true
              examples:
              - false
              title: autoRevokeAllowed
              type: boolean
            deadline:
              $id: '#sp:create-campaign/deadline'
              default: ""
              examples:
              - 2020-12-25T06:00:00.468Z
              format: date-time
              pattern: ^.*$
              title: deadline
              type: string
            description:
              $id: '#sp:create-campaign/description'
              default: ""
              examples:
              - A review of everyone's access by their manager.
              pattern: ^.*$
              title: description
              type: string
            emailNotificationEnabled:
              $id: '#sp:create-campaign/emailNotificationEnabled'
              default: true
              examples:
              - false
              title: emailNotificationEnabled
              type: boolean
            filter:
              $id: '#sp:create-campaign/filter'
              properties:
                id:
                  $id: '#sp:create-campaign/filter/id'
                  default: ""
                  examples:
                  - e0adaae69852e8fe8b8a3d48e5ce757c
                  pattern: ^.*$
                  title: id
                  type: string
                type:
                  $id: '#sp:create-campaign/filter/type'
                  default: ""
                  examples:
                  - CAMPAIGN_FILTER
                  pattern: ^.*$
                  title: type
                  type: string
              title: filter
              type: object
            id:
              $id: '#sp:create-campaign/id'
              default: ""
              examples:
              - 2c918086719eec070171a7e3355a360a
              pattern: ^.*$
              title: id
              type: string
            name:
              $id: '#sp:create-campaign/name'
              default: ""
              examples:
              - Manager Review
              pattern: ^.*$
              title: name
              type: string
            recommendationsEnabled:
              $id: '#sp:create-campaign/recommendationsEnabled'
              default: true
              examples:
              - false
              title: recommendationEnabled
              type: boolean
            type:
              $id: '#sp:create-campaign/type'
              default: ""
              examples:
              - MANAGER
              pattern: ^.*$
              title: type
              type: string
          title: sp:create-campaign
          type: object
        name: Create Certification Campaign
        description: Generates a certification campaign.
        id: sp:create-campaign
        formFields:
        - helpText: The name to give to this certification campaign.
          name: name
          label: Campaign Name
          type: text
          required: false
        - helpText: The name to give to this certification campaign.
          name: name
          label: Campaign Name
          type: text
          required: false
        type: ACTION
        isDynamicSchema: false
      properties:
        id:
          description: Action ID. This is a static namespaced ID for the action
          example: sp:create-campaign
          type: string
        name:
          description: Action Name
          example: Create Certification Campaign
          type: string
        type:
          description: Action type
          example: ACTION
          type: string
        description:
          description: Action Description
          example: Generates a certification campaign.
          type: string
        formFields:
          description: One or more inputs that the action accepts
          items:
            $ref: '#/components/schemas/WorkflowLibraryFormFields'
          type: array
        isDynamicSchema:
          description: "Determines whether the dynamic output schema is returned in\
            \ place of the action's output schema. The dynamic schema lists non-static\
            \ properties, like properties of a workflow form where each form has different\
            \ fields. These will be provided dynamically based on available form fields."
          example: false
          type: boolean
        outputSchema:
          description: "Defines the output schema, if any, that this action produces."
          example:
            definitions: {}
            properties:
              autoRevokeAllowed:
                $id: '#sp:create-campaign/autoRevokeAllowed'
                default: true
                examples:
                - false
                title: autoRevokeAllowed
                type: boolean
              deadline:
                $id: '#sp:create-campaign/deadline'
                default: ""
                examples:
                - 2020-12-25T06:00:00.468Z
                format: date-time
                pattern: ^.*$
                title: deadline
                type: string
              description:
                $id: '#sp:create-campaign/description'
                default: ""
                examples:
                - A review of everyone's access by their manager.
                pattern: ^.*$
                title: description
                type: string
              emailNotificationEnabled:
                $id: '#sp:create-campaign/emailNotificationEnabled'
                default: true
                examples:
                - false
                title: emailNotificationEnabled
                type: boolean
              filter:
                $id: '#sp:create-campaign/filter'
                properties:
                  id:
                    $id: '#sp:create-campaign/filter/id'
                    default: ""
                    examples:
                    - e0adaae69852e8fe8b8a3d48e5ce757c
                    pattern: ^.*$
                    title: id
                    type: string
                  type:
                    $id: '#sp:create-campaign/filter/type'
                    default: ""
                    examples:
                    - CAMPAIGN_FILTER
                    pattern: ^.*$
                    title: type
                    type: string
                title: filter
                type: object
              id:
                $id: '#sp:create-campaign/id'
                default: ""
                examples:
                - 2c918086719eec070171a7e3355a360a
                pattern: ^.*$
                title: id
                type: string
              name:
                $id: '#sp:create-campaign/name'
                default: ""
                examples:
                - Manager Review
                pattern: ^.*$
                title: name
                type: string
              recommendationsEnabled:
                $id: '#sp:create-campaign/recommendationsEnabled'
                default: true
                examples:
                - false
                title: recommendationEnabled
                type: boolean
              type:
                $id: '#sp:create-campaign/type'
                default: ""
                examples:
                - MANAGER
                pattern: ^.*$
                title: type
                type: string
            title: sp:create-campaign
            type: object
          type: object
      title: Workflow Action
      type: object
    WorkflowLibraryTrigger:
      example:
        name: Identity Attributes Changed
        description: One or more identity attributes changed.
        id: idn:identity-attributes-changed
        formFields: []
        type: EVENT
        isDynamicSchema: false
        inputExample:
          changes:
          - attribute: department
            newValue: marketing
            oldValue: sales
          - attribute: manager
            newValue:
              id: ee769173319b41d19ccec6c235423236c
              name: mean.guy
              type: IDENTITY
            oldValue:
              id: ee769173319b41d19ccec6c235423237b
              name: nice.guy
              type: IDENTITY
          - attribute: email
            newValue: john.doe@gmail.com
            oldValue: john.doe@hotmail.com
          identity:
            id: ee769173319b41d19ccec6cea52f237b
            name: john.doe
            type: IDENTITY
      properties:
        id:
          description: Trigger ID. This is a static namespaced ID for the trigger.
          example: idn:identity-attributes-changed
          type: string
        type:
          description: Trigger type
          enum:
          - EVENT
          - SCHEDULED
          - EXTERNAL
          example: EVENT
          type: object
        name:
          description: Trigger Name
          example: Identity Attributes Changed
          type: string
        description:
          description: Trigger Description
          example: One or more identity attributes changed.
          type: string
        isDynamicSchema:
          description: "Determines whether the dynamic output schema is returned in\
            \ place of the action's output schema. The dynamic schema lists non-static\
            \ properties, like properties of a workflow form where each form has different\
            \ fields. These will be provided dynamically based on available form fields."
          example: false
          type: boolean
        inputExample:
          description: Example trigger payload if applicable
          example:
            changes:
            - attribute: department
              newValue: marketing
              oldValue: sales
            - attribute: manager
              newValue:
                id: ee769173319b41d19ccec6c235423236c
                name: mean.guy
                type: IDENTITY
              oldValue:
                id: ee769173319b41d19ccec6c235423237b
                name: nice.guy
                type: IDENTITY
            - attribute: email
              newValue: john.doe@gmail.com
              oldValue: john.doe@hotmail.com
            identity:
              id: ee769173319b41d19ccec6cea52f237b
              name: john.doe
              type: IDENTITY
          externalDocs:
            description: List of triggers and their input schemas
            url: https://developer.sailpoint.com/idn/docs/event-triggers/available
          nullable: true
          type: object
        formFields:
          description: One or more inputs that the trigger accepts
          example: []
          items:
            $ref: '#/components/schemas/WorkflowLibraryFormFields'
          nullable: true
          type: array
      title: Workflow Trigger
      type: object
    WorkflowLibraryOperator:
      example:
        name: Compare Boolean Values
        description: Compare two boolean values and decide what happens based on the
          result.
        id: sp:compare-boolean
        formFields:
        - description: Enter the JSONPath to a value from the input to compare to
            Variable B.
          helpText: ""
          label: Variable A
          name: variableA.$
          required: true
          type: text
        - helpText: Select an operation.
          label: Operation
          name: operator
          options:
          - label: Equals
            value: BooleanEquals
          required: true
          type: select
        - description: Enter the JSONPath to a value from the input to compare to
            Variable A.
          helpText: ""
          label: Variable B
          name: variableB.$
          required: false
          type: text
        - description: Enter True or False.
          helpText: ""
          label: Variable B
          name: variableB
          required: false
          type: text
        type: OPERATOR
      properties:
        id:
          description: Operator ID.
          example: sp:compare-boolean
          type: string
        name:
          description: Operator friendly name
          example: Compare Boolean Values
          type: string
        type:
          description: Operator type
          example: OPERATOR
          type: string
        description:
          description: Description of the operator
          example: Compare two boolean values and decide what happens based on the
            result.
          type: string
        formFields:
          description: One or more inputs that the operator accepts
          example:
          - description: Enter the JSONPath to a value from the input to compare to
              Variable B.
            helpText: ""
            label: Variable A
            name: variableA.$
            required: true
            type: text
          - helpText: Select an operation.
            label: Operation
            name: operator
            options:
            - label: Equals
              value: BooleanEquals
            required: true
            type: select
          - description: Enter the JSONPath to a value from the input to compare to
              Variable A.
            helpText: ""
            label: Variable B
            name: variableB.$
            required: false
            type: text
          - description: Enter True or False.
            helpText: ""
            label: Variable B
            name: variableB
            required: false
            type: text
          items:
            $ref: '#/components/schemas/WorkflowLibraryFormFields'
          type: array
      title: Workflow Operator
      type: object
    WorkflowOAuthClient:
      example:
        id: 1a58c03a6bf64dc2876f6988c6e2c7b7
        secret: 00cc24a7fe810fe06a7cb38bc168ae104d703c7abb296f9944dc68e69ddb578b
        url: https://tenant.api.identitynow.com/beta/workflows/execute/external/c17bea3a-574d-453c-9e04-4365fbf5af0b
      properties:
        id:
          description: OAuth client ID for the trigger. This is a UUID generated upon
            creation.
          example: 1a58c03a6bf64dc2876f6988c6e2c7b7
          type: string
        secret:
          description: OAuthClient secret.
          example: 00cc24a7fe810fe06a7cb38bc168ae104d703c7abb296f9944dc68e69ddb578b
          type: string
        url:
          description: URL for the external trigger to invoke
          example: https://tenant.api.identitynow.com/beta/workflows/execute/external/c17bea3a-574d-453c-9e04-4365fbf5af0b
          type: string
      type: object
    WorkgroupDto:
      example:
        owner:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        connectionCount: 1641498673000
        memberCount: 1641498673000
        name: DB Access Governance Group
        description: Description of the Governance Group
        id: 2c91808568c529c60168cca6f90c1313
      properties:
        owner:
          $ref: '#/components/schemas/OwnerDto'
        id:
          description: Governance group ID.
          example: 2c91808568c529c60168cca6f90c1313
          readOnly: true
          type: string
        name:
          description: Governance group name.
          example: DB Access Governance Group
          type: string
        description:
          description: Governance group description.
          example: Description of the Governance Group
          type: string
        memberCount:
          description: Number of members in the governance group.
          example: 1641498673000
          format: int64
          readOnly: true
          type: integer
        connectionCount:
          description: Number of connections in the governance group.
          example: 1641498673000
          format: int64
          readOnly: true
          type: integer
      type: object
    WorkgroupBulkDeleteRequest:
      example:
        ids:
        - 567a697e-885b-495a-afc5-d55e1c23a302
        - c7b0f7b2-1e78-4063-b294-a555333dacd2
      properties:
        ids:
          description: List of IDs of Governance Groups to be deleted.
          example:
          - 567a697e-885b-495a-afc5-d55e1c23a302
          - c7b0f7b2-1e78-4063-b294-a555333dacd2
          items:
            type: string
          type: array
      type: object
    WorkgroupBulkDeleteResponse:
      description: Bulk remove Governance Groups Response.
      example:
      - id: 464ae7bf791e49fdb74606a2e4a89635
        status: "204"
        description: Governance Group deleted successfully.
      items:
        $ref: '#/components/schemas/WorkgroupDeleteItem'
      type: array
    WorkgroupConnectionDto:
      example:
        connectionType: AccessRequestReviewer
        object:
          name: Employee-database-read-write
          description: Collection of entitlements to read/write the employee database.
          id: 2c91808568c529c60168cca6f90c1313
          type: ACCESS_PROFILE
      properties:
        object:
          $ref: '#/components/schemas/ConnectedObject'
        connectionType:
          description: Connection Type.
          enum:
          - AccessRequestReviewer
          - Owner
          - ManagementWorkgroup
          example: AccessRequestReviewer
          type: string
      type: object
    BulkWorkgroupMembersRequest:
      description: List of identities to be added or removed to a Governance Group
        members list.
      example:
      - type: IDENTITY
        id: 464ae7bf791e49fdb74606a2e4a89635
        name: Addie Smith
      items:
        $ref: '#/components/schemas/BulkWorkgroupMembersRequest_inner'
      type: array
    WorkgroupMemberBulkAddResponse:
      description: Bulk add Governance Group members Response.
      example:
      - id: 464ae7bf791e49fdb74606a2e4a89635
        status: "201"
        description: Identity added to Governance Group members list.
      items:
        $ref: '#/components/schemas/WorkgroupMemberAddItem'
      type: array
    WorkgroupMemberBulkDeleteResponse:
      description: Bulk add Governance Group members Response.
      example:
      - id: 464ae7bf791e49fdb74606a2e4a89635
        status: "204"
        description: Identity deleted from Governance Group members list.
      items:
        $ref: '#/components/schemas/WorkgroupMemberDeleteItem'
      type: array
    ListFormDefinitionsByTenantResponse:
      example:
        count: 1
        results:
        - owner:
            id: 00000000-0000-0000-0000-000000000000
            type: IDENTITY
          formInput:
          - description: "A single dynamic scalar value (i.e. number, string, date,\
              \ etc.) that can be passed into the form for use in conditional logic"
            id: 00000000-0000-0000-0000-000000000000
            label: input1
            type: STRING
          - description: "A single dynamic scalar value (i.e. number, string, date,\
              \ etc.) that can be passed into the form for use in conditional logic"
            id: 00000000-0000-0000-0000-000000000000
            label: input1
            type: STRING
          formConditions:
          - ruleOperator: AND
            effects:
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            rules:
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
          - ruleOperator: AND
            effects:
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            rules:
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
          created: 2023-07-12T20:14:57.74486Z
          name: My form
          description: My form description
          modified: 2023-07-12T20:14:57.74486Z
          id: 00000000-0000-0000-0000-000000000000
          usedBy:
          - id: 00000000-0000-0000-0000-000000000000
            type: WORKFLOW
          - id: 00000000-0000-0000-0000-000000000000
            type: WORKFLOW
          formElements:
          - id: 00000000-0000-0000-0000-000000000000
            validations:
            - validationType: REQUIRED
            elementType: TEXT
            config:
              label: Department
            key: department
          - id: 00000000-0000-0000-0000-000000000000
            validations:
            - validationType: REQUIRED
            elementType: TEXT
            config:
              label: Department
            key: department
        - owner:
            id: 00000000-0000-0000-0000-000000000000
            type: IDENTITY
          formInput:
          - description: "A single dynamic scalar value (i.e. number, string, date,\
              \ etc.) that can be passed into the form for use in conditional logic"
            id: 00000000-0000-0000-0000-000000000000
            label: input1
            type: STRING
          - description: "A single dynamic scalar value (i.e. number, string, date,\
              \ etc.) that can be passed into the form for use in conditional logic"
            id: 00000000-0000-0000-0000-000000000000
            label: input1
            type: STRING
          formConditions:
          - ruleOperator: AND
            effects:
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            rules:
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
          - ruleOperator: AND
            effects:
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            rules:
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
          created: 2023-07-12T20:14:57.74486Z
          name: My form
          description: My form description
          modified: 2023-07-12T20:14:57.74486Z
          id: 00000000-0000-0000-0000-000000000000
          usedBy:
          - id: 00000000-0000-0000-0000-000000000000
            type: WORKFLOW
          - id: 00000000-0000-0000-0000-000000000000
            type: WORKFLOW
          formElements:
          - id: 00000000-0000-0000-0000-000000000000
            validations:
            - validationType: REQUIRED
            elementType: TEXT
            config:
              label: Department
            key: department
          - id: 00000000-0000-0000-0000-000000000000
            validations:
            - validationType: REQUIRED
            elementType: TEXT
            config:
              label: Department
            key: department
      properties:
        count:
          description: Count number of results.
          example: 1
          format: int64
          type: integer
          x-go-name: Count
        results:
          description: List of FormDefinitionResponse items.
          items:
            $ref: '#/components/schemas/FormDefinitionResponse'
          type: array
          x-go-name: Results
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    ErrorMessage:
      example:
        localeOrigin: DEFAULT
        text: This is an error
        locale: en-US
      properties:
        locale:
          description: Locale is the current Locale
          example: en-US
          type: string
          x-go-name: Locale
        localeOrigin:
          description: LocaleOrigin holds possible values of how the locale was selected
          example: DEFAULT
          type: string
          x-go-name: LocaleOrigin
        text:
          description: Text is the actual text of the error message
          example: This is an error
          type: string
          x-go-name: Text
      title: ErrorMessage is the standard API error response message type.
      type: object
      x-go-package: github.com/sailpoint/atlas-go/atlas/web
    Error:
      properties:
        detailCode:
          description: DetailCode is the text of the status code returned
          example: Internal Server Error
          type: string
          x-go-name: DetailCode
        messages:
          items:
            $ref: '#/components/schemas/ErrorMessage'
          type: array
          x-go-name: Messages
        trackingId:
          description: TrackingID is the request tracking unique identifier
          example: 9cd03ef80e6a425eb6b11bdbb057cdb4
          type: string
          x-go-name: TrackingID
      title: Error is the standard API error response type.
      type: object
      x-go-package: github.com/sailpoint/atlas-go/atlas/web
    CreateFormDefinitionRequest:
      example:
        owner:
          id: 00000000-0000-0000-0000-000000000000
          type: IDENTITY
        formConditions:
        - ruleOperator: AND
          effects:
          - config:
              defaultValueLabel: Access to Remove
              element: "8110662963316867"
            effectType: HIDE
          - config:
              defaultValueLabel: Access to Remove
              element: "8110662963316867"
            effectType: HIDE
          rules:
          - sourceType: ELEMENT
            valueType: STRING
            source: department
            value: Engineering
            operator: EQ
          - sourceType: ELEMENT
            valueType: STRING
            source: department
            value: Engineering
            operator: EQ
        - ruleOperator: AND
          effects:
          - config:
              defaultValueLabel: Access to Remove
              element: "8110662963316867"
            effectType: HIDE
          - config:
              defaultValueLabel: Access to Remove
              element: "8110662963316867"
            effectType: HIDE
          rules:
          - sourceType: ELEMENT
            valueType: STRING
            source: department
            value: Engineering
            operator: EQ
          - sourceType: ELEMENT
            valueType: STRING
            source: department
            value: Engineering
            operator: EQ
        formInput:
        - description: "A single dynamic scalar value (i.e. number, string, date,\
            \ etc.) that can be passed into the form for use in conditional logic"
          id: 00000000-0000-0000-0000-000000000000
          label: input1
          type: STRING
        - description: "A single dynamic scalar value (i.e. number, string, date,\
            \ etc.) that can be passed into the form for use in conditional logic"
          id: 00000000-0000-0000-0000-000000000000
          label: input1
          type: STRING
        name: My form
        description: My form description
        usedBy:
        - id: 00000000-0000-0000-0000-000000000000
          type: WORKFLOW
        - id: 00000000-0000-0000-0000-000000000000
          type: WORKFLOW
        formElements:
        - id: 00000000-0000-0000-0000-000000000000
          validations:
          - validationType: REQUIRED
          elementType: TEXT
          config:
            label: Department
          key: department
        - id: 00000000-0000-0000-0000-000000000000
          validations:
          - validationType: REQUIRED
          elementType: TEXT
          config:
            label: Department
          key: department
      properties:
        description:
          description: Description is the form definition description
          example: My form description
          maxLength: 2000
          minLength: 0
          type: string
          x-go-name: Description
        formConditions:
          description: FormConditions is the conditional logic that modify the form
            dynamically modify the form as the recipient is interacting out the form
          items:
            $ref: '#/components/schemas/FormCondition'
          type: array
          x-go-name: FormConditions
        formElements:
          description: FormElements is a list of nested form elements
          items:
            $ref: '#/components/schemas/FormElement'
          type: array
          x-go-name: FormElements
        formInput:
          description: FormInput is a list of form inputs that are required when creating
            a form-instance object
          items:
            $ref: '#/components/schemas/FormDefinitionInput'
          type: array
          x-go-name: FormInput
        name:
          description: Name is the form definition name
          example: My form
          maxLength: 255
          type: string
          x-go-name: Name
        owner:
          $ref: '#/components/schemas/FormOwner'
        usedBy:
          description: UsedBy is a list of objects where when any system uses a particular
            form it reaches out to the form service to record it is currently being
            used
          items:
            $ref: '#/components/schemas/FormUsedBy'
          type: array
          x-go-name: UsedBy
      required:
      - name
      - owner
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormDefinitionResponse:
      example:
        owner:
          id: 00000000-0000-0000-0000-000000000000
          type: IDENTITY
        formInput:
        - description: "A single dynamic scalar value (i.e. number, string, date,\
            \ etc.) that can be passed into the form for use in conditional logic"
          id: 00000000-0000-0000-0000-000000000000
          label: input1
          type: STRING
        - description: "A single dynamic scalar value (i.e. number, string, date,\
            \ etc.) that can be passed into the form for use in conditional logic"
          id: 00000000-0000-0000-0000-000000000000
          label: input1
          type: STRING
        formConditions:
        - ruleOperator: AND
          effects:
          - config:
              defaultValueLabel: Access to Remove
              element: "8110662963316867"
            effectType: HIDE
          - config:
              defaultValueLabel: Access to Remove
              element: "8110662963316867"
            effectType: HIDE
          rules:
          - sourceType: ELEMENT
            valueType: STRING
            source: department
            value: Engineering
            operator: EQ
          - sourceType: ELEMENT
            valueType: STRING
            source: department
            value: Engineering
            operator: EQ
        - ruleOperator: AND
          effects:
          - config:
              defaultValueLabel: Access to Remove
              element: "8110662963316867"
            effectType: HIDE
          - config:
              defaultValueLabel: Access to Remove
              element: "8110662963316867"
            effectType: HIDE
          rules:
          - sourceType: ELEMENT
            valueType: STRING
            source: department
            value: Engineering
            operator: EQ
          - sourceType: ELEMENT
            valueType: STRING
            source: department
            value: Engineering
            operator: EQ
        created: 2023-07-12T20:14:57.74486Z
        name: My form
        description: My form description
        modified: 2023-07-12T20:14:57.74486Z
        id: 00000000-0000-0000-0000-000000000000
        usedBy:
        - id: 00000000-0000-0000-0000-000000000000
          type: WORKFLOW
        - id: 00000000-0000-0000-0000-000000000000
          type: WORKFLOW
        formElements:
        - id: 00000000-0000-0000-0000-000000000000
          validations:
          - validationType: REQUIRED
          elementType: TEXT
          config:
            label: Department
          key: department
        - id: 00000000-0000-0000-0000-000000000000
          validations:
          - validationType: REQUIRED
          elementType: TEXT
          config:
            label: Department
          key: department
      properties:
        id:
          description: Unique guid identifying the form definition.
          example: 00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: FormDefinitionID
        name:
          description: Name of the form definition.
          example: My form
          type: string
          x-go-name: Name
        description:
          description: Form definition's description.
          example: My form description
          type: string
          x-go-name: Description
        owner:
          $ref: '#/components/schemas/FormOwner'
        usedBy:
          description: "List of objects using the form definition. Whenever a system\
            \ uses a form, the API reaches out to the form service to record that\
            \ the system is currently using it."
          items:
            $ref: '#/components/schemas/FormUsedBy'
          type: array
          x-go-name: UsedBy
        formInput:
          description: List of form inputs required to create a form-instance object.
          items:
            $ref: '#/components/schemas/FormDefinitionInput'
          type: array
          x-go-name: FormInput
        formElements:
          description: List of nested form elements.
          items:
            $ref: '#/components/schemas/FormElement'
          type: array
          x-go-name: FormElements
        formConditions:
          description: Conditional logic that can dynamically modify the form as the
            recipient is interacting with it.
          items:
            $ref: '#/components/schemas/FormCondition'
          type: array
          x-go-name: FormConditions
        created:
          description: Created is the date the form definition was created
          example: 2023-07-12T20:14:57.74486Z
          format: date-time
          type: string
          x-go-name: Created
        modified:
          description: Modified is the last date the form definition was modified
          example: 2023-07-12T20:14:57.74486Z
          format: date-time
          type: string
          x-go-name: Modified
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    Nil:
      title: Nil represents the predeclared value nil.
      type: object
      x-go-package: go/types
    Patch:
      description: Patch is an ordered collection of Operations.
      example:
      - op: replace
        path: /description
        value: a new description
      items:
        $ref: '#/components/schemas/Operation'
      title: Patch is an ordered collection of Operations.
      type: array
      x-go-package: github.com/evanphx/json-patch
    FormElementPreviewRequest:
      example:
        dataSource:
          config:
            indices:
            - identities
            query: '*'
            aggregationBucketField: attributes.cloudStatus.exact
            objectType: IDENTITY
          dataSourceType: STATIC
      properties:
        dataSource:
          $ref: '#/components/schemas/FormElementDynamicDataSource'
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    PreviewDataSourceResponse:
      description: "PreviewDataSourceResponse is the response sent by /form-definitions/{formDefinitionID}/data-source\
        \ endpoint"
      example:
        results: "{\"results\":[{\"label\":\"Alfred 255e71dfc6e\",\"subLabel\":\"\
          Alfred.255e71dfc6e@testmail.identitysoon.com\",\"value\":\"2c918084821847c5018227ced2e16676\"\
          },{\"label\":\"Alize eba9d4cd27da\",\"subLabel\":\"Alize.eba9d4cd27da@testmail.identitysoon.com\"\
          ,\"value\":\"2c918084821847c5018227ced2f1667c\"},{\"label\":\"Antonina 01f69c3ea\"\
          ,\"subLabel\":\"Antonina.01f69c3ea@testmail.identitysoon.com\",\"value\"\
          :\"2c918084821847c5018227ced2f9667e\"},{\"label\":\"Ardella 21e78ce155\"\
          ,\"subLabel\":\"Ardella.21e78ce155@testmail.identitysoon.com\",\"value\"\
          :\"2c918084821847c5018227ced2e6667a\"},{\"label\":\"Arnaldo d8582b6e17\"\
          ,\"subLabel\":\"Arnaldo.d8582b6e17@testmail.identitysoon.com\",\"value\"\
          :\"2c918084821847c5018227ced3426686\"},{\"label\":\"Aurelia admin24828\"\
          ,\"subLabel\":\"Aurelia.admin24828@testmail.identitysoon.com\",\"value\"\
          :\"2c918084821847c5018227ced2e16674\"},{\"label\":\"Barbara 72ca418fdd\"\
          ,\"subLabel\":\"Barbara.72ca418fdd@testmail.identitysoon.com\",\"value\"\
          :\"2c918084821847c5018227ced2fb6680\"},{\"label\":\"Barbara ee1a2436ee\"\
          ,\"subLabel\":\"Barbara.ee1a2436ee@testmail.identitysoon.com\",\"value\"\
          :\"2c918084821847c5018227ced2e56678\"},{\"label\":\"Baylee 652d72432f3\"\
          ,\"subLabel\":\"Baylee.652d72432f3@testmail.identitysoon.com\",\"value\"\
          :\"2c91808582184782018227ced28b6aee\"},{\"label\":\"Brock e76b56ae4d49\"\
          ,\"subLabel\":\"Brock.e76b56ae4d49@testmail.identitysoon.com\",\"value\"\
          :\"2c91808582184782018227ced28b6aef\"}]}"
      properties:
        results:
          description: Results holds a list of FormElementDataSourceConfigOptions
            items
          example: "{\"results\":[{\"label\":\"Alfred 255e71dfc6e\",\"subLabel\":\"\
            Alfred.255e71dfc6e@testmail.identitysoon.com\",\"value\":\"2c918084821847c5018227ced2e16676\"\
            },{\"label\":\"Alize eba9d4cd27da\",\"subLabel\":\"Alize.eba9d4cd27da@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced2f1667c\"},{\"label\":\"Antonina\
            \ 01f69c3ea\",\"subLabel\":\"Antonina.01f69c3ea@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced2f9667e\"},{\"label\":\"Ardella\
            \ 21e78ce155\",\"subLabel\":\"Ardella.21e78ce155@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced2e6667a\"},{\"label\":\"Arnaldo\
            \ d8582b6e17\",\"subLabel\":\"Arnaldo.d8582b6e17@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced3426686\"},{\"label\":\"Aurelia\
            \ admin24828\",\"subLabel\":\"Aurelia.admin24828@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced2e16674\"},{\"label\":\"Barbara\
            \ 72ca418fdd\",\"subLabel\":\"Barbara.72ca418fdd@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced2fb6680\"},{\"label\":\"Barbara\
            \ ee1a2436ee\",\"subLabel\":\"Barbara.ee1a2436ee@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced2e56678\"},{\"label\":\"Baylee 652d72432f3\"\
            ,\"subLabel\":\"Baylee.652d72432f3@testmail.identitysoon.com\",\"value\"\
            :\"2c91808582184782018227ced28b6aee\"},{\"label\":\"Brock e76b56ae4d49\"\
            ,\"subLabel\":\"Brock.e76b56ae4d49@testmail.identitysoon.com\",\"value\"\
            :\"2c91808582184782018227ced28b6aef\"}]}"
          items:
            $ref: '#/components/schemas/FormElementDataSourceConfigOptions'
          type: array
          x-go-name: Results
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormDefinitionDynamicSchemaRequest:
      example:
        description: A description
        attributes:
          formDefinitionId: 00000000-0000-0000-0000-000000000000
        id: 00000000-0000-0000-0000-000000000000
        type: action
        versionNumber: 1
      properties:
        attributes:
          $ref: '#/components/schemas/FormDefinitionDynamicSchemaRequest_attributes'
        description:
          description: Description is the form definition dynamic schema description
            text
          example: A description
          type: string
          x-go-name: Description
        id:
          description: ID is a unique identifier
          example: 00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: ID
        type:
          description: Type is the form definition dynamic schema type
          example: action
          type: string
          x-go-name: Type
        versionNumber:
          description: VersionNumber is the form definition dynamic schema version
            number
          example: 1
          format: int64
          type: integer
          x-go-name: VersionNumber
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormDefinitionDynamicSchemaResponse:
      example:
        outputSchema:
          outputSchema:
            $schema: https://json-schema.org/draft/2020-12/schema
            additionalProperties: false
            properties:
              firstName:
                title: First Name
                type: string
              fullName:
                title: Full Name
                type: string
              lastName:
                title: Last Name
                type: string
              startDate:
                format: date-time
                title: Start Date
                type: string
            type: object
      properties:
        outputSchema:
          additionalProperties:
            type: object
          description: OutputSchema holds a JSON schema generated dynamically
          example:
            outputSchema:
              $schema: https://json-schema.org/draft/2020-12/schema
              additionalProperties: false
              properties:
                firstName:
                  title: First Name
                  type: string
                fullName:
                  title: Full Name
                  type: string
                lastName:
                  title: Last Name
                  type: string
                startDate:
                  format: date-time
                  title: Start Date
                  type: string
              type: object
          type: object
          x-go-name: OutputSchema
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormDefinitionFileUploadResponse:
      example:
        created: 2023-07-12T20:14:57.74486Z
        formDefinitionId: 00000000-0000-0000-0000-000000000000
        fileId: 01FHZXHK8PTP9FVK99Z66GXQTX.png
      properties:
        created:
          description: Created is the date the file was uploaded
          example: 2023-07-12T20:14:57.74486Z
          type: string
          x-go-name: Created
        fileId:
          description: fileId is a unique ULID that serves as an identifier for the
            form definition file
          example: 01FHZXHK8PTP9FVK99Z66GXQTX.png
          type: string
          x-go-name: FileID
        formDefinitionId:
          description: FormDefinitionID is a unique guid identifying this form definition
          example: 00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: FormDefinitionID
      type: object
      x-go-package: github.com/sailpoint/sp-forms/internal/rest/response
    ListFormInstancesByTenantResponse:
      example:
        count: 1
        results:
        - formConditions:
          - ruleOperator: AND
            effects:
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            rules:
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
          - ruleOperator: AND
            effects:
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            rules:
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
          formInput:
            input1: Sales
          created: 2023-07-12T20:14:57.74486Z
          standAloneFormUrl: https://my-org.identitynow.com/ui/d/forms/00000000-0000-0000-0000-000000000000
          standAloneForm: false
          createdBy:
            id: 00000000-0000-0000-0000-000000000000
            type: WORKFLOW_EXECUTION
          recipients:
          - id: 00000000-0000-0000-0000-000000000000
            type: IDENTITY
          - id: 00000000-0000-0000-0000-000000000000
            type: IDENTITY
          expire: 2023-08-12T20:14:57.74486Z
          formDefinitionId: 00000000-0000-0000-0000-000000000000
          formErrors:
          - messages:
            - localeOrigin: DEFAULT
              text: This is an error
              locale: en-US
            - localeOrigin: DEFAULT
              text: This is an error
              locale: en-US
            value: Engineering
            key: department
          - messages:
            - localeOrigin: DEFAULT
              text: This is an error
              locale: en-US
            - localeOrigin: DEFAULT
              text: This is an error
              locale: en-US
            value: Engineering
            key: department
          modified: 2023-07-12T20:14:57.74486Z
          formData:
            department: Engineering
          id: 00000000-0000-0000-0000-000000000000
          state: ASSIGNED
          formElements:
          - id: 00000000-0000-0000-0000-000000000000
            validations:
            - validationType: REQUIRED
            elementType: TEXT
            config:
              label: Department
            key: department
          - id: 00000000-0000-0000-0000-000000000000
            validations:
            - validationType: REQUIRED
            elementType: TEXT
            config:
              label: Department
            key: department
        - formConditions:
          - ruleOperator: AND
            effects:
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            rules:
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
          - ruleOperator: AND
            effects:
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            rules:
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
          formInput:
            input1: Sales
          created: 2023-07-12T20:14:57.74486Z
          standAloneFormUrl: https://my-org.identitynow.com/ui/d/forms/00000000-0000-0000-0000-000000000000
          standAloneForm: false
          createdBy:
            id: 00000000-0000-0000-0000-000000000000
            type: WORKFLOW_EXECUTION
          recipients:
          - id: 00000000-0000-0000-0000-000000000000
            type: IDENTITY
          - id: 00000000-0000-0000-0000-000000000000
            type: IDENTITY
          expire: 2023-08-12T20:14:57.74486Z
          formDefinitionId: 00000000-0000-0000-0000-000000000000
          formErrors:
          - messages:
            - localeOrigin: DEFAULT
              text: This is an error
              locale: en-US
            - localeOrigin: DEFAULT
              text: This is an error
              locale: en-US
            value: Engineering
            key: department
          - messages:
            - localeOrigin: DEFAULT
              text: This is an error
              locale: en-US
            - localeOrigin: DEFAULT
              text: This is an error
              locale: en-US
            value: Engineering
            key: department
          modified: 2023-07-12T20:14:57.74486Z
          formData:
            department: Engineering
          id: 00000000-0000-0000-0000-000000000000
          state: ASSIGNED
          formElements:
          - id: 00000000-0000-0000-0000-000000000000
            validations:
            - validationType: REQUIRED
            elementType: TEXT
            config:
              label: Department
            key: department
          - id: 00000000-0000-0000-0000-000000000000
            validations:
            - validationType: REQUIRED
            elementType: TEXT
            config:
              label: Department
            key: department
      properties:
        count:
          description: Count number of Results
          example: 1
          format: int64
          type: integer
          x-go-name: Count
        results:
          description: Results holds a list of FormInstanceResponse items
          items:
            $ref: '#/components/schemas/FormInstanceResponse'
          type: array
          x-go-name: Results
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    CreateFormInstanceRequest:
      example:
        formInput:
          input1: Sales
        standAloneForm: false
        createdBy:
          id: 00000000-0000-0000-0000-000000000000
          type: WORKFLOW_EXECUTION
        recipients:
        - id: 00000000-0000-0000-0000-000000000000
          type: IDENTITY
        - id: 00000000-0000-0000-0000-000000000000
          type: IDENTITY
        expire: 2023-08-12T20:14:57.74486Z
        formDefinitionId: 00000000-0000-0000-0000-000000000000
        state: ASSIGNED
        ttl: 1571827560
      properties:
        createdBy:
          $ref: '#/components/schemas/FormInstanceCreatedBy'
        expire:
          description: Expire is required
          example: 2023-08-12T20:14:57.74486Z
          type: string
          x-go-name: Expire
        formDefinitionId:
          description: FormDefinitionID is the id of the form definition that created
            this form
          example: 00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: FormDefinitionID
        formInput:
          additionalProperties:
            type: object
          description: FormInput is an object of form input labels to value
          example:
            input1: Sales
          type: object
          x-go-name: FormInput
        recipients:
          description: Recipients is required
          items:
            $ref: '#/components/schemas/FormInstanceRecipient'
          type: array
          x-go-name: Recipients
        standAloneForm:
          default: false
          description: StandAloneForm is a boolean flag to indicate if this form should
            be available for users to complete via the standalone form UI or should
            this only be available to be completed by as an embedded form
          example: false
          type: boolean
          x-go-name: StandAloneForm
        state:
          description: |-
            State is required, if not present initial state is FormInstanceStateAssigned
            ASSIGNED FormInstanceStateAssigned
            IN_PROGRESS FormInstanceStateInProgress
            SUBMITTED FormInstanceStateSubmitted
            COMPLETED FormInstanceStateCompleted
            CANCELLED FormInstanceStateCancelled
          enum:
          - ASSIGNED
          - IN_PROGRESS
          - SUBMITTED
          - COMPLETED
          - CANCELLED
          example: ASSIGNED
          type: string
          x-go-enum-desc: |-
            ASSIGNED FormInstanceStateAssigned
            IN_PROGRESS FormInstanceStateInProgress
            SUBMITTED FormInstanceStateSubmitted
            COMPLETED FormInstanceStateCompleted
            CANCELLED FormInstanceStateCancelled
          x-go-name: State
        ttl:
          description: |-
            TTL an epoch timestamp in seconds, it most be in seconds or dynamodb will ignore it
            SEE: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/time-to-live-ttl-before-you-start.html
          example: 1571827560
          format: int64
          type: integer
          x-go-name: TTL
      required:
      - createdBy
      - expire
      - formDefinitionId
      - recipients
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormInstanceResponse:
      example:
        formConditions:
        - ruleOperator: AND
          effects:
          - config:
              defaultValueLabel: Access to Remove
              element: "8110662963316867"
            effectType: HIDE
          - config:
              defaultValueLabel: Access to Remove
              element: "8110662963316867"
            effectType: HIDE
          rules:
          - sourceType: ELEMENT
            valueType: STRING
            source: department
            value: Engineering
            operator: EQ
          - sourceType: ELEMENT
            valueType: STRING
            source: department
            value: Engineering
            operator: EQ
        - ruleOperator: AND
          effects:
          - config:
              defaultValueLabel: Access to Remove
              element: "8110662963316867"
            effectType: HIDE
          - config:
              defaultValueLabel: Access to Remove
              element: "8110662963316867"
            effectType: HIDE
          rules:
          - sourceType: ELEMENT
            valueType: STRING
            source: department
            value: Engineering
            operator: EQ
          - sourceType: ELEMENT
            valueType: STRING
            source: department
            value: Engineering
            operator: EQ
        formInput:
          input1: Sales
        created: 2023-07-12T20:14:57.74486Z
        standAloneFormUrl: https://my-org.identitynow.com/ui/d/forms/00000000-0000-0000-0000-000000000000
        standAloneForm: false
        createdBy:
          id: 00000000-0000-0000-0000-000000000000
          type: WORKFLOW_EXECUTION
        recipients:
        - id: 00000000-0000-0000-0000-000000000000
          type: IDENTITY
        - id: 00000000-0000-0000-0000-000000000000
          type: IDENTITY
        expire: 2023-08-12T20:14:57.74486Z
        formDefinitionId: 00000000-0000-0000-0000-000000000000
        formErrors:
        - messages:
          - localeOrigin: DEFAULT
            text: This is an error
            locale: en-US
          - localeOrigin: DEFAULT
            text: This is an error
            locale: en-US
          value: Engineering
          key: department
        - messages:
          - localeOrigin: DEFAULT
            text: This is an error
            locale: en-US
          - localeOrigin: DEFAULT
            text: This is an error
            locale: en-US
          value: Engineering
          key: department
        modified: 2023-07-12T20:14:57.74486Z
        formData:
          department: Engineering
        id: 00000000-0000-0000-0000-000000000000
        state: ASSIGNED
        formElements:
        - id: 00000000-0000-0000-0000-000000000000
          validations:
          - validationType: REQUIRED
          elementType: TEXT
          config:
            label: Department
          key: department
        - id: 00000000-0000-0000-0000-000000000000
          validations:
          - validationType: REQUIRED
          elementType: TEXT
          config:
            label: Department
          key: department
      properties:
        created:
          description: Created is the date the form instance was assigned
          example: 2023-07-12T20:14:57.74486Z
          format: date-time
          type: string
          x-go-name: Created
        createdBy:
          $ref: '#/components/schemas/FormInstanceCreatedBy'
        expire:
          description: Expire is the maximum amount of time that a form can be in
            progress. After this time is reached then the form will be moved to a
            CANCELED state automatically. The user will no longer be able to complete
            the submission. When a form instance is expires an audit log will be generated
            for that record
          example: 2023-08-12T20:14:57.74486Z
          type: string
          x-go-name: Expire
        formConditions:
          description: FormConditions is the conditional logic that modify the form
            dynamically modify the form as the recipient is interacting out the form
          items:
            $ref: '#/components/schemas/FormCondition'
          type: array
          x-go-name: FormConditions
        formData:
          additionalProperties:
            type: object
          description: FormData is the data provided by the form on submit. The data
            is in a key -> value map
          example:
            department: Engineering
          type: object
          x-go-name: FormData
        formDefinitionId:
          description: FormDefinitionID is the id of the form definition that created
            this form
          example: 00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: FormDefinitionID
        formElements:
          description: "FormElements is the configuration of the form, this would\
            \ be a repeat of the fields from the form-config"
          items:
            $ref: '#/components/schemas/FormElement'
          type: array
          x-go-name: FormElements
        formErrors:
          description: FormErrors is an array of form validation errors from the last
            time the form instance was transitioned to the SUBMITTED state. If the
            form instance had validation errors then it would be moved to the IN PROGRESS
            state where the client can retrieve these errors
          items:
            $ref: '#/components/schemas/FormError'
          type: array
          x-go-name: FormErrors
        formInput:
          additionalProperties:
            type: object
          description: FormInput is an object of form input labels to value
          example:
            input1: Sales
          type: object
          x-go-name: FormInput
        id:
          description: FormInstanceID is a unique guid identifying this form instance
          example: 00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: FormInstanceID
        modified:
          description: Modified is the last date the form instance was modified
          example: 2023-07-12T20:14:57.74486Z
          format: date-time
          type: string
          x-go-name: Modified
        recipients:
          description: Recipients references to the recipient of a form. The recipients
            are those who are responsible for filling out a form and completing it
          items:
            $ref: '#/components/schemas/FormInstanceRecipient'
          type: array
          x-go-name: Recipients
        standAloneForm:
          default: false
          description: StandAloneForm is a boolean flag to indicate if this form should
            be available for users to complete via the standalone form UI or should
            this only be available to be completed by as an embedded form
          example: false
          type: boolean
          x-go-name: StandAloneForm
        standAloneFormUrl:
          description: StandAloneFormURL is the URL where this form may be completed
            by the designated recipients using the standalone form UI
          example: https://my-org.identitynow.com/ui/d/forms/00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: StandAloneFormURL
        state:
          description: |-
            State the state of the form instance
            ASSIGNED FormInstanceStateAssigned
            IN_PROGRESS FormInstanceStateInProgress
            SUBMITTED FormInstanceStateSubmitted
            COMPLETED FormInstanceStateCompleted
            CANCELLED FormInstanceStateCancelled
          enum:
          - ASSIGNED
          - IN_PROGRESS
          - SUBMITTED
          - COMPLETED
          - CANCELLED
          example: ASSIGNED
          type: string
          x-go-enum-desc: |-
            ASSIGNED FormInstanceStateAssigned
            IN_PROGRESS FormInstanceStateInProgress
            SUBMITTED FormInstanceStateSubmitted
            COMPLETED FormInstanceStateCompleted
            CANCELLED FormInstanceStateCancelled
          x-go-name: State
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    ListFormElementDataByElementIDResponse:
      example:
        results: "{\"results\":[{\"label\":\"Alfred 255e71dfc6e\",\"subLabel\":\"\
          Alfred.255e71dfc6e@testmail.identitysoon.com\",\"value\":\"2c918084821847c5018227ced2e16676\"\
          },{\"label\":\"Alize eba9d4cd27da\",\"subLabel\":\"Alize.eba9d4cd27da@testmail.identitysoon.com\"\
          ,\"value\":\"2c918084821847c5018227ced2f1667c\"},{\"label\":\"Antonina 01f69c3ea\"\
          ,\"subLabel\":\"Antonina.01f69c3ea@testmail.identitysoon.com\",\"value\"\
          :\"2c918084821847c5018227ced2f9667e\"},{\"label\":\"Ardella 21e78ce155\"\
          ,\"subLabel\":\"Ardella.21e78ce155@testmail.identitysoon.com\",\"value\"\
          :\"2c918084821847c5018227ced2e6667a\"},{\"label\":\"Arnaldo d8582b6e17\"\
          ,\"subLabel\":\"Arnaldo.d8582b6e17@testmail.identitysoon.com\",\"value\"\
          :\"2c918084821847c5018227ced3426686\"},{\"label\":\"Aurelia admin24828\"\
          ,\"subLabel\":\"Aurelia.admin24828@testmail.identitysoon.com\",\"value\"\
          :\"2c918084821847c5018227ced2e16674\"},{\"label\":\"Barbara 72ca418fdd\"\
          ,\"subLabel\":\"Barbara.72ca418fdd@testmail.identitysoon.com\",\"value\"\
          :\"2c918084821847c5018227ced2fb6680\"},{\"label\":\"Barbara ee1a2436ee\"\
          ,\"subLabel\":\"Barbara.ee1a2436ee@testmail.identitysoon.com\",\"value\"\
          :\"2c918084821847c5018227ced2e56678\"},{\"label\":\"Baylee 652d72432f3\"\
          ,\"subLabel\":\"Baylee.652d72432f3@testmail.identitysoon.com\",\"value\"\
          :\"2c91808582184782018227ced28b6aee\"},{\"label\":\"Brock e76b56ae4d49\"\
          ,\"subLabel\":\"Brock.e76b56ae4d49@testmail.identitysoon.com\",\"value\"\
          :\"2c91808582184782018227ced28b6aef\"}]}"
      properties:
        results:
          description: Results holds a list of FormElementDataSourceConfigOptions
            items
          example: "{\"results\":[{\"label\":\"Alfred 255e71dfc6e\",\"subLabel\":\"\
            Alfred.255e71dfc6e@testmail.identitysoon.com\",\"value\":\"2c918084821847c5018227ced2e16676\"\
            },{\"label\":\"Alize eba9d4cd27da\",\"subLabel\":\"Alize.eba9d4cd27da@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced2f1667c\"},{\"label\":\"Antonina\
            \ 01f69c3ea\",\"subLabel\":\"Antonina.01f69c3ea@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced2f9667e\"},{\"label\":\"Ardella\
            \ 21e78ce155\",\"subLabel\":\"Ardella.21e78ce155@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced2e6667a\"},{\"label\":\"Arnaldo\
            \ d8582b6e17\",\"subLabel\":\"Arnaldo.d8582b6e17@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced3426686\"},{\"label\":\"Aurelia\
            \ admin24828\",\"subLabel\":\"Aurelia.admin24828@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced2e16674\"},{\"label\":\"Barbara\
            \ 72ca418fdd\",\"subLabel\":\"Barbara.72ca418fdd@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced2fb6680\"},{\"label\":\"Barbara\
            \ ee1a2436ee\",\"subLabel\":\"Barbara.ee1a2436ee@testmail.identitysoon.com\"\
            ,\"value\":\"2c918084821847c5018227ced2e56678\"},{\"label\":\"Baylee 652d72432f3\"\
            ,\"subLabel\":\"Baylee.652d72432f3@testmail.identitysoon.com\",\"value\"\
            :\"2c91808582184782018227ced28b6aee\"},{\"label\":\"Brock e76b56ae4d49\"\
            ,\"subLabel\":\"Brock.e76b56ae4d49@testmail.identitysoon.com\",\"value\"\
            :\"2c91808582184782018227ced28b6aef\"}]}"
          items:
            $ref: '#/components/schemas/FormElementDataSourceConfigOptions'
          type: array
          x-go-name: Results
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    ListPredefinedSelectOptionsResponse:
      example:
        results:
        - IDENTITY
        - IDENTITY
      properties:
        results:
          description: Results holds a list of PreDefinedSelectOption items
          items:
            $ref: '#/components/schemas/PreDefinedSelectOption'
          type: array
          x-go-name: Results
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    ApprovalItemDetails:
      example:
        application: Active Directory
        name: emailAddress
        id: 2c9180835d2e5168015d32f890ca1581
        state: FINISHED
        operation: update
        value: a@b.com
        account: john.smith
      properties:
        id:
          description: The approval item's ID
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        account:
          description: The account referenced by the approval item
          example: john.smith
          type: string
        application:
          description: The name of the application/source
          example: Active Directory
          type: string
        name:
          description: The attribute's name
          example: emailAddress
          type: string
        operation:
          description: The attribute's operation
          example: update
          type: string
        value:
          description: The attribute's value
          example: a@b.com
          type: string
        state:
          $ref: '#/components/schemas/WorkItemState'
      type: object
    CampaignAlert:
      example:
        level: ERROR
        localizations:
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
      properties:
        level:
          description: Denotes the level of the message
          enum:
          - ERROR
          - WARN
          - INFO
          example: ERROR
          type: string
        localizations:
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
      type: object
    BaseCommonDto:
      properties:
        id:
          description: System-generated unique ID of the Object
          example: id12345
          readOnly: true
          type: string
        name:
          description: Name of the Object
          example: aName
          type: string
        created:
          description: Creation date of the Object
          example: 2023-01-03T21:16:22.432Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Last modification date of the Object
          example: 2023-01-03T21:16:22.432Z
          format: date-time
          readOnly: true
          type: string
      required:
      - name
      type: object
    IdentityExceptionReportReference:
      nullable: true
      properties:
        taskResultId:
          description: The id of the task result
          format: uuid
          type: string
        reportName:
          description: The name of the report
          example: My annual report
          type: string
      type: object
    ManagedClientStatusEnum:
      enum:
      - NORMAL
      - UNDEFINED
      - NOT_CONFIGURED
      - CONFIGURING
      - WARNING
      - ERROR
      - FAILED
      type: string
    ResourceBundleMessage:
      example:
        format: "{0,,\\\"i18n hint: percentage\\\"}% of identities with the same {1,,\\\
          \"i18n hint: name of category feature\\\"} have this access. This information\
          \ had a low impact on the overall score."
        key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_LOW
      properties:
        key:
          description: The key of the message
          example: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_LOW
          type: string
        format:
          description: The format of the message
          example: "{0,,\\\"i18n hint: percentage\\\"}% of identities with the same\
            \ {1,,\\\"i18n hint: name of category feature\\\"} have this access. This\
            \ information had a low impact on the overall score."
          type: string
      type: object
    RecommendationRequest:
      example:
        item:
          id: 2c938083633d259901633d2623ec0375
          type: ENTITLEMENT
        identityId: 2c938083633d259901633d25c68c00fa
      properties:
        identityId:
          description: The identity ID
          example: 2c938083633d259901633d25c68c00fa
          type: string
        item:
          $ref: '#/components/schemas/AccessItemRef'
      type: object
    RecommendationResponse:
      example:
        request:
          item:
            id: 2c938083633d259901633d2623ec0375
            type: ENTITLEMENT
          identityId: 2c938083633d259901633d25c68c00fa
        recommenderCalculations:
          identityId: 2c91808457d8f3ab0157e3e62cb4213c
          entitlementId: 2c91809050db617d0150e0bf3215385e
          overallWeightedScore: 0.8008281904610115
          featureWeightedScores:
            key: 6.027456183070403
          recommendation: "YES"
          threshold: 1.4658129805029452
          identityAttributes:
            key:
              value: value
          featureValues:
            feature: department
            numerator: 14
            denominator: 14
        translationMessages:
        - key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH
          values:
          - "75"
          - department
        recommendation: "true"
        interpretations:
        - 75% of identities with the same department have this access. This information
          had a high impact on the overall score.
        - 67% of identities with the same peer group have this access. This information
          had a low impact on the overall score.
        - 42% of identities with the same location have this access. This information
          had a low impact on the overall score.
      properties:
        request:
          $ref: '#/components/schemas/RecommendationRequest'
        recommendation:
          description: "The recommendation - YES if the access is recommended, NO\
            \ if not recommended, MAYBE if there is not enough information to make\
            \ a recommendation, NOT_FOUND if the identity is not found in the system"
          enum:
          - "true"
          - "false"
          - MAYBE
          - NOT_FOUND
          example: "true"
          type: string
        interpretations:
          description: "The list of interpretations explaining the recommendation.\
            \ The array is empty if includeInterpretations is false or not present\
            \ in the request. e.g. - [ \"Not approved in the last 6 months.\" ]. Interpretations\
            \ will be translated using the client's locale as found in the Accept-Language\
            \ header. If a translation for the client's locale cannot be found, the\
            \ US English translation will be returned."
          example:
          - 75% of identities with the same department have this access. This information
            had a high impact on the overall score.
          - 67% of identities with the same peer group have this access. This information
            had a low impact on the overall score.
          - 42% of identities with the same location have this access. This information
            had a low impact on the overall score.
          items:
            type: string
          type: array
        translationMessages:
          description: "The list of translation messages, if they have been requested."
          example:
          - key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH
            values:
            - "75"
            - department
          items:
            $ref: '#/components/schemas/TranslationMessage'
          type: array
        recommenderCalculations:
          $ref: '#/components/schemas/RecommenderCalculations'
      type: object
    RemediationItemDetails:
      example:
        targetName: john.smith
        targetId: 2c9180835d2e5168015d32f890ca1581
        attributeValue: 512-555-1212
        targetDisplayName: emailAddress
        attributeName: phoneNumber
        id: 2c9180835d2e5168015d32f890ca1581
        applicationName: Active Directory
        attributeOperation: update
        nativeIdentity: jason.smith2
      properties:
        id:
          description: The ID of the certification
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        targetId:
          description: The ID of the certification target
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        targetName:
          description: The name of the certification target
          example: john.smith
          type: string
        targetDisplayName:
          description: The display name of the certification target
          example: emailAddress
          type: string
        applicationName:
          description: The name of the application/source
          example: Active Directory
          type: string
        attributeName:
          description: The name of the attribute being certified
          example: phoneNumber
          type: string
        attributeOperation:
          description: The operation of the certification on the attribute
          example: update
          type: string
        attributeValue:
          description: The value of the attribute being certified
          example: 512-555-1212
          type: string
        nativeIdentity:
          description: The native identity of the target
          example: jason.smith2
          type: string
      type: object
    WorkItemState:
      description: The state of a work item
      enum:
      - FINISHED
      - REJECTED
      - RETURNED
      - EXPIRED
      - PENDING
      - CANCELED
      example: FINISHED
      type: string
    WorkItemType:
      description: The type of the work item
      enum:
      - UNKNOWN
      - GENERIC
      - CERTIFICATION
      - REMEDIATION
      - DELEGATION
      - APPROVAL
      - VIOLATIONREVIEW
      - FORM
      - POLICYVIOLATION
      - CHALLENGE
      - IMPACTANALYSIS
      - SIGNOFF
      - EVENT
      - MANUALACTION
      - TEST
      example: GENERIC
      type: string
    FormDetails:
      properties:
        id:
          description: ID of the form
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        name:
          description: Name of the form
          example: AccountSelection Form
          type: string
        title:
          description: The form title
          example: Account Selection for John.Doe
          type: string
        subtitle:
          description: The form subtitle.
          example: Please select from the following
          type: string
        targetUser:
          description: The name of the user that should be shown this form
          example: Jane.Doe
          type: string
        sections:
          $ref: '#/components/schemas/SectionDetails'
      type: object
    FormItemDetails:
      properties:
        name:
          description: Name of the FormItem
          example: Field1
          type: string
      type: object
    SectionDetails:
      allOf:
      - $ref: '#/components/schemas/FormItemDetails'
      - properties:
          label:
            description: Label of the section
            example: Section 1
            type: string
          formItems:
            description: List of FormItems. FormItems can be SectionDetails and/or
              FieldDetails
            example: []
            items:
              type: object
            type: array
        type: object
      type: object
    FieldDetails:
      allOf:
      - $ref: '#/components/schemas/FormItemDetails'
      - properties:
          displayName:
            description: Display name of the field
            example: Field 1
            type: string
          displayType:
            description: Type of the field to display
            example: checkbox
            type: string
          required:
            description: True if the field is required
            type: boolean
          allowedValuesList:
            description: List of allowed values for the field
            example:
            - Val1Display: null
              Val1Value: null
            - Val2Display: null
              Val2Value: null
            items:
              type: object
            type: array
          value:
            description: Value of the field
            type: object
        type: object
      type: object
    OwnerReference:
      description: The owner of this object.
      example:
        name: support
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      nullable: false
      properties:
        type:
          description: "Owner type. This field must be either left null or set to\
            \ 'IDENTITY' on input, otherwise a 400 Bad Request error will result."
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Identity id
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: "Human-readable display name of the owner. It may be left null\
            \ or omitted in a POST or PATCH. If set, it must match the current value\
            \ of the owner's display name, otherwise a 400 Bad Request error will\
            \ result."
          example: support
          type: string
      type: object
    AccessProfileSourceRef:
      example:
        name: ODS-AD-SOURCE
        id: 2c91809773dee3610173fdb0b6061ef4
        type: SOURCE
      properties:
        id:
          description: The ID of the Source with with which the Access Profile is
            associated
          example: 2c91809773dee3610173fdb0b6061ef4
          type: string
        type:
          description: "The type of the Source, will always be SOURCE"
          enum:
          - SOURCE
          example: SOURCE
          type: string
        name:
          description: The display name of the associated Source
          example: ODS-AD-SOURCE
          type: string
      type: object
    EntitlementRef:
      description: Entitlement including a specific set of access.
      example:
        name: "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local"
        id: 2c91809773dee32014e13e122092014e
        type: ENTITLEMENT
      properties:
        type:
          description: Entitlement's DTO type.
          enum:
          - ENTITLEMENT
          example: ENTITLEMENT
          type: string
        id:
          description: Entitlement's ID.
          example: 2c91809773dee32014e13e122092014e
          type: string
        name:
          description: Entitlement's display name.
          example: "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local"
          type: string
      type: object
    Requestability:
      example:
        commentsRequired: true
        approvalSchemes:
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        denialCommentsRequired: true
      nullable: true
      properties:
        commentsRequired:
          default: false
          description: Whether the requester of the containing object must provide
            comments justifying the request
          example: true
          nullable: true
          type: boolean
        denialCommentsRequired:
          default: false
          description: Whether an approver must provide comments when denying the
            request
          example: true
          nullable: true
          type: boolean
        approvalSchemes:
          description: List describing the steps in approving the request
          items:
            $ref: '#/components/schemas/AccessProfileApprovalScheme'
          nullable: true
          type: array
      type: object
    Revocability:
      example:
        approvalSchemes:
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
      nullable: true
      properties:
        approvalSchemes:
          description: List describing the steps in approving the revocation request
          items:
            $ref: '#/components/schemas/AccessProfileApprovalScheme'
          nullable: true
          type: array
      type: object
    ProvisioningCriteriaLevel1:
      description: Defines matching criteria for an Account to be provisioned with
        a specific Access Profile
      example:
        children:
        - children:
          - attribute: email
            operation: EQUALS
            value: carlee.cert1c9f9b6fd@mailinator.com
          - attribute: email
            operation: EQUALS
            value: carlee.cert1c9f9b6fd@mailinator.com
          attribute: email
          operation: EQUALS
          value: carlee.cert1c9f9b6fd@mailinator.com
        - children:
          - attribute: email
            operation: EQUALS
            value: carlee.cert1c9f9b6fd@mailinator.com
          - attribute: email
            operation: EQUALS
            value: carlee.cert1c9f9b6fd@mailinator.com
          attribute: email
          operation: EQUALS
          value: carlee.cert1c9f9b6fd@mailinator.com
        attribute: email
        operation: EQUALS
        value: carlee.cert1c9f9b6fd@mailinator.com
      nullable: true
      properties:
        operation:
          $ref: '#/components/schemas/ProvisioningCriteriaOperation'
        attribute:
          description: "Name of the Account attribute to be tested. If **operation**\
            \ is one of EQUALS, NOT_EQUALS, CONTAINS, or HAS, this field is required.\
            \ Otherwise, specifying it is an error."
          example: email
          nullable: true
          type: string
        value:
          description: "String value to test the Account attribute w/r/t the specified\
            \ operation. If the operation is one of EQUALS, NOT_EQUALS, or CONTAINS,\
            \ this field is required. Otherwise, specifying it is an error. If the\
            \ Attribute is not String-typed, it will be converted to the appropriate\
            \ type."
          example: carlee.cert1c9f9b6fd@mailinator.com
          nullable: true
          type: string
        children:
          description: "Array of child criteria. Required if the operation is AND\
            \ or OR, otherwise it must be left null. A maximum of three levels of\
            \ criteria are supported, including leaf nodes."
          items:
            $ref: '#/components/schemas/ProvisioningCriteriaLevel2'
          nullable: true
          type: array
          example: null
      type: object
    ErrorMessageDto:
      example:
        localeOrigin: DEFAULT
        text: The request was syntactically correct but its content is semantically
          invalid.
        locale: en-US
      properties:
        locale:
          description: "The locale for the message text, a BCP 47 language tag."
          example: en-US
          type: string
        localeOrigin:
          $ref: '#/components/schemas/LocaleOrigin'
        text:
          description: Actual text of the error message in the indicated locale.
          example: The request was syntactically correct but its content is semantically
            invalid.
          type: string
      type: object
    AccessProfileUsage:
      example:
        accessProfileId: 2c91808876438bbb017668c21919ecca
        usedBy:
        - name: Manager Role
          id: 2c8180857a9b3da0017aa03418480f9d
          type: ROLE
        - name: Manager Role
          id: 2c8180857a9b3da0017aa03418480f9d
          type: ROLE
      properties:
        accessProfileId:
          description: ID of the Access Profile that is in use
          example: 2c91808876438bbb017668c21919ecca
          type: string
        usedBy:
          description: List of references to objects which are using the indicated
            Access Profile
          items:
            $ref: '#/components/schemas/AccessProfileUsage_usedBy_inner'
          type: array
      type: object
    OwnerReferenceDto:
      description: Simplified DTO for the owner object of the entitlement
      example:
        name: identity 1
        id: 2a2fdacca5e345f18bf7970cfbb8fec2
        type: IDENTITY
      properties:
        id:
          description: The owner id for the entitlement
          example: 2a2fdacca5e345f18bf7970cfbb8fec2
          type: string
        name:
          description: The owner name for the entitlement
          example: identity 1
          type: string
        type:
          description: The type of the owner. Initially only type IDENTITY is supported
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
      type: object
    ManuallyUpdatedFieldsDTO:
      example:
        DESCRIPTION: true
        DISPLAY_NAME: true
      properties:
        DISPLAY_NAME:
          default: false
          description: |-
            True if the entitlements name was updated manually via entitlement import csv or patch endpoint.  False means that property value has not been change after first entitlement aggregation.
            Field refers to [Entitlement response schema](https://developer.sailpoint.com/idn/api/beta/get-entitlement) > `name` property.
          example: true
          type: boolean
        DESCRIPTION:
          default: false
          description: |-
            True if the entitlement description was updated manually via entitlement import csv or patch endpoint.  False means that property value has not been change after first entitlement aggregation.
            Field refers to [Entitlement response schema](https://developer.sailpoint.com/idn/api/beta/get-entitlement) > `description` property.
          example: true
          type: boolean
      type: object
    AccessRequestType:
      description: Access request type. Defaults to GRANT_ACCESS. REVOKE_ACCESS type
        can only have a single Identity ID in the requestedFor field.
      enum:
      - GRANT_ACCESS
      - REVOKE_ACCESS
      example: GRANT_ACCESS
      type: string
    AccessRequestItem:
      example:
        clientMetadata:
          requestedAppName: test-app
          requestedAppId: 2c91808f7892918f0178b78da4a305a1
        removeDate: 2020-07-11T21:23:15Z
        comment: Requesting access profile for John Doe
        id: 2c9180835d2e5168015d32f890ca1581
        type: ACCESS_PROFILE
      properties:
        type:
          description: The type of the item being requested.
          enum:
          - ACCESS_PROFILE
          - ROLE
          - ENTITLEMENT
          example: ACCESS_PROFILE
          type: string
        id:
          description: "ID of Role, Access Profile or Entitlement being requested."
          example: 2c9180835d2e5168015d32f890ca1581
          type: string
        comment:
          description: |
            Comment provided by requester.
            * Comment is required when the request is of type Revoke Access.
          example: Requesting access profile for John Doe
          type: string
        clientMetadata:
          additionalProperties:
            example: "{requestedAppId=2c91808f7892918f0178b78da4a305a1, requestedAppName=test-app}"
            type: string
          description: Arbitrary key-value pairs. They will never be processed by
            the IdentityNow system but will be returned on associated APIs such as
            /account-activities and /access-request-status.
          example:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          type: object
        removeDate:
          description: |
            The date the role or access profile is no longer assigned to the specified identity.
            * Specify a date in the future.
            * The current SLA for the deprovisioning is 24 hours.
            * This date can be modified to either extend or decrease the duration of access item assignments for the specified identity.
            * Currently it is not supported for entitlements.
          example: 2020-07-11T21:23:15Z
          format: date-time
          type: string
      required:
      - id
      - type
      type: object
    RequestOnBehalfOfConfig:
      example:
        allowRequestOnBehalfOfEmployeeByManager: true
        allowRequestOnBehalfOfAnyoneByAnyone: true
      properties:
        allowRequestOnBehalfOfAnyoneByAnyone:
          description: If anyone can request access for anyone.
          example: true
          type: boolean
        allowRequestOnBehalfOfEmployeeByManager:
          description: If a manager can request access for his/her direct reports.
          example: true
          type: boolean
      type: object
    ApprovalReminderAndEscalationConfig:
      example:
        fallbackApproverRef:
          name: Alison Ferguso
          id: 5168015d32f890ca15812c9180835d2e
          type: IDENTITY
          email: alison.ferguso@identitysoon.com
        maxReminders: 1
        daysUntilEscalation: 0
        daysBetweenReminders: 0
      properties:
        daysUntilEscalation:
          description: "Number of days to wait before the first reminder. If no reminders\
            \ are configured, then this is the number of days to wait before escalation."
          example: 0
          format: int32
          type: integer
        daysBetweenReminders:
          description: Number of days to wait between reminder notifications.
          example: 0
          format: int32
          type: integer
        maxReminders:
          description: Maximum number of reminder notification to send to the reviewer
            before approval escalation.
          example: 1
          format: int32
          minimum: 1
          type: integer
        fallbackApproverRef:
          $ref: '#/components/schemas/IdentityReferenceWithNameAndEmail'
      type: object
    EntitlementRequestConfig_1:
      example:
        requestCommentsRequired: false
        deniedCommentsRequired: false
        allowEntitlementRequest: true
        grantRequestApprovalSchemes: "entitlementOwner, sourceOwner, manager, workgroup:2c918084660f45d6016617daa9210584"
      properties:
        allowEntitlementRequest:
          description: Flag for allowing entitlement request.
          example: true
          type: boolean
        requestCommentsRequired:
          default: false
          description: Flag for requiring comments while submitting an entitlement
            request.
          example: false
          type: boolean
        deniedCommentsRequired:
          default: false
          description: Flag for requiring comments while rejecting an entitlement
            request.
          example: false
          type: boolean
        grantRequestApprovalSchemes:
          default: sourceOwner
          description: |
            Approval schemes for granting entitlement request. This can be empty if no approval is needed.
            Multiple schemes must be comma-separated. The valid schemes are "entitlementOwner", "sourceOwner", "manager" and "workgroup:{id}".
            Multiple workgroups (governance groups) can be used.
          example: "entitlementOwner, sourceOwner, manager, workgroup:2c918084660f45d6016617daa9210584"
          type: string
      type: object
    CancelledRequestDetails:
      description: Provides additional details for a request that has been cancelled.
      example:
        owner:
          name: Support
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        modified: 2019-12-20T09:17:12.192Z
        comment: This request must be cancelled.
      properties:
        comment:
          description: Comment made by the owner when cancelling the associated request.
          example: This request must be cancelled.
          type: string
        owner:
          $ref: '#/components/schemas/OwnerDto'
        modified:
          description: Date comment was added by the owner when cancelling the associated
            request.
          example: 2019-12-20T09:17:12.192Z
          format: date-time
          type: string
      type: object
    ErrorMessageDtoList:
      items:
        $ref: '#/components/schemas/ErrorMessageDto'
      type: array
    RequestedItemStatusRequestState:
      description: |-
        Indicates the state of an access request:
        * EXECUTING: The request is executing, which indicates the system is doing some processing.
        * REQUEST_COMPLETED: Indicates the request  has been completed.
        * CANCELLED: The request was cancelled with no user input.
        * TERMINATED: The request has been terminated before it was able to complete.
        * PROVISIONING_VERIFICATION_PENDING: The request has finished any approval steps and provisioning is waiting to be verified.
        * REJECTED: The request was rejected.
        * PROVISIONING_FAILED: The request has failed to complete.
        * NOT_ALL_ITEMS_PROVISIONED: One or more of the requested items failed to complete, but there were one or more  successes.
        * ERROR: An error occurred during request processing.
      enum:
      - EXECUTING
      - REQUEST_COMPLETED
      - CANCELLED
      - TERMINATED
      - PROVISIONING_VERIFICATION_PENDING
      - REJECTED
      - PROVISIONING_FAILED
      - NOT_ALL_ITEMS_PROVISIONED
      - ERROR
      example: EXECUTING
      type: string
    ApprovalStatusDto:
      example:
        errorMessages:
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        removeDate: 2020-07-11T00:00:00Z
        originalOwner:
          name: Michael Michaels
          id: 2c7180a46faadee4016fb4e018c20642
          type: IDENTITY
        scheme: MANAGER
        currentOwner:
          name: Allen Albertson
          id: 2c3780a46faadee4016fb4e018c20652
          type: IDENTITY
        modified: 2019-08-23T18:52:57.398Z
        comment: I approve this request
        forwarded: false
        status: PENDING
      properties:
        forwarded:
          description: True if the request for this item was forwarded from one owner
            to another.
          example: false
          type: boolean
        originalOwner:
          $ref: '#/components/schemas/ApprovalStatusDto_originalOwner'
        currentOwner:
          $ref: '#/components/schemas/AccessItemReviewedBy'
        modified:
          description: Time at which item was modified.
          example: 2019-08-23T18:52:57.398Z
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ManualWorkItemState'
        scheme:
          $ref: '#/components/schemas/ApprovalScheme'
        errorMessages:
          description: "If the request failed, includes any error messages that were\
            \ generated."
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
        comment:
          description: "Comment, if any, provided by the approver."
          example: I approve this request
          type: string
        removeDate:
          description: The date the role or access profile is no longer assigned to
            the specified identity.
          example: 2020-07-11T00:00:00Z
          format: date-time
          type: string
      type: object
    ManualWorkItemDetails:
      example:
        originalOwner:
          name: Michael Michaels
          id: 2c7180a46faadee4016fb4e018c20642
          type: IDENTITY
        currentOwner:
          name: Allen Albertson
          id: 2c3780a46faadee4016fb4e018c20652
          type: IDENTITY
        modified: 2019-08-23T18:52:57.398Z
        forwardHistory:
        - forwarderName: William Wilson
          reassignmentType: AUTOMATIC_REASSIGNMENT
          modified: 2019-08-23T18:52:57.398Z
          oldApproverName: Frank Mir
          newApproverName: Al Volta
          comment: Forwarding from Frank to Al
        - forwarderName: William Wilson
          reassignmentType: AUTOMATIC_REASSIGNMENT
          modified: 2019-08-23T18:52:57.398Z
          oldApproverName: Frank Mir
          newApproverName: Al Volta
          comment: Forwarding from Frank to Al
        forwarded: true
        status: PENDING
      properties:
        forwarded:
          description: True if the request for this item was forwarded from one owner
            to another.
          example: true
          type: boolean
        originalOwner:
          $ref: '#/components/schemas/ManualWorkItemDetails_originalOwner'
        currentOwner:
          $ref: '#/components/schemas/ManualWorkItemDetails_currentOwner'
        modified:
          description: Time at which item was modified.
          example: 2019-08-23T18:52:57.398Z
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ManualWorkItemState'
        forwardHistory:
          description: The history of approval forward action.
          items:
            $ref: '#/components/schemas/ApprovalForwardHistory'
          type: array
      type: object
    AccessItemRequester:
      description: Access item requester's identity.
      example:
        name: William Wilson
        id: 2c7180a46faadee4016fb4e018c20648
        type: IDENTITY
      properties:
        type:
          description: Access item requester's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Access item requester's identity ID.
          example: 2c7180a46faadee4016fb4e018c20648
          type: string
        name:
          description: Access item owner's human-readable display name.
          example: William Wilson
          type: string
      type: object
    AccessItemRequestedFor:
      description: Identity the access item is requested for.
      example:
        name: Robert Robinson
        id: 2c4180a46faadee4016fb4e018c20626
        type: IDENTITY
      properties:
        type:
          description: DTO type of identity the access item is requested for.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of identity the access item is requested for.
          example: 2c4180a46faadee4016fb4e018c20626
          type: string
        name:
          description: Human-readable display name of identity the access item is
            requested for.
          example: Robert Robinson
          type: string
      type: object
    CommentDto_1:
      example:
        created: 2017-07-11T18:45:37.098Z
        comment: This is a comment.
      properties:
        comment:
          description: Comment content.
          example: This is a comment.
          nullable: true
          type: string
        created:
          description: Date and time comment was created.
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
      type: object
    SodViolationContextCheckCompleted:
      description: An object referencing a completed SOD violation check
      example:
        violationCheckResult:
          clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          violationContexts:
          - conflictingAccessCriteria:
              leftCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
              rightCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
            policy:
              name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
          - conflictingAccessCriteria:
              leftCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
              rightCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
            policy:
              name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
          violatedPolicies:
          - name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
          - name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
          message:
            localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
        state: SUCCESS
        uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
      properties:
        state:
          description: The status of SOD violation check
          enum:
          - SUCCESS
          - ERROR
          example: SUCCESS
          type: string
        uuid:
          description: The id of the Violation check event
          example: f73d16e9-a038-46c5-b217-1246e15fdbdd
          type: string
        violationCheckResult:
          $ref: '#/components/schemas/SodViolationCheckResult'
      type: object
    ProvisioningDetails:
      description: Provides additional details about provisioning for this request.
      example:
        orderedSubPhaseReferences: manualWorkItemDetails
      properties:
        orderedSubPhaseReferences:
          description: "Ordered CSV of sub phase references to objects that contain\
            \ more information about provisioning. For example, this can contain \"\
            manualWorkItemDetails\" which indicate that there is further information\
            \ in that object for this phase."
          example: manualWorkItemDetails
          type: string
      type: object
    PreApprovalTriggerDetails:
      description: Provides additional details about the pre-approval trigger for
        this request.
      example:
        decision: APPROVED
        comment: Access is Approved
        reviewer: John Doe
      properties:
        comment:
          description: Comment left for the pre-approval decision
          example: Access is Approved
          type: string
        reviewer:
          description: The reviewer of the pre-approval decision
          example: John Doe
          type: string
        decision:
          description: The decision of the pre-approval trigger
          enum:
          - APPROVED
          - REJECTED
          example: APPROVED
          type: string
      type: object
    AccessRequestPhases:
      description: Provides additional details about this access request phase.
      example:
        result: SUCCESSFUL
        phaseReference: approvalDetails
        name: APPROVAL_PHASE
        started: 2020-07-11T00:00:00Z
        finished: 2020-07-12T00:00:00Z
        state: COMPLETED
      properties:
        started:
          description: The time that this phase started.
          example: 2020-07-11T00:00:00Z
          format: date-time
          type: string
        finished:
          description: The time that this phase finished.
          example: 2020-07-12T00:00:00Z
          format: date-time
          type: string
        name:
          description: The name of this phase.
          example: APPROVAL_PHASE
          type: string
        state:
          description: The state of this phase.
          enum:
          - PENDING
          - EXECUTING
          - COMPLETED
          - CANCELLED
          example: COMPLETED
          type: string
        result:
          description: The state of this phase.
          enum:
          - SUCCESSFUL
          - FAILED
          example: SUCCESSFUL
          type: string
        phaseReference:
          description: "A reference to another object on the RequestedItemStatus that\
            \ contains more details about the phase. Note that for the Provisioning\
            \ phase, this will be empty if there are no manual work items."
          example: approvalDetails
          type: string
      type: object
    AccessItemRequesterDto:
      description: Access item requester's identity.
      example:
        name: William Wilson
        id: 2c7180a46faadee4016fb4e018c20648
        type: IDENTITY
      properties:
        type:
          description: Access item requester's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Access item requester's identity ID.
          example: 2c7180a46faadee4016fb4e018c20648
          type: string
        name:
          description: Access item owner's human-readable display name.
          example: William Wilson
          type: string
      type: object
    AccessItemRequestedForDto:
      description: Identity the access item is requested for.
      example:
        name: Robert Robinson
        id: 2c4180a46faadee4016fb4e018c20626
        type: IDENTITY
      properties:
        type:
          description: DTO type of identity the access item is requested for.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of identity the access item is requested for.
          example: 2c4180a46faadee4016fb4e018c20626
          type: string
        name:
          description: Human-readable display name of identity the access item is
            requested for.
          example: Robert Robinson
          type: string
      type: object
    AccessItemOwnerDto:
      description: Access item owner's identity.
      example:
        name: Support
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      properties:
        type:
          description: Access item owner's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Access item owner's identity ID.
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Access item owner's human-readable display name.
          example: Support
          type: string
      type: object
    RequestableObjectReference:
      example:
        name: Object Name
        description: Object Description
        id: 2c938083633d259901633d25c68c00fa
        type: ROLE
      properties:
        id:
          description: Id of the object.
          example: 2c938083633d259901633d25c68c00fa
          type: string
        name:
          description: Name of the object.
          example: Object Name
          type: string
        description:
          description: Description of the object.
          example: Object Description
          type: string
        type:
          description: Type of the object.
          enum:
          - ACCESS_PROFILE
          - ROLE
          - ENTITLEMENT
          example: ROLE
          type: string
      type: object
    ApprovalForwardHistory:
      example:
        forwarderName: William Wilson
        reassignmentType: AUTOMATIC_REASSIGNMENT
        modified: 2019-08-23T18:52:57.398Z
        oldApproverName: Frank Mir
        newApproverName: Al Volta
        comment: Forwarding from Frank to Al
      properties:
        oldApproverName:
          description: Display name of approver from whom the approval was forwarded.
          example: Frank Mir
          type: string
        newApproverName:
          description: Display name of approver to whom the approval was forwarded.
          example: Al Volta
          type: string
        comment:
          description: Comment made while forwarding.
          example: Forwarding from Frank to Al
          nullable: true
          type: string
        modified:
          description: Time at which approval was forwarded.
          example: 2019-08-23T18:52:57.398Z
          format: date-time
          type: string
        forwarderName:
          description: Display name of forwarder who forwarded the approval.
          example: William Wilson
          nullable: true
          type: string
        reassignmentType:
          $ref: '#/components/schemas/ReassignmentType'
      type: object
    PendingApprovalAction:
      description: Enum represents action that is being processed on an approval.
      enum:
      - APPROVED
      - REJECTED
      - FORWARDED
      example: APPROVED
      type: string
    SodViolationContextCheckCompleted_1:
      description: An object referencing a completed SOD violation check
      example:
        violationCheckResult:
          clientMetadata:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          violationContexts:
          - conflictingAccessCriteria:
              leftCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
              rightCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
            policy:
              name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
          - conflictingAccessCriteria:
              leftCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
              rightCriteria:
                criteriaList:
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
                - existing: true
                  name: My HR Entitlement
                  id: 2c918085771e9d3301773b3cb66f6398
                  type: IDENTITY
            policy:
              name: Business SOD Policy
              id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
              type: SOD_POLICY
          violatedPolicies:
          - name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
          - name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
          message:
            localeOrigin: DEFAULT
            text: The request was syntactically correct but its content is semantically
              invalid.
            locale: en-US
        state: SUCCESS
        uuid: f73d16e9-a038-46c5-b217-1246e15fdbdd
      properties:
        state:
          description: The status of SOD violation check
          enum:
          - SUCCESS
          - ERROR
          example: SUCCESS
          type: string
        uuid:
          description: The id of the Violation check event
          example: f73d16e9-a038-46c5-b217-1246e15fdbdd
          type: string
        violationCheckResult:
          $ref: '#/components/schemas/SodViolationCheckResult_1'
      type: object
    CompletedApprovalState:
      description: Enum represents completed approval object's state.
      enum:
      - APPROVED
      - REJECTED
      example: APPROVED
      type: string
    AccessRequestRecommendationItemType:
      description: The type of access item.
      enum:
      - ACCESS_PROFILE
      - ROLE
      example: ACCESS_PROFILE
      type: string
    AccessRecommendationMessage:
      example:
        interpretation: 95% of your peers have this access.
      properties:
        interpretation:
          description: Information about why the access item was recommended.
          example: 95% of your peers have this access.
          type: string
      type: object
    TranslationMessage:
      example:
        values:
        - "75"
        - department
        key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH
      properties:
        key:
          description: The key of the translation message
          example: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH
          type: string
        values:
          description: The values corresponding to the translation messages
          example:
          - "75"
          - department
          items:
            type: string
          type: array
      type: object
    AccessRequestRecommendationItem:
      example:
        id: 2c9180835d2e5168015d32f890ca1581
        type: ACCESS_PROFILE
      properties:
        id:
          description: ID of access item being recommended.
          example: 2c9180835d2e5168015d32f890ca1581
          format: UUID
          type: string
        type:
          $ref: '#/components/schemas/AccessRequestRecommendationItemType'
      type: object
    CompletionStatus:
      description: The status after completion.
      enum:
      - SUCCESS
      - FAILURE
      - INCOMPLETE
      - PENDING
      example: SUCCESS
      nullable: true
      type: string
    IdentitySummary:
      example:
        identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
        name: SailPoint Services
        id: ff80818155fe8c080155fe8d925b0316
        completed: true
      nullable: true
      properties:
        id:
          description: ID of this identity summary
          example: ff80818155fe8c080155fe8d925b0316
          type: string
        name:
          description: Human-readable display name of identity
          example: SailPoint Services
          type: string
        identityId:
          description: ID of the identity that this summary represents
          example: c15b9f5cca5a4e9599eaa0e64fa921bd
          type: string
        completed:
          description: Indicates if all access items for this summary have been decided
            on
          example: true
          type: boolean
      type: object
    AccountActivityItem:
      example:
        approvalStatus: FINISHED
        reviewerComment:
          date: 2017-07-11T18:45:37.098Z
          commenterName: Adam Kennedy
          body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat.
          commenterId: 2c918084660f45d6016617daa9210584
        sourceId: 2c91808363ef85290164000587130c0c
        clientMetadata:
          customKey1: custom value 1
          customKey2: custom value 2
        removeDate: 2020-07-11T00:00:00Z
        reviewerIdentitySummary:
          identityId: c15b9f5cca5a4e9599eaa0e64fa921bd
          name: SailPoint Services
          id: ff80818155fe8c080155fe8d925b0316
          completed: true
        requesterComment:
          date: 2017-07-11T18:45:37.098Z
          commenterName: Adam Kennedy
          body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat.
          commenterId: 2c918084660f45d6016617daa9210584
        accountRequestInfo:
          requestedObjectId: 2c91808563ef85690164001c31140c0c
          requestedObjectName: Treasury Analyst
          requestedObjectType: ACCESS_PROFILE
        nativeIdentity: Sandie.Camero
        requested: 2017-07-11T18:45:37.098Z
        provisioningStatus: PENDING
        name: 48c545831b264409a81befcabb0e3c5a
        id: 48c545831b264409a81befcabb0e3c5a
        attribute: detectedRoles
        operation: ADD
        value: "Treasury Analyst [AccessProfile-1529010191212]"
      properties:
        id:
          description: Item id
          example: 48c545831b264409a81befcabb0e3c5a
          type: string
        name:
          description: Human-readable display name of item
          example: 48c545831b264409a81befcabb0e3c5a
          type: string
        requested:
          description: Date and time item was requested
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
        approvalStatus:
          $ref: '#/components/schemas/WorkItemState'
        provisioningStatus:
          $ref: '#/components/schemas/ProvisioningState'
        requesterComment:
          $ref: '#/components/schemas/Comment'
        reviewerIdentitySummary:
          $ref: '#/components/schemas/IdentitySummary'
        reviewerComment:
          $ref: '#/components/schemas/Comment'
        operation:
          $ref: '#/components/schemas/AccountActivityItemOperation'
        attribute:
          description: Attribute to which account activity applies
          example: detectedRoles
          nullable: true
          type: string
        value:
          description: Value of attribute
          example: "Treasury Analyst [AccessProfile-1529010191212]"
          nullable: true
          type: string
        nativeIdentity:
          description: Native identity in the target system to which the account activity
            applies
          example: Sandie.Camero
          nullable: true
          type: string
        sourceId:
          description: Id of Source to which account activity applies
          example: 2c91808363ef85290164000587130c0c
          type: string
        accountRequestInfo:
          $ref: '#/components/schemas/AccountRequestInfo'
        clientMetadata:
          additionalProperties:
            type: string
          description: "Arbitrary key-value pairs, if any were included in the corresponding\
            \ access request item"
          example:
            customKey1: custom value 1
            customKey2: custom value 2
          nullable: true
          type: object
        removeDate:
          description: The date the role or access profile is no longer assigned to
            the specified identity.
          example: 2020-07-11T00:00:00Z
          format: date-time
          nullable: true
          type: string
      type: object
    ExecutionStatus:
      description: The current state of execution.
      enum:
      - EXECUTING
      - VERIFYING
      - TERMINATED
      - COMPLETED
      example: COMPLETED
      type: string
    Comment:
      example:
        date: 2017-07-11T18:45:37.098Z
        commenterName: Adam Kennedy
        body: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
          erat.
        commenterId: 2c918084660f45d6016617daa9210584
      nullable: true
      properties:
        commenterId:
          description: Id of the identity making the comment
          example: 2c918084660f45d6016617daa9210584
          type: string
        commenterName:
          description: Human-readable display name of the identity making the comment
          example: Adam Kennedy
          type: string
        body:
          description: Content of the comment
          example: Et quam massa maximus vivamus nisi ut urna tincidunt metus elementum
            erat.
          type: string
        date:
          description: Date and time comment was made
          example: 2017-07-11T18:45:37.098Z
          format: date-time
          type: string
      type: object
    AccessConstraint:
      properties:
        type:
          description: Type of Access
          enum:
          - ENTITLEMENT
          - ACCESS_PROFILE
          - ROLE
          example: ENTITLEMENT
          type: string
        ids:
          description: Must be set only if operator is SELECTED.
          example:
          - 2c90ad2a70ace7d50170acf22ca90010
          items:
            type: string
          type: array
        operator:
          description: Used to determine whether the scope of the campaign should
            be reduced for selected ids or all.
          enum:
          - ALL
          - SELECTED
          example: SELECTED
          type: string
      required:
      - operator
      - type
      type: object
    ReassignReference:
      example:
        id: ef38f94347e94562b5bb8424a56397d8
        type: ITEM
      properties:
        id:
          description: The ID of item or identity being reassigned.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        type:
          description: The type of item or identity being reassigned.
          enum:
          - TARGET_SUMMARY
          - ITEM
          - IDENTITY_SUMMARY
          example: ITEM
          type: string
      required:
      - id
      - type
      type: object
    Argument:
      example:
        name: firstName
        description: the first name of the identity
        type: String
      nullable: true
      properties:
        name:
          description: the name of the argument
          example: firstName
          type: string
        description:
          description: the description of the argument
          example: the first name of the identity
          type: string
        type:
          description: the programmatic type of the argument
          example: String
          nullable: true
          type: string
      required:
      - name
      type: object
    EntitlementAccessRequestConfig:
      example:
        denialCommentRequired: false
        approvalSchemes:
        - approverId: e3eab852-8315-467f-9de7-70eda97f63c8
          approverType: GOVERNANCE_GROUP
        - approverId: e3eab852-8315-467f-9de7-70eda97f63c8
          approverType: GOVERNANCE_GROUP
        requestCommentRequired: true
      properties:
        approvalSchemes:
          description: Ordered list of approval steps for the access request. Empty
            when no approval is required.
          items:
            $ref: '#/components/schemas/EntitlementApprovalScheme'
          type: array
        requestCommentRequired:
          default: false
          description: If the requester must provide a comment during access request.
          example: true
          type: boolean
        denialCommentRequired:
          default: false
          description: If the reviewer must provide a comment when denying the access
            request.
          example: false
          type: boolean
      type: object
    CommonAccessItemAccess:
      example:
        ownerName: ownerName
        name: name
        description: description
        id: id
        type: null
        ownerId: ownerId
      properties:
        id:
          description: Common access ID
          type: string
        type:
          $ref: '#/components/schemas/CommonAccessType'
        name:
          description: Common access name
          type: string
        description:
          description: Common access description
          type: string
        ownerName:
          description: Common access owner name
          type: string
        ownerId:
          description: Common access owner ID
          type: string
      type: object
    CommonAccessItemState:
      description: State of common access item.
      enum:
      - CONFIRMED
      - DENIED
      type: string
    CorrelatedGovernanceEvent:
      properties:
        name:
          description: "The name of the governance event, such as the certification\
            \ name or access request ID."
          example: Manager Certification for Jon Snow
          type: string
        dt:
          description: The date that the certification or access request was completed.
          example: 2019-03-08T22:37:33.901Z
          type: string
        type:
          description: The type of governance event.
          enum:
          - certification
          - accessRequest
          example: certification
          type: string
        governanceId:
          description: The ID of the instance that caused the event - either the certification
            ID or access request ID.
          example: 2c91808a77ff216301782327a50f09bf
          type: string
        owners:
          description: The owners of the governance event (the certifiers or approvers)
          example:
          - id: 8a80828f643d484f01643e14202e206f
            displayName: John Snow
          items:
            $ref: '#/components/schemas/CertifierResponse'
          type: array
        reviewers:
          description: "The owners of the governance event (the certifiers or approvers),\
            \ this field should be preferred over owners"
          example:
          - id: 8a80828f643d484f01643e14202e206f
            displayName: John Snow
          items:
            $ref: '#/components/schemas/CertifierResponse'
          type: array
        decisionMaker:
          $ref: '#/components/schemas/CertifierResponse'
      type: object
    AttributeChange:
      example:
        name: firstname
        previousValue: adam
        newValue: zampa
      properties:
        name:
          description: the attribute name
          type: string
        previousValue:
          description: the old value of attribute
          type: string
        newValue:
          description: the new value of attribute
          type: string
      type: object
    AccessRequestResponse:
      properties:
        requesterId:
          description: the requester Id
          example: 2c91808a77ff216301782327a50f09bf
          type: string
        requesterName:
          description: the requesterName
          example: Bing C
          type: string
        items:
          example:
          - operation: Add
            accessItemType: role
            name: Role-1
            decision: APPROVED
            description: The role descrition
            sourceId: 8a80828f643d484f01643e14202e206f
            sourceName: Source1
            approvalInfos:
            - name: John Snow
              id: 8a80828f643d484f01643e14202e2000
              status: Approved
          items:
            $ref: '#/components/schemas/AccessRequestItemResponse'
          type: array
      type: object
    CertifierResponse:
      properties:
        id:
          description: the id of the certifier
          example: 8a80828f643d484f01643e14202e206f
          type: string
        displayName:
          description: the name of the certifier
          example: John Snow
          type: string
      type: object
    IdentitySyncPayload:
      example:
        type: SYNCHRONIZE_IDENTITY_ATTRIBUTES
        dataJson: "{\"identityId\":\"2c918083746f642c01746f990884012a\"}"
      properties:
        type:
          description: Payload type.
          example: SYNCHRONIZE_IDENTITY_ATTRIBUTES
          type: string
        dataJson:
          description: Payload type.
          example: "{\"identityId\":\"2c918083746f642c01746f990884012a\"}"
          type: string
      required:
      - dataJson
      - type
      type: object
    IdentityEntities:
      properties:
        identityEntity:
          $ref: '#/components/schemas/IdentityEntities_identityEntity'
      type: object
    LifecycleStateDto:
      properties:
        stateName:
          description: The name of the lifecycle state
          example: active
          type: string
        manuallyUpdated:
          description: Whether the lifecycle state has been manually or automatically
            set
          example: true
          type: boolean
      required:
      - manuallyUpdated
      - stateName
      type: object
    Source_1:
      example:
        type: rule
        properties:
          attribute: null
          sourceName: Employees
      properties:
        type:
          description: The type of the source
          example: rule
          type: string
        properties:
          description: The source properties
          example:
            attribute: null
            sourceName: Employees
          type: object
      type: object
    SelfImportExportDto:
      description: Self block for imported/exported object.
      example:
        name: HR Active Directory
        id: 2c9180835d191a86015d28455b4b232a
        type: SOURCE
      properties:
        type:
          description: "Imported/exported object's DTO type. Import is currently only\
            \ possible with the IDENTITY_OBJECT_CONFIG, IDENTITY_PROFILE, RULE, SOURCE,\
            \ TRANSFORM, and TRIGGER_SUBSCRIPTION object types."
          enum:
          - ACCESS_PROFILE
          - ACCESS_REQUEST_CONFIG
          - ATTR_SYNC_SOURCE_CONFIG
          - AUTH_ORG
          - CAMPAIGN_FILTER
          - FORM_DEFINITION
          - GOVERNANCE_GROUP
          - IDENTITY_OBJECT_CONFIG
          - IDENTITY_PROFILE
          - LIFECYCLE_STATE
          - NOTIFICATION_TEMPLATE
          - PASSWORD_POLICY
          - PASSWORD_SYNC_GROUP
          - PUBLIC_IDENTITIES_CONFIG
          - ROLE
          - RULE
          - SEGMENT
          - SERVICE_DESK_INTEGRATION
          - SOD_POLICY
          - SOURCE
          - TAG
          - TRANSFORM
          - TRIGGER_SUBSCRIPTION
          - WORKFLOW
          example: SOURCE
          type: string
        id:
          description: Imported/exported object's ID.
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Imported/exported object's display name.
          example: HR Active Directory
          type: string
      type: object
    IdentityProfile_1:
      allOf:
      - $ref: '#/components/schemas/BaseCommonDto_1'
      - properties:
          description:
            description: The description of the Identity Profile.
            example: My custom flat file profile
            nullable: true
            type: string
          owner:
            $ref: '#/components/schemas/IdentityProfile_allOf_owner'
          priority:
            description: The priority for an Identity Profile.
            example: 10
            format: int64
            type: integer
          authoritativeSource:
            $ref: '#/components/schemas/IdentityProfile_1_allOf_authoritativeSource'
          identityRefreshRequired:
            default: false
            description: True if a identity refresh is needed. Typically triggered
              when a change on the source has been made.
            example: true
            type: boolean
          identityCount:
            description: The number of identities that belong to the Identity Profile.
            example: 8
            format: int32
            type: integer
          identityAttributeConfig:
            $ref: '#/components/schemas/IdentityAttributeConfig_1'
          identityExceptionReportReference:
            $ref: '#/components/schemas/IdentityExceptionReportReference_1'
          hasTimeBasedAttr:
            default: false
            description: Indicates the value of requiresPeriodicRefresh attribute
              for the Identity Profile.
            example: true
            type: boolean
        required:
        - authoritativeSource
        type: object
    SpConfigMessage:
      description: Message model for Config Import/Export.
      example:
        details:
          details: message details
        text: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
          \ name: random identity]"
        key: UNKNOWN_REFERENCE_RESOLVER
      properties:
        key:
          description: Message key.
          example: UNKNOWN_REFERENCE_RESOLVER
          type: string
        text:
          description: Message text.
          example: "Unable to resolve reference for object [type: IDENTITY, id: 2c91808c746e9c9601747d6507332ecz,\
            \ name: random identity]"
          type: string
        details:
          additionalProperties:
            type: object
          description: "Message details if any, in key:value pairs."
          example:
            details: message details
          type: object
      required:
      - details
      - key
      - text
      title: Config Import/Export Message
      type: object
    ImportObject:
      description: Object created or updated by import.
      example:
        name: HR Active Directory
        id: 2c9180835d191a86015d28455b4b232a
        type: SOURCE
      properties:
        type:
          description: DTO type of object created or updated by import.
          enum:
          - IDENTITY_OBJECT_CONFIG
          - IDENTITY_PROFILE
          - RULE
          - SOURCE
          - TRANSFORM
          - TRIGGER_SUBSCRIPTION
          example: SOURCE
          type: string
        id:
          description: ID of object created or updated by import.
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Display name of object created or updated by import.
          example: HR Active Directory
          type: string
      type: object
    IdentityAttributePreview:
      example:
        errorMessages:
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        - localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
        name: email
        value: email@mail.com
        previousValue: oldEmail@mail.com
      properties:
        name:
          description: Name of the attribute that is being previewed.
          example: email
          type: string
        value:
          description: Value that was derived during the preview.
          example: email@mail.com
          type: object
        previousValue:
          description: The value of the attribute before the preview.
          example: oldEmail@mail.com
          type: object
        errorMessages:
          items:
            $ref: '#/components/schemas/ErrorMessageDto'
          type: array
      type: object
    IdentityAttributeTransform:
      example:
        transformDefinition:
          attributes:
            attributeName: e-mail
            sourceName: MySource
            sourceId: 2c9180877a826e68017a8c0b03da1a53
          type: accountAttribute
        identityAttributeName: email
      properties:
        identityAttributeName:
          description: Name of the identity attribute
          example: email
          type: string
        transformDefinition:
          $ref: '#/components/schemas/TransformDefinition'
      type: object
    EmailNotificationOption:
      example:
        notifyManagers: true
        notifySpecificUsers: true
        emailAddressList:
        - test@test.com
        - test2@test.com
        notifyAllAdmins: true
      properties:
        notifyManagers:
          description: "If true, then the manager is notified of the lifecycle state\
            \ change."
          example: true
          type: boolean
        notifyAllAdmins:
          description: "If true, then all the admins are notified of the lifecycle\
            \ state change."
          example: true
          type: boolean
        notifySpecificUsers:
          description: "If true, then the users specified in \"emailAddressList\"\
            \ below are notified of lifecycle state change."
          example: true
          type: boolean
        emailAddressList:
          description: "List of user email addresses. If \"notifySpecificUsers\" option\
            \ is true, then these users are notified of lifecycle state change."
          example:
          - test@test.com
          - test2@test.com
          items:
            type: string
          type: array
      type: object
    AccountAction:
      example:
        action: ENABLE
        sourceIds:
        - 2c918084660f45d6016617daa9210584
        - 2c918084660f45d6016617daa9210500
      properties:
        action:
          description: Describes if action will be enabled or disabled
          enum:
          - ENABLE
          - DISABLE
          example: ENABLE
          type: string
        sourceIds:
          description: List of source IDs. The sources must have the ENABLE feature
            or flat file source. See "/sources" endpoint for source features.
          example:
          - 2c918084660f45d6016617daa9210584
          - 2c918084660f45d6016617daa9210500
          items:
            description: Source Id
            example: 2c918084660f45d6016617daa9210584
            type: string
          type: array
      type: object
    NonEmployeeSourceLite:
      properties:
        id:
          description: Non-Employee source id.
          example: a0303682-5e4a-44f7-bdc2-6ce6112549c1
          format: UUID
          type: string
        sourceId:
          description: Source Id associated with this non-employee source.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Source name associated with this non-employee source.
          example: Retail
          type: string
        description:
          description: Source description associated with this non-employee source.
          example: Source description
          type: string
      type: object
    NonEmployeeApprovalItemBase:
      properties:
        id:
          description: Non-Employee approval item id
          example: 2c1e388b-1e55-4b0a-ab5c-897f1204159c
          format: UUID
          type: string
        approver:
          $ref: '#/components/schemas/IdentityReferenceWithId'
        accountName:
          description: Requested identity account name
          example: test.account
          type: string
        approvalStatus:
          $ref: '#/components/schemas/ApprovalStatus'
        approvalOrder:
          description: Approval order
          example: 1
          type: number
        comment:
          description: comment of approver
          type: string
        modified:
          description: When the request was last modified.
          example: 2019-08-23T18:52:59.162Z
          format: date-time
          type: string
        created:
          description: When the request was created.
          example: 2019-08-23T18:40:35.772Z
          format: date-time
          type: string
      type: object
    ApprovalStatus:
      description: Enum representing the non-employee request approval status
      enum:
      - APPROVED
      - REJECTED
      - PENDING
      - NOT_READY
      - CANCELLED
      type: string
    NonEmployeeIdnUserRequest:
      example:
        id: 2c91808570313110017040b06f344ec9
      properties:
        id:
          description: Identity id.
          example: 2c91808570313110017040b06f344ec9
          format: UUID
          type: string
      required:
      - id
      type: object
    IdentityReferenceWithId:
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: Identity id
          example: 5168015d32f890ca15812c9180835d2e
          type: string
      type: object
    NonEmployeeRequestLite:
      properties:
        id:
          description: Non-Employee request id.
          format: UUID
          type: string
        requester:
          $ref: '#/components/schemas/IdentityReferenceWithId'
      type: object
    NonEmployeeRequestWithoutApprovalItem:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeRequestLite'
      - properties:
          accountName:
            description: Requested identity account name.
            example: william.smith
            type: string
          firstName:
            description: Non-Employee's first name.
            example: William
            type: string
          lastName:
            description: Non-Employee's last name.
            example: Smith
            type: string
          email:
            description: Non-Employee's email.
            example: william.smith@example.com
            type: string
          phone:
            description: Non-Employee's phone.
            example: "5555555555"
            type: string
          manager:
            description: The account ID of a valid identity to serve as this non-employee's
              manager.
            example: jane.doe
            type: string
          nonEmployeeSource:
            $ref: '#/components/schemas/NonEmployeeSourceLiteWithSchemaAttributes'
          data:
            additionalProperties:
              type: string
            description: Attribute blob/bag for a non-employee.
            type: object
          approvalStatus:
            $ref: '#/components/schemas/ApprovalStatus'
          comment:
            description: comment of requester
            type: string
          completionDate:
            description: When the request was completely approved.
            example: 2020-03-24T11:11:41.139-05:00
            format: date-time
            type: string
          startDate:
            description: Non-Employee employment start date.
            example: 2020-03-24
            format: date
            type: string
          endDate:
            description: Non-Employee employment end date.
            example: 2021-03-25
            format: date
            type: string
          modified:
            description: When the request was last modified.
            example: 2020-03-24T11:11:41.139-05:00
            format: date-time
            type: string
          created:
            description: When the request was created.
            example: 2020-03-24T11:11:41.139-05:00
            format: date-time
            type: string
        type: object
    NonEmployeeSchemaAttributeType:
      description: Enum representing the type of data a schema attribute accepts.
      enum:
      - TEXT
      - DATE
      - IDENTITY
      type: string
    ManagedClusterTypes:
      description: The Type of Cluster
      enum:
      - idn
      - iai
      example: idn
      type: string
    ManagedClusterKeyPair:
      description: Managed Cluster key pair for Cluster
      example:
        publicKeyThumbprint: 6CMlaJIV44-xJxcB3CJBjDUUn54
        publicKeyCertificate: '-----BEGIN CERTIFICATE-----****-----END CERTIFICATE-----'
        publicKey: '-----BEGIN PUBLIC KEY-----******-----END PUBLIC KEY-----'
      properties:
        publicKey:
          description: ManagedCluster publicKey
          example: '-----BEGIN PUBLIC KEY-----******-----END PUBLIC KEY-----'
          nullable: true
          type: string
        publicKeyThumbprint:
          description: ManagedCluster publicKeyThumbprint
          example: 6CMlaJIV44-xJxcB3CJBjDUUn54
          nullable: true
          type: string
        publicKeyCertificate:
          description: ManagedCluster publicKeyCertificate
          example: '-----BEGIN CERTIFICATE-----****-----END CERTIFICATE-----'
          nullable: true
          type: string
      type: object
    ManagedClusterAttributes:
      description: "Managed Cluster Attributes for Cluster Configuration. Supported\
        \ Cluster Types [sqsCluster, spConnectCluster]"
      example:
        keystore: /u3+7QAAAAIAAAABAAAAAQAvL3Byb3h5LWNsdXN0ZXIvMmM5MTgwODc3Yjg3MW
        queue:
          name: megapod-useast1-denali-lwt-cluster-1533
          region: us-east-1
      properties:
        queue:
          $ref: '#/components/schemas/ManagedClusterQueue'
        keystore:
          description: ManagedCluster keystore for spConnectCluster type
          example: /u3+7QAAAAIAAAABAAAAAQAvL3Byb3h5LWNsdXN0ZXIvMmM5MTgwODc3Yjg3MW
          nullable: true
          type: string
      type: object
    ManagedClusterRedis:
      description: Managed Cluster Redis Configuration
      example:
        redisHost: megapod-useast1-shared-redis.cloud.sailpoint.com
        redisPort: 6379
      properties:
        redisHost:
          description: ManagedCluster redisHost
          example: megapod-useast1-shared-redis.cloud.sailpoint.com
          type: string
        redisPort:
          description: ManagedCluster redisPort
          example: 6379
          format: int32
          type: integer
      type: object
    StandardLevel:
      description: Standard Log4j log level
      enum:
      - "false"
      - FATAL
      - ERROR
      - WARN
      - INFO
      - DEBUG
      - TRACE
      example: INFO
      type: string
    LogLevelSpec:
      additionalProperties:
        $ref: '#/components/schemas/StandardLevel'
      description: Mapping of identifiers to Standard Log Level values
      example: INFO
      type: object
    KbaAnswerRequestItem:
      properties:
        questionId:
          description: Question Id
          example: 089899f13a8f4da7824996191587bab9
          nullable: false
          type: string
        answer:
          description: An answer for the KBA question
          example: Your answer
          nullable: false
          type: string
      required:
      - answer
      - questionId
      type: object
    KbaAuthResponseItem:
      properties:
        questionId:
          description: The KBA question id
          example: 089899f13a8f4da7824996191587bab9
          nullable: true
          type: string
        isVerified:
          description: Return true if verified
          example: true
          nullable: true
          type: boolean
      type: object
    GrantType:
      description: OAuth2 Grant Type
      enum:
      - CLIENT_CREDENTIALS
      - AUTHORIZATION_CODE
      - REFRESH_TOKEN
      example: CLIENT_CREDENTIALS
      type: string
    AccessType:
      description: Access type of API Client indicating online or offline use
      enum:
      - ONLINE
      - OFFLINE
      example: OFFLINE
      type: string
    ClientType:
      description: Type of an API Client indicating public or confidentials use
      enum:
      - CONFIDENTIAL
      - PUBLIC
      example: CONFIDENTIAL
      type: string
    ReportConfigDTO:
      example:
        included: false
        required: true
        columnName: SOD Business Name
        order: 2
      properties:
        columnName:
          description: Name of column in report
          example: SOD Business Name
          type: string
        required:
          default: false
          description: "If true, column is required in all reports, and this entry\
            \ is immutable. A 400 error will result from any attempt to modify the\
            \ column's definition."
          example: true
          type: boolean
        included:
          default: false
          description: "If true, column is included in the report. A 400 error will\
            \ be thrown if an attempt is made to set included=false if required==true."
          example: false
          type: boolean
        order:
          description: Relative sort order for the column. Columns will be displayed
            left-to-right in nondecreasing order.
          example: 2
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      type: object
    OutlierFeatureTranslation:
      example:
        displayName:
          values:
          - "75"
          - department
          key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH
        description:
          values:
          - "75"
          - department
          key: recommender-api.V2_WEIGHT_FEATURE_PRODUCT_INTERPRETATION_HIGH
      properties:
        displayName:
          $ref: '#/components/schemas/TranslationMessage'
        description:
          $ref: '#/components/schemas/TranslationMessage'
      type: object
    PasswordInfoAccount:
      example:
        accountId: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
        accountName: Abby.Smith
      properties:
        accountId:
          description: Account ID of the account. This is specified per account schema
            in the source configuration. It is used to distinguish accounts. More
            info can be found here https://community.sailpoint.com/t5/IdentityNow-Connectors/How-do-I-designate-an-account-attribute-as-the-Account-ID-for-a/ta-p/80350
          example: "CN=Abby Smith,OU=Austin,OU=Americas,OU=Demo,DC=seri,DC=acme,DC=com"
          type: string
        accountName:
          description: Display name of the account. This is specified per account
            schema in the source configuration. It is used to display name of the
            account. More info can be found here https://community.sailpoint.com/t5/IdentityNow-Connectors/How-do-I-designate-an-account-attribute-as-the-Account-Name-for/ta-p/74008
          example: Abby.Smith
          type: string
      type: object
    PatOwner:
      description: Personal access token owner's identity.
      example:
        name: Support
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      properties:
        type:
          description: Personal access token owner's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Personal access token owner's identity ID.
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Personal access token owner's human-readable display name.
          example: Support
          type: string
      type: object
    PublicIdentityAttributeConfig:
      description: Used to map an attribute key for an Identity to its display name.
      example:
        name: Country
        key: country
      properties:
        key:
          description: the key of the attribute
          example: country
          type: string
        name:
          description: the display name of the attribute
          example: Country
          type: string
      type: object
    IdentityReference:
      description: The manager for the identity.
      example:
        name: Thomas Edison
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      nullable: true
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: Identity id
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Human-readable display name of identity.
          example: Thomas Edison
          type: string
      type: object
    Medium:
      enum:
      - EMAIL
      - SMS
      - PHONE
      - SLACK
      - TEAMS
      type: string
    Identity_1:
      description: The definition of an Identity according to the Reassignment Configuration
        service
      example:
        name: William Wilson
        id: 2c91808380aa05580180aaaaf1940410
      properties:
        id:
          description: The ID of the object
          example: 2c91808380aa05580180aaaaf1940410
          type: string
        name:
          description: Human-readable display name of the object
          example: William Wilson
          type: string
      type: object
    ConfigurationDetailsResponse:
      description: The request body of Reassignment Configuration Details for a specific
        identity and config type
      example:
        endDate: 0001-01-01T00:00:00Z
        auditDetails:
          createdBy:
            name: William Wilson
            id: 2c91808380aa05580180aaaaf1940410
          created: 2022-07-21T11:13:12.345Z
          modified: 2022-07-21T11:13:12.345Z
          modifiedBy:
            name: William Wilson
            id: 2c91808380aa05580180aaaaf1940410
        configType: ACCESS_REQUESTS
        targetIdentity:
          name: William Wilson
          id: 2c91808380aa05580180aaaaf1940410
        startDate: 2022-07-21T11:13:12.345Z
      properties:
        configType:
          $ref: '#/components/schemas/ConfigTypeEnum'
        targetIdentity:
          $ref: '#/components/schemas/Identity_1'
        startDate:
          description: The date from which to start reassigning work items
          example: 2022-07-21T11:13:12.345Z
          format: date-time
          type: string
        endDate:
          description: The date from which to stop reassigning work items.  If this
            is an empty string it indicates a permanent reassignment.
          example: 0001-01-01T00:00:00Z
          format: date-time
          type: string
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
      type: object
    LookupStep:
      description: The definition of an Identity according to the Reassignment Configuration
        service
      example:
        reassignmentType: AUTOMATIC_REASSIGNMENT
        reassignedFromId: 51948a8f306a4e7a9a6f8f5d032fa59e
        reassignedToId: 869320b6b6f34a169b6178b1a865e66f
      properties:
        reassignedToId:
          description: The ID of the Identity who work is reassigned to
          example: 869320b6b6f34a169b6178b1a865e66f
          type: string
        reassignedFromId:
          description: The ID of the Identity who work is reassigned from
          example: 51948a8f306a4e7a9a6f8f5d032fa59e
          type: string
        reassignmentType:
          $ref: '#/components/schemas/ReassignmentTypeEnum'
      type: object
    AuditDetails:
      description: Audit details for the reassignment configuration of an identity
      example:
        createdBy:
          name: William Wilson
          id: 2c91808380aa05580180aaaaf1940410
        created: 2022-07-21T11:13:12.345Z
        modified: 2022-07-21T11:13:12.345Z
        modifiedBy:
          name: William Wilson
          id: 2c91808380aa05580180aaaaf1940410
      properties:
        created:
          description: Initial date and time when the record was created
          example: 2022-07-21T11:13:12.345Z
          format: date-time
          type: string
        createdBy:
          $ref: '#/components/schemas/Identity_1'
        modified:
          description: Last modified date and time for the record
          example: 2022-07-21T11:13:12.345Z
          format: date-time
          type: string
        modifiedBy:
          $ref: '#/components/schemas/Identity_1'
      type: object
    TenantConfigurationDetails:
      description: Details of any tenant-wide Reassignment Configurations (eg. enabled/disabled)
      example:
        disabled: true
      properties:
        disabled:
          default: false
          description: "Flag to determine if Reassignment Configuration is enabled\
            \ or disabled for a tenant.  When this flag is set to true, Reassignment\
            \ Configuration is disabled."
          example: true
          nullable: true
          type: boolean
      type: object
    RoleInsightsRole:
      example:
        ownerName: Bob
        name: Software Engineer
        description: Person who develops software
        id: 1467e61e-f284-439c-ba2d-c6cc11cf0941
        ownerId: 1467e61e-f284-439c-ba2d-c6cc11cf0941
      properties:
        name:
          description: Role name
          example: Software Engineer
          type: string
        id:
          description: Role id
          example: 1467e61e-f284-439c-ba2d-c6cc11cf0941
          type: string
        description:
          description: Role description
          example: Person who develops software
          type: string
        ownerName:
          description: Role owner name
          example: Bob
          type: string
        ownerId:
          description: Role owner id
          example: 1467e61e-f284-439c-ba2d-c6cc11cf0941
          type: string
      type: object
    RoleInsightsInsight:
      example:
        identitiesWithAccess: 850
        totalNumberOfIdentities: 1000
        identitiesImpacted: 150
        type: ADD
      properties:
        type:
          description: The number of identities in this role with the entitlement.
          example: ADD
          type: string
        identitiesWithAccess:
          description: The number of identities in this role with the entitlement.
          example: 850
          type: integer
        identitiesImpacted:
          description: The number of identities in this role that do not have the
            specified entitlement.
          example: 150
          type: integer
        totalNumberOfIdentities:
          description: The total number of identities.
          example: 1000
          type: integer
      type: object
    RoleMiningSessionScope:
      example:
        identityIds:
        - 2c918090761a5aac0176215c46a62d58
        - 2c918090761a5aac01722015c46a62d42
        attributeFilterCriteria:
          displayName:
            untranslated: "Location: Miami"
          ariaLabel:
            untranslated: "Location: Miami"
          data:
            displayName:
              translateKey: IDN.IDENTITY_ATTRIBUTES.LOCATION
            name: location
            operator: EQUALS
            values:
            - Miami
        criteria: source.name:DataScienceDataset
      properties:
        identityIds:
          description: The list of identities for this role mining session.
          example:
          - 2c918090761a5aac0176215c46a62d58
          - 2c918090761a5aac01722015c46a62d42
          items:
            type: string
          type: array
        criteria:
          description: The "search" criteria that produces the list of identities
            for this role mining session.
          example: source.name:DataScienceDataset
          nullable: true
          type: string
        attributeFilterCriteria:
          description: The filter criteria for this role mining session.
          example:
            displayName:
              untranslated: "Location: Miami"
            ariaLabel:
              untranslated: "Location: Miami"
            data:
              displayName:
                translateKey: IDN.IDENTITY_ATTRIBUTES.LOCATION
              name: location
              operator: EQUALS
              values:
              - Miami
          items:
            type: object
          nullable: true
          type: array
      type: object
    RoleMiningRoleType:
      description: Role type
      enum:
      - SPECIALIZED
      - COMMON
      example: SPECIALIZED
      type: string
    EntityCreatedByDTO:
      example:
        displayName: Ashley.Pierce
        id: 2c918090761a5aac0176215c46a62d58
      properties:
        id:
          description: ID of the creator
          example: 2c918090761a5aac0176215c46a62d58
          type: string
        displayName:
          description: The display name of the creator
          example: Ashley.Pierce
          type: string
      type: object
    NullableEntityCreatedByDTO:
      description: Workaround to support null
      example: Dummy
      nullable: true
      type: string
    RoleMiningSessionState:
      description: Role mining session status
      enum:
      - CREATED
      - UPDATED
      - IDENTITIES_OBTAINED
      - PRUNE_THRESHOLD_OBTAINED
      - POTENTIAL_ROLES_PROCESSING
      - POTENTIAL_ROLES_CREATED
      example: CREATED
      type: string
    RoleMiningPotentialRoleRef:
      example:
        name: Potential Role - e0cc5d
        id: e0cc5d7d-bf7f-4f81-b2af-8885b09d9923
      properties:
        id:
          description: Id of the potential role
          example: e0cc5d7d-bf7f-4f81-b2af-8885b09d9923
          type: string
        name:
          description: Name of the potential role
          example: Potential Role - e0cc5d
          type: string
      type: object
    RoleMiningPotentialRoleProvisionState:
      description: Provision state
      enum:
      - POTENTIAL
      - PENDING
      - COMPLETE
      - FAILED
      example: POTENTIAL
      type: string
    RoleMiningSessionParametersDto:
      example:
        pruneThreshold: 5
        saved: true
        scope:
          identityIds:
          - 2c918090761a5aac0176215c46a62d58
          - 2c918090761a5aac01722015c46a62d42
          attributeFilterCriteria:
            displayName:
              untranslated: "Location: Miami"
            ariaLabel:
              untranslated: "Location: Miami"
            data:
              displayName:
                translateKey: IDN.IDENTITY_ATTRIBUTES.LOCATION
              name: location
              operator: EQUALS
              values:
              - Miami
          criteria: source.name:DataScienceDataset
        name: Saved RM Session - 07/10
        minNumIdentitiesInPotentialRole: 20
        id: 9f36f5e5-1e81-4eca-b087-548959d91c71
        state: CREATED
        scopingMethod: MANUAL
        type: SPECIALIZED
      properties:
        id:
          description: The ID of the role mining session
          example: 9f36f5e5-1e81-4eca-b087-548959d91c71
          type: string
        name:
          description: The session's saved name
          example: Saved RM Session - 07/10
          nullable: true
          type: string
        minNumIdentitiesInPotentialRole:
          description: Minimum number of identities in a potential role
          example: 20
          format: int32
          nullable: true
          type: integer
        pruneThreshold:
          description: The prune threshold to be used or null to calculate prescribedPruneThreshold
          example: 5
          format: int32
          nullable: true
          type: integer
        saved:
          default: true
          description: The session's saved status
          example: true
          type: boolean
        scope:
          $ref: '#/components/schemas/RoleMiningSessionScope'
        type:
          $ref: '#/components/schemas/RoleMiningRoleType'
        state:
          $ref: '#/components/schemas/RoleMiningSessionState'
        scopingMethod:
          $ref: '#/components/schemas/RoleMiningSessionScopingMethod'
      type: object
    RoleMiningIdentityDistribution:
      example:
        attributeName: department
        distribution:
        - attributeValue: NM Tier 3
          count: 6
      properties:
        attributeName:
          description: Id of the potential role
          example: department
          type: string
        distribution:
          example:
          - attributeValue: NM Tier 3
            count: 6
          items:
            additionalProperties:
              type: string
            type: object
          type: array
      type: object
    RoleMiningEntitlementRef:
      example:
        name: App.entitlement.1
        description: Entitlement 1
        id: 2c91808a7e95e6e0017e96e2086206c8
        attribute: groups
      properties:
        id:
          description: Id of the entitlement
          example: 2c91808a7e95e6e0017e96e2086206c8
          type: string
        name:
          description: Name of the entitlement
          example: App.entitlement.1
          type: string
        description:
          description: Description forthe entitlement
          example: Entitlement 1
          nullable: true
          type: string
        attribute:
          description: The entitlement attribute
          example: groups
          type: string
      type: object
    RoleMiningPotentialRoleExportState:
      enum:
      - QUEUED
      - IN_PROGRESS
      - SUCCESS
      - ERROR
      type: string
    AccessProfileRef:
      example:
        name: Access Profile 2567
        id: ff808081751e6e129f1518161919ecca
        type: ACCESS_PROFILE
      properties:
        id:
          description: ID of the Access Profile
          example: ff808081751e6e129f1518161919ecca
          type: string
        type:
          description: "Type of requested object. This field must be either left null\
            \ or set to 'ACCESS_PROFILE' when creating an Access Profile, otherwise\
            \ a 400 Bad Request error will result."
          enum:
          - ACCESS_PROFILE
          example: ACCESS_PROFILE
          type: string
        name:
          description: Human-readable display name of the Access Profile. This field
            is ignored on input.
          example: Access Profile 2567
          type: string
      type: object
    RoleMembershipSelector:
      description: "When present, specifies that the Role is to be granted to Identities\
        \ which either satisfy specific criteria or which are members of a given list\
        \ of Identities."
      example:
        identities:
        - aliasName: t.edison
          name: Thomas Edison
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        - aliasName: t.edison
          name: Thomas Edison
          id: 2c9180a46faadee4016fb4e018c20639
          type: IDENTITY
        criteria:
          stringValue: carlee.cert1c9f9b6fd@mailinator.com
          children:
          - stringValue: carlee.cert1c9f9b6fd@mailinator.com
            children:
            - stringValue: carlee.cert1c9f9b6fd@mailinator.com
              operation: EQUALS
              key:
                sourceId: 2c9180867427f3a301745aec18211519
                property: attribute.email
                type: ACCOUNT
            - stringValue: carlee.cert1c9f9b6fd@mailinator.com
              operation: EQUALS
              key:
                sourceId: 2c9180867427f3a301745aec18211519
                property: attribute.email
                type: ACCOUNT
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          - stringValue: carlee.cert1c9f9b6fd@mailinator.com
            children:
            - stringValue: carlee.cert1c9f9b6fd@mailinator.com
              operation: EQUALS
              key:
                sourceId: 2c9180867427f3a301745aec18211519
                property: attribute.email
                type: ACCOUNT
            - stringValue: carlee.cert1c9f9b6fd@mailinator.com
              operation: EQUALS
              key:
                sourceId: 2c9180867427f3a301745aec18211519
                property: attribute.email
                type: ACCOUNT
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          operation: EQUALS
          key:
            sourceId: 2c9180867427f3a301745aec18211519
            property: attribute.email
            type: ACCOUNT
        type: IDENTITY_LIST
      nullable: true
      properties:
        type:
          $ref: '#/components/schemas/RoleMembershipSelectorType'
        criteria:
          $ref: '#/components/schemas/RoleCriteriaLevel1'
        identities:
          description: "Defines role membership as being exclusive to the specified\
            \ Identities, when type is IDENTITY_LIST."
          items:
            $ref: '#/components/schemas/RoleMembershipIdentity'
          nullable: true
          type: array
      type: object
    RequestabilityForRole:
      example:
        commentsRequired: true
        approvalSchemes:
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        denialCommentsRequired: true
      properties:
        commentsRequired:
          default: false
          description: Whether the requester of the containing object must provide
            comments justifying the request
          example: true
          nullable: true
          type: boolean
        denialCommentsRequired:
          default: false
          description: Whether an approver must provide comments when denying the
            request
          example: true
          nullable: true
          type: boolean
        approvalSchemes:
          description: List describing the steps in approving the request
          items:
            $ref: '#/components/schemas/ApprovalSchemeForRole'
          type: array
      type: object
    RevocabilityForRole:
      example:
        commentsRequired: false
        approvalSchemes:
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        - approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
          approverType: GOVERNANCE_GROUP
        denialCommentsRequired: false
      properties:
        commentsRequired:
          default: false
          description: Whether the requester of the containing object must provide
            comments justifying the request
          example: false
          nullable: true
          type: boolean
        denialCommentsRequired:
          default: false
          description: Whether an approver must provide comments when denying the
            request
          example: false
          nullable: true
          type: boolean
        approvalSchemes:
          description: List describing the steps in approving the revocation request
          items:
            $ref: '#/components/schemas/ApprovalSchemeForRole'
          type: array
      type: object
    RoleAssignmentSourceType:
      description: Type which indicates how a particular Identity obtained a particular
        Role
      enum:
      - ACCESS_REQUEST
      - ROLE_MEMBERSHIP
      example: ACCESS_REQUEST
      type: string
    OwnerReferenceSegments:
      description: The owner of this object.
      example:
        name: support
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      nullable: true
      properties:
        type:
          description: "Owner type. This field must be either left null or set to\
            \ 'IDENTITY' on input, otherwise a 400 Bad Request error will result."
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Identity id
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: "Human-readable display name of the owner. It may be left null\
            \ or omitted in a POST or PATCH. If set, it must match the current value\
            \ of the owner's display name, otherwise a 400 Bad Request error will\
            \ result."
          example: support
          type: string
      type: object
    VisibilityCriteria:
      example:
        expression:
          children: []
          attribute: location
          value:
            type: STRING
            value: Austin
          operator: EQUALS
      properties:
        expression:
          $ref: '#/components/schemas/Expression'
      type: object
    OwnerDto:
      description: Owner's identity.
      example:
        name: Support
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      properties:
        type:
          description: Owner's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Owner's identity ID.
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Owner's display name.
          example: Support
          type: string
      type: object
    SourceClusterDto:
      description: Source cluster.
      properties:
        type:
          description: Source cluster DTO type.
          enum:
          - CLUSTER
          example: CLUSTER
          type: string
        id:
          description: Source cluster ID.
          example: 2c9180847a7fccdd017aa5896f9f4f6f
          type: string
        name:
          description: Source cluster display name.
          example: Training VA
          type: string
      type: object
    ProvisioningConfig:
      description: Specification of a Service Desk integration provisioning configuration.
      properties:
        universalManager:
          default: false
          description: "Specifies whether this configuration is used to manage provisioning\
            \ requests for all sources from the org.  If true, no managedResourceRefs\
            \ are allowed."
          example: true
          readOnly: true
          type: boolean
        managedResourceRefs:
          description: References to sources for the Service Desk integration template.  May
            only be specified if universalManager is false.
          example:
          - type: SOURCE
            id: 2c9180855d191c59015d291ceb051111
            name: My Source 1
          - type: SOURCE
            id: 2c9180855d191c59015d291ceb052222
            name: My Source 2
          items:
            $ref: '#/components/schemas/ProvisioningConfig_managedResourceRefs_inner'
          type: array
        planInitializerScript:
          $ref: '#/components/schemas/ProvisioningConfig_planInitializerScript'
        noProvisioningRequests:
          default: false
          description: Name of an attribute that when true disables the saving of
            ProvisioningRequest objects whenever plans are sent through this integration.
          example: true
          type: boolean
        provisioningRequestExpiration:
          description: "When saving pending requests is enabled, this defines the\
            \ number of hours the request is allowed to live before it is considered\
            \ expired and no longer affects plan compilation."
          example: 7
          format: int32
          type: integer
      type: object
    BeforeProvisioningRuleDto:
      description: Before Provisioning Rule.
      properties:
        type:
          description: Before Provisioning Rule DTO type.
          enum:
          - RULE
          example: RULE
          type: string
        id:
          description: Before Provisioning Rule ID.
          example: 048eb3d55c5a4758bd07dccb87741c78
          type: string
        name:
          description: Rule display name.
          example: Before Provisioning Airtable Rule
          type: string
      type: object
    ExportOptions:
      example:
        includeTypes:
        - TRIGGER_SUBSCRIPTION
        - TRIGGER_SUBSCRIPTION
        objectOptions:
          TRIGGER_SUBSCRIPTION:
            includedIds:
            - be9e116d-08e1-49fc-ab7f-fa585e96c9e4
            includedNames:
            - Test 2
        excludeTypes:
        - SOURCE
        - SOURCE
      properties:
        excludeTypes:
          description: Object type names to be excluded from an sp-config export command.
          items:
            enum:
            - ACCESS_PROFILE
            - ACCESS_REQUEST_CONFIG
            - ATTR_SYNC_SOURCE_CONFIG
            - AUTH_ORG
            - CAMPAIGN_FILTER
            - FORM_DEFINITION
            - GOVERNANCE_GROUP
            - IDENTITY_OBJECT_CONFIG
            - IDENTITY_PROFILE
            - LIFECYCLE_STATE
            - NOTIFICATION_TEMPLATE
            - PASSWORD_POLICY
            - PASSWORD_SYNC_GROUP
            - PUBLIC_IDENTITIES_CONFIG
            - ROLE
            - RULE
            - SEGMENT
            - SERVICE_DESK_INTEGRATION
            - SOD_POLICY
            - SOURCE
            - TAG
            - TRANSFORM
            - TRIGGER_SUBSCRIPTION
            - WORKFLOW
            example: SOURCE
            type: string
          type: array
        includeTypes:
          description: Object type names to be included in an sp-config export command.
            IncludeTypes takes precedence over excludeTypes.
          items:
            enum:
            - ACCESS_PROFILE
            - ACCESS_REQUEST_CONFIG
            - ATTR_SYNC_SOURCE_CONFIG
            - AUTH_ORG
            - CAMPAIGN_FILTER
            - FORM_DEFINITION
            - GOVERNANCE_GROUP
            - IDENTITY_OBJECT_CONFIG
            - IDENTITY_PROFILE
            - LIFECYCLE_STATE
            - NOTIFICATION_TEMPLATE
            - PASSWORD_POLICY
            - PASSWORD_SYNC_GROUP
            - PUBLIC_IDENTITIES_CONFIG
            - ROLE
            - RULE
            - SEGMENT
            - SERVICE_DESK_INTEGRATION
            - SOD_POLICY
            - SOURCE
            - TAG
            - TRANSFORM
            - TRIGGER_SUBSCRIPTION
            - WORKFLOW
            example: TRIGGER_SUBSCRIPTION
            type: string
          type: array
        objectOptions:
          additionalProperties:
            $ref: '#/components/schemas/ObjectExportImportOptions'
          description: Additional options targeting specific objects related to each
            item in the includeTypes field
          example:
            TRIGGER_SUBSCRIPTION:
              includedIds:
              - be9e116d-08e1-49fc-ab7f-fa585e96c9e4
              includedNames:
              - Test 2
          type: object
      type: object
    ConfigObject:
      description: Config export and import format for individual object configurations.
      example:
        self:
          name: HR Active Directory
          id: 2c9180835d191a86015d28455b4b232a
          type: SOURCE
        version: 1
        object:
          key: ""
      properties:
        version:
          description: Current version of configuration object.
          example: 1
          type: integer
        self:
          $ref: '#/components/schemas/SelfImportExportDto'
        object:
          additionalProperties: true
          description: Object details. Format dependant on the object type.
          type: object
      title: Config Object for Export and Import
      type: object
    ObjectExportImportOptions:
      properties:
        includedIds:
          description: Object ids to be included in an import or export.
          items:
            example: be9e116d-08e1-49fc-ab7f-fa585e96c9e4
            type: string
          type: array
        includedNames:
          description: Object names to be included in an import or export.
          items:
            example: Test Object
            type: string
          type: array
      type: object
    SpConfigUrl:
      description: Format of resolver URLs for Object Configurations
      example:
        query: "{}"
        url: ets://trigger-subscriptions/$id
      properties:
        url:
          description: URL for the target object endpoint.
          example: ets://trigger-subscriptions/$id
          type: string
        query:
          description: Any query parameters that are needed for the URL.
          nullable: true
          type: object
          example: null
      title: Resolver URL Format for Object Configuration.
      type: object
    ManagerCorrelationMapping:
      example:
        accountAttribute: manager
        identityAttribute: manager
      properties:
        accountAttribute:
          description: Name of the attribute to use for manager correlation. The value
            found on the account attribute will be used to lookup the manager's identity.
          example: manager
          type: string
        identityAttribute:
          description: Name of the identity attribute to search when trying to find
            a manager using the value from the accountAttribute.
          example: manager
          type: string
      type: object
    SourceFeature:
      description: |-
        Optional features that can be supported by an source.
        * AUTHENTICATE: The source supports pass-through authentication.
        * COMPOSITE: The source supports composite source creation.
        * DIRECT_PERMISSIONS: The source supports returning DirectPermissions.
        * DISCOVER_SCHEMA: The source supports discovering schemas for users and groups.
        * ENABLE The source supports reading if an account is enabled or disabled.
        * MANAGER_LOOKUP: The source supports looking up managers as they are encountered in a feed. This is the opposite of NO_RANDOM_ACCESS.
        * NO_RANDOM_ACCESS: The source does not support random access and the getObject() methods should not be called and expected to perform.
        * PROXY: The source can serve as a proxy for another source. When an source has a proxy, all connector calls made with that source are redirected through the connector for the proxy source.
        * SEARCH
        * TEMPLATE
        * UNLOCK: The source supports reading if an account is locked or unlocked.
        * UNSTRUCTURED_TARGETS: The source supports returning unstructured Targets.
        * SHAREPOINT_TARGET: The source supports returning unstructured Target data for SharePoint. It will be typically used by AD, LDAP sources.
        * PROVISIONING: The source can both read and write accounts. Having this feature implies that the provision() method is implemented. It also means that direct and target permissions can also be provisioned if they can be returned by aggregation.
        * GROUP_PROVISIONING: The source can both read and write groups. Having this feature implies that the provision() method is implemented.
        * SYNC_PROVISIONING: The source can provision accounts synchronously.
        * PASSWORD: The source can provision password changes. Since sources can never read passwords, this is should only be used in conjunction with the PROVISIONING feature.
        * CURRENT_PASSWORD: Some source types support verification of the current password
        * ACCOUNT_ONLY_REQUEST: The source supports requesting accounts without entitlements.
        * ADDITIONAL_ACCOUNT_REQUEST: The source supports requesting additional accounts.
        * NO_AGGREGATION: A source that does not support aggregation.
        * GROUPS_HAVE_MEMBERS: The source models group memberships with a member attribute on the group object rather than a groups attribute on the account object. This effects the implementation of delta account aggregation.
        * NO_PERMISSIONS_PROVISIONING: Indicates that the connector cannot provision direct or target permissions for accounts. When DIRECT_PERMISSIONS and PROVISIONING features are present, it is assumed that the connector can also provision direct permissions. This feature disables that assumption and causes permission request to be converted to work items for accounts.
        * NO_GROUP_PERMISSIONS_PROVISIONING: Indicates that the connector cannot provision direct or target permissions for groups. When DIRECT_PERMISSIONS and PROVISIONING features are present, it is assumed that the connector can also provision direct permissions. This feature disables that assumption and causes permission request to be converted to work items for groups.
        * NO_UNSTRUCTURED_TARGETS_PROVISIONING: This string will be replaced by NO_GROUP_PERMISSIONS_PROVISIONING and NO_PERMISSIONS_PROVISIONING.
        * NO_DIRECT_PERMISSIONS_PROVISIONING: This string will be replaced by NO_GROUP_PERMISSIONS_PROVISIONING and NO_PERMISSIONS_PROVISIONING.
      enum:
      - AUTHENTICATE
      - COMPOSITE
      - DIRECT_PERMISSIONS
      - DISCOVER_SCHEMA
      - ENABLE
      - MANAGER_LOOKUP
      - NO_RANDOM_ACCESS
      - PROXY
      - SEARCH
      - TEMPLATE
      - UNLOCK
      - UNSTRUCTURED_TARGETS
      - SHAREPOINT_TARGET
      - PROVISIONING
      - GROUP_PROVISIONING
      - SYNC_PROVISIONING
      - PASSWORD
      - CURRENT_PASSWORD
      - ACCOUNT_ONLY_REQUEST
      - ADDITIONAL_ACCOUNT_REQUEST
      - NO_AGGREGATION
      - GROUPS_HAVE_MEMBERS
      - NO_PERMISSIONS_PROVISIONING
      - NO_GROUP_PERMISSIONS_PROVISIONING
      - NO_UNSTRUCTURED_TARGETS_PROVISIONING
      - NO_DIRECT_PERMISSIONS_PROVISIONING
      - PREFER_UUID
      example: AUTHENTICATE
      type: string
    AttrSyncSource:
      description: Target source for attribute synchronization.
      example:
        name: HR Active Directory
        id: 2c9180835d191a86015d28455b4b232a
        type: SOURCE
      properties:
        type:
          description: DTO type of target source for attribute synchronization.
          enum:
          - SOURCE
          example: SOURCE
          type: string
        id:
          description: ID of target source for attribute synchronization.
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Human-readable name of target source for attribute synchronization.
          example: HR Active Directory
          type: string
      type: object
    AttrSyncSourceAttributeConfig:
      description: Specification of source attribute sync mapping configuration for
        an identity attribute
      properties:
        name:
          description: Name of the identity attribute
          example: email
          type: string
        displayName:
          description: Display name of the identity attribute
          example: Email
          type: string
        enabled:
          description: Determines whether or not the attribute is enabled for synchronization
          example: true
          type: boolean
        target:
          description: Name of the source account attribute to which the identity
            attribute value will be synchronized if enabled
          example: mail
          type: string
      required:
      - displayName
      - enabled
      - name
      - target
      type: object
    ResourceObject:
      description: Representation of the object which is returned from source connectors.
      example:
        finalUpdate: false
        instance: instance
        incremental: false
        uuid: "{abf7bd9b-68b4-4d21-9b70-870c58ebf844}"
        delete: false
        remove: false
        objectType: account
        incomplete: false
        identity: "CN=Aaron Carr,OU=test1,DC=test2,DC=test"
        previousIdentity: previousIdentity
        name: Aaron Carr
        missing:
        - missFieldOne
        - missFieldTwo
        attributes:
          telephoneNumber: 12-(345)678-9012
          mail: example@test.com
          displayName: Aaron Carr
      properties:
        instance:
          description: Identifier of the specific instance where this object resides.
          readOnly: true
          type: string
        identity:
          description: Native identity of the object in the Source.
          example: "CN=Aaron Carr,OU=test1,DC=test2,DC=test"
          readOnly: true
          type: string
        uuid:
          description: Universal unique identifier of the object in the Source.
          example: "{abf7bd9b-68b4-4d21-9b70-870c58ebf844}"
          readOnly: true
          type: string
        previousIdentity:
          description: Native identity that the object has previously.
          readOnly: true
          type: string
        name:
          description: Display name for this object.
          example: Aaron Carr
          readOnly: true
          type: string
        objectType:
          description: Type of object.
          example: account
          readOnly: true
          type: string
        incomplete:
          description: "A flag indicating that this is an incomplete object. Used\
            \ in special cases where the connector has to return account information\
            \ in several phases and the objects might not have a complete set of all\
            \ account attributes. The attributes in this object will replace the corresponding\
            \ attributes in the Link, but no other Link attributes will be changed."
          example: false
          readOnly: true
          type: boolean
        incremental:
          description: A flag indicating that this is an incremental change object.
            This is similar to incomplete but it also means that the values of any
            multi-valued attributes in this object should be merged with the existing
            values in the Link rather than replacing the existing Link value.
          example: false
          readOnly: true
          type: boolean
        delete:
          description: A flag indicating that this object has been deleted. This is
            set only when doing delta aggregation and the connector supports detection
            of native deletes.
          example: false
          readOnly: true
          type: boolean
        remove:
          description: A flag set indicating that the values in the attributes represent
            things to remove rather than things to add. Setting this implies incremental.
            The values which are always for multi-valued attributes are removed from
            the current values.
          example: false
          readOnly: true
          type: boolean
        missing:
          description: A list of attribute names that are not included in this object.
            This is only used with SMConnector and will only contain "groups".
          example:
          - missFieldOne
          - missFieldTwo
          items:
            type: string
          readOnly: true
          type: array
        attributes:
          description: Attributes of this ResourceObject.
          example:
            telephoneNumber: 12-(345)678-9012
            mail: example@test.com
            displayName: Aaron Carr
          readOnly: true
          type: object
        finalUpdate:
          description: "In Aggregation, for sparse object the count for total accounts\
            \ scanned identities updated is not incremented."
          example: false
          readOnly: true
          type: boolean
      title: Resource Object
      type: object
    FieldDetailsDto:
      example:
        isRequired: false
        transform:
          type: rule
          attributes:
            name: Create Unique LDAP Attribute
        isMultiValued: false
        name: userName
        attributes:
          template: "${firstname}.${lastname}${uniqueCounter}"
          cloudMaxUniqueChecks: "50"
          cloudMaxSize: "20"
          cloudRequired: "true"
        type: string
      properties:
        name:
          description: The name of the attribute.
          example: userName
          type: string
        transform:
          default: {}
          description: The transform to apply to the field
          example:
            type: rule
            attributes:
              name: Create Unique LDAP Attribute
          type: object
        attributes:
          description: Attributes required for the transform
          example:
            template: "${firstname}.${lastname}${uniqueCounter}"
            cloudMaxUniqueChecks: "50"
            cloudMaxSize: "20"
            cloudRequired: "true"
          type: object
        isRequired:
          default: false
          description: Flag indicating whether or not the attribute is required.
          example: false
          readOnly: true
          type: boolean
        type:
          description: The type of the attribute.
          example: string
          type: string
        isMultiValued:
          default: false
          description: Flag indicating whether or not the attribute is multi-valued.
          example: false
          type: boolean
      type: object
    AttributeDefinition:
      properties:
        name:
          description: The name of the attribute.
          example: sAMAccountName
          type: string
        type:
          $ref: '#/components/schemas/AttributeDefinitionType'
        schema:
          $ref: '#/components/schemas/AttributeDefinition_schema'
        description:
          description: A human-readable description of the attribute.
          example: The sAMAccountName attribute
          type: string
        isMulti:
          default: false
          description: Flag indicating whether or not the attribute is multi-valued.
          example: false
          type: boolean
        isEntitlement:
          default: false
          description: Flag indicating whether or not the attribute is an entitlement.
          example: false
          type: boolean
        isGroup:
          default: false
          description: |
            Flag indicating whether or not the attribute represents a group.
            This can only be `true` if `isEntitlement` is also `true` **and** there is a schema defined for the attribute.
          example: false
          type: boolean
      type: object
    SourceSyncPayload:
      example:
        type: SYNCHRONIZE_SOURCE_ATTRIBUTES
        dataJson: "{\"sourceId\":\"2c918083746f642c01746f990884012a\"}"
      properties:
        type:
          description: Payload type.
          example: SYNCHRONIZE_SOURCE_ATTRIBUTES
          type: string
        dataJson:
          description: Payload type.
          example: "{\"sourceId\":\"2c918083746f642c01746f990884012a\"}"
          type: string
      required:
      - dataJson
      - type
      type: object
    TaskStatusMessage:
      description: TaskStatus Message
      example:
        type: INFO
        parameters:
        - name: value
        key: akey
        localizedText:
          locale: An error has occurred!
          message: Error has occurred!
      properties:
        type:
          description: Type of the message
          enum:
          - INFO
          - WARN
          - ERROR
          example: INFO
          type: string
        localizedText:
          $ref: '#/components/schemas/LocalizedMessage'
        key:
          description: Key of the message
          example: akey
          type: string
        parameters:
          description: Message parameters for internationalization
          example:
          - name: value
          items:
            type: object
          type: array
      required:
      - key
      - localizedText
      - parameters
      - type
      type: object
    TaskReturnDetails:
      description: Task return details
      example:
        name: label
        attributeName: identityCount
      properties:
        name:
          description: Display name of the TaskReturnDetails
          example: label
          type: string
        attributeName:
          description: Attribute the TaskReturnDetails is for
          example: identityCount
          type: string
      required:
      - attributeName
      - name
      type: object
    TaggedObjectDto:
      example:
        name: William Wilson
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          description: DTO type
          enum:
          - ACCESS_PROFILE
          - APPLICATION
          - CAMPAIGN
          - ENTITLEMENT
          - IDENTITY
          - ROLE
          - SOD_POLICY
          - SOURCE
          example: IDENTITY
          type: string
        id:
          description: ID of the object this reference applies to
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the object this reference applies
            to
          example: William Wilson
          nullable: true
          type: string
      type: object
    TriggerType:
      description: The type of trigger.
      enum:
      - REQUEST_RESPONSE
      - FIRE_AND_FORGET
      example: FIRE_AND_FORGET
      type: string
    AccessRequestDynamicApprover:
      properties:
        accessRequestId:
          description: |
            The unique ID of the access request object. Can be used with the [access request status endpoint](https://developer.sailpoint.com/idn/api/beta/list-access-request-status) to get the status of the request.
          example: 4b4d982dddff4267ab12f0f1e72b5a6d
          type: string
        requestedFor:
          allOf:
          - $ref: '#/components/schemas/AccessItemRequestedForDto'
        requestedItems:
          description: The access items that are being requested.
          items:
            $ref: '#/components/schemas/AccessRequestDynamicApprover_requestedItems_inner'
          type: array
        requestedBy:
          allOf:
          - $ref: '#/components/schemas/AccessItemRequesterDto'
      required:
      - accessRequestId
      - requestedBy
      - requestedFor
      - requestedItems
      title: Access Request Dynamic Approver
      type: object
    AccessRequestPostApproval:
      properties:
        accessRequestId:
          description: The unique ID of the access request.
          example: 2c91808b6ef1d43e016efba0ce470904
          type: string
        requestedFor:
          allOf:
          - $ref: '#/components/schemas/AccessItemRequestedForDto'
          required:
          - id
          - name
          - type
        requestedItemsStatus:
          description: Details on the outcome of each access item.
          items:
            $ref: '#/components/schemas/AccessRequestPostApproval_requestedItemsStatus_inner'
          type: array
        requestedBy:
          allOf:
          - $ref: '#/components/schemas/AccessItemRequesterDto'
          required:
          - id
          - name
          - type
      required:
      - accessRequestId
      - requestedBy
      - requestedFor
      - requestedItemsStatus
      title: Access Request Post Approval
      type: object
    AccessRequestPreApproval:
      properties:
        accessRequestId:
          description: The unique ID of the access request.
          example: 2c91808b6ef1d43e016efba0ce470904
          type: string
        requestedFor:
          allOf:
          - $ref: '#/components/schemas/AccessItemRequestedForDto'
          required:
          - id
          - name
          - type
        requestedItems:
          description: Details of the access items being requested.
          items:
            $ref: '#/components/schemas/AccessRequestPreApproval_requestedItems_inner'
          type: array
        requestedBy:
          allOf:
          - $ref: '#/components/schemas/AccessItemRequesterDto'
          required:
          - id
          - name
          - type
      required:
      - accessRequestId
      - requestedBy
      - requestedFor
      - requestedItems
      title: Access Request Pre Approval
      type: object
    AccountAggregationCompleted:
      properties:
        source:
          $ref: '#/components/schemas/AccountAggregationCompleted_source'
        status:
          description: The overall status of the aggregation.
          enum:
          - Success
          - Failed
          - Terminated
          example: Success
          type: object
        started:
          description: The date and time when the account aggregation started.
          example: 2020-06-29T22:01:50.474Z
          format: date-time
          type: string
        completed:
          description: The date and time when the account aggregation finished.
          example: 2020-06-29T22:02:04.09Z
          format: date-time
          type: string
        errors:
          description: A list of errors that occurred during the aggregation.
          items:
            description: A descriptive error message.
            example: Accounts unable to be aggregated.
            type: string
          nullable: true
          type: array
        warnings:
          description: A list of warnings that occurred during the aggregation.
          items:
            description: A descriptive warning message.
            example: Account Skipped
            type: string
          nullable: true
          type: array
        stats:
          $ref: '#/components/schemas/AccountAggregationCompleted_stats'
      required:
      - completed
      - errors
      - source
      - started
      - stats
      - status
      - warnings
      title: Account Aggregation Completed
      type: object
    AccountAttributesChanged:
      properties:
        identity:
          $ref: '#/components/schemas/AccountAttributesChanged_identity'
        source:
          $ref: '#/components/schemas/AccountAttributesChanged_source'
        account:
          $ref: '#/components/schemas/AccountAttributesChanged_account'
        changes:
          description: A list of attributes that changed.
          items:
            $ref: '#/components/schemas/AccountAttributesChanged_changes_inner'
          type: array
      required:
      - account
      - changes
      - identity
      - source
      title: Account Attributes Changed
      type: object
    AccountCorrelated:
      properties:
        identity:
          $ref: '#/components/schemas/AccountCorrelated_identity'
        source:
          $ref: '#/components/schemas/AccountCorrelated_source'
        account:
          $ref: '#/components/schemas/AccountCorrelated_account'
        attributes:
          additionalProperties: true
          description: The attributes associated with the account.  Attributes are
            unique per source.
          example:
            sn: doe
            givenName: john
            memberOf:
            - "cn=g1,ou=groups,dc=acme,dc=com"
            - "cn=g2,ou=groups,dc=acme,dc=com"
            - "cn=g3,ou=groups,dc=acme,dc=com"
          type: object
        entitlementCount:
          description: The number of entitlements associated with this account.
          example: 0
          format: int32
          type: integer
      required:
      - account
      - attributes
      - identity
      - source
      title: Account Correlated
      type: object
    AccountsCollectedForAggregation:
      properties:
        source:
          $ref: '#/components/schemas/AccountsCollectedForAggregation_source'
        status:
          description: The overall status of the collection.
          enum:
          - Success
          - Failed
          - Terminated
          example: Success
          type: object
        started:
          description: The date and time when the account collection started.
          example: 2020-06-29T22:01:50.474Z
          format: date-time
          type: string
        completed:
          description: The date and time when the account collection finished.
          example: 2020-06-29T22:02:04.09Z
          format: date-time
          type: string
        errors:
          description: A list of errors that occurred during the collection.
          items:
            description: A descriptive error message.
            example: Unable to collect accounts for aggregation.
            type: string
          nullable: true
          type: array
        warnings:
          description: A list of warnings that occurred during the collection.
          items:
            description: A descriptive warning message.
            example: Account Skipped
            type: string
          nullable: true
          type: array
        stats:
          $ref: '#/components/schemas/AccountsCollectedForAggregation_stats'
      required:
      - completed
      - errors
      - source
      - started
      - stats
      - status
      - warnings
      title: Accounts Collected for Aggregation
      type: object
    AccountUncorrelated:
      properties:
        identity:
          $ref: '#/components/schemas/AccountUncorrelated_identity'
        source:
          $ref: '#/components/schemas/AccountUncorrelated_source'
        account:
          $ref: '#/components/schemas/AccountUncorrelated_account'
        entitlementCount:
          description: The number of entitlements associated with this account.
          example: 0
          format: int32
          type: integer
      required:
      - account
      - identity
      - source
      title: Account Uncorrelated
      type: object
    CampaignActivated:
      properties:
        campaign:
          $ref: '#/components/schemas/CampaignActivated_campaign'
      required:
      - campaign
      title: Campaign Activated
      type: object
    CampaignEnded:
      properties:
        campaign:
          $ref: '#/components/schemas/CampaignEnded_campaign'
      required:
      - campaign
      title: Campaign Ended
      type: object
    CampaignGenerated:
      properties:
        campaign:
          $ref: '#/components/schemas/CampaignGenerated_campaign'
      required:
      - campaign
      title: Campaign Generated
      type: object
    CertificationSignedOff:
      properties:
        certification:
          $ref: '#/components/schemas/CertificationSignedOff_certification'
      required:
      - certification
      title: Certification Signed Off
      type: object
    IdentityAttributesChanged:
      properties:
        identity:
          $ref: '#/components/schemas/IdentityAttributesChanged_identity'
        changes:
          description: A list of one or more identity attributes that changed on the
            identity.
          items:
            $ref: '#/components/schemas/IdentityAttributesChanged_changes_inner'
          type: array
      required:
      - changes
      - identity
      title: Identity Attributes Changed
      type: object
    IdentityCreated:
      properties:
        identity:
          $ref: '#/components/schemas/IdentityCreated_identity'
        attributes:
          additionalProperties: true
          description: The attributes assigned to the identity. Attributes are determined
            by the identity profile.
          example:
            firstname: John
          type: object
      required:
      - attributes
      - identity
      title: Identity Created
      type: object
    IdentityDeleted:
      properties:
        identity:
          $ref: '#/components/schemas/IdentityDeleted_identity'
        attributes:
          additionalProperties: true
          description: The attributes assigned to the identity. Attributes are determined
            by the identity profile.
          example:
            firstname: John
          type: object
      required:
      - attributes
      - identity
      title: Identity Deleted
      type: object
    ProvisioningCompleted:
      properties:
        trackingNumber:
          description: The reference number of the provisioning request. Useful for
            tracking status in the Account Activity search interface.
          example: 4b4d982dddff4267ab12f0f1e72b5a6d
          type: string
        sources:
          description: One or more sources that the provisioning transaction(s) were
            done against.  Sources are comma separated.
          example: "Corp AD, Corp LDAP, Corp Salesforce"
          type: string
        action:
          description: Origin of where the provisioning request came from.
          example: IdentityRefresh
          nullable: true
          type: string
        errors:
          description: A list of any accumulated error messages that occurred during
            provisioning.
          items:
            example: Connector AD Failed
            type: string
          nullable: true
          type: array
        warnings:
          description: A list of any accumulated warning messages that occurred during
            provisioning.
          items:
            example: Notification Skipped due to invalid email
            type: string
          nullable: true
          type: array
        recipient:
          $ref: '#/components/schemas/ProvisioningCompleted_recipient'
        requester:
          $ref: '#/components/schemas/ProvisioningCompleted_requester'
        accountRequests:
          description: A list of provisioning instructions to perform on an account-by-account
            basis.
          items:
            $ref: '#/components/schemas/ProvisioningCompleted_accountRequests_inner'
          type: array
      required:
      - accountRequests
      - recipient
      - sources
      - trackingNumber
      title: Provisioning Completed
      type: object
    SavedSearchComplete:
      properties:
        fileName:
          description: A name for the report file.
          example: Modified.zip
          type: string
        ownerEmail:
          description: The email address of the identity that owns the saved search.
          example: test@sailpoint.com
          type: string
        ownerName:
          description: The name of the identity that owns the saved search.
          example: Cloud Support
          type: string
        query:
          description: The search query that was used to generate the report.
          example: "modified:[now-7y/d TO now]"
          type: string
        searchName:
          description: The name of the saved search.
          example: Modified Activity
          type: string
        searchResults:
          $ref: '#/components/schemas/SavedSearchComplete_searchResults'
        signedS3Url:
          description: The Amazon S3 URL to download the report from.
          example: https://sptcbu-org-data-useast1.s3.amazonaws.com/arsenal-john/reports/Events%20Export.2020-05-06%2018%2759%20GMT.3e580592-86e4-4953-8aea-49e6ef20a086.zip?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20200506T185919Z&X-Amz-SignedHeaders=host&X-Amz-Expires=899&X-Amz-Credential=AKIAV5E54XOGTS4Q4L7A%2F20200506%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=2e732bb97a12a1fd8a215613e3c31fcdae8ba1fb6a25916843ab5b51d2ddefbc
          type: string
      required:
      - fileName
      - ownerEmail
      - ownerName
      - query
      - searchName
      - searchResults
      - signedS3Url
      title: Saved Search Complete
      type: object
    SourceAccountCreated:
      $ref: '#/components/schemas/beta\schemas\trigger\example-input\SourceAccount'
    beta\schemas\trigger\example-input\SourceAccount:
      properties:
        uuid:
          description: Source unique identifier for the identity. UUID is generated
            by the source system.
          example: b7264868-7201-415f-9118-b581d431c688
          type: string
        id:
          description: SailPoint generated unique identifier.
          example: ee769173319b41d19ccec35ba52f237b
          type: string
        nativeIdentifier:
          description: Unique ID of the account on the source.
          example: E009
          type: string
        sourceId:
          description: The ID of the source.
          example: 2c918082814e693601816e09471b29b6
          type: string
        sourceName:
          description: The name of the source.
          example: Active Directory
          type: string
        identityId:
          description: The ID of the identity that is correlated with this account.
          example: ee769173319b41d19ccec6c235423237b
          type: string
        identityName:
          description: The name of the identity that is correlated with this account.
          example: john.doe
          type: string
        attributes:
          additionalProperties: true
          description: The attributes of the account. The contents of attributes depends
            on the account schema for the source.
          example:
            firstname: John
            lastname: Doe
            email: john.doe@gmail.com
            department: Sales
            displayName: John Doe
            created: 2020-04-27T16:48:33.597Z
            employeeNumber: E009
            uid: E009
            inactive: "true"
            phone: null
            identificationNumber: E009
          type: object
      required:
      - attributes
      - id
      - identityId
      - identityName
      - nativeIdentifier
      - sourceId
      - sourceName
      type: object
    SourceAccountDeleted:
      $ref: '#/components/schemas/beta\schemas\trigger\example-input\SourceAccount'
    SourceAccountUpdated:
      $ref: '#/components/schemas/beta\schemas\trigger\example-input\SourceAccount'
    SourceCreated:
      properties:
        id:
          description: The unique ID of the source.
          example: 2c9180866166b5b0016167c32ef31a66
          type: string
        name:
          description: Human friendly name of the source.
          example: Test source
          type: string
        type:
          description: The connection type.
          example: DIRECT_CONNECT
          type: string
        created:
          description: The date and time the source was created.
          example: 2021-03-29T22:01:50.474Z
          format: date-time
          type: string
        connector:
          description: The connector type used to connect to the source.
          example: active-directory
          type: string
        actor:
          $ref: '#/components/schemas/SourceCreated_actor'
      required:
      - actor
      - connector
      - created
      - id
      - name
      - type
      title: Source Created
      type: object
    SourceDeleted:
      properties:
        id:
          description: The unique ID of the source.
          example: 2c9180866166b5b0016167c32ef31a66
          type: string
        name:
          description: Human friendly name of the source.
          example: Test source
          type: string
        type:
          description: The connection type.
          example: DIRECT_CONNECT
          type: string
        deleted:
          description: The date and time the source was deleted.
          example: 2021-03-29T22:01:50.474Z
          format: date-time
          type: string
        connector:
          description: The connector type used to connect to the source.
          example: active-directory
          type: string
        actor:
          $ref: '#/components/schemas/SourceDeleted_actor'
      required:
      - actor
      - connector
      - deleted
      - id
      - name
      - type
      title: Source Deleted
      type: object
    SourceUpdated:
      properties:
        id:
          description: The unique ID of the source.
          example: 2c9180866166b5b0016167c32ef31a66
          type: string
        name:
          description: The user friendly name of the source.
          example: Corporate Active Directory
          type: string
        type:
          description: The connection type of the source.
          example: DIRECT_CONNECT
          type: string
        modified:
          description: The date and time the source was modified.
          example: 2021-03-29T22:01:50.474Z
          format: date-time
          type: string
        connector:
          description: The connector type used to connect to the source.
          example: active-directory
          type: string
        actor:
          $ref: '#/components/schemas/SourceUpdated_actor'
      required:
      - actor
      - connector
      - id
      - modified
      - name
      - type
      title: Source Updated
      type: object
    VAClusterStatusChangeEvent:
      properties:
        created:
          description: The date and time the status change occurred.
          example: 2020-06-29T22:01:50.474Z
          format: date-time
          type: string
        type:
          description: The type of the object that initiated this event.
          enum:
          - SOURCE
          - CLUSTER
          example: CLUSTER
          type: object
        application:
          $ref: '#/components/schemas/VAClusterStatusChangeEvent_application'
        healthCheckResult:
          $ref: '#/components/schemas/VAClusterStatusChangeEvent_healthCheckResult'
        previousHealthCheckResult:
          $ref: '#/components/schemas/VAClusterStatusChangeEvent_previousHealthCheckResult'
      required:
      - application
      - created
      - healthCheckResult
      - previousHealthCheckResult
      - type
      title: VA Cluster Status Change Event
      type: object
    AccessRequestDynamicApprover_1:
      nullable: true
      properties:
        id:
          description: The unique ID of the identity to add to the approver list for
            the access request.
          example: 2c91808b6ef1d43e016efba0ce470906
          type: string
        name:
          description: The name of the identity to add to the approver list for the
            access request.
          example: Adam Adams
          type: string
        type:
          description: The type of object being referenced.
          enum:
          - IDENTITY
          - GOVERNANCE_GROUP
          example: IDENTITY
          type: object
      required:
      - id
      - name
      - type
      title: Access Request Dynamic Approver
      type: object
    AccessRequestPreApproval_1:
      properties:
        approved:
          description: Whether or not to approve the access request.
          example: false
          type: boolean
        comment:
          description: A comment about the decision to approve or deny the request.
          example: "This access should be denied, because this will cause an SOD violation."
          type: string
        approver:
          description: The name of the entity that approved or denied the request.
          example: AcmeCorpExternalIntegration
          type: string
      required:
      - approved
      - approver
      - comment
      title: Access Request Pre Approval
      type: object
    SubscriptionType:
      description: "Subscription type. **NOTE** If type is EVENTBRIDGE, then eventBridgeConfig\
        \ is required. If type is HTTP, then httpConfig is required."
      enum:
      - HTTP
      - EVENTBRIDGE
      - INLINE
      - SCRIPT
      - WORKFLOW
      example: HTTP
      type: string
    HttpConfig:
      example:
        bearerTokenAuthConfig:
          bearerToken: bearerToken
        httpAuthenticationType: BASIC_AUTH
        httpDispatchMode: SYNC
        basicAuthConfig:
          password: password
          userName: user@example.com
        url: https://www.example.com
      properties:
        url:
          description: URL of the external/custom integration.
          example: https://www.example.com
          type: string
        httpDispatchMode:
          $ref: '#/components/schemas/HttpDispatchMode'
        httpAuthenticationType:
          $ref: '#/components/schemas/HttpAuthenticationType'
        basicAuthConfig:
          $ref: '#/components/schemas/BasicAuthConfig'
        bearerTokenAuthConfig:
          $ref: '#/components/schemas/BearerTokenAuthConfig'
      required:
      - httpDispatchMode
      - url
      type: object
    EventBridgeConfig:
      example:
        awsRegion: us-west-1
        awsAccount: "123456789012"
      properties:
        awsAccount:
          description: AWS Account Number (12-digit number) that has the EventBridge
            Partner Event Source Resource.
          example: "123456789012"
          type: string
        awsRegion:
          description: AWS Region that has the EventBridge Partner Event Source Resource.
            See https://docs.aws.amazon.com/general/latest/gr/rande.html for a full
            list of available values.
          example: us-west-1
          type: string
      required:
      - awsAccount
      - awsRegion
      type: object
    InvocationStatusType:
      description: |-
        Defines the Invocation type.

        **TEST** The trigger was invocated as a test, either via the test subscription button in the UI or via the start test invocation API.

        **REAL_TIME** The trigger subscription is live and was invocated by a real event in IdentityNow.
      enum:
      - TEST
      - REAL_TIME
      example: TEST
      type: string
    StartInvocationInput:
      example:
        input:
          identityId: 201327fda1c44704ac01181e963d463c
        triggerId: idn:access-requested
        contentJson:
          workflowId: 1234
      properties:
        triggerId:
          description: Trigger ID
          example: idn:access-requested
          type: string
        input:
          description: Trigger input payload. Its schema is defined in the trigger
            definition.
          example:
            identityId: 201327fda1c44704ac01181e963d463c
          type: object
        contentJson:
          description: JSON map of invocation metadata
          example:
            workflowId: 1234
          type: object
      type: object
    CompleteInvocationInput:
      example:
        output:
          approved: false
        localizedError:
          locale: An error has occurred!
          message: Error has occurred!
      properties:
        localizedError:
          $ref: '#/components/schemas/LocalizedMessage'
        output:
          description: Trigger output that completed the invocation. Its schema is
            defined in the trigger definition.
          example:
            approved: false
          type: object
      type: object
    ViolationOwnerAssignmentConfig:
      example:
        assignmentRule: MANAGER
        ownerRef: null
      properties:
        assignmentRule:
          description: |-
            Details about the violations owner.
            MANAGER - identity's manager
            STATIC - Governance Group or Identity
          enum:
          - MANAGER
          - STATIC
          - null
          example: MANAGER
          nullable: true
          type: string
        ownerRef:
          $ref: '#/components/schemas/ViolationOwnerAssignmentConfig_ownerRef'
      type: object
    ConflictingAccessCriteria:
      properties:
        leftCriteria:
          $ref: '#/components/schemas/AccessCriteria'
        rightCriteria:
          $ref: '#/components/schemas/AccessCriteria'
      type: object
    Schedule_1:
      description: The schedule information.
      example:
        hours: null
        timeZoneId: America/Chicago
        days: null
        expiration: 2018-06-25T20:22:28.104Z
        type: WEEKLY
      properties:
        type:
          $ref: '#/components/schemas/ScheduleType'
        days:
          $ref: '#/components/schemas/Schedule_1_days'
        hours:
          $ref: '#/components/schemas/Schedule_1_hours'
        expiration:
          description: A date-time in ISO-8601 format
          example: 2018-06-25T20:22:28.104Z
          format: date-time
          nullable: true
          type: string
        timeZoneId:
          description: "The canonical TZ identifier the schedule will run in (ex.\
            \ America/New_York).  If no timezone is specified, the org's default timezone\
            \ is used."
          example: America/Chicago
          nullable: true
          type: string
      required:
      - hours
      - type
      type: object
    SodRecipient:
      description: SOD policy recipient.
      example:
        name: Michael Michaels
        id: 2c7180a46faadee4016fb4e018c20642
        type: IDENTITY
      properties:
        type:
          description: SOD policy recipient DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: SOD policy recipient's identity ID.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: SOD policy recipient's display name.
          example: Michael Michaels
          type: string
      type: object
    SodReportResultDto:
      description: SOD policy violation report result.
      properties:
        type:
          description: SOD policy violation report result DTO type.
          enum:
          - REPORT_RESULT
          example: REPORT_RESULT
          type: string
        id:
          description: SOD policy violation report result ID.
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Human-readable name of the SOD policy violation report result.
          example: SOD Policy 1 Violation
          type: string
      type: object
    ViolationContext:
      example:
        conflictingAccessCriteria:
          leftCriteria:
            criteriaList:
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a66
              existing: true
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a67
              existing: false
          rightCriteria:
            criteriaList:
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a66
              existing: true
            - type: ENTITLEMENT
              id: 2c9180866166b5b0016167c32ef31a67
              existing: false
        policy:
          type: ENTITLEMENT
      properties:
        policy:
          $ref: '#/components/schemas/ViolationContext_policy'
        conflictingAccessCriteria:
          $ref: '#/components/schemas/ExceptionAccessCriteria'
      type: object
    WorkflowDefinition:
      description: The map of steps that the workflow will execute.
      example:
        start: Send Email Test
        steps:
          Send Email:
            actionId: sp:send-email
            attributes:
              body: This is a test
              from: sailpoint@sailpoint.com
              recipientId.$: $.identity.id
              subject: test
            nextStep: success
            selectResult: null
            type: ACTION
          success:
            type: success
      properties:
        start:
          description: The name of the starting step.
          example: Send Email Test
          type: string
        steps:
          additionalProperties: true
          description: One or more step objects that comprise this workflow.  Please
            see the Workflow documentation to see the JSON schema for each step type.
          example:
            Send Email:
              actionId: sp:send-email
              attributes:
                body: This is a test
                from: sailpoint@sailpoint.com
                recipientId.$: $.identity.id
                subject: test
              nextStep: success
              selectResult: null
              type: ACTION
            success:
              type: success
          type: object
      type: object
    WorkflowTrigger:
      description: The trigger that starts the workflow
      example:
        attributes: "{}"
        type: EVENT
      properties:
        type:
          description: The trigger type
          enum:
          - EVENT
          - EXTERNAL
          - SCHEDULED
          example: EVENT
          type: string
        attributes:
          description: Workflow Trigger Attributes.
          type: object
      required:
      - attributes
      - type
      type: object
    WorkflowLibraryFormFields:
      example:
        helpText: The name to give to this certification campaign.
        name: name
        label: Campaign Name
        type: text
        required: false
      properties:
        helpText:
          description: Describes the form field in the UI
          example: The name to give to this certification campaign.
          type: string
        label:
          description: A human readable name for this form field in the UI
          example: Campaign Name
          type: string
        name:
          description: The name of the input attribute
          example: name
          type: string
        required:
          description: Denotes if this field is a required attribute
          example: false
          type: boolean
        type:
          description: The type of the form field
          enum:
          - text
          - textarea
          - boolean
          - email
          - url
          - number
          - json
          - checkbox
          - jsonpath
          - select
          - multiType
          - duration
          - toggle
          - identityPicker
          - governanceGroupPicker
          - string
          - object
          - array
          - secret
          - keyValuePairs
          - emailPicker
          - advancedToggle
          example: text
          nullable: true
          type: object
      type: object
    WorkgroupDeleteItem:
      properties:
        id:
          description: Id of the Governance Group.
          example: 464ae7bf791e49fdb74606a2e4a89635
          type: string
        status:
          description: |2

            The HTTP response status code returned for an individual Governance Group that is requested for deletion during a bulk delete operation.

            > 204   -  Governance Group deleted successfully.

            > 409   - Governance Group is in use,hence can not be deleted.

            > 404   - Governance Group not found.
          example: "204"
          type: string
        description:
          description: |
            Human readable status description and containing additional context information about success or failures etc.
          example: |2

            > Governance Group deleted successfully.

            > Unable to delete Governance Group f80bba83-98c4-4ec2-81c8-373c00e9663b because it is in use.

            > Referenced Governance Group 2b711763-ed35-42a2-a80c-8f1ce0dc4a7f was not found.
          type: string
      required:
      - id
      - status
      type: object
    ConnectedObject:
      example:
        name: Employee-database-read-write
        description: Collection of entitlements to read/write the employee database.
        id: 2c91808568c529c60168cca6f90c1313
        type: ACCESS_PROFILE
      properties:
        type:
          $ref: '#/components/schemas/ConnectedObjectType'
        id:
          description: ID of the object to which this reference applies
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable name of Connected object
          example: Employee-database-read-write
          type: string
        description:
          description: Description of the Connected object.
          example: Collection of entitlements to read/write the employee database.
          type: string
      type: object
    WorkgroupMemberAddItem:
      properties:
        id:
          description: Identifier of identity in bulk member add request.
          example: 464ae7bf791e49fdb74606a2e4a89635
          type: string
        status:
          description: |2

            The HTTP response status code returned for an individual member that is requested for addition during a bulk add operation.

             The HTTP response status code returned for an individual Governance Group is requested for deletion.


            > 201   - Identity is added into Governance Group members list.

            > 409   - Identity is already member of  Governance Group.
          example: "201"
          type: string
        description:
          description: |
            Human readable status description and containing additional context information about success or failures etc.
          example: |2

            > Identity is added into Governance Group members list.

            > Unable to set Membership of Identity "3244d5f2d04447498520f54c6789ae33" to Governance Group "f80bba83-98c4-4ec2-81c8-373c00e9663b"; the relationship already exists.
          type: string
      required:
      - id
      - status
      type: object
    WorkgroupMemberDeleteItem:
      properties:
        id:
          description: Identifier of identity in bulk member add /remove request.
          example: 464ae7bf791e49fdb74606a2e4a89635
          type: string
        status:
          description: |2

            The HTTP response status code returned for an individual  member that is requested for deletion during a bulk delete operation.

            > 204   - Identity is removed from Governance Group members list.

            > 404   - Identity is not member of Governance Group.
          example: "204"
          type: string
        description:
          description: |
            Human readable status description and containing additional context information about success or failures etc.
          example: |2

            > Identity deleted from Governance Group members list.

            > Referenced Governance Group Member with Identity Id "bc3a744678534eb78a8002ee2085df64" was not found.
          type: string
      required:
      - id
      - status
      type: object
    FormCondition:
      description: Represent a form conditional.
      example:
        ruleOperator: AND
        effects:
        - config:
            defaultValueLabel: Access to Remove
            element: "8110662963316867"
          effectType: HIDE
        - config:
            defaultValueLabel: Access to Remove
            element: "8110662963316867"
          effectType: HIDE
        rules:
        - sourceType: ELEMENT
          valueType: STRING
          source: department
          value: Engineering
          operator: EQ
        - sourceType: ELEMENT
          valueType: STRING
          source: department
          value: Engineering
          operator: EQ
      properties:
        ruleOperator:
          description: |-
            ConditionRuleLogicalOperatorType value.
            AND ConditionRuleLogicalOperatorTypeAnd
            OR ConditionRuleLogicalOperatorTypeOr
          enum:
          - AND
          - OR
          example: AND
          type: string
          x-go-enum-desc: |-
            AND ConditionRuleLogicalOperatorTypeAnd
            OR ConditionRuleLogicalOperatorTypeOr
          x-go-name: RuleOperator
        rules:
          description: List of rules.
          items:
            $ref: '#/components/schemas/ConditionRule'
          type: array
          x-go-name: Rules
        effects:
          description: List of effects.
          items:
            $ref: '#/components/schemas/ConditionEffect'
          type: array
          x-go-name: Effects
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormElement:
      example:
        id: 00000000-0000-0000-0000-000000000000
        validations:
        - validationType: REQUIRED
        elementType: TEXT
        config:
          label: Department
        key: department
      properties:
        id:
          description: Form element identifier.
          example: 00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: ID
        elementType:
          description: "FormElementType value. \nTEXT FormElementTypeText\nTOGGLE\
            \ FormElementTypeToggle\nTEXTAREA FormElementTypeTextArea\nHIDDEN FormElementTypeHidden\n\
            PHONE FormElementTypePhone\nEMAIL FormElementTypeEmail\nSELECT FormElementTypeSelect\n\
            DATE FormElementTypeDate\nSECTION FormElementTypeSection\nCOLUMNS FormElementTypeColumns"
          enum:
          - TEXT
          - TOGGLE
          - TEXTAREA
          - HIDDEN
          - PHONE
          - EMAIL
          - SELECT
          - DATE
          - SECTION
          - COLUMNS
          example: TEXT
          type: string
          x-go-name: ElementType
        config:
          additionalProperties:
            type: object
          description: Config object.
          example:
            label: Department
          type: object
          x-go-name: Config
          x-go-enum-desc: |-
            TEXT FormElementTypeText
            TOGGLE FormElementTypeToggle
            TEXTAREA FormElementTypeTextArea
            HIDDEN FormElementTypeHidden
            PHONE FormElementTypePhone
            EMAIL FormElementTypeEmail
            SELECT FormElementTypeSelect
            DATE FormElementTypeDate
            SECTION FormElementTypeSection
            COLUMNS FormElementTypeColumnsn
        key:
          description: Technical key.
          example: department
          type: string
          x-go-name: Key
        validations:
          description: Set of FormElementValidation items.
          example:
          - validationType: REQUIRED
          type: object
          x-go-package: github.com/sailpoint/sp-forms/domain
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormDefinitionInput:
      example:
        description: "A single dynamic scalar value (i.e. number, string, date, etc.)\
          \ that can be passed into the form for use in conditional logic"
        id: 00000000-0000-0000-0000-000000000000
        label: input1
        type: STRING
      properties:
        id:
          description: Unique identifier for the form input.
          example: 00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: ID
        type:
          description: |-
            FormDefinitionInputType value.
            STRING FormDefinitionInputTypeString
          enum:
          - STRING
          example: STRING
          type: string
          x-go-enum-desc: STRING FormDefinitionInputTypeString
          x-go-name: Type
        label:
          description: Name for the form input.
          example: input1
          type: string
          x-go-name: Label
        description:
          description: Form input's description.
          example: "A single dynamic scalar value (i.e. number, string, date, etc.)\
            \ that can be passed into the form for use in conditional logic"
          type: string
          x-go-name: Description
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormOwner:
      example:
        id: 00000000-0000-0000-0000-000000000000
        type: IDENTITY
      properties:
        type:
          description: |-
            FormOwnerType value.
            IDENTITY FormOwnerTypeIdentity
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
          x-go-enum-desc: IDENTITY FormOwnerTypeIdentity
          x-go-name: Type
        id:
          description: Unique identifier of the form's owner.
          example: 00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: ID
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormUsedBy:
      example:
        id: 00000000-0000-0000-0000-000000000000
        type: WORKFLOW
      properties:
        type:
          description: "FormUsedByType value. \nWORKFLOW FormUsedByTypeWorkflow\n\
            SOURCE FormUsedByTypeSource"
          enum:
          - WORKFLOW
          - SOURCE
          example: WORKFLOW
          type: string
          x-go-enum-desc: |-
            WORKFLOW FormUsedByTypeWorkflow
            SOURCE FormUsedByTypeSource
          x-go-name: Type
        id:
          description: Unique identifier of the system using the form.
          example: 00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: ID
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    Operation:
      additionalProperties:
        properties: {}
        type: object
      title: "Operation is a single JSON-Patch step, such as a single 'add' operation."
      type: object
      x-go-package: github.com/evanphx/json-patch
    FormElementDynamicDataSource:
      example:
        config:
          indices:
          - identities
          query: '*'
          aggregationBucketField: attributes.cloudStatus.exact
          objectType: IDENTITY
        dataSourceType: STATIC
      properties:
        config:
          $ref: '#/components/schemas/FormElementDynamicDataSourceConfig'
        dataSourceType:
          description: |-
            DataSourceType is a FormElementDataSourceType value
            STATIC FormElementDataSourceTypeStatic
            INTERNAL FormElementDataSourceTypeInternal
            SEARCH FormElementDataSourceTypeSearch
          enum:
          - STATIC
          - INTERNAL
          - SEARCH
          example: STATIC
          type: string
          x-go-enum-desc: |-
            STATIC FormElementDataSourceTypeStatic
            INTERNAL FormElementDataSourceTypeInternal
            SEARCH FormElementDataSourceTypeSearch
          x-go-name: DataSourceType
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormElementDataSourceConfigOptions:
      properties:
        label:
          description: Label is the main label to display to the user when selecting
            this option
          example: regression-test-access-request-07c55dd6-3056-430a-86b5-fccc395bb6c5
          type: string
          x-go-name: Label
        subLabel:
          description: SubLabel is the sub label to display below the label in diminutive
            styling to help describe or identify this option
          example: ""
          type: string
          x-go-name: SubLabel
        value:
          description: Value is the value to save as an entry when the user selects
            this option
          example: e96674448eba4ca1ba04eee999a8f3cd
          type: string
          x-go-name: Value
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormInstanceCreatedBy:
      example:
        id: 00000000-0000-0000-0000-000000000000
        type: WORKFLOW_EXECUTION
      properties:
        id:
          description: ID is a unique identifier
          example: 00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: ID
        type:
          description: |-
            Type is a form instance created by type enum value
            WORKFLOW_EXECUTION FormInstanceCreatedByTypeWorkflowExecution
            SOURCE FormInstanceCreatedByTypeSource
          enum:
          - WORKFLOW_EXECUTION
          - SOURCE
          example: WORKFLOW_EXECUTION
          type: string
          x-go-enum-desc: |-
            WORKFLOW_EXECUTION FormInstanceCreatedByTypeWorkflowExecution
            SOURCE FormInstanceCreatedByTypeSource
          x-go-name: Type
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormInstanceRecipient:
      example:
        id: 00000000-0000-0000-0000-000000000000
        type: IDENTITY
      properties:
        id:
          description: ID is a unique identifier
          example: 00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: ID
        type:
          description: |-
            Type is a FormInstanceRecipientType value
            IDENTITY FormInstanceRecipientIdentity
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
          x-go-enum-desc: IDENTITY FormInstanceRecipientIdentity
          x-go-name: Type
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormError:
      example:
        messages:
        - localeOrigin: DEFAULT
          text: This is an error
          locale: en-US
        - localeOrigin: DEFAULT
          text: This is an error
          locale: en-US
        value: Engineering
        key: department
      properties:
        key:
          description: Key is the technical key
          example: department
          type: string
          x-go-name: Key
        messages:
          description: Messages is a list of web.ErrorMessage items
          items:
            $ref: '#/components/schemas/ErrorMessage'
          type: array
          x-go-name: Messages
        value:
          description: Value is the value associated with a Key
          example: Engineering
          type: object
          x-go-name: Value
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    PreDefinedSelectOption:
      description: PreDefinedSelectOption pre-defined select options
      example: IDENTITY
      type: string
      x-go-package: github.com/sailpoint/sp-forms/domain
    AccessItemRef:
      example:
        id: 2c938083633d259901633d2623ec0375
        type: ENTITLEMENT
      properties:
        id:
          description: The ID of the access item for which to retrieve the recommendation
          example: 2c938083633d259901633d2623ec0375
          type: string
        type:
          description: The type of the access item.
          enum:
          - ENTITLEMENT
          - ACCESS_PROFILE
          - ROLE
          example: ENTITLEMENT
          type: string
      type: object
    RecommenderCalculations:
      example:
        identityId: 2c91808457d8f3ab0157e3e62cb4213c
        entitlementId: 2c91809050db617d0150e0bf3215385e
        overallWeightedScore: 0.8008281904610115
        featureWeightedScores:
          key: 6.027456183070403
        recommendation: "YES"
        threshold: 1.4658129805029452
        identityAttributes:
          key:
            value: value
        featureValues:
          feature: department
          numerator: 14
          denominator: 14
      properties:
        identityId:
          description: The ID of the identity
          example: 2c91808457d8f3ab0157e3e62cb4213c
          type: string
        entitlementId:
          description: The entitlement ID
          example: 2c91809050db617d0150e0bf3215385e
          type: string
        recommendation:
          description: The actual recommendation
          example: "YES"
          type: string
        overallWeightedScore:
          description: The overall weighted score
          type: number
        featureWeightedScores:
          additionalProperties:
            type: number
          description: The weighted score of each individual feature
          type: object
        threshold:
          description: The configured value against which the overallWeightedScore
            is compared
          type: number
        identityAttributes:
          additionalProperties:
            $ref: '#/components/schemas/RecommenderCalculations_identityAttributes_value'
          description: The values for your configured features
          type: object
        featureValues:
          $ref: '#/components/schemas/FeatureValueDto'
      type: object
    AccessProfileApprovalScheme:
      example:
        approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
        approverType: GOVERNANCE_GROUP
      properties:
        approverType:
          description: |-
            Describes the individual or group that is responsible for an approval step. Values are as follows.
            **APP_OWNER**: The owner of the Application

            **OWNER**: Owner of the associated Access Profile or Role

            **SOURCE_OWNER**: Owner of the Source associated with an Access Profile

            **MANAGER**: Manager of the Identity making the request

            **GOVERNANCE_GROUP**: A Governance Group, the ID of which is specified by the **approverId** field
          enum:
          - APP_OWNER
          - OWNER
          - SOURCE_OWNER
          - MANAGER
          - GOVERNANCE_GROUP
          example: GOVERNANCE_GROUP
          type: string
        approverId:
          description: "Id of the specific approver, used only when approverType is\
            \ GOVERNANCE_GROUP"
          example: 46c79819-a69f-49a2-becb-12c971ae66c6
          nullable: true
          type: string
      type: object
    ProvisioningCriteriaOperation:
      description: Supported operations on ProvisioningCriteria
      enum:
      - EQUALS
      - NOT_EQUALS
      - CONTAINS
      - HAS
      - AND
      - OR
      example: EQUALS
      type: string
    ProvisioningCriteriaLevel2:
      description: Defines matching criteria for an Account to be provisioned with
        a specific Access Profile
      example:
        children:
        - attribute: email
          operation: EQUALS
          value: carlee.cert1c9f9b6fd@mailinator.com
        - attribute: email
          operation: EQUALS
          value: carlee.cert1c9f9b6fd@mailinator.com
        attribute: email
        operation: EQUALS
        value: carlee.cert1c9f9b6fd@mailinator.com
      properties:
        operation:
          $ref: '#/components/schemas/ProvisioningCriteriaOperation'
        attribute:
          description: "Name of the Account attribute to be tested. If **operation**\
            \ is one of EQUALS, NOT_EQUALS, CONTAINS, or HAS, this field is required.\
            \ Otherwise, specifying it is an error."
          example: email
          nullable: true
          type: string
        value:
          description: "String value to test the Account attribute w/r/t the specified\
            \ operation. If the operation is one of EQUALS, NOT_EQUALS, or CONTAINS,\
            \ this field is required. Otherwise, specifying it is an error. If the\
            \ Attribute is not String-typed, it will be converted to the appropriate\
            \ type."
          example: carlee.cert1c9f9b6fd@mailinator.com
          nullable: true
          type: string
        children:
          description: "Array of child criteria. Required if the operation is AND\
            \ or OR, otherwise it must be left null. A maximum of three levels of\
            \ criteria are supported, including leaf nodes."
          items:
            $ref: '#/components/schemas/ProvisioningCriteriaLevel3'
          nullable: true
          type: array
          example: null
      type: object
    LocaleOrigin:
      description: "An indicator of how the locale was selected. *DEFAULT* means the\
        \ locale is the system default. *REQUEST* means the locale was selected from\
        \ the request context (i.e., best match based on the *Accept-Language* header).\
        \ Additional values may be added in the future without notice."
      enum:
      - DEFAULT
      - REQUEST
      example: DEFAULT
      type: string
    AccessItemReviewedBy:
      description: Identity who reviewed the access item request.
      example:
        name: Allen Albertson
        id: 2c3780a46faadee4016fb4e018c20652
        type: IDENTITY
      properties:
        type:
          description: DTO type of identity who reviewed the access item request.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of identity who reviewed the access item request.
          example: 2c3780a46faadee4016fb4e018c20652
          type: string
        name:
          description: Human-readable display name of identity who reviewed the access
            item request.
          example: Allen Albertson
          type: string
      type: object
    ManualWorkItemState:
      description: |-
        Indicates the state of the request processing for this item:
        * PENDING: The request for this item is awaiting processing.
        * APPROVED: The request for this item has been approved.
        * REJECTED: The request for this item was rejected.
        * EXPIRED: The request for this item expired with no action taken.
        * CANCELLED: The request for this item was cancelled with no user action.
        * ARCHIVED: The request for this item has been archived after completion.
      enum:
      - PENDING
      - APPROVED
      - REJECTED
      - EXPIRED
      - CANCELLED
      - ARCHIVED
      example: PENDING
      type: string
    ApprovalScheme:
      description: Describes the individual or group that is responsible for an approval
        step.
      enum:
      - APP_OWNER
      - SOURCE_OWNER
      - MANAGER
      - ROLE_OWNER
      - ACCESS_PROFILE_OWNER
      - ENTITLEMENT_OWNER
      - GOVERNANCE_GROUP
      example: MANAGER
      type: string
    SodViolationCheckResult:
      description: The inner object representing the completed SOD Violation check
      example:
        clientMetadata:
          requestedAppName: test-app
          requestedAppId: 2c91808f7892918f0178b78da4a305a1
        violationContexts:
        - conflictingAccessCriteria:
            leftCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
            rightCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
          policy:
            name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
        - conflictingAccessCriteria:
            leftCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
            rightCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
          policy:
            name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
        violatedPolicies:
        - name: Business SOD Policy
          id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: SOD_POLICY
        - name: Business SOD Policy
          id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: SOD_POLICY
        message:
          localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessageDto'
        clientMetadata:
          additionalProperties:
            type: string
          description: Arbitrary key-value pairs. They will never be processed by
            the IdentityNow system but will be returned on completion of the violation
            check.
          example:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          type: object
        violationContexts:
          items:
            $ref: '#/components/schemas/SodViolationContext'
          type: array
        violatedPolicies:
          description: A list of the SOD policies that were violated.
          items:
            $ref: '#/components/schemas/SodPolicyDto'
          type: array
      type: object
    ReassignmentType:
      description: "The approval reassignment type. \n* MANUAL_REASSIGNMENT: An approval\
        \ with this reassignment type has been specifically reassigned by the approval\
        \ task's owner, from their queue to someone else's. \n* AUTOMATIC_REASSIGNMENT:\
        \ An approval with this reassignment type has been automatically reassigned\
        \ from another approver's queue, according to that approver's reassignment\
        \ configuration. The approver's reassignment configuration may be set up to\
        \ automatically reassign approval tasks for a defined (or possibly open-ended)\
        \ period of time.\n* AUTO_ESCALATION: An approval with this reassignment type\
        \ has been automatically reassigned from another approver's queue, according\
        \ to the request's escalation configuration. For more information about escalation\
        \ configuration, refer to [Setting Global Reminders and Escalation Policies](https://documentation.sailpoint.com/saas/help/requests/config_emails.html).\n\
        * SELF_REVIEW_DELEGATION: An approval with this reassignment type has been\
        \ automatically reassigned by the system to prevent self-review. This helps\
        \ prevent situations like a requester being tasked with approving their own\
        \ request. For more information about preventing self-review, refer to [Self-review\
        \ Prevention](https://documentation.sailpoint.com/saas/help/users/work_reassignment.html#self-review-prevention)\
        \ and [Preventing Self-approval](https://documentation.sailpoint.com/saas/help/requests/config_ap_roles.html#preventing-self-approval)."
      enum:
      - MANUAL_REASSIGNMENT
      - AUTOMATIC_REASSIGNMENT
      - AUTO_ESCALATION
      - SELF_REVIEW_DELEGATION
      example: AUTOMATIC_REASSIGNMENT
      type: string
    SodViolationCheckResult_1:
      description: The inner object representing the completed SOD Violation check
      example:
        clientMetadata:
          requestedAppName: test-app
          requestedAppId: 2c91808f7892918f0178b78da4a305a1
        violationContexts:
        - conflictingAccessCriteria:
            leftCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
            rightCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
          policy:
            name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
        - conflictingAccessCriteria:
            leftCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
            rightCriteria:
              criteriaList:
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
              - existing: true
                name: My HR Entitlement
                id: 2c918085771e9d3301773b3cb66f6398
                type: IDENTITY
          policy:
            name: Business SOD Policy
            id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
            type: SOD_POLICY
        violatedPolicies:
        - name: Business SOD Policy
          id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: SOD_POLICY
        - name: Business SOD Policy
          id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: SOD_POLICY
        message:
          localeOrigin: DEFAULT
          text: The request was syntactically correct but its content is semantically
            invalid.
          locale: en-US
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessageDto'
        clientMetadata:
          additionalProperties:
            type: string
          description: Arbitrary key-value pairs. They will never be processed by
            the IdentityNow system but will be returned on completion of the violation
            check.
          example:
            requestedAppName: test-app
            requestedAppId: 2c91808f7892918f0178b78da4a305a1
          type: object
        violationContexts:
          items:
            $ref: '#/components/schemas/SodViolationContext_1'
          type: array
        violatedPolicies:
          description: A list of the Policies that were violated.
          items:
            $ref: '#/components/schemas/SodPolicyDto'
          type: array
      type: object
    ProvisioningState:
      description: Provisioning state of an account activity item
      enum:
      - PENDING
      - FINISHED
      - UNVERIFIABLE
      - COMMITED
      - FAILED
      - RETRY
      example: PENDING
      type: string
    AccountActivityItemOperation:
      description: Represents an operation in an account activity item
      enum:
      - ADD
      - CREATE
      - MODIFY
      - DELETE
      - DISABLE
      - ENABLE
      - UNLOCK
      - LOCK
      - REMOVE
      example: ADD
      type: string
    AccountRequestInfo:
      description: "If an account activity item is associated with an access request,\
        \ captures details of that request."
      example:
        requestedObjectId: 2c91808563ef85690164001c31140c0c
        requestedObjectName: Treasury Analyst
        requestedObjectType: ACCESS_PROFILE
      nullable: true
      properties:
        requestedObjectId:
          description: Id of requested object
          example: 2c91808563ef85690164001c31140c0c
          type: string
        requestedObjectName:
          description: Human-readable name of requested object
          example: Treasury Analyst
          type: string
        requestedObjectType:
          $ref: '#/components/schemas/RequestableObjectType'
      type: object
    EntitlementApprovalScheme:
      example:
        approverId: e3eab852-8315-467f-9de7-70eda97f63c8
        approverType: GOVERNANCE_GROUP
      properties:
        approverType:
          description: |-
            Describes the individual or group that is responsible for an approval step. Values are as follows.

            **ENTITLEMENT_OWNER**: Owner of the associated Entitlement

            **SOURCE_OWNER**: Owner of the associated Source

            **MANAGER**: Manager of the Identity for whom the request is being made

            **GOVERNANCE_GROUP**: A Governance Group, the ID of which is specified by the **approverId** field
          enum:
          - ENTITLEMENT_OWNER
          - SOURCE_OWNER
          - MANAGER
          - GOVERNANCE_GROUP
          example: GOVERNANCE_GROUP
          type: string
        approverId:
          description: "Id of the specific approver, used only when approverType is\
            \ GOVERNANCE_GROUP"
          example: e3eab852-8315-467f-9de7-70eda97f63c8
          nullable: true
          type: string
      type: object
    CommonAccessType:
      description: The type of access item.
      enum:
      - ACCESS_PROFILE
      - ROLE
      type: string
    AccessRequestItemResponse:
      properties:
        operation:
          description: the access request item operation
          example: Add
          type: string
        accessItemType:
          description: the access item type
          example: role
          type: string
        name:
          description: the name of access request item
          example: Role-1
          type: string
        decision:
          description: the final decision for the access request
          enum:
          - APPROVED
          - REJECTED
          example: APPROVED
          type: string
        description:
          description: the description of access request item
          example: The role descrition
          type: string
        sourceId:
          description: the source id
          example: 8a80828f643d484f01643e14202e206f
          type: string
        sourceName:
          description: the source Name
          example: Source1
          type: string
        approvalInfos:
          example:
          - name: John Snow
            id: 8a80828f643d484f01643e14202e2000
            status: Approved
          items:
            $ref: '#/components/schemas/ApprovalInfoResponse'
          type: array
      type: object
    BaseCommonDto_1:
      properties:
        id:
          description: System-generated unique ID of the Object
          example: id12345
          readOnly: true
          type: string
        name:
          description: Name of the Object
          example: aName
          type: string
        created:
          description: Creation date of the Object
          example: 2015-05-28T14:07:17Z
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Last modification date of the Object
          example: 2015-05-28T14:07:17Z
          format: date-time
          readOnly: true
          type: string
      required:
      - name
      type: object
    IdentityAttributeConfig_1:
      description: Defines all the identity attribute mapping configurations. This
        defines how to generate or collect data for each identity attributes in identity
        refresh process.
      properties:
        enabled:
          default: false
          description: The backend will only promote values if the profile/mapping
            is enabled.
          example: true
          type: boolean
        attributeTransforms:
          items:
            $ref: '#/components/schemas/IdentityAttributeTransform_1'
          type: array
      type: object
    IdentityExceptionReportReference_1:
      nullable: true
      properties:
        taskResultId:
          description: The id of the task result.
          example: 2b838de9-db9b-abcf-e646-d4f274ad4238
          format: uuid
          type: string
        reportName:
          description: The name of the report.
          example: My annual report
          type: string
      type: object
    TransformDefinition:
      example:
        attributes:
          attributeName: e-mail
          sourceName: MySource
          sourceId: 2c9180877a826e68017a8c0b03da1a53
        type: accountAttribute
      properties:
        type:
          description: The type of the transform definition.
          example: accountAttribute
          type: string
        attributes:
          additionalProperties: true
          description: Arbitrary key-value pairs to store any metadata for the object
          example:
            attributeName: e-mail
            sourceName: MySource
            sourceId: 2c9180877a826e68017a8c0b03da1a53
          nullable: true
          type: object
      type: object
    DtoType:
      description: An enumeration of the types of DTOs supported within the IdentityNow
        infrastructure.
      enum:
      - ACCOUNT_CORRELATION_CONFIG
      - ACCESS_PROFILE
      - ACCESS_REQUEST_APPROVAL
      - ACCOUNT
      - APPLICATION
      - CAMPAIGN
      - CAMPAIGN_FILTER
      - CERTIFICATION
      - CLUSTER
      - CONNECTOR_SCHEMA
      - ENTITLEMENT
      - GOVERNANCE_GROUP
      - IDENTITY
      - IDENTITY_PROFILE
      - IDENTITY_REQUEST
      - LIFECYCLE_STATE
      - PASSWORD_POLICY
      - ROLE
      - RULE
      - SOD_POLICY
      - SOURCE
      - TAG
      - TAG_CATEGORY
      - TASK_RESULT
      - REPORT_RESULT
      - SOD_VIOLATION
      - ACCOUNT_ACTIVITY
      - WORKGROUP
      example: IDENTITY
      type: string
    NonEmployeeSourceLiteWithSchemaAttributes:
      allOf:
      - $ref: '#/components/schemas/NonEmployeeSourceLite'
      - properties:
          schemaAttributes:
            description: List of schema attributes associated with this non-employee
              source.
            items:
              $ref: '#/components/schemas/NonEmployeeSchemaAttribute'
            type: array
        type: object
    ManagedClusterQueue:
      description: Managed Cluster key pair for Cluster
      example:
        name: megapod-useast1-denali-lwt-cluster-1533
        region: us-east-1
      properties:
        name:
          description: ManagedCluster queue name
          example: megapod-useast1-denali-lwt-cluster-1533
          type: string
        region:
          description: ManagedCluster queue aws region
          example: us-east-1
          type: string
      type: object
    ReassignmentTypeEnum:
      description: Enum list containing types of Reassignment that can be found in
        the evaluate response.
      enum:
      - "MANUAL_REASSIGNMENT,"
      - "AUTOMATIC_REASSIGNMENT,"
      - "AUTO_ESCALATION,"
      - SELF_REVIEW_DELEGATION
      example: AUTOMATIC_REASSIGNMENT
      type: string
    RoleMiningSessionScopingMethod:
      description: The scoping method used in the current role mining session.
      enum:
      - MANUAL
      - AUTO_RM
      example: MANUAL
      type: string
    RoleMembershipSelectorType:
      description: |-
        This enum characterizes the type of a Role's membership selector. Only the following two are fully supported:

        STANDARD: Indicates that Role membership is defined in terms of a criteria expression

        IDENTITY_LIST: Indicates that Role membership is conferred on the specific identities listed
      enum:
      - STANDARD
      - IDENTITY_LIST
      example: IDENTITY_LIST
      type: string
    RoleCriteriaLevel1:
      description: Defines STANDARD type Role membership
      example:
        stringValue: carlee.cert1c9f9b6fd@mailinator.com
        children:
        - stringValue: carlee.cert1c9f9b6fd@mailinator.com
          children:
          - stringValue: carlee.cert1c9f9b6fd@mailinator.com
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          - stringValue: carlee.cert1c9f9b6fd@mailinator.com
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          operation: EQUALS
          key:
            sourceId: 2c9180867427f3a301745aec18211519
            property: attribute.email
            type: ACCOUNT
        - stringValue: carlee.cert1c9f9b6fd@mailinator.com
          children:
          - stringValue: carlee.cert1c9f9b6fd@mailinator.com
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          - stringValue: carlee.cert1c9f9b6fd@mailinator.com
            operation: EQUALS
            key:
              sourceId: 2c9180867427f3a301745aec18211519
              property: attribute.email
              type: ACCOUNT
          operation: EQUALS
          key:
            sourceId: 2c9180867427f3a301745aec18211519
            property: attribute.email
            type: ACCOUNT
        operation: EQUALS
        key:
          sourceId: 2c9180867427f3a301745aec18211519
          property: attribute.email
          type: ACCOUNT
      nullable: true
      properties:
        operation:
          $ref: '#/components/schemas/RoleCriteriaOperation'
        key:
          $ref: '#/components/schemas/RoleCriteriaKey'
        stringValue:
          description: "String value to test the Identity attribute, Account attribute,\
            \ or Entitlement specified in the key w/r/t the specified operation. If\
            \ this criteria is a leaf node, that is, if the operation is one of EQUALS,\
            \ NOT_EQUALS, CONTAINS, STARTS_WITH, or ENDS_WITH, this field is required.\
            \ Otherwise, specifying it is an error."
          example: carlee.cert1c9f9b6fd@mailinator.com
          nullable: true
          type: string
        children:
          description: "Array of child criteria. Required if the operation is AND\
            \ or OR, otherwise it must be left null. A maximum of three levels of\
            \ criteria are supported, including leaf nodes. Additionally, AND nodes\
            \ can only be children or OR nodes and vice-versa."
          items:
            $ref: '#/components/schemas/RoleCriteriaLevel2'
          nullable: true
          type: array
      type: object
    RoleMembershipIdentity:
      description: A reference to an Identity in an IDENTITY_LIST role membership
        criteria.
      example:
        aliasName: t.edison
        name: Thomas Edison
        id: 2c9180a46faadee4016fb4e018c20639
        type: IDENTITY
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: Identity id
          example: 2c9180a46faadee4016fb4e018c20639
          type: string
        name:
          description: Human-readable display name of the Identity.
          example: Thomas Edison
          nullable: true
          type: string
        aliasName:
          description: User name of the Identity
          example: t.edison
          nullable: true
          type: string
      type: object
    ApprovalSchemeForRole:
      example:
        approverId: 46c79819-a69f-49a2-becb-12c971ae66c6
        approverType: GOVERNANCE_GROUP
      properties:
        approverType:
          description: |-
            Describes the individual or group that is responsible for an approval step. Values are as follows.

            **OWNER**: Owner of the associated Role

            **MANAGER**: Manager of the Identity making the request

            **GOVERNANCE_GROUP**: A Governance Group, the ID of which is specified by the **approverId** field
          enum:
          - OWNER
          - MANAGER
          - GOVERNANCE_GROUP
          example: GOVERNANCE_GROUP
          type: string
        approverId:
          description: "Id of the specific approver, used only when approverType is\
            \ GOVERNANCE_GROUP"
          example: 46c79819-a69f-49a2-becb-12c971ae66c6
          nullable: true
          type: string
      type: object
    Expression:
      example:
        children: []
        attribute: location
        value:
          type: STRING
          value: Austin
        operator: EQUALS
      properties:
        operator:
          description: Operator for the expression
          enum:
          - AND
          - EQUALS
          example: EQUALS
          type: string
        attribute:
          description: Name for the attribute
          example: location
          type: string
        value:
          $ref: '#/components/schemas/Value'
        children:
          description: List of expressions
          example: []
          items:
            $ref: '#/components/schemas/Value'
          type: array
      type: object
    ServiceDeskSource:
      description: Source for Service Desk integration template.
      properties:
        type:
          description: DTO type of source for service desk integration template.
          enum:
          - SOURCE
          example: SOURCE
          type: string
        id:
          description: ID of source for service desk integration template.
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Human-readable name of source for service desk integration
            template.
          example: HR Active Directory
          type: string
      type: object
    AttributeDefinitionType:
      description: The underlying type of the value which an AttributeDefinition represents.
      enum:
      - STRING
      - LONG
      - INT
      - BOOLEAN
      example: STRING
      type: string
    LocalizedMessage:
      description: Localized error message to indicate a failed invocation or error
        if any.
      example:
        locale: An error has occurred!
        message: Error has occurred!
      properties:
        locale:
          description: Message locale
          example: An error has occurred!
          type: string
        message:
          description: Message text
          example: Error has occurred!
          type: string
      required:
      - locale
      - message
      type: object
    AccessItemApproverDto:
      description: Identity who approved the access item request.
      properties:
        type:
          description: DTO type of identity who approved the access item request.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of identity who approved the access item request.
          example: 2c3780a46faadee4016fb4e018c20652
          type: string
        name:
          description: Human-readable display name of identity who approved the access
            item request.
          example: Allen Albertson
          type: string
      type: object
    CertificationDto:
      properties:
        campaignRef:
          $ref: '#/components/schemas/CampaignReference'
        phase:
          $ref: '#/components/schemas/CertificationPhase'
        due:
          description: The due date of the certification.
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          type: string
        signed:
          description: The date the reviewer signed off on the certification.
          example: 2018-10-19T13:49:37.385Z
          format: date-time
          type: string
        reviewer:
          $ref: '#/components/schemas/Reviewer'
        reassignment:
          $ref: '#/components/schemas/Reassignment'
        hasErrors:
          description: Indicates it the certification has any errors.
          example: false
          type: boolean
        errorMessage:
          description: A message indicating what the error is.
          example: The certification has an error
          nullable: true
          type: string
        completed:
          description: Indicates if all certification decisions have been made.
          example: false
          type: boolean
        decisionsMade:
          description: The number of approve/revoke/acknowledge decisions that have
            been made by the reviewer.
          example: 20
          format: int32
          type: integer
        decisionsTotal:
          description: The total number of approve/revoke/acknowledge decisions for
            the certification.
          example: 40
          format: int32
          type: integer
        entitiesCompleted:
          description: "The number of entities (identities, access profiles, roles,\
            \ etc.) for which all decisions have been made and are complete."
          example: 5
          format: int32
          type: integer
        entitiesTotal:
          description: "The total number of entities (identities, access profiles,\
            \ roles, etc.) in the certification, both complete and incomplete."
          example: 10
          format: int32
          type: integer
      required:
      - campaignOwner
      - campaignRef
      - completed
      - decisionsMade
      - decisionsTotal
      - due
      - entitiesCompleted
      - entitiesTotal
      - hasErrors
      - phase
      - reviewer
      - signed
      type: object
    HttpDispatchMode:
      description: "HTTP response modes, i.e. SYNC, ASYNC, or DYNAMIC."
      enum:
      - SYNC
      - ASYNC
      - DYNAMIC
      example: SYNC
      type: string
    HttpAuthenticationType:
      default: NO_AUTH
      description: |-
        Defines the HTTP Authentication type. Additional values may be added in the future.

        If *NO_AUTH* is selected, no extra information will be in HttpConfig.

        If *BASIC_AUTH* is selected, HttpConfig will include BasicAuthConfig with Username and Password as strings.

        If *BEARER_TOKEN* is selected, HttpConfig will include BearerTokenAuthConfig with Token as string.
      enum:
      - NO_AUTH
      - BASIC_AUTH
      - BEARER_TOKEN
      example: BASIC_AUTH
      type: string
    BasicAuthConfig:
      description: Config required if BASIC_AUTH is used.
      example:
        password: password
        userName: user@example.com
      nullable: true
      properties:
        userName:
          description: The username to authenticate.
          example: user@example.com
          type: string
        password:
          description: "The password to authenticate. On response, this field is set\
            \ to null as to not return secrets."
          nullable: true
          type: string
          example: null
      type: object
    BearerTokenAuthConfig:
      description: "Config required if BEARER_TOKEN authentication is used. On response,\
        \ this field is set to null as to not return secrets."
      example:
        bearerToken: bearerToken
      nullable: true
      properties:
        bearerToken:
          description: Bearer token
          nullable: true
          type: string
          example: null
      type: object
    AccessCriteria:
      properties:
        name:
          description: Business name for the access construct list
          example: money-in
          type: string
        criteriaList:
          description: List of criteria.  There is a min of 1 and max of 50 items
            in the list.
          example:
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a66
            name: Administrator
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a67
            name: Administrator
          items:
            $ref: '#/components/schemas/AccessCriteria_criteriaList_inner'
          type: array
      type: object
    ScheduleType:
      description: |
        Enum representing the currently supported schedule types.

        Additional values may be added in the future without notice.
      enum:
      - DAILY
      - WEEKLY
      - MONTHLY
      - CALENDAR
      example: WEEKLY
      type: string
    Selector:
      properties:
        type:
          $ref: '#/components/schemas/SelectorType'
        values:
          description: |
            The selected values.
          example:
          - MON
          - WED
          items:
            type: string
          type: array
        interval:
          description: |
            The selected interval for RANGE selectors.
          example: 3
          format: int32
          nullable: true
          type: integer
      required:
      - type
      - values
      type: object
    DateTime:
      description: A date-time in ISO-8601 format
      example: 2018-06-25T20:22:28.104Z
      format: date-time
      nullable: true
      type: string
    SodPolicyDto:
      description: SOD policy.
      example:
        name: Business SOD Policy
        id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
        type: SOD_POLICY
      properties:
        type:
          description: SOD policy DTO type.
          enum:
          - SOD_POLICY
          example: SOD_POLICY
          type: string
        id:
          description: SOD policy ID.
          example: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: string
        name:
          description: SOD policy display name.
          example: Business SOD Policy
          type: string
      type: object
    ExceptionAccessCriteria:
      example:
        leftCriteria:
          criteriaList:
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a66
            existing: true
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a67
            existing: false
        rightCriteria:
          criteriaList:
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a66
            existing: true
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a67
            existing: false
      properties:
        leftCriteria:
          $ref: '#/components/schemas/ExceptionCriteria'
        rightCriteria:
          $ref: '#/components/schemas/ExceptionCriteria'
      type: object
    ConnectedObjectType:
      description: "An enumeration of the types of Objects associated with a Governance\
        \ Group. Supported object types are ACCESS_PROFILE, ROLE, SOD_POLICY and SOURCE."
      enum:
      - ACCESS_PROFILE
      - ROLE
      - SOD_POLICY
      - SOURCE
      example: ACCESS_PROFILE
      type: string
    ConditionRule:
      example:
        sourceType: ELEMENT
        valueType: STRING
        source: department
        value: Engineering
        operator: EQ
      properties:
        sourceType:
          description: |-
            Defines the type of object being selected. It will be either a reference to a form input (by input name) or a form element (by technical key).
            INPUT ConditionRuleSourceTypeInput
            ELEMENT ConditionRuleSourceTypeElement
          enum:
          - INPUT
          - ELEMENT
          example: ELEMENT
          type: string
          x-go-enum-desc: |-
            INPUT ConditionRuleSourceTypeInput
            ELEMENT ConditionRuleSourceTypeElement
          x-go-name: SourceType
        source:
          description: |-
            Source - if the sourceType is ConditionRuleSourceTypeInput, the source type is the name of the form input to accept. However, if the sourceType is ConditionRuleSourceTypeElement,
            the source is the name of a technical key of an element to retrieve its value.
          example: department
          type: string
          x-go-name: Source
        operator:
          description: |-
            ConditionRuleComparisonOperatorType value.
            EQ ConditionRuleComparisonOperatorTypeEquals  This comparison operator compares the source and target for equality.
            NE ConditionRuleComparisonOperatorTypeNotEquals  This comparison operator compares the source and target for inequality.
            CO ConditionRuleComparisonOperatorTypeContains  This comparison operator searches the source to see whether it contains the value.
            NOT_CO ConditionRuleComparisonOperatorTypeNotContains
            IN ConditionRuleComparisonOperatorTypeIncludes  This comparison operator searches the source if it equals any of the values.
            NOT_IN ConditionRuleComparisonOperatorTypeNotIncludes
            EM ConditionRuleComparisonOperatorTypeEmpty
            NOT_EM ConditionRuleComparisonOperatorTypeNotEmpty
            SW ConditionRuleComparisonOperatorTypeStartsWith  Checks whether a string starts with another substring of the same string. This operator is case-sensitive.
            NOT_SW ConditionRuleComparisonOperatorTypeNotStartsWith
            EW ConditionRuleComparisonOperatorTypeEndsWith  Checks whether a string ends with another substring of the same string. This operator is case-sensitive.
            NOT_EW ConditionRuleComparisonOperatorTypeNotEndsWith
          enum:
          - EQ
          - NE
          - CO
          - NOT_CO
          - IN
          - NOT_IN
          - EM
          - NOT_EM
          - SW
          - NOT_SW
          - EW
          - NOT_EW
          example: EQ
          type: string
          x-go-enum-desc: |-
            EQ ConditionRuleComparisonOperatorTypeEquals  This comparison operator compares the source and target for equality.
            NE ConditionRuleComparisonOperatorTypeNotEquals  This comparison operator compares the source and target for inequality.
            CO ConditionRuleComparisonOperatorTypeContains  This comparison operator searches the source to see whether it contains the value.
            NOT_CO ConditionRuleComparisonOperatorTypeNotContains
            IN ConditionRuleComparisonOperatorTypeIncludes  This comparison operator searches the source if it equals any of the values.
            NOT_IN ConditionRuleComparisonOperatorTypeNotIncludes
            EM ConditionRuleComparisonOperatorTypeEmpty
            NOT_EM ConditionRuleComparisonOperatorTypeNotEmpty
            SW ConditionRuleComparisonOperatorTypeStartsWith  Checks whether a string starts with another substring of the same string. This operator is case-sensitive.
            NOT_SW ConditionRuleComparisonOperatorTypeNotStartsWith
            EW ConditionRuleComparisonOperatorTypeEndsWith  Checks whether a string ends with another substring of the same string. This operator is case-sensitive.
            NOT_EW ConditionRuleComparisonOperatorTypeNotEndsWith
          x-go-name: Operator
        valueType:
          description: |-
            ConditionRuleValueType type.
            STRING ConditionRuleValueTypeString  This value is a static string.
            STRING_LIST ConditionRuleValueTypeStringList  This value is an array of string values.
            INPUT ConditionRuleValueTypeInput  This value is a reference to a form input.
            ELEMENT ConditionRuleValueTypeElement  This value is a reference to a form element (by technical key).
            LIST ConditionRuleValueTypeList
            BOOLEAN ConditionRuleValueTypeBoolean
          enum:
          - STRING
          - STRING_LIST
          - INPUT
          - ELEMENT
          - LIST
          - BOOLEAN
          example: STRING
          type: string
          x-go-enum-desc: |-
            STRING ConditionRuleValueTypeString  This value is a static string.
            STRING_LIST ConditionRuleValueTypeStringList   This value is an array of string values.
            INPUT ConditionRuleValueTypeInput  This value is a reference to a form input.
            ELEMENT ConditionRuleValueTypeElement  This value is a reference to a form element (by technical key).
            LIST ConditionRuleValueTypeList
            BOOLEAN ConditionRuleValueTypeBoolean
          x-go-name: ValueType
        value:
          description: Based on the ValueType.
          example: Engineering
          type: object
          x-go-name: Value
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    ConditionEffect:
      description: Effect produced by a condition.
      example:
        config:
          defaultValueLabel: Access to Remove
          element: "8110662963316867"
        effectType: HIDE
      properties:
        effectType:
          description: |-
            Type of effect to perform when the conditions are evaluated for this logic block.
            HIDE ConditionEffectTypeHide  Disables validations.
            SHOW ConditionEffectTypeShow  Enables validations.
            DISABLE ConditionEffectTypeDisable  Disables validations.
            ENABLE ConditionEffectTypeEnable  Enables validations.
            REQUIRE ConditionEffectTypeRequire
            OPTIONAL ConditionEffectTypeOptional
            SUBMIT_MESSAGE ConditionEffectTypeSubmitMessage
            SUBMIT_NOTIFICATION ConditionEffectTypeSubmitNotification
            SET_DEFAULT_VALUE ConditionEffectTypeSetDefaultValue  This value is ignored on purpose.
          enum:
          - HIDE
          - SHOW
          - DISABLE
          - ENABLE
          - REQUIRE
          - OPTIONAL
          - SUBMIT_MESSAGE
          - SUBMIT_NOTIFICATION
          - SET_DEFAULT_VALUE
          example: HIDE
          type: string
          x-go-enum-desc: |-
            HIDE ConditionEffectTypeHide  Disables validations.
            SHOW ConditionEffectTypeShow  Enables validations.
            DISABLE ConditionEffectTypeDisable  Disables validations.
            ENABLE ConditionEffectTypeEnable  Enables validations.
            REQUIRE ConditionEffectTypeRequire
            OPTIONAL ConditionEffectTypeOptional
            SUBMIT_MESSAGE ConditionEffectTypeSubmitMessage
            SUBMIT_NOTIFICATION ConditionEffectTypeSubmitNotification
            SET_DEFAULT_VALUE ConditionEffectTypeSetDefaultValue  This value is ignored on purpose.
          x-go-name: EffectType
        config:
          $ref: '#/components/schemas/ConditionEffect_config'
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormElementValidationsSet:
      description: Set of FormElementValidation items.
      example:
      - validationType: REQUIRED
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FormElementDynamicDataSourceConfig:
      example:
        indices:
        - identities
        query: '*'
        aggregationBucketField: attributes.cloudStatus.exact
        objectType: IDENTITY
      properties:
        aggregationBucketField:
          description: AggregationBucketField is the aggregation bucket field name
          example: attributes.cloudStatus.exact
          type: string
          x-go-name: AggregationBucketField
        indices:
          description: Indices is a list of indices to use
          example:
          - identities
          items:
            enum:
            - accessprofiles
            - accountactivities
            - entitlements
            - identities
            - events
            - roles
            - '*'
            type: string
            x-go-enum-desc: |-
              accessprofiles SearchIndexAccessProfiles
              accountactivities SearchIndexAccountActivities
              entitlements SearchIndexEntitlements
              identities SearchIndexIdentities
              events SearchIndexEvents
              roles SearchIndexRoles
              * SearchIndexWildcard
          type: array
          x-go-name: Indices
        objectType:
          description: |-
            ObjectType is a PreDefinedSelectOption value
            IDENTITY PreDefinedSelectOptionIdentity
            ACCESS_PROFILE PreDefinedSelectOptionAccessProfile
            SOURCES PreDefinedSelectOptionSources
            ROLE PreDefinedSelectOptionRole
            ENTITLEMENT PreDefinedSelectOptionEntitlement
          enum:
          - IDENTITY
          - ACCESS_PROFILE
          - SOURCES
          - ROLE
          - ENTITLEMENT
          example: IDENTITY
          type: string
          x-go-enum-desc: |-
            IDENTITY PreDefinedSelectOptionIdentity
            ACCESS_PROFILE PreDefinedSelectOptionAccessProfile
            SOURCES PreDefinedSelectOptionSources
            ROLE PreDefinedSelectOptionRole
            ENTITLEMENT PreDefinedSelectOptionEntitlement
          x-go-name: ObjectType
        query:
          description: Query is a text
          example: '*'
          type: string
          x-go-name: Query
      type: object
      x-go-package: github.com/sailpoint/sp-forms/domain
    FeatureValueDto:
      example:
        feature: department
        numerator: 14
        denominator: 14
      properties:
        feature:
          description: The type of feature
          example: department
          type: string
        numerator:
          description: The number of identities that have access to the feature
          example: 14
          format: int32
          type: integer
        denominator:
          description: The number of identities with the corresponding feature
          example: 14
          format: int32
          type: integer
      type: object
    ProvisioningCriteriaLevel3:
      description: Defines matching criteria for an Account to be provisioned with
        a specific Access Profile
      example:
        attribute: email
        operation: EQUALS
        value: carlee.cert1c9f9b6fd@mailinator.com
      properties:
        operation:
          $ref: '#/components/schemas/ProvisioningCriteriaOperation'
        attribute:
          description: "Name of the Account attribute to be tested. If **operation**\
            \ is one of EQUALS, NOT_EQUALS, CONTAINS, or HAS, this field is required.\
            \ Otherwise, specifying it is an error."
          example: email
          nullable: true
          type: string
        value:
          description: "String value to test the Account attribute w/r/t the specified\
            \ operation. If the operation is one of EQUALS, NOT_EQUALS, or CONTAINS,\
            \ this field is required. Otherwise, specifying it is an error. If the\
            \ Attribute is not String-typed, it will be converted to the appropriate\
            \ type."
          example: carlee.cert1c9f9b6fd@mailinator.com
          type: string
      type: object
    SodViolationContext:
      description: The contextual information of the violated criteria
      example:
        conflictingAccessCriteria:
          leftCriteria:
            criteriaList:
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
          rightCriteria:
            criteriaList:
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
        policy:
          name: Business SOD Policy
          id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: SOD_POLICY
      properties:
        policy:
          $ref: '#/components/schemas/SodPolicyDto'
        conflictingAccessCriteria:
          $ref: '#/components/schemas/SodViolationContext_conflictingAccessCriteria'
      type: object
    SodViolationContext_1:
      description: The contextual information of the violated criteria.
      example:
        conflictingAccessCriteria:
          leftCriteria:
            criteriaList:
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
          rightCriteria:
            criteriaList:
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
            - existing: true
              name: My HR Entitlement
              id: 2c918085771e9d3301773b3cb66f6398
              type: IDENTITY
        policy:
          name: Business SOD Policy
          id: 0f11f2a4-7c94-4bf3-a2bd-742580fe3bde
          type: SOD_POLICY
      properties:
        policy:
          $ref: '#/components/schemas/SodPolicyDto'
        conflictingAccessCriteria:
          $ref: '#/components/schemas/SodViolationContext_1_conflictingAccessCriteria'
      type: object
    ApprovalInfoResponse:
      properties:
        id:
          description: the id of approver
          example: 8a80828f643d484f01643e14202e2000
          type: string
        name:
          description: the name of approver
          example: John Snow
          type: string
        status:
          description: the status of the approval request
          example: Approved
          type: string
      type: object
    IdentityAttributeTransform_1:
      description: Defines a transformation definition for an identity attribute.
      properties:
        identityAttributeName:
          description: Name of the identity attribute.
          example: email
          type: string
        transformDefinition:
          $ref: '#/components/schemas/TransformDefinition_1'
      type: object
    RoleCriteriaOperation:
      description: An operation
      enum:
      - EQUALS
      - NOT_EQUALS
      - CONTAINS
      - STARTS_WITH
      - ENDS_WITH
      - AND
      - OR
      example: EQUALS
      type: string
    RoleCriteriaKey:
      description: "Refers to a specific Identity attribute, Account attibute, or\
        \ Entitlement used in Role membership criteria"
      example:
        sourceId: 2c9180867427f3a301745aec18211519
        property: attribute.email
        type: ACCOUNT
      nullable: true
      properties:
        type:
          $ref: '#/components/schemas/RoleCriteriaKeyType'
        property:
          description: The name of the attribute or entitlement to which the associated
            criteria applies.
          example: attribute.email
          type: string
        sourceId:
          description: ID of the Source from which an account attribute or entitlement
            is drawn. Required if type is ACCOUNT or ENTITLEMENT
          example: 2c9180867427f3a301745aec18211519
          nullable: true
          type: string
      required:
      - property
      - type
      type: object
    RoleCriteriaLevel2:
      description: Defines STANDARD type Role membership
      example:
        stringValue: carlee.cert1c9f9b6fd@mailinator.com
        children:
        - stringValue: carlee.cert1c9f9b6fd@mailinator.com
          operation: EQUALS
          key:
            sourceId: 2c9180867427f3a301745aec18211519
            property: attribute.email
            type: ACCOUNT
        - stringValue: carlee.cert1c9f9b6fd@mailinator.com
          operation: EQUALS
          key:
            sourceId: 2c9180867427f3a301745aec18211519
            property: attribute.email
            type: ACCOUNT
        operation: EQUALS
        key:
          sourceId: 2c9180867427f3a301745aec18211519
          property: attribute.email
          type: ACCOUNT
      nullable: true
      properties:
        operation:
          $ref: '#/components/schemas/RoleCriteriaOperation'
        key:
          $ref: '#/components/schemas/RoleCriteriaKey'
        stringValue:
          description: "String value to test the Identity attribute, Account attribute,\
            \ or Entitlement specified in the key w/r/t the specified operation. If\
            \ this criteria is a leaf node, that is, if the operation is one of EQUALS,\
            \ NOT_EQUALS, CONTAINS, STARTS_WITH, or ENDS_WITH, this field is required.\
            \ Otherwise, specifying it is an error."
          example: carlee.cert1c9f9b6fd@mailinator.com
          nullable: true
          type: string
        children:
          description: "Array of child criteria. Required if the operation is AND\
            \ or OR, otherwise it must be left null. A maximum of three levels of\
            \ criteria are supported, including leaf nodes. Additionally, AND nodes\
            \ can only be children or OR nodes and vice-versa."
          items:
            $ref: '#/components/schemas/RoleCriteriaLevel3'
          nullable: true
          type: array
      type: object
    Value:
      example:
        type: STRING
        value: Austin
      properties:
        type:
          description: The type of attribute value
          example: STRING
          type: string
        value:
          description: The attribute value
          example: Austin
          type: string
      type: object
    CertificationPhase:
      description: |
        The current phase of the campaign.
        * `STAGED`: The campaign is waiting to be activated.
        * `ACTIVE`: The campaign is active.
        * `SIGNED`: The reviewer has signed off on the campaign, and it is considered complete.
      enum:
      - STAGED
      - ACTIVE
      - SIGNED
      example: ACTIVE
      type: string
    Reviewer:
      description: Details of the reviewer for certification.
      properties:
        type:
          description: The reviewer's DTO type.
          enum:
          - IDENTITY
          - GOVERNANCE_GROUP
          example: IDENTITY
          type: string
        id:
          description: The reviewer's ID.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: The reviewer's display name.
          example: Michael Michaels
          type: string
        email:
          description: The reviewing identity's email. Only applicable to `IDENTITY`.
          example: reviewer@test.com
          nullable: true
          type: string
      required:
      - id
      - name
      - type
      type: object
    Reassignment:
      properties:
        from:
          $ref: '#/components/schemas/CertificationReference'
        comment:
          description: Comments from the previous reviewer.
          example: Please review
          type: string
      type: object
    SelectorType:
      description: |
        Enum representing the currently supported selector types.

        LIST - the *values* array contains one or more distinct values.

        RANGE - the *values* array contains two values: the start and end of the range, inclusive.

        Additional values may be added in the future without notice.
      enum:
      - LIST
      - RANGE
      example: LIST
      type: string
    ExceptionCriteria:
      example:
        criteriaList:
        - type: ENTITLEMENT
          id: 2c9180866166b5b0016167c32ef31a66
          existing: true
        - type: ENTITLEMENT
          id: 2c9180866166b5b0016167c32ef31a67
          existing: false
      properties:
        criteriaList:
          description: List of exception criteria. There is a min of 1 and max of
            50 items in the list.
          example:
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a66
            existing: true
          - type: ENTITLEMENT
            id: 2c9180866166b5b0016167c32ef31a67
            existing: false
          items:
            $ref: '#/components/schemas/ExceptionCriteria_criteriaList_inner'
          type: array
      type: object
    SodExemptCriteria:
      description: Details of the Entitlement criteria
      example:
        existing: true
        name: My HR Entitlement
        id: 2c918085771e9d3301773b3cb66f6398
        type: IDENTITY
      properties:
        existing:
          description: If the entitlement already belonged to the user or not.
          example: true
          type: boolean
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: Entitlement ID
          example: 2c918085771e9d3301773b3cb66f6398
          type: string
        name:
          description: Entitlement name
          example: My HR Entitlement
          type: string
      type: object
    SodExemptCriteria_1:
      description: Details of the Entitlement criteria
      example:
        existing: true
        name: My HR Entitlement
        id: 2c918085771e9d3301773b3cb66f6398
        type: IDENTITY
      properties:
        existing:
          description: If the entitlement already belonged to the user or not.
          example: true
          type: boolean
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: Entitlement ID
          example: 2c918085771e9d3301773b3cb66f6398
          type: string
        name:
          description: Entitlement name
          example: My HR Entitlement
          type: string
      type: object
    TransformDefinition_1:
      properties:
        type:
          description: The type of the transform definition.
          example: accountAttribute
          type: string
        attributes:
          additionalProperties:
            $ref: '#/components/schemas/TransformDefinition_1_attributes_value'
          description: Arbitrary key-value pairs to store any metadata for the object
          example:
            attributeName: e-mail
            sourceName: MySource
            sourceId: 2c9180877a826e68017a8c0b03da1a53
          type: object
      type: object
    RoleCriteriaKeyType:
      description: "Indicates whether the associated criteria represents an expression\
        \ on identity attributes, account attributes, or entitlements, respectively."
      enum:
      - IDENTITY
      - ACCOUNT
      - ENTITLEMENT
      example: ACCOUNT
      type: string
    RoleCriteriaLevel3:
      description: Defines STANDARD type Role membership
      example:
        stringValue: carlee.cert1c9f9b6fd@mailinator.com
        operation: EQUALS
        key:
          sourceId: 2c9180867427f3a301745aec18211519
          property: attribute.email
          type: ACCOUNT
      properties:
        operation:
          $ref: '#/components/schemas/RoleCriteriaOperation'
        key:
          $ref: '#/components/schemas/RoleCriteriaKey'
        stringValue:
          description: "String value to test the Identity attribute, Account attribute,\
            \ or Entitlement specified in the key w/r/t the specified operation. If\
            \ this criteria is a leaf node, that is, if the operation is one of EQUALS,\
            \ NOT_EQUALS, CONTAINS, STARTS_WITH, or ENDS_WITH, this field is required.\
            \ Otherwise, specifying it is an error."
          example: carlee.cert1c9f9b6fd@mailinator.com
          type: string
      type: object
    CertificationReference:
      allOf:
      - $ref: '#/components/schemas/CertificationReferenceDto'
      - properties:
          reviewer:
            $ref: '#/components/schemas/Reviewer'
        type: object
      description: Previous certification.
      type: object
    ExceptionCriteriaAccess:
      description: Access reference with addition of boolean existing flag to indicate
        whether the access was extant
      properties:
        type:
          $ref: '#/components/schemas/DtoType'
        id:
          description: ID of the object to which this reference applies
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: "CN=HelpDesk,OU=test,OU=test-service,DC=TestAD,DC=local"
          type: string
        existing:
          description: Whether the subject identity already had that access or not
          example: true
          type: boolean
      type: object
    CertificationReferenceDto:
      description: Certification for review.
      properties:
        type:
          description: DTO type of certification for review.
          enum:
          - CERTIFICATION
          example: IDENTITY
          type: string
        id:
          description: ID of certification for review.
          example: 7589a83cec4b4f138ce56c1a5ef0756d
          type: string
        name:
          description: Display name of certification for review.
          example: Manager Access for Michael Michaels
          type: string
      type: object
    listAccessProfiles_401_response:
      properties:
        error:
          description: A message describing the error
          example: "JWT validation failed: JWT is expired"
          type: object
      type: object
    listAccessProfiles_429_response:
      properties:
        message:
          description: A message describing the error
          example: ' Rate Limit Exceeded '
          type: object
      type: object
    listAccounts_200_response_inner:
      anyOf:
      - $ref: '#/components/schemas/SlimAccount'
      - $ref: '#/components/schemas/FullAccount'
    getActiveCampaigns_200_response_inner:
      oneOf:
      - $ref: '#/components/schemas/slimcampaign'
      - $ref: '#/components/schemas/Campaign'
    listIdentityAccessItems_200_response_inner:
      oneOf:
      - $ref: '#/components/schemas/AccessItemAccessProfileResponse'
      - $ref: '#/components/schemas/AccessItemAccountResponse'
      - $ref: '#/components/schemas/AccessItemAppResponse'
      - $ref: '#/components/schemas/AccessItemEntitlementResponse'
      - $ref: '#/components/schemas/AccessItemRoleResponse'
    getHistoricalIdentityEvents_200_response_inner:
      anyOf:
      - $ref: '#/components/schemas/AccessItemAssociated'
      - $ref: '#/components/schemas/AccessItemRemoved'
      - $ref: '#/components/schemas/AttributesChanged'
      - $ref: '#/components/schemas/AccessRequested'
      - $ref: '#/components/schemas/IdentityCertified'
      - $ref: '#/components/schemas/AccountStatusChanged'
    deleteNonEmployeeRecordInBulk_request:
      properties:
        ids:
          description: List of non-employee ids.
          items:
            format: uuid
            type: string
          type: array
      required:
      - ids
      type: object
    importNonEmployeeRecordsInBulk_request:
      properties:
        data:
          format: binary
          type: string
      required:
      - data
      type: object
    putPasswordDictionary_request:
      properties:
        file:
          format: binary
          type: string
      type: object
    patchPotentialRole_request_inner:
      allOf:
      - $ref: '#/components/schemas/JsonPatchOperation'
      properties:
        op:
          description: The operation to be performed
          enum:
          - remove
          - replace
          example: replace
          type: string
    patchServiceDeskIntegration_request:
      description: "A JSONPatch document as defined by [RFC 6902 - JSON Patch](https://tools.ietf.org/html/rfc6902).\
        \  Only `replace` operations are accepted by this endpoint."
      properties:
        operations:
          description: Operations to be applied
          items:
            $ref: '#/components/schemas/JsonPatchOperation'
          type: array
      type: object
    importSpConfig_request:
      properties:
        data:
          description: JSON file containing the objects to be imported.
          format: binary
          type: string
        options:
          $ref: '#/components/schemas/ImportOptions'
      required:
      - data
      type: object
    delete_202_response:
      example:
        name: name
        id: 2c91808779ecf55b0179f720942f181a
        type: TASK_RESULT
      properties:
        type:
          description: The type of object being referenced
          enum:
          - TASK_RESULT
          example: TASK_RESULT
          type: string
        id:
          description: ID of the task result
          example: 2c91808779ecf55b0179f720942f181a
          type: string
        name:
          description: Human-readable display name of the task result (should be null/empty)
          type: string
          example: null
      type: object
    createDomainDkim_405_response:
      properties:
        errorName:
          description: A message describing the error
          example: NotSupportedException
          type: object
        errorMessage:
          description: Description of the error
          example: Cannot consume content type
          type: object
        trackingId:
          description: Unique tracking id for the error.
          example: e7eab60924f64aa284175b9fa3309599
          type: string
      type: object
    createWorkflow_request:
      allOf:
      - required:
        - name
        - owner
        type: object
      - $ref: '#/components/schemas/WorkflowBody'
    testWorkflow_request:
      properties:
        input:
          description: The test input for the workflow.
          type: object
      required:
      - input
      type: object
    testWorkflow_200_response:
      example:
        workflowExecutionId: 0e11cefa-96e7-4b67-90d0-065bc1da5753
      properties:
        workflowExecutionId:
          description: The workflow execution id
          example: 0e11cefa-96e7-4b67-90d0-065bc1da5753
          type: string
      type: object
    listCompleteWorkflowLibrary_200_response_inner:
      anyOf:
      - $ref: '#/components/schemas/WorkflowLibraryAction'
      - $ref: '#/components/schemas/WorkflowLibraryTrigger'
      - $ref: '#/components/schemas/WorkflowLibraryOperator'
    postExternalExecuteWorkflow_request:
      properties:
        input:
          description: The input for the workflow
          example:
            customAttribute1: value1
            customAttribute2: value2
          type: object
      type: object
    postExternalExecuteWorkflow_200_response:
      example:
        workflowExecutionId: 0e11cefa-96e7-4b67-90d0-065bc1da5753
        message: Workflow was not executed externally. Check enabled flag on workflow
          definition
      properties:
        workflowExecutionId:
          description: The workflow execution id
          example: 0e11cefa-96e7-4b67-90d0-065bc1da5753
          type: string
        message:
          description: An error message if any errors occurred
          example: Workflow was not executed externally. Check enabled flag on workflow
            definition
          type: string
      type: object
    testExternalExecuteWorkflow_request:
      properties:
        input:
          description: The test input for the workflow
          example:
            test: hello world
          type: object
      type: object
    testExternalExecuteWorkflow_200_response:
      example:
        payload:
          test: hello world
      properties:
        payload:
          description: The input that was received
          example:
            test: hello world
          type: object
      type: object
    listWorkgroupMembers_200_response_inner:
      description: Identity of workgroup member.
      example:
        name: Michael Michaels
        id: 2c7180a46faadee4016fb4e018c20642
        type: IDENTITY
      properties:
        type:
          description: Workgroup member identity DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Workgroup member identity ID.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Workgroup member identity display name.
          example: Michael Michaels
          type: string
      type: object
    searchFormDefinitionsByTenant_400_response:
      properties:
        detailCode:
          type: string
          x-go-name: DetailCode
        messages:
          items:
            $ref: '#/components/schemas/ErrorMessage'
          type: array
          x-go-name: Messages
        statusCode:
          format: int64
          type: integer
          x-go-name: StatusCode
        trackingId:
          type: string
          x-go-name: TrackingID
      type: object
    exportFormDefinitionsByTenant_200_response_inner:
      example:
        self: self
        version: 0
        object:
          owner:
            id: 00000000-0000-0000-0000-000000000000
            type: IDENTITY
          formInput:
          - description: "A single dynamic scalar value (i.e. number, string, date,\
              \ etc.) that can be passed into the form for use in conditional logic"
            id: 00000000-0000-0000-0000-000000000000
            label: input1
            type: STRING
          - description: "A single dynamic scalar value (i.e. number, string, date,\
              \ etc.) that can be passed into the form for use in conditional logic"
            id: 00000000-0000-0000-0000-000000000000
            label: input1
            type: STRING
          formConditions:
          - ruleOperator: AND
            effects:
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            rules:
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
          - ruleOperator: AND
            effects:
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            - config:
                defaultValueLabel: Access to Remove
                element: "8110662963316867"
              effectType: HIDE
            rules:
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
            - sourceType: ELEMENT
              valueType: STRING
              source: department
              value: Engineering
              operator: EQ
          created: 2023-07-12T20:14:57.74486Z
          name: My form
          description: My form description
          modified: 2023-07-12T20:14:57.74486Z
          id: 00000000-0000-0000-0000-000000000000
          usedBy:
          - id: 00000000-0000-0000-0000-000000000000
            type: WORKFLOW
          - id: 00000000-0000-0000-0000-000000000000
            type: WORKFLOW
          formElements:
          - id: 00000000-0000-0000-0000-000000000000
            validations:
            - validationType: REQUIRED
            elementType: TEXT
            config:
              label: Department
            key: department
          - id: 00000000-0000-0000-0000-000000000000
            validations:
            - validationType: REQUIRED
            elementType: TEXT
            config:
              label: Department
            key: department
      properties:
        object:
          $ref: '#/components/schemas/FormDefinitionResponse'
        self:
          type: string
          x-go-name: Self
        version:
          format: int8
          type: integer
          x-go-name: Version
      type: object
    importFormDefinitions_202_response_errors_inner:
      example:
        detail:
          key: "{}"
        text: text
        key: key
      properties:
        detail:
          additionalProperties:
            type: object
          type: object
          x-go-name: Detail
        key:
          type: string
          x-go-name: Key
        text:
          type: string
          x-go-name: Text
      type: object
    importFormDefinitions_202_response:
      example:
        importedObjects:
        - self: self
          version: 0
          object:
            owner:
              id: 00000000-0000-0000-0000-000000000000
              type: IDENTITY
            formInput:
            - description: "A single dynamic scalar value (i.e. number, string, date,\
                \ etc.) that can be passed into the form for use in conditional logic"
              id: 00000000-0000-0000-0000-000000000000
              label: input1
              type: STRING
            - description: "A single dynamic scalar value (i.e. number, string, date,\
                \ etc.) that can be passed into the form for use in conditional logic"
              id: 00000000-0000-0000-0000-000000000000
              label: input1
              type: STRING
            formConditions:
            - ruleOperator: AND
              effects:
              - config:
                  defaultValueLabel: Access to Remove
                  element: "8110662963316867"
                effectType: HIDE
              - config:
                  defaultValueLabel: Access to Remove
                  element: "8110662963316867"
                effectType: HIDE
              rules:
              - sourceType: ELEMENT
                valueType: STRING
                source: department
                value: Engineering
                operator: EQ
              - sourceType: ELEMENT
                valueType: STRING
                source: department
                value: Engineering
                operator: EQ
            - ruleOperator: AND
              effects:
              - config:
                  defaultValueLabel: Access to Remove
                  element: "8110662963316867"
                effectType: HIDE
              - config:
                  defaultValueLabel: Access to Remove
                  element: "8110662963316867"
                effectType: HIDE
              rules:
              - sourceType: ELEMENT
                valueType: STRING
                source: department
                value: Engineering
                operator: EQ
              - sourceType: ELEMENT
                valueType: STRING
                source: department
                value: Engineering
                operator: EQ
            created: 2023-07-12T20:14:57.74486Z
            name: My form
            description: My form description
            modified: 2023-07-12T20:14:57.74486Z
            id: 00000000-0000-0000-0000-000000000000
            usedBy:
            - id: 00000000-0000-0000-0000-000000000000
              type: WORKFLOW
            - id: 00000000-0000-0000-0000-000000000000
              type: WORKFLOW
            formElements:
            - id: 00000000-0000-0000-0000-000000000000
              validations:
              - validationType: REQUIRED
              elementType: TEXT
              config:
                label: Department
              key: department
            - id: 00000000-0000-0000-0000-000000000000
              validations:
              - validationType: REQUIRED
              elementType: TEXT
              config:
                label: Department
              key: department
        - self: self
          version: 0
          object:
            owner:
              id: 00000000-0000-0000-0000-000000000000
              type: IDENTITY
            formInput:
            - description: "A single dynamic scalar value (i.e. number, string, date,\
                \ etc.) that can be passed into the form for use in conditional logic"
              id: 00000000-0000-0000-0000-000000000000
              label: input1
              type: STRING
            - description: "A single dynamic scalar value (i.e. number, string, date,\
                \ etc.) that can be passed into the form for use in conditional logic"
              id: 00000000-0000-0000-0000-000000000000
              label: input1
              type: STRING
            formConditions:
            - ruleOperator: AND
              effects:
              - config:
                  defaultValueLabel: Access to Remove
                  element: "8110662963316867"
                effectType: HIDE
              - config:
                  defaultValueLabel: Access to Remove
                  element: "8110662963316867"
                effectType: HIDE
              rules:
              - sourceType: ELEMENT
                valueType: STRING
                source: department
                value: Engineering
                operator: EQ
              - sourceType: ELEMENT
                valueType: STRING
                source: department
                value: Engineering
                operator: EQ
            - ruleOperator: AND
              effects:
              - config:
                  defaultValueLabel: Access to Remove
                  element: "8110662963316867"
                effectType: HIDE
              - config:
                  defaultValueLabel: Access to Remove
                  element: "8110662963316867"
                effectType: HIDE
              rules:
              - sourceType: ELEMENT
                valueType: STRING
                source: department
                value: Engineering
                operator: EQ
              - sourceType: ELEMENT
                valueType: STRING
                source: department
                value: Engineering
                operator: EQ
            created: 2023-07-12T20:14:57.74486Z
            name: My form
            description: My form description
            modified: 2023-07-12T20:14:57.74486Z
            id: 00000000-0000-0000-0000-000000000000
            usedBy:
            - id: 00000000-0000-0000-0000-000000000000
              type: WORKFLOW
            - id: 00000000-0000-0000-0000-000000000000
              type: WORKFLOW
            formElements:
            - id: 00000000-0000-0000-0000-000000000000
              validations:
              - validationType: REQUIRED
              elementType: TEXT
              config:
                label: Department
              key: department
            - id: 00000000-0000-0000-0000-000000000000
              validations:
              - validationType: REQUIRED
              elementType: TEXT
              config:
                label: Department
              key: department
        warnings:
        - detail:
            key: "{}"
          text: text
          key: key
        - detail:
            key: "{}"
          text: text
          key: key
        errors:
        - detail:
            key: "{}"
          text: text
          key: key
        - detail:
            key: "{}"
          text: text
          key: key
        infos:
        - detail:
            key: "{}"
          text: text
          key: key
        - detail:
            key: "{}"
          text: text
          key: key
      properties:
        errors:
          items:
            $ref: '#/components/schemas/importFormDefinitions_202_response_errors_inner'
          type: array
          x-go-name: Errors
        importedObjects:
          items:
            $ref: '#/components/schemas/exportFormDefinitionsByTenant_200_response_inner'
          type: array
          x-go-name: ImportedObjects
        infos:
          items:
            $ref: '#/components/schemas/importFormDefinitions_202_response_errors_inner'
          type: array
          x-go-name: Infos
        warnings:
          items:
            $ref: '#/components/schemas/importFormDefinitions_202_response_errors_inner'
          type: array
          x-go-name: Warnings
      type: object
    createFormDefinitionFileRequest_request:
      properties:
        file:
          description: File specifying the multipart
          format: binary
          type: string
          x-go-name: File
      required:
      - file
      type: object
    fullcampaign_allOf_filter:
      description: Determines which items will be included in this campaign. The default
        campaign filter is used if this field is left blank.
      properties:
        id:
          description: The ID of whatever type of filter is being used.
          example: 0fbe863c063c4c88a35fd7f17e8a3df5
          type: string
        type:
          description: Type of the filter
          enum:
          - CAMPAIGN_FILTER
          - RULE
          example: CAMPAIGN_FILTER
          type: string
        name:
          description: Name of the filter
          example: Test Filter
          type: string
      type: object
      example: null
    fullcampaign_allOf_sourceOwnerCampaignInfo:
      description: Must be set only if the campaign type is SOURCE_OWNER.
      properties:
        sourceIds:
          description: The list of sources to be included in the campaign.
          example:
          - 0fbe863c063c4c88a35fd7f17e8a3df5
          items:
            type: string
          type: array
      type: object
      example: null
    fullcampaign_allOf_searchCampaignInfo_reviewer:
      description: "If specified, this identity or governance group will be the reviewer\
        \ for all certifications in this campaign. The allowed DTO types are IDENTITY\
        \ and GOVERNANCE_GROUP."
      properties:
        type:
          description: The reviewer's DTO type.
          enum:
          - GOVERNANCE_GROUP
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: The reviewer's ID.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: The reviewer's name.
          example: William Wilson
          type: string
      type: object
      example: null
    fullcampaign_allOf_searchCampaignInfo:
      description: Must be set only if the campaign type is SEARCH.
      properties:
        type:
          description: The type of search campaign represented.
          enum:
          - IDENTITY
          - ACCESS
          example: ACCESS
          type: string
        description:
          description: "Describes this search campaign. Intended for storing the query\
            \ used, and possibly the number of identities selected/available."
          example: Search Campaign description
          type: string
        reviewer:
          $ref: '#/components/schemas/fullcampaign_allOf_searchCampaignInfo_reviewer'
        query:
          description: The scope for the campaign. The campaign will cover identities
            returned by the query and identities that have access items returned by
            the query. One of `query` or `identityIds` must be set.
          example: Search Campaign query description
          type: string
        identityIds:
          description: A direct list of identities to include in this campaign. One
            of `identityIds` or `query` must be set.
          example:
          - 0fbe863c063c4c88a35fd7f17e8a3df5
          items:
            type: string
          maxItems: 1000
          type: array
        accessConstraints:
          description: Further reduces the scope of the campaign by excluding identities
            (from `query` or `identityIds`) that do not have this access.
          items:
            $ref: '#/components/schemas/AccessConstraint'
          maxItems: 1000
          type: array
      required:
      - type
      type: object
      example: null
    fullcampaign_allOf_roleCompositionCampaignInfo_remediatorRef:
      description: "This determines who remediation tasks will be assigned to. Remediation\
        \ tasks are created for each revoke decision on items in the campaign. The\
        \ only legal remediator type is 'IDENTITY', and the chosen identity must be\
        \ a Role Admin or Org Admin."
      properties:
        type:
          description: Legal Remediator Type
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: The ID of the remediator.
          example: 2c90ad2a70ace7d50170acf22ca90010
          type: string
        name:
          description: The name of the remediator.
          example: Role Admin
          readOnly: true
          type: string
      required:
      - id
      - type
      type: object
      example: null
    fullcampaign_allOf_roleCompositionCampaignInfo:
      description: Optional configuration options for role composition campaigns.
      properties:
        reviewer:
          $ref: '#/components/schemas/fullcampaign_allOf_searchCampaignInfo_reviewer'
        roleIds:
          description: "Optional list of roles to include in this campaign. Only one\
            \ of `roleIds` and `query` may be set; if neither are set, all roles are\
            \ included."
          example:
          - 2c90ad2a70ace7d50170acf22ca90010
          items:
            type: string
          type: array
        remediatorRef:
          $ref: '#/components/schemas/fullcampaign_allOf_roleCompositionCampaignInfo_remediatorRef'
        query:
          description: "Optional search query to scope this campaign to a set of roles.\
            \ Only one of `roleIds` and `query` may be set; if neither are set, all\
            \ roles are included."
          example: Search Query
          type: string
        description:
          description: "Describes this role composition campaign. Intended for storing\
            \ the query used, and possibly the number of roles selected/available."
          example: Role Composition Description
          type: string
      required:
      - remediatorRef
      type: object
      example: null
    fullcampaign_allOf_sourcesWithOrphanEntitlements:
      properties:
        id:
          description: Id of the source
          example: 2c90ad2a70ace7d50170acf22ca90010
          type: string
        type:
          description: Type
          enum:
          - SOURCE
          example: SOURCE
          type: string
        name:
          description: Name of the source
          example: Source with orphan entitlements
          type: string
      type: object
      example: null
    IdentityProfile_allOf_owner:
      description: The owner of the Identity Profile.
      nullable: true
      properties:
        type:
          description: Type of the object to which this reference applies
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of the object to which this reference applies
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: William Wilson
          type: string
      type: object
      example: null
    IdentityProfile_allOf_authoritativeSource:
      description: The authoritative source for this Identity Profile.
      properties:
        type:
          description: Type of the object to which this reference applies
          enum:
          - SOURCE
          example: SOURCE
          type: string
        id:
          description: ID of the object to which this reference applies
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: HR Active Directory
          type: string
      type: object
      example: null
    array_inner:
      anyOf:
      - type: string
      - type: integer
      - type: object
      example:
      - "001"
      - "002"
      - "003"
    JsonPatchOperation_value:
      description: "The value to be used for the operation, required for \"add\" and\
        \ \"replace\" operations"
      example: New description
      oneOf:
      - example: New description
        title: string
        type: string
      - example: 300
        title: integer
        type: integer
      - example:
          attributes:
            name: philip
        title: object
        type: object
      - items:
          $ref: '#/components/schemas/array_inner'
        title: array
        type: array
    Entitlement_source:
      example:
        name: ODS-AD-Source
        id: 2c9180827ca885d7017ca8ce28a000eb
        type: SOURCE
      properties:
        id:
          description: The source ID
          example: 2c9180827ca885d7017ca8ce28a000eb
          type: string
        type:
          description: "The source type, will always be \"SOURCE\""
          example: SOURCE
          type: string
        name:
          description: The source name
          example: ODS-AD-Source
          type: string
      type: object
    CompletedApproval_reviewedBy:
      description: Identity who reviewed the access item request.
      example:
        name: Allen Albertson
        id: 2c3780a46faadee4016fb4e018c20652
        type: IDENTITY
      properties:
        type:
          description: DTO type of identity who reviewed the access item request.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of identity who reviewed the access item request.
          example: 2c3780a46faadee4016fb4e018c20652
          type: string
        name:
          description: Human-readable display name of identity who reviewed the access
            item request.
          example: Allen Albertson
          type: string
      type: object
    CompletedApproval_reviewerComment:
      allOf:
      - $ref: '#/components/schemas/CommentDto'
      description: The approval's reviewer's comment.
      nullable: true
      type: object
    CommentDto_author:
      example:
        name: Adam Kennedy
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          description: DTO type of the commenting identity.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of the commenting identity.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Display name of the commenting identity.
          example: Adam Kennedy
          type: string
      type: object
    AccessRequestRecommendationItemDetail_access:
      example:
        name: Employee-database-read-write
        description: This item grants an employee read and write access to the database
        id: 2c9180835d2e5168015d32f890ca1581
        type: ACCESS_PROFILE
      properties:
        id:
          description: ID of access item being recommended.
          example: 2c9180835d2e5168015d32f890ca1581
          format: UUID
          type: string
        type:
          $ref: '#/components/schemas/AccessRequestRecommendationItemType'
        name:
          description: Name of the access item
          example: Employee-database-read-write
          type: string
        description:
          description: Description of the access item
          example: This item grants an employee read and write access to the database
          type: string
      type: object
    AccountAttributesCreate_attributes:
      additionalProperties:
        type: string
      description: The schema attribute values for the account
      example:
        sourceId: 34bfcbe116c9407464af37acbaf7a4dc
        city: Austin
        displayName: John Doe
        userName: jdoe
        sAMAccountName: jDoe
        mail: john.doe@sailpoint.com
      properties:
        sourceId:
          description: Target source to create an account
          example: 34bfcbe116c9407464af37acbaf7a4dc
          type: string
      required:
      - sourceId
      type: object
    AdminReviewReassign_reassignTo:
      example:
        id: ef38f94347e94562b5bb8424a56397d8
        type: IDENTITY
      properties:
        id:
          description: The identity ID to which the review is being assigned.
          example: ef38f94347e94562b5bb8424a56397d8
          type: string
        type:
          description: The type of the ID provided.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
      type: object
    CampaignTemplate_ownerRef:
      description: "The owner of this template, and the owner of campaigns generated\
        \ from this template via a schedule. This field is automatically populated\
        \ at creation time with the current user."
      example:
        name: Mister Manager
        id: 2c918086676d3e0601677611dbde220f
        type: IDENTITY
        email: mr.manager@example.com
      properties:
        id:
          description: Id of the owner
          example: 2c918086676d3e0601677611dbde220f
          type: string
        type:
          description: Type of the owner
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        name:
          description: Name of the owner
          example: Mister Manager
          type: string
        email:
          description: Email of the owner
          example: mr.manager@example.com
          type: string
      type: object
    Schedule_months:
      description: |
        Specifies which months of a schedule are active. Only valid for ANNUALLY schedule types. Examples:

        On February and March:
        * type LIST
        * values "2", "3"

        Every 3 months, starting in January (quarterly):
        * type LIST
        * values "1"
        * interval 3

        Every two months between July and December:
        * type RANGE
        * values "7", "12"
        * interval 2
      example:
        values:
        - "1"
        interval: 2
        type: LIST
      properties:
        type:
          description: Enum type to specify months value
          enum:
          - LIST
          - RANGE
          example: LIST
          type: string
        values:
          description: Values of the months based on the enum type mentioned above
          example:
          - "1"
          items:
            type: string
          type: array
        interval:
          description: Interval between the cert generations
          example: 2
          format: int64
          type: integer
      required:
      - type
      - values
      type: object
    Schedule_days:
      description: |
        Specifies which day(s) a schedule is active for. This is required for all schedule types.
        The "values" field holds different data depending on the type of schedule:
        * WEEKLY: days of the week (1-7)
        * MONTHLY: days of the month (1-31, L, L-1...)
        * ANNUALLY: if the "months" field is also set: days of the month (1-31, L, L-1...); otherwise: ISO-8601 dates without year ("--12-31")
        * CALENDAR: ISO-8601 dates ("2020-12-31")

        Note that CALENDAR only supports the LIST type, and ANNUALLY does not support the RANGE type when provided
        with ISO-8601 dates without year.

        Examples:

        On Sundays:
        * type LIST
        * values "1"

        The second to last day of the month:
        * type LIST
        * values "L-1"

        From the 20th to the last day of the month:
        * type RANGE
        * values "20", "L"

        Every March 2nd:
        * type LIST
        * values "--03-02"

        On March 2nd, 2021:
        * type: LIST
        * values "2021-03-02"
      example:
        values:
        - "1"
        interval: 2
        type: LIST
      properties:
        type:
          description: Enum type to specify days value
          enum:
          - LIST
          - RANGE
          example: LIST
          type: string
        values:
          description: Values of the days based on the enum type mentioned above
          example:
          - "1"
          items:
            type: string
          type: array
        interval:
          description: Interval between the cert generations
          example: 2
          format: int64
          type: integer
      required:
      - type
      - values
      type: object
    Schedule_hours:
      description: |
        Specifies which hour(s) a schedule is active for. Examples:

        Every three hours starting from 8AM, inclusive:
        * type LIST
        * values "8"
        * interval 3

        During business hours:
        * type RANGE
        * values "9", "5"

        At 5AM, noon, and 5PM:
        * type LIST
        * values "5", "12", "17"
      example:
        values:
        - "1"
        interval: 2
        type: LIST
      properties:
        type:
          description: Enum type to specify hours value
          enum:
          - LIST
          - RANGE
          example: LIST
          type: string
        values:
          description: Values of the days based on the enum type mentioned above
          example:
          - "1"
          items:
            type: string
          type: array
        interval:
          description: Interval between the cert generations
          example: 2
          format: int64
          type: integer
      required:
      - type
      - values
      type: object
    ConnectorRuleCreateRequest_signature:
      description: The rule's function signature. Describes the rule's input arguments
        and output (if any)
      example:
        output:
          name: firstName
          description: the first name of the identity
          type: String
        input:
        - name: firstName
          description: the first name of the identity
          type: String
        - name: firstName
          description: the first name of the identity
          type: String
      properties:
        input:
          items:
            $ref: '#/components/schemas/Argument'
          type: array
        output:
          $ref: '#/components/schemas/Argument'
      required:
      - input
      type: object
    ConnectorRuleValidationResponse_details_inner:
      description: CodeErrorDetail
      example:
        line: 2
        column: 5
        messsage: Remove reference to .decrypt(
      properties:
        line:
          description: The line number where the issue occurred
          example: 2
          type: integer
        column:
          description: the column number where the issue occurred
          example: 5
          type: integer
        messsage:
          description: a description of the issue in the code
          example: Remove reference to .decrypt(
          type: string
      required:
      - column
      - line
      - message
      type: object
    AccessItemAssociated_accessItem:
      example:
        id: 8c190e6787aa4ed9a90bd9d5344523fb
        accessType: account
        nativeIdentity: 127999
        sourceName: JDBC Entitlements Source
        entitlementCount: 0
        displayName: Sample Name
      oneOf:
      - $ref: '#/components/schemas/AccessItemAccessProfileResponse'
      - $ref: '#/components/schemas/AccessItemAccountResponse'
      - $ref: '#/components/schemas/AccessItemAppResponse'
      - $ref: '#/components/schemas/AccessItemEntitlementResponse'
      - $ref: '#/components/schemas/AccessItemRoleResponse'
      type: object
    AccountStatusChanged_account:
      properties:
        id:
          description: the ID of the account in the database
          type: string
        nativeIdentity:
          description: the native identifier of the account
          type: string
        displayName:
          description: the display name of the account
          type: string
        sourceId:
          description: the ID of the source for this account
          type: string
        sourceName:
          description: the name of the source for this account
          type: string
        entitlementCount:
          description: the number of entitlements on this account
          type: integer
        accessType:
          description: this value is always "account"
          type: string
      type: object
    AccountStatusChanged_statusChange:
      properties:
        previousStatus:
          description: the previous status of the account
          enum:
          - enabled
          - disabled
          - locked
          type: string
        newStatus:
          description: the new status of the account
          enum:
          - enabled
          - disabled
          - locked
          type: string
      type: object
    IdentityOwnershipAssociationDetails_associationDetails_inner:
      example:
        entities:
          id: b660a232f05b4e04812ca974b3011e0f
          name: Gaston.800ddf9640a
          type: ROLE
        associationType: ROLE_OWNER
      properties:
        associationType:
          description: association type with the identity
          example: ROLE_OWNER
          type: string
        entities:
          description: the specific resource this identity has ownership on
          example:
            id: b660a232f05b4e04812ca974b3011e0f
            name: Gaston.800ddf9640a
            type: ROLE
          items:
            $ref: '#/components/schemas/IdentityEntities'
          type: array
      type: object
    IdentityDto_managerRef:
      description: Identity's manager.
      properties:
        type:
          description: DTO type of identity's manager.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of identity's manager.
          example: 2c4180a46faadee4016fb4e018c20626
          type: string
        name:
          description: Human-readable display name of identity's manager.
          example: Robert Robinson
          type: string
      type: object
      example: null
    IdentityAssociationDetails_associationDetails_inner:
      properties:
        associationType:
          description: association type with the identity
          example: CAMPAIGN_OWNER
          type: string
        entities:
          description: the specific resource this identity has ownership on
          example:
            id: b660a232f05b4e04812ca974b3011e0f
            name: Gaston.800ddf9640a
            type: CAMPAIGN_CAMPAIGNER
          items:
            $ref: '#/components/schemas/IdentityEntities'
          type: array
      type: object
    IdentityPreviewResponse_identity:
      description: Identity's manager.
      example:
        name: Robert Robinson
        id: 2c4180a46faadee4016fb4e018c20626
        type: IDENTITY
      properties:
        type:
          description: DTO type of identity's manager.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of identity's manager.
          example: 2c4180a46faadee4016fb4e018c20626
          type: string
        name:
          description: Human-readable display name of identity's manager.
          example: Robert Robinson
          type: string
      type: object
    OutlierContributingFeature_value:
      description: The feature value
      example: 0.92
      oneOf:
      - format: float
        maximum: 1.0
        minimum: 0.0
        type: number
      - format: int64
        type: integer
    OutlierFeatureSummary_outlierFeatureDisplayValues_inner:
      example:
        displayName: Aliza Chris
        valueType: INTEGER
        value: "55"
      properties:
        displayName:
          description: display name
          example: Aliza Chris
          type: string
        value:
          description: value
          example: "55"
          type: string
        valueType:
          description: The data type of the value field
          enum:
          - INTEGER
          - FLOAT
          example: INTEGER
          type: string
      type: object
    RoleMiningSessionDto_createdBy:
      description: The session created by details
      oneOf:
      - $ref: '#/components/schemas/EntityCreatedByDTO'
      - $ref: '#/components/schemas/NullableEntityCreatedByDTO'
    Source_owner:
      description: Reference to an owning Identity Object
      example:
        name: MyName
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          description: The type of object being referenced
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of the identity
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the identity
          example: MyName
          type: string
      type: object
    Source_cluster:
      description: Reference to the associated Cluster
      example:
        name: Corporate Cluster
        id: 2c9180866166b5b0016167c32ef31a66
        type: CLUSTER
      properties:
        type:
          description: The type of object being referenced
          enum:
          - CLUSTER
          example: CLUSTER
          type: string
        id:
          description: ID of the cluster
          example: 2c9180866166b5b0016167c32ef31a66
          type: string
        name:
          description: Human-readable display name of the cluster
          example: Corporate Cluster
          type: string
      required:
      - id
      - name
      - type
      type: object
    Source_accountCorrelationConfig:
      description: Reference to an Account Correlation Config object
      example:
        name: "Directory [source-62867] Account Correlation"
        id: 2c9180855d191c59015d28583727245a
        type: ACCOUNT_CORRELATION_CONFIG
      properties:
        type:
          description: The type of object being referenced
          enum:
          - ACCOUNT_CORRELATION_CONFIG
          example: ACCOUNT_CORRELATION_CONFIG
          type: string
        id:
          description: ID of the account correlation config
          example: 2c9180855d191c59015d28583727245a
          type: string
        name:
          description: Human-readable display name of the account correlation config
          example: "Directory [source-62867] Account Correlation"
          type: string
      type: object
    Source_accountCorrelationRule:
      description: "Reference to a Rule that can do COMPLEX correlation, should only\
        \ be used when accountCorrelationConfig can't be used."
      example:
        name: Example Rule
        id: 2c918085708c274401708c2a8a760001
        type: RULE
      properties:
        type:
          description: The type of object being referenced
          enum:
          - RULE
          example: RULE
          type: string
        id:
          description: ID of the rule
          example: 2c918085708c274401708c2a8a760001
          type: string
        name:
          description: Human-readable display name of the rule
          example: Example Rule
          type: string
      type: object
    Source_managerCorrelationRule:
      description: "Reference to the ManagerCorrelationRule, only used when a simple\
        \ filter isn't sufficient."
      example:
        name: Example Rule
        id: 2c918085708c274401708c2a8a760001
        type: RULE
      properties:
        type:
          description: The type of object being referenced
          enum:
          - RULE
          example: RULE
          type: string
        id:
          description: ID of the rule
          example: 2c918085708c274401708c2a8a760001
          type: string
        name:
          description: Human-readable display name of the rule
          example: Example Rule
          type: string
      type: object
    Source_beforeProvisioningRule:
      description: Rule that runs on the CCG and allows for customization of provisioning
        plans before the connector is called.
      example:
        name: Example Rule
        id: 2c918085708c274401708c2a8a760001
        type: RULE
      properties:
        type:
          description: The type of object being referenced
          enum:
          - RULE
          example: RULE
          type: string
        id:
          description: ID of the rule
          example: 2c918085708c274401708c2a8a760001
          type: string
        name:
          description: Human-readable display name of the rule
          example: Example Rule
          type: string
      type: object
    Source_schemas_inner:
      properties:
        type:
          description: The type of object being referenced
          enum:
          - CONNECTOR_SCHEMA
          example: CONNECTOR_SCHEMA
          type: string
        id:
          description: ID of the schema
          example: 2c91808568c529c60168cca6f90c1777
          type: string
        name:
          description: Human-readable display name of the schema
          example: MySchema
          type: string
      type: object
    Source_passwordPolicies_inner:
      properties:
        type:
          description: The type of object being referenced
          enum:
          - PASSWORD_POLICY
          example: PASSWORD_POLICY
          type: string
        id:
          description: ID of the policy
          example: 2c91808568c529c60168cca6f90c1777
          type: string
        name:
          description: Human-readable display name of the policy
          example: My Password Policy
          type: string
      type: object
    Source_managementWorkgroup:
      description: Reference to Management Workgroup for this Source
      example:
        name: My Management Workgroup
        id: 2c91808568c529c60168cca6f90c2222
        type: GOVERNANCE_GROUP
      properties:
        type:
          description: The type of object being referenced
          enum:
          - GOVERNANCE_GROUP
          example: GOVERNANCE_GROUP
          type: string
        id:
          description: ID of the management workgroup
          example: 2c91808568c529c60168cca6f90c2222
          type: string
        name:
          description: Human-readable display name of the management workgroup
          example: My Management Workgroup
          type: string
      type: object
    TaggedObject_objectRef:
      example:
        name: William Wilson
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          description: DTO type
          enum:
          - ACCESS_PROFILE
          - APPLICATION
          - CAMPAIGN
          - ENTITLEMENT
          - IDENTITY
          - ROLE
          - SOD_POLICY
          - SOURCE
          example: IDENTITY
          type: string
        id:
          description: ID of the object to which this reference applies
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: William Wilson
          nullable: true
          type: string
      type: object
    Trigger_exampleInput:
      description: An example of the JSON payload that will be sent by the trigger
        to the subscribed service.
      oneOf:
      - $ref: '#/components/schemas/AccessRequestDynamicApprover'
      - $ref: '#/components/schemas/AccessRequestPostApproval'
      - $ref: '#/components/schemas/AccessRequestPreApproval'
      - $ref: '#/components/schemas/AccountAggregationCompleted'
      - $ref: '#/components/schemas/AccountAttributesChanged'
      - $ref: '#/components/schemas/AccountCorrelated'
      - $ref: '#/components/schemas/AccountsCollectedForAggregation'
      - $ref: '#/components/schemas/AccountUncorrelated'
      - $ref: '#/components/schemas/CampaignActivated'
      - $ref: '#/components/schemas/CampaignEnded'
      - $ref: '#/components/schemas/CampaignGenerated'
      - $ref: '#/components/schemas/CertificationSignedOff'
      - $ref: '#/components/schemas/IdentityAttributesChanged'
      - $ref: '#/components/schemas/IdentityCreated'
      - $ref: '#/components/schemas/IdentityDeleted'
      - $ref: '#/components/schemas/ProvisioningCompleted'
      - $ref: '#/components/schemas/SavedSearchComplete'
      - $ref: '#/components/schemas/SourceAccountCreated'
      - $ref: '#/components/schemas/SourceAccountDeleted'
      - $ref: '#/components/schemas/SourceAccountUpdated'
      - $ref: '#/components/schemas/SourceCreated'
      - $ref: '#/components/schemas/SourceDeleted'
      - $ref: '#/components/schemas/SourceUpdated'
      - $ref: '#/components/schemas/VAClusterStatusChangeEvent'
    Trigger_exampleOutput:
      description: An example of the JSON payload that will be sent by the subscribed
        service to the trigger in response to an event.
      nullable: true
      oneOf:
      - $ref: '#/components/schemas/AccessRequestDynamicApprover_1'
      - $ref: '#/components/schemas/AccessRequestPreApproval_1'
    SubscriptionPatchRequest_inner_value_anyOf_inner:
      anyOf:
      - type: string
      - type: integer
      - type: object
    SubscriptionPatchRequest_inner_value:
      anyOf:
      - type: string
      - type: integer
      - type: object
      - items:
          $ref: '#/components/schemas/SubscriptionPatchRequest_inner_value_anyOf_inner'
        type: array
      description: "The value to be used for the operation, required for \"add\" and\
        \ \"replace\" operations"
      example: New description
    SubscriptionPatchRequest_inner:
      description: "A JSONPatch Operation as defined by [RFC 6902 - JSON Patch](https://tools.ietf.org/html/rfc6902)"
      properties:
        op:
          description: The operation to be performed
          enum:
          - add
          - remove
          - replace
          - move
          - copy
          example: replace
          type: string
        path:
          description: A string JSON Pointer representing the target path to an element
            to be affected by the operation
          example: /description
          type: string
        value:
          $ref: '#/components/schemas/SubscriptionPatchRequest_inner_value'
      required:
      - op
      - path
      type: object
    SodPolicy_conflictingAccessCriteria:
      allOf:
      - $ref: '#/components/schemas/ConflictingAccessCriteria'
      - nullable: true
        type: object
    IdentityWithNewAccess_accessRefs_inner:
      description: Entitlement including a specific set of access.
      properties:
        type:
          description: Entitlement's DTO type.
          enum:
          - ENTITLEMENT
          example: ENTITLEMENT
          type: string
        id:
          description: Entitlement's ID.
          example: 2c91809773dee32014e13e122092014e
          type: string
        name:
          description: Entitlement's display name.
          example: "CN=entitlement.490efde5,OU=OrgCo,OU=ServiceDept,DC=HQAD,DC=local"
          type: string
      type: object
    Workflow_allOf_creator:
      description: Workflow creator's identity.
      properties:
        type:
          description: Workflow creator's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Workflow creator's identity ID.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Workflow creator's display name.
          example: Michael Michaels
          type: string
      type: object
      example: null
    WorkflowBody_owner:
      description: The identity that owns the workflow.  The owner's permissions in
        IDN will determine what actions the workflow is allowed to perform.  Ownership
        can be changed by updating the owner in a PUT or PATCH request.
      example:
        name: William Wilson
        id: 2c91808568c529c60168cca6f90c1313
        type: IDENTITY
      properties:
        type:
          description: The type of object that is referenced
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: The unique ID of the object
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: The name of the object
          example: William Wilson
          type: string
      type: object
    BulkWorkgroupMembersRequest_inner:
      description: Identity's basic details.
      properties:
        type:
          description: Identity's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Identity ID.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Identity's display name.
          example: Michael Michaels
          type: string
      type: object
    FormDefinitionDynamicSchemaRequest_attributes:
      example:
        formDefinitionId: 00000000-0000-0000-0000-000000000000
      properties:
        formDefinitionId:
          description: FormDefinitionID is a unique guid identifying this form definition
          example: 00000000-0000-0000-0000-000000000000
          type: string
          x-go-name: FormDefinitionID
      type: object
      x-go-name: Attributes
    AccessProfileUsage_usedBy_inner:
      description: Role using the access profile.
      example:
        name: Manager Role
        id: 2c8180857a9b3da0017aa03418480f9d
        type: ROLE
      properties:
        type:
          description: DTO type of role using the access profile.
          enum:
          - ROLE
          example: ROLE
          type: string
        id:
          description: ID of role using the access profile.
          example: 2c8180857a9b3da0017aa03418480f9d
          type: string
        name:
          description: Display name of role using the access profile.
          example: Manager Role
          type: string
      type: object
    ApprovalStatusDto_originalOwner:
      description: Identity of orginal approval owner.
      example:
        name: Michael Michaels
        id: 2c7180a46faadee4016fb4e018c20642
        type: IDENTITY
      properties:
        type:
          description: DTO type of original approval owner's identity.
          enum:
          - GOVERNANCE_GROUP
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of original approval owner's identity.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Display name of original approval owner.
          example: Michael Michaels
          type: string
      type: object
    ManualWorkItemDetails_originalOwner:
      description: "Identity of original work item owner, if the work item has been\
        \ forwarded."
      example:
        name: Michael Michaels
        id: 2c7180a46faadee4016fb4e018c20642
        type: IDENTITY
      properties:
        type:
          description: DTO type of original work item owner's identity.
          enum:
          - GOVERNANCE_GROUP
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of original work item owner's identity.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Display name of original work item owner.
          example: Michael Michaels
          type: string
      type: object
    ManualWorkItemDetails_currentOwner:
      description: Identity of current work item owner.
      example:
        name: Allen Albertson
        id: 2c3780a46faadee4016fb4e018c20652
        type: IDENTITY
      properties:
        type:
          description: DTO type of current work item owner's identity.
          enum:
          - GOVERNANCE_GROUP
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of current work item owner's identity.
          example: 2c3780a46faadee4016fb4e018c20652
          type: string
        name:
          description: Display name of current work item owner.
          example: Allen Albertson
          type: string
      type: object
    IdentityEntities_identityEntity:
      properties:
        id:
          description: id of the resource to which the identity is associated
          example: 031034e97f094a4096c1be53f75f6b91
          type: string
        name:
          description: name of the resource to which the identity is associated
          example: Gaston.800ddf9640a
          type: string
        type:
          description: type of the resource to which the identity is associated
          example: CAMPAIGN_CAMPAIGNER
          type: string
      type: object
    IdentityProfile_1_allOf_authoritativeSource:
      properties:
        type:
          description: Type of the object to which this reference applies
          enum:
          - SOURCE
          example: SOURCE
          type: string
        id:
          description: ID of the object to which this reference applies
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: HR Active Directory
          type: string
      type: object
      example: null
    ProvisioningConfig_managedResourceRefs_inner:
      allOf:
      - $ref: '#/components/schemas/ServiceDeskSource'
      properties:
        type:
          description: The type of object being referenced
          enum:
          - SOURCE
          example: SOURCE
          type: object
        id:
          description: ID of the source
          example: 2c91808568c529c60168cca6f90c1313
          type: object
        name:
          description: Human-readable display name of the source
          example: My Source
          type: object
    ProvisioningConfig_planInitializerScript:
      description: This is a reference to a plan initializer script.
      properties:
        source:
          description: This is a Rule that allows provisioning instruction changes.
          example: |
            <?xml version='1.0' encoding='UTF-8'?>\r\n<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">\r\n<Rule name=\"Example Rule\" type=\"BeforeProvisioning\">\r\n  <Description>Before Provisioning Rule which changes disables and enables to a modify.</Description>\r\n  <Source><![CDATA[\r\nimport sailpoint.object.*;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest;\r\nimport sailpoint.object.ProvisioningPlan.AccountRequest.Operation;\r\nimport sailpoint.object.ProvisioningPlan.AttributeRequest;\r\nimport sailpoint.object.ProvisioningPlan;\r\nimport sailpoint.object.ProvisioningPlan.Operation;\r\n\r\nfor ( AccountRequest accountRequest : plan.getAccountRequests() ) {\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Disable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n  if ( accountRequest.getOp().equals( ProvisioningPlan.ObjectOperation.Enable ) ) {\r\n    accountRequest.setOp( ProvisioningPlan.ObjectOperation.Modify );\r\n  }\r\n}\r\n\r\n  ]]></Source>
          type: string
      type: object
    AttributeDefinition_schema:
      description: A reference to the schema on the source to the attribute values
        map to.
      properties:
        type:
          description: The type of object being referenced
          enum:
          - CONNECTOR_SCHEMA
          example: CONNECTOR_SCHEMA
          type: string
        id:
          description: The object ID this reference applies to.
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: The human-readable display name of the object.
          example: group
          type: string
      type: object
    AccessRequestDynamicApprover_requestedItems_inner:
      properties:
        id:
          description: The unique ID of the access item.
          example: 2c91808b6ef1d43e016efba0ce470904
          type: string
        name:
          description: Human friendly name of the access item.
          example: Engineering Access
          type: string
        description:
          description: Extended description of the access item.
          example: Engineering Access
          nullable: true
          type: string
        type:
          description: The type of access item being requested.
          enum:
          - ACCESS_PROFILE
          - ROLE
          - ENTITLEMENT
          example: ACCESS_PROFILE
          type: object
        operation:
          description: Grant or revoke the access item
          enum:
          - Add
          - Remove
          example: Add
          type: object
        comment:
          description: A comment from the requestor on why the access is needed.
          example: William needs this access for his day to day job activities.
          nullable: true
          type: string
      required:
      - id
      - name
      - operation
      - type
      type: object
    AccessRequestPostApproval_requestedItemsStatus_inner_approvalInfo_inner_approver:
      allOf:
      - $ref: '#/components/schemas/AccessItemApproverDto'
      description: The identity of the approver.
      properties:
        type:
          description: The type of object that is referenced
          enum:
          - IDENTITY
          example: IDENTITY
          type: object
      required:
      - id
      - name
      - type
    AccessRequestPostApproval_requestedItemsStatus_inner_approvalInfo_inner:
      properties:
        approvalComment:
          description: A comment left by the approver.
          example: This access looks good.  Approved.
          nullable: true
          type: string
        approvalDecision:
          description: The final decision of the approver.
          enum:
          - APPROVED
          - DENIED
          example: APPROVED
          type: object
        approverName:
          description: The name of the approver
          example: Stephen.Austin
          type: string
        approver:
          $ref: '#/components/schemas/AccessRequestPostApproval_requestedItemsStatus_inner_approvalInfo_inner_approver'
      required:
      - approvalDecision
      - approver
      - approverName
      type: object
    AccessRequestPostApproval_requestedItemsStatus_inner:
      properties:
        id:
          description: The unique ID of the access item being requested.
          example: 2c91808b6ef1d43e016efba0ce470904
          type: string
        name:
          description: The human friendly name of the access item.
          example: Engineering Access
          type: string
        description:
          description: Detailed description of the access item.
          example: Access to engineering database
          nullable: true
          type: string
        type:
          description: The type of access item.
          enum:
          - ACCESS_PROFILE
          - ROLE
          - ENTITLEMENT
          example: ACCESS_PROFILE
          type: object
        operation:
          description: The action to perform on the access item.
          enum:
          - Add
          - Remove
          example: Add
          type: object
        comment:
          description: A comment from the identity requesting the access.
          example: William needs this access to do his job.
          nullable: true
          type: string
        clientMetadata:
          additionalProperties: true
          description: Additional customer defined metadata about the access item.
          example:
            applicationName: My application
          nullable: true
          type: object
        approvalInfo:
          description: A list of one or more approvers for the access request.
          items:
            $ref: '#/components/schemas/AccessRequestPostApproval_requestedItemsStatus_inner_approvalInfo_inner'
          type: array
      required:
      - approvalInfo
      - id
      - name
      - operation
      - type
      type: object
    AccessRequestPreApproval_requestedItems_inner:
      properties:
        id:
          description: The unique ID of the access item being requested.
          example: 2c91808b6ef1d43e016efba0ce470904
          type: string
        name:
          description: The human friendly name of the access item.
          example: Engineering Access
          type: string
        description:
          description: Detailed description of the access item.
          example: Access to engineering database
          nullable: true
          type: string
        type:
          description: The type of access item.
          enum:
          - ACCESS_PROFILE
          - ROLE
          - ENTITLEMENT
          example: ACCESS_PROFILE
          type: object
        operation:
          description: The action to perform on the access item.
          enum:
          - Add
          - Remove
          example: Add
          type: object
        comment:
          description: A comment from the identity requesting the access.
          example: William needs this access to do his job.
          nullable: true
          type: string
      required:
      - id
      - name
      - operation
      - type
      type: object
    AccountAggregationCompleted_source:
      description: The source the accounts are being aggregated from.
      properties:
        type:
          description: The DTO type of the source the accounts are being aggregated
            from.
          enum:
          - SOURCE
          example: SOURCE
          type: string
        id:
          description: The ID of the source the accounts are being aggregated from.
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Display name of the source the accounts are being aggregated
            from.
          example: HR Active Directory
          type: string
      required:
      - id
      - name
      - type
      type: object
    AccountAggregationCompleted_stats:
      description: Overall statistics about the account aggregation.
      properties:
        scanned:
          description: The number of accounts which were scanned / iterated over.
          example: 200
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        unchanged:
          description: "The number of accounts which existed before, but had no changes."
          example: 190
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        changed:
          description: "The number of accounts which existed before, but had changes."
          example: 6
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        added:
          description: The number of accounts which are new - have not existed before.
          example: 4
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        removed:
          description: "The number accounts which existed before, but no longer exist\
            \ (thus getting removed)."
          example: 3
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - added
      - changed
      - removed
      - scanned
      - unchanged
      type: object
    AccountAttributesChanged_identity:
      description: The identity whose account attributes were updated.
      properties:
        type:
          description: DTO type of the identity whose account attributes were updated.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of the identity whose account attributes were updated.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Display name of the identity whose account attributes were
            updated.
          example: Michael Michaels
          type: string
      required:
      - id
      - name
      - type
      type: object
    AccountAttributesChanged_source:
      description: The source that contains the account.
      properties:
        id:
          description: ID of the object to which this reference applies
          example: 4e4d982dddff4267ab12f0f1e72b5a6d
          type: string
        type:
          description: The type of object that is referenced
          enum:
          - SOURCE
          example: SOURCE
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: Corporate Active Directory
          type: string
      required:
      - id
      - name
      - type
      type: object
    AccountAttributesChanged_account:
      description: Details of the account where the attributes changed.
      properties:
        id:
          description: SailPoint generated unique identifier.
          example: 52170a74-ca89-11ea-87d0-0242ac130003
          type: string
        uuid:
          description: The source's unique identifier for the account. UUID is generated
            by the source system.
          example: 1cb1f07d-3e5a-4431-becd-234fa4306108
          nullable: true
          type: string
        name:
          description: Name of the account.
          example: john.doe
          type: string
        nativeIdentity:
          description: Unique ID of the account on the source.
          example: "cn=john.doe,ou=users,dc=acme,dc=com"
          type: string
        type:
          description: The type of the account
          enum:
          - ACCOUNT
          example: ACCOUNT
          type: object
      required:
      - id
      - name
      - nativeIdentity
      - type
      - uuid
      type: object
    AccountAttributesChanged_changes_inner_oldValue:
      description: The previous value of the attribute.
      example: doe
      nullable: true
      oneOf:
      - type: string
      - type: boolean
      - items:
          nullable: true
          type: string
        type: array
    AccountAttributesChanged_changes_inner_newValue:
      description: The new value of the attribute.
      example: ryans
      nullable: true
      oneOf:
      - type: string
      - type: boolean
      - items:
          nullable: true
          type: string
        type: array
    AccountAttributesChanged_changes_inner:
      properties:
        attribute:
          description: The name of the attribute.
          example: sn
          type: string
        oldValue:
          $ref: '#/components/schemas/AccountAttributesChanged_changes_inner_oldValue'
        newValue:
          $ref: '#/components/schemas/AccountAttributesChanged_changes_inner_newValue'
      required:
      - attribute
      - newValue
      - oldValue
      type: object
    AccountCorrelated_identity:
      description: Identity the account is correlated with.
      properties:
        type:
          description: DTO type of the identity the account is correlated with.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of the identity the account is correlated with.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Display name of the identity the account is correlated with.
          example: Michael Michaels
          type: string
      required:
      - id
      - name
      - type
      type: object
    AccountCorrelated_source:
      description: The source the accounts are being correlated from.
      properties:
        type:
          description: The DTO type of the source the accounts are being correlated
            from.
          enum:
          - SOURCE
          example: SOURCE
          type: string
        id:
          description: The ID of the source the accounts are being correlated from.
          example: 2c9180835d191a86015d28455b4b232a
          type: string
        name:
          description: Display name of the source the accounts are being correlated
            from.
          example: HR Active Directory
          type: string
      required:
      - id
      - name
      - type
      type: object
    AccountCorrelated_account:
      description: The correlated account.
      properties:
        type:
          description: The correlated account's DTO type.
          enum:
          - ACCOUNT
          example: ACCOUNT
          type: string
        id:
          description: The correlated account's ID.
          example: 98da47c31df444558c211f9b205184f6
          type: string
        name:
          description: The correlated account's display name.
          example: Brian Mendoza
          type: string
        nativeIdentity:
          description: Unique ID of the account on the source.
          example: "cn=john.doe,ou=users,dc=acme,dc=com"
          type: string
        uuid:
          description: The source's unique identifier for the account. UUID is generated
            by the source system.
          example: 1cb1f07d-3e5a-4431-becd-234fa4306108
          nullable: true
          type: string
      required:
      - id
      - name
      - nativeIdentity
      - type
      type: object
    AccountsCollectedForAggregation_source:
      description: Reference to the source that has been aggregated.
      properties:
        id:
          description: ID of the object to which this reference applies
          example: 4e4d982dddff4267ab12f0f1e72b5a6d
          type: string
        type:
          description: The type of object that is referenced
          enum:
          - SOURCE
          example: SOURCE
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: Corporate Active Directory
          type: string
      required:
      - id
      - name
      - type
      type: object
    AccountsCollectedForAggregation_stats:
      description: Overall statistics about the account collection.
      properties:
        scanned:
          description: The number of accounts which were scanned / iterated over.
          example: 200
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        unchanged:
          description: "The number of accounts which existed before, but had no changes."
          example: 190
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        changed:
          description: "The number of accounts which existed before, but had changes."
          example: 6
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        added:
          description: The number of accounts which are new - have not existed before.
          example: 4
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        removed:
          description: "The number accounts which existed before, but no longer exist\
            \ (thus getting removed)."
          example: 3
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
      required:
      - added
      - changed
      - removed
      - scanned
      - unchanged
      type: object
    AccountUncorrelated_identity:
      description: Identity the account is uncorrelated with.
      properties:
        type:
          description: DTO type of the identity the account is uncorrelated with.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of the identity the account is uncorrelated with.
          example: 2c3780a46faadee4016fb4e018c20652
          type: string
        name:
          description: Display name of the identity the account is uncorrelated with.
          example: Allen Albertson
          type: string
      required:
      - id
      - name
      - type
      type: object
    AccountUncorrelated_source:
      description: The source the accounts are uncorrelated from.
      properties:
        type:
          description: The DTO type of the source the accounts are uncorrelated from.
          enum:
          - SOURCE
          example: SOURCE
          type: string
        id:
          description: The ID of the source the accounts are uncorrelated from.
          example: 2c6180835d191a86015d28455b4b231b
          type: string
        name:
          description: Display name of the source the accounts are uncorrelated from.
          example: Corporate Directory
          type: string
      required:
      - id
      - name
      - type
      type: object
    AccountUncorrelated_account:
      description: Uncorrelated account.
      properties:
        type:
          description: Uncorrelated account's DTO type.
          enum:
          - ACCOUNT
          example: ACCOUNT
          type: object
        id:
          description: Uncorrelated account's ID.
          example: 4dd497e3723e439991cb6d0e478375dd
          type: string
        name:
          description: Uncorrelated account's display name.
          example: Sadie Jensen
          type: string
        nativeIdentity:
          description: Unique ID of the account on the source.
          example: "cn=john.doe,ou=users,dc=acme,dc=com"
          type: string
        uuid:
          description: The source's unique identifier for the account. UUID is generated
            by the source system.
          example: 1cb1f07d-3e5a-4431-becd-234fa4306108
          nullable: true
          type: string
      required:
      - id
      - name
      - nativeIdentity
      - type
      type: object
    CampaignActivated_campaign_campaignOwner:
      description: Details of the identity that owns the campaign.
      properties:
        id:
          description: The unique ID of the identity.
          example: 37f080867702c1910177031320c40n27
          type: string
        displayName:
          description: The human friendly name of the identity.
          example: John Snow
          type: string
        email:
          description: The primary email address of the identity.
          example: john.snow@example.com
          type: string
      required:
      - displayName
      - email
      - id
      type: object
    CampaignActivated_campaign:
      description: Details about the certification campaign that was activated.
      properties:
        id:
          description: Unique ID for the campaign.
          example: 2c91808576f886190176f88cac5a0010
          type: string
        name:
          description: The human friendly name of the campaign.
          example: Manager Access Campaign
          type: string
        description:
          description: Extended description of the campaign.
          example: Audit access for all employees.
          type: string
        created:
          description: The date and time the campaign was created.
          example: 2021-02-16T03:04:45.815Z
          format: date-time
          type: string
        modified:
          description: The date and time the campaign was last modified.
          example: 2021-02-16T03:06:45.815Z
          format: date-time
          nullable: true
          type: string
        deadline:
          description: The date and time the campaign is due.
          example: 2021-03-16T03:04:45.815Z
          format: date-time
          type: string
        type:
          description: The type of campaign.
          enum:
          - MANAGER
          - SOURCE_OWNER
          - SEARCH
          - ROLE_COMPOSITION
          example: MANAGER
          type: object
        campaignOwner:
          $ref: '#/components/schemas/CampaignActivated_campaign_campaignOwner'
        status:
          description: The current status of the campaign.
          enum:
          - ACTIVE
          example: ACTIVE
          type: object
      required:
      - campaignOwner
      - created
      - deadline
      - description
      - id
      - name
      - status
      - type
      type: object
    CampaignEnded_campaign:
      description: Details about the certification campaign that ended.
      properties:
        id:
          description: Unique ID for the campaign.
          example: 2c91808576f886190176f88cac5a0010
          type: string
        name:
          description: The human friendly name of the campaign.
          example: Manager Access Campaign
          type: string
        description:
          description: Extended description of the campaign.
          example: Audit access for all employees.
          type: string
        created:
          description: The date and time the campaign was created.
          example: 2021-02-16T03:04:45.815Z
          format: date-time
          type: string
        modified:
          description: The date and time the campaign was last modified.
          example: 2021-03-16T03:06:45.815Z
          format: date-time
          nullable: true
          type: string
        deadline:
          description: The date and time the campaign is due.
          example: 2021-03-16T03:04:45.815Z
          format: date-time
          type: string
        type:
          description: The type of campaign.
          enum:
          - MANAGER
          - SOURCE_OWNER
          - SEARCH
          - ROLE_COMPOSITION
          example: MANAGER
          type: object
        campaignOwner:
          $ref: '#/components/schemas/CampaignActivated_campaign_campaignOwner'
        status:
          description: The current status of the campaign.
          enum:
          - COMPLETED
          example: COMPLETED
          type: object
      required:
      - campaignOwner
      - created
      - deadline
      - description
      - id
      - name
      - status
      - type
      type: object
    CampaignGenerated_campaign_campaignOwner:
      description: The identity that owns the campaign.
      properties:
        id:
          description: The unique ID of the identity.
          example: 37f080867702c1910177031320c40n27
          type: string
        displayName:
          description: The display name of the identity.
          example: John Snow
          type: string
        email:
          description: The primary email address of the identity.
          example: john.snow@example.com
          type: string
      required:
      - displayName
      - email
      - id
      type: object
    CampaignGenerated_campaign:
      description: Details about the campaign that was generated.
      properties:
        id:
          description: The unique ID of the campaign.
          example: 2c91808576f886190176f88cac5a0010
          type: string
        name:
          description: Human friendly name of the campaign.
          example: Manager Access Campaign
          type: string
        description:
          description: Extended description of the campaign.
          example: Audit access for all employees.
          type: string
        created:
          description: The date and time the campaign was created.
          example: 2021-02-16T03:04:45.815Z
          format: date-time
          type: string
        modified:
          description: The date and time the campaign was last modified.
          example: 2021-02-17T03:04:45.815Z
          nullable: true
          type: string
        deadline:
          description: The date and time when the campaign must be finished by.
          example: 2021-02-18T03:04:45.815Z
          nullable: true
          type: string
        type:
          description: The type of campaign that was generated.
          enum:
          - MANAGER
          - SOURCE_OWNER
          - SEARCH
          - ROLE_COMPOSITION
          example: MANAGER
          type: object
        campaignOwner:
          $ref: '#/components/schemas/CampaignGenerated_campaign_campaignOwner'
        status:
          description: The current status of the campaign.
          enum:
          - STAGED
          - ACTIVATING
          - ACTIVE
          example: STAGED
          type: object
      required:
      - campaignOwner
      - created
      - description
      - id
      - name
      - status
      - type
      type: object
    CertificationSignedOff_certification:
      allOf:
      - $ref: '#/components/schemas/CertificationDto'
      description: The certification campaign that was signed off on.
      properties:
        id:
          description: Unique ID of the certification.
          example: 2c91808576f886190176f88caf0d0067
          type: string
        name:
          description: The name of the certification.
          example: Manager Access Review for Alice Baker
          type: string
        created:
          description: The date and time the certification was created.
          example: 2020-02-16T03:04:45.815Z
          format: date-time
          type: string
        modified:
          description: The date and time the certification was last modified.
          example: 2020-02-16T03:06:45.815Z
          format: date-time
          nullable: true
          type: string
      required:
      - created
      - id
      - name
    IdentityAttributesChanged_identity:
      description: Identity whose attributes changed.
      properties:
        type:
          description: DTO type of identity whose attributes changed.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of identity whose attributes changed.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Display name of identity whose attributes changed.
          example: Michael Michaels
          type: string
      required:
      - id
      - name
      - type
      type: object
    IdentityAttributesChanged_changes_inner_oldValue_oneOf_value:
      oneOf:
      - type: string
      - type: number
      - type: integer
      - type: boolean
    IdentityAttributesChanged_changes_inner_oldValue:
      description: The value of the identity attribute before it changed.
      example: sales
      nullable: true
      oneOf:
      - type: string
      - type: boolean
      - items:
          type: string
        type: array
      - additionalProperties:
          $ref: '#/components/schemas/IdentityAttributesChanged_changes_inner_oldValue_oneOf_value'
        nullable: true
        type: object
    IdentityAttributesChanged_changes_inner_newValue:
      description: The value of the identity attribute after it changed.
      example: marketing
      oneOf:
      - type: string
      - type: boolean
      - items:
          type: string
        type: array
      - additionalProperties:
          $ref: '#/components/schemas/IdentityAttributesChanged_changes_inner_oldValue_oneOf_value'
        nullable: true
        type: object
    IdentityAttributesChanged_changes_inner:
      properties:
        attribute:
          description: The name of the identity attribute that changed.
          example: department
          type: string
        oldValue:
          $ref: '#/components/schemas/IdentityAttributesChanged_changes_inner_oldValue'
        newValue:
          $ref: '#/components/schemas/IdentityAttributesChanged_changes_inner_newValue'
      required:
      - attribute
      type: object
    IdentityCreated_identity:
      description: Created identity.
      properties:
        type:
          description: Created identity's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Created identity ID.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Created identity's display name.
          example: Michael Michaels
          type: string
      required:
      - id
      - name
      - type
      type: object
    IdentityDeleted_identity:
      description: Deleted identity.
      properties:
        type:
          description: Deleted identity's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Deleted identity ID.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Deleted identity's display name.
          example: Michael Michaels
          type: string
      required:
      - id
      - name
      - type
      type: object
    ProvisioningCompleted_recipient:
      description: Provisioning recpient.
      properties:
        type:
          description: Provisioning recipient DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Provisioning recipient's identity ID.
          example: 2c7180a46faadee4016fb4e018c20642
          type: string
        name:
          description: Provisioning recipient's display name.
          example: Michael Michaels
          type: string
      required:
      - id
      - name
      - type
      type: object
    ProvisioningCompleted_requester:
      description: Provisioning requester's identity.
      nullable: true
      properties:
        type:
          description: Provisioning requester's DTO type.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: Provisioning requester's identity ID.
          example: 2c7180a46faadee4016fb4e018c20648
          type: string
        name:
          description: Provisioning owner's human-readable display name.
          example: William Wilson
          type: string
      required:
      - id
      - name
      - type
      type: object
    ProvisioningCompleted_accountRequests_inner_source:
      description: Reference to the source being provisioned against.
      properties:
        id:
          description: ID of the object to which this reference applies
          example: 4e4d982dddff4267ab12f0f1e72b5a6d
          type: string
        type:
          description: The type of object that is referenced
          enum:
          - SOURCE
          example: SOURCE
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies
          example: Corporate Active Directory
          type: string
      required:
      - id
      - name
      - type
      type: object
    ProvisioningCompleted_accountRequests_inner_attributeRequests_inner:
      properties:
        attributeName:
          description: The name of the attribute being provisioned.
          example: memberOf
          type: string
        attributeValue:
          description: The value of the attribute being provisioned.
          example: "CN=jedi,DC=starwars,DC=com"
          nullable: true
          type: string
        operation:
          description: The operation to handle the attribute.
          enum:
          - Add
          - Set
          - Remove
          example: Add
          type: object
      required:
      - attributeName
      - operation
      type: object
    ProvisioningCompleted_accountRequests_inner:
      properties:
        source:
          $ref: '#/components/schemas/ProvisioningCompleted_accountRequests_inner_source'
        accountId:
          description: The unique idenfier of the account being provisioned.
          example: "CN=Chewy.Bacca,ou=hardcorefigter,ou=wookies,dc=starwars,dc=com"
          type: string
        accountOperation:
          description: "The provisioning operation; typically Create, Modify, Enable,\
            \ Disable, Unlock, or Delete."
          example: Modify
          type: string
        provisioningResult:
          description: "The overall result of the provisioning transaction; this could\
            \ be success, pending, failed, etc."
          enum:
          - SUCCESS
          - PENDING
          - FAILED
          example: SUCCESS
          type: object
        provisioningTarget:
          description: "The name of the provisioning channel selected; this could\
            \ be the same as the source, or could be a Service Desk Integration Module\
            \ (SDIM)."
          example: Corp AD
          type: string
        ticketId:
          description: "A reference to a tracking number, if this is sent to a Service\
            \ Desk Integration Module (SDIM)."
          example: "72619262"
          nullable: true
          type: string
        attributeRequests:
          description: A list of attributes as part of the provisioning transaction.
          items:
            $ref: '#/components/schemas/ProvisioningCompleted_accountRequests_inner_attributeRequests_inner'
          nullable: true
          type: array
      required:
      - accountOperation
      - provisioningResult
      - provisioningTarget
      - source
      type: object
    SavedSearchComplete_searchResults_Account:
      description: A table of accounts that match the search criteria.
      nullable: true
      properties:
        count:
          description: The number of rows in the table.
          example: "3"
          type: string
        noun:
          description: The type of object represented in the table.
          example: accounts
          type: string
        preview:
          description: A sample of the data in the table.
          items:
            example: []
            items:
              example: Robert.Chase
              type: string
            type: array
          type: array
      required:
      - count
      - noun
      - preview
      type: object
    SavedSearchComplete_searchResults_Entitlement:
      description: A table of entitlements that match the search criteria.
      nullable: true
      properties:
        count:
          description: The number of rows in the table.
          example: "2"
          type: string
        noun:
          description: The type of object represented in the table.
          example: entitlements
          type: string
        preview:
          description: A sample of the data in the table.
          items:
            example: []
            items:
              example: Administrator
              type: string
            type: array
          type: array
      required:
      - count
      - noun
      - preview
      type: object
    SavedSearchComplete_searchResults_Identity:
      description: A table of identities that match the search criteria.
      nullable: true
      properties:
        count:
          description: The number of rows in the table.
          example: "2"
          type: string
        noun:
          description: The type of object represented in the table.
          example: identities
          type: string
        preview:
          description: A sample of the data in the table.
          items:
            example: []
            items:
              example: Carol Shelby
              type: string
            type: array
          type: array
      required:
      - count
      - noun
      - preview
      type: object
    SavedSearchComplete_searchResults:
      description: "A preview of the search results for each object type. This includes\
        \ a count as well as headers, and the first several rows of data, per object\
        \ type."
      properties:
        Account:
          $ref: '#/components/schemas/SavedSearchComplete_searchResults_Account'
        Entitlement:
          $ref: '#/components/schemas/SavedSearchComplete_searchResults_Entitlement'
        Identity:
          $ref: '#/components/schemas/SavedSearchComplete_searchResults_Identity'
      type: object
    SourceCreated_actor:
      description: Identity who created the source.
      properties:
        type:
          description: DTO type of identity who created the source.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of identity who created the source.
          example: 2c7180a46faadee4016fb4e018c20648
          type: string
        name:
          description: Display name of identity who created the source.
          example: William Wilson
          type: string
      required:
      - id
      - name
      - type
      type: object
    SourceDeleted_actor:
      description: Identity who deleted the source.
      properties:
        type:
          description: DTO type of identity who deleted the source.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of identity who deleted the source.
          example: 2c7180a46faadee4016fb4e018c20648
          type: string
        name:
          description: Display name of identity who deleted the source.
          example: William Wilson
          type: string
      required:
      - id
      - name
      - type
      type: object
    SourceUpdated_actor:
      description: Identity who updated the source.
      properties:
        type:
          description: DTO type of identity who updated the source.
          enum:
          - IDENTITY
          example: IDENTITY
          type: string
        id:
          description: ID of identity who updated the source.
          example: 2c7180a46faadee4016fb4e018c20648
          type: string
        name:
          description: Display name of identity who updated the source.
          example: William Wilson
          type: string
      required:
      - name
      - type
      type: object
    VAClusterStatusChangeEvent_application:
      description: Details about the `CLUSTER` or `SOURCE` that initiated this event.
      properties:
        id:
          description: The GUID of the application
          example: 2c9180866166b5b0016167c32ef31a66
          type: string
        name:
          description: The name of the application
          example: Production VA Cluster
          type: string
        attributes:
          additionalProperties: true
          description: Custom map of attributes for a source.  This will only be populated
            if type is `SOURCE` and the source has a proxy.
          nullable: true
          type: object
          example: null
      required:
      - attributes
      - id
      - name
      type: object
    VAClusterStatusChangeEvent_healthCheckResult:
      description: The results of the most recent health check.
      properties:
        message:
          description: Detailed message of the result of the health check.
          example: Test Connection failed with exception. Error message - java.lang
            Exception
          type: string
        resultType:
          description: The type of the health check result.
          example: SOURCE_STATE_ERROR_CLUSTER
          type: string
        status:
          description: The status of the health check.
          enum:
          - Succeeded
          - Failed
          example: Succeeded
          type: object
      required:
      - message
      - resultType
      - status
      type: object
    VAClusterStatusChangeEvent_previousHealthCheckResult:
      description: The results of the last health check.
      properties:
        message:
          description: Detailed message of the result of the health check.
          example: Test Connection failed with exception. Error message - java.lang
            Exception
          type: string
        resultType:
          description: The type of the health check result.
          example: SOURCE_STATE_ERROR_CLUSTER
          type: string
        status:
          description: The status of the health check.
          enum:
          - Succeeded
          - Failed
          example: Failed
          type: object
      required:
      - message
      - resultType
      - status
      type: object
    ViolationOwnerAssignmentConfig_ownerRef:
      allOf:
      - $ref: '#/components/schemas/OwnerDto'
      - nullable: true
        type: object
    Schedule_1_days:
      allOf:
      - $ref: '#/components/schemas/Selector'
      - description: |
          The days to execute the search.

          If `type` is `WEEKLY`, the values will be `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, and `SUN`.

          If `type` is `MONTHLY`, the values will be a number in double quotes, like `"1"`, `"10"`, or `"28"`.  Optionally, the value `"L"` can be used to refer to the last day of the month.
        example:
          type: LIST
          values:
          - MON
          - WED
          - FRI
        nullable: true
        type: object
    Schedule_1_hours:
      allOf:
      - $ref: '#/components/schemas/Selector'
      - description: The hours selected.
        example:
          type: RANGE
          values:
          - "9"
          - "18"
          interval: 3
        type: object
    ViolationContext_policy:
      allOf:
      - $ref: '#/components/schemas/SodPolicyDto'
      - properties:
          type:
            example: SOD_POLICY
            type: string
          name:
            example: A very cool policy name
            type: string
        type: object
      description: The types of objects supported for SOD policy violations.
      example:
        type: ENTITLEMENT
      properties:
        type:
          description: The type of object supported for SOD policy violations.
          enum:
          - ENTITLEMENT
          example: ENTITLEMENT
          type: object
    RecommenderCalculations_identityAttributes_value:
      example:
        value: value
      properties:
        value:
          type: string
      type: object
    AccessCriteria_criteriaList_inner:
      properties:
        type:
          description: DTO type
          enum:
          - ENTITLEMENT
          example: ENTITLEMENT
          type: string
        id:
          description: ID of the object to which this reference applies to
          example: 2c91808568c529c60168cca6f90c1313
          type: string
        name:
          description: Human-readable display name of the object to which this reference
            applies to
          example: Administrator
          type: string
      type: object
    ConditionEffect_config:
      description: Arbitrary map containing a configuration based on the EffectType.
      example:
        defaultValueLabel: Access to Remove
        element: "8110662963316867"
      properties:
        defaultValueLabel:
          description: Effect type's label.
          example: Access to Remove
          type: string
        element:
          description: Element's identifier.
          example: "8110662963316867"
          type: string
      type: object
      x-go-name: Config
    SodViolationContext_conflictingAccessCriteria_leftCriteria:
      example:
        criteriaList:
        - existing: true
          name: My HR Entitlement
          id: 2c918085771e9d3301773b3cb66f6398
          type: IDENTITY
        - existing: true
          name: My HR Entitlement
          id: 2c918085771e9d3301773b3cb66f6398
          type: IDENTITY
      properties:
        criteriaList:
          items:
            $ref: '#/components/schemas/SodExemptCriteria'
          type: array
      type: object
    SodViolationContext_conflictingAccessCriteria:
      description: The object which contains the left and right hand side of the entitlements
        that got violated according to the policy.
      example:
        leftCriteria:
          criteriaList:
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
        rightCriteria:
          criteriaList:
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
      properties:
        leftCriteria:
          $ref: '#/components/schemas/SodViolationContext_conflictingAccessCriteria_leftCriteria'
        rightCriteria:
          $ref: '#/components/schemas/SodViolationContext_conflictingAccessCriteria_leftCriteria'
      type: object
    SodViolationContext_1_conflictingAccessCriteria_leftCriteria:
      example:
        criteriaList:
        - existing: true
          name: My HR Entitlement
          id: 2c918085771e9d3301773b3cb66f6398
          type: IDENTITY
        - existing: true
          name: My HR Entitlement
          id: 2c918085771e9d3301773b3cb66f6398
          type: IDENTITY
      properties:
        criteriaList:
          items:
            $ref: '#/components/schemas/SodExemptCriteria_1'
          type: array
      type: object
    SodViolationContext_1_conflictingAccessCriteria:
      description: The object which contains the left and right hand side of the entitlements
        that got violated according to the policy.
      example:
        leftCriteria:
          criteriaList:
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
        rightCriteria:
          criteriaList:
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
          - existing: true
            name: My HR Entitlement
            id: 2c918085771e9d3301773b3cb66f6398
            type: IDENTITY
      properties:
        leftCriteria:
          $ref: '#/components/schemas/SodViolationContext_1_conflictingAccessCriteria_leftCriteria'
        rightCriteria:
          $ref: '#/components/schemas/SodViolationContext_1_conflictingAccessCriteria_leftCriteria'
      type: object
    ExceptionCriteria_criteriaList_inner:
      allOf:
      - $ref: '#/components/schemas/ExceptionCriteriaAccess'
      description: The types of objects supported for SOD violations
      properties:
        type:
          description: The type of object that is referenced
          enum:
          - ENTITLEMENT
          example: ENTITLEMENT
          type: object
    TransformDefinition_1_attributes_value:
      anyOf:
      - type: string
      - type: object
  securitySchemes:
    UserContextAuth:
      description: "OAuth2 Bearer token (JWT) generated using either a Personal Access\
        \ token or through the Authorization Code flow. \nSee [IdentityNow REST API\
        \ Authentication](https://developer.sailpoint.com/idn/api/authentication)\
        \ for more information.\n- Directions for generating a [personal access token](https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens)\n\
        - Directions using [client credentials flow](https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow)\n\
        - Directions for using [authorization code flow](https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow)\n\
        \nWhich authentication method should I choose?  See our [guide](https://developer.sailpoint.com/idn/api/authentication#which-oauth-20-grant-flow-should-i-use)\n\
        \nLearn more about how to find your `tokenUrl` and `authorizationUrl` [in\
        \ our docs](https://developer.sailpoint.com/idn/api/authentication#find-your-tenants-oauth-details)\n"
      flows:
        authorizationCode:
          authorizationUrl: https://tenant.login.sailpoint.com/oauth/authorize
          scopes:
            sp:scopes:default: default scope
            sp:scopes:all: access to all scopes
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
        clientCredentials:
          scopes:
            sp:scopes:default: default scope
            sp:scopes:all: access to all scopes
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
      type: oauth2
    ApplicationOnlyAuth:
      description: "OAuth2 Bearer token (JWT) generated using client credentials flow.\
        \ \nSee [IdentityNow REST API Authentication](https://developer.sailpoint.com/idn/api/authentication)\
        \ for more information.\n- Directions using [client credentials flow](https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow)\n\
        \nWhich authentication method should I choose?  See our [guide](https://developer.sailpoint.com/idn/api/authentication#which-oauth-20-grant-flow-should-i-use)\n\
        \nLearn more about how to find your `tokenUrl` and `authorizationUrl` [in\
        \ our docs](https://developer.sailpoint.com/idn/api/authentication#find-your-tenants-oauth-details)\n"
      flows:
        clientCredentials:
          scopes:
            sp:scopes:default: default scope
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
      type: oauth2
