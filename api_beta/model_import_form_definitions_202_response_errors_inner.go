/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the ImportFormDefinitions202ResponseErrorsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportFormDefinitions202ResponseErrorsInner{}

// ImportFormDefinitions202ResponseErrorsInner struct for ImportFormDefinitions202ResponseErrorsInner
type ImportFormDefinitions202ResponseErrorsInner struct {
	Detail map[string]map[string]interface{} `json:"detail,omitempty"`
	Key *string `json:"key,omitempty"`
	Text *string `json:"text,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ImportFormDefinitions202ResponseErrorsInner ImportFormDefinitions202ResponseErrorsInner

// NewImportFormDefinitions202ResponseErrorsInner instantiates a new ImportFormDefinitions202ResponseErrorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportFormDefinitions202ResponseErrorsInner() *ImportFormDefinitions202ResponseErrorsInner {
	this := ImportFormDefinitions202ResponseErrorsInner{}
	return &this
}

// NewImportFormDefinitions202ResponseErrorsInnerWithDefaults instantiates a new ImportFormDefinitions202ResponseErrorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportFormDefinitions202ResponseErrorsInnerWithDefaults() *ImportFormDefinitions202ResponseErrorsInner {
	this := ImportFormDefinitions202ResponseErrorsInner{}
	return &this
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ImportFormDefinitions202ResponseErrorsInner) GetDetail() map[string]map[string]interface{} {
	if o == nil || isNil(o.Detail) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportFormDefinitions202ResponseErrorsInner) GetDetailOk() (map[string]map[string]interface{}, bool) {
	if o == nil || isNil(o.Detail) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ImportFormDefinitions202ResponseErrorsInner) HasDetail() bool {
	if o != nil && !isNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given map[string]map[string]interface{} and assigns it to the Detail field.
func (o *ImportFormDefinitions202ResponseErrorsInner) SetDetail(v map[string]map[string]interface{}) {
	o.Detail = v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ImportFormDefinitions202ResponseErrorsInner) GetKey() string {
	if o == nil || isNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportFormDefinitions202ResponseErrorsInner) GetKeyOk() (*string, bool) {
	if o == nil || isNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ImportFormDefinitions202ResponseErrorsInner) HasKey() bool {
	if o != nil && !isNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ImportFormDefinitions202ResponseErrorsInner) SetKey(v string) {
	o.Key = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *ImportFormDefinitions202ResponseErrorsInner) GetText() string {
	if o == nil || isNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportFormDefinitions202ResponseErrorsInner) GetTextOk() (*string, bool) {
	if o == nil || isNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *ImportFormDefinitions202ResponseErrorsInner) HasText() bool {
	if o != nil && !isNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *ImportFormDefinitions202ResponseErrorsInner) SetText(v string) {
	o.Text = &v
}

func (o ImportFormDefinitions202ResponseErrorsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportFormDefinitions202ResponseErrorsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	if !isNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !isNil(o.Text) {
		toSerialize["text"] = o.Text
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ImportFormDefinitions202ResponseErrorsInner) UnmarshalJSON(bytes []byte) (err error) {
	varImportFormDefinitions202ResponseErrorsInner := _ImportFormDefinitions202ResponseErrorsInner{}

	if err = json.Unmarshal(bytes, &varImportFormDefinitions202ResponseErrorsInner); err == nil {
	*o = ImportFormDefinitions202ResponseErrorsInner(varImportFormDefinitions202ResponseErrorsInner)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "detail")
		delete(additionalProperties, "key")
		delete(additionalProperties, "text")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableImportFormDefinitions202ResponseErrorsInner struct {
	value *ImportFormDefinitions202ResponseErrorsInner
	isSet bool
}

func (v NullableImportFormDefinitions202ResponseErrorsInner) Get() *ImportFormDefinitions202ResponseErrorsInner {
	return v.value
}

func (v *NullableImportFormDefinitions202ResponseErrorsInner) Set(val *ImportFormDefinitions202ResponseErrorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableImportFormDefinitions202ResponseErrorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableImportFormDefinitions202ResponseErrorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportFormDefinitions202ResponseErrorsInner(val *ImportFormDefinitions202ResponseErrorsInner) *NullableImportFormDefinitions202ResponseErrorsInner {
	return &NullableImportFormDefinitions202ResponseErrorsInner{value: val, isSet: true}
}

func (v NullableImportFormDefinitions202ResponseErrorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportFormDefinitions202ResponseErrorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


