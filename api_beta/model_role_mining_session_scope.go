/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the RoleMiningSessionScope type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleMiningSessionScope{}

// RoleMiningSessionScope struct for RoleMiningSessionScope
type RoleMiningSessionScope struct {
	// The list of identities for this role mining session.
	IdentityIds []string `json:"identityIds,omitempty"`
	// The \"search\" criteria that produces the list of identities for this role mining session.
	Criteria NullableString `json:"criteria,omitempty"`
	// The filter criteria for this role mining session.
	AttributeFilterCriteria []map[string]interface{} `json:"attributeFilterCriteria,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RoleMiningSessionScope RoleMiningSessionScope

// NewRoleMiningSessionScope instantiates a new RoleMiningSessionScope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleMiningSessionScope() *RoleMiningSessionScope {
	this := RoleMiningSessionScope{}
	return &this
}

// NewRoleMiningSessionScopeWithDefaults instantiates a new RoleMiningSessionScope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleMiningSessionScopeWithDefaults() *RoleMiningSessionScope {
	this := RoleMiningSessionScope{}
	return &this
}

// GetIdentityIds returns the IdentityIds field value if set, zero value otherwise.
func (o *RoleMiningSessionScope) GetIdentityIds() []string {
	if o == nil || isNil(o.IdentityIds) {
		var ret []string
		return ret
	}
	return o.IdentityIds
}

// GetIdentityIdsOk returns a tuple with the IdentityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleMiningSessionScope) GetIdentityIdsOk() ([]string, bool) {
	if o == nil || isNil(o.IdentityIds) {
		return nil, false
	}
	return o.IdentityIds, true
}

// HasIdentityIds returns a boolean if a field has been set.
func (o *RoleMiningSessionScope) HasIdentityIds() bool {
	if o != nil && !isNil(o.IdentityIds) {
		return true
	}

	return false
}

// SetIdentityIds gets a reference to the given []string and assigns it to the IdentityIds field.
func (o *RoleMiningSessionScope) SetIdentityIds(v []string) {
	o.IdentityIds = v
}

// GetCriteria returns the Criteria field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleMiningSessionScope) GetCriteria() string {
	if o == nil || isNil(o.Criteria.Get()) {
		var ret string
		return ret
	}
	return *o.Criteria.Get()
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleMiningSessionScope) GetCriteriaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Criteria.Get(), o.Criteria.IsSet()
}

// HasCriteria returns a boolean if a field has been set.
func (o *RoleMiningSessionScope) HasCriteria() bool {
	if o != nil && o.Criteria.IsSet() {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given NullableString and assigns it to the Criteria field.
func (o *RoleMiningSessionScope) SetCriteria(v string) {
	o.Criteria.Set(&v)
}
// SetCriteriaNil sets the value for Criteria to be an explicit nil
func (o *RoleMiningSessionScope) SetCriteriaNil() {
	o.Criteria.Set(nil)
}

// UnsetCriteria ensures that no value is present for Criteria, not even an explicit nil
func (o *RoleMiningSessionScope) UnsetCriteria() {
	o.Criteria.Unset()
}

// GetAttributeFilterCriteria returns the AttributeFilterCriteria field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoleMiningSessionScope) GetAttributeFilterCriteria() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.AttributeFilterCriteria
}

// GetAttributeFilterCriteriaOk returns a tuple with the AttributeFilterCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoleMiningSessionScope) GetAttributeFilterCriteriaOk() ([]map[string]interface{}, bool) {
	if o == nil || isNil(o.AttributeFilterCriteria) {
		return nil, false
	}
	return o.AttributeFilterCriteria, true
}

// HasAttributeFilterCriteria returns a boolean if a field has been set.
func (o *RoleMiningSessionScope) HasAttributeFilterCriteria() bool {
	if o != nil && isNil(o.AttributeFilterCriteria) {
		return true
	}

	return false
}

// SetAttributeFilterCriteria gets a reference to the given []map[string]interface{} and assigns it to the AttributeFilterCriteria field.
func (o *RoleMiningSessionScope) SetAttributeFilterCriteria(v []map[string]interface{}) {
	o.AttributeFilterCriteria = v
}

func (o RoleMiningSessionScope) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleMiningSessionScope) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.IdentityIds) {
		toSerialize["identityIds"] = o.IdentityIds
	}
	if o.Criteria.IsSet() {
		toSerialize["criteria"] = o.Criteria.Get()
	}
	if o.AttributeFilterCriteria != nil {
		toSerialize["attributeFilterCriteria"] = o.AttributeFilterCriteria
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RoleMiningSessionScope) UnmarshalJSON(bytes []byte) (err error) {
	varRoleMiningSessionScope := _RoleMiningSessionScope{}

	if err = json.Unmarshal(bytes, &varRoleMiningSessionScope); err == nil {
	*o = RoleMiningSessionScope(varRoleMiningSessionScope)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "identityIds")
		delete(additionalProperties, "criteria")
		delete(additionalProperties, "attributeFilterCriteria")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRoleMiningSessionScope struct {
	value *RoleMiningSessionScope
	isSet bool
}

func (v NullableRoleMiningSessionScope) Get() *RoleMiningSessionScope {
	return v.value
}

func (v *NullableRoleMiningSessionScope) Set(val *RoleMiningSessionScope) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleMiningSessionScope) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleMiningSessionScope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleMiningSessionScope(val *RoleMiningSessionScope) *NullableRoleMiningSessionScope {
	return &NullableRoleMiningSessionScope{value: val, isSet: true}
}

func (v NullableRoleMiningSessionScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleMiningSessionScope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


