/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the AccessProfileApprovalScheme type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessProfileApprovalScheme{}

// AccessProfileApprovalScheme struct for AccessProfileApprovalScheme
type AccessProfileApprovalScheme struct {
	// Describes the individual or group that is responsible for an approval step. Values are as follows. **APP_OWNER**: The owner of the Application  **OWNER**: Owner of the associated Access Profile or Role  **SOURCE_OWNER**: Owner of the Source associated with an Access Profile  **MANAGER**: Manager of the Identity making the request  **GOVERNANCE_GROUP**: A Governance Group, the ID of which is specified by the **approverId** field
	ApproverType *string `json:"approverType,omitempty"`
	// Id of the specific approver, used only when approverType is GOVERNANCE_GROUP
	ApproverId NullableString `json:"approverId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccessProfileApprovalScheme AccessProfileApprovalScheme

// NewAccessProfileApprovalScheme instantiates a new AccessProfileApprovalScheme object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessProfileApprovalScheme() *AccessProfileApprovalScheme {
	this := AccessProfileApprovalScheme{}
	return &this
}

// NewAccessProfileApprovalSchemeWithDefaults instantiates a new AccessProfileApprovalScheme object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessProfileApprovalSchemeWithDefaults() *AccessProfileApprovalScheme {
	this := AccessProfileApprovalScheme{}
	return &this
}

// GetApproverType returns the ApproverType field value if set, zero value otherwise.
func (o *AccessProfileApprovalScheme) GetApproverType() string {
	if o == nil || isNil(o.ApproverType) {
		var ret string
		return ret
	}
	return *o.ApproverType
}

// GetApproverTypeOk returns a tuple with the ApproverType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfileApprovalScheme) GetApproverTypeOk() (*string, bool) {
	if o == nil || isNil(o.ApproverType) {
		return nil, false
	}
	return o.ApproverType, true
}

// HasApproverType returns a boolean if a field has been set.
func (o *AccessProfileApprovalScheme) HasApproverType() bool {
	if o != nil && !isNil(o.ApproverType) {
		return true
	}

	return false
}

// SetApproverType gets a reference to the given string and assigns it to the ApproverType field.
func (o *AccessProfileApprovalScheme) SetApproverType(v string) {
	o.ApproverType = &v
}

// GetApproverId returns the ApproverId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessProfileApprovalScheme) GetApproverId() string {
	if o == nil || isNil(o.ApproverId.Get()) {
		var ret string
		return ret
	}
	return *o.ApproverId.Get()
}

// GetApproverIdOk returns a tuple with the ApproverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessProfileApprovalScheme) GetApproverIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApproverId.Get(), o.ApproverId.IsSet()
}

// HasApproverId returns a boolean if a field has been set.
func (o *AccessProfileApprovalScheme) HasApproverId() bool {
	if o != nil && o.ApproverId.IsSet() {
		return true
	}

	return false
}

// SetApproverId gets a reference to the given NullableString and assigns it to the ApproverId field.
func (o *AccessProfileApprovalScheme) SetApproverId(v string) {
	o.ApproverId.Set(&v)
}
// SetApproverIdNil sets the value for ApproverId to be an explicit nil
func (o *AccessProfileApprovalScheme) SetApproverIdNil() {
	o.ApproverId.Set(nil)
}

// UnsetApproverId ensures that no value is present for ApproverId, not even an explicit nil
func (o *AccessProfileApprovalScheme) UnsetApproverId() {
	o.ApproverId.Unset()
}

func (o AccessProfileApprovalScheme) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessProfileApprovalScheme) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ApproverType) {
		toSerialize["approverType"] = o.ApproverType
	}
	if o.ApproverId.IsSet() {
		toSerialize["approverId"] = o.ApproverId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccessProfileApprovalScheme) UnmarshalJSON(bytes []byte) (err error) {
	varAccessProfileApprovalScheme := _AccessProfileApprovalScheme{}

	if err = json.Unmarshal(bytes, &varAccessProfileApprovalScheme); err == nil {
	*o = AccessProfileApprovalScheme(varAccessProfileApprovalScheme)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "approverType")
		delete(additionalProperties, "approverId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccessProfileApprovalScheme struct {
	value *AccessProfileApprovalScheme
	isSet bool
}

func (v NullableAccessProfileApprovalScheme) Get() *AccessProfileApprovalScheme {
	return v.value
}

func (v *NullableAccessProfileApprovalScheme) Set(val *AccessProfileApprovalScheme) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessProfileApprovalScheme) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessProfileApprovalScheme) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessProfileApprovalScheme(val *AccessProfileApprovalScheme) *NullableAccessProfileApprovalScheme {
	return &NullableAccessProfileApprovalScheme{value: val, isSet: true}
}

func (v NullableAccessProfileApprovalScheme) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessProfileApprovalScheme) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


