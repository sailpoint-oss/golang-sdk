/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	"fmt"
)

// checks if the AccountAttributesCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountAttributesCreate{}

// AccountAttributesCreate struct for AccountAttributesCreate
type AccountAttributesCreate struct {
	Attributes AccountAttributesCreateAttributes `json:"attributes"`
	AdditionalProperties map[string]interface{}
}

type _AccountAttributesCreate AccountAttributesCreate

// NewAccountAttributesCreate instantiates a new AccountAttributesCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountAttributesCreate(attributes AccountAttributesCreateAttributes) *AccountAttributesCreate {
	this := AccountAttributesCreate{}
	this.Attributes = attributes
	return &this
}

// NewAccountAttributesCreateWithDefaults instantiates a new AccountAttributesCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountAttributesCreateWithDefaults() *AccountAttributesCreate {
	this := AccountAttributesCreate{}
	return &this
}

// GetAttributes returns the Attributes field value
func (o *AccountAttributesCreate) GetAttributes() AccountAttributesCreateAttributes {
	if o == nil {
		var ret AccountAttributesCreateAttributes
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *AccountAttributesCreate) GetAttributesOk() (*AccountAttributesCreateAttributes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Attributes, true
}

// SetAttributes sets field value
func (o *AccountAttributesCreate) SetAttributes(v AccountAttributesCreateAttributes) {
	o.Attributes = v
}

func (o AccountAttributesCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountAttributesCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attributes"] = o.Attributes

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountAttributesCreate) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"attributes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountAttributesCreate := _AccountAttributesCreate{}

	if err = json.Unmarshal(bytes, &varAccountAttributesCreate); err == nil {
	*o = AccountAttributesCreate(varAccountAttributesCreate)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "attributes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountAttributesCreate struct {
	value *AccountAttributesCreate
	isSet bool
}

func (v NullableAccountAttributesCreate) Get() *AccountAttributesCreate {
	return v.value
}

func (v *NullableAccountAttributesCreate) Set(val *AccountAttributesCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountAttributesCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountAttributesCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountAttributesCreate(val *AccountAttributesCreate) *NullableAccountAttributesCreate {
	return &NullableAccountAttributesCreate{value: val, isSet: true}
}

func (v NullableAccountAttributesCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountAttributesCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


