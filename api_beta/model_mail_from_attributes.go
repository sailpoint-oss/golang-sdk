/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the MailFromAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MailFromAttributes{}

// MailFromAttributes MAIL FROM attributes for a domain / identity
type MailFromAttributes struct {
	// The email identity
	Identity *string `json:"identity,omitempty"`
	// The name of a domain that an email identity uses as a custom MAIL FROM domain
	MailFromDomain *string `json:"mailFromDomain,omitempty"`
	// MX record that is required in customer's DNS to allow the domain to receive bounce and complaint notifications that email providers send you
	MxRecord *string `json:"mxRecord,omitempty"`
	// TXT record that is required in customer's DNS in order to prove that Amazon SES is authorized to send email from your domain
	TxtRecord *string `json:"txtRecord,omitempty"`
	// The current status of the MAIL FROM verification
	MailFromDomainStatus *string `json:"mailFromDomainStatus,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MailFromAttributes MailFromAttributes

// NewMailFromAttributes instantiates a new MailFromAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMailFromAttributes() *MailFromAttributes {
	this := MailFromAttributes{}
	return &this
}

// NewMailFromAttributesWithDefaults instantiates a new MailFromAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMailFromAttributesWithDefaults() *MailFromAttributes {
	this := MailFromAttributes{}
	return &this
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *MailFromAttributes) GetIdentity() string {
	if o == nil || isNil(o.Identity) {
		var ret string
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailFromAttributes) GetIdentityOk() (*string, bool) {
	if o == nil || isNil(o.Identity) {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *MailFromAttributes) HasIdentity() bool {
	if o != nil && !isNil(o.Identity) {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given string and assigns it to the Identity field.
func (o *MailFromAttributes) SetIdentity(v string) {
	o.Identity = &v
}

// GetMailFromDomain returns the MailFromDomain field value if set, zero value otherwise.
func (o *MailFromAttributes) GetMailFromDomain() string {
	if o == nil || isNil(o.MailFromDomain) {
		var ret string
		return ret
	}
	return *o.MailFromDomain
}

// GetMailFromDomainOk returns a tuple with the MailFromDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailFromAttributes) GetMailFromDomainOk() (*string, bool) {
	if o == nil || isNil(o.MailFromDomain) {
		return nil, false
	}
	return o.MailFromDomain, true
}

// HasMailFromDomain returns a boolean if a field has been set.
func (o *MailFromAttributes) HasMailFromDomain() bool {
	if o != nil && !isNil(o.MailFromDomain) {
		return true
	}

	return false
}

// SetMailFromDomain gets a reference to the given string and assigns it to the MailFromDomain field.
func (o *MailFromAttributes) SetMailFromDomain(v string) {
	o.MailFromDomain = &v
}

// GetMxRecord returns the MxRecord field value if set, zero value otherwise.
func (o *MailFromAttributes) GetMxRecord() string {
	if o == nil || isNil(o.MxRecord) {
		var ret string
		return ret
	}
	return *o.MxRecord
}

// GetMxRecordOk returns a tuple with the MxRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailFromAttributes) GetMxRecordOk() (*string, bool) {
	if o == nil || isNil(o.MxRecord) {
		return nil, false
	}
	return o.MxRecord, true
}

// HasMxRecord returns a boolean if a field has been set.
func (o *MailFromAttributes) HasMxRecord() bool {
	if o != nil && !isNil(o.MxRecord) {
		return true
	}

	return false
}

// SetMxRecord gets a reference to the given string and assigns it to the MxRecord field.
func (o *MailFromAttributes) SetMxRecord(v string) {
	o.MxRecord = &v
}

// GetTxtRecord returns the TxtRecord field value if set, zero value otherwise.
func (o *MailFromAttributes) GetTxtRecord() string {
	if o == nil || isNil(o.TxtRecord) {
		var ret string
		return ret
	}
	return *o.TxtRecord
}

// GetTxtRecordOk returns a tuple with the TxtRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailFromAttributes) GetTxtRecordOk() (*string, bool) {
	if o == nil || isNil(o.TxtRecord) {
		return nil, false
	}
	return o.TxtRecord, true
}

// HasTxtRecord returns a boolean if a field has been set.
func (o *MailFromAttributes) HasTxtRecord() bool {
	if o != nil && !isNil(o.TxtRecord) {
		return true
	}

	return false
}

// SetTxtRecord gets a reference to the given string and assigns it to the TxtRecord field.
func (o *MailFromAttributes) SetTxtRecord(v string) {
	o.TxtRecord = &v
}

// GetMailFromDomainStatus returns the MailFromDomainStatus field value if set, zero value otherwise.
func (o *MailFromAttributes) GetMailFromDomainStatus() string {
	if o == nil || isNil(o.MailFromDomainStatus) {
		var ret string
		return ret
	}
	return *o.MailFromDomainStatus
}

// GetMailFromDomainStatusOk returns a tuple with the MailFromDomainStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MailFromAttributes) GetMailFromDomainStatusOk() (*string, bool) {
	if o == nil || isNil(o.MailFromDomainStatus) {
		return nil, false
	}
	return o.MailFromDomainStatus, true
}

// HasMailFromDomainStatus returns a boolean if a field has been set.
func (o *MailFromAttributes) HasMailFromDomainStatus() bool {
	if o != nil && !isNil(o.MailFromDomainStatus) {
		return true
	}

	return false
}

// SetMailFromDomainStatus gets a reference to the given string and assigns it to the MailFromDomainStatus field.
func (o *MailFromAttributes) SetMailFromDomainStatus(v string) {
	o.MailFromDomainStatus = &v
}

func (o MailFromAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MailFromAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Identity) {
		toSerialize["identity"] = o.Identity
	}
	if !isNil(o.MailFromDomain) {
		toSerialize["mailFromDomain"] = o.MailFromDomain
	}
	if !isNil(o.MxRecord) {
		toSerialize["mxRecord"] = o.MxRecord
	}
	if !isNil(o.TxtRecord) {
		toSerialize["txtRecord"] = o.TxtRecord
	}
	if !isNil(o.MailFromDomainStatus) {
		toSerialize["mailFromDomainStatus"] = o.MailFromDomainStatus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MailFromAttributes) UnmarshalJSON(bytes []byte) (err error) {
	varMailFromAttributes := _MailFromAttributes{}

	if err = json.Unmarshal(bytes, &varMailFromAttributes); err == nil {
	*o = MailFromAttributes(varMailFromAttributes)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "identity")
		delete(additionalProperties, "mailFromDomain")
		delete(additionalProperties, "mxRecord")
		delete(additionalProperties, "txtRecord")
		delete(additionalProperties, "mailFromDomainStatus")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMailFromAttributes struct {
	value *MailFromAttributes
	isSet bool
}

func (v NullableMailFromAttributes) Get() *MailFromAttributes {
	return v.value
}

func (v *NullableMailFromAttributes) Set(val *MailFromAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableMailFromAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableMailFromAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMailFromAttributes(val *MailFromAttributes) *NullableMailFromAttributes {
	return &NullableMailFromAttributes{value: val, isSet: true}
}

func (v NullableMailFromAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMailFromAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


