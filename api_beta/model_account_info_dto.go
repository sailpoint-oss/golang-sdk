/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the AccountInfoDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountInfoDto{}

// AccountInfoDto struct for AccountInfoDto
type AccountInfoDto struct {
	// The unique ID of the account generated by the source system
	NativeIdentity *string `json:"nativeIdentity,omitempty"`
	// Display name for this account
	DisplayName *string `json:"displayName,omitempty"`
	// UUID associated with this account
	Uuid *string `json:"uuid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountInfoDto AccountInfoDto

// NewAccountInfoDto instantiates a new AccountInfoDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountInfoDto() *AccountInfoDto {
	this := AccountInfoDto{}
	return &this
}

// NewAccountInfoDtoWithDefaults instantiates a new AccountInfoDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountInfoDtoWithDefaults() *AccountInfoDto {
	this := AccountInfoDto{}
	return &this
}

// GetNativeIdentity returns the NativeIdentity field value if set, zero value otherwise.
func (o *AccountInfoDto) GetNativeIdentity() string {
	if o == nil || isNil(o.NativeIdentity) {
		var ret string
		return ret
	}
	return *o.NativeIdentity
}

// GetNativeIdentityOk returns a tuple with the NativeIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInfoDto) GetNativeIdentityOk() (*string, bool) {
	if o == nil || isNil(o.NativeIdentity) {
		return nil, false
	}
	return o.NativeIdentity, true
}

// HasNativeIdentity returns a boolean if a field has been set.
func (o *AccountInfoDto) HasNativeIdentity() bool {
	if o != nil && !isNil(o.NativeIdentity) {
		return true
	}

	return false
}

// SetNativeIdentity gets a reference to the given string and assigns it to the NativeIdentity field.
func (o *AccountInfoDto) SetNativeIdentity(v string) {
	o.NativeIdentity = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AccountInfoDto) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInfoDto) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AccountInfoDto) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AccountInfoDto) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *AccountInfoDto) GetUuid() string {
	if o == nil || isNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountInfoDto) GetUuidOk() (*string, bool) {
	if o == nil || isNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *AccountInfoDto) HasUuid() bool {
	if o != nil && !isNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *AccountInfoDto) SetUuid(v string) {
	o.Uuid = &v
}

func (o AccountInfoDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountInfoDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.NativeIdentity) {
		toSerialize["nativeIdentity"] = o.NativeIdentity
	}
	if !isNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !isNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountInfoDto) UnmarshalJSON(bytes []byte) (err error) {
	varAccountInfoDto := _AccountInfoDto{}

	if err = json.Unmarshal(bytes, &varAccountInfoDto); err == nil {
			*o = AccountInfoDto(varAccountInfoDto)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "nativeIdentity")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "uuid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountInfoDto struct {
	value *AccountInfoDto
	isSet bool
}

func (v NullableAccountInfoDto) Get() *AccountInfoDto {
	return v.value
}

func (v *NullableAccountInfoDto) Set(val *AccountInfoDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountInfoDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountInfoDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountInfoDto(val *AccountInfoDto) *NullableAccountInfoDto {
	return &NullableAccountInfoDto{value: val, isSet: true}
}

func (v NullableAccountInfoDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountInfoDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


