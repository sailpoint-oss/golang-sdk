/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	"fmt"
)


// TransformDefinition1AttributesValue struct for TransformDefinition1AttributesValue
type TransformDefinition1AttributesValue struct {
	MapmapOfStringAny *map[string]interface{}
	String *string
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *TransformDefinition1AttributesValue) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into MapmapOfStringAny
	err = json.Unmarshal(data, &dst.MapmapOfStringAny);
	if err == nil {
		jsonMapmapOfStringAny, _ := json.Marshal(dst.MapmapOfStringAny)
		if string(jsonMapmapOfStringAny) == "{}" { // empty struct
			dst.MapmapOfStringAny = nil
		} else {
			return nil // data stored in dst.MapmapOfStringAny, return on the first match
		}
	} else {
		dst.MapmapOfStringAny = nil
	}

	// try to unmarshal JSON data into String
	err = json.Unmarshal(data, &dst.String);
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			return nil // data stored in dst.String, return on the first match
		}
	} else {
		dst.String = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(TransformDefinition1AttributesValue)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *TransformDefinition1AttributesValue) MarshalJSON() ([]byte, error) {
	if src.MapmapOfStringAny != nil {
		return json.Marshal(&src.MapmapOfStringAny)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableTransformDefinition1AttributesValue struct {
	value *TransformDefinition1AttributesValue
	isSet bool
}

func (v NullableTransformDefinition1AttributesValue) Get() *TransformDefinition1AttributesValue {
	return v.value
}

func (v *NullableTransformDefinition1AttributesValue) Set(val *TransformDefinition1AttributesValue) {
	v.value = val
	v.isSet = true
}

func (v NullableTransformDefinition1AttributesValue) IsSet() bool {
	return v.isSet
}

func (v *NullableTransformDefinition1AttributesValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransformDefinition1AttributesValue(val *TransformDefinition1AttributesValue) *NullableTransformDefinition1AttributesValue {
	return &NullableTransformDefinition1AttributesValue{value: val, isSet: true}
}

func (v NullableTransformDefinition1AttributesValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransformDefinition1AttributesValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


