/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the AccessProfileRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessProfileRef{}

// AccessProfileRef struct for AccessProfileRef
type AccessProfileRef struct {
	// ID of the Access Profile
	Id *string `json:"id,omitempty"`
	// Type of requested object. This field must be either left null or set to 'ACCESS_PROFILE' when creating an Access Profile, otherwise a 400 Bad Request error will result.
	Type *string `json:"type,omitempty"`
	// Human-readable display name of the Access Profile. This field is ignored on input.
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccessProfileRef AccessProfileRef

// NewAccessProfileRef instantiates a new AccessProfileRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessProfileRef() *AccessProfileRef {
	this := AccessProfileRef{}
	return &this
}

// NewAccessProfileRefWithDefaults instantiates a new AccessProfileRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessProfileRefWithDefaults() *AccessProfileRef {
	this := AccessProfileRef{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccessProfileRef) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfileRef) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccessProfileRef) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AccessProfileRef) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AccessProfileRef) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfileRef) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AccessProfileRef) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AccessProfileRef) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AccessProfileRef) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessProfileRef) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AccessProfileRef) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AccessProfileRef) SetName(v string) {
	o.Name = &v
}

func (o AccessProfileRef) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessProfileRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccessProfileRef) UnmarshalJSON(bytes []byte) (err error) {
	varAccessProfileRef := _AccessProfileRef{}

	if err = json.Unmarshal(bytes, &varAccessProfileRef); err == nil {
	*o = AccessProfileRef(varAccessProfileRef)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "type")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccessProfileRef struct {
	value *AccessProfileRef
	isSet bool
}

func (v NullableAccessProfileRef) Get() *AccessProfileRef {
	return v.value
}

func (v *NullableAccessProfileRef) Set(val *AccessProfileRef) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessProfileRef) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessProfileRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessProfileRef(val *AccessProfileRef) *NullableAccessProfileRef {
	return &NullableAccessProfileRef{value: val, isSet: true}
}

func (v NullableAccessProfileRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessProfileRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


