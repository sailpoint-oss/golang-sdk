/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the CommonAccessItemRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonAccessItemRequest{}

// CommonAccessItemRequest struct for CommonAccessItemRequest
type CommonAccessItemRequest struct {
	Access *CommonAccessItemAccess `json:"access,omitempty"`
	Status *CommonAccessItemState `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonAccessItemRequest CommonAccessItemRequest

// NewCommonAccessItemRequest instantiates a new CommonAccessItemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonAccessItemRequest() *CommonAccessItemRequest {
	this := CommonAccessItemRequest{}
	return &this
}

// NewCommonAccessItemRequestWithDefaults instantiates a new CommonAccessItemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonAccessItemRequestWithDefaults() *CommonAccessItemRequest {
	this := CommonAccessItemRequest{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *CommonAccessItemRequest) GetAccess() CommonAccessItemAccess {
	if o == nil || isNil(o.Access) {
		var ret CommonAccessItemAccess
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonAccessItemRequest) GetAccessOk() (*CommonAccessItemAccess, bool) {
	if o == nil || isNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *CommonAccessItemRequest) HasAccess() bool {
	if o != nil && !isNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given CommonAccessItemAccess and assigns it to the Access field.
func (o *CommonAccessItemRequest) SetAccess(v CommonAccessItemAccess) {
	o.Access = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CommonAccessItemRequest) GetStatus() CommonAccessItemState {
	if o == nil || isNil(o.Status) {
		var ret CommonAccessItemState
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonAccessItemRequest) GetStatusOk() (*CommonAccessItemState, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CommonAccessItemRequest) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given CommonAccessItemState and assigns it to the Status field.
func (o *CommonAccessItemRequest) SetStatus(v CommonAccessItemState) {
	o.Status = &v
}

func (o CommonAccessItemRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonAccessItemRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonAccessItemRequest) UnmarshalJSON(bytes []byte) (err error) {
	varCommonAccessItemRequest := _CommonAccessItemRequest{}

	if err = json.Unmarshal(bytes, &varCommonAccessItemRequest); err == nil {
	*o = CommonAccessItemRequest(varCommonAccessItemRequest)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "access")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonAccessItemRequest struct {
	value *CommonAccessItemRequest
	isSet bool
}

func (v NullableCommonAccessItemRequest) Get() *CommonAccessItemRequest {
	return v.value
}

func (v *NullableCommonAccessItemRequest) Set(val *CommonAccessItemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonAccessItemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonAccessItemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonAccessItemRequest(val *CommonAccessItemRequest) *NullableCommonAccessItemRequest {
	return &NullableCommonAccessItemRequest{value: val, isSet: true}
}

func (v NullableCommonAccessItemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonAccessItemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


