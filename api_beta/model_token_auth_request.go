/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	"fmt"
)

// checks if the TokenAuthRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenAuthRequest{}

// TokenAuthRequest struct for TokenAuthRequest
type TokenAuthRequest struct {
	// Token value
	Token string `json:"token"`
	// User alias from table spt_identity field named 'name'
	UserAlias string `json:"userAlias"`
	// Token delivery type
	DeliveryType string `json:"deliveryType"`
	AdditionalProperties map[string]interface{}
}

type _TokenAuthRequest TokenAuthRequest

// NewTokenAuthRequest instantiates a new TokenAuthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenAuthRequest(token string, userAlias string, deliveryType string) *TokenAuthRequest {
	this := TokenAuthRequest{}
	this.Token = token
	this.UserAlias = userAlias
	this.DeliveryType = deliveryType
	return &this
}

// NewTokenAuthRequestWithDefaults instantiates a new TokenAuthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenAuthRequestWithDefaults() *TokenAuthRequest {
	this := TokenAuthRequest{}
	return &this
}

// GetToken returns the Token field value
func (o *TokenAuthRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *TokenAuthRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *TokenAuthRequest) SetToken(v string) {
	o.Token = v
}

// GetUserAlias returns the UserAlias field value
func (o *TokenAuthRequest) GetUserAlias() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserAlias
}

// GetUserAliasOk returns a tuple with the UserAlias field value
// and a boolean to check if the value has been set.
func (o *TokenAuthRequest) GetUserAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserAlias, true
}

// SetUserAlias sets field value
func (o *TokenAuthRequest) SetUserAlias(v string) {
	o.UserAlias = v
}

// GetDeliveryType returns the DeliveryType field value
func (o *TokenAuthRequest) GetDeliveryType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeliveryType
}

// GetDeliveryTypeOk returns a tuple with the DeliveryType field value
// and a boolean to check if the value has been set.
func (o *TokenAuthRequest) GetDeliveryTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeliveryType, true
}

// SetDeliveryType sets field value
func (o *TokenAuthRequest) SetDeliveryType(v string) {
	o.DeliveryType = v
}

func (o TokenAuthRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenAuthRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["token"] = o.Token
	toSerialize["userAlias"] = o.UserAlias
	toSerialize["deliveryType"] = o.DeliveryType

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TokenAuthRequest) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"token",
		"userAlias",
		"deliveryType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTokenAuthRequest := _TokenAuthRequest{}

	if err = json.Unmarshal(bytes, &varTokenAuthRequest); err == nil {
	*o = TokenAuthRequest(varTokenAuthRequest)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "token")
		delete(additionalProperties, "userAlias")
		delete(additionalProperties, "deliveryType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTokenAuthRequest struct {
	value *TokenAuthRequest
	isSet bool
}

func (v NullableTokenAuthRequest) Get() *TokenAuthRequest {
	return v.value
}

func (v *NullableTokenAuthRequest) Set(val *TokenAuthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenAuthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenAuthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenAuthRequest(val *TokenAuthRequest) *NullableTokenAuthRequest {
	return &NullableTokenAuthRequest{value: val, isSet: true}
}

func (v NullableTokenAuthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenAuthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


