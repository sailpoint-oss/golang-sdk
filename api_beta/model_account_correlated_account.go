/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	"fmt"
)

// checks if the AccountCorrelatedAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountCorrelatedAccount{}

// AccountCorrelatedAccount The correlated account.
type AccountCorrelatedAccount struct {
	// The correlated account's DTO type.
	Type string `json:"type"`
	// The correlated account's ID.
	Id string `json:"id"`
	// The correlated account's display name.
	Name string `json:"name"`
	// Unique ID of the account on the source.
	NativeIdentity string `json:"nativeIdentity"`
	// The source's unique identifier for the account. UUID is generated by the source system.
	Uuid NullableString `json:"uuid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountCorrelatedAccount AccountCorrelatedAccount

// NewAccountCorrelatedAccount instantiates a new AccountCorrelatedAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountCorrelatedAccount(type_ string, id string, name string, nativeIdentity string) *AccountCorrelatedAccount {
	this := AccountCorrelatedAccount{}
	this.Type = type_
	this.Id = id
	this.Name = name
	this.NativeIdentity = nativeIdentity
	return &this
}

// NewAccountCorrelatedAccountWithDefaults instantiates a new AccountCorrelatedAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountCorrelatedAccountWithDefaults() *AccountCorrelatedAccount {
	this := AccountCorrelatedAccount{}
	return &this
}

// GetType returns the Type field value
func (o *AccountCorrelatedAccount) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AccountCorrelatedAccount) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AccountCorrelatedAccount) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *AccountCorrelatedAccount) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccountCorrelatedAccount) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccountCorrelatedAccount) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AccountCorrelatedAccount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AccountCorrelatedAccount) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AccountCorrelatedAccount) SetName(v string) {
	o.Name = v
}

// GetNativeIdentity returns the NativeIdentity field value
func (o *AccountCorrelatedAccount) GetNativeIdentity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NativeIdentity
}

// GetNativeIdentityOk returns a tuple with the NativeIdentity field value
// and a boolean to check if the value has been set.
func (o *AccountCorrelatedAccount) GetNativeIdentityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NativeIdentity, true
}

// SetNativeIdentity sets field value
func (o *AccountCorrelatedAccount) SetNativeIdentity(v string) {
	o.NativeIdentity = v
}

// GetUuid returns the Uuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccountCorrelatedAccount) GetUuid() string {
	if o == nil || isNil(o.Uuid.Get()) {
		var ret string
		return ret
	}
	return *o.Uuid.Get()
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccountCorrelatedAccount) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uuid.Get(), o.Uuid.IsSet()
}

// HasUuid returns a boolean if a field has been set.
func (o *AccountCorrelatedAccount) HasUuid() bool {
	if o != nil && o.Uuid.IsSet() {
		return true
	}

	return false
}

// SetUuid gets a reference to the given NullableString and assigns it to the Uuid field.
func (o *AccountCorrelatedAccount) SetUuid(v string) {
	o.Uuid.Set(&v)
}
// SetUuidNil sets the value for Uuid to be an explicit nil
func (o *AccountCorrelatedAccount) SetUuidNil() {
	o.Uuid.Set(nil)
}

// UnsetUuid ensures that no value is present for Uuid, not even an explicit nil
func (o *AccountCorrelatedAccount) UnsetUuid() {
	o.Uuid.Unset()
}

func (o AccountCorrelatedAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountCorrelatedAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["nativeIdentity"] = o.NativeIdentity
	if o.Uuid.IsSet() {
		toSerialize["uuid"] = o.Uuid.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountCorrelatedAccount) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"id",
		"name",
		"nativeIdentity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountCorrelatedAccount := _AccountCorrelatedAccount{}

	if err = json.Unmarshal(bytes, &varAccountCorrelatedAccount); err == nil {
	*o = AccountCorrelatedAccount(varAccountCorrelatedAccount)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "nativeIdentity")
		delete(additionalProperties, "uuid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountCorrelatedAccount struct {
	value *AccountCorrelatedAccount
	isSet bool
}

func (v NullableAccountCorrelatedAccount) Get() *AccountCorrelatedAccount {
	return v.value
}

func (v *NullableAccountCorrelatedAccount) Set(val *AccountCorrelatedAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountCorrelatedAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountCorrelatedAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountCorrelatedAccount(val *AccountCorrelatedAccount) *NullableAccountCorrelatedAccount {
	return &NullableAccountCorrelatedAccount{value: val, isSet: true}
}

func (v NullableAccountCorrelatedAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountCorrelatedAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


