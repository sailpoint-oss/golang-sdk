/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the BearerTokenAuthConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BearerTokenAuthConfig{}

// BearerTokenAuthConfig Config required if BEARER_TOKEN authentication is used. On response, this field is set to null as to not return secrets.
type BearerTokenAuthConfig struct {
	// Bearer token
	BearerToken NullableString `json:"bearerToken,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BearerTokenAuthConfig BearerTokenAuthConfig

// NewBearerTokenAuthConfig instantiates a new BearerTokenAuthConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBearerTokenAuthConfig() *BearerTokenAuthConfig {
	this := BearerTokenAuthConfig{}
	return &this
}

// NewBearerTokenAuthConfigWithDefaults instantiates a new BearerTokenAuthConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBearerTokenAuthConfigWithDefaults() *BearerTokenAuthConfig {
	this := BearerTokenAuthConfig{}
	return &this
}

// GetBearerToken returns the BearerToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BearerTokenAuthConfig) GetBearerToken() string {
	if o == nil || isNil(o.BearerToken.Get()) {
		var ret string
		return ret
	}
	return *o.BearerToken.Get()
}

// GetBearerTokenOk returns a tuple with the BearerToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BearerTokenAuthConfig) GetBearerTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BearerToken.Get(), o.BearerToken.IsSet()
}

// HasBearerToken returns a boolean if a field has been set.
func (o *BearerTokenAuthConfig) HasBearerToken() bool {
	if o != nil && o.BearerToken.IsSet() {
		return true
	}

	return false
}

// SetBearerToken gets a reference to the given NullableString and assigns it to the BearerToken field.
func (o *BearerTokenAuthConfig) SetBearerToken(v string) {
	o.BearerToken.Set(&v)
}
// SetBearerTokenNil sets the value for BearerToken to be an explicit nil
func (o *BearerTokenAuthConfig) SetBearerTokenNil() {
	o.BearerToken.Set(nil)
}

// UnsetBearerToken ensures that no value is present for BearerToken, not even an explicit nil
func (o *BearerTokenAuthConfig) UnsetBearerToken() {
	o.BearerToken.Unset()
}

func (o BearerTokenAuthConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BearerTokenAuthConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BearerToken.IsSet() {
		toSerialize["bearerToken"] = o.BearerToken.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BearerTokenAuthConfig) UnmarshalJSON(bytes []byte) (err error) {
	varBearerTokenAuthConfig := _BearerTokenAuthConfig{}

	if err = json.Unmarshal(bytes, &varBearerTokenAuthConfig); err == nil {
	*o = BearerTokenAuthConfig(varBearerTokenAuthConfig)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "bearerToken")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBearerTokenAuthConfig struct {
	value *BearerTokenAuthConfig
	isSet bool
}

func (v NullableBearerTokenAuthConfig) Get() *BearerTokenAuthConfig {
	return v.value
}

func (v *NullableBearerTokenAuthConfig) Set(val *BearerTokenAuthConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableBearerTokenAuthConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableBearerTokenAuthConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBearerTokenAuthConfig(val *BearerTokenAuthConfig) *NullableBearerTokenAuthConfig {
	return &NullableBearerTokenAuthConfig{value: val, isSet: true}
}

func (v NullableBearerTokenAuthConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBearerTokenAuthConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


