/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the ListFormInstancesByTenantResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListFormInstancesByTenantResponse{}

// ListFormInstancesByTenantResponse struct for ListFormInstancesByTenantResponse
type ListFormInstancesByTenantResponse struct {
	// Count number of Results
	Count *int64 `json:"count,omitempty"`
	// Results holds a list of FormInstanceResponse items
	Results []FormInstanceResponse `json:"results,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListFormInstancesByTenantResponse ListFormInstancesByTenantResponse

// NewListFormInstancesByTenantResponse instantiates a new ListFormInstancesByTenantResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListFormInstancesByTenantResponse() *ListFormInstancesByTenantResponse {
	this := ListFormInstancesByTenantResponse{}
	return &this
}

// NewListFormInstancesByTenantResponseWithDefaults instantiates a new ListFormInstancesByTenantResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListFormInstancesByTenantResponseWithDefaults() *ListFormInstancesByTenantResponse {
	this := ListFormInstancesByTenantResponse{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ListFormInstancesByTenantResponse) GetCount() int64 {
	if o == nil || isNil(o.Count) {
		var ret int64
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFormInstancesByTenantResponse) GetCountOk() (*int64, bool) {
	if o == nil || isNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ListFormInstancesByTenantResponse) HasCount() bool {
	if o != nil && !isNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int64 and assigns it to the Count field.
func (o *ListFormInstancesByTenantResponse) SetCount(v int64) {
	o.Count = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *ListFormInstancesByTenantResponse) GetResults() []FormInstanceResponse {
	if o == nil || isNil(o.Results) {
		var ret []FormInstanceResponse
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFormInstancesByTenantResponse) GetResultsOk() ([]FormInstanceResponse, bool) {
	if o == nil || isNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *ListFormInstancesByTenantResponse) HasResults() bool {
	if o != nil && !isNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []FormInstanceResponse and assigns it to the Results field.
func (o *ListFormInstancesByTenantResponse) SetResults(v []FormInstanceResponse) {
	o.Results = v
}

func (o ListFormInstancesByTenantResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListFormInstancesByTenantResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !isNil(o.Results) {
		toSerialize["results"] = o.Results
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListFormInstancesByTenantResponse) UnmarshalJSON(bytes []byte) (err error) {
	varListFormInstancesByTenantResponse := _ListFormInstancesByTenantResponse{}

	if err = json.Unmarshal(bytes, &varListFormInstancesByTenantResponse); err == nil {
	*o = ListFormInstancesByTenantResponse(varListFormInstancesByTenantResponse)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "count")
		delete(additionalProperties, "results")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListFormInstancesByTenantResponse struct {
	value *ListFormInstancesByTenantResponse
	isSet bool
}

func (v NullableListFormInstancesByTenantResponse) Get() *ListFormInstancesByTenantResponse {
	return v.value
}

func (v *NullableListFormInstancesByTenantResponse) Set(val *ListFormInstancesByTenantResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListFormInstancesByTenantResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListFormInstancesByTenantResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListFormInstancesByTenantResponse(val *ListFormInstancesByTenantResponse) *NullableListFormInstancesByTenantResponse {
	return &NullableListFormInstancesByTenantResponse{value: val, isSet: true}
}

func (v NullableListFormInstancesByTenantResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListFormInstancesByTenantResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


