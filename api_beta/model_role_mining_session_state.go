/*
Identity Security Cloud Beta API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
	"fmt"
)

// RoleMiningSessionState Role mining session status
type RoleMiningSessionState string

// List of RoleMiningSessionState
const (
	ROLEMININGSESSIONSTATE_CREATED RoleMiningSessionState = "CREATED"
	ROLEMININGSESSIONSTATE_UPDATED RoleMiningSessionState = "UPDATED"
	ROLEMININGSESSIONSTATE_IDENTITIES_OBTAINED RoleMiningSessionState = "IDENTITIES_OBTAINED"
	ROLEMININGSESSIONSTATE_PRUNE_THRESHOLD_OBTAINED RoleMiningSessionState = "PRUNE_THRESHOLD_OBTAINED"
	ROLEMININGSESSIONSTATE_POTENTIAL_ROLES_PROCESSING RoleMiningSessionState = "POTENTIAL_ROLES_PROCESSING"
	ROLEMININGSESSIONSTATE_POTENTIAL_ROLES_CREATED RoleMiningSessionState = "POTENTIAL_ROLES_CREATED"
)

// All allowed values of RoleMiningSessionState enum
var AllowedRoleMiningSessionStateEnumValues = []RoleMiningSessionState{
	"CREATED",
	"UPDATED",
	"IDENTITIES_OBTAINED",
	"PRUNE_THRESHOLD_OBTAINED",
	"POTENTIAL_ROLES_PROCESSING",
	"POTENTIAL_ROLES_CREATED",
}

func (v *RoleMiningSessionState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RoleMiningSessionState(value)
	for _, existing := range AllowedRoleMiningSessionStateEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RoleMiningSessionState", value)
}

// NewRoleMiningSessionStateFromValue returns a pointer to a valid RoleMiningSessionState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRoleMiningSessionStateFromValue(v string) (*RoleMiningSessionState, error) {
	ev := RoleMiningSessionState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RoleMiningSessionState: valid values are %v", v, AllowedRoleMiningSessionStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RoleMiningSessionState) IsValid() bool {
	for _, existing := range AllowedRoleMiningSessionStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RoleMiningSessionState value
func (v RoleMiningSessionState) Ptr() *RoleMiningSessionState {
	return &v
}

type NullableRoleMiningSessionState struct {
	value *RoleMiningSessionState
	isSet bool
}

func (v NullableRoleMiningSessionState) Get() *RoleMiningSessionState {
	return v.value
}

func (v *NullableRoleMiningSessionState) Set(val *RoleMiningSessionState) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleMiningSessionState) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleMiningSessionState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleMiningSessionState(val *RoleMiningSessionState) *NullableRoleMiningSessionState {
	return &NullableRoleMiningSessionState{value: val, isSet: true}
}

func (v NullableRoleMiningSessionState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleMiningSessionState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

