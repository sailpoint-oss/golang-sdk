/*
IdentityNow Beta API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the RecommendationRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecommendationRequestDto{}

// RecommendationRequestDto struct for RecommendationRequestDto
type RecommendationRequestDto struct {
	Requests []RecommendationRequest `json:"requests,omitempty"`
	// Exclude interpretations in the response if \"true\". Return interpretations in the response if this attribute is not specified.
	ExcludeInterpretations *bool `json:"excludeInterpretations,omitempty"`
	// When set to true, the calling system uses the translated messages for the specified language
	IncludeTranslationMessages *bool `json:"includeTranslationMessages,omitempty"`
	// Returns the recommender calculations if set to true
	IncludeDebugInformation *bool `json:"includeDebugInformation,omitempty"`
	// When set to true, uses prescribedRulesRecommenderConfig to get identity attributes and peer group threshold instead of standard config.
	PrescribeMode *bool `json:"prescribeMode,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RecommendationRequestDto RecommendationRequestDto

// NewRecommendationRequestDto instantiates a new RecommendationRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecommendationRequestDto() *RecommendationRequestDto {
	this := RecommendationRequestDto{}
	var excludeInterpretations bool = false
	this.ExcludeInterpretations = &excludeInterpretations
	var includeTranslationMessages bool = false
	this.IncludeTranslationMessages = &includeTranslationMessages
	var includeDebugInformation bool = false
	this.IncludeDebugInformation = &includeDebugInformation
	var prescribeMode bool = false
	this.PrescribeMode = &prescribeMode
	return &this
}

// NewRecommendationRequestDtoWithDefaults instantiates a new RecommendationRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecommendationRequestDtoWithDefaults() *RecommendationRequestDto {
	this := RecommendationRequestDto{}
	var excludeInterpretations bool = false
	this.ExcludeInterpretations = &excludeInterpretations
	var includeTranslationMessages bool = false
	this.IncludeTranslationMessages = &includeTranslationMessages
	var includeDebugInformation bool = false
	this.IncludeDebugInformation = &includeDebugInformation
	var prescribeMode bool = false
	this.PrescribeMode = &prescribeMode
	return &this
}

// GetRequests returns the Requests field value if set, zero value otherwise.
func (o *RecommendationRequestDto) GetRequests() []RecommendationRequest {
	if o == nil || isNil(o.Requests) {
		var ret []RecommendationRequest
		return ret
	}
	return o.Requests
}

// GetRequestsOk returns a tuple with the Requests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationRequestDto) GetRequestsOk() ([]RecommendationRequest, bool) {
	if o == nil || isNil(o.Requests) {
		return nil, false
	}
	return o.Requests, true
}

// HasRequests returns a boolean if a field has been set.
func (o *RecommendationRequestDto) HasRequests() bool {
	if o != nil && !isNil(o.Requests) {
		return true
	}

	return false
}

// SetRequests gets a reference to the given []RecommendationRequest and assigns it to the Requests field.
func (o *RecommendationRequestDto) SetRequests(v []RecommendationRequest) {
	o.Requests = v
}

// GetExcludeInterpretations returns the ExcludeInterpretations field value if set, zero value otherwise.
func (o *RecommendationRequestDto) GetExcludeInterpretations() bool {
	if o == nil || isNil(o.ExcludeInterpretations) {
		var ret bool
		return ret
	}
	return *o.ExcludeInterpretations
}

// GetExcludeInterpretationsOk returns a tuple with the ExcludeInterpretations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationRequestDto) GetExcludeInterpretationsOk() (*bool, bool) {
	if o == nil || isNil(o.ExcludeInterpretations) {
		return nil, false
	}
	return o.ExcludeInterpretations, true
}

// HasExcludeInterpretations returns a boolean if a field has been set.
func (o *RecommendationRequestDto) HasExcludeInterpretations() bool {
	if o != nil && !isNil(o.ExcludeInterpretations) {
		return true
	}

	return false
}

// SetExcludeInterpretations gets a reference to the given bool and assigns it to the ExcludeInterpretations field.
func (o *RecommendationRequestDto) SetExcludeInterpretations(v bool) {
	o.ExcludeInterpretations = &v
}

// GetIncludeTranslationMessages returns the IncludeTranslationMessages field value if set, zero value otherwise.
func (o *RecommendationRequestDto) GetIncludeTranslationMessages() bool {
	if o == nil || isNil(o.IncludeTranslationMessages) {
		var ret bool
		return ret
	}
	return *o.IncludeTranslationMessages
}

// GetIncludeTranslationMessagesOk returns a tuple with the IncludeTranslationMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationRequestDto) GetIncludeTranslationMessagesOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeTranslationMessages) {
		return nil, false
	}
	return o.IncludeTranslationMessages, true
}

// HasIncludeTranslationMessages returns a boolean if a field has been set.
func (o *RecommendationRequestDto) HasIncludeTranslationMessages() bool {
	if o != nil && !isNil(o.IncludeTranslationMessages) {
		return true
	}

	return false
}

// SetIncludeTranslationMessages gets a reference to the given bool and assigns it to the IncludeTranslationMessages field.
func (o *RecommendationRequestDto) SetIncludeTranslationMessages(v bool) {
	o.IncludeTranslationMessages = &v
}

// GetIncludeDebugInformation returns the IncludeDebugInformation field value if set, zero value otherwise.
func (o *RecommendationRequestDto) GetIncludeDebugInformation() bool {
	if o == nil || isNil(o.IncludeDebugInformation) {
		var ret bool
		return ret
	}
	return *o.IncludeDebugInformation
}

// GetIncludeDebugInformationOk returns a tuple with the IncludeDebugInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationRequestDto) GetIncludeDebugInformationOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeDebugInformation) {
		return nil, false
	}
	return o.IncludeDebugInformation, true
}

// HasIncludeDebugInformation returns a boolean if a field has been set.
func (o *RecommendationRequestDto) HasIncludeDebugInformation() bool {
	if o != nil && !isNil(o.IncludeDebugInformation) {
		return true
	}

	return false
}

// SetIncludeDebugInformation gets a reference to the given bool and assigns it to the IncludeDebugInformation field.
func (o *RecommendationRequestDto) SetIncludeDebugInformation(v bool) {
	o.IncludeDebugInformation = &v
}

// GetPrescribeMode returns the PrescribeMode field value if set, zero value otherwise.
func (o *RecommendationRequestDto) GetPrescribeMode() bool {
	if o == nil || isNil(o.PrescribeMode) {
		var ret bool
		return ret
	}
	return *o.PrescribeMode
}

// GetPrescribeModeOk returns a tuple with the PrescribeMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendationRequestDto) GetPrescribeModeOk() (*bool, bool) {
	if o == nil || isNil(o.PrescribeMode) {
		return nil, false
	}
	return o.PrescribeMode, true
}

// HasPrescribeMode returns a boolean if a field has been set.
func (o *RecommendationRequestDto) HasPrescribeMode() bool {
	if o != nil && !isNil(o.PrescribeMode) {
		return true
	}

	return false
}

// SetPrescribeMode gets a reference to the given bool and assigns it to the PrescribeMode field.
func (o *RecommendationRequestDto) SetPrescribeMode(v bool) {
	o.PrescribeMode = &v
}

func (o RecommendationRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecommendationRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Requests) {
		toSerialize["requests"] = o.Requests
	}
	if !isNil(o.ExcludeInterpretations) {
		toSerialize["excludeInterpretations"] = o.ExcludeInterpretations
	}
	if !isNil(o.IncludeTranslationMessages) {
		toSerialize["includeTranslationMessages"] = o.IncludeTranslationMessages
	}
	if !isNil(o.IncludeDebugInformation) {
		toSerialize["includeDebugInformation"] = o.IncludeDebugInformation
	}
	if !isNil(o.PrescribeMode) {
		toSerialize["prescribeMode"] = o.PrescribeMode
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RecommendationRequestDto) UnmarshalJSON(bytes []byte) (err error) {
	varRecommendationRequestDto := _RecommendationRequestDto{}

	if err = json.Unmarshal(bytes, &varRecommendationRequestDto); err == nil {
	*o = RecommendationRequestDto(varRecommendationRequestDto)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "requests")
		delete(additionalProperties, "excludeInterpretations")
		delete(additionalProperties, "includeTranslationMessages")
		delete(additionalProperties, "includeDebugInformation")
		delete(additionalProperties, "prescribeMode")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRecommendationRequestDto struct {
	value *RecommendationRequestDto
	isSet bool
}

func (v NullableRecommendationRequestDto) Get() *RecommendationRequestDto {
	return v.value
}

func (v *NullableRecommendationRequestDto) Set(val *RecommendationRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableRecommendationRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableRecommendationRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecommendationRequestDto(val *RecommendationRequestDto) *NullableRecommendationRequestDto {
	return &NullableRecommendationRequestDto{value: val, isSet: true}
}

func (v NullableRecommendationRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecommendationRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


