/*
Identity Security Cloud Beta API

Use these APIs to interact with the Identity Security Cloud platform to achieve repeatable, automated processes with greater scalability. These APIs are in beta and are subject to change. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.1.0-beta
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_beta

import (
	"encoding/json"
)

// checks if the SedAssignmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SedAssignmentResponse{}

// SedAssignmentResponse Sed Assignment Response
type SedAssignmentResponse struct {
	// BatchId that groups all the ids together
	BatchId *string `json:"batchId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SedAssignmentResponse SedAssignmentResponse

// NewSedAssignmentResponse instantiates a new SedAssignmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSedAssignmentResponse() *SedAssignmentResponse {
	this := SedAssignmentResponse{}
	return &this
}

// NewSedAssignmentResponseWithDefaults instantiates a new SedAssignmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSedAssignmentResponseWithDefaults() *SedAssignmentResponse {
	this := SedAssignmentResponse{}
	return &this
}

// GetBatchId returns the BatchId field value if set, zero value otherwise.
func (o *SedAssignmentResponse) GetBatchId() string {
	if o == nil || isNil(o.BatchId) {
		var ret string
		return ret
	}
	return *o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SedAssignmentResponse) GetBatchIdOk() (*string, bool) {
	if o == nil || isNil(o.BatchId) {
		return nil, false
	}
	return o.BatchId, true
}

// HasBatchId returns a boolean if a field has been set.
func (o *SedAssignmentResponse) HasBatchId() bool {
	if o != nil && !isNil(o.BatchId) {
		return true
	}

	return false
}

// SetBatchId gets a reference to the given string and assigns it to the BatchId field.
func (o *SedAssignmentResponse) SetBatchId(v string) {
	o.BatchId = &v
}

func (o SedAssignmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SedAssignmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BatchId) {
		toSerialize["batchId"] = o.BatchId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SedAssignmentResponse) UnmarshalJSON(bytes []byte) (err error) {
	varSedAssignmentResponse := _SedAssignmentResponse{}

	if err = json.Unmarshal(bytes, &varSedAssignmentResponse); err == nil {
			*o = SedAssignmentResponse(varSedAssignmentResponse)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "batchId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSedAssignmentResponse struct {
	value *SedAssignmentResponse
	isSet bool
}

func (v NullableSedAssignmentResponse) Get() *SedAssignmentResponse {
	return v.value
}

func (v *NullableSedAssignmentResponse) Set(val *SedAssignmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSedAssignmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSedAssignmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSedAssignmentResponse(val *SedAssignmentResponse) *NullableSedAssignmentResponse {
	return &NullableSedAssignmentResponse{value: val, isSet: true}
}

func (v NullableSedAssignmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSedAssignmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


