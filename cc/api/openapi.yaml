openapi: 3.0.0
info:
  title: IdentityNow cc (private) APIs
  version: 1.0.0
servers:
- description: This is the production API server.
  url: "https://{tenant}.api.identitynow.com"
  variables:
    tenant:
      default: sailpoint
      description: "This is the name of your tenant, typically your company's name."
tags:
- name: Accounts
- name: Applications
- name: Connectors
- name: User
- name: Sources > Aggregation
- name: Sources > Accounts
- name: System
paths:
  /cc/api/account/list:
    get:
      operationId: listAccounts
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: List Accounts
      tags:
      - Accounts
  /cc/api/account/remove/:id:
    post:
      operationId: removeAccount
      parameters:
      - example: 12345
        explode: false
        in: path
        name: id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: Remove Account
      tags:
      - Accounts
  /cc/api/app/list:
    get:
      operationId: listApplications
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: List Applications
      tags:
      - Applications
  /cc/api/app/get/:id:
    get:
      operationId: GetApplication
      parameters:
      - example: 12345
        explode: false
        in: path
        name: id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: Get Single Application
      tags:
      - Applications
  /cc/api/app/getAccessProfiles/:id:
    get:
      operationId: GetApplicationAccessProfiles
      parameters:
      - example: 12345
        explode: false
        in: path
        name: id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      summary: Get Access Profiles for Application
      tags:
      - Applications
  /cc/api/app/create:
    post:
      operationId: CreateApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplication_request'
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: Create Application
      tags:
      - Applications
  /cc/api/app/update/:id:
    post:
      operationId: UpdateApplication
      parameters:
      - example: 12345
        explode: false
        in: path
        name: id
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplication_request'
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: Update Application
      tags:
      - Applications
  /cc/api/app/delete/:id:
    post:
      operationId: DeleteApplication
      parameters:
      - example: 12345
        explode: false
        in: path
        name: id
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: Delete Application
      tags:
      - Applications
  /cc/api/connector/list:
    get:
      operationId: listConnectors
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: List Connectors
      tags:
      - Connectors
  /cc/api/connector/create:
    post:
      operationId: createConnector
      parameters:
      - example: application/x-www-form-urlencoded
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createConnector_request'
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: Create Connector
      tags:
      - Connectors
  /cc/api/connector/delete/{id}:
    post:
      operationId: deleteConnector
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: Delete Connector
      tags:
      - Connectors
  /cc/api/connector/export/{id}:
    get:
      operationId: exportConnectorConfig
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: Export Connector Config
      tags:
      - Connectors
  /cc/api/connector/import/{id}:
    post:
      operationId: importConnectorConfig
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/importConnectorConfig_request'
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: Import Connector Config
      tags:
      - Connectors
  /cc/api/user/updatePermissions:
    post:
      operationId: updateUserPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateUserPermissions_request'
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: Update User Permissions
      tags:
      - User
  /cc/api/source/loadAccounts/{id}:
    post:
      description: Aggregates a delimited file for the given source.  This only works
        for file-based sources.
      operationId: loadAccounts
      parameters:
      - example: application/x-www-form-urlencoded
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/loadAccounts_request'
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: Account Aggregation (File)
      tags:
      - Sources > Aggregation
  /cc/api/source/exportAccountFeed/{id}:
    get:
      description: Exports a CSV of the accounts for a particular source.
      operationId: exportAccountFeed
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: Export Account Feed
      tags:
      - Sources > Accounts
  /cc/api/system/refreshIdentities:
    post:
      description: |-
        This kicks off an identity refresh for a specified set of identity attributes.  This can be a long running process.  IdentityNow has pre-scheduled versions of this task at set intervals and events already, so only run this when directed by SailPoint.

        _Note: If the identities specified by the filter do not exist, a full identity refresh will be run.  Use with caution._

        Refresh Arguments:

        | Key                   | Description                                        |
        |-----------------------|----------------------------------------------------|
        | correlateEntitlements | Analyzes entitlements, access profiles, and roles. |
        | promoteAttributes     | Calculates identity attributes.                    |
        | refreshManagerStatus  | Calculates manager correlation and manager status. |
        | synchronizeAttributes | Performs attribute sync provisioning.              |
        | pruneIdentities       | Removes any identities which don't have accounts.  |
        | provision             | Provisions any assigned roles or access profiles.  |
      operationId: refreshIdentities
      parameters:
      - example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              example: "\"{\\n   \\\"filter\\\" : \\\"uid == \\\\\\\"1219028\\\\\\\
                \"\\\",\\n   \\\"refreshArgs\\\" : {\\n     \\\"correlateEntitlements\\\
                \" : \\\"true\\\",\\n     \\\"promoteAttributes\\\" : \\\"true\\\"\
                ,\\n     \\\"refreshManagerStatus\\\" : \\\"false\\\",\\n     \\\"\
                synchronizeAttributes\\\" : \\\"false\\\",\\n     \\\"pruneIdentities\\\
                \" : \\\"false\\\",\\n     \\\"provision\\\" : \\\"true\\\"\\n   }\\\
                n}\""
              type: string
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - oauth2: []
      summary: Refresh Identities
      tags:
      - System
components:
  schemas:
    importConnectorConfig_request:
      properties:
        file:
          description: This is the connector config zip bundle which gets uploaded.
          format: binary
          type: string
      type: object
    loadAccounts_request:
      properties:
        disableOptimization:
          example: true
          type: boolean
        file:
          format: binary
          type: string
      type: object
    createConnector_request:
      properties:
        name:
          example: My Connector
          type: string
        description:
          example: My Connector
          type: string
        className:
          example: sailpoint.connector.OpenConnectorAdapter
          type: string
        directConnect:
          example: true
          type: boolean
        status:
          example: released
          type: string
      type: object
    UpdateApplication_request:
      properties:
        description:
          format: This is my application
          type: string
      type: object
    updateUserPermissions_request:
      properties:
        ids:
          example: "71624,71625"
          type: string
        isAdmin:
          description: "Indicates if user should be an IDN Admin.  \"0\" for false,\
            \ \"1\" for true."
          example: "1"
          type: string
        adminType:
          enum:
          - ADMIN
          - CERT_ADMIN
          - HELPDESK
          - REPORT_ADMIN
          - ROLE_ADMIN
          - ROLE_SUBADMIN
          - SOURCE_ADMIN
          - SOURCE_SUBADMIN
          type: string
      type: object
    CreateApplication_request:
      properties:
        name:
          example: My App
          type: string
        description:
          format: This is my application
          type: string
      type: object
  securitySchemes:
    oauth2:
      description: |
        OAuth2 Bearer token (JWT). See [IdentityNow REST API Authentication](https://developer.sailpoint.com/idn/api/authentication) for more information.
        - Directions for generating a [personal access token](https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens)
        - Directions using [client credentials flow](https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow)
        - Directions for using [authorization code flow](https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow)

        Which authentication method should I choose?  See our [guide](https://developer.sailpoint.com/idn/api/authentication#which-oauth-20-grant-flow-should-i-use)

        Learn more about how to find your `tokenUrl` and `authorizationUrl` [in our docs](https://developer.sailpoint.com/idn/api/authentication#find-your-tenants-oauth-details)
      flows:
        authorizationCode:
          authorizationUrl: https://tenant.identitynow.com/oauth/authorize
          scopes:
            sp:scopes:default: default scope
            sp:scopes:all: access to all scopes
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
        clientCredentials:
          scopes:
            sp:scopes:default: default scope
            sp:scopes:all: access to all scopes
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
      type: oauth2