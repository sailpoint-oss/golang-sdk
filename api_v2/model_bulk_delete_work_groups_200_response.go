/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2

import (
	"encoding/json"
)

// checks if the BulkDeleteWorkGroups200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkDeleteWorkGroups200Response{}

// BulkDeleteWorkGroups200Response struct for BulkDeleteWorkGroups200Response
type BulkDeleteWorkGroups200Response struct {
	Deleted []string `json:"deleted,omitempty"`
	InUse []string `json:"inUse,omitempty"`
	NotFound []string `json:"notFound,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BulkDeleteWorkGroups200Response BulkDeleteWorkGroups200Response

// NewBulkDeleteWorkGroups200Response instantiates a new BulkDeleteWorkGroups200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkDeleteWorkGroups200Response() *BulkDeleteWorkGroups200Response {
	this := BulkDeleteWorkGroups200Response{}
	return &this
}

// NewBulkDeleteWorkGroups200ResponseWithDefaults instantiates a new BulkDeleteWorkGroups200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkDeleteWorkGroups200ResponseWithDefaults() *BulkDeleteWorkGroups200Response {
	this := BulkDeleteWorkGroups200Response{}
	return &this
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *BulkDeleteWorkGroups200Response) GetDeleted() []string {
	if o == nil || isNil(o.Deleted) {
		var ret []string
		return ret
	}
	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkDeleteWorkGroups200Response) GetDeletedOk() ([]string, bool) {
	if o == nil || isNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *BulkDeleteWorkGroups200Response) HasDeleted() bool {
	if o != nil && !isNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given []string and assigns it to the Deleted field.
func (o *BulkDeleteWorkGroups200Response) SetDeleted(v []string) {
	o.Deleted = v
}

// GetInUse returns the InUse field value if set, zero value otherwise.
func (o *BulkDeleteWorkGroups200Response) GetInUse() []string {
	if o == nil || isNil(o.InUse) {
		var ret []string
		return ret
	}
	return o.InUse
}

// GetInUseOk returns a tuple with the InUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkDeleteWorkGroups200Response) GetInUseOk() ([]string, bool) {
	if o == nil || isNil(o.InUse) {
		return nil, false
	}
	return o.InUse, true
}

// HasInUse returns a boolean if a field has been set.
func (o *BulkDeleteWorkGroups200Response) HasInUse() bool {
	if o != nil && !isNil(o.InUse) {
		return true
	}

	return false
}

// SetInUse gets a reference to the given []string and assigns it to the InUse field.
func (o *BulkDeleteWorkGroups200Response) SetInUse(v []string) {
	o.InUse = v
}

// GetNotFound returns the NotFound field value if set, zero value otherwise.
func (o *BulkDeleteWorkGroups200Response) GetNotFound() []string {
	if o == nil || isNil(o.NotFound) {
		var ret []string
		return ret
	}
	return o.NotFound
}

// GetNotFoundOk returns a tuple with the NotFound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkDeleteWorkGroups200Response) GetNotFoundOk() ([]string, bool) {
	if o == nil || isNil(o.NotFound) {
		return nil, false
	}
	return o.NotFound, true
}

// HasNotFound returns a boolean if a field has been set.
func (o *BulkDeleteWorkGroups200Response) HasNotFound() bool {
	if o != nil && !isNil(o.NotFound) {
		return true
	}

	return false
}

// SetNotFound gets a reference to the given []string and assigns it to the NotFound field.
func (o *BulkDeleteWorkGroups200Response) SetNotFound(v []string) {
	o.NotFound = v
}

func (o BulkDeleteWorkGroups200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkDeleteWorkGroups200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !isNil(o.InUse) {
		toSerialize["inUse"] = o.InUse
	}
	if !isNil(o.NotFound) {
		toSerialize["notFound"] = o.NotFound
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BulkDeleteWorkGroups200Response) UnmarshalJSON(bytes []byte) (err error) {
	varBulkDeleteWorkGroups200Response := _BulkDeleteWorkGroups200Response{}

	if err = json.Unmarshal(bytes, &varBulkDeleteWorkGroups200Response); err == nil {
	*o = BulkDeleteWorkGroups200Response(varBulkDeleteWorkGroups200Response)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "deleted")
		delete(additionalProperties, "inUse")
		delete(additionalProperties, "notFound")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBulkDeleteWorkGroups200Response struct {
	value *BulkDeleteWorkGroups200Response
	isSet bool
}

func (v NullableBulkDeleteWorkGroups200Response) Get() *BulkDeleteWorkGroups200Response {
	return v.value
}

func (v *NullableBulkDeleteWorkGroups200Response) Set(val *BulkDeleteWorkGroups200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkDeleteWorkGroups200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkDeleteWorkGroups200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkDeleteWorkGroups200Response(val *BulkDeleteWorkGroups200Response) *NullableBulkDeleteWorkGroups200Response {
	return &NullableBulkDeleteWorkGroups200Response{value: val, isSet: true}
}

func (v NullableBulkDeleteWorkGroups200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkDeleteWorkGroups200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


