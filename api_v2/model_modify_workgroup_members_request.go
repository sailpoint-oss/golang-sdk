/*
SailPoint SaaS API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v2

import (
	"encoding/json"
)

// checks if the ModifyWorkgroupMembersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModifyWorkgroupMembersRequest{}

// ModifyWorkgroupMembersRequest struct for ModifyWorkgroupMembersRequest
type ModifyWorkgroupMembersRequest struct {
	Add []string `json:"add,omitempty"`
	Remove []string `json:"remove,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModifyWorkgroupMembersRequest ModifyWorkgroupMembersRequest

// NewModifyWorkgroupMembersRequest instantiates a new ModifyWorkgroupMembersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModifyWorkgroupMembersRequest() *ModifyWorkgroupMembersRequest {
	this := ModifyWorkgroupMembersRequest{}
	return &this
}

// NewModifyWorkgroupMembersRequestWithDefaults instantiates a new ModifyWorkgroupMembersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModifyWorkgroupMembersRequestWithDefaults() *ModifyWorkgroupMembersRequest {
	this := ModifyWorkgroupMembersRequest{}
	return &this
}

// GetAdd returns the Add field value if set, zero value otherwise.
func (o *ModifyWorkgroupMembersRequest) GetAdd() []string {
	if o == nil || isNil(o.Add) {
		var ret []string
		return ret
	}
	return o.Add
}

// GetAddOk returns a tuple with the Add field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyWorkgroupMembersRequest) GetAddOk() ([]string, bool) {
	if o == nil || isNil(o.Add) {
		return nil, false
	}
	return o.Add, true
}

// HasAdd returns a boolean if a field has been set.
func (o *ModifyWorkgroupMembersRequest) HasAdd() bool {
	if o != nil && !isNil(o.Add) {
		return true
	}

	return false
}

// SetAdd gets a reference to the given []string and assigns it to the Add field.
func (o *ModifyWorkgroupMembersRequest) SetAdd(v []string) {
	o.Add = v
}

// GetRemove returns the Remove field value if set, zero value otherwise.
func (o *ModifyWorkgroupMembersRequest) GetRemove() []string {
	if o == nil || isNil(o.Remove) {
		var ret []string
		return ret
	}
	return o.Remove
}

// GetRemoveOk returns a tuple with the Remove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModifyWorkgroupMembersRequest) GetRemoveOk() ([]string, bool) {
	if o == nil || isNil(o.Remove) {
		return nil, false
	}
	return o.Remove, true
}

// HasRemove returns a boolean if a field has been set.
func (o *ModifyWorkgroupMembersRequest) HasRemove() bool {
	if o != nil && !isNil(o.Remove) {
		return true
	}

	return false
}

// SetRemove gets a reference to the given []string and assigns it to the Remove field.
func (o *ModifyWorkgroupMembersRequest) SetRemove(v []string) {
	o.Remove = v
}

func (o ModifyWorkgroupMembersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModifyWorkgroupMembersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Add) {
		toSerialize["add"] = o.Add
	}
	if !isNil(o.Remove) {
		toSerialize["remove"] = o.Remove
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModifyWorkgroupMembersRequest) UnmarshalJSON(bytes []byte) (err error) {
	varModifyWorkgroupMembersRequest := _ModifyWorkgroupMembersRequest{}

	if err = json.Unmarshal(bytes, &varModifyWorkgroupMembersRequest); err == nil {
	*o = ModifyWorkgroupMembersRequest(varModifyWorkgroupMembersRequest)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "add")
		delete(additionalProperties, "remove")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModifyWorkgroupMembersRequest struct {
	value *ModifyWorkgroupMembersRequest
	isSet bool
}

func (v NullableModifyWorkgroupMembersRequest) Get() *ModifyWorkgroupMembersRequest {
	return v.value
}

func (v *NullableModifyWorkgroupMembersRequest) Set(val *ModifyWorkgroupMembersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModifyWorkgroupMembersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModifyWorkgroupMembersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModifyWorkgroupMembersRequest(val *ModifyWorkgroupMembersRequest) *NullableModifyWorkgroupMembersRequest {
	return &NullableModifyWorkgroupMembersRequest{value: val, isSet: true}
}

func (v NullableModifyWorkgroupMembersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModifyWorkgroupMembersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


