---
id: {{#lambda.kebabcase}}{{#lambda.titlecase}}{{funtionPrefix}}{{baseName}}{{/lambda.titlecase}}{{/lambda.kebabcase}}
title: {{#lambda.titlecase}}{{baseName}}{{/lambda.titlecase}}
pagination_label: {{baseName}}
sidebar_label: {{baseName}}
sidebar_class_name: gosdk
keywords: ['go', 'Golang', 'sdk', '{{baseName}}', '{{funtionPrefix}}{{baseName}}'] 
slug: /tools/sdk/go/{{#lambda.lowercase}}{{subModuleName}}{{/lambda.lowercase}}/methods/{{#lambda.kebabcase}}{{#lambda.titlecase}}{{baseName}}{{/lambda.titlecase}}{{/lambda.kebabcase}}
tags: ['SDK', 'Software Development Kit', '{{baseName}}', '{{funtionPrefix}}{{baseName}}']
---

# {{classname}}
  {{#operations}}{{#operation}}{{#-first}}{{#tags}}{{description}} {{/tags}}{{/-first}}{{/operation}}{{/operations}}
All URIs are relative to *{{basePath}}*

Method | HTTP request | Description
------------- | ------------- | -------------
{{#operations}}{{#operation}}[**{{#lambda.kebabcase}}{{operationId}}{{/lambda.kebabcase}}**](#{{#lambda.kebabcase}}{{#lambda.titlecase}}{{operationId}}{{/lambda.titlecase}}{{/lambda.kebabcase}}) | **{{httpMethod}}** `{{{path}}}` | {{summary}}
{{/operation}}{{/operations}}

{{#operations}}
{{#operation}}
## {{#lambda.kebabcase}}{{#lambda.titlecase}}{{operationId}}{{/lambda.titlecase}}{{/lambda.kebabcase}}
{{#isDeprecated}}:::caution deprecated 
This endpoint has been deprecated and may be replaced or removed in future versions of the API.
:::
{{/isDeprecated}}
{{#headerParams}}:::warning experimental 
This API is currently in an experimental state. The API is subject to change based on feedback and further testing. You must include the X-SailPoint-Experimental header and set it to `true` to use this endpoint.
:::
:::tip setting x-sailpoint-experimental header
 on the configuration object you can set the `x-sailpoint-experimental` header to `true' to enable all experimantl endpoints within the SDK.
 Example:
 ```go
   configuration = Configuration()
   configuration.experimental = True
 ```
:::
{{/headerParams}}
{{{summary}}}
{{#notes}}{{{unescapedNotes}}}{{/notes}}
{{{description}}}
[API Spec](https://developer.sailpoint.com/docs/api/{{apiVersion}}/{{#lambda.kebabcase}}{{#lambda.titlecase}}{{operationId}}{{/lambda.titlecase}}{{/lambda.kebabcase}})

### Path Parameters

{{^allParams}}This endpoint does not need any parameter.{{/allParams}}{{#pathParams}}{{#-last}}
Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------
**ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.{{/-last}}{{/pathParams}}{{#pathParams}}
**{{paramName}}** | {{^isPrimitiveType}}{{^isFile}}[{{/isFile}}{{/isPrimitiveType}}**{{dataType}}**{{^isPrimitiveType}}{{^isFile}}](../models/{{#lambda.kebabcase}}{{#lambda.titlecase}}{{baseType}}{{/lambda.titlecase}}{{/lambda.kebabcase}}){{/isFile}}{{/isPrimitiveType}} | {{description}} | {{#defaultValue}}[default to {{.}}]{{/defaultValue}}{{/pathParams}}

### Other Parameters

Other parameters are passed through a pointer to a api{{{nickname}}}Request struct via the builder pattern
{{#allParams}}{{#-last}}

Name | Type | Description  | Notes
------------- | ------------- | ------------- | -------------{{/-last}}{{/allParams}}{{#allParams}}
{{^isPathParam}} **{{paramName}}** | {{#isContainer}}{{#isArray}}{{#items}}{{^isPrimitiveType}}{{^isFile}}[{{/isFile}}{{/isPrimitiveType}}**[]{{dataType}}**{{^isPrimitiveType}}{{^isFile}}](../models/{{#lambda.kebabcase}}{{#lambda.titlecase}}{{^baseType}}{{dataType}}{{/baseType}}{{baseType}}{{/lambda.titlecase}}{{/lambda.kebabcase}}){{/isFile}}{{/isPrimitiveType}}{{/items}}{{/isArray}}{{#isMap}}{{#items}}{{^isPrimitiveType}}{{^isFile}}[{{/isFile}}{{/isPrimitiveType}}**map[string]{{dataType}}**{{^isPrimitiveType}}{{^isFile}}](../models/{{#lambda.kebabcase}}{{#lambda.titlecase}}{{^baseType}}{{dataType}}{{/baseType}}{{baseType}}{{/lambda.titlecase}}{{/lambda.kebabcase}}){{/isFile}}{{/isPrimitiveType}}{{/items}}{{/isMap}}{{/isContainer}}{{^isContainer}}{{^isPrimitiveType}}{{^isFile}}[{{/isFile}}{{/isPrimitiveType}}**{{dataType}}**{{^isPrimitiveType}}{{^isFile}}](../models/{{#lambda.kebabcase}}{{#lambda.titlecase}}{{^baseType}}{{dataType}}{{/baseType}}{{baseType}}{{/lambda.titlecase}}{{/lambda.kebabcase}}){{/isFile}}{{/isPrimitiveType}}{{/isContainer}} | {{description}} | {{#defaultValue}}[default to {{.}}]{{/defaultValue}}{{/isPathParam}}{{/allParams}}

### Return type

{{#returnType}}{{#returnTypeIsPrimitive}}**{{{returnType}}}**{{/returnTypeIsPrimitive}}{{^returnTypeIsPrimitive}}[**{{{returnType}}}**](../models/{{#lambda.kebabcase}}{{#lambda.titlecase}}{{returnBaseType}}{{/lambda.titlecase}}{{/lambda.kebabcase}}){{/returnTypeIsPrimitive}}{{/returnType}}{{^returnType}} (empty response body){{/returnType}}

### HTTP request headers

- **Content-Type**: {{#consumes}}{{{mediaType}}}{{^-last}}, {{/-last}}{{/consumes}}{{^consumes}}Not defined{{/consumes}}
- **Accept**: {{#produces}}{{{mediaType}}}{{^-last}}, {{/-last}}{{/produces}}{{^produces}}Not defined{{/produces}}

### Example

```go
package main

import (
	"context"
	"fmt"
	"os"
   {{#requiredAndNotNullableParams}}{{#isBodyParam}} "encoding/json"{{/isBodyParam}}{{/requiredAndNotNullableParams}}
{{#vendorExtensions.x-go-import}}
{{{vendorExtensions.x-go-import}}}
{{/vendorExtensions.x-go-import}}
    {{#requiredAndNotNullableParams}}{{#isBodyParam}}{{apiVersion}} "{{moduleImportPath}}"{{/isBodyParam}}{{/requiredAndNotNullableParams}}
	sailpoint "{{gitHost}}/{{gitUserId}}/{{gitRepoId}}{{#isGoSubmodule}}/{{packageName}}{{/isGoSubmodule}}"
)

func main() {
	{{#allParams}}
    {{^isArray}}
    {{#isModel}}
    {{#lambda.lowercase}}{{paramName}}{{/lambda.lowercase}} := []byte(`{{#lambda.indented_8}}{{#requestBodyExamples}}{{{example}}}{{/requestBodyExamples}}{{^requestBodyExamples}}{{#example}}{{{example}}}{{/example}}{{/requestBodyExamples}}`) // {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}{{/lambda.indented_8}}
    {{/isModel}}
    {{^isModel}}
    {{paramName}} := {{#isString}}`{{/isString}}{{{example}}}{{#isString}}`{{/isString}} // {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}} # {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}
    {{/isModel}}
    {{/isArray}}
    {{#isArray}}
    {{#items.isModel}}
    {{#lambda.lowercase}}{{paramName}}{{/lambda.lowercase}} := []byte(`{{{example}}}`) // {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}
    {{/items.isModel}}
    {{^items.isModel}}
    {{#lambda.lowercase}}{{paramName}}{{/lambda.lowercase}} := []byte(`{{{example}}}`) // {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}
    {{/items.isModel}}
    {{/isArray}}
    {{/allParams}}

  {{#requiredAndNotNullableParams}}{{#isBodyParam}}
   var {{paramName}} {{#isArray}}[]{{/isArray}}{{apiVersion}}.{{#lambda.titlecase}}{{paramName}}{{/lambda.titlecase}}
   if err := json.Unmarshal({{#lambda.lowercase}}{{paramName}}{{/lambda.lowercase}}, &{{paramName}}); err != nil {
    fmt.Println("Error:", err)
    return
   }
  {{/isBodyParam}}{{/requiredAndNotNullableParams}}

	configuration := sailpoint.NewDefaultConfiguration()
	apiClient := sailpoint.NewAPIClient(configuration)
    {{#returnType}}resp, {{/returnType}}r, err := apiClient.{{subModuleName}}.{{classname}}.{{operationId}}(context.Background(){{#pathParams}}, {{paramName}}{{/pathParams}}){{#requiredParams}}{{^isPathParam}}.{{vendorExtensions.x-export-param-name}}({{paramName}}){{/isPathParam}}{{/requiredParams}}.Execute()
	//{{#returnType}}resp, {{/returnType}}r, err := apiClient.{{subModuleName}}.{{classname}}.{{operationId}}(context.Background(){{#pathParams}}, {{paramName}}{{/pathParams}}){{#allParams}}{{^isPathParam}}.{{vendorExtensions.x-export-param-name}}({{paramName}}){{/isPathParam}}{{/allParams}}.Execute()
	if err != nil {
		fmt.Fprintf(os.Stderr, "Error when calling `{{classname}}.{{operationId}}``: %v\n", err)
		fmt.Fprintf(os.Stderr, "Full HTTP response: %v\n", r)
	}
	{{#returnType}}
	// response from `{{operationId}}`: {{{.}}}
	fmt.Fprintf(os.Stdout, "Response from `{{classname}}.{{operationId}}`: %v\n", resp)
	{{/returnType}}
}
```

[[Back to top]](#)

{{/operation}}
{{/operations}}
