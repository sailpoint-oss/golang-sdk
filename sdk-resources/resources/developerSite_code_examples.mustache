{{#operations}}
{{#operation}}
- path: {{path}}
  method: {{httpMethod}}
  xCodeSample:
    - lang: Golang
      label: SDK_tools/sdk/go/{{#lambda.lowercase}}{{subModuleName}}{{/lambda.lowercase}}/methods/{{#lambda.kebabcase}}{{#lambda.titlecase}}{{baseName}}{{/lambda.titlecase}}{{/lambda.kebabcase}}#{{#lambda.kebabcase}}{{#lambda.titlecase}}{{operationId}}{{/lambda.titlecase}}{{/lambda.kebabcase}}
      source: |
        from {{{packageName}}}.api.{{#lambda.snakecase}}{{classname}}{{/lambda.snakecase}} import {{#lambda.titlecase}}{{classname}}{{/lambda.titlecase}}
        from {{{packageName}}}.api_client import ApiClient
        {{#vendorExtensions.x-py-example-import}}
        {{{.}}}
        {{/vendorExtensions.x-py-example-import}}
        from sailpoint.configuration import Configuration
        configuration = Configuration()

        {{#headerParams}}
        configuration.experimental = true
        {{/headerParams}}

        with ApiClient(configuration) as api_client:
          {{#allParams}}
          {{^isArray}}
          {{#isModel}}
          {{paramName}} = '''{{#lambda.indented_8}}{{#requestBodyExamples}}{{{example}}}{{/requestBodyExamples}}{{^requestBodyExamples}}{{#example}}{{{example}}}{{/example}}{{/requestBodyExamples}}''' # {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}{{/lambda.indented_8}}
          {{/isModel}}
          {{^isModel}}
          {{paramName}} = {{{example}}} # {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}} # {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}
          {{/isModel}}
          {{/isArray}}
          {{#isArray}}
          {{#items.isModel}}
          {{paramName}} = '''{{{example}}}''' # {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}
          {{/items.isModel}}
          {{^items.isModel}}
          {{paramName}} = '''{{{example}}}''' # {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} (default to {{{.}}}){{/defaultValue}}
          {{/items.isModel}}
          {{/isArray}}
          {{/allParams}}
          try:
              {{#summary}}
              # {{{.}}}
              {{/summary}}
              {{#requiredAndNotNullableParams}}{{#isBodyParam}}new_{{paramName}} = {{#lambda.titlecase}}{{#lambda.camelcase}}{{paramName}}{{/lambda.camelcase}}{{/lambda.titlecase}}.from_json({{paramName}}){{/isBodyParam}}{{/requiredAndNotNullableParams}}
              {{#returnType}}results = {{/returnType}}{{#lambda.titlecase}}{{classname}}{{/lambda.titlecase}}(api_client).{{{operationId}}}({{#requiredParams}}{{#isBodyParam}}{{paramName}}=new_{{paramName}}{{^-last}}, {{/-last}}{{/isBodyParam}}{{^isBodyParam}}{{paramName}}={{paramName}}{{^-last}}, {{/-last}}{{/isBodyParam}}{{/requiredParams}})
              # Below is a request that includes all optional parameters
              # {{#returnType}}results = {{/returnType}}{{#lambda.titlecase}}{{classname}}{{/lambda.titlecase}}(api_client).{{{operationId}}}({{#allParams}}{{^isBodyParam}}{{paramName}}{{/isBodyParam}}{{#isBodyParam}}new_{{paramName}}{{/isBodyParam}}{{^-last}}, {{/-last}}{{/allParams}})
              {{#returnType}}
              print("The response of {{classname}}->{{operationId}}:\n")
              print(results.model_dump_json(by_alias=True, indent=4))
              {{/returnType}}
          except Exception as e:
              print("Exception when calling {{classname}}->{{operationId}}: %s\n" % e)
  {{/operation}}
{{/operations}}
