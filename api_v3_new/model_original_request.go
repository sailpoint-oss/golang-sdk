/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v3

import (
	"encoding/json"
)

// checks if the OriginalRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginalRequest{}

// OriginalRequest struct for OriginalRequest
type OriginalRequest struct {
	// Account ID.
	AccountId *string `json:"accountId,omitempty"`
	// Attribute changes requested for account.
	AttributeRequests []AttributeRequest `json:"attributeRequests,omitempty"`
	// Operation used.
	Op *string `json:"op,omitempty"`
	Source *AccountSource `json:"source,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OriginalRequest OriginalRequest

// NewOriginalRequest instantiates a new OriginalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginalRequest() *OriginalRequest {
	this := OriginalRequest{}
	return &this
}

// NewOriginalRequestWithDefaults instantiates a new OriginalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginalRequestWithDefaults() *OriginalRequest {
	this := OriginalRequest{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *OriginalRequest) GetAccountId() string {
	if o == nil || isNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalRequest) GetAccountIdOk() (*string, bool) {
	if o == nil || isNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *OriginalRequest) HasAccountId() bool {
	if o != nil && !isNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *OriginalRequest) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAttributeRequests returns the AttributeRequests field value if set, zero value otherwise.
func (o *OriginalRequest) GetAttributeRequests() []AttributeRequest {
	if o == nil || isNil(o.AttributeRequests) {
		var ret []AttributeRequest
		return ret
	}
	return o.AttributeRequests
}

// GetAttributeRequestsOk returns a tuple with the AttributeRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalRequest) GetAttributeRequestsOk() ([]AttributeRequest, bool) {
	if o == nil || isNil(o.AttributeRequests) {
		return nil, false
	}
	return o.AttributeRequests, true
}

// HasAttributeRequests returns a boolean if a field has been set.
func (o *OriginalRequest) HasAttributeRequests() bool {
	if o != nil && !isNil(o.AttributeRequests) {
		return true
	}

	return false
}

// SetAttributeRequests gets a reference to the given []AttributeRequest and assigns it to the AttributeRequests field.
func (o *OriginalRequest) SetAttributeRequests(v []AttributeRequest) {
	o.AttributeRequests = v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *OriginalRequest) GetOp() string {
	if o == nil || isNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalRequest) GetOpOk() (*string, bool) {
	if o == nil || isNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *OriginalRequest) HasOp() bool {
	if o != nil && !isNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *OriginalRequest) SetOp(v string) {
	o.Op = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *OriginalRequest) GetSource() AccountSource {
	if o == nil || isNil(o.Source) {
		var ret AccountSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginalRequest) GetSourceOk() (*AccountSource, bool) {
	if o == nil || isNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *OriginalRequest) HasSource() bool {
	if o != nil && !isNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given AccountSource and assigns it to the Source field.
func (o *OriginalRequest) SetSource(v AccountSource) {
	o.Source = &v
}

func (o OriginalRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginalRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !isNil(o.AttributeRequests) {
		toSerialize["attributeRequests"] = o.AttributeRequests
	}
	if !isNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	if !isNil(o.Source) {
		toSerialize["source"] = o.Source
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OriginalRequest) UnmarshalJSON(bytes []byte) (err error) {
	varOriginalRequest := _OriginalRequest{}

	if err = json.Unmarshal(bytes, &varOriginalRequest); err == nil {
	*o = OriginalRequest(varOriginalRequest)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accountId")
		delete(additionalProperties, "attributeRequests")
		delete(additionalProperties, "op")
		delete(additionalProperties, "source")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOriginalRequest struct {
	value *OriginalRequest
	isSet bool
}

func (v NullableOriginalRequest) Get() *OriginalRequest {
	return v.value
}

func (v *NullableOriginalRequest) Set(val *OriginalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginalRequest(val *OriginalRequest) *NullableOriginalRequest {
	return &NullableOriginalRequest{value: val, isSet: true}
}

func (v NullableOriginalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


