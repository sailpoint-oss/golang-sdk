/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v3

import (
	"encoding/json"
)

// checks if the AttributeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttributeRequest{}

// AttributeRequest struct for AttributeRequest
type AttributeRequest struct {
	// Attribute name.
	Name *string `json:"name,omitempty"`
	// Operation to perform on attribute.
	Op *string `json:"op,omitempty"`
	// Value of attribute.
	Value *string `json:"value,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AttributeRequest AttributeRequest

// NewAttributeRequest instantiates a new AttributeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeRequest() *AttributeRequest {
	this := AttributeRequest{}
	return &this
}

// NewAttributeRequestWithDefaults instantiates a new AttributeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeRequestWithDefaults() *AttributeRequest {
	this := AttributeRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AttributeRequest) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeRequest) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AttributeRequest) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AttributeRequest) SetName(v string) {
	o.Name = &v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *AttributeRequest) GetOp() string {
	if o == nil || isNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeRequest) GetOpOk() (*string, bool) {
	if o == nil || isNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *AttributeRequest) HasOp() bool {
	if o != nil && !isNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *AttributeRequest) SetOp(v string) {
	o.Op = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AttributeRequest) GetValue() string {
	if o == nil || isNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeRequest) GetValueOk() (*string, bool) {
	if o == nil || isNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AttributeRequest) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AttributeRequest) SetValue(v string) {
	o.Value = &v
}

func (o AttributeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttributeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	if !isNil(o.Value) {
		toSerialize["value"] = o.Value
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AttributeRequest) UnmarshalJSON(bytes []byte) (err error) {
	varAttributeRequest := _AttributeRequest{}

	if err = json.Unmarshal(bytes, &varAttributeRequest); err == nil {
	*o = AttributeRequest(varAttributeRequest)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "op")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAttributeRequest struct {
	value *AttributeRequest
	isSet bool
}

func (v NullableAttributeRequest) Get() *AttributeRequest {
	return v.value
}

func (v *NullableAttributeRequest) Set(val *AttributeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeRequest(val *AttributeRequest) *NullableAttributeRequest {
	return &NullableAttributeRequest{value: val, isSet: true}
}

func (v NullableAttributeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


