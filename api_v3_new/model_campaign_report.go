/*
IdentityNow V3 API

Use these APIs to interact with the IdentityNow platform to achieve repeatable, automated processes with greater scalability. We encourage you to join the SailPoint Developer Community forum at https://developer.sailpoint.com/discuss to connect with other developers using our APIs.

API version: 3.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_v3

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the CampaignReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignReport{}

// CampaignReport struct for CampaignReport
type CampaignReport struct {
	// SOD policy violation report result DTO type.
	Type *string `json:"type,omitempty"`
	// SOD policy violation report result ID.
	Id *string `json:"id,omitempty"`
	// Human-readable name of the SOD policy violation report result.
	Name *string `json:"name,omitempty"`
	// Status of a SOD policy violation report.
	Status *string `json:"status,omitempty"`
	ReportType ReportType `json:"reportType"`
	// The most recent date and time this report was run
	LastRunAt *time.Time `json:"lastRunAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CampaignReport CampaignReport

// NewCampaignReport instantiates a new CampaignReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignReport(reportType ReportType) *CampaignReport {
	this := CampaignReport{}
	this.ReportType = reportType
	return &this
}

// NewCampaignReportWithDefaults instantiates a new CampaignReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignReportWithDefaults() *CampaignReport {
	this := CampaignReport{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CampaignReport) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CampaignReport) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CampaignReport) SetType(v string) {
	o.Type = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CampaignReport) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CampaignReport) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CampaignReport) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CampaignReport) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CampaignReport) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CampaignReport) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CampaignReport) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CampaignReport) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CampaignReport) SetStatus(v string) {
	o.Status = &v
}

// GetReportType returns the ReportType field value
func (o *CampaignReport) GetReportType() ReportType {
	if o == nil {
		var ret ReportType
		return ret
	}

	return o.ReportType
}

// GetReportTypeOk returns a tuple with the ReportType field value
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetReportTypeOk() (*ReportType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportType, true
}

// SetReportType sets field value
func (o *CampaignReport) SetReportType(v ReportType) {
	o.ReportType = v
}

// GetLastRunAt returns the LastRunAt field value if set, zero value otherwise.
func (o *CampaignReport) GetLastRunAt() time.Time {
	if o == nil || isNil(o.LastRunAt) {
		var ret time.Time
		return ret
	}
	return *o.LastRunAt
}

// GetLastRunAtOk returns a tuple with the LastRunAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignReport) GetLastRunAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastRunAt) {
		return nil, false
	}
	return o.LastRunAt, true
}

// HasLastRunAt returns a boolean if a field has been set.
func (o *CampaignReport) HasLastRunAt() bool {
	if o != nil && !isNil(o.LastRunAt) {
		return true
	}

	return false
}

// SetLastRunAt gets a reference to the given time.Time and assigns it to the LastRunAt field.
func (o *CampaignReport) SetLastRunAt(v time.Time) {
	o.LastRunAt = &v
}

func (o CampaignReport) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	toSerialize["reportType"] = o.ReportType
	// skip: lastRunAt is readOnly

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CampaignReport) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"reportType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCampaignReport := _CampaignReport{}

	if err = json.Unmarshal(bytes, &varCampaignReport); err == nil {
	*o = CampaignReport(varCampaignReport)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "status")
		delete(additionalProperties, "reportType")
		delete(additionalProperties, "lastRunAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCampaignReport struct {
	value *CampaignReport
	isSet bool
}

func (v NullableCampaignReport) Get() *CampaignReport {
	return v.value
}

func (v *NullableCampaignReport) Set(val *CampaignReport) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignReport) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignReport(val *CampaignReport) *NullableCampaignReport {
	return &NullableCampaignReport{value: val, isSet: true}
}

func (v NullableCampaignReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


