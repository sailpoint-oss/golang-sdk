/*
IdentityNow cc (private) APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_cc

import (
	"encoding/json"
)

// checks if the ListConnectors200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListConnectors200Response{}

// ListConnectors200Response struct for ListConnectors200Response
type ListConnectors200Response struct {
	Total *float32 `json:"total,omitempty"`
	Items []ListConnectors200ResponseItemsInner `json:"items,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListConnectors200Response ListConnectors200Response

// NewListConnectors200Response instantiates a new ListConnectors200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListConnectors200Response() *ListConnectors200Response {
	this := ListConnectors200Response{}
	return &this
}

// NewListConnectors200ResponseWithDefaults instantiates a new ListConnectors200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListConnectors200ResponseWithDefaults() *ListConnectors200Response {
	this := ListConnectors200Response{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ListConnectors200Response) GetTotal() float32 {
	if o == nil || isNil(o.Total) {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListConnectors200Response) GetTotalOk() (*float32, bool) {
	if o == nil || isNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ListConnectors200Response) HasTotal() bool {
	if o != nil && !isNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *ListConnectors200Response) SetTotal(v float32) {
	o.Total = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ListConnectors200Response) GetItems() []ListConnectors200ResponseItemsInner {
	if o == nil || isNil(o.Items) {
		var ret []ListConnectors200ResponseItemsInner
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListConnectors200Response) GetItemsOk() ([]ListConnectors200ResponseItemsInner, bool) {
	if o == nil || isNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ListConnectors200Response) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ListConnectors200ResponseItemsInner and assigns it to the Items field.
func (o *ListConnectors200Response) SetItems(v []ListConnectors200ResponseItemsInner) {
	o.Items = v
}

func (o ListConnectors200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListConnectors200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListConnectors200Response) UnmarshalJSON(bytes []byte) (err error) {
	varListConnectors200Response := _ListConnectors200Response{}

	if err = json.Unmarshal(bytes, &varListConnectors200Response); err == nil {
	*o = ListConnectors200Response(varListConnectors200Response)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "total")
		delete(additionalProperties, "items")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListConnectors200Response struct {
	value *ListConnectors200Response
	isSet bool
}

func (v NullableListConnectors200Response) Get() *ListConnectors200Response {
	return v.value
}

func (v *NullableListConnectors200Response) Set(val *ListConnectors200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListConnectors200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListConnectors200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListConnectors200Response(val *ListConnectors200Response) *NullableListConnectors200Response {
	return &NullableListConnectors200Response{value: val, isSet: true}
}

func (v NullableListConnectors200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListConnectors200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


