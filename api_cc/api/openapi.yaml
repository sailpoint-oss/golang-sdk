openapi: 3.0.0
info:
  title: IdentityNow cc (private) APIs
  version: 1.0.0
servers:
- description: This is the production API server.
  url: "https://{tenant}.api.identitynow.com"
  variables:
    tenant:
      default: sailpoint
      description: "This is the name of your tenant, typically your company's name."
- description: This is the CC API server.
  url: "https://{apiUrl}"
  variables:
    apiUrl:
      default: sailpoint.api.identitynow.com
      description: This is the api url of your tenant
tags:
- name: Accounts
- name: Applications
- name: Connectors
- name: User
- name: Sources > Aggregation
- name: Sources > Accounts
- name: System
paths:
  /cc/api/account/list:
    get:
      operationId: listAccounts
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listAccounts_200_response_inner'
                type: array
          description: Successful response
      security:
      - UserContextAuth: []
      summary: List Accounts
      tags:
      - Accounts
  /cc/api/account/remove/{id}:
    post:
      operationId: removeAccount
      parameters:
      - example: 12345
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Remove Account
      tags:
      - Accounts
  /cc/api/app/list:
    get:
      operationId: listApplications
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/listApplications_200_response_inner'
                type: array
          description: Successful response
      security:
      - UserContextAuth: []
      summary: List Applications
      tags:
      - Applications
  /cc/api/app/get/{id}:
    get:
      operationId: GetApplication
      parameters:
      - example: 12345
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplication_200_response'
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Get Single Application
      tags:
      - Applications
  /cc/api/app/getAccessProfiles/{id}:
    get:
      operationId: GetApplicationAccessProfiles
      parameters:
      - example: 12345
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: Successful response
      summary: Get Access Profiles for Application
      tags:
      - Applications
  /cc/api/app/create:
    post:
      operationId: CreateApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplication_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Create Application
      tags:
      - Applications
  /cc/api/app/update/{id}:
    post:
      operationId: UpdateApplication
      parameters:
      - example: 12345
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Update Application
      tags:
      - Applications
  /cc/api/app/delete/{id}:
    post:
      operationId: DeleteApplication
      parameters:
      - example: 12345
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Delete Application
      tags:
      - Applications
  /cc/api/connector/list:
    get:
      operationId: listConnectors
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listConnectors_200_response'
          description: Successful response
      security:
      - UserContextAuth: []
      summary: List Connectors
      tags:
      - Connectors
  /cc/api/connector/create:
    post:
      operationId: createConnector
      parameters:
      - example: application/x-www-form-urlencoded
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/createConnector_request'
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Create Connector
      tags:
      - Connectors
  /cc/api/connector/delete/{id}:
    post:
      operationId: deleteConnector
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Delete Connector
      tags:
      - Connectors
  /cc/api/connector/export/{id}:
    get:
      operationId: exportConnectorConfig
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Export Connector Config
      tags:
      - Connectors
  /cc/api/connector/import/{id}:
    post:
      operationId: importConnectorConfig
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/importConnectorConfig_request'
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Import Connector Config
      tags:
      - Connectors
  /cc/api/user/updatePermissions:
    post:
      operationId: updateUserPermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateUserPermissions_request'
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Update User Permissions
      tags:
      - User
  /cc/api/user/get/{id}:
    get:
      operationId: GetIdentity
      parameters:
      - example: 5433236
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetIdentity_200_response'
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Get Single Identity
      tags:
      - User
  /cc/api/source/loadAccounts/{id}:
    post:
      description: Aggregates a delimited file for the given source.  This only works
        for file-based sources.
      operationId: loadAccounts
      parameters:
      - example: application/x-www-form-urlencoded
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/loadAccounts_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Account Aggregation (File)
      tags:
      - Sources > Aggregation
  /cc/api/source/loadEntitlements/{id}:
    post:
      description: Aggregates a delimited file for the given source.  This only works
        for file-based sources.
      operationId: loadEntitlements
      parameters:
      - example: application/x-www-form-urlencoded
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/loadEntitlements_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Account Aggregation (File)
      tags:
      - Sources > Aggregation
  /cc/api/source/exportAccountFeed/{id}:
    get:
      description: Exports a CSV of the accounts for a particular source.
      operationId: exportAccountFeed
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json: {}
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Export Account Feed
      tags:
      - Sources > Accounts
  /cc/api/system/refreshIdentities:
    post:
      description: |-
        This kicks off an identity refresh for a specified set of identity attributes.  This can be a long running process.  IdentityNow has pre-scheduled versions of this task at set intervals and events already, so only run this when directed by SailPoint.

        _Note: If the identities specified by the filter do not exist, a full identity refresh will be run.  Use with caution._

        Refresh Arguments:

        | Key                   | Description                                        |
        |-----------------------|----------------------------------------------------|
        | correlateEntitlements | Analyzes entitlements, access profiles, and roles. |
        | promoteAttributes     | Calculates identity attributes.                    |
        | refreshManagerStatus  | Calculates manager correlation and manager status. |
        | synchronizeAttributes | Performs attribute sync provisioning.              |
        | pruneIdentities       | Removes any identities which don't have accounts.  |
        | provision             | Provisions any assigned roles or access profiles.  |
      operationId: refreshIdentities
      parameters:
      - example: application/json
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refreshIdentities_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: Successful response
      security:
      - UserContextAuth: []
      summary: Refresh Identities
      tags:
      - System
components:
  schemas:
    GetIdentity_200_response_org:
      example:
        standardLogoUrl: "{}"
        enableExternalPasswordChange: true
        emailTestAddress: emailTestAddress
        kbaReqAnswers: 2.3021358869347655
        adminStrongAuthRequired: true
        productName: productName
        mode: mode
        orgType: orgType
        pwdResetPersonalEmail: true
        logo: "{}"
        pwdResetEmail: true
        navigationColor: navigationColor
        redirectPatterns: redirectPatterns
        pwdResetKba: true
        strongAuthPersonalPhone: true
        brandName: brandName
        kbaReqForAuthn: 5.637376656633329
        usernameEmptyText: "{}"
        strongAuthPersonalEmail: true
        usernameLabel: "{}"
        lockoutAttemptThreshold: 7.061401241503109
        numQuestions: 1.4658129805029452
        strongAuthKba: true
        usageCertRequired: true
        name: name
        scriptName: scriptName
        whiteList: true
        notifyAuthenticationSettingChange: true
        netmasks: "{}"
        systemNotificationConfig: systemNotificationConfig
        integrations:
        - "{}"
        - "{}"
        lockoutTimeMinutes: 9.301444243932576
        status: status
        activeLinkColor: activeLinkColor
        pod: pod
        narrowLogoUrl: "{}"
        emailFromAddress: "{}"
        emailTestMode: true
        pwdResetPersonalPhone: true
        pwdResetDuo: true
        enableAutomationGeneration: true
        authErrorText: "{}"
        enablePasswordReplay: true
        pwdResetPhoneMask: true
        enableAutomaticPasswordReplay: true
        countryCodes: "{}"
        actionButtonColor: actionButtonColor
        maxClusterDebugHours: maxClusterDebugHours
        passwordReplayState: passwordReplayState
        maxRegisteredUsers: 5.962133916683182
      properties:
        name:
          type: string
        scriptName:
          type: string
        mode:
          type: string
        numQuestions:
          type: number
        status:
          type: string
        maxRegisteredUsers:
          type: number
        pod:
          type: string
        pwdResetPersonalPhone:
          type: boolean
        pwdResetPersonalEmail:
          type: boolean
        pwdResetKba:
          type: boolean
        pwdResetEmail:
          type: boolean
        pwdResetDuo:
          type: boolean
        pwdResetPhoneMask:
          type: boolean
        authErrorText:
          type: object
        strongAuthKba:
          type: boolean
        strongAuthPersonalPhone:
          type: boolean
        strongAuthPersonalEmail:
          type: boolean
        integrations:
          items:
            type: object
          type: array
        productName:
          type: string
        kbaReqForAuthn:
          type: number
        kbaReqAnswers:
          type: number
        lockoutAttemptThreshold:
          type: number
        lockoutTimeMinutes:
          type: number
        usageCertRequired:
          type: boolean
        adminStrongAuthRequired:
          type: boolean
        enableExternalPasswordChange:
          type: boolean
        enablePasswordReplay:
          type: boolean
        enableAutomaticPasswordReplay:
          type: boolean
        notifyAuthenticationSettingChange:
          type: boolean
        netmasks:
          type: object
        countryCodes:
          type: object
        whiteList:
          type: boolean
        usernameEmptyText:
          type: object
        usernameLabel:
          type: object
        enableAutomationGeneration:
          type: boolean
        emailTestMode:
          type: boolean
        emailTestAddress:
          type: string
        orgType:
          type: string
        passwordReplayState:
          type: string
        systemNotificationConfig:
          type: string
        redirectPatterns:
          type: string
        maxClusterDebugHours:
          type: string
        brandName:
          type: string
        logo:
          type: object
        emailFromAddress:
          type: object
        standardLogoUrl:
          type: object
        narrowLogoUrl:
          type: object
        actionButtonColor:
          type: string
        activeLinkColor:
          type: string
        navigationColor:
          type: string
      type: object
    loadAccounts_request:
      properties:
        disableOptimization:
          example: true
          type: boolean
        file:
          format: binary
          type: string
      type: object
    listAccounts_200_response_inner_passwordChangeResult:
      example:
        completionStatus: SUCCESS
      properties:
        completionStatus:
          example: SUCCESS
          type: string
      type: object
    createConnector_request:
      properties:
        name:
          example: My Connector
          type: string
        description:
          example: My Connector
          type: string
        className:
          example: sailpoint.connector.OpenConnectorAdapter
          type: string
        directConnect:
          example: true
          type: boolean
        status:
          example: released
          type: string
      type: object
    listApplications_200_response_inner_accountServicePolicies_inner:
      example:
        policyId: policyId
        policyName: policyName
        selectors: "{}"
      properties:
        policyId:
          type: string
        policyName:
          type: string
        selectors:
          type: object
      type: object
    GetApplication_200_response:
      example:
        xsdVersion: xsdVersion
        usageCertText: "{}"
        lastUpdated: 6.027456183070403
        launcherCount: 5.637376656633329
        supportedSsoMethods: 1.4658129805029452
        appId: appId
        stepUpAuthType: stepUpAuthType
        id: id
        provisionRequestEnabled: true
        launchpadEnabled: true
        selectedSsoMethod: selectedSsoMethod
        offNetworkBlockedRoles: "{}"
        accountServicePolicies:
        - policyId: policyId
          policyName: policyName
          selectors: "{}"
        - policyId: policyId
          policyName: policyName
          selectors: "{}"
        serviceAppId: serviceAppId
        stepUpAuthData: "{}"
        usageCertRequired: true
        privateApp: true
        ssoMethod: ssoMethod
        hasAutomations: true
        name: name
        scriptName: scriptName
        accountServiceMatchAllAccounts: true
        status: status
        accountServicePolicyId: accountServicePolicyId
        supportedOffNetwork: supportedOffNetwork
        icon: icon
        description: description
        passwordServiceId: 2.3021358869347655
        passwordManaged: true
        accountServiceId: 5.962133916683182
        appCenterEnabled: true
        accountServiceName: accountServiceName
        defaultAccessProfile: "{}"
        dateCreated: 0.8008281904610115
        enableSso: true
        requireStrongAuthn: true
        serviceId: serviceId
        accountServicePolicyName: accountServicePolicyName
        owner:
          name: name
          id: id
        accessProfileIds: "{}"
        mobile: true
        health:
          healthy: true
          lastChanged: lastChanged
          status: status
          since: 0.8008281904610115
        externalId: externalId
        usageAnalytics: true
        hasLinks: true
        controlType: controlType
        service: service
        accountServiceUseForPasswordManagement: true
        accountServiceExternalId: accountServiceExternalId
        appProfiles:
        - xsdVersion: xsdVersion
          filename: filename
          dateCreated: dateCreated
          createdBy: createdBy
          id: 7.061401241503109
        - xsdVersion: xsdVersion
          filename: filename
          dateCreated: dateCreated
          createdBy: createdBy
          id: 7.061401241503109
      properties:
        id:
          type: string
        appId:
          type: string
        serviceId:
          type: string
        serviceAppId:
          type: string
        name:
          type: string
        description:
          type: string
        appCenterEnabled:
          type: boolean
        provisionRequestEnabled:
          type: boolean
        controlType:
          type: string
        mobile:
          type: boolean
        privateApp:
          type: boolean
        scriptName:
          type: string
        status:
          type: string
        icon:
          type: string
        health:
          $ref: '#/components/schemas/listApplications_200_response_inner_health'
        enableSso:
          type: boolean
        ssoMethod:
          type: string
        hasLinks:
          type: boolean
        hasAutomations:
          type: boolean
        stepUpAuthData:
          type: object
        stepUpAuthType:
          type: string
        usageAnalytics:
          type: boolean
        usageCertRequired:
          type: boolean
        usageCertText:
          type: object
        launchpadEnabled:
          type: boolean
        passwordManaged:
          type: boolean
        owner:
          $ref: '#/components/schemas/listApplications_200_response_inner_owner'
        dateCreated:
          type: number
        lastUpdated:
          type: number
        defaultAccessProfile:
          type: object
        service:
          type: string
        selectedSsoMethod:
          type: string
        supportedSsoMethods:
          type: number
        offNetworkBlockedRoles:
          type: object
        supportedOffNetwork:
          type: string
        accountServiceId:
          type: number
        launcherCount:
          type: number
        accountServiceName:
          type: string
        accountServiceExternalId:
          type: string
        accountServiceMatchAllAccounts:
          type: boolean
        externalId:
          type: string
        accountServiceUseForPasswordManagement:
          type: boolean
        accountServicePolicyId:
          type: string
        accountServicePolicyName:
          type: string
        requireStrongAuthn:
          type: boolean
        accountServicePolicies:
          items:
            $ref: '#/components/schemas/listApplications_200_response_inner_accountServicePolicies_inner'
          type: array
        xsdVersion:
          type: string
        appProfiles:
          items:
            $ref: '#/components/schemas/listApplications_200_response_inner_appProfiles_inner'
          type: array
        passwordServiceId:
          type: number
        accessProfileIds:
          type: object
      type: object
    updateUserPermissions_request:
      properties:
        ids:
          example: "71624,71625"
          type: string
        isAdmin:
          description: "Indicates if user should be an IDN Admin.  \"0\" for false,\
            \ \"1\" for true."
          example: "1"
          type: string
        adminType:
          enum:
          - ADMIN
          - CERT_ADMIN
          - HELPDESK
          - REPORT_ADMIN
          - ROLE_ADMIN
          - ROLE_SUBADMIN
          - SOURCE_ADMIN
          - SOURCE_SUBADMIN
          type: string
      type: object
    listApplications_200_response_inner_health:
      example:
        healthy: true
        lastChanged: lastChanged
        status: status
        since: 0.8008281904610115
      properties:
        status:
          type: string
        lastChanged:
          type: string
        since:
          type: number
        healthy:
          type: boolean
      type: object
    listConnectors_200_response_items_inner:
      example:
        applicationXml: applicationXml
        uploadedFiles: []
        translationProperties: "{}"
        directConnect: true
        className: className
        fileUpload: true
        type: ACF2 - Full
        sourceConfigFrom: sourceConfigFrom
        sourceConfig: sourceConfig
        scope: global
        correlationConfigXml: correlationConfigXml
        name: ACF2
        sourceConfigXml: sourceConfigXml
        scriptName: acf2-angularsc
        id: 8017
        s3Location: s3Location
        connectorMetadata: "{}"
        status: RELEASED
      properties:
        applicationXml:
          nullable: true
          type: string
        className:
          nullable: true
          type: string
        connectorMetadata:
          type: object
        correlationConfigXml:
          nullable: true
          type: string
        directConnect:
          type: boolean
        fileUpload:
          type: boolean
        id:
          example: 8017
          format: int32
          type: integer
        name:
          example: ACF2
          type: string
        s3Location:
          nullable: true
          type: string
        scope:
          example: global
          type: string
        scriptName:
          example: acf2-angularsc
          type: string
        sourceConfig:
          nullable: true
          type: string
        sourceConfigFrom:
          nullable: true
          type: string
        sourceConfigXml:
          nullable: true
          type: string
        status:
          example: RELEASED
          type: string
        translationProperties:
          type: object
        type:
          example: ACF2 - Full
          type: string
        uploadedFiles:
          example: []
          items:
            type: object
          type: array
      type: object
    GetIdentity_200_response:
      example:
        role:
        - "{}"
        - "{}"
        auth:
          encryption: encryption
          service: service
        displayName: displayName
        kbaAnswers: 0.8008281904610115
        pending: true
        onNetwork: true
        usageCertAttested: "{}"
        encryptionKey: "{}"
        uuid: uuid
        enabled: true
        personalEmail: "{}"
        employeeNumber: "{}"
        uid: uid
        altAuthViaIntegrationData: "{}"
        feature:
        - feature
        - feature
        loginUrl: loginUrl
        alias: alias
        id: id
        riskScore: 6.027456183070403
        email: email
        disablePasswordReset: true
        featureFlags: "{}"
        encryptionCheck: "{}"
        userFlags: "{}"
        passwordResetSinceLastLogin: true
        supportsPasswordPush: true
        org:
          standardLogoUrl: "{}"
          enableExternalPasswordChange: true
          emailTestAddress: emailTestAddress
          kbaReqAnswers: 2.3021358869347655
          adminStrongAuthRequired: true
          productName: productName
          mode: mode
          orgType: orgType
          pwdResetPersonalEmail: true
          logo: "{}"
          pwdResetEmail: true
          navigationColor: navigationColor
          redirectPatterns: redirectPatterns
          pwdResetKba: true
          strongAuthPersonalPhone: true
          brandName: brandName
          kbaReqForAuthn: 5.637376656633329
          usernameEmptyText: "{}"
          strongAuthPersonalEmail: true
          usernameLabel: "{}"
          lockoutAttemptThreshold: 7.061401241503109
          numQuestions: 1.4658129805029452
          strongAuthKba: true
          usageCertRequired: true
          name: name
          scriptName: scriptName
          whiteList: true
          notifyAuthenticationSettingChange: true
          netmasks: "{}"
          systemNotificationConfig: systemNotificationConfig
          integrations:
          - "{}"
          - "{}"
          lockoutTimeMinutes: 9.301444243932576
          status: status
          activeLinkColor: activeLinkColor
          pod: pod
          narrowLogoUrl: "{}"
          emailFromAddress: "{}"
          emailTestMode: true
          pwdResetPersonalPhone: true
          pwdResetDuo: true
          enableAutomationGeneration: true
          authErrorText: "{}"
          enablePasswordReplay: true
          pwdResetPhoneMask: true
          enableAutomaticPasswordReplay: true
          countryCodes: "{}"
          actionButtonColor: actionButtonColor
          maxClusterDebugHours: maxClusterDebugHours
          passwordReplayState: passwordReplayState
          maxRegisteredUsers: 5.962133916683182
        ptaSourceId: "{}"
        externalId: externalId
        stepUpAuth: true
        orgEncryptionKeyId: orgEncryptionKeyId
        bxInstallPrompted: true
        federatedLogin: true
        phone: "{}"
        meta: "{}"
        altAuthVia: altAuthVia
        name: name
        attributes: "{}"
        onTrustedGeo: true
        status: status
        orgEncryptionKey: orgEncryptionKey
      properties:
        id:
          type: string
        alias:
          type: string
        uid:
          type: string
        name:
          type: string
        displayName:
          type: string
        uuid:
          type: string
        encryptionKey:
          type: object
        encryptionCheck:
          type: object
        status:
          type: string
        pending:
          type: boolean
        passwordResetSinceLastLogin:
          type: boolean
        usageCertAttested:
          type: object
        userFlags:
          type: object
        enabled:
          type: boolean
        altAuthVia:
          type: string
        altAuthViaIntegrationData:
          type: object
        kbaAnswers:
          type: number
        disablePasswordReset:
          type: boolean
        ptaSourceId:
          type: object
        supportsPasswordPush:
          type: boolean
        attributes:
          type: object
        externalId:
          type: string
        role:
          items:
            type: object
          type: array
        phone:
          type: object
        email:
          type: string
        personalEmail:
          type: object
        employeeNumber:
          type: object
        riskScore:
          type: number
        featureFlags:
          type: object
        feature:
          items:
            type: string
          type: array
        orgEncryptionKey:
          type: string
        orgEncryptionKeyId:
          type: string
        meta:
          type: object
        org:
          $ref: '#/components/schemas/GetIdentity_200_response_org'
        stepUpAuth:
          type: boolean
        bxInstallPrompted:
          type: boolean
        federatedLogin:
          type: boolean
        auth:
          $ref: '#/components/schemas/GetIdentity_200_response_auth'
        onNetwork:
          type: boolean
        onTrustedGeo:
          type: boolean
        loginUrl:
          type: string
      type: object
    listApplications_200_response_inner:
      example:
        xsdVersion: xsdVersion
        usageCertText: "{}"
        lastUpdated: 1.4658129805029452
        launcherCount: 2.3021358869347655
        supportedSsoMethods: 5.962133916683182
        appId: appId
        stepUpAuthType: stepUpAuthType
        id: id
        provisionRequestEnabled: true
        launchpadEnabled: true
        selectedSsoMethod: selectedSsoMethod
        offNetworkBlockedRoles: "{}"
        accountServicePolicies:
        - policyId: policyId
          policyName: policyName
          selectors: "{}"
        - policyId: policyId
          policyName: policyName
          selectors: "{}"
        serviceAppId: serviceAppId
        stepUpAuthData: "{}"
        usageCertRequired: true
        privateApp: true
        ssoMethod: ssoMethod
        hasAutomations: true
        name: name
        scriptName: scriptName
        accountServiceMatchAllAccounts: true
        status: status
        accountServicePolicyId: accountServicePolicyId
        supportedOffNetwork: supportedOffNetwork
        icon: icon
        description: description
        passwordServiceId: 9.301444243932576
        passwordManaged: true
        accountServiceId: 5.637376656633329
        appCenterEnabled: true
        accountServiceName: accountServiceName
        defaultAccessProfile: "{}"
        dateCreated: 6.027456183070403
        enableSso: true
        requireStrongAuthn: true
        serviceId: serviceId
        accountServicePolicyName: accountServicePolicyName
        owner:
          name: name
          id: id
        accessProfileIds:
        - accessProfileIds
        - accessProfileIds
        mobile: true
        health:
          healthy: true
          lastChanged: lastChanged
          status: status
          since: 0.8008281904610115
        externalId: externalId
        usageAnalytics: true
        hasLinks: true
        controlType: controlType
        service: service
        accountServiceUseForPasswordManagement: true
        accountServiceExternalId: accountServiceExternalId
        appProfiles:
        - xsdVersion: xsdVersion
          filename: filename
          dateCreated: dateCreated
          createdBy: createdBy
          id: 7.061401241503109
        - xsdVersion: xsdVersion
          filename: filename
          dateCreated: dateCreated
          createdBy: createdBy
          id: 7.061401241503109
      properties:
        id:
          type: string
        appId:
          type: string
        serviceId:
          type: string
        serviceAppId:
          type: string
        name:
          type: string
        description:
          type: string
        appCenterEnabled:
          type: boolean
        provisionRequestEnabled:
          type: boolean
        controlType:
          type: string
        mobile:
          type: boolean
        privateApp:
          type: boolean
        scriptName:
          type: string
        status:
          type: string
        icon:
          type: string
        health:
          $ref: '#/components/schemas/listApplications_200_response_inner_health'
        enableSso:
          type: boolean
        ssoMethod:
          type: string
        hasLinks:
          type: boolean
        hasAutomations:
          type: boolean
        stepUpAuthData:
          type: object
        stepUpAuthType:
          type: string
        usageAnalytics:
          type: boolean
        usageCertRequired:
          type: boolean
        usageCertText:
          type: object
        launchpadEnabled:
          type: boolean
        passwordManaged:
          type: boolean
        owner:
          $ref: '#/components/schemas/listApplications_200_response_inner_owner'
        dateCreated:
          type: number
        lastUpdated:
          type: number
        defaultAccessProfile:
          type: object
        service:
          type: string
        selectedSsoMethod:
          type: string
        supportedSsoMethods:
          type: number
        offNetworkBlockedRoles:
          type: object
        supportedOffNetwork:
          type: string
        accountServiceId:
          type: number
        launcherCount:
          type: number
        accountServiceName:
          type: string
        accountServiceExternalId:
          type: string
        accountServiceMatchAllAccounts:
          type: boolean
        externalId:
          type: string
        accountServiceUseForPasswordManagement:
          type: boolean
        accountServicePolicyId:
          type: string
        accountServicePolicyName:
          type: string
        requireStrongAuthn:
          type: boolean
        accountServicePolicies:
          items:
            $ref: '#/components/schemas/listApplications_200_response_inner_accountServicePolicies_inner'
          type: array
        xsdVersion:
          type: string
        appProfiles:
          items:
            $ref: '#/components/schemas/listApplications_200_response_inner_appProfiles_inner'
          type: array
        passwordServiceId:
          type: number
        accessProfileIds:
          items:
            type: string
          type: array
      type: object
    listApplications_200_response_inner_owner:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    importConnectorConfig_request:
      properties:
        file:
          description: This is the connector config zip bundle which gets uploaded.
          format: binary
          type: string
      type: object
    listConnectors_200_response:
      example:
        total: 0.8008281904610115
        items:
        - applicationXml: applicationXml
          uploadedFiles: []
          translationProperties: "{}"
          directConnect: true
          className: className
          fileUpload: true
          type: ACF2 - Full
          sourceConfigFrom: sourceConfigFrom
          sourceConfig: sourceConfig
          scope: global
          correlationConfigXml: correlationConfigXml
          name: ACF2
          sourceConfigXml: sourceConfigXml
          scriptName: acf2-angularsc
          id: 8017
          s3Location: s3Location
          connectorMetadata: "{}"
          status: RELEASED
        - applicationXml: applicationXml
          uploadedFiles: []
          translationProperties: "{}"
          directConnect: true
          className: className
          fileUpload: true
          type: ACF2 - Full
          sourceConfigFrom: sourceConfigFrom
          sourceConfig: sourceConfig
          scope: global
          correlationConfigXml: correlationConfigXml
          name: ACF2
          sourceConfigXml: sourceConfigXml
          scriptName: acf2-angularsc
          id: 8017
          s3Location: s3Location
          connectorMetadata: "{}"
          status: RELEASED
      properties:
        total:
          type: number
        items:
          items:
            $ref: '#/components/schemas/listConnectors_200_response_items_inner'
          type: array
      type: object
    GetIdentity_200_response_auth:
      example:
        encryption: encryption
        service: service
      properties:
        service:
          type: string
        encryption:
          type: string
      type: object
    CreateApplication_request:
      properties:
        name:
          example: My App
          type: string
        description:
          format: This is my application
          type: string
      type: object
    refreshIdentities_request:
      example: "\"{\\n   \\\"filter\\\" : \\\"uid == \\\\\\\"1219028\\\\\\\"\\\",\\\
        n   \\\"refreshArgs\\\" : {\\n     \\\"correlateEntitlements\\\" : \\\"true\\\
        \",\\n     \\\"promoteAttributes\\\" : \\\"true\\\",\\n     \\\"refreshManagerStatus\\\
        \" : \\\"false\\\",\\n     \\\"synchronizeAttributes\\\" : \\\"false\\\",\\\
        n     \\\"pruneIdentities\\\" : \\\"false\\\",\\n     \\\"provision\\\" :\
        \ \\\"true\\\"\\n   }\\n}\""
      properties:
        filter:
          description: |
            Defines the identity or identities which this refresh applies to.
            The filter must use searchable identity attributes.
            If the filter cannot be understood or parsed, all identities will be refreshed.
          type: string
        refreshArgs:
          $ref: '#/components/schemas/refreshIdentities_request_refreshArgs'
      type: object
    listAccounts_200_response_inner:
      example:
        passwordProvided: true
        idEncryption: NONE
        displayName: tyler.mairose
        passwordChangeStatus: SUCCESS
        pendingPasswordRequestId: pendingPasswordRequestId
        type: SYSTEM_CONTROLLED
        serviceName: airtable v4
        accountServiceId: 44663
        lastPasswdChange: lastPasswdChange
        passwordRequired: true
        ssoMethod: NONE
        passwordChangeResult:
          completionStatus: SUCCESS
        passwordEncryption: NONE
        id: "17248154"
        serviceId: 44663
        dateDisabled: dateDisabled
        username: tyler.mairose
        apps:
        - "{}"
        - "{}"
      properties:
        id:
          example: "17248154"
          type: string
        type:
          example: SYSTEM_CONTROLLED
          type: string
        displayName:
          example: tyler.mairose
          type: string
        username:
          example: tyler.mairose
          type: string
        passwordRequired:
          type: boolean
        passwordProvided:
          type: boolean
        apps:
          items:
            type: object
          type: array
        ssoMethod:
          example: NONE
          type: string
        idEncryption:
          example: NONE
          type: string
        passwordEncryption:
          example: NONE
          type: string
        lastPasswdChange:
          nullable: true
          type: string
        serviceName:
          example: airtable v4
          type: string
        dateDisabled:
          nullable: true
          type: string
        accountServiceId:
          example: 44663
          format: int32
          type: integer
        serviceId:
          example: 44663
          format: int32
          type: integer
        pendingPasswordRequestId:
          nullable: true
          type: string
        passwordChangeStatus:
          example: SUCCESS
          type: string
        passwordChangeResult:
          $ref: '#/components/schemas/listAccounts_200_response_inner_passwordChangeResult'
      type: object
    listApplications_200_response_inner_appProfiles_inner:
      example:
        xsdVersion: xsdVersion
        filename: filename
        dateCreated: dateCreated
        createdBy: createdBy
        id: 7.061401241503109
      properties:
        id:
          type: number
        filename:
          type: string
        createdBy:
          type: string
        dateCreated:
          type: string
        xsdVersion:
          type: string
      type: object
    refreshIdentities_request_refreshArgs:
      properties:
        correlateEntitlements:
          description: "This will refresh entitlement, role, and access profile calculations."
          example: true
          type: boolean
        promoteAttributes:
          description: This will calculate identity attributes.
          example: true
          type: boolean
        refreshManagerStatus:
          description: |
            This recalculates manager correlation and manager status. Note: This is computationally expensive to run.
          example: false
          type: boolean
        synchronizeAttributes:
          description: Enables attribute synchronization.
          example: false
          type: boolean
        pruneIdentities:
          description: |
            Option that will enable deletion of an identity objects if there are no account objects. Note: This is not typically used in IdentityNow, except by guidance from SailPoint.
          example: false
          type: boolean
        provision:
          description: Enables provisioning of role assignments with entitlements
            that are not currently fulfilled.
          example: false
          type: boolean
      type: object
    loadEntitlements_request:
      properties:
        file:
          format: binary
          type: string
      type: object
  securitySchemes:
    UserContextAuth:
      description: |
        OAuth2 Bearer token (JWT). See [IdentityNow REST API Authentication](https://developer.sailpoint.com/idn/api/authentication) for more information.
        - Directions for generating a [personal access token](https://developer.sailpoint.com/idn/api/authentication#personal-access-tokens)
        - Directions using [client credentials flow](https://developer.sailpoint.com/idn/api/authentication#client-credentials-grant-flow)
        - Directions for using [authorization code flow](https://developer.sailpoint.com/idn/api/authentication#authorization-code-grant-flow)

        Which authentication method should I choose?  See our [guide](https://developer.sailpoint.com/idn/api/authentication#which-oauth-20-grant-flow-should-i-use)

        Learn more about how to find your `tokenUrl` and `authorizationUrl` [in our docs](https://developer.sailpoint.com/idn/api/authentication#find-your-tenants-oauth-details)
      flows:
        authorizationCode:
          authorizationUrl: https://tenant.login.sailpoint.com/oauth/authorize
          scopes:
            sp:scopes:default: default scope
            sp:scopes:all: access to all scopes
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
        clientCredentials:
          scopes:
            sp:scopes:default: default scope
            sp:scopes:all: access to all scopes
          tokenUrl: https://tenant.api.identitynow.com/oauth/token
      type: oauth2
