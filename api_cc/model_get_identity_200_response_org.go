/*
IdentityNow cc (private) APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_cc

import (
	"encoding/json"
)

// checks if the GetIdentity200ResponseOrg type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIdentity200ResponseOrg{}

// GetIdentity200ResponseOrg struct for GetIdentity200ResponseOrg
type GetIdentity200ResponseOrg struct {
	Name *string `json:"name,omitempty"`
	ScriptName *string `json:"scriptName,omitempty"`
	Mode *string `json:"mode,omitempty"`
	NumQuestions *float32 `json:"numQuestions,omitempty"`
	Status *string `json:"status,omitempty"`
	MaxRegisteredUsers *float32 `json:"maxRegisteredUsers,omitempty"`
	Pod *string `json:"pod,omitempty"`
	PwdResetPersonalPhone *bool `json:"pwdResetPersonalPhone,omitempty"`
	PwdResetPersonalEmail *bool `json:"pwdResetPersonalEmail,omitempty"`
	PwdResetKba *bool `json:"pwdResetKba,omitempty"`
	PwdResetEmail *bool `json:"pwdResetEmail,omitempty"`
	PwdResetDuo *bool `json:"pwdResetDuo,omitempty"`
	PwdResetPhoneMask *bool `json:"pwdResetPhoneMask,omitempty"`
	AuthErrorText map[string]interface{} `json:"authErrorText,omitempty"`
	StrongAuthKba *bool `json:"strongAuthKba,omitempty"`
	StrongAuthPersonalPhone *bool `json:"strongAuthPersonalPhone,omitempty"`
	StrongAuthPersonalEmail *bool `json:"strongAuthPersonalEmail,omitempty"`
	Integrations []map[string]interface{} `json:"integrations,omitempty"`
	ProductName *string `json:"productName,omitempty"`
	KbaReqForAuthn *float32 `json:"kbaReqForAuthn,omitempty"`
	KbaReqAnswers *float32 `json:"kbaReqAnswers,omitempty"`
	LockoutAttemptThreshold *float32 `json:"lockoutAttemptThreshold,omitempty"`
	LockoutTimeMinutes *float32 `json:"lockoutTimeMinutes,omitempty"`
	UsageCertRequired *bool `json:"usageCertRequired,omitempty"`
	AdminStrongAuthRequired *bool `json:"adminStrongAuthRequired,omitempty"`
	EnableExternalPasswordChange *bool `json:"enableExternalPasswordChange,omitempty"`
	EnablePasswordReplay *bool `json:"enablePasswordReplay,omitempty"`
	EnableAutomaticPasswordReplay *bool `json:"enableAutomaticPasswordReplay,omitempty"`
	NotifyAuthenticationSettingChange *bool `json:"notifyAuthenticationSettingChange,omitempty"`
	Netmasks map[string]interface{} `json:"netmasks,omitempty"`
	CountryCodes map[string]interface{} `json:"countryCodes,omitempty"`
	WhiteList *bool `json:"whiteList,omitempty"`
	UsernameEmptyText map[string]interface{} `json:"usernameEmptyText,omitempty"`
	UsernameLabel map[string]interface{} `json:"usernameLabel,omitempty"`
	EnableAutomationGeneration *bool `json:"enableAutomationGeneration,omitempty"`
	EmailTestMode *bool `json:"emailTestMode,omitempty"`
	EmailTestAddress *string `json:"emailTestAddress,omitempty"`
	OrgType *string `json:"orgType,omitempty"`
	PasswordReplayState *string `json:"passwordReplayState,omitempty"`
	SystemNotificationConfig *string `json:"systemNotificationConfig,omitempty"`
	RedirectPatterns *string `json:"redirectPatterns,omitempty"`
	MaxClusterDebugHours *string `json:"maxClusterDebugHours,omitempty"`
	BrandName *string `json:"brandName,omitempty"`
	Logo map[string]interface{} `json:"logo,omitempty"`
	EmailFromAddress map[string]interface{} `json:"emailFromAddress,omitempty"`
	StandardLogoUrl map[string]interface{} `json:"standardLogoUrl,omitempty"`
	NarrowLogoUrl map[string]interface{} `json:"narrowLogoUrl,omitempty"`
	ActionButtonColor *string `json:"actionButtonColor,omitempty"`
	ActiveLinkColor *string `json:"activeLinkColor,omitempty"`
	NavigationColor *string `json:"navigationColor,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetIdentity200ResponseOrg GetIdentity200ResponseOrg

// NewGetIdentity200ResponseOrg instantiates a new GetIdentity200ResponseOrg object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIdentity200ResponseOrg() *GetIdentity200ResponseOrg {
	this := GetIdentity200ResponseOrg{}
	return &this
}

// NewGetIdentity200ResponseOrgWithDefaults instantiates a new GetIdentity200ResponseOrg object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIdentity200ResponseOrgWithDefaults() *GetIdentity200ResponseOrg {
	this := GetIdentity200ResponseOrg{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetIdentity200ResponseOrg) SetName(v string) {
	o.Name = &v
}

// GetScriptName returns the ScriptName field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetScriptName() string {
	if o == nil || isNil(o.ScriptName) {
		var ret string
		return ret
	}
	return *o.ScriptName
}

// GetScriptNameOk returns a tuple with the ScriptName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetScriptNameOk() (*string, bool) {
	if o == nil || isNil(o.ScriptName) {
		return nil, false
	}
	return o.ScriptName, true
}

// HasScriptName returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasScriptName() bool {
	if o != nil && !isNil(o.ScriptName) {
		return true
	}

	return false
}

// SetScriptName gets a reference to the given string and assigns it to the ScriptName field.
func (o *GetIdentity200ResponseOrg) SetScriptName(v string) {
	o.ScriptName = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetMode() string {
	if o == nil || isNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetModeOk() (*string, bool) {
	if o == nil || isNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasMode() bool {
	if o != nil && !isNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *GetIdentity200ResponseOrg) SetMode(v string) {
	o.Mode = &v
}

// GetNumQuestions returns the NumQuestions field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetNumQuestions() float32 {
	if o == nil || isNil(o.NumQuestions) {
		var ret float32
		return ret
	}
	return *o.NumQuestions
}

// GetNumQuestionsOk returns a tuple with the NumQuestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetNumQuestionsOk() (*float32, bool) {
	if o == nil || isNil(o.NumQuestions) {
		return nil, false
	}
	return o.NumQuestions, true
}

// HasNumQuestions returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasNumQuestions() bool {
	if o != nil && !isNil(o.NumQuestions) {
		return true
	}

	return false
}

// SetNumQuestions gets a reference to the given float32 and assigns it to the NumQuestions field.
func (o *GetIdentity200ResponseOrg) SetNumQuestions(v float32) {
	o.NumQuestions = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetIdentity200ResponseOrg) SetStatus(v string) {
	o.Status = &v
}

// GetMaxRegisteredUsers returns the MaxRegisteredUsers field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetMaxRegisteredUsers() float32 {
	if o == nil || isNil(o.MaxRegisteredUsers) {
		var ret float32
		return ret
	}
	return *o.MaxRegisteredUsers
}

// GetMaxRegisteredUsersOk returns a tuple with the MaxRegisteredUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetMaxRegisteredUsersOk() (*float32, bool) {
	if o == nil || isNil(o.MaxRegisteredUsers) {
		return nil, false
	}
	return o.MaxRegisteredUsers, true
}

// HasMaxRegisteredUsers returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasMaxRegisteredUsers() bool {
	if o != nil && !isNil(o.MaxRegisteredUsers) {
		return true
	}

	return false
}

// SetMaxRegisteredUsers gets a reference to the given float32 and assigns it to the MaxRegisteredUsers field.
func (o *GetIdentity200ResponseOrg) SetMaxRegisteredUsers(v float32) {
	o.MaxRegisteredUsers = &v
}

// GetPod returns the Pod field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetPod() string {
	if o == nil || isNil(o.Pod) {
		var ret string
		return ret
	}
	return *o.Pod
}

// GetPodOk returns a tuple with the Pod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetPodOk() (*string, bool) {
	if o == nil || isNil(o.Pod) {
		return nil, false
	}
	return o.Pod, true
}

// HasPod returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasPod() bool {
	if o != nil && !isNil(o.Pod) {
		return true
	}

	return false
}

// SetPod gets a reference to the given string and assigns it to the Pod field.
func (o *GetIdentity200ResponseOrg) SetPod(v string) {
	o.Pod = &v
}

// GetPwdResetPersonalPhone returns the PwdResetPersonalPhone field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetPwdResetPersonalPhone() bool {
	if o == nil || isNil(o.PwdResetPersonalPhone) {
		var ret bool
		return ret
	}
	return *o.PwdResetPersonalPhone
}

// GetPwdResetPersonalPhoneOk returns a tuple with the PwdResetPersonalPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetPwdResetPersonalPhoneOk() (*bool, bool) {
	if o == nil || isNil(o.PwdResetPersonalPhone) {
		return nil, false
	}
	return o.PwdResetPersonalPhone, true
}

// HasPwdResetPersonalPhone returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasPwdResetPersonalPhone() bool {
	if o != nil && !isNil(o.PwdResetPersonalPhone) {
		return true
	}

	return false
}

// SetPwdResetPersonalPhone gets a reference to the given bool and assigns it to the PwdResetPersonalPhone field.
func (o *GetIdentity200ResponseOrg) SetPwdResetPersonalPhone(v bool) {
	o.PwdResetPersonalPhone = &v
}

// GetPwdResetPersonalEmail returns the PwdResetPersonalEmail field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetPwdResetPersonalEmail() bool {
	if o == nil || isNil(o.PwdResetPersonalEmail) {
		var ret bool
		return ret
	}
	return *o.PwdResetPersonalEmail
}

// GetPwdResetPersonalEmailOk returns a tuple with the PwdResetPersonalEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetPwdResetPersonalEmailOk() (*bool, bool) {
	if o == nil || isNil(o.PwdResetPersonalEmail) {
		return nil, false
	}
	return o.PwdResetPersonalEmail, true
}

// HasPwdResetPersonalEmail returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasPwdResetPersonalEmail() bool {
	if o != nil && !isNil(o.PwdResetPersonalEmail) {
		return true
	}

	return false
}

// SetPwdResetPersonalEmail gets a reference to the given bool and assigns it to the PwdResetPersonalEmail field.
func (o *GetIdentity200ResponseOrg) SetPwdResetPersonalEmail(v bool) {
	o.PwdResetPersonalEmail = &v
}

// GetPwdResetKba returns the PwdResetKba field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetPwdResetKba() bool {
	if o == nil || isNil(o.PwdResetKba) {
		var ret bool
		return ret
	}
	return *o.PwdResetKba
}

// GetPwdResetKbaOk returns a tuple with the PwdResetKba field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetPwdResetKbaOk() (*bool, bool) {
	if o == nil || isNil(o.PwdResetKba) {
		return nil, false
	}
	return o.PwdResetKba, true
}

// HasPwdResetKba returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasPwdResetKba() bool {
	if o != nil && !isNil(o.PwdResetKba) {
		return true
	}

	return false
}

// SetPwdResetKba gets a reference to the given bool and assigns it to the PwdResetKba field.
func (o *GetIdentity200ResponseOrg) SetPwdResetKba(v bool) {
	o.PwdResetKba = &v
}

// GetPwdResetEmail returns the PwdResetEmail field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetPwdResetEmail() bool {
	if o == nil || isNil(o.PwdResetEmail) {
		var ret bool
		return ret
	}
	return *o.PwdResetEmail
}

// GetPwdResetEmailOk returns a tuple with the PwdResetEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetPwdResetEmailOk() (*bool, bool) {
	if o == nil || isNil(o.PwdResetEmail) {
		return nil, false
	}
	return o.PwdResetEmail, true
}

// HasPwdResetEmail returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasPwdResetEmail() bool {
	if o != nil && !isNil(o.PwdResetEmail) {
		return true
	}

	return false
}

// SetPwdResetEmail gets a reference to the given bool and assigns it to the PwdResetEmail field.
func (o *GetIdentity200ResponseOrg) SetPwdResetEmail(v bool) {
	o.PwdResetEmail = &v
}

// GetPwdResetDuo returns the PwdResetDuo field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetPwdResetDuo() bool {
	if o == nil || isNil(o.PwdResetDuo) {
		var ret bool
		return ret
	}
	return *o.PwdResetDuo
}

// GetPwdResetDuoOk returns a tuple with the PwdResetDuo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetPwdResetDuoOk() (*bool, bool) {
	if o == nil || isNil(o.PwdResetDuo) {
		return nil, false
	}
	return o.PwdResetDuo, true
}

// HasPwdResetDuo returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasPwdResetDuo() bool {
	if o != nil && !isNil(o.PwdResetDuo) {
		return true
	}

	return false
}

// SetPwdResetDuo gets a reference to the given bool and assigns it to the PwdResetDuo field.
func (o *GetIdentity200ResponseOrg) SetPwdResetDuo(v bool) {
	o.PwdResetDuo = &v
}

// GetPwdResetPhoneMask returns the PwdResetPhoneMask field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetPwdResetPhoneMask() bool {
	if o == nil || isNil(o.PwdResetPhoneMask) {
		var ret bool
		return ret
	}
	return *o.PwdResetPhoneMask
}

// GetPwdResetPhoneMaskOk returns a tuple with the PwdResetPhoneMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetPwdResetPhoneMaskOk() (*bool, bool) {
	if o == nil || isNil(o.PwdResetPhoneMask) {
		return nil, false
	}
	return o.PwdResetPhoneMask, true
}

// HasPwdResetPhoneMask returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasPwdResetPhoneMask() bool {
	if o != nil && !isNil(o.PwdResetPhoneMask) {
		return true
	}

	return false
}

// SetPwdResetPhoneMask gets a reference to the given bool and assigns it to the PwdResetPhoneMask field.
func (o *GetIdentity200ResponseOrg) SetPwdResetPhoneMask(v bool) {
	o.PwdResetPhoneMask = &v
}

// GetAuthErrorText returns the AuthErrorText field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetAuthErrorText() map[string]interface{} {
	if o == nil || isNil(o.AuthErrorText) {
		var ret map[string]interface{}
		return ret
	}
	return o.AuthErrorText
}

// GetAuthErrorTextOk returns a tuple with the AuthErrorText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetAuthErrorTextOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.AuthErrorText) {
		return map[string]interface{}{}, false
	}
	return o.AuthErrorText, true
}

// HasAuthErrorText returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasAuthErrorText() bool {
	if o != nil && !isNil(o.AuthErrorText) {
		return true
	}

	return false
}

// SetAuthErrorText gets a reference to the given map[string]interface{} and assigns it to the AuthErrorText field.
func (o *GetIdentity200ResponseOrg) SetAuthErrorText(v map[string]interface{}) {
	o.AuthErrorText = v
}

// GetStrongAuthKba returns the StrongAuthKba field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetStrongAuthKba() bool {
	if o == nil || isNil(o.StrongAuthKba) {
		var ret bool
		return ret
	}
	return *o.StrongAuthKba
}

// GetStrongAuthKbaOk returns a tuple with the StrongAuthKba field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetStrongAuthKbaOk() (*bool, bool) {
	if o == nil || isNil(o.StrongAuthKba) {
		return nil, false
	}
	return o.StrongAuthKba, true
}

// HasStrongAuthKba returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasStrongAuthKba() bool {
	if o != nil && !isNil(o.StrongAuthKba) {
		return true
	}

	return false
}

// SetStrongAuthKba gets a reference to the given bool and assigns it to the StrongAuthKba field.
func (o *GetIdentity200ResponseOrg) SetStrongAuthKba(v bool) {
	o.StrongAuthKba = &v
}

// GetStrongAuthPersonalPhone returns the StrongAuthPersonalPhone field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetStrongAuthPersonalPhone() bool {
	if o == nil || isNil(o.StrongAuthPersonalPhone) {
		var ret bool
		return ret
	}
	return *o.StrongAuthPersonalPhone
}

// GetStrongAuthPersonalPhoneOk returns a tuple with the StrongAuthPersonalPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetStrongAuthPersonalPhoneOk() (*bool, bool) {
	if o == nil || isNil(o.StrongAuthPersonalPhone) {
		return nil, false
	}
	return o.StrongAuthPersonalPhone, true
}

// HasStrongAuthPersonalPhone returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasStrongAuthPersonalPhone() bool {
	if o != nil && !isNil(o.StrongAuthPersonalPhone) {
		return true
	}

	return false
}

// SetStrongAuthPersonalPhone gets a reference to the given bool and assigns it to the StrongAuthPersonalPhone field.
func (o *GetIdentity200ResponseOrg) SetStrongAuthPersonalPhone(v bool) {
	o.StrongAuthPersonalPhone = &v
}

// GetStrongAuthPersonalEmail returns the StrongAuthPersonalEmail field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetStrongAuthPersonalEmail() bool {
	if o == nil || isNil(o.StrongAuthPersonalEmail) {
		var ret bool
		return ret
	}
	return *o.StrongAuthPersonalEmail
}

// GetStrongAuthPersonalEmailOk returns a tuple with the StrongAuthPersonalEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetStrongAuthPersonalEmailOk() (*bool, bool) {
	if o == nil || isNil(o.StrongAuthPersonalEmail) {
		return nil, false
	}
	return o.StrongAuthPersonalEmail, true
}

// HasStrongAuthPersonalEmail returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasStrongAuthPersonalEmail() bool {
	if o != nil && !isNil(o.StrongAuthPersonalEmail) {
		return true
	}

	return false
}

// SetStrongAuthPersonalEmail gets a reference to the given bool and assigns it to the StrongAuthPersonalEmail field.
func (o *GetIdentity200ResponseOrg) SetStrongAuthPersonalEmail(v bool) {
	o.StrongAuthPersonalEmail = &v
}

// GetIntegrations returns the Integrations field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetIntegrations() []map[string]interface{} {
	if o == nil || isNil(o.Integrations) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Integrations
}

// GetIntegrationsOk returns a tuple with the Integrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetIntegrationsOk() ([]map[string]interface{}, bool) {
	if o == nil || isNil(o.Integrations) {
		return nil, false
	}
	return o.Integrations, true
}

// HasIntegrations returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasIntegrations() bool {
	if o != nil && !isNil(o.Integrations) {
		return true
	}

	return false
}

// SetIntegrations gets a reference to the given []map[string]interface{} and assigns it to the Integrations field.
func (o *GetIdentity200ResponseOrg) SetIntegrations(v []map[string]interface{}) {
	o.Integrations = v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetProductName() string {
	if o == nil || isNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetProductNameOk() (*string, bool) {
	if o == nil || isNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasProductName() bool {
	if o != nil && !isNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *GetIdentity200ResponseOrg) SetProductName(v string) {
	o.ProductName = &v
}

// GetKbaReqForAuthn returns the KbaReqForAuthn field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetKbaReqForAuthn() float32 {
	if o == nil || isNil(o.KbaReqForAuthn) {
		var ret float32
		return ret
	}
	return *o.KbaReqForAuthn
}

// GetKbaReqForAuthnOk returns a tuple with the KbaReqForAuthn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetKbaReqForAuthnOk() (*float32, bool) {
	if o == nil || isNil(o.KbaReqForAuthn) {
		return nil, false
	}
	return o.KbaReqForAuthn, true
}

// HasKbaReqForAuthn returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasKbaReqForAuthn() bool {
	if o != nil && !isNil(o.KbaReqForAuthn) {
		return true
	}

	return false
}

// SetKbaReqForAuthn gets a reference to the given float32 and assigns it to the KbaReqForAuthn field.
func (o *GetIdentity200ResponseOrg) SetKbaReqForAuthn(v float32) {
	o.KbaReqForAuthn = &v
}

// GetKbaReqAnswers returns the KbaReqAnswers field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetKbaReqAnswers() float32 {
	if o == nil || isNil(o.KbaReqAnswers) {
		var ret float32
		return ret
	}
	return *o.KbaReqAnswers
}

// GetKbaReqAnswersOk returns a tuple with the KbaReqAnswers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetKbaReqAnswersOk() (*float32, bool) {
	if o == nil || isNil(o.KbaReqAnswers) {
		return nil, false
	}
	return o.KbaReqAnswers, true
}

// HasKbaReqAnswers returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasKbaReqAnswers() bool {
	if o != nil && !isNil(o.KbaReqAnswers) {
		return true
	}

	return false
}

// SetKbaReqAnswers gets a reference to the given float32 and assigns it to the KbaReqAnswers field.
func (o *GetIdentity200ResponseOrg) SetKbaReqAnswers(v float32) {
	o.KbaReqAnswers = &v
}

// GetLockoutAttemptThreshold returns the LockoutAttemptThreshold field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetLockoutAttemptThreshold() float32 {
	if o == nil || isNil(o.LockoutAttemptThreshold) {
		var ret float32
		return ret
	}
	return *o.LockoutAttemptThreshold
}

// GetLockoutAttemptThresholdOk returns a tuple with the LockoutAttemptThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetLockoutAttemptThresholdOk() (*float32, bool) {
	if o == nil || isNil(o.LockoutAttemptThreshold) {
		return nil, false
	}
	return o.LockoutAttemptThreshold, true
}

// HasLockoutAttemptThreshold returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasLockoutAttemptThreshold() bool {
	if o != nil && !isNil(o.LockoutAttemptThreshold) {
		return true
	}

	return false
}

// SetLockoutAttemptThreshold gets a reference to the given float32 and assigns it to the LockoutAttemptThreshold field.
func (o *GetIdentity200ResponseOrg) SetLockoutAttemptThreshold(v float32) {
	o.LockoutAttemptThreshold = &v
}

// GetLockoutTimeMinutes returns the LockoutTimeMinutes field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetLockoutTimeMinutes() float32 {
	if o == nil || isNil(o.LockoutTimeMinutes) {
		var ret float32
		return ret
	}
	return *o.LockoutTimeMinutes
}

// GetLockoutTimeMinutesOk returns a tuple with the LockoutTimeMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetLockoutTimeMinutesOk() (*float32, bool) {
	if o == nil || isNil(o.LockoutTimeMinutes) {
		return nil, false
	}
	return o.LockoutTimeMinutes, true
}

// HasLockoutTimeMinutes returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasLockoutTimeMinutes() bool {
	if o != nil && !isNil(o.LockoutTimeMinutes) {
		return true
	}

	return false
}

// SetLockoutTimeMinutes gets a reference to the given float32 and assigns it to the LockoutTimeMinutes field.
func (o *GetIdentity200ResponseOrg) SetLockoutTimeMinutes(v float32) {
	o.LockoutTimeMinutes = &v
}

// GetUsageCertRequired returns the UsageCertRequired field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetUsageCertRequired() bool {
	if o == nil || isNil(o.UsageCertRequired) {
		var ret bool
		return ret
	}
	return *o.UsageCertRequired
}

// GetUsageCertRequiredOk returns a tuple with the UsageCertRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetUsageCertRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.UsageCertRequired) {
		return nil, false
	}
	return o.UsageCertRequired, true
}

// HasUsageCertRequired returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasUsageCertRequired() bool {
	if o != nil && !isNil(o.UsageCertRequired) {
		return true
	}

	return false
}

// SetUsageCertRequired gets a reference to the given bool and assigns it to the UsageCertRequired field.
func (o *GetIdentity200ResponseOrg) SetUsageCertRequired(v bool) {
	o.UsageCertRequired = &v
}

// GetAdminStrongAuthRequired returns the AdminStrongAuthRequired field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetAdminStrongAuthRequired() bool {
	if o == nil || isNil(o.AdminStrongAuthRequired) {
		var ret bool
		return ret
	}
	return *o.AdminStrongAuthRequired
}

// GetAdminStrongAuthRequiredOk returns a tuple with the AdminStrongAuthRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetAdminStrongAuthRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.AdminStrongAuthRequired) {
		return nil, false
	}
	return o.AdminStrongAuthRequired, true
}

// HasAdminStrongAuthRequired returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasAdminStrongAuthRequired() bool {
	if o != nil && !isNil(o.AdminStrongAuthRequired) {
		return true
	}

	return false
}

// SetAdminStrongAuthRequired gets a reference to the given bool and assigns it to the AdminStrongAuthRequired field.
func (o *GetIdentity200ResponseOrg) SetAdminStrongAuthRequired(v bool) {
	o.AdminStrongAuthRequired = &v
}

// GetEnableExternalPasswordChange returns the EnableExternalPasswordChange field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetEnableExternalPasswordChange() bool {
	if o == nil || isNil(o.EnableExternalPasswordChange) {
		var ret bool
		return ret
	}
	return *o.EnableExternalPasswordChange
}

// GetEnableExternalPasswordChangeOk returns a tuple with the EnableExternalPasswordChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetEnableExternalPasswordChangeOk() (*bool, bool) {
	if o == nil || isNil(o.EnableExternalPasswordChange) {
		return nil, false
	}
	return o.EnableExternalPasswordChange, true
}

// HasEnableExternalPasswordChange returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasEnableExternalPasswordChange() bool {
	if o != nil && !isNil(o.EnableExternalPasswordChange) {
		return true
	}

	return false
}

// SetEnableExternalPasswordChange gets a reference to the given bool and assigns it to the EnableExternalPasswordChange field.
func (o *GetIdentity200ResponseOrg) SetEnableExternalPasswordChange(v bool) {
	o.EnableExternalPasswordChange = &v
}

// GetEnablePasswordReplay returns the EnablePasswordReplay field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetEnablePasswordReplay() bool {
	if o == nil || isNil(o.EnablePasswordReplay) {
		var ret bool
		return ret
	}
	return *o.EnablePasswordReplay
}

// GetEnablePasswordReplayOk returns a tuple with the EnablePasswordReplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetEnablePasswordReplayOk() (*bool, bool) {
	if o == nil || isNil(o.EnablePasswordReplay) {
		return nil, false
	}
	return o.EnablePasswordReplay, true
}

// HasEnablePasswordReplay returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasEnablePasswordReplay() bool {
	if o != nil && !isNil(o.EnablePasswordReplay) {
		return true
	}

	return false
}

// SetEnablePasswordReplay gets a reference to the given bool and assigns it to the EnablePasswordReplay field.
func (o *GetIdentity200ResponseOrg) SetEnablePasswordReplay(v bool) {
	o.EnablePasswordReplay = &v
}

// GetEnableAutomaticPasswordReplay returns the EnableAutomaticPasswordReplay field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetEnableAutomaticPasswordReplay() bool {
	if o == nil || isNil(o.EnableAutomaticPasswordReplay) {
		var ret bool
		return ret
	}
	return *o.EnableAutomaticPasswordReplay
}

// GetEnableAutomaticPasswordReplayOk returns a tuple with the EnableAutomaticPasswordReplay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetEnableAutomaticPasswordReplayOk() (*bool, bool) {
	if o == nil || isNil(o.EnableAutomaticPasswordReplay) {
		return nil, false
	}
	return o.EnableAutomaticPasswordReplay, true
}

// HasEnableAutomaticPasswordReplay returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasEnableAutomaticPasswordReplay() bool {
	if o != nil && !isNil(o.EnableAutomaticPasswordReplay) {
		return true
	}

	return false
}

// SetEnableAutomaticPasswordReplay gets a reference to the given bool and assigns it to the EnableAutomaticPasswordReplay field.
func (o *GetIdentity200ResponseOrg) SetEnableAutomaticPasswordReplay(v bool) {
	o.EnableAutomaticPasswordReplay = &v
}

// GetNotifyAuthenticationSettingChange returns the NotifyAuthenticationSettingChange field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetNotifyAuthenticationSettingChange() bool {
	if o == nil || isNil(o.NotifyAuthenticationSettingChange) {
		var ret bool
		return ret
	}
	return *o.NotifyAuthenticationSettingChange
}

// GetNotifyAuthenticationSettingChangeOk returns a tuple with the NotifyAuthenticationSettingChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetNotifyAuthenticationSettingChangeOk() (*bool, bool) {
	if o == nil || isNil(o.NotifyAuthenticationSettingChange) {
		return nil, false
	}
	return o.NotifyAuthenticationSettingChange, true
}

// HasNotifyAuthenticationSettingChange returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasNotifyAuthenticationSettingChange() bool {
	if o != nil && !isNil(o.NotifyAuthenticationSettingChange) {
		return true
	}

	return false
}

// SetNotifyAuthenticationSettingChange gets a reference to the given bool and assigns it to the NotifyAuthenticationSettingChange field.
func (o *GetIdentity200ResponseOrg) SetNotifyAuthenticationSettingChange(v bool) {
	o.NotifyAuthenticationSettingChange = &v
}

// GetNetmasks returns the Netmasks field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetNetmasks() map[string]interface{} {
	if o == nil || isNil(o.Netmasks) {
		var ret map[string]interface{}
		return ret
	}
	return o.Netmasks
}

// GetNetmasksOk returns a tuple with the Netmasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetNetmasksOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Netmasks) {
		return map[string]interface{}{}, false
	}
	return o.Netmasks, true
}

// HasNetmasks returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasNetmasks() bool {
	if o != nil && !isNil(o.Netmasks) {
		return true
	}

	return false
}

// SetNetmasks gets a reference to the given map[string]interface{} and assigns it to the Netmasks field.
func (o *GetIdentity200ResponseOrg) SetNetmasks(v map[string]interface{}) {
	o.Netmasks = v
}

// GetCountryCodes returns the CountryCodes field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetCountryCodes() map[string]interface{} {
	if o == nil || isNil(o.CountryCodes) {
		var ret map[string]interface{}
		return ret
	}
	return o.CountryCodes
}

// GetCountryCodesOk returns a tuple with the CountryCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetCountryCodesOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.CountryCodes) {
		return map[string]interface{}{}, false
	}
	return o.CountryCodes, true
}

// HasCountryCodes returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasCountryCodes() bool {
	if o != nil && !isNil(o.CountryCodes) {
		return true
	}

	return false
}

// SetCountryCodes gets a reference to the given map[string]interface{} and assigns it to the CountryCodes field.
func (o *GetIdentity200ResponseOrg) SetCountryCodes(v map[string]interface{}) {
	o.CountryCodes = v
}

// GetWhiteList returns the WhiteList field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetWhiteList() bool {
	if o == nil || isNil(o.WhiteList) {
		var ret bool
		return ret
	}
	return *o.WhiteList
}

// GetWhiteListOk returns a tuple with the WhiteList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetWhiteListOk() (*bool, bool) {
	if o == nil || isNil(o.WhiteList) {
		return nil, false
	}
	return o.WhiteList, true
}

// HasWhiteList returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasWhiteList() bool {
	if o != nil && !isNil(o.WhiteList) {
		return true
	}

	return false
}

// SetWhiteList gets a reference to the given bool and assigns it to the WhiteList field.
func (o *GetIdentity200ResponseOrg) SetWhiteList(v bool) {
	o.WhiteList = &v
}

// GetUsernameEmptyText returns the UsernameEmptyText field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetUsernameEmptyText() map[string]interface{} {
	if o == nil || isNil(o.UsernameEmptyText) {
		var ret map[string]interface{}
		return ret
	}
	return o.UsernameEmptyText
}

// GetUsernameEmptyTextOk returns a tuple with the UsernameEmptyText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetUsernameEmptyTextOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.UsernameEmptyText) {
		return map[string]interface{}{}, false
	}
	return o.UsernameEmptyText, true
}

// HasUsernameEmptyText returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasUsernameEmptyText() bool {
	if o != nil && !isNil(o.UsernameEmptyText) {
		return true
	}

	return false
}

// SetUsernameEmptyText gets a reference to the given map[string]interface{} and assigns it to the UsernameEmptyText field.
func (o *GetIdentity200ResponseOrg) SetUsernameEmptyText(v map[string]interface{}) {
	o.UsernameEmptyText = v
}

// GetUsernameLabel returns the UsernameLabel field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetUsernameLabel() map[string]interface{} {
	if o == nil || isNil(o.UsernameLabel) {
		var ret map[string]interface{}
		return ret
	}
	return o.UsernameLabel
}

// GetUsernameLabelOk returns a tuple with the UsernameLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetUsernameLabelOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.UsernameLabel) {
		return map[string]interface{}{}, false
	}
	return o.UsernameLabel, true
}

// HasUsernameLabel returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasUsernameLabel() bool {
	if o != nil && !isNil(o.UsernameLabel) {
		return true
	}

	return false
}

// SetUsernameLabel gets a reference to the given map[string]interface{} and assigns it to the UsernameLabel field.
func (o *GetIdentity200ResponseOrg) SetUsernameLabel(v map[string]interface{}) {
	o.UsernameLabel = v
}

// GetEnableAutomationGeneration returns the EnableAutomationGeneration field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetEnableAutomationGeneration() bool {
	if o == nil || isNil(o.EnableAutomationGeneration) {
		var ret bool
		return ret
	}
	return *o.EnableAutomationGeneration
}

// GetEnableAutomationGenerationOk returns a tuple with the EnableAutomationGeneration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetEnableAutomationGenerationOk() (*bool, bool) {
	if o == nil || isNil(o.EnableAutomationGeneration) {
		return nil, false
	}
	return o.EnableAutomationGeneration, true
}

// HasEnableAutomationGeneration returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasEnableAutomationGeneration() bool {
	if o != nil && !isNil(o.EnableAutomationGeneration) {
		return true
	}

	return false
}

// SetEnableAutomationGeneration gets a reference to the given bool and assigns it to the EnableAutomationGeneration field.
func (o *GetIdentity200ResponseOrg) SetEnableAutomationGeneration(v bool) {
	o.EnableAutomationGeneration = &v
}

// GetEmailTestMode returns the EmailTestMode field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetEmailTestMode() bool {
	if o == nil || isNil(o.EmailTestMode) {
		var ret bool
		return ret
	}
	return *o.EmailTestMode
}

// GetEmailTestModeOk returns a tuple with the EmailTestMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetEmailTestModeOk() (*bool, bool) {
	if o == nil || isNil(o.EmailTestMode) {
		return nil, false
	}
	return o.EmailTestMode, true
}

// HasEmailTestMode returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasEmailTestMode() bool {
	if o != nil && !isNil(o.EmailTestMode) {
		return true
	}

	return false
}

// SetEmailTestMode gets a reference to the given bool and assigns it to the EmailTestMode field.
func (o *GetIdentity200ResponseOrg) SetEmailTestMode(v bool) {
	o.EmailTestMode = &v
}

// GetEmailTestAddress returns the EmailTestAddress field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetEmailTestAddress() string {
	if o == nil || isNil(o.EmailTestAddress) {
		var ret string
		return ret
	}
	return *o.EmailTestAddress
}

// GetEmailTestAddressOk returns a tuple with the EmailTestAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetEmailTestAddressOk() (*string, bool) {
	if o == nil || isNil(o.EmailTestAddress) {
		return nil, false
	}
	return o.EmailTestAddress, true
}

// HasEmailTestAddress returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasEmailTestAddress() bool {
	if o != nil && !isNil(o.EmailTestAddress) {
		return true
	}

	return false
}

// SetEmailTestAddress gets a reference to the given string and assigns it to the EmailTestAddress field.
func (o *GetIdentity200ResponseOrg) SetEmailTestAddress(v string) {
	o.EmailTestAddress = &v
}

// GetOrgType returns the OrgType field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetOrgType() string {
	if o == nil || isNil(o.OrgType) {
		var ret string
		return ret
	}
	return *o.OrgType
}

// GetOrgTypeOk returns a tuple with the OrgType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetOrgTypeOk() (*string, bool) {
	if o == nil || isNil(o.OrgType) {
		return nil, false
	}
	return o.OrgType, true
}

// HasOrgType returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasOrgType() bool {
	if o != nil && !isNil(o.OrgType) {
		return true
	}

	return false
}

// SetOrgType gets a reference to the given string and assigns it to the OrgType field.
func (o *GetIdentity200ResponseOrg) SetOrgType(v string) {
	o.OrgType = &v
}

// GetPasswordReplayState returns the PasswordReplayState field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetPasswordReplayState() string {
	if o == nil || isNil(o.PasswordReplayState) {
		var ret string
		return ret
	}
	return *o.PasswordReplayState
}

// GetPasswordReplayStateOk returns a tuple with the PasswordReplayState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetPasswordReplayStateOk() (*string, bool) {
	if o == nil || isNil(o.PasswordReplayState) {
		return nil, false
	}
	return o.PasswordReplayState, true
}

// HasPasswordReplayState returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasPasswordReplayState() bool {
	if o != nil && !isNil(o.PasswordReplayState) {
		return true
	}

	return false
}

// SetPasswordReplayState gets a reference to the given string and assigns it to the PasswordReplayState field.
func (o *GetIdentity200ResponseOrg) SetPasswordReplayState(v string) {
	o.PasswordReplayState = &v
}

// GetSystemNotificationConfig returns the SystemNotificationConfig field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetSystemNotificationConfig() string {
	if o == nil || isNil(o.SystemNotificationConfig) {
		var ret string
		return ret
	}
	return *o.SystemNotificationConfig
}

// GetSystemNotificationConfigOk returns a tuple with the SystemNotificationConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetSystemNotificationConfigOk() (*string, bool) {
	if o == nil || isNil(o.SystemNotificationConfig) {
		return nil, false
	}
	return o.SystemNotificationConfig, true
}

// HasSystemNotificationConfig returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasSystemNotificationConfig() bool {
	if o != nil && !isNil(o.SystemNotificationConfig) {
		return true
	}

	return false
}

// SetSystemNotificationConfig gets a reference to the given string and assigns it to the SystemNotificationConfig field.
func (o *GetIdentity200ResponseOrg) SetSystemNotificationConfig(v string) {
	o.SystemNotificationConfig = &v
}

// GetRedirectPatterns returns the RedirectPatterns field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetRedirectPatterns() string {
	if o == nil || isNil(o.RedirectPatterns) {
		var ret string
		return ret
	}
	return *o.RedirectPatterns
}

// GetRedirectPatternsOk returns a tuple with the RedirectPatterns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetRedirectPatternsOk() (*string, bool) {
	if o == nil || isNil(o.RedirectPatterns) {
		return nil, false
	}
	return o.RedirectPatterns, true
}

// HasRedirectPatterns returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasRedirectPatterns() bool {
	if o != nil && !isNil(o.RedirectPatterns) {
		return true
	}

	return false
}

// SetRedirectPatterns gets a reference to the given string and assigns it to the RedirectPatterns field.
func (o *GetIdentity200ResponseOrg) SetRedirectPatterns(v string) {
	o.RedirectPatterns = &v
}

// GetMaxClusterDebugHours returns the MaxClusterDebugHours field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetMaxClusterDebugHours() string {
	if o == nil || isNil(o.MaxClusterDebugHours) {
		var ret string
		return ret
	}
	return *o.MaxClusterDebugHours
}

// GetMaxClusterDebugHoursOk returns a tuple with the MaxClusterDebugHours field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetMaxClusterDebugHoursOk() (*string, bool) {
	if o == nil || isNil(o.MaxClusterDebugHours) {
		return nil, false
	}
	return o.MaxClusterDebugHours, true
}

// HasMaxClusterDebugHours returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasMaxClusterDebugHours() bool {
	if o != nil && !isNil(o.MaxClusterDebugHours) {
		return true
	}

	return false
}

// SetMaxClusterDebugHours gets a reference to the given string and assigns it to the MaxClusterDebugHours field.
func (o *GetIdentity200ResponseOrg) SetMaxClusterDebugHours(v string) {
	o.MaxClusterDebugHours = &v
}

// GetBrandName returns the BrandName field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetBrandName() string {
	if o == nil || isNil(o.BrandName) {
		var ret string
		return ret
	}
	return *o.BrandName
}

// GetBrandNameOk returns a tuple with the BrandName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetBrandNameOk() (*string, bool) {
	if o == nil || isNil(o.BrandName) {
		return nil, false
	}
	return o.BrandName, true
}

// HasBrandName returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasBrandName() bool {
	if o != nil && !isNil(o.BrandName) {
		return true
	}

	return false
}

// SetBrandName gets a reference to the given string and assigns it to the BrandName field.
func (o *GetIdentity200ResponseOrg) SetBrandName(v string) {
	o.BrandName = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetLogo() map[string]interface{} {
	if o == nil || isNil(o.Logo) {
		var ret map[string]interface{}
		return ret
	}
	return o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetLogoOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Logo) {
		return map[string]interface{}{}, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasLogo() bool {
	if o != nil && !isNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given map[string]interface{} and assigns it to the Logo field.
func (o *GetIdentity200ResponseOrg) SetLogo(v map[string]interface{}) {
	o.Logo = v
}

// GetEmailFromAddress returns the EmailFromAddress field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetEmailFromAddress() map[string]interface{} {
	if o == nil || isNil(o.EmailFromAddress) {
		var ret map[string]interface{}
		return ret
	}
	return o.EmailFromAddress
}

// GetEmailFromAddressOk returns a tuple with the EmailFromAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetEmailFromAddressOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.EmailFromAddress) {
		return map[string]interface{}{}, false
	}
	return o.EmailFromAddress, true
}

// HasEmailFromAddress returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasEmailFromAddress() bool {
	if o != nil && !isNil(o.EmailFromAddress) {
		return true
	}

	return false
}

// SetEmailFromAddress gets a reference to the given map[string]interface{} and assigns it to the EmailFromAddress field.
func (o *GetIdentity200ResponseOrg) SetEmailFromAddress(v map[string]interface{}) {
	o.EmailFromAddress = v
}

// GetStandardLogoUrl returns the StandardLogoUrl field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetStandardLogoUrl() map[string]interface{} {
	if o == nil || isNil(o.StandardLogoUrl) {
		var ret map[string]interface{}
		return ret
	}
	return o.StandardLogoUrl
}

// GetStandardLogoUrlOk returns a tuple with the StandardLogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetStandardLogoUrlOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.StandardLogoUrl) {
		return map[string]interface{}{}, false
	}
	return o.StandardLogoUrl, true
}

// HasStandardLogoUrl returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasStandardLogoUrl() bool {
	if o != nil && !isNil(o.StandardLogoUrl) {
		return true
	}

	return false
}

// SetStandardLogoUrl gets a reference to the given map[string]interface{} and assigns it to the StandardLogoUrl field.
func (o *GetIdentity200ResponseOrg) SetStandardLogoUrl(v map[string]interface{}) {
	o.StandardLogoUrl = v
}

// GetNarrowLogoUrl returns the NarrowLogoUrl field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetNarrowLogoUrl() map[string]interface{} {
	if o == nil || isNil(o.NarrowLogoUrl) {
		var ret map[string]interface{}
		return ret
	}
	return o.NarrowLogoUrl
}

// GetNarrowLogoUrlOk returns a tuple with the NarrowLogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetNarrowLogoUrlOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.NarrowLogoUrl) {
		return map[string]interface{}{}, false
	}
	return o.NarrowLogoUrl, true
}

// HasNarrowLogoUrl returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasNarrowLogoUrl() bool {
	if o != nil && !isNil(o.NarrowLogoUrl) {
		return true
	}

	return false
}

// SetNarrowLogoUrl gets a reference to the given map[string]interface{} and assigns it to the NarrowLogoUrl field.
func (o *GetIdentity200ResponseOrg) SetNarrowLogoUrl(v map[string]interface{}) {
	o.NarrowLogoUrl = v
}

// GetActionButtonColor returns the ActionButtonColor field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetActionButtonColor() string {
	if o == nil || isNil(o.ActionButtonColor) {
		var ret string
		return ret
	}
	return *o.ActionButtonColor
}

// GetActionButtonColorOk returns a tuple with the ActionButtonColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetActionButtonColorOk() (*string, bool) {
	if o == nil || isNil(o.ActionButtonColor) {
		return nil, false
	}
	return o.ActionButtonColor, true
}

// HasActionButtonColor returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasActionButtonColor() bool {
	if o != nil && !isNil(o.ActionButtonColor) {
		return true
	}

	return false
}

// SetActionButtonColor gets a reference to the given string and assigns it to the ActionButtonColor field.
func (o *GetIdentity200ResponseOrg) SetActionButtonColor(v string) {
	o.ActionButtonColor = &v
}

// GetActiveLinkColor returns the ActiveLinkColor field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetActiveLinkColor() string {
	if o == nil || isNil(o.ActiveLinkColor) {
		var ret string
		return ret
	}
	return *o.ActiveLinkColor
}

// GetActiveLinkColorOk returns a tuple with the ActiveLinkColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetActiveLinkColorOk() (*string, bool) {
	if o == nil || isNil(o.ActiveLinkColor) {
		return nil, false
	}
	return o.ActiveLinkColor, true
}

// HasActiveLinkColor returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasActiveLinkColor() bool {
	if o != nil && !isNil(o.ActiveLinkColor) {
		return true
	}

	return false
}

// SetActiveLinkColor gets a reference to the given string and assigns it to the ActiveLinkColor field.
func (o *GetIdentity200ResponseOrg) SetActiveLinkColor(v string) {
	o.ActiveLinkColor = &v
}

// GetNavigationColor returns the NavigationColor field value if set, zero value otherwise.
func (o *GetIdentity200ResponseOrg) GetNavigationColor() string {
	if o == nil || isNil(o.NavigationColor) {
		var ret string
		return ret
	}
	return *o.NavigationColor
}

// GetNavigationColorOk returns a tuple with the NavigationColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200ResponseOrg) GetNavigationColorOk() (*string, bool) {
	if o == nil || isNil(o.NavigationColor) {
		return nil, false
	}
	return o.NavigationColor, true
}

// HasNavigationColor returns a boolean if a field has been set.
func (o *GetIdentity200ResponseOrg) HasNavigationColor() bool {
	if o != nil && !isNil(o.NavigationColor) {
		return true
	}

	return false
}

// SetNavigationColor gets a reference to the given string and assigns it to the NavigationColor field.
func (o *GetIdentity200ResponseOrg) SetNavigationColor(v string) {
	o.NavigationColor = &v
}

func (o GetIdentity200ResponseOrg) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIdentity200ResponseOrg) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.ScriptName) {
		toSerialize["scriptName"] = o.ScriptName
	}
	if !isNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !isNil(o.NumQuestions) {
		toSerialize["numQuestions"] = o.NumQuestions
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.MaxRegisteredUsers) {
		toSerialize["maxRegisteredUsers"] = o.MaxRegisteredUsers
	}
	if !isNil(o.Pod) {
		toSerialize["pod"] = o.Pod
	}
	if !isNil(o.PwdResetPersonalPhone) {
		toSerialize["pwdResetPersonalPhone"] = o.PwdResetPersonalPhone
	}
	if !isNil(o.PwdResetPersonalEmail) {
		toSerialize["pwdResetPersonalEmail"] = o.PwdResetPersonalEmail
	}
	if !isNil(o.PwdResetKba) {
		toSerialize["pwdResetKba"] = o.PwdResetKba
	}
	if !isNil(o.PwdResetEmail) {
		toSerialize["pwdResetEmail"] = o.PwdResetEmail
	}
	if !isNil(o.PwdResetDuo) {
		toSerialize["pwdResetDuo"] = o.PwdResetDuo
	}
	if !isNil(o.PwdResetPhoneMask) {
		toSerialize["pwdResetPhoneMask"] = o.PwdResetPhoneMask
	}
	if !isNil(o.AuthErrorText) {
		toSerialize["authErrorText"] = o.AuthErrorText
	}
	if !isNil(o.StrongAuthKba) {
		toSerialize["strongAuthKba"] = o.StrongAuthKba
	}
	if !isNil(o.StrongAuthPersonalPhone) {
		toSerialize["strongAuthPersonalPhone"] = o.StrongAuthPersonalPhone
	}
	if !isNil(o.StrongAuthPersonalEmail) {
		toSerialize["strongAuthPersonalEmail"] = o.StrongAuthPersonalEmail
	}
	if !isNil(o.Integrations) {
		toSerialize["integrations"] = o.Integrations
	}
	if !isNil(o.ProductName) {
		toSerialize["productName"] = o.ProductName
	}
	if !isNil(o.KbaReqForAuthn) {
		toSerialize["kbaReqForAuthn"] = o.KbaReqForAuthn
	}
	if !isNil(o.KbaReqAnswers) {
		toSerialize["kbaReqAnswers"] = o.KbaReqAnswers
	}
	if !isNil(o.LockoutAttemptThreshold) {
		toSerialize["lockoutAttemptThreshold"] = o.LockoutAttemptThreshold
	}
	if !isNil(o.LockoutTimeMinutes) {
		toSerialize["lockoutTimeMinutes"] = o.LockoutTimeMinutes
	}
	if !isNil(o.UsageCertRequired) {
		toSerialize["usageCertRequired"] = o.UsageCertRequired
	}
	if !isNil(o.AdminStrongAuthRequired) {
		toSerialize["adminStrongAuthRequired"] = o.AdminStrongAuthRequired
	}
	if !isNil(o.EnableExternalPasswordChange) {
		toSerialize["enableExternalPasswordChange"] = o.EnableExternalPasswordChange
	}
	if !isNil(o.EnablePasswordReplay) {
		toSerialize["enablePasswordReplay"] = o.EnablePasswordReplay
	}
	if !isNil(o.EnableAutomaticPasswordReplay) {
		toSerialize["enableAutomaticPasswordReplay"] = o.EnableAutomaticPasswordReplay
	}
	if !isNil(o.NotifyAuthenticationSettingChange) {
		toSerialize["notifyAuthenticationSettingChange"] = o.NotifyAuthenticationSettingChange
	}
	if !isNil(o.Netmasks) {
		toSerialize["netmasks"] = o.Netmasks
	}
	if !isNil(o.CountryCodes) {
		toSerialize["countryCodes"] = o.CountryCodes
	}
	if !isNil(o.WhiteList) {
		toSerialize["whiteList"] = o.WhiteList
	}
	if !isNil(o.UsernameEmptyText) {
		toSerialize["usernameEmptyText"] = o.UsernameEmptyText
	}
	if !isNil(o.UsernameLabel) {
		toSerialize["usernameLabel"] = o.UsernameLabel
	}
	if !isNil(o.EnableAutomationGeneration) {
		toSerialize["enableAutomationGeneration"] = o.EnableAutomationGeneration
	}
	if !isNil(o.EmailTestMode) {
		toSerialize["emailTestMode"] = o.EmailTestMode
	}
	if !isNil(o.EmailTestAddress) {
		toSerialize["emailTestAddress"] = o.EmailTestAddress
	}
	if !isNil(o.OrgType) {
		toSerialize["orgType"] = o.OrgType
	}
	if !isNil(o.PasswordReplayState) {
		toSerialize["passwordReplayState"] = o.PasswordReplayState
	}
	if !isNil(o.SystemNotificationConfig) {
		toSerialize["systemNotificationConfig"] = o.SystemNotificationConfig
	}
	if !isNil(o.RedirectPatterns) {
		toSerialize["redirectPatterns"] = o.RedirectPatterns
	}
	if !isNil(o.MaxClusterDebugHours) {
		toSerialize["maxClusterDebugHours"] = o.MaxClusterDebugHours
	}
	if !isNil(o.BrandName) {
		toSerialize["brandName"] = o.BrandName
	}
	if !isNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !isNil(o.EmailFromAddress) {
		toSerialize["emailFromAddress"] = o.EmailFromAddress
	}
	if !isNil(o.StandardLogoUrl) {
		toSerialize["standardLogoUrl"] = o.StandardLogoUrl
	}
	if !isNil(o.NarrowLogoUrl) {
		toSerialize["narrowLogoUrl"] = o.NarrowLogoUrl
	}
	if !isNil(o.ActionButtonColor) {
		toSerialize["actionButtonColor"] = o.ActionButtonColor
	}
	if !isNil(o.ActiveLinkColor) {
		toSerialize["activeLinkColor"] = o.ActiveLinkColor
	}
	if !isNil(o.NavigationColor) {
		toSerialize["navigationColor"] = o.NavigationColor
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetIdentity200ResponseOrg) UnmarshalJSON(bytes []byte) (err error) {
	varGetIdentity200ResponseOrg := _GetIdentity200ResponseOrg{}

	if err = json.Unmarshal(bytes, &varGetIdentity200ResponseOrg); err == nil {
	*o = GetIdentity200ResponseOrg(varGetIdentity200ResponseOrg)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "scriptName")
		delete(additionalProperties, "mode")
		delete(additionalProperties, "numQuestions")
		delete(additionalProperties, "status")
		delete(additionalProperties, "maxRegisteredUsers")
		delete(additionalProperties, "pod")
		delete(additionalProperties, "pwdResetPersonalPhone")
		delete(additionalProperties, "pwdResetPersonalEmail")
		delete(additionalProperties, "pwdResetKba")
		delete(additionalProperties, "pwdResetEmail")
		delete(additionalProperties, "pwdResetDuo")
		delete(additionalProperties, "pwdResetPhoneMask")
		delete(additionalProperties, "authErrorText")
		delete(additionalProperties, "strongAuthKba")
		delete(additionalProperties, "strongAuthPersonalPhone")
		delete(additionalProperties, "strongAuthPersonalEmail")
		delete(additionalProperties, "integrations")
		delete(additionalProperties, "productName")
		delete(additionalProperties, "kbaReqForAuthn")
		delete(additionalProperties, "kbaReqAnswers")
		delete(additionalProperties, "lockoutAttemptThreshold")
		delete(additionalProperties, "lockoutTimeMinutes")
		delete(additionalProperties, "usageCertRequired")
		delete(additionalProperties, "adminStrongAuthRequired")
		delete(additionalProperties, "enableExternalPasswordChange")
		delete(additionalProperties, "enablePasswordReplay")
		delete(additionalProperties, "enableAutomaticPasswordReplay")
		delete(additionalProperties, "notifyAuthenticationSettingChange")
		delete(additionalProperties, "netmasks")
		delete(additionalProperties, "countryCodes")
		delete(additionalProperties, "whiteList")
		delete(additionalProperties, "usernameEmptyText")
		delete(additionalProperties, "usernameLabel")
		delete(additionalProperties, "enableAutomationGeneration")
		delete(additionalProperties, "emailTestMode")
		delete(additionalProperties, "emailTestAddress")
		delete(additionalProperties, "orgType")
		delete(additionalProperties, "passwordReplayState")
		delete(additionalProperties, "systemNotificationConfig")
		delete(additionalProperties, "redirectPatterns")
		delete(additionalProperties, "maxClusterDebugHours")
		delete(additionalProperties, "brandName")
		delete(additionalProperties, "logo")
		delete(additionalProperties, "emailFromAddress")
		delete(additionalProperties, "standardLogoUrl")
		delete(additionalProperties, "narrowLogoUrl")
		delete(additionalProperties, "actionButtonColor")
		delete(additionalProperties, "activeLinkColor")
		delete(additionalProperties, "navigationColor")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetIdentity200ResponseOrg struct {
	value *GetIdentity200ResponseOrg
	isSet bool
}

func (v NullableGetIdentity200ResponseOrg) Get() *GetIdentity200ResponseOrg {
	return v.value
}

func (v *NullableGetIdentity200ResponseOrg) Set(val *GetIdentity200ResponseOrg) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIdentity200ResponseOrg) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIdentity200ResponseOrg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIdentity200ResponseOrg(val *GetIdentity200ResponseOrg) *NullableGetIdentity200ResponseOrg {
	return &NullableGetIdentity200ResponseOrg{value: val, isSet: true}
}

func (v NullableGetIdentity200ResponseOrg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIdentity200ResponseOrg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


