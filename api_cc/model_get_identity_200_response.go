/*
IdentityNow cc (private) APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_cc

import (
	"encoding/json"
)

// checks if the GetIdentity200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetIdentity200Response{}

// GetIdentity200Response struct for GetIdentity200Response
type GetIdentity200Response struct {
	Id *string `json:"id,omitempty"`
	Alias *string `json:"alias,omitempty"`
	Uid *string `json:"uid,omitempty"`
	Name *string `json:"name,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	EncryptionKey map[string]interface{} `json:"encryptionKey,omitempty"`
	EncryptionCheck map[string]interface{} `json:"encryptionCheck,omitempty"`
	Status *string `json:"status,omitempty"`
	Pending *bool `json:"pending,omitempty"`
	PasswordResetSinceLastLogin *bool `json:"passwordResetSinceLastLogin,omitempty"`
	UsageCertAttested map[string]interface{} `json:"usageCertAttested,omitempty"`
	UserFlags map[string]interface{} `json:"userFlags,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	AltAuthVia *string `json:"altAuthVia,omitempty"`
	AltAuthViaIntegrationData map[string]interface{} `json:"altAuthViaIntegrationData,omitempty"`
	KbaAnswers *float32 `json:"kbaAnswers,omitempty"`
	DisablePasswordReset *bool `json:"disablePasswordReset,omitempty"`
	PtaSourceId map[string]interface{} `json:"ptaSourceId,omitempty"`
	SupportsPasswordPush *bool `json:"supportsPasswordPush,omitempty"`
	Attributes map[string]interface{} `json:"attributes,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	Role []map[string]interface{} `json:"role,omitempty"`
	Phone map[string]interface{} `json:"phone,omitempty"`
	Email *string `json:"email,omitempty"`
	PersonalEmail map[string]interface{} `json:"personalEmail,omitempty"`
	EmployeeNumber map[string]interface{} `json:"employeeNumber,omitempty"`
	RiskScore *float32 `json:"riskScore,omitempty"`
	FeatureFlags map[string]interface{} `json:"featureFlags,omitempty"`
	Feature []string `json:"feature,omitempty"`
	OrgEncryptionKey *string `json:"orgEncryptionKey,omitempty"`
	OrgEncryptionKeyId *string `json:"orgEncryptionKeyId,omitempty"`
	Meta map[string]interface{} `json:"meta,omitempty"`
	Org *GetIdentity200ResponseOrg `json:"org,omitempty"`
	StepUpAuth *bool `json:"stepUpAuth,omitempty"`
	BxInstallPrompted *bool `json:"bxInstallPrompted,omitempty"`
	FederatedLogin *bool `json:"federatedLogin,omitempty"`
	Auth *GetIdentity200ResponseAuth `json:"auth,omitempty"`
	OnNetwork *bool `json:"onNetwork,omitempty"`
	OnTrustedGeo *bool `json:"onTrustedGeo,omitempty"`
	LoginUrl *string `json:"loginUrl,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetIdentity200Response GetIdentity200Response

// NewGetIdentity200Response instantiates a new GetIdentity200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIdentity200Response() *GetIdentity200Response {
	this := GetIdentity200Response{}
	return &this
}

// NewGetIdentity200ResponseWithDefaults instantiates a new GetIdentity200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIdentity200ResponseWithDefaults() *GetIdentity200Response {
	this := GetIdentity200Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetIdentity200Response) SetId(v string) {
	o.Id = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetAlias() string {
	if o == nil || isNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetAliasOk() (*string, bool) {
	if o == nil || isNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasAlias() bool {
	if o != nil && !isNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *GetIdentity200Response) SetAlias(v string) {
	o.Alias = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetUid() string {
	if o == nil || isNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetUidOk() (*string, bool) {
	if o == nil || isNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasUid() bool {
	if o != nil && !isNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *GetIdentity200Response) SetUid(v string) {
	o.Uid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetIdentity200Response) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *GetIdentity200Response) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetUuid() string {
	if o == nil || isNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetUuidOk() (*string, bool) {
	if o == nil || isNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasUuid() bool {
	if o != nil && !isNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *GetIdentity200Response) SetUuid(v string) {
	o.Uuid = &v
}

// GetEncryptionKey returns the EncryptionKey field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetEncryptionKey() map[string]interface{} {
	if o == nil || isNil(o.EncryptionKey) {
		var ret map[string]interface{}
		return ret
	}
	return o.EncryptionKey
}

// GetEncryptionKeyOk returns a tuple with the EncryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetEncryptionKeyOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.EncryptionKey) {
		return map[string]interface{}{}, false
	}
	return o.EncryptionKey, true
}

// HasEncryptionKey returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasEncryptionKey() bool {
	if o != nil && !isNil(o.EncryptionKey) {
		return true
	}

	return false
}

// SetEncryptionKey gets a reference to the given map[string]interface{} and assigns it to the EncryptionKey field.
func (o *GetIdentity200Response) SetEncryptionKey(v map[string]interface{}) {
	o.EncryptionKey = v
}

// GetEncryptionCheck returns the EncryptionCheck field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetEncryptionCheck() map[string]interface{} {
	if o == nil || isNil(o.EncryptionCheck) {
		var ret map[string]interface{}
		return ret
	}
	return o.EncryptionCheck
}

// GetEncryptionCheckOk returns a tuple with the EncryptionCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetEncryptionCheckOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.EncryptionCheck) {
		return map[string]interface{}{}, false
	}
	return o.EncryptionCheck, true
}

// HasEncryptionCheck returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasEncryptionCheck() bool {
	if o != nil && !isNil(o.EncryptionCheck) {
		return true
	}

	return false
}

// SetEncryptionCheck gets a reference to the given map[string]interface{} and assigns it to the EncryptionCheck field.
func (o *GetIdentity200Response) SetEncryptionCheck(v map[string]interface{}) {
	o.EncryptionCheck = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetIdentity200Response) SetStatus(v string) {
	o.Status = &v
}

// GetPending returns the Pending field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetPending() bool {
	if o == nil || isNil(o.Pending) {
		var ret bool
		return ret
	}
	return *o.Pending
}

// GetPendingOk returns a tuple with the Pending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetPendingOk() (*bool, bool) {
	if o == nil || isNil(o.Pending) {
		return nil, false
	}
	return o.Pending, true
}

// HasPending returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasPending() bool {
	if o != nil && !isNil(o.Pending) {
		return true
	}

	return false
}

// SetPending gets a reference to the given bool and assigns it to the Pending field.
func (o *GetIdentity200Response) SetPending(v bool) {
	o.Pending = &v
}

// GetPasswordResetSinceLastLogin returns the PasswordResetSinceLastLogin field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetPasswordResetSinceLastLogin() bool {
	if o == nil || isNil(o.PasswordResetSinceLastLogin) {
		var ret bool
		return ret
	}
	return *o.PasswordResetSinceLastLogin
}

// GetPasswordResetSinceLastLoginOk returns a tuple with the PasswordResetSinceLastLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetPasswordResetSinceLastLoginOk() (*bool, bool) {
	if o == nil || isNil(o.PasswordResetSinceLastLogin) {
		return nil, false
	}
	return o.PasswordResetSinceLastLogin, true
}

// HasPasswordResetSinceLastLogin returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasPasswordResetSinceLastLogin() bool {
	if o != nil && !isNil(o.PasswordResetSinceLastLogin) {
		return true
	}

	return false
}

// SetPasswordResetSinceLastLogin gets a reference to the given bool and assigns it to the PasswordResetSinceLastLogin field.
func (o *GetIdentity200Response) SetPasswordResetSinceLastLogin(v bool) {
	o.PasswordResetSinceLastLogin = &v
}

// GetUsageCertAttested returns the UsageCertAttested field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetUsageCertAttested() map[string]interface{} {
	if o == nil || isNil(o.UsageCertAttested) {
		var ret map[string]interface{}
		return ret
	}
	return o.UsageCertAttested
}

// GetUsageCertAttestedOk returns a tuple with the UsageCertAttested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetUsageCertAttestedOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.UsageCertAttested) {
		return map[string]interface{}{}, false
	}
	return o.UsageCertAttested, true
}

// HasUsageCertAttested returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasUsageCertAttested() bool {
	if o != nil && !isNil(o.UsageCertAttested) {
		return true
	}

	return false
}

// SetUsageCertAttested gets a reference to the given map[string]interface{} and assigns it to the UsageCertAttested field.
func (o *GetIdentity200Response) SetUsageCertAttested(v map[string]interface{}) {
	o.UsageCertAttested = v
}

// GetUserFlags returns the UserFlags field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetUserFlags() map[string]interface{} {
	if o == nil || isNil(o.UserFlags) {
		var ret map[string]interface{}
		return ret
	}
	return o.UserFlags
}

// GetUserFlagsOk returns a tuple with the UserFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetUserFlagsOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.UserFlags) {
		return map[string]interface{}{}, false
	}
	return o.UserFlags, true
}

// HasUserFlags returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasUserFlags() bool {
	if o != nil && !isNil(o.UserFlags) {
		return true
	}

	return false
}

// SetUserFlags gets a reference to the given map[string]interface{} and assigns it to the UserFlags field.
func (o *GetIdentity200Response) SetUserFlags(v map[string]interface{}) {
	o.UserFlags = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetIdentity200Response) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAltAuthVia returns the AltAuthVia field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetAltAuthVia() string {
	if o == nil || isNil(o.AltAuthVia) {
		var ret string
		return ret
	}
	return *o.AltAuthVia
}

// GetAltAuthViaOk returns a tuple with the AltAuthVia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetAltAuthViaOk() (*string, bool) {
	if o == nil || isNil(o.AltAuthVia) {
		return nil, false
	}
	return o.AltAuthVia, true
}

// HasAltAuthVia returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasAltAuthVia() bool {
	if o != nil && !isNil(o.AltAuthVia) {
		return true
	}

	return false
}

// SetAltAuthVia gets a reference to the given string and assigns it to the AltAuthVia field.
func (o *GetIdentity200Response) SetAltAuthVia(v string) {
	o.AltAuthVia = &v
}

// GetAltAuthViaIntegrationData returns the AltAuthViaIntegrationData field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetAltAuthViaIntegrationData() map[string]interface{} {
	if o == nil || isNil(o.AltAuthViaIntegrationData) {
		var ret map[string]interface{}
		return ret
	}
	return o.AltAuthViaIntegrationData
}

// GetAltAuthViaIntegrationDataOk returns a tuple with the AltAuthViaIntegrationData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetAltAuthViaIntegrationDataOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.AltAuthViaIntegrationData) {
		return map[string]interface{}{}, false
	}
	return o.AltAuthViaIntegrationData, true
}

// HasAltAuthViaIntegrationData returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasAltAuthViaIntegrationData() bool {
	if o != nil && !isNil(o.AltAuthViaIntegrationData) {
		return true
	}

	return false
}

// SetAltAuthViaIntegrationData gets a reference to the given map[string]interface{} and assigns it to the AltAuthViaIntegrationData field.
func (o *GetIdentity200Response) SetAltAuthViaIntegrationData(v map[string]interface{}) {
	o.AltAuthViaIntegrationData = v
}

// GetKbaAnswers returns the KbaAnswers field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetKbaAnswers() float32 {
	if o == nil || isNil(o.KbaAnswers) {
		var ret float32
		return ret
	}
	return *o.KbaAnswers
}

// GetKbaAnswersOk returns a tuple with the KbaAnswers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetKbaAnswersOk() (*float32, bool) {
	if o == nil || isNil(o.KbaAnswers) {
		return nil, false
	}
	return o.KbaAnswers, true
}

// HasKbaAnswers returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasKbaAnswers() bool {
	if o != nil && !isNil(o.KbaAnswers) {
		return true
	}

	return false
}

// SetKbaAnswers gets a reference to the given float32 and assigns it to the KbaAnswers field.
func (o *GetIdentity200Response) SetKbaAnswers(v float32) {
	o.KbaAnswers = &v
}

// GetDisablePasswordReset returns the DisablePasswordReset field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetDisablePasswordReset() bool {
	if o == nil || isNil(o.DisablePasswordReset) {
		var ret bool
		return ret
	}
	return *o.DisablePasswordReset
}

// GetDisablePasswordResetOk returns a tuple with the DisablePasswordReset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetDisablePasswordResetOk() (*bool, bool) {
	if o == nil || isNil(o.DisablePasswordReset) {
		return nil, false
	}
	return o.DisablePasswordReset, true
}

// HasDisablePasswordReset returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasDisablePasswordReset() bool {
	if o != nil && !isNil(o.DisablePasswordReset) {
		return true
	}

	return false
}

// SetDisablePasswordReset gets a reference to the given bool and assigns it to the DisablePasswordReset field.
func (o *GetIdentity200Response) SetDisablePasswordReset(v bool) {
	o.DisablePasswordReset = &v
}

// GetPtaSourceId returns the PtaSourceId field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetPtaSourceId() map[string]interface{} {
	if o == nil || isNil(o.PtaSourceId) {
		var ret map[string]interface{}
		return ret
	}
	return o.PtaSourceId
}

// GetPtaSourceIdOk returns a tuple with the PtaSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetPtaSourceIdOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.PtaSourceId) {
		return map[string]interface{}{}, false
	}
	return o.PtaSourceId, true
}

// HasPtaSourceId returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasPtaSourceId() bool {
	if o != nil && !isNil(o.PtaSourceId) {
		return true
	}

	return false
}

// SetPtaSourceId gets a reference to the given map[string]interface{} and assigns it to the PtaSourceId field.
func (o *GetIdentity200Response) SetPtaSourceId(v map[string]interface{}) {
	o.PtaSourceId = v
}

// GetSupportsPasswordPush returns the SupportsPasswordPush field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetSupportsPasswordPush() bool {
	if o == nil || isNil(o.SupportsPasswordPush) {
		var ret bool
		return ret
	}
	return *o.SupportsPasswordPush
}

// GetSupportsPasswordPushOk returns a tuple with the SupportsPasswordPush field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetSupportsPasswordPushOk() (*bool, bool) {
	if o == nil || isNil(o.SupportsPasswordPush) {
		return nil, false
	}
	return o.SupportsPasswordPush, true
}

// HasSupportsPasswordPush returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasSupportsPasswordPush() bool {
	if o != nil && !isNil(o.SupportsPasswordPush) {
		return true
	}

	return false
}

// SetSupportsPasswordPush gets a reference to the given bool and assigns it to the SupportsPasswordPush field.
func (o *GetIdentity200Response) SetSupportsPasswordPush(v bool) {
	o.SupportsPasswordPush = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetAttributes() map[string]interface{} {
	if o == nil || isNil(o.Attributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Attributes) {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasAttributes() bool {
	if o != nil && !isNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *GetIdentity200Response) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetExternalId() string {
	if o == nil || isNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetExternalIdOk() (*string, bool) {
	if o == nil || isNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasExternalId() bool {
	if o != nil && !isNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *GetIdentity200Response) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetRole() []map[string]interface{} {
	if o == nil || isNil(o.Role) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetRoleOk() ([]map[string]interface{}, bool) {
	if o == nil || isNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasRole() bool {
	if o != nil && !isNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given []map[string]interface{} and assigns it to the Role field.
func (o *GetIdentity200Response) SetRole(v []map[string]interface{}) {
	o.Role = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetPhone() map[string]interface{} {
	if o == nil || isNil(o.Phone) {
		var ret map[string]interface{}
		return ret
	}
	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetPhoneOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Phone) {
		return map[string]interface{}{}, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasPhone() bool {
	if o != nil && !isNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given map[string]interface{} and assigns it to the Phone field.
func (o *GetIdentity200Response) SetPhone(v map[string]interface{}) {
	o.Phone = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetEmail() string {
	if o == nil || isNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetEmailOk() (*string, bool) {
	if o == nil || isNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GetIdentity200Response) SetEmail(v string) {
	o.Email = &v
}

// GetPersonalEmail returns the PersonalEmail field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetPersonalEmail() map[string]interface{} {
	if o == nil || isNil(o.PersonalEmail) {
		var ret map[string]interface{}
		return ret
	}
	return o.PersonalEmail
}

// GetPersonalEmailOk returns a tuple with the PersonalEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetPersonalEmailOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.PersonalEmail) {
		return map[string]interface{}{}, false
	}
	return o.PersonalEmail, true
}

// HasPersonalEmail returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasPersonalEmail() bool {
	if o != nil && !isNil(o.PersonalEmail) {
		return true
	}

	return false
}

// SetPersonalEmail gets a reference to the given map[string]interface{} and assigns it to the PersonalEmail field.
func (o *GetIdentity200Response) SetPersonalEmail(v map[string]interface{}) {
	o.PersonalEmail = v
}

// GetEmployeeNumber returns the EmployeeNumber field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetEmployeeNumber() map[string]interface{} {
	if o == nil || isNil(o.EmployeeNumber) {
		var ret map[string]interface{}
		return ret
	}
	return o.EmployeeNumber
}

// GetEmployeeNumberOk returns a tuple with the EmployeeNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetEmployeeNumberOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.EmployeeNumber) {
		return map[string]interface{}{}, false
	}
	return o.EmployeeNumber, true
}

// HasEmployeeNumber returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasEmployeeNumber() bool {
	if o != nil && !isNil(o.EmployeeNumber) {
		return true
	}

	return false
}

// SetEmployeeNumber gets a reference to the given map[string]interface{} and assigns it to the EmployeeNumber field.
func (o *GetIdentity200Response) SetEmployeeNumber(v map[string]interface{}) {
	o.EmployeeNumber = v
}

// GetRiskScore returns the RiskScore field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetRiskScore() float32 {
	if o == nil || isNil(o.RiskScore) {
		var ret float32
		return ret
	}
	return *o.RiskScore
}

// GetRiskScoreOk returns a tuple with the RiskScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetRiskScoreOk() (*float32, bool) {
	if o == nil || isNil(o.RiskScore) {
		return nil, false
	}
	return o.RiskScore, true
}

// HasRiskScore returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasRiskScore() bool {
	if o != nil && !isNil(o.RiskScore) {
		return true
	}

	return false
}

// SetRiskScore gets a reference to the given float32 and assigns it to the RiskScore field.
func (o *GetIdentity200Response) SetRiskScore(v float32) {
	o.RiskScore = &v
}

// GetFeatureFlags returns the FeatureFlags field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetFeatureFlags() map[string]interface{} {
	if o == nil || isNil(o.FeatureFlags) {
		var ret map[string]interface{}
		return ret
	}
	return o.FeatureFlags
}

// GetFeatureFlagsOk returns a tuple with the FeatureFlags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetFeatureFlagsOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.FeatureFlags) {
		return map[string]interface{}{}, false
	}
	return o.FeatureFlags, true
}

// HasFeatureFlags returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasFeatureFlags() bool {
	if o != nil && !isNil(o.FeatureFlags) {
		return true
	}

	return false
}

// SetFeatureFlags gets a reference to the given map[string]interface{} and assigns it to the FeatureFlags field.
func (o *GetIdentity200Response) SetFeatureFlags(v map[string]interface{}) {
	o.FeatureFlags = v
}

// GetFeature returns the Feature field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetFeature() []string {
	if o == nil || isNil(o.Feature) {
		var ret []string
		return ret
	}
	return o.Feature
}

// GetFeatureOk returns a tuple with the Feature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetFeatureOk() ([]string, bool) {
	if o == nil || isNil(o.Feature) {
		return nil, false
	}
	return o.Feature, true
}

// HasFeature returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasFeature() bool {
	if o != nil && !isNil(o.Feature) {
		return true
	}

	return false
}

// SetFeature gets a reference to the given []string and assigns it to the Feature field.
func (o *GetIdentity200Response) SetFeature(v []string) {
	o.Feature = v
}

// GetOrgEncryptionKey returns the OrgEncryptionKey field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetOrgEncryptionKey() string {
	if o == nil || isNil(o.OrgEncryptionKey) {
		var ret string
		return ret
	}
	return *o.OrgEncryptionKey
}

// GetOrgEncryptionKeyOk returns a tuple with the OrgEncryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetOrgEncryptionKeyOk() (*string, bool) {
	if o == nil || isNil(o.OrgEncryptionKey) {
		return nil, false
	}
	return o.OrgEncryptionKey, true
}

// HasOrgEncryptionKey returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasOrgEncryptionKey() bool {
	if o != nil && !isNil(o.OrgEncryptionKey) {
		return true
	}

	return false
}

// SetOrgEncryptionKey gets a reference to the given string and assigns it to the OrgEncryptionKey field.
func (o *GetIdentity200Response) SetOrgEncryptionKey(v string) {
	o.OrgEncryptionKey = &v
}

// GetOrgEncryptionKeyId returns the OrgEncryptionKeyId field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetOrgEncryptionKeyId() string {
	if o == nil || isNil(o.OrgEncryptionKeyId) {
		var ret string
		return ret
	}
	return *o.OrgEncryptionKeyId
}

// GetOrgEncryptionKeyIdOk returns a tuple with the OrgEncryptionKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetOrgEncryptionKeyIdOk() (*string, bool) {
	if o == nil || isNil(o.OrgEncryptionKeyId) {
		return nil, false
	}
	return o.OrgEncryptionKeyId, true
}

// HasOrgEncryptionKeyId returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasOrgEncryptionKeyId() bool {
	if o != nil && !isNil(o.OrgEncryptionKeyId) {
		return true
	}

	return false
}

// SetOrgEncryptionKeyId gets a reference to the given string and assigns it to the OrgEncryptionKeyId field.
func (o *GetIdentity200Response) SetOrgEncryptionKeyId(v string) {
	o.OrgEncryptionKeyId = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetMeta() map[string]interface{} {
	if o == nil || isNil(o.Meta) {
		var ret map[string]interface{}
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetMetaOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Meta) {
		return map[string]interface{}{}, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given map[string]interface{} and assigns it to the Meta field.
func (o *GetIdentity200Response) SetMeta(v map[string]interface{}) {
	o.Meta = v
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetOrg() GetIdentity200ResponseOrg {
	if o == nil || isNil(o.Org) {
		var ret GetIdentity200ResponseOrg
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetOrgOk() (*GetIdentity200ResponseOrg, bool) {
	if o == nil || isNil(o.Org) {
		return nil, false
	}
	return o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasOrg() bool {
	if o != nil && !isNil(o.Org) {
		return true
	}

	return false
}

// SetOrg gets a reference to the given GetIdentity200ResponseOrg and assigns it to the Org field.
func (o *GetIdentity200Response) SetOrg(v GetIdentity200ResponseOrg) {
	o.Org = &v
}

// GetStepUpAuth returns the StepUpAuth field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetStepUpAuth() bool {
	if o == nil || isNil(o.StepUpAuth) {
		var ret bool
		return ret
	}
	return *o.StepUpAuth
}

// GetStepUpAuthOk returns a tuple with the StepUpAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetStepUpAuthOk() (*bool, bool) {
	if o == nil || isNil(o.StepUpAuth) {
		return nil, false
	}
	return o.StepUpAuth, true
}

// HasStepUpAuth returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasStepUpAuth() bool {
	if o != nil && !isNil(o.StepUpAuth) {
		return true
	}

	return false
}

// SetStepUpAuth gets a reference to the given bool and assigns it to the StepUpAuth field.
func (o *GetIdentity200Response) SetStepUpAuth(v bool) {
	o.StepUpAuth = &v
}

// GetBxInstallPrompted returns the BxInstallPrompted field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetBxInstallPrompted() bool {
	if o == nil || isNil(o.BxInstallPrompted) {
		var ret bool
		return ret
	}
	return *o.BxInstallPrompted
}

// GetBxInstallPromptedOk returns a tuple with the BxInstallPrompted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetBxInstallPromptedOk() (*bool, bool) {
	if o == nil || isNil(o.BxInstallPrompted) {
		return nil, false
	}
	return o.BxInstallPrompted, true
}

// HasBxInstallPrompted returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasBxInstallPrompted() bool {
	if o != nil && !isNil(o.BxInstallPrompted) {
		return true
	}

	return false
}

// SetBxInstallPrompted gets a reference to the given bool and assigns it to the BxInstallPrompted field.
func (o *GetIdentity200Response) SetBxInstallPrompted(v bool) {
	o.BxInstallPrompted = &v
}

// GetFederatedLogin returns the FederatedLogin field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetFederatedLogin() bool {
	if o == nil || isNil(o.FederatedLogin) {
		var ret bool
		return ret
	}
	return *o.FederatedLogin
}

// GetFederatedLoginOk returns a tuple with the FederatedLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetFederatedLoginOk() (*bool, bool) {
	if o == nil || isNil(o.FederatedLogin) {
		return nil, false
	}
	return o.FederatedLogin, true
}

// HasFederatedLogin returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasFederatedLogin() bool {
	if o != nil && !isNil(o.FederatedLogin) {
		return true
	}

	return false
}

// SetFederatedLogin gets a reference to the given bool and assigns it to the FederatedLogin field.
func (o *GetIdentity200Response) SetFederatedLogin(v bool) {
	o.FederatedLogin = &v
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetAuth() GetIdentity200ResponseAuth {
	if o == nil || isNil(o.Auth) {
		var ret GetIdentity200ResponseAuth
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetAuthOk() (*GetIdentity200ResponseAuth, bool) {
	if o == nil || isNil(o.Auth) {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasAuth() bool {
	if o != nil && !isNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given GetIdentity200ResponseAuth and assigns it to the Auth field.
func (o *GetIdentity200Response) SetAuth(v GetIdentity200ResponseAuth) {
	o.Auth = &v
}

// GetOnNetwork returns the OnNetwork field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetOnNetwork() bool {
	if o == nil || isNil(o.OnNetwork) {
		var ret bool
		return ret
	}
	return *o.OnNetwork
}

// GetOnNetworkOk returns a tuple with the OnNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetOnNetworkOk() (*bool, bool) {
	if o == nil || isNil(o.OnNetwork) {
		return nil, false
	}
	return o.OnNetwork, true
}

// HasOnNetwork returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasOnNetwork() bool {
	if o != nil && !isNil(o.OnNetwork) {
		return true
	}

	return false
}

// SetOnNetwork gets a reference to the given bool and assigns it to the OnNetwork field.
func (o *GetIdentity200Response) SetOnNetwork(v bool) {
	o.OnNetwork = &v
}

// GetOnTrustedGeo returns the OnTrustedGeo field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetOnTrustedGeo() bool {
	if o == nil || isNil(o.OnTrustedGeo) {
		var ret bool
		return ret
	}
	return *o.OnTrustedGeo
}

// GetOnTrustedGeoOk returns a tuple with the OnTrustedGeo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetOnTrustedGeoOk() (*bool, bool) {
	if o == nil || isNil(o.OnTrustedGeo) {
		return nil, false
	}
	return o.OnTrustedGeo, true
}

// HasOnTrustedGeo returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasOnTrustedGeo() bool {
	if o != nil && !isNil(o.OnTrustedGeo) {
		return true
	}

	return false
}

// SetOnTrustedGeo gets a reference to the given bool and assigns it to the OnTrustedGeo field.
func (o *GetIdentity200Response) SetOnTrustedGeo(v bool) {
	o.OnTrustedGeo = &v
}

// GetLoginUrl returns the LoginUrl field value if set, zero value otherwise.
func (o *GetIdentity200Response) GetLoginUrl() string {
	if o == nil || isNil(o.LoginUrl) {
		var ret string
		return ret
	}
	return *o.LoginUrl
}

// GetLoginUrlOk returns a tuple with the LoginUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdentity200Response) GetLoginUrlOk() (*string, bool) {
	if o == nil || isNil(o.LoginUrl) {
		return nil, false
	}
	return o.LoginUrl, true
}

// HasLoginUrl returns a boolean if a field has been set.
func (o *GetIdentity200Response) HasLoginUrl() bool {
	if o != nil && !isNil(o.LoginUrl) {
		return true
	}

	return false
}

// SetLoginUrl gets a reference to the given string and assigns it to the LoginUrl field.
func (o *GetIdentity200Response) SetLoginUrl(v string) {
	o.LoginUrl = &v
}

func (o GetIdentity200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetIdentity200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !isNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !isNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !isNil(o.EncryptionKey) {
		toSerialize["encryptionKey"] = o.EncryptionKey
	}
	if !isNil(o.EncryptionCheck) {
		toSerialize["encryptionCheck"] = o.EncryptionCheck
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Pending) {
		toSerialize["pending"] = o.Pending
	}
	if !isNil(o.PasswordResetSinceLastLogin) {
		toSerialize["passwordResetSinceLastLogin"] = o.PasswordResetSinceLastLogin
	}
	if !isNil(o.UsageCertAttested) {
		toSerialize["usageCertAttested"] = o.UsageCertAttested
	}
	if !isNil(o.UserFlags) {
		toSerialize["userFlags"] = o.UserFlags
	}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.AltAuthVia) {
		toSerialize["altAuthVia"] = o.AltAuthVia
	}
	if !isNil(o.AltAuthViaIntegrationData) {
		toSerialize["altAuthViaIntegrationData"] = o.AltAuthViaIntegrationData
	}
	if !isNil(o.KbaAnswers) {
		toSerialize["kbaAnswers"] = o.KbaAnswers
	}
	if !isNil(o.DisablePasswordReset) {
		toSerialize["disablePasswordReset"] = o.DisablePasswordReset
	}
	if !isNil(o.PtaSourceId) {
		toSerialize["ptaSourceId"] = o.PtaSourceId
	}
	if !isNil(o.SupportsPasswordPush) {
		toSerialize["supportsPasswordPush"] = o.SupportsPasswordPush
	}
	if !isNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !isNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !isNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !isNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.PersonalEmail) {
		toSerialize["personalEmail"] = o.PersonalEmail
	}
	if !isNil(o.EmployeeNumber) {
		toSerialize["employeeNumber"] = o.EmployeeNumber
	}
	if !isNil(o.RiskScore) {
		toSerialize["riskScore"] = o.RiskScore
	}
	if !isNil(o.FeatureFlags) {
		toSerialize["featureFlags"] = o.FeatureFlags
	}
	if !isNil(o.Feature) {
		toSerialize["feature"] = o.Feature
	}
	if !isNil(o.OrgEncryptionKey) {
		toSerialize["orgEncryptionKey"] = o.OrgEncryptionKey
	}
	if !isNil(o.OrgEncryptionKeyId) {
		toSerialize["orgEncryptionKeyId"] = o.OrgEncryptionKeyId
	}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !isNil(o.Org) {
		toSerialize["org"] = o.Org
	}
	if !isNil(o.StepUpAuth) {
		toSerialize["stepUpAuth"] = o.StepUpAuth
	}
	if !isNil(o.BxInstallPrompted) {
		toSerialize["bxInstallPrompted"] = o.BxInstallPrompted
	}
	if !isNil(o.FederatedLogin) {
		toSerialize["federatedLogin"] = o.FederatedLogin
	}
	if !isNil(o.Auth) {
		toSerialize["auth"] = o.Auth
	}
	if !isNil(o.OnNetwork) {
		toSerialize["onNetwork"] = o.OnNetwork
	}
	if !isNil(o.OnTrustedGeo) {
		toSerialize["onTrustedGeo"] = o.OnTrustedGeo
	}
	if !isNil(o.LoginUrl) {
		toSerialize["loginUrl"] = o.LoginUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetIdentity200Response) UnmarshalJSON(bytes []byte) (err error) {
	varGetIdentity200Response := _GetIdentity200Response{}

	if err = json.Unmarshal(bytes, &varGetIdentity200Response); err == nil {
	*o = GetIdentity200Response(varGetIdentity200Response)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "alias")
		delete(additionalProperties, "uid")
		delete(additionalProperties, "name")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "uuid")
		delete(additionalProperties, "encryptionKey")
		delete(additionalProperties, "encryptionCheck")
		delete(additionalProperties, "status")
		delete(additionalProperties, "pending")
		delete(additionalProperties, "passwordResetSinceLastLogin")
		delete(additionalProperties, "usageCertAttested")
		delete(additionalProperties, "userFlags")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "altAuthVia")
		delete(additionalProperties, "altAuthViaIntegrationData")
		delete(additionalProperties, "kbaAnswers")
		delete(additionalProperties, "disablePasswordReset")
		delete(additionalProperties, "ptaSourceId")
		delete(additionalProperties, "supportsPasswordPush")
		delete(additionalProperties, "attributes")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "role")
		delete(additionalProperties, "phone")
		delete(additionalProperties, "email")
		delete(additionalProperties, "personalEmail")
		delete(additionalProperties, "employeeNumber")
		delete(additionalProperties, "riskScore")
		delete(additionalProperties, "featureFlags")
		delete(additionalProperties, "feature")
		delete(additionalProperties, "orgEncryptionKey")
		delete(additionalProperties, "orgEncryptionKeyId")
		delete(additionalProperties, "meta")
		delete(additionalProperties, "org")
		delete(additionalProperties, "stepUpAuth")
		delete(additionalProperties, "bxInstallPrompted")
		delete(additionalProperties, "federatedLogin")
		delete(additionalProperties, "auth")
		delete(additionalProperties, "onNetwork")
		delete(additionalProperties, "onTrustedGeo")
		delete(additionalProperties, "loginUrl")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetIdentity200Response struct {
	value *GetIdentity200Response
	isSet bool
}

func (v NullableGetIdentity200Response) Get() *GetIdentity200Response {
	return v.value
}

func (v *NullableGetIdentity200Response) Set(val *GetIdentity200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIdentity200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIdentity200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIdentity200Response(val *GetIdentity200Response) *NullableGetIdentity200Response {
	return &NullableGetIdentity200Response{value: val, isSet: true}
}

func (v NullableGetIdentity200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIdentity200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


