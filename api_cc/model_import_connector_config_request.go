/*
IdentityNow cc (private) APIs

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_cc

import (
	"encoding/json"
	"os"
)

// checks if the ImportConnectorConfigRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportConnectorConfigRequest{}

// ImportConnectorConfigRequest struct for ImportConnectorConfigRequest
type ImportConnectorConfigRequest struct {
	// This is the connector config zip bundle which gets uploaded.
	File **os.File `json:"file,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ImportConnectorConfigRequest ImportConnectorConfigRequest

// NewImportConnectorConfigRequest instantiates a new ImportConnectorConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportConnectorConfigRequest() *ImportConnectorConfigRequest {
	this := ImportConnectorConfigRequest{}
	return &this
}

// NewImportConnectorConfigRequestWithDefaults instantiates a new ImportConnectorConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportConnectorConfigRequestWithDefaults() *ImportConnectorConfigRequest {
	this := ImportConnectorConfigRequest{}
	return &this
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *ImportConnectorConfigRequest) GetFile() *os.File {
	if o == nil || isNil(o.File) {
		var ret *os.File
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportConnectorConfigRequest) GetFileOk() (**os.File, bool) {
	if o == nil || isNil(o.File) {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *ImportConnectorConfigRequest) HasFile() bool {
	if o != nil && !isNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given *os.File and assigns it to the File field.
func (o *ImportConnectorConfigRequest) SetFile(v *os.File) {
	o.File = &v
}

func (o ImportConnectorConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportConnectorConfigRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.File) {
		toSerialize["file"] = o.File
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ImportConnectorConfigRequest) UnmarshalJSON(bytes []byte) (err error) {
	varImportConnectorConfigRequest := _ImportConnectorConfigRequest{}

	if err = json.Unmarshal(bytes, &varImportConnectorConfigRequest); err == nil {
	*o = ImportConnectorConfigRequest(varImportConnectorConfigRequest)
}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "file")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableImportConnectorConfigRequest struct {
	value *ImportConnectorConfigRequest
	isSet bool
}

func (v NullableImportConnectorConfigRequest) Get() *ImportConnectorConfigRequest {
	return v.value
}

func (v *NullableImportConnectorConfigRequest) Set(val *ImportConnectorConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableImportConnectorConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableImportConnectorConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportConnectorConfigRequest(val *ImportConnectorConfigRequest) *NullableImportConnectorConfigRequest {
	return &NullableImportConnectorConfigRequest{value: val, isSet: true}
}

func (v NullableImportConnectorConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportConnectorConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


